<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="guestadd-2d">
  <title>Hardware 2D Video Acceleration for Windows Guests</title>
  
  <body>
    <p>
        The <ph conkeyref="vbox-conkeyref-phrases/product-name"/> Guest Additions contain experimental hardware
        2D video acceleration support for Windows guests.
      </p>
    <p>
        With this feature, if an application such as a video player
        inside your Windows VM uses 2D video overlays to play a movie
        clip, then <ph conkeyref="vbox-conkeyref-phrases/product-name"/> will attempt to use your host's video
        acceleration hardware instead of performing overlay stretching
        and color conversion in software, which would be slow. This
        currently works for Windows, Linux and macOS host platforms,
        provided that your host operating system can make use of 2D
        video acceleration in the first place.
      </p>
    <p>
        Hardware 2D video acceleration currently has the following
        preconditions:
      </p>
    <ul>
      <li>
        <p>
            Only available for Windows guests, running Windows XP or
            later.
          </p>
      </li>
      <li>
        <p>
            Guest Additions must be installed.
          </p>
      </li>
      <li>
        <p>
            Because 2D support is still experimental at this time, it is
            disabled by default and must be <i>manually
            enabled</i> in the VM settings. See
            <xref href="settings-display.dita#settings-display"/>.
          </p>
      </li>
    </ul>
    <p>
        Technically, <ph conkeyref="vbox-conkeyref-phrases/product-name"/> implements this by exposing video
        overlay DirectDraw capabilities in the Guest Additions video
        driver. The driver sends all overlay commands to the host
        through a special communication tunnel implemented by
        <ph conkeyref="vbox-conkeyref-phrases/product-name"/>. On the host side, OpenGL is then used to
        implement color space transformation and scaling.
      </p>
  </body>
  
</topic>
