<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="settings-motherboard">
  <title>Motherboard Tab</title>
  
  <body>
    <p>On the <b outputclass="bold">Motherboard</b> tab, you can configure virtual hardware that would normally be on
      the motherboard of a real computer. </p>
    <ul>
      <li>
        <p><b outputclass="bold">Base Memory:</b> Sets the
            amount of RAM that is allocated and given to the VM when it
            is running. The specified amount of memory will be requested
            from the host OS, so it must be available or made available
            as free memory on the host when attempting to start the VM
            and will not be available to the host while the VM is
            running. This is the same setting that was specified in the
            <b outputclass="bold">New Virtual Machine</b> wizard,
            as described in <xref href="create-vm-wizard.dita#create-vm-wizard"/>.
          </p>
        <p>Generally, it is possible to change the memory size after installing the guest OS. But you must not reduce
          the memory to an amount where the OS would no longer boot. </p>
      </li>
      <li>
        <p><b outputclass="bold">Boot Order:</b> Determines the
            order in which the guest OS will attempt to boot from the
            various virtual boot devices. Analogous to a real PC's BIOS
            setting, <ph conkeyref="vbox-conkeyref-phrases/product-name"/> can tell a guest OS to start from
            the virtual floppy, the virtual CD/DVD drive, the virtual
            hard drive (each of these as defined by the other VM
            settings), the network, or none of these.
          </p>
        <p>If you select <b outputclass="bold">Network</b>, the VM will attempt to boot from a network using the PXE
          mechanism. This needs to be configured in detail on the command line. See <xref
            href="vboxmanage-modifyvm.dita"/>. </p>
      </li>
      <li>
        <p><b outputclass="bold">Chipset (Can't be changed on VMs with an Arm architecture):</b> You can select which chipset will be presented to the virtual machine. PIIX3 is the default chipset for most guests. For some guest OSes such as Mac OS X, the PIIX3 chipset is not well supported. As a result, <ph conkeyref="vbox-conkeyref-phrases/product-name"/> supports an emulation of the ICH9 chipset, which supports PCI express, three PCI buses, PCI-to-PCI bridges and Message Signaled Interrupts (MSI). This enables modern OSes to address more PCI devices and no longer requires IRQ sharing. Using the ICH9 chipset it is also possible to configure up to 36 network cards, compared to a maximum of eight network adapters with PIIX3. Note that ICH9 support is experimental and not recommended for guest OSes which do not require it. </p>
      </li>
      <li>
        <p><b outputclass="bold">TPM (Can't be changed on VMs with an Arm architecture):</b> Enables support for a Trusted Platform Module (TPM) security processor. Choose from the supported TPM versions. </p>
      </li>
      <li>
        <p><b outputclass="bold">Pointing Device:</b> The
            default virtual pointing device for some guest OSes is the
            traditional PS/2 mouse. If set to <b outputclass="bold">USB
            Tablet</b>, <ph conkeyref="vbox-conkeyref-phrases/product-name"/> reports to the virtual
            machine that a USB tablet device is present and communicates
            mouse events to the virtual machine through this device.
            Another setting is <b outputclass="bold">USB Multi-Touch
            Tablet</b>, which is suitable for guests running
            Windows 8 or later.
          </p>
        <p>Using the virtual USB tablet has the advantage that movements are reported in absolute coordinates, instead
          of as relative position changes. This enables <ph conkeyref="vbox-conkeyref-phrases/product-name"/> to
          translate mouse events over the VM window into tablet events without having to "capture" the mouse in the
          guest as described in <xref href="keyb_mouse_normal.dita#keyb_mouse_normal"/>. This makes using the VM less
          tedious even if Guest Additions are not installed. </p>
      </li>
      <li>
        <p><b outputclass="bold">Enable I/O APIC (Can't be changed on VMs with an Arm architecture):</b> Advanced Programmable Interrupt Controllers (APICs) are an x86 hardware feature that have replaced Programmable Interrupt Controllers (PICs). With an I/O APIC, OSes can use more than 16 interrupt requests (IRQs) and therefore avoid IRQ sharing for improved reliability. </p>
        <note>
          <p>Enabling the I/O APIC is <i>required</i>, especially for 64-bit Windows guest OSes. It is also required if
            you want to use more than one virtual CPU in a virtual machine. </p>
        </note>
        <p>However, software support for I/O APICs has been unreliable with some OSes other than Windows. Also, the use
          of an I/O APIC slightly increases the overhead of virtualization and therefore slows down the guest OS a
          little. </p>
        <note>
          <p>All Windows OSes install different kernels, depending on whether an I/O APIC is available. As with ACPI,
            the I/O APIC therefore <i>must not be turned off after installation</i> of a Windows guest OS. Turning it on
            after installation will have no effect however. </p>
        </note>
      </li>
      <li>
        <p><b outputclass="bold">Hardware Clock in UTC Time:</b>
            If selected, <ph conkeyref="vbox-conkeyref-phrases/product-name"/> will report the system time in
            UTC format to the guest instead of the local (host) time.
            This affects how the virtual real-time clock (RTC) operates
            and may be useful for UNIX-like guest OSes, which typically
            expect the hardware clock to be set to UTC.
          </p>
      </li>
      <li>
        <p><b outputclass="bold">Enable EFI (Can't be changed on VMs with an Arm architecture):</b> Enables Extensible Firmware Interface (EFI), which replaces the legacy BIOS and may be useful for certain advanced use cases. See <xref href="efi.dita#efi"/>. </p>
      </li>
      <li>
        <p><b outputclass="bold">Enable Secure Boot:</b> Enables
            Secure Boot, to provide a secure environment for starting
            the guest OS.
          </p>
      </li>
    </ul>
    <p>In addition, you can turn off the <b outputclass="bold">Advanced Configuration and Power Interface (ACPI)</b>
      which <ph conkeyref="vbox-conkeyref-phrases/product-name"/> presents to the guest OS by default. </p>
    <p>ACPI is the current industry standard to allow OSes to recognize hardware, configure motherboards and other
      devices and manage power. As most computers contain this feature and Windows and Linux support ACPI, it is also
      enabled by default in <ph conkeyref="vbox-conkeyref-phrases/product-name"/>. ACPI can only be turned off using the
      command line. See <xref href="vboxmanage-modifyvm.dita"/>. </p>
    <note>
      <p>All Windows OSes install different kernels, depending on whether ACPI is available. This means that ACPI
          <i>must not be turned off</i> after installation of a Windows guest OS. However, turning it on after
        installation will have no effect. </p>
    </note>
  </body>
  
</topic>
