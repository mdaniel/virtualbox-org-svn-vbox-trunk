# $Id$
## @file
# Some hacks to allow syntax and prerequisite include checking of headers.
# This makefile doesn't and shouldn't build successfully.
#

#
# Copyright (C) 2006-2016 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

DEPTH = ..
include $(KBUILD_PATH)/header.kmk

LIBRARIES = SyntaxVBoxIncludeR3 SyntaxVBoxIncludeR0 SyntaxVBoxIncludeRC

# Omit headers that are using C++ features and upsets gcc.
cpp_features_hdrs := \
	VBox/vmm/hm.h \
	VBox/vmm/hm_vmx.h \
	VBox/HostServices/GuestControlSvc.h \
	VBox/HostServices/DragAndDropSvc.h \
	VBox/HostServices/Service.h \
	VBox/GuestHost/GuestControl.h \
	VBox/GuestHost/DragAndDrop.h \
	VBox/VBoxCrHgsmi.h \
	VBox/VBoxUhgsmi.h \
       VBox/dbus.h \
       VBox/VBoxPktDmp.h \
       $(wildcard iprt/cpp/*)

# Omit headers that are C++ and ring-3.
r3_cpp_hdrs := \
	VBox/dbggui.h \
	VBox/settings.h \
	VBox/com/Guid.h \
	VBox/HostServices/GuestPropertySvc.h \
	$(wildcard iprt/*_cpp.h iprt/cpp/*.h VBox/com/*.h )

# Ring-3 only headers.
r3_only_hdrs := \
	VBox/vrdpapi.h \
	VBox/vrdpusb.h \
	VBox/VBoxHDD.h \
	VBox/VBoxHDD-Plugin.h \
	VBox/VBoxCrHgsmi.h \
	VBox/VBoxUhgsmi.h \
	VBox/VBoxNetCfg-win.h \
	VBox/VBoxDrvCfg-win.h \
	VBox/dbus.h \
	$(if-expr "$(KBUILD_TARGET)" == "win",VBox/usblib.h,) \
	VBox/usblib-win.h \
	VBox/vd.h \
	VBox/vd-cache-backend.h \
	VBox/vd-ifs.h \
	VBox/vd-ifs-internal.h \
	VBox/vd-image-backend.h \
	VBox/vd-plugin.h \
	VBox/vd-filter-backend.h \
	VBox/vddbg.h \
	VBox/vmm/uvm.h \
	VBox/vscsi.h \
	VBox/ExtPack/% \
	VBox/GuestHost/DragAndDrop.h \
	VBox/HostServices/Service.h \
	iprt/win/% \
	iprt/alloca.h \
	iprt/tcp.h \
	iprt/localipc.h \
	iprt/linux/sysfs.h \
	iprt/socket.h \
	iprt/udp.h

# Ring-0 only headers.
r0_only_hdrs := \
	VBox/VBoxGuestLibSharedFolders.h

# GCC only headers.
gcc_only_hdrs := \
	iprt/nocrt/fenv.h \
	iprt/nocrt/math.h

# Headers to omit all together.
omit_hdrs := \
	VBox/HostServices/glext.h \
	VBox/HostServices/glxext.h \
	VBox/HostServices/wglext.h \
	VBox/VBoxGL2D.h \
	VBox/WinNetConfig.h \
	VBox/usblib-solaris.h \
	VBox/VDEPlug.h \
	VBox/VDEPlugSymDefs.h \
	VBox/VBoxNetCmn-win.h \
	$(if-expr "$(KBUILD_TARGET)" != "win", \
		VBox/VBoxDrvCfg-win.h \
		VBox/VBoxNetCfg-win.h \
		VBox/usblib-win.h \
	,$(gcc_only_hdrs)) \
	\
	VBox/dbus-calls.h \
	VBox/VBoxKeyboard.h \
	VBox/vmm/pdmpcidevint.h \
	iprt/runtime-loader.h \
	iprt/mangling.h \
       $(wildcard iprt/asm*watcom*.h) \
       iprt/asn1-generator% \
       iprt/win/% \
       iprt/nt/% \
       \
	$(foreach os,$(filter-out $(KBUILD_TARGET),$(KBUILD_OSES)),iprt/$(os)/% VBox/$(os)/%) \
	$(foreach arch,$(KBUILD_ARCHES),iprt/nocrt/$(arch)/%)

# We omit a few headers which have platform specific issues or are templates.
hdrs := $(filter-out $(omit_hdrs), $(wildcard VBox/*.h VBox/*/*.h iprt/*.h iprt/*/*.h))

# ring-3, ring-0 and raw-mode context specific exclusions.
hdrs.r3   := $(filter-out $(r0_only_hdrs), $(hdrs))
hdrs-c.r3 := $(filter-out $(cpp_features_hdrs) $(r3_cpp_hdrs) $(r0_only_hdrs), $(hdrs.r3))
hdrs.r0   := $(filter-out $(r3_cpp_hdrs) $(r3_only_hdrs), $(hdrs))
hdrs-c.r0 := $(filter-out $(cpp_features_hdrs), $(hdrs.r0))
hdrs.rc   := $(filter-out \
	VBox/VBoxGuestLib.h \
	VBox/vmm/gvm.h \
	iprt/thread.h \
	iprt/mem.h \
	iprt/memsafer.h \
	iprt/alloc.h \
	iprt/vector.h \
	$(r3_cpp_hdrs) \
	$(r3_only_hdrs) \
	$(r0_only_hdrs) \
	, $(hdrs))
hdrs-c.rc := $(filter-out $(cpp_features_hdrs), $(hdrs.rc))
#$(error $(subst $(SP),$(NLTAB),$(strip $(sort $(hdrs-c.rc)))))

SyntaxVBoxIncludeR3_TEMPLATE = VBOXMAINEXE
SyntaxVBoxIncludeR3_DEFS = VBOX_WITH_HGCM
SyntaxVBoxIncludeR3_CDEFS = VBOX_WITHOUT_UNNAMED_UNIONS
SyntaxVBoxIncludeR3_SOURCES := \
	$(addprefix $(PATH_TARGET)/,$(subst .h,-c.c,     $(subst /,_,$(hdrs-c.r3)))) \
	$(addprefix $(PATH_TARGET)/,$(subst .h,-cpp.cpp, $(subst /,_,$(hdrs.r3))))

SyntaxVBoxIncludeR0_TEMPLATE = VBoxR0
SyntaxVBoxIncludeR0_DEFS = VBOX_WITH_HGCM
SyntaxVBoxIncludeR0_CDEFS = VBOX_WITHOUT_UNNAMED_UNIONS
SyntaxVBoxIncludeR0_SOURCES := \
	$(addprefix $(PATH_TARGET)/,$(subst .h,-c.c,     $(subst /,_,$(hdrs-c.r0)))) \
	$(addprefix $(PATH_TARGET)/,$(subst .h,-cpp.cpp, $(subst /,_,$(hdrs.r0))))

SyntaxVBoxIncludeRC_TEMPLATE = VBoxRc
SyntaxVBoxIncludeRC_DEFS = VBOX_WITH_HGCM
SyntaxVBoxIncludeRC_CDEFS = VBOX_WITHOUT_UNNAMED_UNIONS
SyntaxVBoxIncludeRC_SOURCES := \
	$(addprefix $(PATH_TARGET)/,$(subst .h,-c.c,     $(subst /,_,$(hdrs-c.rc)))) \
	$(addprefix $(PATH_TARGET)/,$(subst .h,-cpp.cpp, $(subst /,_,$(hdrs.rc))))


# Comment out the next line to simplify header correction.
VBOX_ROOT_INCLUDE_MAKEFILE = $(PATH_ROOT)/include/Makefile.kmk

include $(FILE_KBUILD_FOOTER)


# Headers that must only be included once.
only_once_hdrs := \
	iprt/bldprog-strtab-template.cpp.h

define def_hdr
$(eval flatname := $(subst /,_,$(basename $(hdr))))
$(eval functioname := $(translate $(flatname),-./,___))
$$(PATH_TARGET)/$(flatname)-cpp.cpp: $(VBOX_ROOT_INCLUDE_MAKEFILE) | $$(PATH_TARGET)/
	$(QUIET)$$(APPEND) -t -n $$@ \
		'#include <$(hdr)>' \
		$(if-expr $(intersects $(hdr),$(only_once_hdrs)),, '#include <$(hdr)>') \
		'extern int $(functioname)_cpp(void);' \
		'int $(functioname)_cpp(void) { return 0;}'

$$(PATH_TARGET)/$(flatname)-c.c: $(VBOX_ROOT_INCLUDE_MAKEFILE) | $$(PATH_TARGET)/
	$(QUIET)$$(APPEND) -t -n $$@ \
		'#include <$(hdr)>' \
		$(if-expr $(intersects $(hdr),$(only_once_hdrs)),, '#include <$(hdr)>') \
		'extern int $(functioname)_c(void);' \
		'int $(functioname)_c(void) { return 0;}'

$(subst .h,.o,$(notdir $(hdr)))::
if1of ($(hdr), $(r3_cpp_hdrs) $(cpp_features_hdrs))
	$$(MAKE) -f $(MAKEFILE) $(flatname)-cpp.o
else
	$$(MAKE) -f $(MAKEFILE) $(flatname)-c.o $(flatname)-cpp.o
endif

endef

$(foreach hdr,$(hdrs), $(eval $(def_hdr)))

