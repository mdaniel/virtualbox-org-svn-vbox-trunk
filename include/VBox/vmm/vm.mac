;; @file
; VM - The Virtual Machine.
;

;
; Copyright (C) 2006-2017 Oracle Corporation
;
; This file is part of VirtualBox Open Source Edition (OSE), as
; available from http://www.virtualbox.org. This file is free software;
; you can redistribute it and/or modify it under the terms of the GNU
; General Public License (GPL) as published by the Free Software
; Foundation, in version 2 as it comes in the "COPYING" file of the
; VirtualBox OSE distribution. VirtualBox OSE is distributed in the
; hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
;
; The contents of this file may alternatively be used under the terms
; of the Common Development and Distribution License Version 1.0
; (CDDL) only, as it comes in the "COPYING.CDDL" file of the
; VirtualBox OSE distribution, in which case the provisions of the
; CDDL are applicable instead of those of the GPL.
;
; You may elect to license modified versions of this file under the
; terms and conditions of either the GPL or the CDDL or both.
;

%ifndef ___VBox_vmm_vm_mac
%define ___VBox_vmm_vm_mac

%include "VBox/vmm/stam.mac"

;/** This action forces the VM to service check and pending interrups on the APIC. */
%define VMCPU_FF_INTERRUPT_APIC            (1 << 0)
;/** This action forces the VM to service check and pending interrups on the PIC. */
%define VMCPU_FF_INTERRUPT_PIC             (1 << 1)
;/** This action forces the VM to schedule and run pending timer (TM). */
%define VMCPU_FF_TIMER                     (1 << 2)
;/** This action forces the VM to service pending requests from other
; * thread or requests which must be executed in another context. */
%define VMCPU_FF_REQUEST                   (1 << 9)

;;
; This is part of  the VMCPU structure.
struc VMCPU
    .fLocalForcedActions    resd 1
    .enmState               resd 1
    .pUVCpu                 RTR3PTR_RES 1
    .pVMR3                  RTR3PTR_RES 1
    .pVMR0                  RTR0PTR_RES 1
    .pVMRC                  RTRCPTR_RES 1
    .idCpu                  resd 1

    .hNativeThread          RTR0PTR_RES 1
    .hNativeThreadR0        RTR0PTR_RES 1
    .idHostCpu              resd 1
    .iHostCpuSet            resd 1
%if HC_ARCH_BITS == 32
    .abAlignment1           resb 12
%else
;    .abAlignment1           resb 0
%endif

    alignb 64
    .iem                    resb 18496
    .hm                     resb 5824
    .em                     resb 1408
    .trpm                   resb 128
    .tm                     resb 384
    .vmm                    resb 704
    .pdm                    resb 256
    .iom                    resb 512
    .dbgf                   resb 256
    .gim                    resb 512
    .apic                   resb 1792

    .fTraceGroups           resd 1
    .uAdHoc                 resd 1
    alignb 8
    .aStatAdHoc             resb STAMPROFILEADV_size * 8

    alignb 4096
    .pgm                    resb 4096
    alignb 4096
    .cpum                   resb 4096
    alignb 4096
endstruc

;;
; This is part of  the VM structure.
struc VM
    .enmVMState             resd 1
    .fGlobalForcedActions   resd 1
    .paVMPagesR3            RTR3PTR_RES 1
    .pSession               RTR0PTR_RES 1
    .pUVM                   RTR3PTR_RES 1
    .pVMR3                  RTR3PTR_RES 1
    .pVMR0                  RTR0PTR_RES 1
    .pVMRC                  RTRCPTR_RES 1
    .hSelf                  resd 1
    .cCpus                  resd 1
    .uCpuExecutionCap       resd 1
    .cbSelf                 resd 1
    .offVMCPU               resd 1
    .pfnVMMRCToHostAsm      resd 1
    .pfnVMMRCToHostAsmNoReturn resd 1
    .fRecompileUser         resb 1
    .fRecompileSupervisor   resb 1
    .fRawRing1Enabled       resb 1
    .fPATMEnabled           resb 1
    .fCSAMEnabled           resb 1
    .fHMEnabled             resb 1
    .fHMEnabledFixed        resb 1
    .fHMNeedRawModeCtx      resb 1
    .fFaultTolerantMaster   resb 1
    .fUseLargePages         resb 1

    .uPadding1              resb 2

    .hTraceBufRC            RTRCPTR_RES 1
    .hTraceBufR3            RTR3PTR_RES 1
    .hTraceBufR0            RTR0PTR_RES 1

    alignb 8

    .StatTotalQemuToGC      resb STAMPROFILEADV_size
    .StatTotalGCToQemu      resb STAMPROFILEADV_size
    .StatTotalInGC          resb STAMPROFILEADV_size
    .StatTotalInQemu        resb STAMPROFILEADV_size
    .StatSwitcherToGC       resb STAMPROFILEADV_size
    .StatSwitcherToHC       resb STAMPROFILEADV_size
    .StatSwitcherSaveRegs   resb STAMPROFILEADV_size
    .StatSwitcherSysEnter   resb STAMPROFILEADV_size
    .StatSwitcherDebug      resb STAMPROFILEADV_size
    .StatSwitcherCR0        resb STAMPROFILEADV_size
    .StatSwitcherCR4        resb STAMPROFILEADV_size
    .StatSwitcherJmpCR3     resb STAMPROFILEADV_size
    .StatSwitcherRstrRegs   resb STAMPROFILEADV_size
    .StatSwitcherLgdt       resb STAMPROFILEADV_size
    .StatSwitcherLidt       resb STAMPROFILEADV_size
    .StatSwitcherLldt       resb STAMPROFILEADV_size
    .StatSwitcherTSS        resb STAMPROFILEADV_size

%ifndef HC_ARCH_BITS
 %error "Missing HC_ARCH_BITS"
%endif
%if HC_ARCH_BITS == 32
    .abAlignment3           resb 16
%else
;    .abAlignment3           resb 16
%endif

    alignb 64
    .cpum                   resb 1536
    .vmm                    resb 1600
    .pgm                    resb (4096*2+6080)
    .hm                     resb 5440
    .trpm                   resb 5248
    .selm                   resb 768
    .mm                     resb 192
    .pdm                    resb 1920
    .iom                    resb 896
    .em                     resb 256
    .tm                     resb 2496
    .dbgf                   resb 2368
    .ssm                    resb 128
    .ftm                    resb 512
%ifdef VBOX_WITH_RAW_MODE
    .patm                   resb 768
    .csam                   resb 1088
%endif
%ifdef VBOX_WITH_REM
    .rem                    resb 0x11100
%endif
    .gim                    resb 448
    .apic                   resb 128
    .vm                     resb 24
    .cfgm                   resb 8
    alignb 4096
    .aCpus                  resb VMCPU_size
endstruc


%endif

