/* This file is automatically generated by mapi_abi.py.  Do not modify. */

#ifndef _GLAPI_TMP_H_
#define _GLAPI_TMP_H_
typedef int GLclampx;
#endif /* _GLAPI_TMP_H_ */

#ifdef MAPI_TMP_DEFINES
#define GL_GLEXT_PROTOTYPES
#include "GL/gl.h"
#include "GL/glext.h"

void APIENTRY gl_dispatch_stub_0(GLuint list, GLenum mode);
void APIENTRY gl_dispatch_stub_1(void);
void APIENTRY gl_dispatch_stub_2(GLuint list);
void APIENTRY gl_dispatch_stub_3(GLsizei n, GLenum type, const GLvoid *lists);
void APIENTRY gl_dispatch_stub_4(GLuint list, GLsizei range);
GLuint APIENTRY gl_dispatch_stub_5(GLsizei range);
void APIENTRY gl_dispatch_stub_6(GLuint base);
void APIENTRY gl_dispatch_stub_7(GLenum mode);
void APIENTRY gl_dispatch_stub_8(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
void APIENTRY gl_dispatch_stub_9(GLbyte red, GLbyte green, GLbyte blue);
void APIENTRY gl_dispatch_stub_10(const GLbyte *v);
void APIENTRY gl_dispatch_stub_11(GLdouble red, GLdouble green, GLdouble blue);
void APIENTRY gl_dispatch_stub_12(const GLdouble *v);
void APIENTRY gl_dispatch_stub_13(GLfloat red, GLfloat green, GLfloat blue);
void APIENTRY gl_dispatch_stub_14(const GLfloat *v);
void APIENTRY gl_dispatch_stub_15(GLint red, GLint green, GLint blue);
void APIENTRY gl_dispatch_stub_16(const GLint *v);
void APIENTRY gl_dispatch_stub_17(GLshort red, GLshort green, GLshort blue);
void APIENTRY gl_dispatch_stub_18(const GLshort *v);
void APIENTRY gl_dispatch_stub_19(GLubyte red, GLubyte green, GLubyte blue);
void APIENTRY gl_dispatch_stub_20(const GLubyte *v);
void APIENTRY gl_dispatch_stub_21(GLuint red, GLuint green, GLuint blue);
void APIENTRY gl_dispatch_stub_22(const GLuint *v);
void APIENTRY gl_dispatch_stub_23(GLushort red, GLushort green, GLushort blue);
void APIENTRY gl_dispatch_stub_24(const GLushort *v);
void APIENTRY gl_dispatch_stub_25(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void APIENTRY gl_dispatch_stub_26(const GLbyte *v);
void APIENTRY gl_dispatch_stub_27(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void APIENTRY gl_dispatch_stub_28(const GLdouble *v);
GLAPI void APIENTRY glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void APIENTRY gl_dispatch_stub_30(const GLfloat *v);
void APIENTRY gl_dispatch_stub_31(GLint red, GLint green, GLint blue, GLint alpha);
void APIENTRY gl_dispatch_stub_32(const GLint *v);
void APIENTRY gl_dispatch_stub_33(GLshort red, GLshort green, GLshort blue, GLshort alpha);
void APIENTRY gl_dispatch_stub_34(const GLshort *v);
GLAPI void APIENTRY glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void APIENTRY gl_dispatch_stub_36(const GLubyte *v);
void APIENTRY gl_dispatch_stub_37(GLuint red, GLuint green, GLuint blue, GLuint alpha);
void APIENTRY gl_dispatch_stub_38(const GLuint *v);
void APIENTRY gl_dispatch_stub_39(GLushort red, GLushort green, GLushort blue, GLushort alpha);
void APIENTRY gl_dispatch_stub_40(const GLushort *v);
void APIENTRY gl_dispatch_stub_41(GLboolean flag);
void APIENTRY gl_dispatch_stub_42(const GLboolean *flag);
void APIENTRY gl_dispatch_stub_43(void);
void APIENTRY gl_dispatch_stub_44(GLdouble c);
void APIENTRY gl_dispatch_stub_45(const GLdouble *c);
void APIENTRY gl_dispatch_stub_46(GLfloat c);
void APIENTRY gl_dispatch_stub_47(const GLfloat *c);
void APIENTRY gl_dispatch_stub_48(GLint c);
void APIENTRY gl_dispatch_stub_49(const GLint *c);
void APIENTRY gl_dispatch_stub_50(GLshort c);
void APIENTRY gl_dispatch_stub_51(const GLshort *c);
void APIENTRY gl_dispatch_stub_52(GLbyte nx, GLbyte ny, GLbyte nz);
void APIENTRY gl_dispatch_stub_53(const GLbyte *v);
void APIENTRY gl_dispatch_stub_54(GLdouble nx, GLdouble ny, GLdouble nz);
void APIENTRY gl_dispatch_stub_55(const GLdouble *v);
GLAPI void APIENTRY glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz);
void APIENTRY gl_dispatch_stub_57(const GLfloat *v);
void APIENTRY gl_dispatch_stub_58(GLint nx, GLint ny, GLint nz);
void APIENTRY gl_dispatch_stub_59(const GLint *v);
void APIENTRY gl_dispatch_stub_60(GLshort nx, GLshort ny, GLshort nz);
void APIENTRY gl_dispatch_stub_61(const GLshort *v);
void APIENTRY gl_dispatch_stub_62(GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_63(const GLdouble *v);
void APIENTRY gl_dispatch_stub_64(GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_65(const GLfloat *v);
void APIENTRY gl_dispatch_stub_66(GLint x, GLint y);
void APIENTRY gl_dispatch_stub_67(const GLint *v);
void APIENTRY gl_dispatch_stub_68(GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_69(const GLshort *v);
void APIENTRY gl_dispatch_stub_70(GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_71(const GLdouble *v);
void APIENTRY gl_dispatch_stub_72(GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_73(const GLfloat *v);
void APIENTRY gl_dispatch_stub_74(GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_75(const GLint *v);
void APIENTRY gl_dispatch_stub_76(GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_77(const GLshort *v);
void APIENTRY gl_dispatch_stub_78(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_79(const GLdouble *v);
void APIENTRY gl_dispatch_stub_80(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_81(const GLfloat *v);
void APIENTRY gl_dispatch_stub_82(GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_83(const GLint *v);
void APIENTRY gl_dispatch_stub_84(GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_85(const GLshort *v);
void APIENTRY gl_dispatch_stub_86(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void APIENTRY gl_dispatch_stub_87(const GLdouble *v1, const GLdouble *v2);
void APIENTRY gl_dispatch_stub_88(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void APIENTRY gl_dispatch_stub_89(const GLfloat *v1, const GLfloat *v2);
void APIENTRY gl_dispatch_stub_90(GLint x1, GLint y1, GLint x2, GLint y2);
void APIENTRY gl_dispatch_stub_91(const GLint *v1, const GLint *v2);
void APIENTRY gl_dispatch_stub_92(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void APIENTRY gl_dispatch_stub_93(const GLshort *v1, const GLshort *v2);
void APIENTRY gl_dispatch_stub_94(GLdouble s);
void APIENTRY gl_dispatch_stub_95(const GLdouble *v);
void APIENTRY gl_dispatch_stub_96(GLfloat s);
void APIENTRY gl_dispatch_stub_97(const GLfloat *v);
void APIENTRY gl_dispatch_stub_98(GLint s);
void APIENTRY gl_dispatch_stub_99(const GLint *v);
void APIENTRY gl_dispatch_stub_100(GLshort s);
void APIENTRY gl_dispatch_stub_101(const GLshort *v);
void APIENTRY gl_dispatch_stub_102(GLdouble s, GLdouble t);
void APIENTRY gl_dispatch_stub_103(const GLdouble *v);
void APIENTRY gl_dispatch_stub_104(GLfloat s, GLfloat t);
void APIENTRY gl_dispatch_stub_105(const GLfloat *v);
void APIENTRY gl_dispatch_stub_106(GLint s, GLint t);
void APIENTRY gl_dispatch_stub_107(const GLint *v);
void APIENTRY gl_dispatch_stub_108(GLshort s, GLshort t);
void APIENTRY gl_dispatch_stub_109(const GLshort *v);
void APIENTRY gl_dispatch_stub_110(GLdouble s, GLdouble t, GLdouble r);
void APIENTRY gl_dispatch_stub_111(const GLdouble *v);
void APIENTRY gl_dispatch_stub_112(GLfloat s, GLfloat t, GLfloat r);
void APIENTRY gl_dispatch_stub_113(const GLfloat *v);
void APIENTRY gl_dispatch_stub_114(GLint s, GLint t, GLint r);
void APIENTRY gl_dispatch_stub_115(const GLint *v);
void APIENTRY gl_dispatch_stub_116(GLshort s, GLshort t, GLshort r);
void APIENTRY gl_dispatch_stub_117(const GLshort *v);
void APIENTRY gl_dispatch_stub_118(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void APIENTRY gl_dispatch_stub_119(const GLdouble *v);
void APIENTRY gl_dispatch_stub_120(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void APIENTRY gl_dispatch_stub_121(const GLfloat *v);
void APIENTRY gl_dispatch_stub_122(GLint s, GLint t, GLint r, GLint q);
void APIENTRY gl_dispatch_stub_123(const GLint *v);
void APIENTRY gl_dispatch_stub_124(GLshort s, GLshort t, GLshort r, GLshort q);
void APIENTRY gl_dispatch_stub_125(const GLshort *v);
void APIENTRY gl_dispatch_stub_126(GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_127(const GLdouble *v);
void APIENTRY gl_dispatch_stub_128(GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_129(const GLfloat *v);
void APIENTRY gl_dispatch_stub_130(GLint x, GLint y);
void APIENTRY gl_dispatch_stub_131(const GLint *v);
void APIENTRY gl_dispatch_stub_132(GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_133(const GLshort *v);
void APIENTRY gl_dispatch_stub_134(GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_135(const GLdouble *v);
void APIENTRY gl_dispatch_stub_136(GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_137(const GLfloat *v);
void APIENTRY gl_dispatch_stub_138(GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_139(const GLint *v);
void APIENTRY gl_dispatch_stub_140(GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_141(const GLshort *v);
void APIENTRY gl_dispatch_stub_142(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_143(const GLdouble *v);
void APIENTRY gl_dispatch_stub_144(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_145(const GLfloat *v);
void APIENTRY gl_dispatch_stub_146(GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_147(const GLint *v);
void APIENTRY gl_dispatch_stub_148(GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_149(const GLshort *v);
void APIENTRY gl_dispatch_stub_150(GLenum plane, const GLdouble *equation);
void APIENTRY gl_dispatch_stub_151(GLenum face, GLenum mode);
GLAPI void APIENTRY glCullFace(GLenum mode);
GLAPI void APIENTRY glFogf(GLenum pname, GLfloat param);
GLAPI void APIENTRY glFogfv(GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_155(GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_156(GLenum pname, const GLint *params);
GLAPI void APIENTRY glFrontFace(GLenum mode);
GLAPI void APIENTRY glHint(GLenum target, GLenum mode);
GLAPI void APIENTRY glLightf(GLenum light, GLenum pname, GLfloat param);
GLAPI void APIENTRY glLightfv(GLenum light, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_161(GLenum light, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_162(GLenum light, GLenum pname, const GLint *params);
GLAPI void APIENTRY glLightModelf(GLenum pname, GLfloat param);
GLAPI void APIENTRY glLightModelfv(GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_165(GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_166(GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_167(GLint factor, GLushort pattern);
GLAPI void APIENTRY glLineWidth(GLfloat width);
GLAPI void APIENTRY glMaterialf(GLenum face, GLenum pname, GLfloat param);
GLAPI void APIENTRY glMaterialfv(GLenum face, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_171(GLenum face, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_172(GLenum face, GLenum pname, const GLint *params);
GLAPI void APIENTRY glPointSize(GLfloat size);
void APIENTRY gl_dispatch_stub_174(GLenum face, GLenum mode);
void APIENTRY gl_dispatch_stub_175(const GLubyte *mask);
GLAPI void APIENTRY glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI void APIENTRY glShadeModel(GLenum mode);
GLAPI void APIENTRY glTexParameterf(GLenum target, GLenum pname, GLfloat param);
GLAPI void APIENTRY glTexParameterfv(GLenum target, GLenum pname, const GLfloat *params);
GLAPI void APIENTRY glTexParameteri(GLenum target, GLenum pname, GLint param);
GLAPI void APIENTRY glTexParameteriv(GLenum target, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_182(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
GLAPI void APIENTRY glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
GLAPI void APIENTRY glTexEnvf(GLenum target, GLenum pname, GLfloat param);
GLAPI void APIENTRY glTexEnvfv(GLenum target, GLenum pname, const GLfloat *params);
GLAPI void APIENTRY glTexEnvi(GLenum target, GLenum pname, GLint param);
GLAPI void APIENTRY glTexEnviv(GLenum target, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_188(GLenum coord, GLenum pname, GLdouble param);
void APIENTRY gl_dispatch_stub_189(GLenum coord, GLenum pname, const GLdouble *params);
void APIENTRY gl_dispatch_stub_190(GLenum coord, GLenum pname, GLfloat param);
void APIENTRY gl_dispatch_stub_191(GLenum coord, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_192(GLenum coord, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_193(GLenum coord, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_194(GLsizei size, GLenum type, GLfloat *buffer);
void APIENTRY gl_dispatch_stub_195(GLsizei size, GLuint *buffer);
GLint APIENTRY gl_dispatch_stub_196(GLenum mode);
void APIENTRY gl_dispatch_stub_197(void);
void APIENTRY gl_dispatch_stub_198(GLuint name);
void APIENTRY gl_dispatch_stub_199(GLfloat token);
void APIENTRY gl_dispatch_stub_200(void);
void APIENTRY gl_dispatch_stub_201(GLuint name);
void APIENTRY gl_dispatch_stub_202(GLenum mode);
GLAPI void APIENTRY glClear(GLbitfield mask);
void APIENTRY gl_dispatch_stub_204(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void APIENTRY gl_dispatch_stub_205(GLfloat c);
GLAPI void APIENTRY glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
GLAPI void APIENTRY glClearStencil(GLint s);
void APIENTRY gl_dispatch_stub_208(GLclampd depth);
GLAPI void APIENTRY glStencilMask(GLuint mask);
GLAPI void APIENTRY glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLAPI void APIENTRY glDepthMask(GLboolean flag);
void APIENTRY gl_dispatch_stub_212(GLuint mask);
void APIENTRY gl_dispatch_stub_213(GLenum op, GLfloat value);
GLAPI void APIENTRY glDisable(GLenum cap);
GLAPI void APIENTRY glEnable(GLenum cap);
GLAPI void APIENTRY glFinish(void);
GLAPI void APIENTRY glFlush(void);
void APIENTRY gl_dispatch_stub_218(void);
void APIENTRY gl_dispatch_stub_219(GLbitfield mask);
void APIENTRY gl_dispatch_stub_220(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
void APIENTRY gl_dispatch_stub_221(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
void APIENTRY gl_dispatch_stub_222(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
void APIENTRY gl_dispatch_stub_223(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
void APIENTRY gl_dispatch_stub_224(GLint un, GLdouble u1, GLdouble u2);
void APIENTRY gl_dispatch_stub_225(GLint un, GLfloat u1, GLfloat u2);
void APIENTRY gl_dispatch_stub_226(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void APIENTRY gl_dispatch_stub_227(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void APIENTRY gl_dispatch_stub_228(GLdouble u);
void APIENTRY gl_dispatch_stub_229(const GLdouble *u);
void APIENTRY gl_dispatch_stub_230(GLfloat u);
void APIENTRY gl_dispatch_stub_231(const GLfloat *u);
void APIENTRY gl_dispatch_stub_232(GLdouble u, GLdouble v);
void APIENTRY gl_dispatch_stub_233(const GLdouble *u);
void APIENTRY gl_dispatch_stub_234(GLfloat u, GLfloat v);
void APIENTRY gl_dispatch_stub_235(const GLfloat *u);
void APIENTRY gl_dispatch_stub_236(GLenum mode, GLint i1, GLint i2);
void APIENTRY gl_dispatch_stub_237(GLint i);
void APIENTRY gl_dispatch_stub_238(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void APIENTRY gl_dispatch_stub_239(GLint i, GLint j);
GLAPI void APIENTRY glAlphaFunc(GLenum func, GLclampf ref);
GLAPI void APIENTRY glBlendFunc(GLenum sfactor, GLenum dfactor);
GLAPI void APIENTRY glLogicOp(GLenum opcode);
GLAPI void APIENTRY glStencilFunc(GLenum func, GLint ref, GLuint mask);
GLAPI void APIENTRY glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
GLAPI void APIENTRY glDepthFunc(GLenum func);
void APIENTRY gl_dispatch_stub_246(GLfloat xfactor, GLfloat yfactor);
void APIENTRY gl_dispatch_stub_247(GLenum pname, GLfloat param);
void APIENTRY gl_dispatch_stub_248(GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_249(GLenum pname, GLfloat param);
GLAPI void APIENTRY glPixelStorei(GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_251(GLenum map, GLsizei mapsize, const GLfloat *values);
void APIENTRY gl_dispatch_stub_252(GLenum map, GLsizei mapsize, const GLuint *values);
void APIENTRY gl_dispatch_stub_253(GLenum map, GLsizei mapsize, const GLushort *values);
void APIENTRY gl_dispatch_stub_254(GLenum mode);
void APIENTRY gl_dispatch_stub_255(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
GLAPI void APIENTRY glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
void APIENTRY gl_dispatch_stub_257(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
GLAPI void APIENTRY glGetBooleanv(GLenum pname, GLboolean *params);
void APIENTRY gl_dispatch_stub_259(GLenum plane, GLdouble *equation);
void APIENTRY gl_dispatch_stub_260(GLenum pname, GLdouble *params);
GLAPI GLenum APIENTRY glGetError(void);
GLAPI void APIENTRY glGetFloatv(GLenum pname, GLfloat *params);
GLAPI void APIENTRY glGetIntegerv(GLenum pname, GLint *params);
GLAPI void APIENTRY glGetLightfv(GLenum light, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_265(GLenum light, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_266(GLenum target, GLenum query, GLdouble *v);
void APIENTRY gl_dispatch_stub_267(GLenum target, GLenum query, GLfloat *v);
void APIENTRY gl_dispatch_stub_268(GLenum target, GLenum query, GLint *v);
GLAPI void APIENTRY glGetMaterialfv(GLenum face, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_270(GLenum face, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_271(GLenum map, GLfloat *values);
void APIENTRY gl_dispatch_stub_272(GLenum map, GLuint *values);
void APIENTRY gl_dispatch_stub_273(GLenum map, GLushort *values);
void APIENTRY gl_dispatch_stub_274(GLubyte *mask);
GLAPI const GLubyte * APIENTRY glGetString(GLenum name);
GLAPI void APIENTRY glGetTexEnvfv(GLenum target, GLenum pname, GLfloat *params);
GLAPI void APIENTRY glGetTexEnviv(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_278(GLenum coord, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_279(GLenum coord, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_280(GLenum coord, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_281(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
GLAPI void APIENTRY glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params);
GLAPI void APIENTRY glGetTexParameteriv(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_284(GLenum target, GLint level, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_285(GLenum target, GLint level, GLenum pname, GLint *params);
GLAPI GLboolean APIENTRY glIsEnabled(GLenum cap);
GLboolean APIENTRY gl_dispatch_stub_287(GLuint list);
void APIENTRY gl_dispatch_stub_288(GLclampd zNear, GLclampd zFar);
void APIENTRY gl_dispatch_stub_289(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLAPI void APIENTRY glLoadIdentity(void);
GLAPI void APIENTRY glLoadMatrixf(const GLfloat *m);
void APIENTRY gl_dispatch_stub_292(const GLdouble *m);
GLAPI void APIENTRY glMatrixMode(GLenum mode);
GLAPI void APIENTRY glMultMatrixf(const GLfloat *m);
void APIENTRY gl_dispatch_stub_295(const GLdouble *m);
void APIENTRY gl_dispatch_stub_296(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLAPI void APIENTRY glPopMatrix(void);
GLAPI void APIENTRY glPushMatrix(void);
void APIENTRY gl_dispatch_stub_299(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLAPI void APIENTRY glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_301(GLdouble x, GLdouble y, GLdouble z);
GLAPI void APIENTRY glScalef(GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_303(GLdouble x, GLdouble y, GLdouble z);
GLAPI void APIENTRY glTranslatef(GLfloat x, GLfloat y, GLfloat z);
GLAPI void APIENTRY glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_306(GLint i);
GLAPI void APIENTRY glBindTexture(GLenum target, GLuint texture);
GLAPI void APIENTRY glColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLAPI void APIENTRY glDisableClientState(GLenum array);
GLAPI void APIENTRY glDrawArrays(GLenum mode, GLint first, GLsizei count);
GLAPI void APIENTRY glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
void APIENTRY gl_dispatch_stub_312(GLsizei stride, const GLvoid *pointer);
GLAPI void APIENTRY glEnableClientState(GLenum array);
void APIENTRY gl_dispatch_stub_314(GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_315(GLubyte c);
void APIENTRY gl_dispatch_stub_316(const GLubyte *c);
void APIENTRY gl_dispatch_stub_317(GLenum format, GLsizei stride, const GLvoid *pointer);
GLAPI void APIENTRY glNormalPointer(GLenum type, GLsizei stride, const GLvoid *pointer);
GLAPI void APIENTRY glPolygonOffset(GLfloat factor, GLfloat units);
GLAPI void APIENTRY glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLAPI void APIENTRY glVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLboolean APIENTRY gl_dispatch_stub_322(GLsizei n, const GLuint *textures, GLboolean *residences);
void APIENTRY gl_dispatch_stub_323(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLAPI void APIENTRY glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void APIENTRY gl_dispatch_stub_325(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLAPI void APIENTRY glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI void APIENTRY glDeleteTextures(GLsizei n, const GLuint *textures);
GLAPI void APIENTRY glGenTextures(GLsizei n, GLuint *textures);
GLAPI void APIENTRY glGetPointerv(GLenum pname, GLvoid **params);
GLAPI GLboolean APIENTRY glIsTexture(GLuint texture);
void APIENTRY gl_dispatch_stub_331(GLsizei n, const GLuint *textures, const GLclampf *priorities);
void APIENTRY gl_dispatch_stub_332(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
GLAPI void APIENTRY glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
void APIENTRY gl_dispatch_stub_334(void);
void APIENTRY gl_dispatch_stub_335(GLbitfield mask);
void APIENTRY gl_dispatch_stub_336(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void APIENTRY gl_dispatch_stub_337(GLenum mode);
void APIENTRY gl_dispatch_stub_338(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
void APIENTRY gl_dispatch_stub_339(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
void APIENTRY gl_dispatch_stub_340(GLenum target, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_341(GLenum target, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_342(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void APIENTRY gl_dispatch_stub_343(GLenum target, GLenum format, GLenum type, GLvoid *table);
void APIENTRY gl_dispatch_stub_344(GLenum target, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_345(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_346(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_347(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void APIENTRY gl_dispatch_stub_348(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
void APIENTRY gl_dispatch_stub_349(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
void APIENTRY gl_dispatch_stub_350(GLenum target, GLenum pname, GLfloat params);
void APIENTRY gl_dispatch_stub_351(GLenum target, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_352(GLenum target, GLenum pname, GLint params);
void APIENTRY gl_dispatch_stub_353(GLenum target, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_354(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void APIENTRY gl_dispatch_stub_355(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_356(GLenum target, GLenum format, GLenum type, GLvoid *image);
void APIENTRY gl_dispatch_stub_357(GLenum target, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_358(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_359(GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
void APIENTRY gl_dispatch_stub_360(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
void APIENTRY gl_dispatch_stub_361(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
void APIENTRY gl_dispatch_stub_362(GLenum target, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_363(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_364(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
void APIENTRY gl_dispatch_stub_365(GLenum target, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_366(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_367(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void APIENTRY gl_dispatch_stub_368(GLenum target, GLenum internalformat, GLboolean sink);
void APIENTRY gl_dispatch_stub_369(GLenum target);
void APIENTRY gl_dispatch_stub_370(GLenum target);
void APIENTRY gl_dispatch_stub_371(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
void APIENTRY gl_dispatch_stub_372(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
void APIENTRY gl_dispatch_stub_373(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI void APIENTRY glActiveTexture(GLenum texture);
GLAPI void APIENTRY glClientActiveTexture(GLenum texture);
void APIENTRY gl_dispatch_stub_376(GLenum target, GLdouble s);
void APIENTRY gl_dispatch_stub_377(GLenum target, const GLdouble *v);
void APIENTRY gl_dispatch_stub_378(GLenum target, GLfloat s);
void APIENTRY gl_dispatch_stub_379(GLenum target, const GLfloat *v);
void APIENTRY gl_dispatch_stub_380(GLenum target, GLint s);
void APIENTRY gl_dispatch_stub_381(GLenum target, const GLint *v);
void APIENTRY gl_dispatch_stub_382(GLenum target, GLshort s);
void APIENTRY gl_dispatch_stub_383(GLenum target, const GLshort *v);
void APIENTRY gl_dispatch_stub_384(GLenum target, GLdouble s, GLdouble t);
void APIENTRY gl_dispatch_stub_385(GLenum target, const GLdouble *v);
void APIENTRY gl_dispatch_stub_386(GLenum target, GLfloat s, GLfloat t);
void APIENTRY gl_dispatch_stub_387(GLenum target, const GLfloat *v);
void APIENTRY gl_dispatch_stub_388(GLenum target, GLint s, GLint t);
void APIENTRY gl_dispatch_stub_389(GLenum target, const GLint *v);
void APIENTRY gl_dispatch_stub_390(GLenum target, GLshort s, GLshort t);
void APIENTRY gl_dispatch_stub_391(GLenum target, const GLshort *v);
void APIENTRY gl_dispatch_stub_392(GLenum target, GLdouble s, GLdouble t, GLdouble r);
void APIENTRY gl_dispatch_stub_393(GLenum target, const GLdouble *v);
void APIENTRY gl_dispatch_stub_394(GLenum target, GLfloat s, GLfloat t, GLfloat r);
void APIENTRY gl_dispatch_stub_395(GLenum target, const GLfloat *v);
void APIENTRY gl_dispatch_stub_396(GLenum target, GLint s, GLint t, GLint r);
void APIENTRY gl_dispatch_stub_397(GLenum target, const GLint *v);
void APIENTRY gl_dispatch_stub_398(GLenum target, GLshort s, GLshort t, GLshort r);
void APIENTRY gl_dispatch_stub_399(GLenum target, const GLshort *v);
void APIENTRY gl_dispatch_stub_400(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void APIENTRY gl_dispatch_stub_401(GLenum target, const GLdouble *v);
void APIENTRY gl_dispatch_stub_402(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLAPI void APIENTRY glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void APIENTRY gl_dispatch_stub_403(GLenum target, const GLfloat *v);
void APIENTRY gl_dispatch_stub_404(GLenum target, GLint s, GLint t, GLint r, GLint q);
void APIENTRY gl_dispatch_stub_405(GLenum target, const GLint *v);
void APIENTRY gl_dispatch_stub_406(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void APIENTRY gl_dispatch_stub_407(GLenum target, const GLshort *v);
void APIENTRY gl_dispatch_stub_408(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
GLAPI void APIENTRY glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
void APIENTRY gl_dispatch_stub_410(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
void APIENTRY gl_dispatch_stub_411(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
GLAPI void APIENTRY glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
void APIENTRY gl_dispatch_stub_413(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
void APIENTRY gl_dispatch_stub_414(GLenum target, GLint level, GLvoid *img);
void APIENTRY gl_dispatch_stub_415(const GLdouble *m);
void APIENTRY gl_dispatch_stub_416(const GLfloat *m);
void APIENTRY gl_dispatch_stub_417(const GLdouble *m);
void APIENTRY gl_dispatch_stub_418(const GLfloat *m);
GLAPI void APIENTRY glSampleCoverage(GLclampf value, GLboolean invert);
void APIENTRY gl_dispatch_stub_420(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void APIENTRY gl_dispatch_stub_421(GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_422(GLdouble coord);
void APIENTRY gl_dispatch_stub_423(const GLdouble *coord);
void APIENTRY gl_dispatch_stub_424(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
GLAPI void APIENTRY glMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
GLAPI void APIENTRY glPointParameterf(GLenum pname, GLfloat param);
GLAPI void APIENTRY glPointParameterfv(GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_427(GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_428(GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_429(GLbyte red, GLbyte green, GLbyte blue);
void APIENTRY gl_dispatch_stub_430(const GLbyte *v);
void APIENTRY gl_dispatch_stub_431(GLdouble red, GLdouble green, GLdouble blue);
void APIENTRY gl_dispatch_stub_432(const GLdouble *v);
void APIENTRY gl_dispatch_stub_433(GLint red, GLint green, GLint blue);
void APIENTRY gl_dispatch_stub_434(const GLint *v);
void APIENTRY gl_dispatch_stub_435(GLshort red, GLshort green, GLshort blue);
void APIENTRY gl_dispatch_stub_436(const GLshort *v);
void APIENTRY gl_dispatch_stub_437(GLubyte red, GLubyte green, GLubyte blue);
void APIENTRY gl_dispatch_stub_438(const GLubyte *v);
void APIENTRY gl_dispatch_stub_439(GLuint red, GLuint green, GLuint blue);
void APIENTRY gl_dispatch_stub_440(const GLuint *v);
void APIENTRY gl_dispatch_stub_441(GLushort red, GLushort green, GLushort blue);
void APIENTRY gl_dispatch_stub_442(const GLushort *v);
void APIENTRY gl_dispatch_stub_443(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_444(GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_445(const GLdouble *v);
void APIENTRY gl_dispatch_stub_446(GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_447(const GLfloat *v);
void APIENTRY gl_dispatch_stub_448(GLint x, GLint y);
void APIENTRY gl_dispatch_stub_449(const GLint *v);
void APIENTRY gl_dispatch_stub_450(GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_451(const GLshort *v);
void APIENTRY gl_dispatch_stub_452(GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_453(const GLdouble *v);
void APIENTRY gl_dispatch_stub_454(GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_455(const GLfloat *v);
void APIENTRY gl_dispatch_stub_456(GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_457(const GLint *v);
void APIENTRY gl_dispatch_stub_458(GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_459(const GLshort *v);
void APIENTRY gl_dispatch_stub_460(GLenum target, GLuint id);
GLAPI void APIENTRY glBindBuffer(GLenum target, GLuint buffer);
GLAPI void APIENTRY glBufferData(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
GLAPI void APIENTRY glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);
GLAPI void APIENTRY glDeleteBuffers(GLsizei n, const GLuint *buffer);
void APIENTRY gl_dispatch_stub_465(GLsizei n, const GLuint *ids);
void APIENTRY gl_dispatch_stub_466(GLenum target);
GLAPI void APIENTRY glGenBuffers(GLsizei n, GLuint *buffer);
void APIENTRY gl_dispatch_stub_468(GLsizei n, GLuint *ids);
GLAPI void APIENTRY glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_470(GLenum target, GLenum pname, GLvoid **params);
void APIENTRY gl_dispatch_stub_471(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);
void APIENTRY gl_dispatch_stub_472(GLuint id, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_473(GLuint id, GLenum pname, GLuint *params);
void APIENTRY gl_dispatch_stub_474(GLenum target, GLenum pname, GLint *params);
GLAPI GLboolean APIENTRY glIsBuffer(GLuint buffer);
GLboolean APIENTRY gl_dispatch_stub_476(GLuint id);
GLvoid * APIENTRY gl_dispatch_stub_477(GLenum target, GLenum access);
GLboolean APIENTRY gl_dispatch_stub_478(GLenum target);
void APIENTRY gl_dispatch_stub_479(GLuint program, GLuint shader);
void APIENTRY gl_dispatch_stub_480(GLuint program, GLuint index, const GLchar *name);
void APIENTRY gl_dispatch_stub_481(GLenum modeRGB, GLenum modeA);
void APIENTRY gl_dispatch_stub_482(GLuint shader);
GLuint APIENTRY gl_dispatch_stub_483(void);
GLuint APIENTRY gl_dispatch_stub_484(GLenum type);
void APIENTRY gl_dispatch_stub_485(GLuint program);
void APIENTRY gl_dispatch_stub_486(GLuint program);
void APIENTRY gl_dispatch_stub_487(GLuint program, GLuint shader);
void APIENTRY gl_dispatch_stub_488(GLuint index);
void APIENTRY gl_dispatch_stub_489(GLsizei n, const GLenum *bufs);
void APIENTRY gl_dispatch_stub_490(GLuint index);
void APIENTRY gl_dispatch_stub_491(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
void APIENTRY gl_dispatch_stub_492(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
void APIENTRY gl_dispatch_stub_493(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);
GLint APIENTRY gl_dispatch_stub_494(GLuint program, const GLchar *name);
void APIENTRY gl_dispatch_stub_495(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void APIENTRY gl_dispatch_stub_496(GLuint program, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_497(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void APIENTRY gl_dispatch_stub_498(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
void APIENTRY gl_dispatch_stub_499(GLuint shader, GLenum pname, GLint *params);
GLint APIENTRY gl_dispatch_stub_500(GLuint program, const GLchar *name);
void APIENTRY gl_dispatch_stub_501(GLuint program, GLint location, GLfloat *params);
void APIENTRY gl_dispatch_stub_502(GLuint program, GLint location, GLint *params);
void APIENTRY gl_dispatch_stub_503(GLuint index, GLenum pname, GLvoid **pointer);
void APIENTRY gl_dispatch_stub_504(GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_505(GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_506(GLuint index, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_507(GLuint program);
GLboolean APIENTRY gl_dispatch_stub_508(GLuint shader);
void APIENTRY gl_dispatch_stub_509(GLuint program);
void APIENTRY gl_dispatch_stub_510(GLuint shader, GLsizei count, const GLchar * const *string, const GLint *length);
void APIENTRY gl_dispatch_stub_511(GLenum face, GLenum func, GLint ref, GLuint mask);
void APIENTRY gl_dispatch_stub_512(GLenum face, GLuint mask);
void APIENTRY gl_dispatch_stub_513(GLenum face, GLenum sfail, GLenum zfail, GLenum zpass);
void APIENTRY gl_dispatch_stub_514(GLint location, GLfloat v0);
void APIENTRY gl_dispatch_stub_515(GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_516(GLint location, GLint v0);
void APIENTRY gl_dispatch_stub_517(GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_518(GLint location, GLfloat v0, GLfloat v1);
void APIENTRY gl_dispatch_stub_519(GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_520(GLint location, GLint v0, GLint v1);
void APIENTRY gl_dispatch_stub_521(GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_522(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void APIENTRY gl_dispatch_stub_523(GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_524(GLint location, GLint v0, GLint v1, GLint v2);
void APIENTRY gl_dispatch_stub_525(GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_526(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void APIENTRY gl_dispatch_stub_527(GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_528(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void APIENTRY gl_dispatch_stub_529(GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_530(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_531(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_532(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_533(GLuint program);
void APIENTRY gl_dispatch_stub_534(GLuint program);
void APIENTRY gl_dispatch_stub_535(GLuint index, GLdouble x);
void APIENTRY gl_dispatch_stub_536(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_537(GLuint index, GLshort x);
void APIENTRY gl_dispatch_stub_538(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_539(GLuint index, GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_540(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_541(GLuint index, GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_542(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_543(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_544(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_545(GLuint index, GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_546(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_547(GLuint index, const GLbyte *v);
void APIENTRY gl_dispatch_stub_548(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_549(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_550(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void APIENTRY gl_dispatch_stub_551(GLuint index, const GLubyte *v);
void APIENTRY gl_dispatch_stub_552(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_553(GLuint index, const GLushort *v);
void APIENTRY gl_dispatch_stub_554(GLuint index, const GLbyte *v);
void APIENTRY gl_dispatch_stub_555(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_556(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_557(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_558(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_559(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_560(GLuint index, const GLubyte *v);
void APIENTRY gl_dispatch_stub_561(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_562(GLuint index, const GLushort *v);
void APIENTRY gl_dispatch_stub_563(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_564(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_565(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_566(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_567(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_568(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_569(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_570(GLuint query, GLenum mode);
void APIENTRY gl_dispatch_stub_571(GLenum mode);
void APIENTRY gl_dispatch_stub_572(GLenum target, GLuint index, GLuint buffer);
void APIENTRY gl_dispatch_stub_573(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_574(GLuint program, GLuint colorNumber, const GLchar *name);
void APIENTRY gl_dispatch_stub_575(GLenum target, GLenum clamp);
void APIENTRY gl_dispatch_stub_576(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
void APIENTRY gl_dispatch_stub_577(GLenum buffer, GLint drawbuffer, const GLfloat *value);
void APIENTRY gl_dispatch_stub_578(GLenum buffer, GLint drawbuffer, const GLint *value);
void APIENTRY gl_dispatch_stub_579(GLenum buffer, GLint drawbuffer, const GLuint *value);
void APIENTRY gl_dispatch_stub_580(GLuint buf, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void APIENTRY gl_dispatch_stub_581(GLenum target, GLuint index);
void APIENTRY gl_dispatch_stub_582(GLenum target, GLuint index);
void APIENTRY gl_dispatch_stub_583(void);
void APIENTRY gl_dispatch_stub_584(void);
void APIENTRY gl_dispatch_stub_585(GLenum value, GLuint index, GLboolean *data);
GLint APIENTRY gl_dispatch_stub_586(GLuint program, const GLchar *name);
void APIENTRY gl_dispatch_stub_587(GLenum value, GLuint index, GLint *data);
const GLubyte * APIENTRY gl_dispatch_stub_588(GLenum name, GLuint index);
void APIENTRY gl_dispatch_stub_589(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_590(GLenum target, GLenum pname, GLuint *params);
void APIENTRY gl_dispatch_stub_591(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
void APIENTRY gl_dispatch_stub_592(GLuint program, GLint location, GLuint *params);
void APIENTRY gl_dispatch_stub_593(GLuint index, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_594(GLuint index, GLenum pname, GLuint *params);
GLboolean APIENTRY gl_dispatch_stub_595(GLenum target, GLuint index);
void APIENTRY gl_dispatch_stub_596(GLenum target, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_597(GLenum target, GLenum pname, const GLuint *params);
void APIENTRY gl_dispatch_stub_598(GLuint program, GLsizei count, const GLchar * const *varyings, GLenum bufferMode);
void APIENTRY gl_dispatch_stub_599(GLint location, GLuint x);
void APIENTRY gl_dispatch_stub_600(GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_601(GLint location, GLuint x, GLuint y);
void APIENTRY gl_dispatch_stub_602(GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_603(GLint location, GLuint x, GLuint y, GLuint z);
void APIENTRY gl_dispatch_stub_604(GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_605(GLint location, GLuint x, GLuint y, GLuint z, GLuint w);
void APIENTRY gl_dispatch_stub_606(GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_607(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_608(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_609(GLuint index, const GLbyte *v);
void APIENTRY gl_dispatch_stub_610(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_611(GLuint index, const GLubyte *v);
void APIENTRY gl_dispatch_stub_612(GLuint index, const GLushort *v);
void APIENTRY gl_dispatch_stub_613(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_614(GLuint index);
void APIENTRY gl_dispatch_stub_615(GLenum target, GLenum internalFormat, GLuint buffer);
void APIENTRY gl_dispatch_stub_616(GLenum target, GLenum attachment, GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_617(GLenum target, GLenum pname, GLint64 *params);
void APIENTRY gl_dispatch_stub_618(GLenum cap, GLuint index, GLint64 *data);
void APIENTRY gl_dispatch_stub_619(GLuint index, GLuint divisor);
void APIENTRY gl_dispatch_stub_620(GLfloat value);
void APIENTRY gl_dispatch_stub_621(GLbitfield barriers);
void APIENTRY gl_dispatch_stub_622(GLenum target, GLuint program);
void APIENTRY gl_dispatch_stub_623(GLsizei n, const GLuint *programs);
void APIENTRY gl_dispatch_stub_624(GLsizei n, GLuint *programs);
void APIENTRY gl_dispatch_stub_625(GLenum target, GLuint index, GLdouble *params);
void APIENTRY gl_dispatch_stub_626(GLenum target, GLuint index, GLfloat *params);
void APIENTRY gl_dispatch_stub_627(GLenum target, GLuint index, GLdouble *params);
void APIENTRY gl_dispatch_stub_628(GLenum target, GLuint index, GLfloat *params);
void APIENTRY gl_dispatch_stub_629(GLenum target, GLenum pname, GLvoid *string);
void APIENTRY gl_dispatch_stub_630(GLenum target, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_631(GLuint program);
void APIENTRY gl_dispatch_stub_632(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_633(GLenum target, GLuint index, const GLdouble *params);
void APIENTRY gl_dispatch_stub_634(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_635(GLenum target, GLuint index, const GLfloat *params);
void APIENTRY gl_dispatch_stub_636(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_637(GLenum target, GLuint index, const GLdouble *params);
void APIENTRY gl_dispatch_stub_638(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_639(GLenum target, GLuint index, const GLfloat *params);
void APIENTRY gl_dispatch_stub_640(GLenum target, GLenum format, GLsizei len, const GLvoid *string);
void APIENTRY gl_dispatch_stub_641(GLuint index, GLfloat x);
void APIENTRY gl_dispatch_stub_642(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_643(GLuint index, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_644(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_645(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_646(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_647(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_648(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_649(GLhandleARB containerObj, GLhandleARB obj);
GLhandleARB APIENTRY gl_dispatch_stub_650(void);
GLhandleARB APIENTRY gl_dispatch_stub_651(GLenum shaderType);
void APIENTRY gl_dispatch_stub_652(GLhandleARB obj);
void APIENTRY gl_dispatch_stub_653(GLhandleARB containerObj, GLhandleARB attachedObj);
void APIENTRY gl_dispatch_stub_654(GLhandleARB containerObj, GLsizei maxLength, GLsizei *length, GLhandleARB *infoLog);
GLhandleARB APIENTRY gl_dispatch_stub_655(GLenum pname);
void APIENTRY gl_dispatch_stub_656(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
void APIENTRY gl_dispatch_stub_657(GLhandleARB obj, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_658(GLhandleARB obj, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_659(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void APIENTRY gl_dispatch_stub_660(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);
void APIENTRY gl_dispatch_stub_661(GLenum target, GLuint framebuffer);
void APIENTRY gl_dispatch_stub_662(GLenum target, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_663(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLenum APIENTRY gl_dispatch_stub_664(GLenum target);
void APIENTRY gl_dispatch_stub_665(GLsizei n, const GLuint *framebuffers);
void APIENTRY gl_dispatch_stub_666(GLsizei n, const GLuint *renderbuffers);
void APIENTRY gl_dispatch_stub_667(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_668(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_669(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_670(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint layer);
void APIENTRY gl_dispatch_stub_671(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void APIENTRY gl_dispatch_stub_672(GLsizei n, GLuint *framebuffers);
void APIENTRY gl_dispatch_stub_673(GLsizei n, GLuint *renderbuffers);
void APIENTRY gl_dispatch_stub_674(GLenum target);
void APIENTRY gl_dispatch_stub_675(GLenum target, GLenum attachment, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_676(GLenum target, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_677(GLuint framebuffer);
GLboolean APIENTRY gl_dispatch_stub_678(GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_679(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_680(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_681(GLenum target, GLintptr offset, GLsizeiptr length);
GLvoid * APIENTRY gl_dispatch_stub_682(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
void APIENTRY gl_dispatch_stub_683(GLuint array);
void APIENTRY gl_dispatch_stub_684(GLsizei n, const GLuint *arrays);
void APIENTRY gl_dispatch_stub_685(GLsizei n, GLuint *arrays);
GLboolean APIENTRY gl_dispatch_stub_686(GLuint array);
void APIENTRY gl_dispatch_stub_687(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
void APIENTRY gl_dispatch_stub_688(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_689(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
void APIENTRY gl_dispatch_stub_690(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
GLuint APIENTRY gl_dispatch_stub_691(GLuint program, const GLchar *uniformBlockName);
void APIENTRY gl_dispatch_stub_692(GLuint program, GLsizei uniformCount, const GLchar * const *uniformNames, GLuint *uniformIndices);
void APIENTRY gl_dispatch_stub_693(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
void APIENTRY gl_dispatch_stub_694(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLenum APIENTRY gl_dispatch_stub_695(GLsync sync, GLbitfield flags, GLuint64 timeout);
void APIENTRY gl_dispatch_stub_696(GLsync sync);
GLsync APIENTRY gl_dispatch_stub_697(GLenum condition, GLbitfield flags);
void APIENTRY gl_dispatch_stub_698(GLenum pname, GLint64 *params);
void APIENTRY gl_dispatch_stub_699(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
GLboolean APIENTRY gl_dispatch_stub_700(GLsync sync);
void APIENTRY gl_dispatch_stub_701(GLsync sync, GLbitfield flags, GLuint64 timeout);
void APIENTRY gl_dispatch_stub_702(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);
void APIENTRY gl_dispatch_stub_703(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex);
void APIENTRY gl_dispatch_stub_704(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);
void APIENTRY gl_dispatch_stub_705(GLenum mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount, const GLint *basevertex);
void APIENTRY gl_dispatch_stub_706(GLenum mode);
void APIENTRY gl_dispatch_stub_707(GLenum pname, GLuint index, GLfloat *val);
void APIENTRY gl_dispatch_stub_708(GLuint index, GLbitfield mask);
void APIENTRY gl_dispatch_stub_709(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_710(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_711(GLuint buf, GLenum modeRGB, GLenum modeA);
void APIENTRY gl_dispatch_stub_712(GLuint buf, GLenum mode);
void APIENTRY gl_dispatch_stub_713(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcA, GLenum dstA);
void APIENTRY gl_dispatch_stub_714(GLuint buf, GLenum src, GLenum dst);
void APIENTRY gl_dispatch_stub_715(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
GLint APIENTRY gl_dispatch_stub_716(GLuint program, const GLchar *name);
void APIENTRY gl_dispatch_stub_717(GLuint unit, GLuint sampler);
void APIENTRY gl_dispatch_stub_718(GLsizei count, const GLuint *samplers);
void APIENTRY gl_dispatch_stub_719(GLsizei count, GLuint *samplers);
void APIENTRY gl_dispatch_stub_720(GLuint sampler, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_721(GLuint sampler, GLenum pname, GLuint *params);
void APIENTRY gl_dispatch_stub_722(GLuint sampler, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_723(GLuint sampler, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_724(GLuint sampler);
void APIENTRY gl_dispatch_stub_725(GLuint sampler, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_726(GLuint sampler, GLenum pname, const GLuint *params);
void APIENTRY gl_dispatch_stub_727(GLuint sampler, GLenum pname, GLfloat param);
void APIENTRY gl_dispatch_stub_728(GLuint sampler, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_729(GLuint sampler, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_730(GLuint sampler, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_731(GLuint id, GLenum pname, GLint64 *params);
void APIENTRY gl_dispatch_stub_732(GLuint id, GLenum pname, GLuint64 *params);
void APIENTRY gl_dispatch_stub_733(GLuint id, GLenum target);
void APIENTRY gl_dispatch_stub_734(GLenum type, GLuint color);
void APIENTRY gl_dispatch_stub_735(GLenum type, const GLuint *color);
void APIENTRY gl_dispatch_stub_736(GLenum type, GLuint color);
void APIENTRY gl_dispatch_stub_737(GLenum type, const GLuint *color);
void APIENTRY gl_dispatch_stub_738(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_739(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_740(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_741(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_742(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_743(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_744(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_745(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_746(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_747(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_748(GLenum type, GLuint color);
void APIENTRY gl_dispatch_stub_749(GLenum type, const GLuint *color);
void APIENTRY gl_dispatch_stub_750(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_751(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_752(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_753(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_754(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_755(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_756(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_757(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_758(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_759(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_760(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_761(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_762(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_763(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_764(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_765(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_766(GLenum type, GLuint value);
void APIENTRY gl_dispatch_stub_767(GLenum type, const GLuint *value);
void APIENTRY gl_dispatch_stub_768(GLenum type, GLuint value);
void APIENTRY gl_dispatch_stub_769(GLenum type, const GLuint *value);
void APIENTRY gl_dispatch_stub_770(GLenum type, GLuint value);
void APIENTRY gl_dispatch_stub_771(GLenum type, const GLuint *value);
void APIENTRY gl_dispatch_stub_772(GLenum mode, const GLvoid *indirect);
void APIENTRY gl_dispatch_stub_773(GLenum mode, GLenum type, const GLvoid *indirect);
void APIENTRY gl_dispatch_stub_774(GLuint program, GLint location, GLdouble *params);
void APIENTRY gl_dispatch_stub_775(GLint location, GLdouble x);
void APIENTRY gl_dispatch_stub_776(GLint location, GLsizei count, const GLdouble *value);
void APIENTRY gl_dispatch_stub_777(GLint location, GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_778(GLint location, GLsizei count, const GLdouble *value);
void APIENTRY gl_dispatch_stub_779(GLint location, GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_780(GLint location, GLsizei count, const GLdouble *value);
void APIENTRY gl_dispatch_stub_781(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_782(GLint location, GLsizei count, const GLdouble *value);
void APIENTRY gl_dispatch_stub_783(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_784(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_785(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_786(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_787(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_788(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_789(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_790(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_791(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_792(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
void APIENTRY gl_dispatch_stub_793(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
void APIENTRY gl_dispatch_stub_794(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
void APIENTRY gl_dispatch_stub_795(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
GLuint APIENTRY gl_dispatch_stub_796(GLuint program, GLenum shadertype, const GLchar *name);
GLint APIENTRY gl_dispatch_stub_797(GLuint program, GLenum shadertype, const GLchar *name);
void APIENTRY gl_dispatch_stub_798(GLenum shadertype, GLint location, GLuint *params);
void APIENTRY gl_dispatch_stub_799(GLenum shadertype, GLsizei count, const GLuint *indices);
void APIENTRY gl_dispatch_stub_800(GLenum pname, const GLfloat *values);
void APIENTRY gl_dispatch_stub_801(GLenum pname, GLint value);
void APIENTRY gl_dispatch_stub_802(GLenum target, GLuint id);
void APIENTRY gl_dispatch_stub_803(GLsizei n, const GLuint *ids);
void APIENTRY gl_dispatch_stub_804(GLenum mode, GLuint id);
void APIENTRY gl_dispatch_stub_805(GLsizei n, GLuint *ids);
GLboolean APIENTRY gl_dispatch_stub_806(GLuint id);
void APIENTRY gl_dispatch_stub_807(void);
void APIENTRY gl_dispatch_stub_808(void);
void APIENTRY gl_dispatch_stub_809(GLenum target, GLuint index, GLuint id);
void APIENTRY gl_dispatch_stub_810(GLenum mode, GLuint id, GLuint stream);
void APIENTRY gl_dispatch_stub_811(GLenum target, GLuint index);
void APIENTRY gl_dispatch_stub_812(GLenum target, GLuint index, GLenum pname, GLint *params);
GLAPI void APIENTRY glClearDepthf(GLclampf depth);
GLAPI void APIENTRY glDepthRangef(GLclampf zNear, GLclampf zFar);
void APIENTRY gl_dispatch_stub_815(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
void APIENTRY gl_dispatch_stub_816(void);
void APIENTRY gl_dispatch_stub_817(GLsizei n, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
void APIENTRY gl_dispatch_stub_818(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);
void APIENTRY gl_dispatch_stub_819(GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length);
void APIENTRY gl_dispatch_stub_820(GLuint program, GLenum pname, GLint value);
void APIENTRY gl_dispatch_stub_821(GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_822(GLuint index, GLdouble x);
void APIENTRY gl_dispatch_stub_823(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_824(GLuint index, GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_825(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_826(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_827(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_828(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_829(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_830(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_831(GLuint first, GLsizei count, const GLclampd *v);
void APIENTRY gl_dispatch_stub_832(GLuint index, GLclampd n, GLclampd f);
void APIENTRY gl_dispatch_stub_833(GLenum target, GLuint index, GLdouble *data);
void APIENTRY gl_dispatch_stub_834(GLenum target, GLuint index, GLfloat *data);
void APIENTRY gl_dispatch_stub_835(GLuint first, GLsizei count, const int *v);
void APIENTRY gl_dispatch_stub_836(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_837(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_838(GLuint first, GLsizei count, const GLfloat *v);
void APIENTRY gl_dispatch_stub_839(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
void APIENTRY gl_dispatch_stub_840(GLuint index, const GLfloat *v);
GLenum APIENTRY gl_dispatch_stub_841(void);
void APIENTRY gl_dispatch_stub_842(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
void APIENTRY gl_dispatch_stub_843(GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
void APIENTRY gl_dispatch_stub_844(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
void APIENTRY gl_dispatch_stub_845(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
void APIENTRY gl_dispatch_stub_846(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
void APIENTRY gl_dispatch_stub_847(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
void APIENTRY gl_dispatch_stub_848(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
void APIENTRY gl_dispatch_stub_849(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
void APIENTRY gl_dispatch_stub_850(GLenum map, GLsizei bufSize, GLfloat *values);
void APIENTRY gl_dispatch_stub_851(GLenum map, GLsizei bufSize, GLuint *values);
void APIENTRY gl_dispatch_stub_852(GLenum map, GLsizei bufSize, GLushort *values);
void APIENTRY gl_dispatch_stub_853(GLsizei bufSize, GLubyte *pattern);
void APIENTRY gl_dispatch_stub_854(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
void APIENTRY gl_dispatch_stub_855(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
void APIENTRY gl_dispatch_stub_856(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
void APIENTRY gl_dispatch_stub_857(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
void APIENTRY gl_dispatch_stub_858(GLuint program, GLint location, GLsizei bufSize, GLint *params);
void APIENTRY gl_dispatch_stub_859(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
void APIENTRY gl_dispatch_stub_860(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
void APIENTRY gl_dispatch_stub_861(GLenum mode, GLint first, GLsizei count, GLsizei primcount, GLuint baseinstance);
void APIENTRY gl_dispatch_stub_862(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLuint baseinstance);
void APIENTRY gl_dispatch_stub_863(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex, GLuint baseinstance);
void APIENTRY gl_dispatch_stub_864(GLenum mode, GLuint id, GLsizei primcount);
void APIENTRY gl_dispatch_stub_865(GLenum mode, GLuint id, GLuint stream, GLsizei primcount);
void APIENTRY gl_dispatch_stub_866(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
void APIENTRY gl_dispatch_stub_867(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_868(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
void APIENTRY gl_dispatch_stub_869(GLbitfield barriers);
void APIENTRY gl_dispatch_stub_870(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width);
void APIENTRY gl_dispatch_stub_871(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_872(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_873(GLuint texture, GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width);
void APIENTRY gl_dispatch_stub_874(GLuint texture, GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_875(GLuint texture, GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_876(GLenum target, GLenum internalformat, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_877(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_878(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
void APIENTRY gl_dispatch_stub_879(GLintptr indirect);
void APIENTRY gl_dispatch_stub_880(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void APIENTRY gl_dispatch_stub_881(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
void APIENTRY gl_dispatch_stub_882(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void APIENTRY gl_dispatch_stub_883(GLuint attribindex, GLuint bindingindex);
void APIENTRY gl_dispatch_stub_884(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void APIENTRY gl_dispatch_stub_885(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void APIENTRY gl_dispatch_stub_886(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void APIENTRY gl_dispatch_stub_887(GLuint attribindex, GLuint divisor);
void APIENTRY gl_dispatch_stub_888(GLenum target, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_889(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_890(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
void APIENTRY gl_dispatch_stub_891(GLenum mode, const GLvoid *indirect, GLsizei primcount, GLsizei stride);
void APIENTRY gl_dispatch_stub_892(GLenum mode, GLenum type, const GLvoid *indirect, GLsizei primcount, GLsizei stride);
void APIENTRY gl_dispatch_stub_893(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
GLuint APIENTRY gl_dispatch_stub_894(GLuint program, GLenum programInterface, const GLchar *name);
GLint APIENTRY gl_dispatch_stub_895(GLuint program, GLenum programInterface, const GLchar *name);
GLint APIENTRY gl_dispatch_stub_896(GLuint program, GLenum programInterface, const GLchar *name);
void APIENTRY gl_dispatch_stub_897(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
void APIENTRY gl_dispatch_stub_898(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
void APIENTRY gl_dispatch_stub_899(GLuint program, GLuint shaderStorageBlockIndex, GLuint shaderStorageBlockBinding);
void APIENTRY gl_dispatch_stub_900(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_901(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_902(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_903(GLenum target, GLsizeiptr size, const GLvoid *data, GLbitfield flags);
void APIENTRY gl_dispatch_stub_904(GLuint texture, GLint level, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_905(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_906(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
void APIENTRY gl_dispatch_stub_907(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
void APIENTRY gl_dispatch_stub_908(GLuint first, GLsizei count, const GLuint *textures);
void APIENTRY gl_dispatch_stub_909(GLuint first, GLsizei count, const GLuint *samplers);
void APIENTRY gl_dispatch_stub_910(GLuint first, GLsizei count, const GLuint *textures);
void APIENTRY gl_dispatch_stub_911(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
GLuint64 APIENTRY gl_dispatch_stub_912(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLuint64 APIENTRY gl_dispatch_stub_913(GLuint texture);
GLuint64 APIENTRY gl_dispatch_stub_914(GLuint texture, GLuint sampler);
void APIENTRY gl_dispatch_stub_915(GLuint index, GLenum pname, GLuint64EXT *params);
GLboolean APIENTRY gl_dispatch_stub_916(GLuint64 handle);
GLboolean APIENTRY gl_dispatch_stub_917(GLuint64 handle);
void APIENTRY gl_dispatch_stub_918(GLuint64 handle);
void APIENTRY gl_dispatch_stub_919(GLuint64 handle, GLenum access);
void APIENTRY gl_dispatch_stub_920(GLuint64 handle);
void APIENTRY gl_dispatch_stub_921(GLuint64 handle);
void APIENTRY gl_dispatch_stub_922(GLuint program, GLint location, GLuint64 value);
void APIENTRY gl_dispatch_stub_923(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
void APIENTRY gl_dispatch_stub_924(GLint location, GLuint64 value);
void APIENTRY gl_dispatch_stub_925(GLint location, GLsizei count, const GLuint64 *value);
void APIENTRY gl_dispatch_stub_926(GLuint index, GLuint64EXT x);
void APIENTRY gl_dispatch_stub_927(GLuint index, const GLuint64EXT *v);
void APIENTRY gl_dispatch_stub_928(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
void APIENTRY gl_dispatch_stub_929(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
void APIENTRY gl_dispatch_stub_930(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
void APIENTRY gl_dispatch_stub_931(GLenum origin, GLenum depth);
void APIENTRY gl_dispatch_stub_932(GLuint unit, GLuint texture);
void APIENTRY gl_dispatch_stub_933(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLenum APIENTRY gl_dispatch_stub_934(GLuint framebuffer, GLenum target);
void APIENTRY gl_dispatch_stub_935(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_936(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_937(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
void APIENTRY gl_dispatch_stub_938(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
void APIENTRY gl_dispatch_stub_939(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
void APIENTRY gl_dispatch_stub_940(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
void APIENTRY gl_dispatch_stub_941(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
void APIENTRY gl_dispatch_stub_942(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
void APIENTRY gl_dispatch_stub_943(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
void APIENTRY gl_dispatch_stub_944(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_945(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void APIENTRY gl_dispatch_stub_946(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_947(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_948(GLsizei n, GLuint *buffers);
void APIENTRY gl_dispatch_stub_949(GLsizei n, GLuint *framebuffers);
void APIENTRY gl_dispatch_stub_950(GLsizei n, GLuint *pipelines);
void APIENTRY gl_dispatch_stub_951(GLenum target, GLsizei n, GLuint *ids);
void APIENTRY gl_dispatch_stub_952(GLsizei n, GLuint *renderbuffers);
void APIENTRY gl_dispatch_stub_953(GLsizei n, GLuint *samplers);
void APIENTRY gl_dispatch_stub_954(GLenum target, GLsizei n, GLuint *textures);
void APIENTRY gl_dispatch_stub_955(GLsizei n, GLuint *ids);
void APIENTRY gl_dispatch_stub_956(GLsizei n, GLuint *arrays);
void APIENTRY gl_dispatch_stub_957(GLuint vaobj, GLuint index);
void APIENTRY gl_dispatch_stub_958(GLuint vaobj, GLuint index);
void APIENTRY gl_dispatch_stub_959(GLuint buffer, GLintptr offset, GLsizeiptr length);
void APIENTRY gl_dispatch_stub_960(GLuint texture);
void APIENTRY gl_dispatch_stub_961(GLuint texture, GLint level, GLsizei bufSize, GLvoid *pixels);
void APIENTRY gl_dispatch_stub_962(GLuint buffer, GLenum pname, GLint64 *params);
void APIENTRY gl_dispatch_stub_963(GLuint buffer, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_964(GLuint buffer, GLenum pname, GLvoid **params);
void APIENTRY gl_dispatch_stub_965(GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid *data);
void APIENTRY gl_dispatch_stub_966(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_967(GLuint framebuffer, GLenum pname, GLint *param);
void APIENTRY gl_dispatch_stub_968(GLuint renderbuffer, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_969(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void APIENTRY gl_dispatch_stub_970(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void APIENTRY gl_dispatch_stub_971(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void APIENTRY gl_dispatch_stub_972(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void APIENTRY gl_dispatch_stub_973(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *pixels);
void APIENTRY gl_dispatch_stub_974(GLuint texture, GLint level, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_975(GLuint texture, GLint level, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_976(GLuint texture, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_977(GLuint texture, GLenum pname, GLuint *params);
void APIENTRY gl_dispatch_stub_978(GLuint texture, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_979(GLuint texture, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_980(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
void APIENTRY gl_dispatch_stub_981(GLuint xfb, GLenum pname, GLuint index, GLint *param);
void APIENTRY gl_dispatch_stub_982(GLuint xfb, GLenum pname, GLint *param);
void APIENTRY gl_dispatch_stub_983(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
void APIENTRY gl_dispatch_stub_984(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
void APIENTRY gl_dispatch_stub_985(GLuint vaobj, GLenum pname, GLint *param);
void APIENTRY gl_dispatch_stub_986(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
void APIENTRY gl_dispatch_stub_987(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLvoid * APIENTRY gl_dispatch_stub_988(GLuint buffer, GLenum access);
GLvoid * APIENTRY gl_dispatch_stub_989(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
void APIENTRY gl_dispatch_stub_990(GLuint buffer, GLsizeiptr size, const GLvoid *data, GLenum usage);
void APIENTRY gl_dispatch_stub_991(GLuint buffer, GLsizeiptr size, const GLvoid *data, GLbitfield flags);
void APIENTRY gl_dispatch_stub_992(GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data);
void APIENTRY gl_dispatch_stub_993(GLuint framebuffer, GLenum buf);
void APIENTRY gl_dispatch_stub_994(GLuint framebuffer, GLsizei n, const GLenum *bufs);
void APIENTRY gl_dispatch_stub_995(GLuint framebuffer, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_996(GLuint framebuffer, GLenum buf);
void APIENTRY gl_dispatch_stub_997(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_998(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_999(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
void APIENTRY gl_dispatch_stub_1000(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_1001(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_1002(GLuint texture, GLenum internalformat, GLuint buffer);
void APIENTRY gl_dispatch_stub_1003(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_1004(GLuint texture, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_1005(GLuint texture, GLenum pname, const GLuint *params);
void APIENTRY gl_dispatch_stub_1006(GLuint texture, GLenum pname, GLfloat param);
void APIENTRY gl_dispatch_stub_1007(GLuint texture, GLenum pname, const GLfloat *param);
void APIENTRY gl_dispatch_stub_1008(GLuint texture, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_1009(GLuint texture, GLenum pname, const GLint *param);
void APIENTRY gl_dispatch_stub_1010(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
void APIENTRY gl_dispatch_stub_1011(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_1012(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_1013(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_1014(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_1015(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
void APIENTRY gl_dispatch_stub_1016(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
void APIENTRY gl_dispatch_stub_1017(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
void APIENTRY gl_dispatch_stub_1018(GLuint xfb, GLuint index, GLuint buffer);
void APIENTRY gl_dispatch_stub_1019(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLboolean APIENTRY gl_dispatch_stub_1020(GLuint buffer);
void APIENTRY gl_dispatch_stub_1021(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
void APIENTRY gl_dispatch_stub_1022(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void APIENTRY gl_dispatch_stub_1023(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void APIENTRY gl_dispatch_stub_1024(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void APIENTRY gl_dispatch_stub_1025(GLuint vaobj, GLuint bindingindex, GLuint divisor);
void APIENTRY gl_dispatch_stub_1026(GLuint vaobj, GLuint buffer);
void APIENTRY gl_dispatch_stub_1027(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void APIENTRY gl_dispatch_stub_1028(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
void APIENTRY gl_dispatch_stub_1029(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, GLvoid *pixels);
void APIENTRY gl_dispatch_stub_1030(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, GLvoid *pixels);
void APIENTRY gl_dispatch_stub_1031(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
void APIENTRY gl_dispatch_stub_1032(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
void APIENTRY gl_dispatch_stub_1033(GLuint program, GLint location, GLint64 *params);
void APIENTRY gl_dispatch_stub_1034(GLuint program, GLint location, GLuint64 *params);
void APIENTRY gl_dispatch_stub_1035(GLuint program, GLint location, GLsizei bufSize, GLint64 *params);
void APIENTRY gl_dispatch_stub_1036(GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);
void APIENTRY gl_dispatch_stub_1037(GLuint program, GLint location, GLint64 x);
void APIENTRY gl_dispatch_stub_1038(GLuint program, GLint location, GLsizei count, const GLint64 *value);
void APIENTRY gl_dispatch_stub_1039(GLuint program, GLint location, GLuint64 x);
void APIENTRY gl_dispatch_stub_1040(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
void APIENTRY gl_dispatch_stub_1041(GLuint program, GLint location, GLint64 x, GLint64 y);
void APIENTRY gl_dispatch_stub_1042(GLuint program, GLint location, GLsizei count, const GLint64 *value);
void APIENTRY gl_dispatch_stub_1043(GLuint program, GLint location, GLuint64 x, GLuint64 y);
void APIENTRY gl_dispatch_stub_1044(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
void APIENTRY gl_dispatch_stub_1045(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
void APIENTRY gl_dispatch_stub_1046(GLuint program, GLint location, GLsizei count, const GLint64 *value);
void APIENTRY gl_dispatch_stub_1047(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
void APIENTRY gl_dispatch_stub_1048(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
void APIENTRY gl_dispatch_stub_1049(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
void APIENTRY gl_dispatch_stub_1050(GLuint program, GLint location, GLsizei count, const GLint64 *value);
void APIENTRY gl_dispatch_stub_1051(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
void APIENTRY gl_dispatch_stub_1052(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
void APIENTRY gl_dispatch_stub_1053(GLint location, GLint64 x);
void APIENTRY gl_dispatch_stub_1054(GLint location, GLsizei count, const GLint64 *value);
void APIENTRY gl_dispatch_stub_1055(GLint location, GLuint64 x);
void APIENTRY gl_dispatch_stub_1056(GLint location, GLsizei count, const GLuint64 *value);
void APIENTRY gl_dispatch_stub_1057(GLint location, GLint64 x, GLint64 y);
void APIENTRY gl_dispatch_stub_1058(GLint location, GLsizei count, const GLint64 *value);
void APIENTRY gl_dispatch_stub_1059(GLint location, GLuint64 x, GLuint64 y);
void APIENTRY gl_dispatch_stub_1060(GLint location, GLsizei count, const GLuint64 *value);
void APIENTRY gl_dispatch_stub_1061(GLint location, GLint64 x, GLint64 y, GLint64 z);
void APIENTRY gl_dispatch_stub_1062(GLint location, GLsizei count, const GLint64 *value);
void APIENTRY gl_dispatch_stub_1063(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
void APIENTRY gl_dispatch_stub_1064(GLint location, GLsizei count, const GLuint64 *value);
void APIENTRY gl_dispatch_stub_1065(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
void APIENTRY gl_dispatch_stub_1066(GLint location, GLsizei count, const GLint64 *value);
void APIENTRY gl_dispatch_stub_1067(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
void APIENTRY gl_dispatch_stub_1068(GLint location, GLsizei count, const GLuint64 *value);
void APIENTRY gl_dispatch_stub_1069(GLuint buffer);
void APIENTRY gl_dispatch_stub_1070(GLuint buffer, GLintptr offset, GLsizeiptr length);
void APIENTRY gl_dispatch_stub_1071(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void APIENTRY gl_dispatch_stub_1072(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_1073(GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_1074(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_1075(GLfloat factor, GLfloat bias);
void APIENTRY gl_dispatch_stub_1076(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
void APIENTRY gl_dispatch_stub_1077(const GLfloat *coords);
void APIENTRY gl_dispatch_stub_1078(GLint x, GLint y, GLint z, GLint width, GLint height);
void APIENTRY gl_dispatch_stub_1079(const GLint *coords);
void APIENTRY gl_dispatch_stub_1080(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
void APIENTRY gl_dispatch_stub_1081(const GLshort *coords);
void APIENTRY gl_dispatch_stub_1082(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
void APIENTRY gl_dispatch_stub_1083(const GLfixed *coords);
GLAPI void APIENTRY glPointSizePointerOES(GLenum type, GLsizei stride, const GLvoid *pointer);
GLbitfield APIENTRY gl_dispatch_stub_1085(GLfixed *mantissa, GLint *exponent);
void APIENTRY gl_dispatch_stub_1086(GLclampf value, GLboolean invert);
void APIENTRY gl_dispatch_stub_1087(GLenum pattern);
void APIENTRY gl_dispatch_stub_1088(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_1089(GLsizei stride, GLsizei count, const GLboolean *pointer);
void APIENTRY gl_dispatch_stub_1090(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_1091(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_1092(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_1093(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_1094(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void APIENTRY gl_dispatch_stub_1095(GLuint pipeline, GLuint program);
void APIENTRY gl_dispatch_stub_1096(GLuint pipeline);
GLuint APIENTRY gl_dispatch_stub_1097(GLenum type, GLsizei count, const GLchar * const *strings);
void APIENTRY gl_dispatch_stub_1098(GLsizei n, const GLuint *pipelines);
void APIENTRY gl_dispatch_stub_1099(GLsizei n, GLuint *pipelines);
void APIENTRY gl_dispatch_stub_1100(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void APIENTRY gl_dispatch_stub_1101(GLuint pipeline, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_1102(GLuint pipeline);
void APIENTRY gl_dispatch_stub_1103(GLint first, GLsizei count);
void APIENTRY gl_dispatch_stub_1104(GLuint program, GLint location, GLdouble x);
void APIENTRY gl_dispatch_stub_1105(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1106(GLuint program, GLint location, GLfloat x);
void APIENTRY gl_dispatch_stub_1107(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1108(GLuint program, GLint location, GLint x);
void APIENTRY gl_dispatch_stub_1109(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_1110(GLuint program, GLint location, GLuint x);
void APIENTRY gl_dispatch_stub_1111(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_1112(GLuint program, GLint location, GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_1113(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1114(GLuint program, GLint location, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_1115(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1116(GLuint program, GLint location, GLint x, GLint y);
void APIENTRY gl_dispatch_stub_1117(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_1118(GLuint program, GLint location, GLuint x, GLuint y);
void APIENTRY gl_dispatch_stub_1119(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_1120(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_1121(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1122(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_1123(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1124(GLuint program, GLint location, GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_1125(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_1126(GLuint program, GLint location, GLuint x, GLuint y, GLuint z);
void APIENTRY gl_dispatch_stub_1127(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_1128(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_1129(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1130(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_1131(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1132(GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_1133(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_1134(GLuint program, GLint location, GLuint x, GLuint y, GLuint z, GLuint w);
void APIENTRY gl_dispatch_stub_1135(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_1136(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1137(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1138(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1139(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1140(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1141(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1142(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1143(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1144(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1145(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1146(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1147(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1148(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1149(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1150(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1151(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1152(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void APIENTRY gl_dispatch_stub_1153(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1154(void);
void APIENTRY gl_dispatch_stub_1155(GLuint pipeline, GLbitfield stages, GLuint program);
void APIENTRY gl_dispatch_stub_1156(GLuint pipeline);
void APIENTRY gl_dispatch_stub_1157(GLDEBUGPROC callback, const GLvoid *userParam);
void APIENTRY gl_dispatch_stub_1158(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void APIENTRY gl_dispatch_stub_1159(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
GLuint APIENTRY gl_dispatch_stub_1160(GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
void APIENTRY gl_dispatch_stub_1161(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
void APIENTRY gl_dispatch_stub_1162(const GLvoid *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
void APIENTRY gl_dispatch_stub_1163(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
void APIENTRY gl_dispatch_stub_1164(const GLvoid *ptr, GLsizei length, const GLchar *label);
void APIENTRY gl_dispatch_stub_1165(void);
void APIENTRY gl_dispatch_stub_1166(GLenum source, GLuint id, GLsizei length, const GLchar *message);
void APIENTRY gl_dispatch_stub_1167(GLfloat red, GLfloat green, GLfloat blue);
void APIENTRY gl_dispatch_stub_1168(const GLfloat *v);
GLAPI void APIENTRY glMultiDrawElementsEXT(GLenum mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount);
void APIENTRY gl_dispatch_stub_1170(GLfloat coord);
void APIENTRY gl_dispatch_stub_1171(const GLfloat *coord);
void APIENTRY gl_dispatch_stub_1172(void);
void APIENTRY gl_dispatch_stub_1173(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_1174(const GLdouble *v);
void APIENTRY gl_dispatch_stub_1175(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_1176(const GLfloat *v);
void APIENTRY gl_dispatch_stub_1177(GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_1178(const GLint *v);
void APIENTRY gl_dispatch_stub_1179(GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_1180(const GLshort *v);
void APIENTRY gl_dispatch_stub_1181(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
void APIENTRY gl_dispatch_stub_1182(const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount, GLint modestride);
GLboolean APIENTRY gl_dispatch_stub_1183(GLsizei n, const GLuint *ids, GLboolean *residences);
void APIENTRY gl_dispatch_stub_1184(GLenum target, GLuint id, const GLfloat *params);
void APIENTRY gl_dispatch_stub_1185(GLenum target, GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_1186(GLenum target, GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_1187(GLuint id, GLenum pname, GLubyte *program);
void APIENTRY gl_dispatch_stub_1188(GLuint id, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_1189(GLenum target, GLuint address, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_1190(GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_1191(GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_1192(GLuint index, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_1193(GLenum target, GLuint id, GLsizei len, const GLubyte *program);
void APIENTRY gl_dispatch_stub_1194(GLenum target, GLuint index, GLsizei num, const GLdouble *params);
void APIENTRY gl_dispatch_stub_1195(GLenum target, GLuint index, GLsizei num, const GLfloat *params);
void APIENTRY gl_dispatch_stub_1196(GLsizei n, const GLuint *ids);
void APIENTRY gl_dispatch_stub_1197(GLenum target, GLuint address, GLenum matrix, GLenum transform);
void APIENTRY gl_dispatch_stub_1198(GLuint index, GLdouble x);
void APIENTRY gl_dispatch_stub_1199(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1200(GLuint index, GLfloat x);
void APIENTRY gl_dispatch_stub_1201(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1202(GLuint index, GLshort x);
void APIENTRY gl_dispatch_stub_1203(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_1204(GLuint index, GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_1205(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1206(GLuint index, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_1207(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1208(GLuint index, GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_1209(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_1210(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_1211(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1212(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_1213(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1214(GLuint index, GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_1215(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_1216(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_1217(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1218(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_1219(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1220(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_1221(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_1222(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void APIENTRY gl_dispatch_stub_1223(GLuint index, const GLubyte *v);
void APIENTRY gl_dispatch_stub_1224(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_1225(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1226(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1227(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1228(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1229(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1230(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1231(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1232(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1233(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1234(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1235(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1236(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1237(GLuint index, GLsizei n, const GLubyte *v);
void APIENTRY gl_dispatch_stub_1238(GLenum pname, GLfloat *param);
void APIENTRY gl_dispatch_stub_1239(GLenum pname, GLint *param);
void APIENTRY gl_dispatch_stub_1240(GLenum pname, const GLfloat *param);
void APIENTRY gl_dispatch_stub_1241(GLenum pname, const GLint *param);
void APIENTRY gl_dispatch_stub_1242(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void APIENTRY gl_dispatch_stub_1243(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void APIENTRY gl_dispatch_stub_1244(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void APIENTRY gl_dispatch_stub_1245(void);
void APIENTRY gl_dispatch_stub_1246(GLuint id);
void APIENTRY gl_dispatch_stub_1247(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void APIENTRY gl_dispatch_stub_1248(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void APIENTRY gl_dispatch_stub_1249(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void APIENTRY gl_dispatch_stub_1250(GLuint id);
void APIENTRY gl_dispatch_stub_1251(void);
GLuint APIENTRY gl_dispatch_stub_1252(GLuint range);
void APIENTRY gl_dispatch_stub_1253(GLuint dst, GLuint coord, GLenum swizzle);
void APIENTRY gl_dispatch_stub_1254(GLuint dst, GLuint interp, GLenum swizzle);
void APIENTRY gl_dispatch_stub_1255(GLuint dst, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1256(GLuint first, GLsizei count, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1257(GLuint index, GLfloat n, GLfloat f);
void APIENTRY gl_dispatch_stub_1258(GLenum face);
void APIENTRY gl_dispatch_stub_1259(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
void APIENTRY gl_dispatch_stub_1260(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
void APIENTRY gl_dispatch_stub_1261(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_1262(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1263(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_1264(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1265(void);
void APIENTRY gl_dispatch_stub_1266(GLenum coord, GLenum pname, GLfixed *params);
void APIENTRY gl_dispatch_stub_1267(GLenum coord, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_1268(GLenum coord, GLenum pname, const GLfixed *params);
void APIENTRY gl_dispatch_stub_1269(GLclampd zmin, GLclampd zmax);
void APIENTRY gl_dispatch_stub_1270(GLenum target, GLuint framebuffer);
void APIENTRY gl_dispatch_stub_1271(GLenum target, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_1272(GLsizei len, const GLvoid *string);
void APIENTRY gl_dispatch_stub_1273(GLenum target, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_1274(GLenum target, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_1275(GLuint index, GLint x);
void APIENTRY gl_dispatch_stub_1276(GLuint index, GLuint x);
void APIENTRY gl_dispatch_stub_1277(GLuint index, GLint x, GLint y);
void APIENTRY gl_dispatch_stub_1278(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_1279(GLuint index, GLuint x, GLuint y);
void APIENTRY gl_dispatch_stub_1280(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_1281(GLuint index, GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_1282(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_1283(GLuint index, GLuint x, GLuint y, GLuint z);
void APIENTRY gl_dispatch_stub_1284(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_1285(GLuint index, GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_1286(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_1287(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void APIENTRY gl_dispatch_stub_1288(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_1289(GLint r, GLint g, GLint b, GLint a);
void APIENTRY gl_dispatch_stub_1290(GLuint r, GLuint g, GLuint b, GLuint a);
void APIENTRY gl_dispatch_stub_1291(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void APIENTRY gl_dispatch_stub_1292(GLuint monitor);
void APIENTRY gl_dispatch_stub_1293(GLsizei n, GLuint *monitors);
void APIENTRY gl_dispatch_stub_1294(GLuint monitor);
void APIENTRY gl_dispatch_stub_1295(GLsizei n, GLuint *monitors);
void APIENTRY gl_dispatch_stub_1296(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
void APIENTRY gl_dispatch_stub_1297(GLuint group, GLuint counter, GLenum pname, GLvoid *data);
void APIENTRY gl_dispatch_stub_1298(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
void APIENTRY gl_dispatch_stub_1299(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei countersSize, GLuint *counters);
void APIENTRY gl_dispatch_stub_1300(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
void APIENTRY gl_dispatch_stub_1301(GLint *numGroups, GLsizei groupsSize, GLuint *groups);
void APIENTRY gl_dispatch_stub_1302(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
void APIENTRY gl_dispatch_stub_1303(GLenum objectType, GLuint name, GLenum pname, GLint *value);
GLenum APIENTRY gl_dispatch_stub_1304(GLenum objectType, GLuint name, GLenum option);
GLenum APIENTRY gl_dispatch_stub_1305(GLenum objectType, GLuint name, GLenum option);
void APIENTRY gl_dispatch_stub_1306(GLuint program);
GLuint APIENTRY gl_dispatch_stub_1307(GLenum type, const GLchar *string);
void APIENTRY gl_dispatch_stub_1308(GLenum type, GLuint program);
void APIENTRY gl_dispatch_stub_1309(void);
void APIENTRY gl_dispatch_stub_1310(void);
void APIENTRY gl_dispatch_stub_1311(GLintptr surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
void APIENTRY gl_dispatch_stub_1312(const GLvoid *vdpDevice, const GLvoid *getProcAddress);
GLboolean APIENTRY gl_dispatch_stub_1313(GLintptr surface);
void APIENTRY gl_dispatch_stub_1314(GLsizei numSurfaces, const GLintptr *surfaces);
GLintptr APIENTRY gl_dispatch_stub_1315(const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
GLintptr APIENTRY gl_dispatch_stub_1316(const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
void APIENTRY gl_dispatch_stub_1317(GLintptr surface, GLenum access);
void APIENTRY gl_dispatch_stub_1318(GLsizei numSurfaces, const GLintptr *surfaces);
void APIENTRY gl_dispatch_stub_1319(GLintptr surface);
void APIENTRY gl_dispatch_stub_1320(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1321(GLuint queryId, GLuint *queryHandle);
void APIENTRY gl_dispatch_stub_1322(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1323(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1324(GLuint *queryId);
void APIENTRY gl_dispatch_stub_1325(GLuint queryId, GLuint *nextQueryId);
void APIENTRY gl_dispatch_stub_1326(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
void APIENTRY gl_dispatch_stub_1327(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
void APIENTRY gl_dispatch_stub_1328(GLchar *queryName, GLuint *queryId);
void APIENTRY gl_dispatch_stub_1329(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
void APIENTRY gl_dispatch_stub_1330(GLfloat factor, GLfloat units, GLfloat clamp);
void APIENTRY gl_dispatch_stub_1331(GLenum mode, GLsizei count, const GLint *box);
void APIENTRY gl_dispatch_stub_1332(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1333(GLsizei n, GLuint *memoryObjects);
void APIENTRY gl_dispatch_stub_1334(GLsizei n, const GLuint *memoryObjects);
void APIENTRY gl_dispatch_stub_1335(GLsizei n, const GLuint *semaphores);
void APIENTRY gl_dispatch_stub_1336(GLsizei n, GLuint *semaphores);
void APIENTRY gl_dispatch_stub_1337(GLuint memoryObject, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_1338(GLuint semaphore, GLenum pname, GLuint64 *params);
void APIENTRY gl_dispatch_stub_1339(GLenum target, GLuint index, GLubyte *data);
void APIENTRY gl_dispatch_stub_1340(GLenum pname, GLubyte *data);
GLboolean APIENTRY gl_dispatch_stub_1341(GLuint memoryObject);
GLboolean APIENTRY gl_dispatch_stub_1342(GLuint semaphore);
void APIENTRY gl_dispatch_stub_1343(GLuint memoryObject, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_1344(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1345(GLuint semaphore, GLenum pname, const GLuint64 *params);
void APIENTRY gl_dispatch_stub_1346(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts);
void APIENTRY gl_dispatch_stub_1347(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1348(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1349(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1350(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1351(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1352(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1353(GLenum texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1354(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1355(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1356(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
void APIENTRY gl_dispatch_stub_1357(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts);
void APIENTRY gl_dispatch_stub_1358(GLuint memory, GLuint64 size, GLenum handleType, GLint fd);
void APIENTRY gl_dispatch_stub_1359(GLuint semaphore, GLenum handleType, GLint fd);
void APIENTRY gl_dispatch_stub_1360(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
void APIENTRY gl_dispatch_stub_1361(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
void APIENTRY gl_dispatch_stub_1362(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
void APIENTRY gl_dispatch_stub_1363(GLenum target, GLvoid *writeOffset);
void APIENTRY gl_dispatch_stub_1364(GLenum target, GLvoid *writeOffset);
GLAPI void APIENTRY glAlphaFuncx(GLenum func, GLclampx ref);
GLAPI void APIENTRY glClearColorx(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha);
GLAPI void APIENTRY glClearDepthx(GLclampx depth);
GLAPI void APIENTRY glColor4x(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLAPI void APIENTRY glDepthRangex(GLclampx zNear, GLclampx zFar);
GLAPI void APIENTRY glFogx(GLenum pname, GLfixed param);
GLAPI void APIENTRY glFogxv(GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glFrustumf(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
GLAPI void APIENTRY glFrustumx(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
GLAPI void APIENTRY glLightModelx(GLenum pname, GLfixed param);
GLAPI void APIENTRY glLightModelxv(GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glLightx(GLenum light, GLenum pname, GLfixed param);
GLAPI void APIENTRY glLightxv(GLenum light, GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glLineWidthx(GLfixed width);
GLAPI void APIENTRY glLoadMatrixx(const GLfixed *m);
GLAPI void APIENTRY glMaterialx(GLenum face, GLenum pname, GLfixed param);
GLAPI void APIENTRY glMaterialxv(GLenum face, GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glMultMatrixx(const GLfixed *m);
GLAPI void APIENTRY glMultiTexCoord4x(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLAPI void APIENTRY glNormal3x(GLfixed nx, GLfixed ny, GLfixed nz);
GLAPI void APIENTRY glOrthof(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
GLAPI void APIENTRY glOrthox(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
GLAPI void APIENTRY glPointSizex(GLfixed size);
GLAPI void APIENTRY glPolygonOffsetx(GLfixed factor, GLfixed units);
GLAPI void APIENTRY glRotatex(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
GLAPI void APIENTRY glSampleCoveragex(GLclampx value, GLboolean invert);
GLAPI void APIENTRY glScalex(GLfixed x, GLfixed y, GLfixed z);
GLAPI void APIENTRY glTexEnvx(GLenum target, GLenum pname, GLfixed param);
GLAPI void APIENTRY glTexEnvxv(GLenum target, GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glTexParameterx(GLenum target, GLenum pname, GLfixed param);
GLAPI void APIENTRY glTranslatex(GLfixed x, GLfixed y, GLfixed z);
GLAPI void APIENTRY glClipPlanef(GLenum plane, const GLfloat *equation);
GLAPI void APIENTRY glClipPlanex(GLenum plane, const GLfixed *equation);
GLAPI void APIENTRY glGetClipPlanef(GLenum plane, GLfloat *equation);
GLAPI void APIENTRY glGetClipPlanex(GLenum plane, GLfixed *equation);
GLAPI void APIENTRY glGetFixedv(GLenum pname, GLfixed *params);
GLAPI void APIENTRY glGetLightxv(GLenum light, GLenum pname, GLfixed *params);
GLAPI void APIENTRY glGetMaterialxv(GLenum face, GLenum pname, GLfixed *params);
GLAPI void APIENTRY glGetTexEnvxv(GLenum target, GLenum pname, GLfixed *params);
GLAPI void APIENTRY glGetTexParameterxv(GLenum target, GLenum pname, GLfixed *params);
GLAPI void APIENTRY glPointParameterx(GLenum pname, GLfixed param);
GLAPI void APIENTRY glPointParameterxv(GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glTexParameterxv(GLenum target, GLenum pname, const GLfixed *params);
void APIENTRY gl_dispatch_stub_1408(void);
void APIENTRY gl_dispatch_stub_1409(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
#undef MAPI_TMP_DEFINES
#endif /* MAPI_TMP_DEFINES */

#ifdef MAPI_TMP_PUBLIC_ENTRIES_NO_HIDDEN
GLAPI void APIENTRY glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[29];
   ((void (APIENTRY *)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[35];
   ((void (APIENTRY *)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[56];
   ((void (APIENTRY *)(GLfloat nx, GLfloat ny, GLfloat nz)) _func)(nx, ny, nz);
}

GLAPI void APIENTRY glCullFace(GLenum mode)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[152];
   ((void (APIENTRY *)(GLenum mode)) _func)(mode);
}

GLAPI void APIENTRY glFogf(GLenum pname, GLfloat param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[153];
   ((void (APIENTRY *)(GLenum pname, GLfloat param)) _func)(pname, param);
}

GLAPI void APIENTRY glFogfv(GLenum pname, const GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[154];
   ((void (APIENTRY *)(GLenum pname, const GLfloat *params)) _func)(pname, params);
}

GLAPI void APIENTRY glFrontFace(GLenum mode)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[157];
   ((void (APIENTRY *)(GLenum mode)) _func)(mode);
}

GLAPI void APIENTRY glHint(GLenum target, GLenum mode)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[158];
   ((void (APIENTRY *)(GLenum target, GLenum mode)) _func)(target, mode);
}

GLAPI void APIENTRY glLightf(GLenum light, GLenum pname, GLfloat param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[159];
   ((void (APIENTRY *)(GLenum light, GLenum pname, GLfloat param)) _func)(light, pname, param);
}

GLAPI void APIENTRY glLightfv(GLenum light, GLenum pname, const GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[160];
   ((void (APIENTRY *)(GLenum light, GLenum pname, const GLfloat *params)) _func)(light, pname, params);
}

GLAPI void APIENTRY glLightModelf(GLenum pname, GLfloat param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[163];
   ((void (APIENTRY *)(GLenum pname, GLfloat param)) _func)(pname, param);
}

GLAPI void APIENTRY glLightModelfv(GLenum pname, const GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[164];
   ((void (APIENTRY *)(GLenum pname, const GLfloat *params)) _func)(pname, params);
}

GLAPI void APIENTRY glLineWidth(GLfloat width)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[168];
   ((void (APIENTRY *)(GLfloat width)) _func)(width);
}

GLAPI void APIENTRY glMaterialf(GLenum face, GLenum pname, GLfloat param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[169];
   ((void (APIENTRY *)(GLenum face, GLenum pname, GLfloat param)) _func)(face, pname, param);
}

GLAPI void APIENTRY glMaterialfv(GLenum face, GLenum pname, const GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[170];
   ((void (APIENTRY *)(GLenum face, GLenum pname, const GLfloat *params)) _func)(face, pname, params);
}

GLAPI void APIENTRY glPointSize(GLfloat size)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[173];
   ((void (APIENTRY *)(GLfloat size)) _func)(size);
}

GLAPI void APIENTRY glScissor(GLint x, GLint y, GLsizei width, GLsizei height)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[176];
   ((void (APIENTRY *)(GLint x, GLint y, GLsizei width, GLsizei height)) _func)(x, y, width, height);
}

GLAPI void APIENTRY glShadeModel(GLenum mode)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[177];
   ((void (APIENTRY *)(GLenum mode)) _func)(mode);
}

GLAPI void APIENTRY glTexParameterf(GLenum target, GLenum pname, GLfloat param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[178];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfloat param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexParameterfv(GLenum target, GLenum pname, const GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[179];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLfloat *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glTexParameteri(GLenum target, GLenum pname, GLint param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[180];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLint param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexParameteriv(GLenum target, GLenum pname, const GLint *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[181];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLint *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[183];
   ((void (APIENTRY *)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)) _func)(target, level, internalformat, width, height, border, format, type, pixels);
}

GLAPI void APIENTRY glTexEnvf(GLenum target, GLenum pname, GLfloat param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[184];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfloat param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexEnvfv(GLenum target, GLenum pname, const GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[185];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLfloat *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glTexEnvi(GLenum target, GLenum pname, GLint param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[186];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLint param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexEnviv(GLenum target, GLenum pname, const GLint *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[187];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLint *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glClear(GLbitfield mask)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[203];
   ((void (APIENTRY *)(GLbitfield mask)) _func)(mask);
}

GLAPI void APIENTRY glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[206];
   ((void (APIENTRY *)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glClearStencil(GLint s)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[207];
   ((void (APIENTRY *)(GLint s)) _func)(s);
}

GLAPI void APIENTRY glStencilMask(GLuint mask)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[209];
   ((void (APIENTRY *)(GLuint mask)) _func)(mask);
}

GLAPI void APIENTRY glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[210];
   ((void (APIENTRY *)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glDepthMask(GLboolean flag)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[211];
   ((void (APIENTRY *)(GLboolean flag)) _func)(flag);
}

GLAPI void APIENTRY glDisable(GLenum cap)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[214];
   ((void (APIENTRY *)(GLenum cap)) _func)(cap);
}

GLAPI void APIENTRY glEnable(GLenum cap)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[215];
   ((void (APIENTRY *)(GLenum cap)) _func)(cap);
}

GLAPI void APIENTRY glFinish(void)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[216];
   ((void (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glFlush(void)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[217];
   ((void (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glAlphaFunc(GLenum func, GLclampf ref)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[240];
   ((void (APIENTRY *)(GLenum func, GLclampf ref)) _func)(func, ref);
}

GLAPI void APIENTRY glBlendFunc(GLenum sfactor, GLenum dfactor)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[241];
   ((void (APIENTRY *)(GLenum sfactor, GLenum dfactor)) _func)(sfactor, dfactor);
}

GLAPI void APIENTRY glLogicOp(GLenum opcode)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[242];
   ((void (APIENTRY *)(GLenum opcode)) _func)(opcode);
}

GLAPI void APIENTRY glStencilFunc(GLenum func, GLint ref, GLuint mask)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[243];
   ((void (APIENTRY *)(GLenum func, GLint ref, GLuint mask)) _func)(func, ref, mask);
}

GLAPI void APIENTRY glStencilOp(GLenum fail, GLenum zfail, GLenum zpass)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[244];
   ((void (APIENTRY *)(GLenum fail, GLenum zfail, GLenum zpass)) _func)(fail, zfail, zpass);
}

GLAPI void APIENTRY glDepthFunc(GLenum func)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[245];
   ((void (APIENTRY *)(GLenum func)) _func)(func);
}

GLAPI void APIENTRY glPixelStorei(GLenum pname, GLint param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[250];
   ((void (APIENTRY *)(GLenum pname, GLint param)) _func)(pname, param);
}

GLAPI void APIENTRY glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[256];
   ((void (APIENTRY *)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)) _func)(x, y, width, height, format, type, pixels);
}

GLAPI void APIENTRY glGetBooleanv(GLenum pname, GLboolean *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[258];
   ((void (APIENTRY *)(GLenum pname, GLboolean *params)) _func)(pname, params);
}

GLAPI GLenum APIENTRY glGetError(void)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[261];
   return ((GLenum (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glGetFloatv(GLenum pname, GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[262];
   ((void (APIENTRY *)(GLenum pname, GLfloat *params)) _func)(pname, params);
}

GLAPI void APIENTRY glGetIntegerv(GLenum pname, GLint *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[263];
   ((void (APIENTRY *)(GLenum pname, GLint *params)) _func)(pname, params);
}

GLAPI void APIENTRY glGetLightfv(GLenum light, GLenum pname, GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[264];
   ((void (APIENTRY *)(GLenum light, GLenum pname, GLfloat *params)) _func)(light, pname, params);
}

GLAPI void APIENTRY glGetMaterialfv(GLenum face, GLenum pname, GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[269];
   ((void (APIENTRY *)(GLenum face, GLenum pname, GLfloat *params)) _func)(face, pname, params);
}

GLAPI const GLubyte * APIENTRY glGetString(GLenum name)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[275];
   return ((const GLubyte * (APIENTRY *)(GLenum name)) _func)(name);
}

GLAPI void APIENTRY glGetTexEnvfv(GLenum target, GLenum pname, GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[276];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfloat *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glGetTexEnviv(GLenum target, GLenum pname, GLint *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[277];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLint *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[282];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfloat *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glGetTexParameteriv(GLenum target, GLenum pname, GLint *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[283];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLint *params)) _func)(target, pname, params);
}

GLAPI GLboolean APIENTRY glIsEnabled(GLenum cap)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[286];
   return ((GLboolean (APIENTRY *)(GLenum cap)) _func)(cap);
}

GLAPI void APIENTRY glLoadIdentity(void)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[290];
   ((void (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glLoadMatrixf(const GLfloat *m)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[291];
   ((void (APIENTRY *)(const GLfloat *m)) _func)(m);
}

GLAPI void APIENTRY glMatrixMode(GLenum mode)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[293];
   ((void (APIENTRY *)(GLenum mode)) _func)(mode);
}

GLAPI void APIENTRY glMultMatrixf(const GLfloat *m)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[294];
   ((void (APIENTRY *)(const GLfloat *m)) _func)(m);
}

GLAPI void APIENTRY glPopMatrix(void)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[297];
   ((void (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glPushMatrix(void)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[298];
   ((void (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[300];
   ((void (APIENTRY *)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)) _func)(angle, x, y, z);
}

GLAPI void APIENTRY glScalef(GLfloat x, GLfloat y, GLfloat z)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[302];
   ((void (APIENTRY *)(GLfloat x, GLfloat y, GLfloat z)) _func)(x, y, z);
}

GLAPI void APIENTRY glTranslatef(GLfloat x, GLfloat y, GLfloat z)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[304];
   ((void (APIENTRY *)(GLfloat x, GLfloat y, GLfloat z)) _func)(x, y, z);
}

GLAPI void APIENTRY glViewport(GLint x, GLint y, GLsizei width, GLsizei height)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[305];
   ((void (APIENTRY *)(GLint x, GLint y, GLsizei width, GLsizei height)) _func)(x, y, width, height);
}

GLAPI void APIENTRY glBindTexture(GLenum target, GLuint texture)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[307];
   ((void (APIENTRY *)(GLenum target, GLuint texture)) _func)(target, texture);
}

GLAPI void APIENTRY glColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[308];
   ((void (APIENTRY *)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)) _func)(size, type, stride, pointer);
}

GLAPI void APIENTRY glDisableClientState(GLenum array)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[309];
   ((void (APIENTRY *)(GLenum array)) _func)(array);
}

GLAPI void APIENTRY glDrawArrays(GLenum mode, GLint first, GLsizei count)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[310];
   ((void (APIENTRY *)(GLenum mode, GLint first, GLsizei count)) _func)(mode, first, count);
}

GLAPI void APIENTRY glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[311];
   ((void (APIENTRY *)(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)) _func)(mode, count, type, indices);
}

GLAPI void APIENTRY glEnableClientState(GLenum array)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[313];
   ((void (APIENTRY *)(GLenum array)) _func)(array);
}

GLAPI void APIENTRY glNormalPointer(GLenum type, GLsizei stride, const GLvoid *pointer)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[318];
   ((void (APIENTRY *)(GLenum type, GLsizei stride, const GLvoid *pointer)) _func)(type, stride, pointer);
}

GLAPI void APIENTRY glPolygonOffset(GLfloat factor, GLfloat units)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[319];
   ((void (APIENTRY *)(GLfloat factor, GLfloat units)) _func)(factor, units);
}

GLAPI void APIENTRY glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[320];
   ((void (APIENTRY *)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)) _func)(size, type, stride, pointer);
}

GLAPI void APIENTRY glVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[321];
   ((void (APIENTRY *)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)) _func)(size, type, stride, pointer);
}

GLAPI void APIENTRY glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[324];
   ((void (APIENTRY *)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)) _func)(target, level, internalformat, x, y, width, height, border);
}

GLAPI void APIENTRY glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[326];
   ((void (APIENTRY *)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)) _func)(target, level, xoffset, yoffset, x, y, width, height);
}

GLAPI void APIENTRY glDeleteTextures(GLsizei n, const GLuint *textures)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[327];
   ((void (APIENTRY *)(GLsizei n, const GLuint *textures)) _func)(n, textures);
}

GLAPI void APIENTRY glGenTextures(GLsizei n, GLuint *textures)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[328];
   ((void (APIENTRY *)(GLsizei n, GLuint *textures)) _func)(n, textures);
}

GLAPI void APIENTRY glGetPointerv(GLenum pname, GLvoid **params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[329];
   ((void (APIENTRY *)(GLenum pname, GLvoid **params)) _func)(pname, params);
}

GLAPI GLboolean APIENTRY glIsTexture(GLuint texture)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[330];
   return ((GLboolean (APIENTRY *)(GLuint texture)) _func)(texture);
}

GLAPI void APIENTRY glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[333];
   ((void (APIENTRY *)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)) _func)(target, level, xoffset, yoffset, width, height, format, type, pixels);
}

GLAPI void APIENTRY glActiveTexture(GLenum texture)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[374];
   ((void (APIENTRY *)(GLenum texture)) _func)(texture);
}

GLAPI void APIENTRY glClientActiveTexture(GLenum texture)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[375];
   ((void (APIENTRY *)(GLenum texture)) _func)(texture);
}

GLAPI void APIENTRY glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[402];
   ((void (APIENTRY *)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)) _func)(target, s, t, r, q);
}

GLAPI void APIENTRY glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[409];
   ((void (APIENTRY *)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)) _func)(target, level, internalformat, width, height, border, imageSize, data);
}

GLAPI void APIENTRY glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[412];
   ((void (APIENTRY *)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)) _func)(target, level, xoffset, yoffset, width, height, format, imageSize, data);
}

GLAPI void APIENTRY glSampleCoverage(GLclampf value, GLboolean invert)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[419];
   ((void (APIENTRY *)(GLclampf value, GLboolean invert)) _func)(value, invert);
}

GLAPI void APIENTRY glMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[424];
   ((void (APIENTRY *)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)) _func)(mode, first, count, primcount);
}

GLAPI void APIENTRY glPointParameterf(GLenum pname, GLfloat param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[425];
   ((void (APIENTRY *)(GLenum pname, GLfloat param)) _func)(pname, param);
}

GLAPI void APIENTRY glPointParameterfv(GLenum pname, const GLfloat *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[426];
   ((void (APIENTRY *)(GLenum pname, const GLfloat *params)) _func)(pname, params);
}

GLAPI void APIENTRY glBindBuffer(GLenum target, GLuint buffer)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[461];
   ((void (APIENTRY *)(GLenum target, GLuint buffer)) _func)(target, buffer);
}

GLAPI void APIENTRY glBufferData(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[462];
   ((void (APIENTRY *)(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)) _func)(target, size, data, usage);
}

GLAPI void APIENTRY glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[463];
   ((void (APIENTRY *)(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data)) _func)(target, offset, size, data);
}

GLAPI void APIENTRY glDeleteBuffers(GLsizei n, const GLuint *buffer)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[464];
   ((void (APIENTRY *)(GLsizei n, const GLuint *buffer)) _func)(n, buffer);
}

GLAPI void APIENTRY glGenBuffers(GLsizei n, GLuint *buffer)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[467];
   ((void (APIENTRY *)(GLsizei n, GLuint *buffer)) _func)(n, buffer);
}

GLAPI void APIENTRY glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[469];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLint *params)) _func)(target, pname, params);
}

GLAPI GLboolean APIENTRY glIsBuffer(GLuint buffer)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[475];
   return ((GLboolean (APIENTRY *)(GLuint buffer)) _func)(buffer);
}

GLAPI void APIENTRY glClearDepthf(GLclampf depth)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[813];
   ((void (APIENTRY *)(GLclampf depth)) _func)(depth);
}

GLAPI void APIENTRY glDepthRangef(GLclampf zNear, GLclampf zFar)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[814];
   ((void (APIENTRY *)(GLclampf zNear, GLclampf zFar)) _func)(zNear, zFar);
}

GLAPI void APIENTRY glPointSizePointerOES(GLenum type, GLsizei stride, const GLvoid *pointer)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1084];
   ((void (APIENTRY *)(GLenum type, GLsizei stride, const GLvoid *pointer)) _func)(type, stride, pointer);
}

GLAPI void APIENTRY glMultiDrawElementsEXT(GLenum mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1169];
   ((void (APIENTRY *)(GLenum mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount)) _func)(mode, count, type, indices, primcount);
}

GLAPI void APIENTRY glAlphaFuncx(GLenum func, GLclampx ref)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1365];
   ((void (APIENTRY *)(GLenum func, GLclampx ref)) _func)(func, ref);
}

GLAPI void APIENTRY glClearColorx(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1366];
   ((void (APIENTRY *)(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glClearDepthx(GLclampx depth)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1367];
   ((void (APIENTRY *)(GLclampx depth)) _func)(depth);
}

GLAPI void APIENTRY glColor4x(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1368];
   ((void (APIENTRY *)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glDepthRangex(GLclampx zNear, GLclampx zFar)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1369];
   ((void (APIENTRY *)(GLclampx zNear, GLclampx zFar)) _func)(zNear, zFar);
}

GLAPI void APIENTRY glFogx(GLenum pname, GLfixed param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1370];
   ((void (APIENTRY *)(GLenum pname, GLfixed param)) _func)(pname, param);
}

GLAPI void APIENTRY glFogxv(GLenum pname, const GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1371];
   ((void (APIENTRY *)(GLenum pname, const GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glFrustumf(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1372];
   ((void (APIENTRY *)(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glFrustumx(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1373];
   ((void (APIENTRY *)(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glLightModelx(GLenum pname, GLfixed param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1374];
   ((void (APIENTRY *)(GLenum pname, GLfixed param)) _func)(pname, param);
}

GLAPI void APIENTRY glLightModelxv(GLenum pname, const GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1375];
   ((void (APIENTRY *)(GLenum pname, const GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glLightx(GLenum light, GLenum pname, GLfixed param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1376];
   ((void (APIENTRY *)(GLenum light, GLenum pname, GLfixed param)) _func)(light, pname, param);
}

GLAPI void APIENTRY glLightxv(GLenum light, GLenum pname, const GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1377];
   ((void (APIENTRY *)(GLenum light, GLenum pname, const GLfixed *params)) _func)(light, pname, params);
}

GLAPI void APIENTRY glLineWidthx(GLfixed width)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1378];
   ((void (APIENTRY *)(GLfixed width)) _func)(width);
}

GLAPI void APIENTRY glLoadMatrixx(const GLfixed *m)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1379];
   ((void (APIENTRY *)(const GLfixed *m)) _func)(m);
}

GLAPI void APIENTRY glMaterialx(GLenum face, GLenum pname, GLfixed param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1380];
   ((void (APIENTRY *)(GLenum face, GLenum pname, GLfixed param)) _func)(face, pname, param);
}

GLAPI void APIENTRY glMaterialxv(GLenum face, GLenum pname, const GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1381];
   ((void (APIENTRY *)(GLenum face, GLenum pname, const GLfixed *params)) _func)(face, pname, params);
}

GLAPI void APIENTRY glMultMatrixx(const GLfixed *m)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1382];
   ((void (APIENTRY *)(const GLfixed *m)) _func)(m);
}

GLAPI void APIENTRY glMultiTexCoord4x(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1383];
   ((void (APIENTRY *)(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q)) _func)(target, s, t, r, q);
}

GLAPI void APIENTRY glNormal3x(GLfixed nx, GLfixed ny, GLfixed nz)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1384];
   ((void (APIENTRY *)(GLfixed nx, GLfixed ny, GLfixed nz)) _func)(nx, ny, nz);
}

GLAPI void APIENTRY glOrthof(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1385];
   ((void (APIENTRY *)(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glOrthox(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1386];
   ((void (APIENTRY *)(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glPointSizex(GLfixed size)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1387];
   ((void (APIENTRY *)(GLfixed size)) _func)(size);
}

GLAPI void APIENTRY glPolygonOffsetx(GLfixed factor, GLfixed units)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1388];
   ((void (APIENTRY *)(GLfixed factor, GLfixed units)) _func)(factor, units);
}

GLAPI void APIENTRY glRotatex(GLfixed angle, GLfixed x, GLfixed y, GLfixed z)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1389];
   ((void (APIENTRY *)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z)) _func)(angle, x, y, z);
}

GLAPI void APIENTRY glSampleCoveragex(GLclampx value, GLboolean invert)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1390];
   ((void (APIENTRY *)(GLclampx value, GLboolean invert)) _func)(value, invert);
}

GLAPI void APIENTRY glScalex(GLfixed x, GLfixed y, GLfixed z)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1391];
   ((void (APIENTRY *)(GLfixed x, GLfixed y, GLfixed z)) _func)(x, y, z);
}

GLAPI void APIENTRY glTexEnvx(GLenum target, GLenum pname, GLfixed param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1392];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexEnvxv(GLenum target, GLenum pname, const GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1393];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLfixed *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glTexParameterx(GLenum target, GLenum pname, GLfixed param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1394];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTranslatex(GLfixed x, GLfixed y, GLfixed z)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1395];
   ((void (APIENTRY *)(GLfixed x, GLfixed y, GLfixed z)) _func)(x, y, z);
}

GLAPI void APIENTRY glClipPlanef(GLenum plane, const GLfloat *equation)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1396];
   ((void (APIENTRY *)(GLenum plane, const GLfloat *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glClipPlanex(GLenum plane, const GLfixed *equation)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1397];
   ((void (APIENTRY *)(GLenum plane, const GLfixed *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glGetClipPlanef(GLenum plane, GLfloat *equation)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1398];
   ((void (APIENTRY *)(GLenum plane, GLfloat *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glGetClipPlanex(GLenum plane, GLfixed *equation)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1399];
   ((void (APIENTRY *)(GLenum plane, GLfixed *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glGetFixedv(GLenum pname, GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1400];
   ((void (APIENTRY *)(GLenum pname, GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glGetLightxv(GLenum light, GLenum pname, GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1401];
   ((void (APIENTRY *)(GLenum light, GLenum pname, GLfixed *params)) _func)(light, pname, params);
}

GLAPI void APIENTRY glGetMaterialxv(GLenum face, GLenum pname, GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1402];
   ((void (APIENTRY *)(GLenum face, GLenum pname, GLfixed *params)) _func)(face, pname, params);
}

GLAPI void APIENTRY glGetTexEnvxv(GLenum target, GLenum pname, GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1403];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glGetTexParameterxv(GLenum target, GLenum pname, GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1404];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glPointParameterx(GLenum pname, GLfixed param)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1405];
   ((void (APIENTRY *)(GLenum pname, GLfixed param)) _func)(pname, param);
}

GLAPI void APIENTRY glPointParameterxv(GLenum pname, const GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1406];
   ((void (APIENTRY *)(GLenum pname, const GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glTexParameterxv(GLenum target, GLenum pname, const GLfixed *params)
{
   const struct _glapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1407];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLfixed *params)) _func)(target, pname, params);
}

/* does not need public_entries */
#undef MAPI_TMP_PUBLIC_ENTRIES_NO_HIDDEN
#endif /* MAPI_TMP_PUBLIC_ENTRIES_NO_HIDDEN */

#ifdef MAPI_TMP_STUB_ASM_GCC_NO_HIDDEN
__asm__(
STUB_ASM_ENTRY("glColor4f")"\n"
"\t"STUB_ASM_CODE("29")"\n"

STUB_ASM_ENTRY("glColor4ub")"\n"
"\t"STUB_ASM_CODE("35")"\n"

STUB_ASM_ENTRY("glNormal3f")"\n"
"\t"STUB_ASM_CODE("56")"\n"

STUB_ASM_ENTRY("glCullFace")"\n"
"\t"STUB_ASM_CODE("152")"\n"

STUB_ASM_ENTRY("glFogf")"\n"
"\t"STUB_ASM_CODE("153")"\n"

STUB_ASM_ENTRY("glFogfv")"\n"
"\t"STUB_ASM_CODE("154")"\n"

STUB_ASM_ENTRY("glFrontFace")"\n"
"\t"STUB_ASM_CODE("157")"\n"

STUB_ASM_ENTRY("glHint")"\n"
"\t"STUB_ASM_CODE("158")"\n"

STUB_ASM_ENTRY("glLightf")"\n"
"\t"STUB_ASM_CODE("159")"\n"

STUB_ASM_ENTRY("glLightfv")"\n"
"\t"STUB_ASM_CODE("160")"\n"

STUB_ASM_ENTRY("glLightModelf")"\n"
"\t"STUB_ASM_CODE("163")"\n"

STUB_ASM_ENTRY("glLightModelfv")"\n"
"\t"STUB_ASM_CODE("164")"\n"

STUB_ASM_ENTRY("glLineWidth")"\n"
"\t"STUB_ASM_CODE("168")"\n"

STUB_ASM_ENTRY("glMaterialf")"\n"
"\t"STUB_ASM_CODE("169")"\n"

STUB_ASM_ENTRY("glMaterialfv")"\n"
"\t"STUB_ASM_CODE("170")"\n"

STUB_ASM_ENTRY("glPointSize")"\n"
"\t"STUB_ASM_CODE("173")"\n"

STUB_ASM_ENTRY("glScissor")"\n"
"\t"STUB_ASM_CODE("176")"\n"

STUB_ASM_ENTRY("glShadeModel")"\n"
"\t"STUB_ASM_CODE("177")"\n"

STUB_ASM_ENTRY("glTexParameterf")"\n"
"\t"STUB_ASM_CODE("178")"\n"

STUB_ASM_ENTRY("glTexParameterfv")"\n"
"\t"STUB_ASM_CODE("179")"\n"

STUB_ASM_ENTRY("glTexParameteri")"\n"
"\t"STUB_ASM_CODE("180")"\n"

STUB_ASM_ENTRY("glTexParameteriv")"\n"
"\t"STUB_ASM_CODE("181")"\n"

STUB_ASM_ENTRY("glTexImage2D")"\n"
"\t"STUB_ASM_CODE("183")"\n"

STUB_ASM_ENTRY("glTexEnvf")"\n"
"\t"STUB_ASM_CODE("184")"\n"

STUB_ASM_ENTRY("glTexEnvfv")"\n"
"\t"STUB_ASM_CODE("185")"\n"

STUB_ASM_ENTRY("glTexEnvi")"\n"
"\t"STUB_ASM_CODE("186")"\n"

STUB_ASM_ENTRY("glTexEnviv")"\n"
"\t"STUB_ASM_CODE("187")"\n"

STUB_ASM_ENTRY("glClear")"\n"
"\t"STUB_ASM_CODE("203")"\n"

STUB_ASM_ENTRY("glClearColor")"\n"
"\t"STUB_ASM_CODE("206")"\n"

STUB_ASM_ENTRY("glClearStencil")"\n"
"\t"STUB_ASM_CODE("207")"\n"

STUB_ASM_ENTRY("glStencilMask")"\n"
"\t"STUB_ASM_CODE("209")"\n"

STUB_ASM_ENTRY("glColorMask")"\n"
"\t"STUB_ASM_CODE("210")"\n"

STUB_ASM_ENTRY("glDepthMask")"\n"
"\t"STUB_ASM_CODE("211")"\n"

STUB_ASM_ENTRY("glDisable")"\n"
"\t"STUB_ASM_CODE("214")"\n"

STUB_ASM_ENTRY("glEnable")"\n"
"\t"STUB_ASM_CODE("215")"\n"

STUB_ASM_ENTRY("glFinish")"\n"
"\t"STUB_ASM_CODE("216")"\n"

STUB_ASM_ENTRY("glFlush")"\n"
"\t"STUB_ASM_CODE("217")"\n"

STUB_ASM_ENTRY("glAlphaFunc")"\n"
"\t"STUB_ASM_CODE("240")"\n"

STUB_ASM_ENTRY("glBlendFunc")"\n"
"\t"STUB_ASM_CODE("241")"\n"

STUB_ASM_ENTRY("glLogicOp")"\n"
"\t"STUB_ASM_CODE("242")"\n"

STUB_ASM_ENTRY("glStencilFunc")"\n"
"\t"STUB_ASM_CODE("243")"\n"

STUB_ASM_ENTRY("glStencilOp")"\n"
"\t"STUB_ASM_CODE("244")"\n"

STUB_ASM_ENTRY("glDepthFunc")"\n"
"\t"STUB_ASM_CODE("245")"\n"

STUB_ASM_ENTRY("glPixelStorei")"\n"
"\t"STUB_ASM_CODE("250")"\n"

STUB_ASM_ENTRY("glReadPixels")"\n"
"\t"STUB_ASM_CODE("256")"\n"

STUB_ASM_ENTRY("glGetBooleanv")"\n"
"\t"STUB_ASM_CODE("258")"\n"

STUB_ASM_ENTRY("glGetError")"\n"
"\t"STUB_ASM_CODE("261")"\n"

STUB_ASM_ENTRY("glGetFloatv")"\n"
"\t"STUB_ASM_CODE("262")"\n"

STUB_ASM_ENTRY("glGetIntegerv")"\n"
"\t"STUB_ASM_CODE("263")"\n"

STUB_ASM_ENTRY("glGetLightfv")"\n"
"\t"STUB_ASM_CODE("264")"\n"

STUB_ASM_ENTRY("glGetMaterialfv")"\n"
"\t"STUB_ASM_CODE("269")"\n"

STUB_ASM_ENTRY("glGetString")"\n"
"\t"STUB_ASM_CODE("275")"\n"

STUB_ASM_ENTRY("glGetTexEnvfv")"\n"
"\t"STUB_ASM_CODE("276")"\n"

STUB_ASM_ENTRY("glGetTexEnviv")"\n"
"\t"STUB_ASM_CODE("277")"\n"

STUB_ASM_ENTRY("glGetTexParameterfv")"\n"
"\t"STUB_ASM_CODE("282")"\n"

STUB_ASM_ENTRY("glGetTexParameteriv")"\n"
"\t"STUB_ASM_CODE("283")"\n"

STUB_ASM_ENTRY("glIsEnabled")"\n"
"\t"STUB_ASM_CODE("286")"\n"

STUB_ASM_ENTRY("glLoadIdentity")"\n"
"\t"STUB_ASM_CODE("290")"\n"

STUB_ASM_ENTRY("glLoadMatrixf")"\n"
"\t"STUB_ASM_CODE("291")"\n"

STUB_ASM_ENTRY("glMatrixMode")"\n"
"\t"STUB_ASM_CODE("293")"\n"

STUB_ASM_ENTRY("glMultMatrixf")"\n"
"\t"STUB_ASM_CODE("294")"\n"

STUB_ASM_ENTRY("glPopMatrix")"\n"
"\t"STUB_ASM_CODE("297")"\n"

STUB_ASM_ENTRY("glPushMatrix")"\n"
"\t"STUB_ASM_CODE("298")"\n"

STUB_ASM_ENTRY("glRotatef")"\n"
"\t"STUB_ASM_CODE("300")"\n"

STUB_ASM_ENTRY("glScalef")"\n"
"\t"STUB_ASM_CODE("302")"\n"

STUB_ASM_ENTRY("glTranslatef")"\n"
"\t"STUB_ASM_CODE("304")"\n"

STUB_ASM_ENTRY("glViewport")"\n"
"\t"STUB_ASM_CODE("305")"\n"

STUB_ASM_ENTRY("glBindTexture")"\n"
"\t"STUB_ASM_CODE("307")"\n"

STUB_ASM_ENTRY("glColorPointer")"\n"
"\t"STUB_ASM_CODE("308")"\n"

STUB_ASM_ENTRY("glDisableClientState")"\n"
"\t"STUB_ASM_CODE("309")"\n"

STUB_ASM_ENTRY("glDrawArrays")"\n"
"\t"STUB_ASM_CODE("310")"\n"

STUB_ASM_ENTRY("glDrawElements")"\n"
"\t"STUB_ASM_CODE("311")"\n"

STUB_ASM_ENTRY("glEnableClientState")"\n"
"\t"STUB_ASM_CODE("313")"\n"

STUB_ASM_ENTRY("glNormalPointer")"\n"
"\t"STUB_ASM_CODE("318")"\n"

STUB_ASM_ENTRY("glPolygonOffset")"\n"
"\t"STUB_ASM_CODE("319")"\n"

STUB_ASM_ENTRY("glTexCoordPointer")"\n"
"\t"STUB_ASM_CODE("320")"\n"

STUB_ASM_ENTRY("glVertexPointer")"\n"
"\t"STUB_ASM_CODE("321")"\n"

STUB_ASM_ENTRY("glCopyTexImage2D")"\n"
"\t"STUB_ASM_CODE("324")"\n"

STUB_ASM_ENTRY("glCopyTexSubImage2D")"\n"
"\t"STUB_ASM_CODE("326")"\n"

STUB_ASM_ENTRY("glDeleteTextures")"\n"
"\t"STUB_ASM_CODE("327")"\n"

STUB_ASM_ENTRY("glGenTextures")"\n"
"\t"STUB_ASM_CODE("328")"\n"

STUB_ASM_ENTRY("glGetPointerv")"\n"
"\t"STUB_ASM_CODE("329")"\n"

STUB_ASM_ENTRY("glIsTexture")"\n"
"\t"STUB_ASM_CODE("330")"\n"

STUB_ASM_ENTRY("glTexSubImage2D")"\n"
"\t"STUB_ASM_CODE("333")"\n"

STUB_ASM_ENTRY("glActiveTexture")"\n"
"\t"STUB_ASM_CODE("374")"\n"

STUB_ASM_ENTRY("glClientActiveTexture")"\n"
"\t"STUB_ASM_CODE("375")"\n"

STUB_ASM_ENTRY("glMultiTexCoord4f")"\n"
"\t"STUB_ASM_CODE("402")"\n"

STUB_ASM_ENTRY("glCompressedTexImage2D")"\n"
"\t"STUB_ASM_CODE("409")"\n"

STUB_ASM_ENTRY("glCompressedTexSubImage2D")"\n"
"\t"STUB_ASM_CODE("412")"\n"

STUB_ASM_ENTRY("glSampleCoverage")"\n"
"\t"STUB_ASM_CODE("419")"\n"

STUB_ASM_ENTRY("glMultiDrawArraysEXT")"\n"
"\t"STUB_ASM_CODE("424")"\n"

STUB_ASM_ENTRY("glPointParameterf")"\n"
"\t"STUB_ASM_CODE("425")"\n"

STUB_ASM_ENTRY("glPointParameterfv")"\n"
"\t"STUB_ASM_CODE("426")"\n"

STUB_ASM_ENTRY("glBindBuffer")"\n"
"\t"STUB_ASM_CODE("461")"\n"

STUB_ASM_ENTRY("glBufferData")"\n"
"\t"STUB_ASM_CODE("462")"\n"

STUB_ASM_ENTRY("glBufferSubData")"\n"
"\t"STUB_ASM_CODE("463")"\n"

STUB_ASM_ENTRY("glDeleteBuffers")"\n"
"\t"STUB_ASM_CODE("464")"\n"

STUB_ASM_ENTRY("glGenBuffers")"\n"
"\t"STUB_ASM_CODE("467")"\n"

STUB_ASM_ENTRY("glGetBufferParameteriv")"\n"
"\t"STUB_ASM_CODE("469")"\n"

STUB_ASM_ENTRY("glIsBuffer")"\n"
"\t"STUB_ASM_CODE("475")"\n"

STUB_ASM_ENTRY("glClearDepthf")"\n"
"\t"STUB_ASM_CODE("813")"\n"

STUB_ASM_ENTRY("glDepthRangef")"\n"
"\t"STUB_ASM_CODE("814")"\n"

STUB_ASM_ENTRY("glPointSizePointerOES")"\n"
"\t"STUB_ASM_CODE("1084")"\n"

STUB_ASM_ENTRY("glMultiDrawElementsEXT")"\n"
"\t"STUB_ASM_CODE("1169")"\n"

STUB_ASM_ENTRY("glAlphaFuncx")"\n"
"\t"STUB_ASM_CODE("1365")"\n"

STUB_ASM_ENTRY("glClearColorx")"\n"
"\t"STUB_ASM_CODE("1366")"\n"

STUB_ASM_ENTRY("glClearDepthx")"\n"
"\t"STUB_ASM_CODE("1367")"\n"

STUB_ASM_ENTRY("glColor4x")"\n"
"\t"STUB_ASM_CODE("1368")"\n"

STUB_ASM_ENTRY("glDepthRangex")"\n"
"\t"STUB_ASM_CODE("1369")"\n"

STUB_ASM_ENTRY("glFogx")"\n"
"\t"STUB_ASM_CODE("1370")"\n"

STUB_ASM_ENTRY("glFogxv")"\n"
"\t"STUB_ASM_CODE("1371")"\n"

STUB_ASM_ENTRY("glFrustumf")"\n"
"\t"STUB_ASM_CODE("1372")"\n"

STUB_ASM_ENTRY("glFrustumx")"\n"
"\t"STUB_ASM_CODE("1373")"\n"

STUB_ASM_ENTRY("glLightModelx")"\n"
"\t"STUB_ASM_CODE("1374")"\n"

STUB_ASM_ENTRY("glLightModelxv")"\n"
"\t"STUB_ASM_CODE("1375")"\n"

STUB_ASM_ENTRY("glLightx")"\n"
"\t"STUB_ASM_CODE("1376")"\n"

STUB_ASM_ENTRY("glLightxv")"\n"
"\t"STUB_ASM_CODE("1377")"\n"

STUB_ASM_ENTRY("glLineWidthx")"\n"
"\t"STUB_ASM_CODE("1378")"\n"

STUB_ASM_ENTRY("glLoadMatrixx")"\n"
"\t"STUB_ASM_CODE("1379")"\n"

STUB_ASM_ENTRY("glMaterialx")"\n"
"\t"STUB_ASM_CODE("1380")"\n"

STUB_ASM_ENTRY("glMaterialxv")"\n"
"\t"STUB_ASM_CODE("1381")"\n"

STUB_ASM_ENTRY("glMultMatrixx")"\n"
"\t"STUB_ASM_CODE("1382")"\n"

STUB_ASM_ENTRY("glMultiTexCoord4x")"\n"
"\t"STUB_ASM_CODE("1383")"\n"

STUB_ASM_ENTRY("glNormal3x")"\n"
"\t"STUB_ASM_CODE("1384")"\n"

STUB_ASM_ENTRY("glOrthof")"\n"
"\t"STUB_ASM_CODE("1385")"\n"

STUB_ASM_ENTRY("glOrthox")"\n"
"\t"STUB_ASM_CODE("1386")"\n"

STUB_ASM_ENTRY("glPointSizex")"\n"
"\t"STUB_ASM_CODE("1387")"\n"

STUB_ASM_ENTRY("glPolygonOffsetx")"\n"
"\t"STUB_ASM_CODE("1388")"\n"

STUB_ASM_ENTRY("glRotatex")"\n"
"\t"STUB_ASM_CODE("1389")"\n"

STUB_ASM_ENTRY("glSampleCoveragex")"\n"
"\t"STUB_ASM_CODE("1390")"\n"

STUB_ASM_ENTRY("glScalex")"\n"
"\t"STUB_ASM_CODE("1391")"\n"

STUB_ASM_ENTRY("glTexEnvx")"\n"
"\t"STUB_ASM_CODE("1392")"\n"

STUB_ASM_ENTRY("glTexEnvxv")"\n"
"\t"STUB_ASM_CODE("1393")"\n"

STUB_ASM_ENTRY("glTexParameterx")"\n"
"\t"STUB_ASM_CODE("1394")"\n"

STUB_ASM_ENTRY("glTranslatex")"\n"
"\t"STUB_ASM_CODE("1395")"\n"

STUB_ASM_ENTRY("glClipPlanef")"\n"
"\t"STUB_ASM_CODE("1396")"\n"

STUB_ASM_ENTRY("glClipPlanex")"\n"
"\t"STUB_ASM_CODE("1397")"\n"

STUB_ASM_ENTRY("glGetClipPlanef")"\n"
"\t"STUB_ASM_CODE("1398")"\n"

STUB_ASM_ENTRY("glGetClipPlanex")"\n"
"\t"STUB_ASM_CODE("1399")"\n"

STUB_ASM_ENTRY("glGetFixedv")"\n"
"\t"STUB_ASM_CODE("1400")"\n"

STUB_ASM_ENTRY("glGetLightxv")"\n"
"\t"STUB_ASM_CODE("1401")"\n"

STUB_ASM_ENTRY("glGetMaterialxv")"\n"
"\t"STUB_ASM_CODE("1402")"\n"

STUB_ASM_ENTRY("glGetTexEnvxv")"\n"
"\t"STUB_ASM_CODE("1403")"\n"

STUB_ASM_ENTRY("glGetTexParameterxv")"\n"
"\t"STUB_ASM_CODE("1404")"\n"

STUB_ASM_ENTRY("glPointParameterx")"\n"
"\t"STUB_ASM_CODE("1405")"\n"

STUB_ASM_ENTRY("glPointParameterxv")"\n"
"\t"STUB_ASM_CODE("1406")"\n"

STUB_ASM_ENTRY("glTexParameterxv")"\n"
"\t"STUB_ASM_CODE("1407")"\n"

);
#undef MAPI_TMP_STUB_ASM_GCC_NO_HIDDEN
#endif /* MAPI_TMP_STUB_ASM_GCC_NO_HIDDEN */
