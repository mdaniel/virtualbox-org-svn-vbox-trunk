/* DO NOT EDIT - This file generated automatically by gl_x86-64_asm.py (from Mesa) script */

/*
 * (C) Copyright IBM Corporation 2005
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
 * IBM,
 * AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/* If we build with gcc's -fvisibility=hidden flag, we'll need to change
 * the symbol visibility mode to 'default'.
 */

#include "x86/assyntax.h"

#ifdef __GNUC__
#  pragma GCC visibility push(default)
#  define HIDDEN(x) .hidden x
#else
#  define HIDDEN(x)
#endif

# if defined(USE_MGL_NAMESPACE)
#  define GL_PREFIX(n) GLNAME(CONCAT(mgl,n))
#  define _glapi_Dispatch _mglapi_Dispatch
# else
#  define GL_PREFIX(n) GLNAME(CONCAT(gl,n))
# endif

	.text

#ifdef GLX_USE_TLS

_x86_64_get_dispatch:
	movq	_glapi_tls_Dispatch@GOTTPOFF(%rip), %rax
	movq	%fs:(%rax), %rax
	ret
	.size	_x86_64_get_dispatch, .-_x86_64_get_dispatch

#elif defined(HAVE_PTHREAD)

	.extern	_glapi_Dispatch
	.extern	_gl_DispatchTSD
	.extern	pthread_getspecific

	.p2align	4,,15
_x86_64_get_dispatch:
	movq	_gl_DispatchTSD@GOTPCREL(%rip), %rax
	movl	(%rax), %edi
	jmp	pthread_getspecific@PLT

#else

	.extern	_glapi_get_dispatch

#endif

	.p2align	4,,15
	.globl	GL_PREFIX(NewList)
	.type	GL_PREFIX(NewList), @function
GL_PREFIX(NewList):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	0(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	0(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	0(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(NewList), .-GL_PREFIX(NewList)

	.p2align	4,,15
	.globl	GL_PREFIX(EndList)
	.type	GL_PREFIX(EndList), @function
GL_PREFIX(EndList):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	8(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	8(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EndList), .-GL_PREFIX(EndList)

	.p2align	4,,15
	.globl	GL_PREFIX(CallList)
	.type	GL_PREFIX(CallList), @function
GL_PREFIX(CallList):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	16(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	16(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	16(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CallList), .-GL_PREFIX(CallList)

	.p2align	4,,15
	.globl	GL_PREFIX(CallLists)
	.type	GL_PREFIX(CallLists), @function
GL_PREFIX(CallLists):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	24(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	24(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	24(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CallLists), .-GL_PREFIX(CallLists)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteLists)
	.type	GL_PREFIX(DeleteLists), @function
GL_PREFIX(DeleteLists):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	32(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	32(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	32(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteLists), .-GL_PREFIX(DeleteLists)

	.p2align	4,,15
	.globl	GL_PREFIX(GenLists)
	.type	GL_PREFIX(GenLists), @function
GL_PREFIX(GenLists):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	40(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	40(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	40(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenLists), .-GL_PREFIX(GenLists)

	.p2align	4,,15
	.globl	GL_PREFIX(ListBase)
	.type	GL_PREFIX(ListBase), @function
GL_PREFIX(ListBase):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	48(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	48(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	48(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	48(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ListBase), .-GL_PREFIX(ListBase)

	.p2align	4,,15
	.globl	GL_PREFIX(Begin)
	.type	GL_PREFIX(Begin), @function
GL_PREFIX(Begin):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	56(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	56(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	56(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	56(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Begin), .-GL_PREFIX(Begin)

	.p2align	4,,15
	.globl	GL_PREFIX(Bitmap)
	.type	GL_PREFIX(Bitmap), @function
GL_PREFIX(Bitmap):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	64(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	movq	%rdx, 48(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	48(%rsp), %rdx
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	64(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	64(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	movq	%rdx, 48(%rsp)
	call	_glapi_get_dispatch
	movq	48(%rsp), %rdx
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	64(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Bitmap), .-GL_PREFIX(Bitmap)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3b)
	.type	GL_PREFIX(Color3b), @function
GL_PREFIX(Color3b):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	72(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	72(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	72(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	72(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3b), .-GL_PREFIX(Color3b)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3bv)
	.type	GL_PREFIX(Color3bv), @function
GL_PREFIX(Color3bv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	80(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	80(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	80(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	80(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3bv), .-GL_PREFIX(Color3bv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3d)
	.type	GL_PREFIX(Color3d), @function
GL_PREFIX(Color3d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	88(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	88(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	88(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	88(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3d), .-GL_PREFIX(Color3d)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3dv)
	.type	GL_PREFIX(Color3dv), @function
GL_PREFIX(Color3dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	96(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	96(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	96(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	96(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3dv), .-GL_PREFIX(Color3dv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3f)
	.type	GL_PREFIX(Color3f), @function
GL_PREFIX(Color3f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	104(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3f), .-GL_PREFIX(Color3f)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3fv)
	.type	GL_PREFIX(Color3fv), @function
GL_PREFIX(Color3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	112(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3fv), .-GL_PREFIX(Color3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3i)
	.type	GL_PREFIX(Color3i), @function
GL_PREFIX(Color3i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3i), .-GL_PREFIX(Color3i)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3iv)
	.type	GL_PREFIX(Color3iv), @function
GL_PREFIX(Color3iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	128(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3iv), .-GL_PREFIX(Color3iv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3s)
	.type	GL_PREFIX(Color3s), @function
GL_PREFIX(Color3s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	136(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3s), .-GL_PREFIX(Color3s)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3sv)
	.type	GL_PREFIX(Color3sv), @function
GL_PREFIX(Color3sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	144(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3sv), .-GL_PREFIX(Color3sv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3ub)
	.type	GL_PREFIX(Color3ub), @function
GL_PREFIX(Color3ub):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	152(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3ub), .-GL_PREFIX(Color3ub)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3ubv)
	.type	GL_PREFIX(Color3ubv), @function
GL_PREFIX(Color3ubv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	160(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3ubv), .-GL_PREFIX(Color3ubv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3ui)
	.type	GL_PREFIX(Color3ui), @function
GL_PREFIX(Color3ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3ui), .-GL_PREFIX(Color3ui)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3uiv)
	.type	GL_PREFIX(Color3uiv), @function
GL_PREFIX(Color3uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	176(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3uiv), .-GL_PREFIX(Color3uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3us)
	.type	GL_PREFIX(Color3us), @function
GL_PREFIX(Color3us):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3us), .-GL_PREFIX(Color3us)

	.p2align	4,,15
	.globl	GL_PREFIX(Color3usv)
	.type	GL_PREFIX(Color3usv), @function
GL_PREFIX(Color3usv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color3usv), .-GL_PREFIX(Color3usv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4b)
	.type	GL_PREFIX(Color4b), @function
GL_PREFIX(Color4b):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	200(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4b), .-GL_PREFIX(Color4b)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4bv)
	.type	GL_PREFIX(Color4bv), @function
GL_PREFIX(Color4bv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	208(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4bv), .-GL_PREFIX(Color4bv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4d)
	.type	GL_PREFIX(Color4d), @function
GL_PREFIX(Color4d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	216(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4d), .-GL_PREFIX(Color4d)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4dv)
	.type	GL_PREFIX(Color4dv), @function
GL_PREFIX(Color4dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	224(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4dv), .-GL_PREFIX(Color4dv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4f)
	.type	GL_PREFIX(Color4f), @function
GL_PREFIX(Color4f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	232(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4f), .-GL_PREFIX(Color4f)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4fv)
	.type	GL_PREFIX(Color4fv), @function
GL_PREFIX(Color4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4fv), .-GL_PREFIX(Color4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4i)
	.type	GL_PREFIX(Color4i), @function
GL_PREFIX(Color4i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	248(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4i), .-GL_PREFIX(Color4i)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4iv)
	.type	GL_PREFIX(Color4iv), @function
GL_PREFIX(Color4iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4iv), .-GL_PREFIX(Color4iv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4s)
	.type	GL_PREFIX(Color4s), @function
GL_PREFIX(Color4s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4s), .-GL_PREFIX(Color4s)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4sv)
	.type	GL_PREFIX(Color4sv), @function
GL_PREFIX(Color4sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	272(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4sv), .-GL_PREFIX(Color4sv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4ub)
	.type	GL_PREFIX(Color4ub), @function
GL_PREFIX(Color4ub):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	280(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	280(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	280(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	280(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4ub), .-GL_PREFIX(Color4ub)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4ubv)
	.type	GL_PREFIX(Color4ubv), @function
GL_PREFIX(Color4ubv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	288(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	288(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	288(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	288(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4ubv), .-GL_PREFIX(Color4ubv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4ui)
	.type	GL_PREFIX(Color4ui), @function
GL_PREFIX(Color4ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	296(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	296(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	296(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	296(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4ui), .-GL_PREFIX(Color4ui)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4uiv)
	.type	GL_PREFIX(Color4uiv), @function
GL_PREFIX(Color4uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	304(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	304(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	304(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	304(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4uiv), .-GL_PREFIX(Color4uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4us)
	.type	GL_PREFIX(Color4us), @function
GL_PREFIX(Color4us):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	312(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	312(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	312(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	312(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4us), .-GL_PREFIX(Color4us)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4usv)
	.type	GL_PREFIX(Color4usv), @function
GL_PREFIX(Color4usv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	320(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	320(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	320(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	320(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4usv), .-GL_PREFIX(Color4usv)

	.p2align	4,,15
	.globl	GL_PREFIX(EdgeFlag)
	.type	GL_PREFIX(EdgeFlag), @function
GL_PREFIX(EdgeFlag):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	328(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	328(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	328(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	328(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EdgeFlag), .-GL_PREFIX(EdgeFlag)

	.p2align	4,,15
	.globl	GL_PREFIX(EdgeFlagv)
	.type	GL_PREFIX(EdgeFlagv), @function
GL_PREFIX(EdgeFlagv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	336(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	336(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	336(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	336(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EdgeFlagv), .-GL_PREFIX(EdgeFlagv)

	.p2align	4,,15
	.globl	GL_PREFIX(End)
	.type	GL_PREFIX(End), @function
GL_PREFIX(End):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	344(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	344(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	344(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	344(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(End), .-GL_PREFIX(End)

	.p2align	4,,15
	.globl	GL_PREFIX(Indexd)
	.type	GL_PREFIX(Indexd), @function
GL_PREFIX(Indexd):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	352(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	352(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	352(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	352(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Indexd), .-GL_PREFIX(Indexd)

	.p2align	4,,15
	.globl	GL_PREFIX(Indexdv)
	.type	GL_PREFIX(Indexdv), @function
GL_PREFIX(Indexdv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	360(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	360(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	360(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	360(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Indexdv), .-GL_PREFIX(Indexdv)

	.p2align	4,,15
	.globl	GL_PREFIX(Indexf)
	.type	GL_PREFIX(Indexf), @function
GL_PREFIX(Indexf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	368(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	368(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	368(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	368(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Indexf), .-GL_PREFIX(Indexf)

	.p2align	4,,15
	.globl	GL_PREFIX(Indexfv)
	.type	GL_PREFIX(Indexfv), @function
GL_PREFIX(Indexfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	376(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	376(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	376(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	376(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Indexfv), .-GL_PREFIX(Indexfv)

	.p2align	4,,15
	.globl	GL_PREFIX(Indexi)
	.type	GL_PREFIX(Indexi), @function
GL_PREFIX(Indexi):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	384(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	384(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	384(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	384(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Indexi), .-GL_PREFIX(Indexi)

	.p2align	4,,15
	.globl	GL_PREFIX(Indexiv)
	.type	GL_PREFIX(Indexiv), @function
GL_PREFIX(Indexiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	392(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	392(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	392(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	392(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Indexiv), .-GL_PREFIX(Indexiv)

	.p2align	4,,15
	.globl	GL_PREFIX(Indexs)
	.type	GL_PREFIX(Indexs), @function
GL_PREFIX(Indexs):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	400(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	400(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	400(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	400(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Indexs), .-GL_PREFIX(Indexs)

	.p2align	4,,15
	.globl	GL_PREFIX(Indexsv)
	.type	GL_PREFIX(Indexsv), @function
GL_PREFIX(Indexsv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	408(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	408(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	408(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	408(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Indexsv), .-GL_PREFIX(Indexsv)

	.p2align	4,,15
	.globl	GL_PREFIX(Normal3b)
	.type	GL_PREFIX(Normal3b), @function
GL_PREFIX(Normal3b):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	416(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	416(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	416(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	416(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Normal3b), .-GL_PREFIX(Normal3b)

	.p2align	4,,15
	.globl	GL_PREFIX(Normal3bv)
	.type	GL_PREFIX(Normal3bv), @function
GL_PREFIX(Normal3bv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	424(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	424(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	424(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	424(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Normal3bv), .-GL_PREFIX(Normal3bv)

	.p2align	4,,15
	.globl	GL_PREFIX(Normal3d)
	.type	GL_PREFIX(Normal3d), @function
GL_PREFIX(Normal3d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	432(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	432(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	432(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	432(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Normal3d), .-GL_PREFIX(Normal3d)

	.p2align	4,,15
	.globl	GL_PREFIX(Normal3dv)
	.type	GL_PREFIX(Normal3dv), @function
GL_PREFIX(Normal3dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	440(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	440(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	440(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	440(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Normal3dv), .-GL_PREFIX(Normal3dv)

	.p2align	4,,15
	.globl	GL_PREFIX(Normal3f)
	.type	GL_PREFIX(Normal3f), @function
GL_PREFIX(Normal3f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	448(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	448(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	448(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	448(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Normal3f), .-GL_PREFIX(Normal3f)

	.p2align	4,,15
	.globl	GL_PREFIX(Normal3fv)
	.type	GL_PREFIX(Normal3fv), @function
GL_PREFIX(Normal3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	456(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	456(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	456(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	456(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Normal3fv), .-GL_PREFIX(Normal3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(Normal3i)
	.type	GL_PREFIX(Normal3i), @function
GL_PREFIX(Normal3i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	464(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	464(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	464(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	464(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Normal3i), .-GL_PREFIX(Normal3i)

	.p2align	4,,15
	.globl	GL_PREFIX(Normal3iv)
	.type	GL_PREFIX(Normal3iv), @function
GL_PREFIX(Normal3iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	472(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	472(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	472(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	472(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Normal3iv), .-GL_PREFIX(Normal3iv)

	.p2align	4,,15
	.globl	GL_PREFIX(Normal3s)
	.type	GL_PREFIX(Normal3s), @function
GL_PREFIX(Normal3s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	480(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	480(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	480(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	480(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Normal3s), .-GL_PREFIX(Normal3s)

	.p2align	4,,15
	.globl	GL_PREFIX(Normal3sv)
	.type	GL_PREFIX(Normal3sv), @function
GL_PREFIX(Normal3sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	488(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	488(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	488(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	488(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Normal3sv), .-GL_PREFIX(Normal3sv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos2d)
	.type	GL_PREFIX(RasterPos2d), @function
GL_PREFIX(RasterPos2d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	496(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	496(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	496(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	496(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos2d), .-GL_PREFIX(RasterPos2d)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos2dv)
	.type	GL_PREFIX(RasterPos2dv), @function
GL_PREFIX(RasterPos2dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	504(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	504(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	504(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	504(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos2dv), .-GL_PREFIX(RasterPos2dv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos2f)
	.type	GL_PREFIX(RasterPos2f), @function
GL_PREFIX(RasterPos2f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	512(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	512(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	512(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	512(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos2f), .-GL_PREFIX(RasterPos2f)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos2fv)
	.type	GL_PREFIX(RasterPos2fv), @function
GL_PREFIX(RasterPos2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	520(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	520(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	520(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	520(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos2fv), .-GL_PREFIX(RasterPos2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos2i)
	.type	GL_PREFIX(RasterPos2i), @function
GL_PREFIX(RasterPos2i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	528(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	528(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	528(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	528(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos2i), .-GL_PREFIX(RasterPos2i)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos2iv)
	.type	GL_PREFIX(RasterPos2iv), @function
GL_PREFIX(RasterPos2iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	536(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	536(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	536(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	536(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos2iv), .-GL_PREFIX(RasterPos2iv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos2s)
	.type	GL_PREFIX(RasterPos2s), @function
GL_PREFIX(RasterPos2s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	544(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	544(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	544(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	544(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos2s), .-GL_PREFIX(RasterPos2s)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos2sv)
	.type	GL_PREFIX(RasterPos2sv), @function
GL_PREFIX(RasterPos2sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	552(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	552(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	552(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	552(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos2sv), .-GL_PREFIX(RasterPos2sv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos3d)
	.type	GL_PREFIX(RasterPos3d), @function
GL_PREFIX(RasterPos3d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	560(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	560(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	560(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	560(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos3d), .-GL_PREFIX(RasterPos3d)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos3dv)
	.type	GL_PREFIX(RasterPos3dv), @function
GL_PREFIX(RasterPos3dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	568(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	568(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	568(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	568(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos3dv), .-GL_PREFIX(RasterPos3dv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos3f)
	.type	GL_PREFIX(RasterPos3f), @function
GL_PREFIX(RasterPos3f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	576(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	576(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	576(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	576(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos3f), .-GL_PREFIX(RasterPos3f)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos3fv)
	.type	GL_PREFIX(RasterPos3fv), @function
GL_PREFIX(RasterPos3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	584(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	584(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	584(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	584(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos3fv), .-GL_PREFIX(RasterPos3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos3i)
	.type	GL_PREFIX(RasterPos3i), @function
GL_PREFIX(RasterPos3i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	592(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	592(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	592(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	592(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos3i), .-GL_PREFIX(RasterPos3i)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos3iv)
	.type	GL_PREFIX(RasterPos3iv), @function
GL_PREFIX(RasterPos3iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	600(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	600(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	600(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	600(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos3iv), .-GL_PREFIX(RasterPos3iv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos3s)
	.type	GL_PREFIX(RasterPos3s), @function
GL_PREFIX(RasterPos3s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	608(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	608(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	608(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	608(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos3s), .-GL_PREFIX(RasterPos3s)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos3sv)
	.type	GL_PREFIX(RasterPos3sv), @function
GL_PREFIX(RasterPos3sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	616(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	616(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	616(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	616(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos3sv), .-GL_PREFIX(RasterPos3sv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos4d)
	.type	GL_PREFIX(RasterPos4d), @function
GL_PREFIX(RasterPos4d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	624(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	624(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	624(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	624(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos4d), .-GL_PREFIX(RasterPos4d)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos4dv)
	.type	GL_PREFIX(RasterPos4dv), @function
GL_PREFIX(RasterPos4dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	632(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	632(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	632(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	632(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos4dv), .-GL_PREFIX(RasterPos4dv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos4f)
	.type	GL_PREFIX(RasterPos4f), @function
GL_PREFIX(RasterPos4f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	640(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	640(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	640(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	640(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos4f), .-GL_PREFIX(RasterPos4f)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos4fv)
	.type	GL_PREFIX(RasterPos4fv), @function
GL_PREFIX(RasterPos4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	648(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	648(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	648(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	648(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos4fv), .-GL_PREFIX(RasterPos4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos4i)
	.type	GL_PREFIX(RasterPos4i), @function
GL_PREFIX(RasterPos4i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	656(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	656(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	656(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	656(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos4i), .-GL_PREFIX(RasterPos4i)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos4iv)
	.type	GL_PREFIX(RasterPos4iv), @function
GL_PREFIX(RasterPos4iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	664(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	664(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	664(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	664(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos4iv), .-GL_PREFIX(RasterPos4iv)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos4s)
	.type	GL_PREFIX(RasterPos4s), @function
GL_PREFIX(RasterPos4s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	672(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	672(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	672(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	672(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos4s), .-GL_PREFIX(RasterPos4s)

	.p2align	4,,15
	.globl	GL_PREFIX(RasterPos4sv)
	.type	GL_PREFIX(RasterPos4sv), @function
GL_PREFIX(RasterPos4sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	680(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	680(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	680(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	680(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RasterPos4sv), .-GL_PREFIX(RasterPos4sv)

	.p2align	4,,15
	.globl	GL_PREFIX(Rectd)
	.type	GL_PREFIX(Rectd), @function
GL_PREFIX(Rectd):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	688(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	688(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	688(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	688(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Rectd), .-GL_PREFIX(Rectd)

	.p2align	4,,15
	.globl	GL_PREFIX(Rectdv)
	.type	GL_PREFIX(Rectdv), @function
GL_PREFIX(Rectdv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	696(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	696(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	696(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	696(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Rectdv), .-GL_PREFIX(Rectdv)

	.p2align	4,,15
	.globl	GL_PREFIX(Rectf)
	.type	GL_PREFIX(Rectf), @function
GL_PREFIX(Rectf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	704(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	704(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	704(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	704(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Rectf), .-GL_PREFIX(Rectf)

	.p2align	4,,15
	.globl	GL_PREFIX(Rectfv)
	.type	GL_PREFIX(Rectfv), @function
GL_PREFIX(Rectfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	712(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	712(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	712(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	712(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Rectfv), .-GL_PREFIX(Rectfv)

	.p2align	4,,15
	.globl	GL_PREFIX(Recti)
	.type	GL_PREFIX(Recti), @function
GL_PREFIX(Recti):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	720(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	720(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	720(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	720(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Recti), .-GL_PREFIX(Recti)

	.p2align	4,,15
	.globl	GL_PREFIX(Rectiv)
	.type	GL_PREFIX(Rectiv), @function
GL_PREFIX(Rectiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	728(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	728(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	728(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	728(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Rectiv), .-GL_PREFIX(Rectiv)

	.p2align	4,,15
	.globl	GL_PREFIX(Rects)
	.type	GL_PREFIX(Rects), @function
GL_PREFIX(Rects):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	736(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	736(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	736(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	736(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Rects), .-GL_PREFIX(Rects)

	.p2align	4,,15
	.globl	GL_PREFIX(Rectsv)
	.type	GL_PREFIX(Rectsv), @function
GL_PREFIX(Rectsv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	744(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	744(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	744(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	744(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Rectsv), .-GL_PREFIX(Rectsv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord1d)
	.type	GL_PREFIX(TexCoord1d), @function
GL_PREFIX(TexCoord1d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	752(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	752(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	752(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	752(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord1d), .-GL_PREFIX(TexCoord1d)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord1dv)
	.type	GL_PREFIX(TexCoord1dv), @function
GL_PREFIX(TexCoord1dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	760(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	760(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	760(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	760(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord1dv), .-GL_PREFIX(TexCoord1dv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord1f)
	.type	GL_PREFIX(TexCoord1f), @function
GL_PREFIX(TexCoord1f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	768(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	768(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	768(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	768(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord1f), .-GL_PREFIX(TexCoord1f)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord1fv)
	.type	GL_PREFIX(TexCoord1fv), @function
GL_PREFIX(TexCoord1fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	776(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	776(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	776(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	776(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord1fv), .-GL_PREFIX(TexCoord1fv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord1i)
	.type	GL_PREFIX(TexCoord1i), @function
GL_PREFIX(TexCoord1i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	784(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	784(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	784(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	784(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord1i), .-GL_PREFIX(TexCoord1i)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord1iv)
	.type	GL_PREFIX(TexCoord1iv), @function
GL_PREFIX(TexCoord1iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	792(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	792(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	792(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	792(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord1iv), .-GL_PREFIX(TexCoord1iv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord1s)
	.type	GL_PREFIX(TexCoord1s), @function
GL_PREFIX(TexCoord1s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	800(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	800(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	800(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	800(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord1s), .-GL_PREFIX(TexCoord1s)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord1sv)
	.type	GL_PREFIX(TexCoord1sv), @function
GL_PREFIX(TexCoord1sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	808(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	808(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	808(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	808(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord1sv), .-GL_PREFIX(TexCoord1sv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord2d)
	.type	GL_PREFIX(TexCoord2d), @function
GL_PREFIX(TexCoord2d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	816(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	816(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	816(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	816(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord2d), .-GL_PREFIX(TexCoord2d)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord2dv)
	.type	GL_PREFIX(TexCoord2dv), @function
GL_PREFIX(TexCoord2dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	824(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	824(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	824(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	824(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord2dv), .-GL_PREFIX(TexCoord2dv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord2f)
	.type	GL_PREFIX(TexCoord2f), @function
GL_PREFIX(TexCoord2f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	832(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	832(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	832(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	832(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord2f), .-GL_PREFIX(TexCoord2f)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord2fv)
	.type	GL_PREFIX(TexCoord2fv), @function
GL_PREFIX(TexCoord2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	840(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	840(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	840(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	840(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord2fv), .-GL_PREFIX(TexCoord2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord2i)
	.type	GL_PREFIX(TexCoord2i), @function
GL_PREFIX(TexCoord2i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	848(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	848(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	848(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	848(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord2i), .-GL_PREFIX(TexCoord2i)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord2iv)
	.type	GL_PREFIX(TexCoord2iv), @function
GL_PREFIX(TexCoord2iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	856(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	856(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	856(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	856(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord2iv), .-GL_PREFIX(TexCoord2iv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord2s)
	.type	GL_PREFIX(TexCoord2s), @function
GL_PREFIX(TexCoord2s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	864(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	864(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	864(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	864(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord2s), .-GL_PREFIX(TexCoord2s)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord2sv)
	.type	GL_PREFIX(TexCoord2sv), @function
GL_PREFIX(TexCoord2sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	872(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	872(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	872(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	872(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord2sv), .-GL_PREFIX(TexCoord2sv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord3d)
	.type	GL_PREFIX(TexCoord3d), @function
GL_PREFIX(TexCoord3d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	880(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	880(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	880(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	880(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord3d), .-GL_PREFIX(TexCoord3d)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord3dv)
	.type	GL_PREFIX(TexCoord3dv), @function
GL_PREFIX(TexCoord3dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	888(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	888(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	888(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	888(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord3dv), .-GL_PREFIX(TexCoord3dv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord3f)
	.type	GL_PREFIX(TexCoord3f), @function
GL_PREFIX(TexCoord3f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	896(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	896(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	896(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	896(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord3f), .-GL_PREFIX(TexCoord3f)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord3fv)
	.type	GL_PREFIX(TexCoord3fv), @function
GL_PREFIX(TexCoord3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	904(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	904(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	904(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	904(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord3fv), .-GL_PREFIX(TexCoord3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord3i)
	.type	GL_PREFIX(TexCoord3i), @function
GL_PREFIX(TexCoord3i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	912(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	912(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	912(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	912(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord3i), .-GL_PREFIX(TexCoord3i)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord3iv)
	.type	GL_PREFIX(TexCoord3iv), @function
GL_PREFIX(TexCoord3iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	920(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	920(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	920(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	920(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord3iv), .-GL_PREFIX(TexCoord3iv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord3s)
	.type	GL_PREFIX(TexCoord3s), @function
GL_PREFIX(TexCoord3s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	928(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	928(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	928(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	928(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord3s), .-GL_PREFIX(TexCoord3s)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord3sv)
	.type	GL_PREFIX(TexCoord3sv), @function
GL_PREFIX(TexCoord3sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	936(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	936(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	936(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	936(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord3sv), .-GL_PREFIX(TexCoord3sv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord4d)
	.type	GL_PREFIX(TexCoord4d), @function
GL_PREFIX(TexCoord4d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	944(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	944(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	944(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	944(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord4d), .-GL_PREFIX(TexCoord4d)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord4dv)
	.type	GL_PREFIX(TexCoord4dv), @function
GL_PREFIX(TexCoord4dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	952(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	952(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	952(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	952(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord4dv), .-GL_PREFIX(TexCoord4dv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord4f)
	.type	GL_PREFIX(TexCoord4f), @function
GL_PREFIX(TexCoord4f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	960(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	960(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	960(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	960(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord4f), .-GL_PREFIX(TexCoord4f)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord4fv)
	.type	GL_PREFIX(TexCoord4fv), @function
GL_PREFIX(TexCoord4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	968(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	968(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	968(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	968(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord4fv), .-GL_PREFIX(TexCoord4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord4i)
	.type	GL_PREFIX(TexCoord4i), @function
GL_PREFIX(TexCoord4i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	976(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	976(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	976(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	976(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord4i), .-GL_PREFIX(TexCoord4i)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord4iv)
	.type	GL_PREFIX(TexCoord4iv), @function
GL_PREFIX(TexCoord4iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	984(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	984(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	984(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	984(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord4iv), .-GL_PREFIX(TexCoord4iv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord4s)
	.type	GL_PREFIX(TexCoord4s), @function
GL_PREFIX(TexCoord4s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	992(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	992(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	992(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	992(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord4s), .-GL_PREFIX(TexCoord4s)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoord4sv)
	.type	GL_PREFIX(TexCoord4sv), @function
GL_PREFIX(TexCoord4sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1000(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1000(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1000(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1000(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoord4sv), .-GL_PREFIX(TexCoord4sv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex2d)
	.type	GL_PREFIX(Vertex2d), @function
GL_PREFIX(Vertex2d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1008(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1008(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1008(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1008(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex2d), .-GL_PREFIX(Vertex2d)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex2dv)
	.type	GL_PREFIX(Vertex2dv), @function
GL_PREFIX(Vertex2dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1016(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1016(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1016(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1016(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex2dv), .-GL_PREFIX(Vertex2dv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex2f)
	.type	GL_PREFIX(Vertex2f), @function
GL_PREFIX(Vertex2f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1024(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1024(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1024(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1024(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex2f), .-GL_PREFIX(Vertex2f)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex2fv)
	.type	GL_PREFIX(Vertex2fv), @function
GL_PREFIX(Vertex2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1032(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1032(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1032(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1032(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex2fv), .-GL_PREFIX(Vertex2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex2i)
	.type	GL_PREFIX(Vertex2i), @function
GL_PREFIX(Vertex2i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1040(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1040(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1040(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1040(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex2i), .-GL_PREFIX(Vertex2i)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex2iv)
	.type	GL_PREFIX(Vertex2iv), @function
GL_PREFIX(Vertex2iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1048(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1048(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1048(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1048(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex2iv), .-GL_PREFIX(Vertex2iv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex2s)
	.type	GL_PREFIX(Vertex2s), @function
GL_PREFIX(Vertex2s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1056(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1056(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1056(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1056(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex2s), .-GL_PREFIX(Vertex2s)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex2sv)
	.type	GL_PREFIX(Vertex2sv), @function
GL_PREFIX(Vertex2sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1064(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1064(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1064(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1064(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex2sv), .-GL_PREFIX(Vertex2sv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex3d)
	.type	GL_PREFIX(Vertex3d), @function
GL_PREFIX(Vertex3d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1072(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1072(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1072(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1072(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex3d), .-GL_PREFIX(Vertex3d)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex3dv)
	.type	GL_PREFIX(Vertex3dv), @function
GL_PREFIX(Vertex3dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1080(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1080(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1080(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1080(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex3dv), .-GL_PREFIX(Vertex3dv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex3f)
	.type	GL_PREFIX(Vertex3f), @function
GL_PREFIX(Vertex3f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1088(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1088(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1088(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1088(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex3f), .-GL_PREFIX(Vertex3f)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex3fv)
	.type	GL_PREFIX(Vertex3fv), @function
GL_PREFIX(Vertex3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1096(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1096(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1096(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1096(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex3fv), .-GL_PREFIX(Vertex3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex3i)
	.type	GL_PREFIX(Vertex3i), @function
GL_PREFIX(Vertex3i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1104(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex3i), .-GL_PREFIX(Vertex3i)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex3iv)
	.type	GL_PREFIX(Vertex3iv), @function
GL_PREFIX(Vertex3iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1112(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex3iv), .-GL_PREFIX(Vertex3iv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex3s)
	.type	GL_PREFIX(Vertex3s), @function
GL_PREFIX(Vertex3s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex3s), .-GL_PREFIX(Vertex3s)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex3sv)
	.type	GL_PREFIX(Vertex3sv), @function
GL_PREFIX(Vertex3sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1128(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex3sv), .-GL_PREFIX(Vertex3sv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex4d)
	.type	GL_PREFIX(Vertex4d), @function
GL_PREFIX(Vertex4d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	1136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1136(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	1136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex4d), .-GL_PREFIX(Vertex4d)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex4dv)
	.type	GL_PREFIX(Vertex4dv), @function
GL_PREFIX(Vertex4dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1144(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex4dv), .-GL_PREFIX(Vertex4dv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex4f)
	.type	GL_PREFIX(Vertex4f), @function
GL_PREFIX(Vertex4f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	1152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1152(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	1152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex4f), .-GL_PREFIX(Vertex4f)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex4fv)
	.type	GL_PREFIX(Vertex4fv), @function
GL_PREFIX(Vertex4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1160(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex4fv), .-GL_PREFIX(Vertex4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex4i)
	.type	GL_PREFIX(Vertex4i), @function
GL_PREFIX(Vertex4i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex4i), .-GL_PREFIX(Vertex4i)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex4iv)
	.type	GL_PREFIX(Vertex4iv), @function
GL_PREFIX(Vertex4iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1176(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex4iv), .-GL_PREFIX(Vertex4iv)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex4s)
	.type	GL_PREFIX(Vertex4s), @function
GL_PREFIX(Vertex4s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex4s), .-GL_PREFIX(Vertex4s)

	.p2align	4,,15
	.globl	GL_PREFIX(Vertex4sv)
	.type	GL_PREFIX(Vertex4sv), @function
GL_PREFIX(Vertex4sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Vertex4sv), .-GL_PREFIX(Vertex4sv)

	.p2align	4,,15
	.globl	GL_PREFIX(ClipPlane)
	.type	GL_PREFIX(ClipPlane), @function
GL_PREFIX(ClipPlane):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1200(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClipPlane), .-GL_PREFIX(ClipPlane)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorMaterial)
	.type	GL_PREFIX(ColorMaterial), @function
GL_PREFIX(ColorMaterial):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1208(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorMaterial), .-GL_PREFIX(ColorMaterial)

	.p2align	4,,15
	.globl	GL_PREFIX(CullFace)
	.type	GL_PREFIX(CullFace), @function
GL_PREFIX(CullFace):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1216(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CullFace), .-GL_PREFIX(CullFace)

	.p2align	4,,15
	.globl	GL_PREFIX(Fogf)
	.type	GL_PREFIX(Fogf), @function
GL_PREFIX(Fogf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1224(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Fogf), .-GL_PREFIX(Fogf)

	.p2align	4,,15
	.globl	GL_PREFIX(Fogfv)
	.type	GL_PREFIX(Fogfv), @function
GL_PREFIX(Fogfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1232(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Fogfv), .-GL_PREFIX(Fogfv)

	.p2align	4,,15
	.globl	GL_PREFIX(Fogi)
	.type	GL_PREFIX(Fogi), @function
GL_PREFIX(Fogi):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Fogi), .-GL_PREFIX(Fogi)

	.p2align	4,,15
	.globl	GL_PREFIX(Fogiv)
	.type	GL_PREFIX(Fogiv), @function
GL_PREFIX(Fogiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1248(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Fogiv), .-GL_PREFIX(Fogiv)

	.p2align	4,,15
	.globl	GL_PREFIX(FrontFace)
	.type	GL_PREFIX(FrontFace), @function
GL_PREFIX(FrontFace):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FrontFace), .-GL_PREFIX(FrontFace)

	.p2align	4,,15
	.globl	GL_PREFIX(Hint)
	.type	GL_PREFIX(Hint), @function
GL_PREFIX(Hint):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Hint), .-GL_PREFIX(Hint)

	.p2align	4,,15
	.globl	GL_PREFIX(Lightf)
	.type	GL_PREFIX(Lightf), @function
GL_PREFIX(Lightf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1272(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Lightf), .-GL_PREFIX(Lightf)

	.p2align	4,,15
	.globl	GL_PREFIX(Lightfv)
	.type	GL_PREFIX(Lightfv), @function
GL_PREFIX(Lightfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1280(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1280(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1280(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1280(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Lightfv), .-GL_PREFIX(Lightfv)

	.p2align	4,,15
	.globl	GL_PREFIX(Lighti)
	.type	GL_PREFIX(Lighti), @function
GL_PREFIX(Lighti):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1288(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1288(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1288(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1288(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Lighti), .-GL_PREFIX(Lighti)

	.p2align	4,,15
	.globl	GL_PREFIX(Lightiv)
	.type	GL_PREFIX(Lightiv), @function
GL_PREFIX(Lightiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1296(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1296(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1296(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1296(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Lightiv), .-GL_PREFIX(Lightiv)

	.p2align	4,,15
	.globl	GL_PREFIX(LightModelf)
	.type	GL_PREFIX(LightModelf), @function
GL_PREFIX(LightModelf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1304(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1304(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1304(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1304(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LightModelf), .-GL_PREFIX(LightModelf)

	.p2align	4,,15
	.globl	GL_PREFIX(LightModelfv)
	.type	GL_PREFIX(LightModelfv), @function
GL_PREFIX(LightModelfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1312(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1312(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1312(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1312(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LightModelfv), .-GL_PREFIX(LightModelfv)

	.p2align	4,,15
	.globl	GL_PREFIX(LightModeli)
	.type	GL_PREFIX(LightModeli), @function
GL_PREFIX(LightModeli):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1320(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1320(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1320(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1320(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LightModeli), .-GL_PREFIX(LightModeli)

	.p2align	4,,15
	.globl	GL_PREFIX(LightModeliv)
	.type	GL_PREFIX(LightModeliv), @function
GL_PREFIX(LightModeliv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1328(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1328(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1328(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1328(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LightModeliv), .-GL_PREFIX(LightModeliv)

	.p2align	4,,15
	.globl	GL_PREFIX(LineStipple)
	.type	GL_PREFIX(LineStipple), @function
GL_PREFIX(LineStipple):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1336(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1336(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1336(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1336(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LineStipple), .-GL_PREFIX(LineStipple)

	.p2align	4,,15
	.globl	GL_PREFIX(LineWidth)
	.type	GL_PREFIX(LineWidth), @function
GL_PREFIX(LineWidth):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1344(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1344(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1344(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1344(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LineWidth), .-GL_PREFIX(LineWidth)

	.p2align	4,,15
	.globl	GL_PREFIX(Materialf)
	.type	GL_PREFIX(Materialf), @function
GL_PREFIX(Materialf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1352(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1352(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1352(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1352(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Materialf), .-GL_PREFIX(Materialf)

	.p2align	4,,15
	.globl	GL_PREFIX(Materialfv)
	.type	GL_PREFIX(Materialfv), @function
GL_PREFIX(Materialfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1360(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1360(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1360(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1360(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Materialfv), .-GL_PREFIX(Materialfv)

	.p2align	4,,15
	.globl	GL_PREFIX(Materiali)
	.type	GL_PREFIX(Materiali), @function
GL_PREFIX(Materiali):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1368(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1368(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1368(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1368(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Materiali), .-GL_PREFIX(Materiali)

	.p2align	4,,15
	.globl	GL_PREFIX(Materialiv)
	.type	GL_PREFIX(Materialiv), @function
GL_PREFIX(Materialiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1376(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1376(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1376(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1376(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Materialiv), .-GL_PREFIX(Materialiv)

	.p2align	4,,15
	.globl	GL_PREFIX(PointSize)
	.type	GL_PREFIX(PointSize), @function
GL_PREFIX(PointSize):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1384(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1384(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1384(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1384(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PointSize), .-GL_PREFIX(PointSize)

	.p2align	4,,15
	.globl	GL_PREFIX(PolygonMode)
	.type	GL_PREFIX(PolygonMode), @function
GL_PREFIX(PolygonMode):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1392(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1392(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1392(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1392(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PolygonMode), .-GL_PREFIX(PolygonMode)

	.p2align	4,,15
	.globl	GL_PREFIX(PolygonStipple)
	.type	GL_PREFIX(PolygonStipple), @function
GL_PREFIX(PolygonStipple):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1400(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1400(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1400(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1400(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PolygonStipple), .-GL_PREFIX(PolygonStipple)

	.p2align	4,,15
	.globl	GL_PREFIX(Scissor)
	.type	GL_PREFIX(Scissor), @function
GL_PREFIX(Scissor):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1408(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1408(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1408(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1408(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Scissor), .-GL_PREFIX(Scissor)

	.p2align	4,,15
	.globl	GL_PREFIX(ShadeModel)
	.type	GL_PREFIX(ShadeModel), @function
GL_PREFIX(ShadeModel):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1416(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1416(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1416(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1416(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ShadeModel), .-GL_PREFIX(ShadeModel)

	.p2align	4,,15
	.globl	GL_PREFIX(TexParameterf)
	.type	GL_PREFIX(TexParameterf), @function
GL_PREFIX(TexParameterf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1424(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1424(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1424(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1424(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexParameterf), .-GL_PREFIX(TexParameterf)

	.p2align	4,,15
	.globl	GL_PREFIX(TexParameterfv)
	.type	GL_PREFIX(TexParameterfv), @function
GL_PREFIX(TexParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1432(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1432(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1432(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1432(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexParameterfv), .-GL_PREFIX(TexParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexParameteri)
	.type	GL_PREFIX(TexParameteri), @function
GL_PREFIX(TexParameteri):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1440(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1440(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1440(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1440(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexParameteri), .-GL_PREFIX(TexParameteri)

	.p2align	4,,15
	.globl	GL_PREFIX(TexParameteriv)
	.type	GL_PREFIX(TexParameteriv), @function
GL_PREFIX(TexParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1448(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1448(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1448(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1448(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexParameteriv), .-GL_PREFIX(TexParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexImage1D)
	.type	GL_PREFIX(TexImage1D), @function
GL_PREFIX(TexImage1D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1456(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1456(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1456(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1456(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexImage1D), .-GL_PREFIX(TexImage1D)

	.p2align	4,,15
	.globl	GL_PREFIX(TexImage2D)
	.type	GL_PREFIX(TexImage2D), @function
GL_PREFIX(TexImage2D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1464(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1464(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1464(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1464(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexImage2D), .-GL_PREFIX(TexImage2D)

	.p2align	4,,15
	.globl	GL_PREFIX(TexEnvf)
	.type	GL_PREFIX(TexEnvf), @function
GL_PREFIX(TexEnvf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1472(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1472(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1472(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1472(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexEnvf), .-GL_PREFIX(TexEnvf)

	.p2align	4,,15
	.globl	GL_PREFIX(TexEnvfv)
	.type	GL_PREFIX(TexEnvfv), @function
GL_PREFIX(TexEnvfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1480(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1480(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1480(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1480(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexEnvfv), .-GL_PREFIX(TexEnvfv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexEnvi)
	.type	GL_PREFIX(TexEnvi), @function
GL_PREFIX(TexEnvi):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1488(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1488(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1488(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1488(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexEnvi), .-GL_PREFIX(TexEnvi)

	.p2align	4,,15
	.globl	GL_PREFIX(TexEnviv)
	.type	GL_PREFIX(TexEnviv), @function
GL_PREFIX(TexEnviv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1496(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1496(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1496(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1496(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexEnviv), .-GL_PREFIX(TexEnviv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexGend)
	.type	GL_PREFIX(TexGend), @function
GL_PREFIX(TexGend):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1504(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1504(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1504(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1504(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexGend), .-GL_PREFIX(TexGend)

	.p2align	4,,15
	.globl	GL_PREFIX(TexGendv)
	.type	GL_PREFIX(TexGendv), @function
GL_PREFIX(TexGendv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1512(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1512(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1512(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1512(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexGendv), .-GL_PREFIX(TexGendv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexGenf)
	.type	GL_PREFIX(TexGenf), @function
GL_PREFIX(TexGenf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1520(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1520(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1520(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1520(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexGenf), .-GL_PREFIX(TexGenf)

	.p2align	4,,15
	.globl	GL_PREFIX(TexGenfv)
	.type	GL_PREFIX(TexGenfv), @function
GL_PREFIX(TexGenfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1528(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1528(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1528(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1528(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexGenfv), .-GL_PREFIX(TexGenfv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexGeni)
	.type	GL_PREFIX(TexGeni), @function
GL_PREFIX(TexGeni):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1536(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1536(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1536(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1536(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexGeni), .-GL_PREFIX(TexGeni)

	.p2align	4,,15
	.globl	GL_PREFIX(TexGeniv)
	.type	GL_PREFIX(TexGeniv), @function
GL_PREFIX(TexGeniv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1544(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1544(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1544(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1544(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexGeniv), .-GL_PREFIX(TexGeniv)

	.p2align	4,,15
	.globl	GL_PREFIX(FeedbackBuffer)
	.type	GL_PREFIX(FeedbackBuffer), @function
GL_PREFIX(FeedbackBuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1552(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1552(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1552(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1552(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FeedbackBuffer), .-GL_PREFIX(FeedbackBuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(SelectBuffer)
	.type	GL_PREFIX(SelectBuffer), @function
GL_PREFIX(SelectBuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1560(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1560(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1560(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1560(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SelectBuffer), .-GL_PREFIX(SelectBuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(RenderMode)
	.type	GL_PREFIX(RenderMode), @function
GL_PREFIX(RenderMode):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1568(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1568(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1568(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1568(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RenderMode), .-GL_PREFIX(RenderMode)

	.p2align	4,,15
	.globl	GL_PREFIX(InitNames)
	.type	GL_PREFIX(InitNames), @function
GL_PREFIX(InitNames):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1576(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	1576(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1576(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	1576(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(InitNames), .-GL_PREFIX(InitNames)

	.p2align	4,,15
	.globl	GL_PREFIX(LoadName)
	.type	GL_PREFIX(LoadName), @function
GL_PREFIX(LoadName):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1584(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1584(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1584(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1584(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LoadName), .-GL_PREFIX(LoadName)

	.p2align	4,,15
	.globl	GL_PREFIX(PassThrough)
	.type	GL_PREFIX(PassThrough), @function
GL_PREFIX(PassThrough):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1592(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1592(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1592(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1592(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PassThrough), .-GL_PREFIX(PassThrough)

	.p2align	4,,15
	.globl	GL_PREFIX(PopName)
	.type	GL_PREFIX(PopName), @function
GL_PREFIX(PopName):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1600(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	1600(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1600(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	1600(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PopName), .-GL_PREFIX(PopName)

	.p2align	4,,15
	.globl	GL_PREFIX(PushName)
	.type	GL_PREFIX(PushName), @function
GL_PREFIX(PushName):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1608(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1608(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1608(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1608(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PushName), .-GL_PREFIX(PushName)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawBuffer)
	.type	GL_PREFIX(DrawBuffer), @function
GL_PREFIX(DrawBuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1616(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1616(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1616(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1616(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawBuffer), .-GL_PREFIX(DrawBuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(Clear)
	.type	GL_PREFIX(Clear), @function
GL_PREFIX(Clear):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1624(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1624(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1624(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1624(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Clear), .-GL_PREFIX(Clear)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearAccum)
	.type	GL_PREFIX(ClearAccum), @function
GL_PREFIX(ClearAccum):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1632(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	1632(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1632(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	1632(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearAccum), .-GL_PREFIX(ClearAccum)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearIndex)
	.type	GL_PREFIX(ClearIndex), @function
GL_PREFIX(ClearIndex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1640(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1640(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1640(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1640(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearIndex), .-GL_PREFIX(ClearIndex)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearColor)
	.type	GL_PREFIX(ClearColor), @function
GL_PREFIX(ClearColor):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1648(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1648(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1648(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1648(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearColor), .-GL_PREFIX(ClearColor)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearStencil)
	.type	GL_PREFIX(ClearStencil), @function
GL_PREFIX(ClearStencil):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1656(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1656(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1656(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1656(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearStencil), .-GL_PREFIX(ClearStencil)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearDepth)
	.type	GL_PREFIX(ClearDepth), @function
GL_PREFIX(ClearDepth):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1664(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1664(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1664(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1664(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearDepth), .-GL_PREFIX(ClearDepth)

	.p2align	4,,15
	.globl	GL_PREFIX(StencilMask)
	.type	GL_PREFIX(StencilMask), @function
GL_PREFIX(StencilMask):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1672(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1672(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1672(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1672(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(StencilMask), .-GL_PREFIX(StencilMask)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorMask)
	.type	GL_PREFIX(ColorMask), @function
GL_PREFIX(ColorMask):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1680(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1680(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1680(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1680(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorMask), .-GL_PREFIX(ColorMask)

	.p2align	4,,15
	.globl	GL_PREFIX(DepthMask)
	.type	GL_PREFIX(DepthMask), @function
GL_PREFIX(DepthMask):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1688(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1688(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1688(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1688(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DepthMask), .-GL_PREFIX(DepthMask)

	.p2align	4,,15
	.globl	GL_PREFIX(IndexMask)
	.type	GL_PREFIX(IndexMask), @function
GL_PREFIX(IndexMask):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1696(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1696(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1696(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1696(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IndexMask), .-GL_PREFIX(IndexMask)

	.p2align	4,,15
	.globl	GL_PREFIX(Accum)
	.type	GL_PREFIX(Accum), @function
GL_PREFIX(Accum):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1704(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1704(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1704(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1704(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Accum), .-GL_PREFIX(Accum)

	.p2align	4,,15
	.globl	GL_PREFIX(Disable)
	.type	GL_PREFIX(Disable), @function
GL_PREFIX(Disable):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1712(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1712(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1712(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1712(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Disable), .-GL_PREFIX(Disable)

	.p2align	4,,15
	.globl	GL_PREFIX(Enable)
	.type	GL_PREFIX(Enable), @function
GL_PREFIX(Enable):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1720(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1720(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1720(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1720(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Enable), .-GL_PREFIX(Enable)

	.p2align	4,,15
	.globl	GL_PREFIX(Finish)
	.type	GL_PREFIX(Finish), @function
GL_PREFIX(Finish):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1728(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	1728(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1728(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	1728(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Finish), .-GL_PREFIX(Finish)

	.p2align	4,,15
	.globl	GL_PREFIX(Flush)
	.type	GL_PREFIX(Flush), @function
GL_PREFIX(Flush):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1736(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	1736(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1736(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	1736(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Flush), .-GL_PREFIX(Flush)

	.p2align	4,,15
	.globl	GL_PREFIX(PopAttrib)
	.type	GL_PREFIX(PopAttrib), @function
GL_PREFIX(PopAttrib):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1744(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	1744(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1744(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	1744(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PopAttrib), .-GL_PREFIX(PopAttrib)

	.p2align	4,,15
	.globl	GL_PREFIX(PushAttrib)
	.type	GL_PREFIX(PushAttrib), @function
GL_PREFIX(PushAttrib):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1752(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1752(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1752(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1752(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PushAttrib), .-GL_PREFIX(PushAttrib)

	.p2align	4,,15
	.globl	GL_PREFIX(Map1d)
	.type	GL_PREFIX(Map1d), @function
GL_PREFIX(Map1d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1760(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%rdx, 32(%rsp)
	movq	%rcx, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %rcx
	movq	32(%rsp), %rdx
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	1760(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1760(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%rdx, 32(%rsp)
	movq	%rcx, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %rcx
	movq	32(%rsp), %rdx
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	1760(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Map1d), .-GL_PREFIX(Map1d)

	.p2align	4,,15
	.globl	GL_PREFIX(Map1f)
	.type	GL_PREFIX(Map1f), @function
GL_PREFIX(Map1f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1768(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%rdx, 32(%rsp)
	movq	%rcx, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %rcx
	movq	32(%rsp), %rdx
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	1768(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1768(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%rdx, 32(%rsp)
	movq	%rcx, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %rcx
	movq	32(%rsp), %rdx
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	1768(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Map1f), .-GL_PREFIX(Map1f)

	.p2align	4,,15
	.globl	GL_PREFIX(Map2d)
	.type	GL_PREFIX(Map2d), @function
GL_PREFIX(Map2d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1776(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$88, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%rdx, 32(%rsp)
	movq	%xmm2, 40(%rsp)
	movq	%xmm3, 48(%rsp)
	movq	%rcx, 56(%rsp)
	movq	%r8, 64(%rsp)
	movq	%r9, 72(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	72(%rsp), %r9
	movq	64(%rsp), %r8
	movq	56(%rsp), %rcx
	movq	48(%rsp), %xmm3
	movq	40(%rsp), %xmm2
	movq	32(%rsp), %rdx
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$88, %rsp
	movq	1776(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1776(%rax), %r11
	jmp	*%r11
1:
	subq	$88, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%rdx, 32(%rsp)
	movq	%xmm2, 40(%rsp)
	movq	%xmm3, 48(%rsp)
	movq	%rcx, 56(%rsp)
	movq	%r8, 64(%rsp)
	movq	%r9, 72(%rsp)
	call	_glapi_get_dispatch
	movq	72(%rsp), %r9
	movq	64(%rsp), %r8
	movq	56(%rsp), %rcx
	movq	48(%rsp), %xmm3
	movq	40(%rsp), %xmm2
	movq	32(%rsp), %rdx
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$88, %rsp
	movq	1776(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Map2d), .-GL_PREFIX(Map2d)

	.p2align	4,,15
	.globl	GL_PREFIX(Map2f)
	.type	GL_PREFIX(Map2f), @function
GL_PREFIX(Map2f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1784(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$88, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%rdx, 32(%rsp)
	movq	%xmm2, 40(%rsp)
	movq	%xmm3, 48(%rsp)
	movq	%rcx, 56(%rsp)
	movq	%r8, 64(%rsp)
	movq	%r9, 72(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	72(%rsp), %r9
	movq	64(%rsp), %r8
	movq	56(%rsp), %rcx
	movq	48(%rsp), %xmm3
	movq	40(%rsp), %xmm2
	movq	32(%rsp), %rdx
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$88, %rsp
	movq	1784(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1784(%rax), %r11
	jmp	*%r11
1:
	subq	$88, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%rdx, 32(%rsp)
	movq	%xmm2, 40(%rsp)
	movq	%xmm3, 48(%rsp)
	movq	%rcx, 56(%rsp)
	movq	%r8, 64(%rsp)
	movq	%r9, 72(%rsp)
	call	_glapi_get_dispatch
	movq	72(%rsp), %r9
	movq	64(%rsp), %r8
	movq	56(%rsp), %rcx
	movq	48(%rsp), %xmm3
	movq	40(%rsp), %xmm2
	movq	32(%rsp), %rdx
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$88, %rsp
	movq	1784(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Map2f), .-GL_PREFIX(Map2f)

	.p2align	4,,15
	.globl	GL_PREFIX(MapGrid1d)
	.type	GL_PREFIX(MapGrid1d), @function
GL_PREFIX(MapGrid1d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1792(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1792(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1792(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1792(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MapGrid1d), .-GL_PREFIX(MapGrid1d)

	.p2align	4,,15
	.globl	GL_PREFIX(MapGrid1f)
	.type	GL_PREFIX(MapGrid1f), @function
GL_PREFIX(MapGrid1f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1800(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1800(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1800(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1800(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MapGrid1f), .-GL_PREFIX(MapGrid1f)

	.p2align	4,,15
	.globl	GL_PREFIX(MapGrid2d)
	.type	GL_PREFIX(MapGrid2d), @function
GL_PREFIX(MapGrid2d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1808(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	1808(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1808(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	1808(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MapGrid2d), .-GL_PREFIX(MapGrid2d)

	.p2align	4,,15
	.globl	GL_PREFIX(MapGrid2f)
	.type	GL_PREFIX(MapGrid2f), @function
GL_PREFIX(MapGrid2f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1816(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	1816(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1816(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%rsi, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %rsi
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	1816(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MapGrid2f), .-GL_PREFIX(MapGrid2f)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalCoord1d)
	.type	GL_PREFIX(EvalCoord1d), @function
GL_PREFIX(EvalCoord1d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1824(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1824(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1824(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1824(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalCoord1d), .-GL_PREFIX(EvalCoord1d)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalCoord1dv)
	.type	GL_PREFIX(EvalCoord1dv), @function
GL_PREFIX(EvalCoord1dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1832(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1832(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1832(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1832(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalCoord1dv), .-GL_PREFIX(EvalCoord1dv)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalCoord1f)
	.type	GL_PREFIX(EvalCoord1f), @function
GL_PREFIX(EvalCoord1f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1840(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1840(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1840(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	1840(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalCoord1f), .-GL_PREFIX(EvalCoord1f)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalCoord1fv)
	.type	GL_PREFIX(EvalCoord1fv), @function
GL_PREFIX(EvalCoord1fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1848(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1848(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1848(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1848(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalCoord1fv), .-GL_PREFIX(EvalCoord1fv)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalCoord2d)
	.type	GL_PREFIX(EvalCoord2d), @function
GL_PREFIX(EvalCoord2d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1856(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1856(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1856(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1856(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalCoord2d), .-GL_PREFIX(EvalCoord2d)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalCoord2dv)
	.type	GL_PREFIX(EvalCoord2dv), @function
GL_PREFIX(EvalCoord2dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1864(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1864(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1864(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1864(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalCoord2dv), .-GL_PREFIX(EvalCoord2dv)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalCoord2f)
	.type	GL_PREFIX(EvalCoord2f), @function
GL_PREFIX(EvalCoord2f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1872(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1872(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1872(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1872(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalCoord2f), .-GL_PREFIX(EvalCoord2f)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalCoord2fv)
	.type	GL_PREFIX(EvalCoord2fv), @function
GL_PREFIX(EvalCoord2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1880(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1880(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1880(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1880(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalCoord2fv), .-GL_PREFIX(EvalCoord2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalMesh1)
	.type	GL_PREFIX(EvalMesh1), @function
GL_PREFIX(EvalMesh1):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1888(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1888(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1888(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1888(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalMesh1), .-GL_PREFIX(EvalMesh1)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalPoint1)
	.type	GL_PREFIX(EvalPoint1), @function
GL_PREFIX(EvalPoint1):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1896(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1896(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1896(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1896(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalPoint1), .-GL_PREFIX(EvalPoint1)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalMesh2)
	.type	GL_PREFIX(EvalMesh2), @function
GL_PREFIX(EvalMesh2):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1904(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1904(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1904(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1904(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalMesh2), .-GL_PREFIX(EvalMesh2)

	.p2align	4,,15
	.globl	GL_PREFIX(EvalPoint2)
	.type	GL_PREFIX(EvalPoint2), @function
GL_PREFIX(EvalPoint2):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1912(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1912(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1912(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1912(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EvalPoint2), .-GL_PREFIX(EvalPoint2)

	.p2align	4,,15
	.globl	GL_PREFIX(AlphaFunc)
	.type	GL_PREFIX(AlphaFunc), @function
GL_PREFIX(AlphaFunc):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1920(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1920(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1920(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1920(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(AlphaFunc), .-GL_PREFIX(AlphaFunc)

	.p2align	4,,15
	.globl	GL_PREFIX(BlendFunc)
	.type	GL_PREFIX(BlendFunc), @function
GL_PREFIX(BlendFunc):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1928(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1928(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1928(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1928(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BlendFunc), .-GL_PREFIX(BlendFunc)

	.p2align	4,,15
	.globl	GL_PREFIX(LogicOp)
	.type	GL_PREFIX(LogicOp), @function
GL_PREFIX(LogicOp):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1936(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1936(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1936(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1936(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LogicOp), .-GL_PREFIX(LogicOp)

	.p2align	4,,15
	.globl	GL_PREFIX(StencilFunc)
	.type	GL_PREFIX(StencilFunc), @function
GL_PREFIX(StencilFunc):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1944(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1944(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1944(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1944(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(StencilFunc), .-GL_PREFIX(StencilFunc)

	.p2align	4,,15
	.globl	GL_PREFIX(StencilOp)
	.type	GL_PREFIX(StencilOp), @function
GL_PREFIX(StencilOp):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1952(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1952(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1952(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	1952(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(StencilOp), .-GL_PREFIX(StencilOp)

	.p2align	4,,15
	.globl	GL_PREFIX(DepthFunc)
	.type	GL_PREFIX(DepthFunc), @function
GL_PREFIX(DepthFunc):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1960(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	1960(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1960(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	1960(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DepthFunc), .-GL_PREFIX(DepthFunc)

	.p2align	4,,15
	.globl	GL_PREFIX(PixelZoom)
	.type	GL_PREFIX(PixelZoom), @function
GL_PREFIX(PixelZoom):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1968(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1968(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1968(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	1968(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PixelZoom), .-GL_PREFIX(PixelZoom)

	.p2align	4,,15
	.globl	GL_PREFIX(PixelTransferf)
	.type	GL_PREFIX(PixelTransferf), @function
GL_PREFIX(PixelTransferf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1976(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1976(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1976(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1976(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PixelTransferf), .-GL_PREFIX(PixelTransferf)

	.p2align	4,,15
	.globl	GL_PREFIX(PixelTransferi)
	.type	GL_PREFIX(PixelTransferi), @function
GL_PREFIX(PixelTransferi):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1984(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1984(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1984(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	1984(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PixelTransferi), .-GL_PREFIX(PixelTransferi)

	.p2align	4,,15
	.globl	GL_PREFIX(PixelStoref)
	.type	GL_PREFIX(PixelStoref), @function
GL_PREFIX(PixelStoref):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	1992(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1992(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	1992(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	1992(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PixelStoref), .-GL_PREFIX(PixelStoref)

	.p2align	4,,15
	.globl	GL_PREFIX(PixelStorei)
	.type	GL_PREFIX(PixelStorei), @function
GL_PREFIX(PixelStorei):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2000(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2000(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2000(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2000(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PixelStorei), .-GL_PREFIX(PixelStorei)

	.p2align	4,,15
	.globl	GL_PREFIX(PixelMapfv)
	.type	GL_PREFIX(PixelMapfv), @function
GL_PREFIX(PixelMapfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2008(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2008(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2008(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2008(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PixelMapfv), .-GL_PREFIX(PixelMapfv)

	.p2align	4,,15
	.globl	GL_PREFIX(PixelMapuiv)
	.type	GL_PREFIX(PixelMapuiv), @function
GL_PREFIX(PixelMapuiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2016(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2016(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2016(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2016(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PixelMapuiv), .-GL_PREFIX(PixelMapuiv)

	.p2align	4,,15
	.globl	GL_PREFIX(PixelMapusv)
	.type	GL_PREFIX(PixelMapusv), @function
GL_PREFIX(PixelMapusv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2024(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2024(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2024(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2024(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PixelMapusv), .-GL_PREFIX(PixelMapusv)

	.p2align	4,,15
	.globl	GL_PREFIX(ReadBuffer)
	.type	GL_PREFIX(ReadBuffer), @function
GL_PREFIX(ReadBuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2032(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2032(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2032(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2032(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ReadBuffer), .-GL_PREFIX(ReadBuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyPixels)
	.type	GL_PREFIX(CopyPixels), @function
GL_PREFIX(CopyPixels):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2040(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2040(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2040(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2040(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyPixels), .-GL_PREFIX(CopyPixels)

	.p2align	4,,15
	.globl	GL_PREFIX(ReadPixels)
	.type	GL_PREFIX(ReadPixels), @function
GL_PREFIX(ReadPixels):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2048(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2048(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2048(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2048(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ReadPixels), .-GL_PREFIX(ReadPixels)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawPixels)
	.type	GL_PREFIX(DrawPixels), @function
GL_PREFIX(DrawPixels):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2056(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2056(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2056(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2056(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawPixels), .-GL_PREFIX(DrawPixels)

	.p2align	4,,15
	.globl	GL_PREFIX(GetBooleanv)
	.type	GL_PREFIX(GetBooleanv), @function
GL_PREFIX(GetBooleanv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2064(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2064(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2064(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2064(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetBooleanv), .-GL_PREFIX(GetBooleanv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetClipPlane)
	.type	GL_PREFIX(GetClipPlane), @function
GL_PREFIX(GetClipPlane):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2072(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2072(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2072(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2072(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetClipPlane), .-GL_PREFIX(GetClipPlane)

	.p2align	4,,15
	.globl	GL_PREFIX(GetDoublev)
	.type	GL_PREFIX(GetDoublev), @function
GL_PREFIX(GetDoublev):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2080(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2080(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2080(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2080(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetDoublev), .-GL_PREFIX(GetDoublev)

	.p2align	4,,15
	.globl	GL_PREFIX(GetError)
	.type	GL_PREFIX(GetError), @function
GL_PREFIX(GetError):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2088(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	2088(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2088(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	2088(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetError), .-GL_PREFIX(GetError)

	.p2align	4,,15
	.globl	GL_PREFIX(GetFloatv)
	.type	GL_PREFIX(GetFloatv), @function
GL_PREFIX(GetFloatv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2096(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2096(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2096(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2096(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetFloatv), .-GL_PREFIX(GetFloatv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetIntegerv)
	.type	GL_PREFIX(GetIntegerv), @function
GL_PREFIX(GetIntegerv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2104(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetIntegerv), .-GL_PREFIX(GetIntegerv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetLightfv)
	.type	GL_PREFIX(GetLightfv), @function
GL_PREFIX(GetLightfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2112(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetLightfv), .-GL_PREFIX(GetLightfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetLightiv)
	.type	GL_PREFIX(GetLightiv), @function
GL_PREFIX(GetLightiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetLightiv), .-GL_PREFIX(GetLightiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetMapdv)
	.type	GL_PREFIX(GetMapdv), @function
GL_PREFIX(GetMapdv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2128(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetMapdv), .-GL_PREFIX(GetMapdv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetMapfv)
	.type	GL_PREFIX(GetMapfv), @function
GL_PREFIX(GetMapfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2136(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetMapfv), .-GL_PREFIX(GetMapfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetMapiv)
	.type	GL_PREFIX(GetMapiv), @function
GL_PREFIX(GetMapiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2144(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetMapiv), .-GL_PREFIX(GetMapiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetMaterialfv)
	.type	GL_PREFIX(GetMaterialfv), @function
GL_PREFIX(GetMaterialfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2152(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetMaterialfv), .-GL_PREFIX(GetMaterialfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetMaterialiv)
	.type	GL_PREFIX(GetMaterialiv), @function
GL_PREFIX(GetMaterialiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2160(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetMaterialiv), .-GL_PREFIX(GetMaterialiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetPixelMapfv)
	.type	GL_PREFIX(GetPixelMapfv), @function
GL_PREFIX(GetPixelMapfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetPixelMapfv), .-GL_PREFIX(GetPixelMapfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetPixelMapuiv)
	.type	GL_PREFIX(GetPixelMapuiv), @function
GL_PREFIX(GetPixelMapuiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2176(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetPixelMapuiv), .-GL_PREFIX(GetPixelMapuiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetPixelMapusv)
	.type	GL_PREFIX(GetPixelMapusv), @function
GL_PREFIX(GetPixelMapusv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetPixelMapusv), .-GL_PREFIX(GetPixelMapusv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetPolygonStipple)
	.type	GL_PREFIX(GetPolygonStipple), @function
GL_PREFIX(GetPolygonStipple):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetPolygonStipple), .-GL_PREFIX(GetPolygonStipple)

	.p2align	4,,15
	.globl	GL_PREFIX(GetString)
	.type	GL_PREFIX(GetString), @function
GL_PREFIX(GetString):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2200(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetString), .-GL_PREFIX(GetString)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexEnvfv)
	.type	GL_PREFIX(GetTexEnvfv), @function
GL_PREFIX(GetTexEnvfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2208(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexEnvfv), .-GL_PREFIX(GetTexEnvfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexEnviv)
	.type	GL_PREFIX(GetTexEnviv), @function
GL_PREFIX(GetTexEnviv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2216(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexEnviv), .-GL_PREFIX(GetTexEnviv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexGendv)
	.type	GL_PREFIX(GetTexGendv), @function
GL_PREFIX(GetTexGendv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2224(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexGendv), .-GL_PREFIX(GetTexGendv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexGenfv)
	.type	GL_PREFIX(GetTexGenfv), @function
GL_PREFIX(GetTexGenfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2232(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexGenfv), .-GL_PREFIX(GetTexGenfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexGeniv)
	.type	GL_PREFIX(GetTexGeniv), @function
GL_PREFIX(GetTexGeniv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexGeniv), .-GL_PREFIX(GetTexGeniv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexImage)
	.type	GL_PREFIX(GetTexImage), @function
GL_PREFIX(GetTexImage):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2248(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexImage), .-GL_PREFIX(GetTexImage)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexParameterfv)
	.type	GL_PREFIX(GetTexParameterfv), @function
GL_PREFIX(GetTexParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexParameterfv), .-GL_PREFIX(GetTexParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexParameteriv)
	.type	GL_PREFIX(GetTexParameteriv), @function
GL_PREFIX(GetTexParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexParameteriv), .-GL_PREFIX(GetTexParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexLevelParameterfv)
	.type	GL_PREFIX(GetTexLevelParameterfv), @function
GL_PREFIX(GetTexLevelParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2272(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexLevelParameterfv), .-GL_PREFIX(GetTexLevelParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexLevelParameteriv)
	.type	GL_PREFIX(GetTexLevelParameteriv), @function
GL_PREFIX(GetTexLevelParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2280(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2280(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2280(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2280(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexLevelParameteriv), .-GL_PREFIX(GetTexLevelParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(IsEnabled)
	.type	GL_PREFIX(IsEnabled), @function
GL_PREFIX(IsEnabled):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2288(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2288(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2288(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2288(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsEnabled), .-GL_PREFIX(IsEnabled)

	.p2align	4,,15
	.globl	GL_PREFIX(IsList)
	.type	GL_PREFIX(IsList), @function
GL_PREFIX(IsList):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2296(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2296(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2296(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2296(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsList), .-GL_PREFIX(IsList)

	.p2align	4,,15
	.globl	GL_PREFIX(DepthRange)
	.type	GL_PREFIX(DepthRange), @function
GL_PREFIX(DepthRange):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2304(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2304(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2304(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2304(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DepthRange), .-GL_PREFIX(DepthRange)

	.p2align	4,,15
	.globl	GL_PREFIX(Frustum)
	.type	GL_PREFIX(Frustum), @function
GL_PREFIX(Frustum):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2312(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	movq	%xmm5, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm5
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$56, %rsp
	movq	2312(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2312(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	movq	%xmm5, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm5
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$56, %rsp
	movq	2312(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Frustum), .-GL_PREFIX(Frustum)

	.p2align	4,,15
	.globl	GL_PREFIX(LoadIdentity)
	.type	GL_PREFIX(LoadIdentity), @function
GL_PREFIX(LoadIdentity):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2320(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	2320(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2320(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	2320(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LoadIdentity), .-GL_PREFIX(LoadIdentity)

	.p2align	4,,15
	.globl	GL_PREFIX(LoadMatrixf)
	.type	GL_PREFIX(LoadMatrixf), @function
GL_PREFIX(LoadMatrixf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2328(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2328(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2328(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2328(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LoadMatrixf), .-GL_PREFIX(LoadMatrixf)

	.p2align	4,,15
	.globl	GL_PREFIX(LoadMatrixd)
	.type	GL_PREFIX(LoadMatrixd), @function
GL_PREFIX(LoadMatrixd):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2336(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2336(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2336(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2336(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LoadMatrixd), .-GL_PREFIX(LoadMatrixd)

	.p2align	4,,15
	.globl	GL_PREFIX(MatrixMode)
	.type	GL_PREFIX(MatrixMode), @function
GL_PREFIX(MatrixMode):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2344(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2344(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2344(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2344(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MatrixMode), .-GL_PREFIX(MatrixMode)

	.p2align	4,,15
	.globl	GL_PREFIX(MultMatrixf)
	.type	GL_PREFIX(MultMatrixf), @function
GL_PREFIX(MultMatrixf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2352(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2352(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2352(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2352(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultMatrixf), .-GL_PREFIX(MultMatrixf)

	.p2align	4,,15
	.globl	GL_PREFIX(MultMatrixd)
	.type	GL_PREFIX(MultMatrixd), @function
GL_PREFIX(MultMatrixd):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2360(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2360(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2360(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2360(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultMatrixd), .-GL_PREFIX(MultMatrixd)

	.p2align	4,,15
	.globl	GL_PREFIX(Ortho)
	.type	GL_PREFIX(Ortho), @function
GL_PREFIX(Ortho):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2368(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	movq	%xmm5, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm5
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$56, %rsp
	movq	2368(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2368(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	movq	%xmm5, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm5
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$56, %rsp
	movq	2368(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Ortho), .-GL_PREFIX(Ortho)

	.p2align	4,,15
	.globl	GL_PREFIX(PopMatrix)
	.type	GL_PREFIX(PopMatrix), @function
GL_PREFIX(PopMatrix):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2376(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	2376(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2376(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	2376(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PopMatrix), .-GL_PREFIX(PopMatrix)

	.p2align	4,,15
	.globl	GL_PREFIX(PushMatrix)
	.type	GL_PREFIX(PushMatrix), @function
GL_PREFIX(PushMatrix):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2384(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	2384(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2384(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	2384(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PushMatrix), .-GL_PREFIX(PushMatrix)

	.p2align	4,,15
	.globl	GL_PREFIX(Rotated)
	.type	GL_PREFIX(Rotated), @function
GL_PREFIX(Rotated):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2392(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	2392(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2392(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	2392(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Rotated), .-GL_PREFIX(Rotated)

	.p2align	4,,15
	.globl	GL_PREFIX(Rotatef)
	.type	GL_PREFIX(Rotatef), @function
GL_PREFIX(Rotatef):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2400(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	2400(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2400(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	2400(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Rotatef), .-GL_PREFIX(Rotatef)

	.p2align	4,,15
	.globl	GL_PREFIX(Scaled)
	.type	GL_PREFIX(Scaled), @function
GL_PREFIX(Scaled):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2408(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	2408(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2408(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	2408(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Scaled), .-GL_PREFIX(Scaled)

	.p2align	4,,15
	.globl	GL_PREFIX(Scalef)
	.type	GL_PREFIX(Scalef), @function
GL_PREFIX(Scalef):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2416(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	2416(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2416(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	2416(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Scalef), .-GL_PREFIX(Scalef)

	.p2align	4,,15
	.globl	GL_PREFIX(Translated)
	.type	GL_PREFIX(Translated), @function
GL_PREFIX(Translated):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2424(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	2424(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2424(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	2424(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Translated), .-GL_PREFIX(Translated)

	.p2align	4,,15
	.globl	GL_PREFIX(Translatef)
	.type	GL_PREFIX(Translatef), @function
GL_PREFIX(Translatef):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2432(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	2432(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2432(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	2432(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Translatef), .-GL_PREFIX(Translatef)

	.p2align	4,,15
	.globl	GL_PREFIX(Viewport)
	.type	GL_PREFIX(Viewport), @function
GL_PREFIX(Viewport):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2440(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2440(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2440(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2440(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Viewport), .-GL_PREFIX(Viewport)

	.p2align	4,,15
	.globl	GL_PREFIX(ArrayElement)
	.type	GL_PREFIX(ArrayElement), @function
GL_PREFIX(ArrayElement):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2448(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2448(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2448(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2448(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ArrayElement), .-GL_PREFIX(ArrayElement)

	.p2align	4,,15
	.globl	GL_PREFIX(BindTexture)
	.type	GL_PREFIX(BindTexture), @function
GL_PREFIX(BindTexture):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2456(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2456(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2456(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2456(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindTexture), .-GL_PREFIX(BindTexture)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorPointer)
	.type	GL_PREFIX(ColorPointer), @function
GL_PREFIX(ColorPointer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2464(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2464(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2464(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2464(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorPointer), .-GL_PREFIX(ColorPointer)

	.p2align	4,,15
	.globl	GL_PREFIX(DisableClientState)
	.type	GL_PREFIX(DisableClientState), @function
GL_PREFIX(DisableClientState):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2472(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2472(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2472(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2472(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DisableClientState), .-GL_PREFIX(DisableClientState)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawArrays)
	.type	GL_PREFIX(DrawArrays), @function
GL_PREFIX(DrawArrays):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2480(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2480(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2480(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2480(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawArrays), .-GL_PREFIX(DrawArrays)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawElements)
	.type	GL_PREFIX(DrawElements), @function
GL_PREFIX(DrawElements):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2488(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2488(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2488(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2488(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawElements), .-GL_PREFIX(DrawElements)

	.p2align	4,,15
	.globl	GL_PREFIX(EdgeFlagPointer)
	.type	GL_PREFIX(EdgeFlagPointer), @function
GL_PREFIX(EdgeFlagPointer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2496(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2496(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2496(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2496(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EdgeFlagPointer), .-GL_PREFIX(EdgeFlagPointer)

	.p2align	4,,15
	.globl	GL_PREFIX(EnableClientState)
	.type	GL_PREFIX(EnableClientState), @function
GL_PREFIX(EnableClientState):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2504(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2504(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2504(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2504(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EnableClientState), .-GL_PREFIX(EnableClientState)

	.p2align	4,,15
	.globl	GL_PREFIX(IndexPointer)
	.type	GL_PREFIX(IndexPointer), @function
GL_PREFIX(IndexPointer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2512(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2512(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2512(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2512(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IndexPointer), .-GL_PREFIX(IndexPointer)

	.p2align	4,,15
	.globl	GL_PREFIX(Indexub)
	.type	GL_PREFIX(Indexub), @function
GL_PREFIX(Indexub):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2520(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2520(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2520(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2520(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Indexub), .-GL_PREFIX(Indexub)

	.p2align	4,,15
	.globl	GL_PREFIX(Indexubv)
	.type	GL_PREFIX(Indexubv), @function
GL_PREFIX(Indexubv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2528(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2528(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2528(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2528(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Indexubv), .-GL_PREFIX(Indexubv)

	.p2align	4,,15
	.globl	GL_PREFIX(InterleavedArrays)
	.type	GL_PREFIX(InterleavedArrays), @function
GL_PREFIX(InterleavedArrays):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2536(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2536(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2536(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2536(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(InterleavedArrays), .-GL_PREFIX(InterleavedArrays)

	.p2align	4,,15
	.globl	GL_PREFIX(NormalPointer)
	.type	GL_PREFIX(NormalPointer), @function
GL_PREFIX(NormalPointer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2544(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2544(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2544(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2544(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(NormalPointer), .-GL_PREFIX(NormalPointer)

	.p2align	4,,15
	.globl	GL_PREFIX(PolygonOffset)
	.type	GL_PREFIX(PolygonOffset), @function
GL_PREFIX(PolygonOffset):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2552(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	2552(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2552(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	2552(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PolygonOffset), .-GL_PREFIX(PolygonOffset)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoordPointer)
	.type	GL_PREFIX(TexCoordPointer), @function
GL_PREFIX(TexCoordPointer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2560(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2560(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2560(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2560(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoordPointer), .-GL_PREFIX(TexCoordPointer)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexPointer)
	.type	GL_PREFIX(VertexPointer), @function
GL_PREFIX(VertexPointer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2568(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2568(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2568(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2568(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexPointer), .-GL_PREFIX(VertexPointer)

	.p2align	4,,15
	.globl	GL_PREFIX(AreTexturesResident)
	.type	GL_PREFIX(AreTexturesResident), @function
GL_PREFIX(AreTexturesResident):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2576(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2576(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2576(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2576(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(AreTexturesResident), .-GL_PREFIX(AreTexturesResident)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyTexImage1D)
	.type	GL_PREFIX(CopyTexImage1D), @function
GL_PREFIX(CopyTexImage1D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2584(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2584(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2584(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2584(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyTexImage1D), .-GL_PREFIX(CopyTexImage1D)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyTexImage2D)
	.type	GL_PREFIX(CopyTexImage2D), @function
GL_PREFIX(CopyTexImage2D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2592(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2592(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2592(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2592(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyTexImage2D), .-GL_PREFIX(CopyTexImage2D)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyTexSubImage1D)
	.type	GL_PREFIX(CopyTexSubImage1D), @function
GL_PREFIX(CopyTexSubImage1D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2600(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2600(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2600(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2600(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyTexSubImage1D), .-GL_PREFIX(CopyTexSubImage1D)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyTexSubImage2D)
	.type	GL_PREFIX(CopyTexSubImage2D), @function
GL_PREFIX(CopyTexSubImage2D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2608(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2608(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2608(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2608(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyTexSubImage2D), .-GL_PREFIX(CopyTexSubImage2D)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteTextures)
	.type	GL_PREFIX(DeleteTextures), @function
GL_PREFIX(DeleteTextures):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2616(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2616(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2616(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2616(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteTextures), .-GL_PREFIX(DeleteTextures)

	.p2align	4,,15
	.globl	GL_PREFIX(GenTextures)
	.type	GL_PREFIX(GenTextures), @function
GL_PREFIX(GenTextures):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2624(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2624(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2624(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2624(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenTextures), .-GL_PREFIX(GenTextures)

	.p2align	4,,15
	.globl	GL_PREFIX(GetPointerv)
	.type	GL_PREFIX(GetPointerv), @function
GL_PREFIX(GetPointerv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2632(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2632(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2632(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	2632(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetPointerv), .-GL_PREFIX(GetPointerv)

	.p2align	4,,15
	.globl	GL_PREFIX(IsTexture)
	.type	GL_PREFIX(IsTexture), @function
GL_PREFIX(IsTexture):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2640(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2640(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2640(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2640(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsTexture), .-GL_PREFIX(IsTexture)

	.p2align	4,,15
	.globl	GL_PREFIX(PrioritizeTextures)
	.type	GL_PREFIX(PrioritizeTextures), @function
GL_PREFIX(PrioritizeTextures):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2648(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2648(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2648(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2648(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PrioritizeTextures), .-GL_PREFIX(PrioritizeTextures)

	.p2align	4,,15
	.globl	GL_PREFIX(TexSubImage1D)
	.type	GL_PREFIX(TexSubImage1D), @function
GL_PREFIX(TexSubImage1D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2656(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2656(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2656(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2656(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexSubImage1D), .-GL_PREFIX(TexSubImage1D)

	.p2align	4,,15
	.globl	GL_PREFIX(TexSubImage2D)
	.type	GL_PREFIX(TexSubImage2D), @function
GL_PREFIX(TexSubImage2D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2664(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2664(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2664(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2664(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexSubImage2D), .-GL_PREFIX(TexSubImage2D)

	.p2align	4,,15
	.globl	GL_PREFIX(PopClientAttrib)
	.type	GL_PREFIX(PopClientAttrib), @function
GL_PREFIX(PopClientAttrib):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2672(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	2672(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2672(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	2672(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PopClientAttrib), .-GL_PREFIX(PopClientAttrib)

	.p2align	4,,15
	.globl	GL_PREFIX(PushClientAttrib)
	.type	GL_PREFIX(PushClientAttrib), @function
GL_PREFIX(PushClientAttrib):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2680(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2680(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2680(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2680(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PushClientAttrib), .-GL_PREFIX(PushClientAttrib)

	.p2align	4,,15
	.globl	GL_PREFIX(BlendColor)
	.type	GL_PREFIX(BlendColor), @function
GL_PREFIX(BlendColor):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2688(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2688(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2688(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2688(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BlendColor), .-GL_PREFIX(BlendColor)

	.p2align	4,,15
	.globl	GL_PREFIX(BlendEquation)
	.type	GL_PREFIX(BlendEquation), @function
GL_PREFIX(BlendEquation):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2696(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2696(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2696(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2696(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BlendEquation), .-GL_PREFIX(BlendEquation)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawRangeElements)
	.type	GL_PREFIX(DrawRangeElements), @function
GL_PREFIX(DrawRangeElements):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2704(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2704(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2704(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2704(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawRangeElements), .-GL_PREFIX(DrawRangeElements)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorTable)
	.type	GL_PREFIX(ColorTable), @function
GL_PREFIX(ColorTable):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2712(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2712(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2712(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2712(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorTable), .-GL_PREFIX(ColorTable)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorTableParameterfv)
	.type	GL_PREFIX(ColorTableParameterfv), @function
GL_PREFIX(ColorTableParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2720(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2720(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2720(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2720(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorTableParameterfv), .-GL_PREFIX(ColorTableParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorTableParameteriv)
	.type	GL_PREFIX(ColorTableParameteriv), @function
GL_PREFIX(ColorTableParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2728(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2728(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2728(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2728(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorTableParameteriv), .-GL_PREFIX(ColorTableParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyColorTable)
	.type	GL_PREFIX(CopyColorTable), @function
GL_PREFIX(CopyColorTable):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2736(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2736(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2736(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2736(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyColorTable), .-GL_PREFIX(CopyColorTable)

	.p2align	4,,15
	.globl	GL_PREFIX(GetColorTable)
	.type	GL_PREFIX(GetColorTable), @function
GL_PREFIX(GetColorTable):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2744(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2744(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2744(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2744(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetColorTable), .-GL_PREFIX(GetColorTable)

	.p2align	4,,15
	.globl	GL_PREFIX(GetColorTableParameterfv)
	.type	GL_PREFIX(GetColorTableParameterfv), @function
GL_PREFIX(GetColorTableParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2752(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2752(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2752(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2752(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetColorTableParameterfv), .-GL_PREFIX(GetColorTableParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetColorTableParameteriv)
	.type	GL_PREFIX(GetColorTableParameteriv), @function
GL_PREFIX(GetColorTableParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2760(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2760(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2760(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2760(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetColorTableParameteriv), .-GL_PREFIX(GetColorTableParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorSubTable)
	.type	GL_PREFIX(ColorSubTable), @function
GL_PREFIX(ColorSubTable):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2768(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2768(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2768(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2768(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorSubTable), .-GL_PREFIX(ColorSubTable)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyColorSubTable)
	.type	GL_PREFIX(CopyColorSubTable), @function
GL_PREFIX(CopyColorSubTable):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2776(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2776(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2776(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2776(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyColorSubTable), .-GL_PREFIX(CopyColorSubTable)

	.p2align	4,,15
	.globl	GL_PREFIX(ConvolutionFilter1D)
	.type	GL_PREFIX(ConvolutionFilter1D), @function
GL_PREFIX(ConvolutionFilter1D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2784(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2784(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2784(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2784(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ConvolutionFilter1D), .-GL_PREFIX(ConvolutionFilter1D)

	.p2align	4,,15
	.globl	GL_PREFIX(ConvolutionFilter2D)
	.type	GL_PREFIX(ConvolutionFilter2D), @function
GL_PREFIX(ConvolutionFilter2D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2792(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2792(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2792(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2792(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ConvolutionFilter2D), .-GL_PREFIX(ConvolutionFilter2D)

	.p2align	4,,15
	.globl	GL_PREFIX(ConvolutionParameterf)
	.type	GL_PREFIX(ConvolutionParameterf), @function
GL_PREFIX(ConvolutionParameterf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2800(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	2800(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2800(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	2800(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ConvolutionParameterf), .-GL_PREFIX(ConvolutionParameterf)

	.p2align	4,,15
	.globl	GL_PREFIX(ConvolutionParameterfv)
	.type	GL_PREFIX(ConvolutionParameterfv), @function
GL_PREFIX(ConvolutionParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2808(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2808(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2808(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2808(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ConvolutionParameterfv), .-GL_PREFIX(ConvolutionParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(ConvolutionParameteri)
	.type	GL_PREFIX(ConvolutionParameteri), @function
GL_PREFIX(ConvolutionParameteri):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2816(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2816(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2816(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2816(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ConvolutionParameteri), .-GL_PREFIX(ConvolutionParameteri)

	.p2align	4,,15
	.globl	GL_PREFIX(ConvolutionParameteriv)
	.type	GL_PREFIX(ConvolutionParameteriv), @function
GL_PREFIX(ConvolutionParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2824(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2824(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2824(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2824(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ConvolutionParameteriv), .-GL_PREFIX(ConvolutionParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyConvolutionFilter1D)
	.type	GL_PREFIX(CopyConvolutionFilter1D), @function
GL_PREFIX(CopyConvolutionFilter1D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2832(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2832(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2832(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2832(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyConvolutionFilter1D), .-GL_PREFIX(CopyConvolutionFilter1D)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyConvolutionFilter2D)
	.type	GL_PREFIX(CopyConvolutionFilter2D), @function
GL_PREFIX(CopyConvolutionFilter2D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2840(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2840(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2840(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2840(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyConvolutionFilter2D), .-GL_PREFIX(CopyConvolutionFilter2D)

	.p2align	4,,15
	.globl	GL_PREFIX(GetConvolutionFilter)
	.type	GL_PREFIX(GetConvolutionFilter), @function
GL_PREFIX(GetConvolutionFilter):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2848(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2848(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2848(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2848(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetConvolutionFilter), .-GL_PREFIX(GetConvolutionFilter)

	.p2align	4,,15
	.globl	GL_PREFIX(GetConvolutionParameterfv)
	.type	GL_PREFIX(GetConvolutionParameterfv), @function
GL_PREFIX(GetConvolutionParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2856(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2856(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2856(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2856(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetConvolutionParameterfv), .-GL_PREFIX(GetConvolutionParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetConvolutionParameteriv)
	.type	GL_PREFIX(GetConvolutionParameteriv), @function
GL_PREFIX(GetConvolutionParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2864(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2864(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2864(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2864(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetConvolutionParameteriv), .-GL_PREFIX(GetConvolutionParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetSeparableFilter)
	.type	GL_PREFIX(GetSeparableFilter), @function
GL_PREFIX(GetSeparableFilter):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2872(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2872(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2872(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2872(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetSeparableFilter), .-GL_PREFIX(GetSeparableFilter)

	.p2align	4,,15
	.globl	GL_PREFIX(SeparableFilter2D)
	.type	GL_PREFIX(SeparableFilter2D), @function
GL_PREFIX(SeparableFilter2D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2880(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2880(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2880(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2880(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SeparableFilter2D), .-GL_PREFIX(SeparableFilter2D)

	.p2align	4,,15
	.globl	GL_PREFIX(GetHistogram)
	.type	GL_PREFIX(GetHistogram), @function
GL_PREFIX(GetHistogram):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2888(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2888(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2888(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2888(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetHistogram), .-GL_PREFIX(GetHistogram)

	.p2align	4,,15
	.globl	GL_PREFIX(GetHistogramParameterfv)
	.type	GL_PREFIX(GetHistogramParameterfv), @function
GL_PREFIX(GetHistogramParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2896(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2896(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2896(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2896(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetHistogramParameterfv), .-GL_PREFIX(GetHistogramParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetHistogramParameteriv)
	.type	GL_PREFIX(GetHistogramParameteriv), @function
GL_PREFIX(GetHistogramParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2904(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2904(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2904(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2904(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetHistogramParameteriv), .-GL_PREFIX(GetHistogramParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetMinmax)
	.type	GL_PREFIX(GetMinmax), @function
GL_PREFIX(GetMinmax):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2912(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2912(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2912(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2912(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetMinmax), .-GL_PREFIX(GetMinmax)

	.p2align	4,,15
	.globl	GL_PREFIX(GetMinmaxParameterfv)
	.type	GL_PREFIX(GetMinmaxParameterfv), @function
GL_PREFIX(GetMinmaxParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2920(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2920(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2920(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2920(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetMinmaxParameterfv), .-GL_PREFIX(GetMinmaxParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetMinmaxParameteriv)
	.type	GL_PREFIX(GetMinmaxParameteriv), @function
GL_PREFIX(GetMinmaxParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2928(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2928(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2928(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2928(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetMinmaxParameteriv), .-GL_PREFIX(GetMinmaxParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(Histogram)
	.type	GL_PREFIX(Histogram), @function
GL_PREFIX(Histogram):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2936(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2936(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2936(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2936(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Histogram), .-GL_PREFIX(Histogram)

	.p2align	4,,15
	.globl	GL_PREFIX(Minmax)
	.type	GL_PREFIX(Minmax), @function
GL_PREFIX(Minmax):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2944(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2944(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2944(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2944(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Minmax), .-GL_PREFIX(Minmax)

	.p2align	4,,15
	.globl	GL_PREFIX(ResetHistogram)
	.type	GL_PREFIX(ResetHistogram), @function
GL_PREFIX(ResetHistogram):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2952(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2952(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2952(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2952(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ResetHistogram), .-GL_PREFIX(ResetHistogram)

	.p2align	4,,15
	.globl	GL_PREFIX(ResetMinmax)
	.type	GL_PREFIX(ResetMinmax), @function
GL_PREFIX(ResetMinmax):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2960(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2960(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2960(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2960(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ResetMinmax), .-GL_PREFIX(ResetMinmax)

	.p2align	4,,15
	.globl	GL_PREFIX(TexImage3D)
	.type	GL_PREFIX(TexImage3D), @function
GL_PREFIX(TexImage3D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2968(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2968(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2968(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2968(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexImage3D), .-GL_PREFIX(TexImage3D)

	.p2align	4,,15
	.globl	GL_PREFIX(TexSubImage3D)
	.type	GL_PREFIX(TexSubImage3D), @function
GL_PREFIX(TexSubImage3D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2976(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2976(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2976(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2976(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexSubImage3D), .-GL_PREFIX(TexSubImage3D)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyTexSubImage3D)
	.type	GL_PREFIX(CopyTexSubImage3D), @function
GL_PREFIX(CopyTexSubImage3D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2984(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2984(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2984(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	2984(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyTexSubImage3D), .-GL_PREFIX(CopyTexSubImage3D)

	.p2align	4,,15
	.globl	GL_PREFIX(ActiveTexture)
	.type	GL_PREFIX(ActiveTexture), @function
GL_PREFIX(ActiveTexture):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	2992(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	2992(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	2992(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	2992(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ActiveTexture), .-GL_PREFIX(ActiveTexture)

	.p2align	4,,15
	.globl	GL_PREFIX(ClientActiveTexture)
	.type	GL_PREFIX(ClientActiveTexture), @function
GL_PREFIX(ClientActiveTexture):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3000(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3000(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3000(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3000(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClientActiveTexture), .-GL_PREFIX(ClientActiveTexture)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord1d)
	.type	GL_PREFIX(MultiTexCoord1d), @function
GL_PREFIX(MultiTexCoord1d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3008(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	3008(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3008(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	3008(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord1d), .-GL_PREFIX(MultiTexCoord1d)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord1dv)
	.type	GL_PREFIX(MultiTexCoord1dv), @function
GL_PREFIX(MultiTexCoord1dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3016(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3016(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3016(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3016(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord1dv), .-GL_PREFIX(MultiTexCoord1dv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord1fARB)
	.type	GL_PREFIX(MultiTexCoord1fARB), @function
GL_PREFIX(MultiTexCoord1fARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3024(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	3024(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3024(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	3024(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord1fARB), .-GL_PREFIX(MultiTexCoord1fARB)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord1fvARB)
	.type	GL_PREFIX(MultiTexCoord1fvARB), @function
GL_PREFIX(MultiTexCoord1fvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3032(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3032(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3032(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3032(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord1fvARB), .-GL_PREFIX(MultiTexCoord1fvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord1i)
	.type	GL_PREFIX(MultiTexCoord1i), @function
GL_PREFIX(MultiTexCoord1i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3040(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3040(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3040(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3040(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord1i), .-GL_PREFIX(MultiTexCoord1i)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord1iv)
	.type	GL_PREFIX(MultiTexCoord1iv), @function
GL_PREFIX(MultiTexCoord1iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3048(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3048(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3048(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3048(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord1iv), .-GL_PREFIX(MultiTexCoord1iv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord1s)
	.type	GL_PREFIX(MultiTexCoord1s), @function
GL_PREFIX(MultiTexCoord1s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3056(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3056(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3056(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3056(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord1s), .-GL_PREFIX(MultiTexCoord1s)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord1sv)
	.type	GL_PREFIX(MultiTexCoord1sv), @function
GL_PREFIX(MultiTexCoord1sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3064(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3064(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3064(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3064(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord1sv), .-GL_PREFIX(MultiTexCoord1sv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord2d)
	.type	GL_PREFIX(MultiTexCoord2d), @function
GL_PREFIX(MultiTexCoord2d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3072(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	3072(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3072(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	3072(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord2d), .-GL_PREFIX(MultiTexCoord2d)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord2dv)
	.type	GL_PREFIX(MultiTexCoord2dv), @function
GL_PREFIX(MultiTexCoord2dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3080(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3080(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3080(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3080(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord2dv), .-GL_PREFIX(MultiTexCoord2dv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord2fARB)
	.type	GL_PREFIX(MultiTexCoord2fARB), @function
GL_PREFIX(MultiTexCoord2fARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3088(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	3088(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3088(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	3088(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord2fARB), .-GL_PREFIX(MultiTexCoord2fARB)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord2fvARB)
	.type	GL_PREFIX(MultiTexCoord2fvARB), @function
GL_PREFIX(MultiTexCoord2fvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3096(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3096(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3096(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3096(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord2fvARB), .-GL_PREFIX(MultiTexCoord2fvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord2i)
	.type	GL_PREFIX(MultiTexCoord2i), @function
GL_PREFIX(MultiTexCoord2i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3104(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord2i), .-GL_PREFIX(MultiTexCoord2i)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord2iv)
	.type	GL_PREFIX(MultiTexCoord2iv), @function
GL_PREFIX(MultiTexCoord2iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3112(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord2iv), .-GL_PREFIX(MultiTexCoord2iv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord2s)
	.type	GL_PREFIX(MultiTexCoord2s), @function
GL_PREFIX(MultiTexCoord2s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord2s), .-GL_PREFIX(MultiTexCoord2s)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord2sv)
	.type	GL_PREFIX(MultiTexCoord2sv), @function
GL_PREFIX(MultiTexCoord2sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3128(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord2sv), .-GL_PREFIX(MultiTexCoord2sv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord3d)
	.type	GL_PREFIX(MultiTexCoord3d), @function
GL_PREFIX(MultiTexCoord3d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	3136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3136(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	3136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord3d), .-GL_PREFIX(MultiTexCoord3d)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord3dv)
	.type	GL_PREFIX(MultiTexCoord3dv), @function
GL_PREFIX(MultiTexCoord3dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3144(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord3dv), .-GL_PREFIX(MultiTexCoord3dv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord3fARB)
	.type	GL_PREFIX(MultiTexCoord3fARB), @function
GL_PREFIX(MultiTexCoord3fARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	3152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3152(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	3152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord3fARB), .-GL_PREFIX(MultiTexCoord3fARB)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord3fvARB)
	.type	GL_PREFIX(MultiTexCoord3fvARB), @function
GL_PREFIX(MultiTexCoord3fvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3160(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord3fvARB), .-GL_PREFIX(MultiTexCoord3fvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord3i)
	.type	GL_PREFIX(MultiTexCoord3i), @function
GL_PREFIX(MultiTexCoord3i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord3i), .-GL_PREFIX(MultiTexCoord3i)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord3iv)
	.type	GL_PREFIX(MultiTexCoord3iv), @function
GL_PREFIX(MultiTexCoord3iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3176(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord3iv), .-GL_PREFIX(MultiTexCoord3iv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord3s)
	.type	GL_PREFIX(MultiTexCoord3s), @function
GL_PREFIX(MultiTexCoord3s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord3s), .-GL_PREFIX(MultiTexCoord3s)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord3sv)
	.type	GL_PREFIX(MultiTexCoord3sv), @function
GL_PREFIX(MultiTexCoord3sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord3sv), .-GL_PREFIX(MultiTexCoord3sv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord4d)
	.type	GL_PREFIX(MultiTexCoord4d), @function
GL_PREFIX(MultiTexCoord4d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	3200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3200(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	3200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord4d), .-GL_PREFIX(MultiTexCoord4d)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord4dv)
	.type	GL_PREFIX(MultiTexCoord4dv), @function
GL_PREFIX(MultiTexCoord4dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3208(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord4dv), .-GL_PREFIX(MultiTexCoord4dv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord4fARB)
	.type	GL_PREFIX(MultiTexCoord4fARB), @function
GL_PREFIX(MultiTexCoord4fARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	3216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3216(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	3216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord4fARB), .-GL_PREFIX(MultiTexCoord4fARB)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord4fvARB)
	.type	GL_PREFIX(MultiTexCoord4fvARB), @function
GL_PREFIX(MultiTexCoord4fvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3224(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord4fvARB), .-GL_PREFIX(MultiTexCoord4fvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord4i)
	.type	GL_PREFIX(MultiTexCoord4i), @function
GL_PREFIX(MultiTexCoord4i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3232(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord4i), .-GL_PREFIX(MultiTexCoord4i)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord4iv)
	.type	GL_PREFIX(MultiTexCoord4iv), @function
GL_PREFIX(MultiTexCoord4iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord4iv), .-GL_PREFIX(MultiTexCoord4iv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord4s)
	.type	GL_PREFIX(MultiTexCoord4s), @function
GL_PREFIX(MultiTexCoord4s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3248(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord4s), .-GL_PREFIX(MultiTexCoord4s)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord4sv)
	.type	GL_PREFIX(MultiTexCoord4sv), @function
GL_PREFIX(MultiTexCoord4sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord4sv), .-GL_PREFIX(MultiTexCoord4sv)

	.p2align	4,,15
	.globl	GL_PREFIX(CompressedTexImage1D)
	.type	GL_PREFIX(CompressedTexImage1D), @function
GL_PREFIX(CompressedTexImage1D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CompressedTexImage1D), .-GL_PREFIX(CompressedTexImage1D)

	.p2align	4,,15
	.globl	GL_PREFIX(CompressedTexImage2D)
	.type	GL_PREFIX(CompressedTexImage2D), @function
GL_PREFIX(CompressedTexImage2D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3272(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CompressedTexImage2D), .-GL_PREFIX(CompressedTexImage2D)

	.p2align	4,,15
	.globl	GL_PREFIX(CompressedTexImage3D)
	.type	GL_PREFIX(CompressedTexImage3D), @function
GL_PREFIX(CompressedTexImage3D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3280(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3280(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3280(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3280(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CompressedTexImage3D), .-GL_PREFIX(CompressedTexImage3D)

	.p2align	4,,15
	.globl	GL_PREFIX(CompressedTexSubImage1D)
	.type	GL_PREFIX(CompressedTexSubImage1D), @function
GL_PREFIX(CompressedTexSubImage1D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3288(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3288(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3288(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3288(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CompressedTexSubImage1D), .-GL_PREFIX(CompressedTexSubImage1D)

	.p2align	4,,15
	.globl	GL_PREFIX(CompressedTexSubImage2D)
	.type	GL_PREFIX(CompressedTexSubImage2D), @function
GL_PREFIX(CompressedTexSubImage2D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3296(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3296(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3296(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3296(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CompressedTexSubImage2D), .-GL_PREFIX(CompressedTexSubImage2D)

	.p2align	4,,15
	.globl	GL_PREFIX(CompressedTexSubImage3D)
	.type	GL_PREFIX(CompressedTexSubImage3D), @function
GL_PREFIX(CompressedTexSubImage3D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3304(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3304(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3304(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3304(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CompressedTexSubImage3D), .-GL_PREFIX(CompressedTexSubImage3D)

	.p2align	4,,15
	.globl	GL_PREFIX(GetCompressedTexImage)
	.type	GL_PREFIX(GetCompressedTexImage), @function
GL_PREFIX(GetCompressedTexImage):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3312(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3312(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3312(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3312(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetCompressedTexImage), .-GL_PREFIX(GetCompressedTexImage)

	.p2align	4,,15
	.globl	GL_PREFIX(LoadTransposeMatrixd)
	.type	GL_PREFIX(LoadTransposeMatrixd), @function
GL_PREFIX(LoadTransposeMatrixd):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3320(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3320(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3320(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3320(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LoadTransposeMatrixd), .-GL_PREFIX(LoadTransposeMatrixd)

	.p2align	4,,15
	.globl	GL_PREFIX(LoadTransposeMatrixf)
	.type	GL_PREFIX(LoadTransposeMatrixf), @function
GL_PREFIX(LoadTransposeMatrixf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3328(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3328(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3328(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3328(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LoadTransposeMatrixf), .-GL_PREFIX(LoadTransposeMatrixf)

	.p2align	4,,15
	.globl	GL_PREFIX(MultTransposeMatrixd)
	.type	GL_PREFIX(MultTransposeMatrixd), @function
GL_PREFIX(MultTransposeMatrixd):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3336(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3336(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3336(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3336(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultTransposeMatrixd), .-GL_PREFIX(MultTransposeMatrixd)

	.p2align	4,,15
	.globl	GL_PREFIX(MultTransposeMatrixf)
	.type	GL_PREFIX(MultTransposeMatrixf), @function
GL_PREFIX(MultTransposeMatrixf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3344(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3344(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3344(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3344(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultTransposeMatrixf), .-GL_PREFIX(MultTransposeMatrixf)

	.p2align	4,,15
	.globl	GL_PREFIX(SampleCoverage)
	.type	GL_PREFIX(SampleCoverage), @function
GL_PREFIX(SampleCoverage):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3352(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3352(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3352(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3352(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SampleCoverage), .-GL_PREFIX(SampleCoverage)

	.p2align	4,,15
	.globl	GL_PREFIX(BlendFuncSeparate)
	.type	GL_PREFIX(BlendFuncSeparate), @function
GL_PREFIX(BlendFuncSeparate):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3360(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3360(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3360(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3360(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BlendFuncSeparate), .-GL_PREFIX(BlendFuncSeparate)

	.p2align	4,,15
	.globl	GL_PREFIX(FogCoordPointer)
	.type	GL_PREFIX(FogCoordPointer), @function
GL_PREFIX(FogCoordPointer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3368(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3368(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3368(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3368(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FogCoordPointer), .-GL_PREFIX(FogCoordPointer)

	.p2align	4,,15
	.globl	GL_PREFIX(FogCoordd)
	.type	GL_PREFIX(FogCoordd), @function
GL_PREFIX(FogCoordd):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3376(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	3376(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3376(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	3376(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FogCoordd), .-GL_PREFIX(FogCoordd)

	.p2align	4,,15
	.globl	GL_PREFIX(FogCoorddv)
	.type	GL_PREFIX(FogCoorddv), @function
GL_PREFIX(FogCoorddv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3384(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3384(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3384(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3384(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FogCoorddv), .-GL_PREFIX(FogCoorddv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiDrawArrays)
	.type	GL_PREFIX(MultiDrawArrays), @function
GL_PREFIX(MultiDrawArrays):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3392(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3392(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3392(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3392(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiDrawArrays), .-GL_PREFIX(MultiDrawArrays)

	.p2align	4,,15
	.globl	GL_PREFIX(PointParameterf)
	.type	GL_PREFIX(PointParameterf), @function
GL_PREFIX(PointParameterf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3400(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	3400(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3400(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	3400(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PointParameterf), .-GL_PREFIX(PointParameterf)

	.p2align	4,,15
	.globl	GL_PREFIX(PointParameterfv)
	.type	GL_PREFIX(PointParameterfv), @function
GL_PREFIX(PointParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3408(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3408(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3408(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3408(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PointParameterfv), .-GL_PREFIX(PointParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(PointParameteri)
	.type	GL_PREFIX(PointParameteri), @function
GL_PREFIX(PointParameteri):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3416(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3416(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3416(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3416(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PointParameteri), .-GL_PREFIX(PointParameteri)

	.p2align	4,,15
	.globl	GL_PREFIX(PointParameteriv)
	.type	GL_PREFIX(PointParameteriv), @function
GL_PREFIX(PointParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3424(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3424(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3424(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3424(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PointParameteriv), .-GL_PREFIX(PointParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3b)
	.type	GL_PREFIX(SecondaryColor3b), @function
GL_PREFIX(SecondaryColor3b):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3432(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3432(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3432(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3432(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3b), .-GL_PREFIX(SecondaryColor3b)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3bv)
	.type	GL_PREFIX(SecondaryColor3bv), @function
GL_PREFIX(SecondaryColor3bv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3440(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3440(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3440(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3440(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3bv), .-GL_PREFIX(SecondaryColor3bv)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3d)
	.type	GL_PREFIX(SecondaryColor3d), @function
GL_PREFIX(SecondaryColor3d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3448(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	3448(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3448(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	3448(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3d), .-GL_PREFIX(SecondaryColor3d)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3dv)
	.type	GL_PREFIX(SecondaryColor3dv), @function
GL_PREFIX(SecondaryColor3dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3456(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3456(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3456(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3456(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3dv), .-GL_PREFIX(SecondaryColor3dv)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3i)
	.type	GL_PREFIX(SecondaryColor3i), @function
GL_PREFIX(SecondaryColor3i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3464(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3464(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3464(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3464(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3i), .-GL_PREFIX(SecondaryColor3i)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3iv)
	.type	GL_PREFIX(SecondaryColor3iv), @function
GL_PREFIX(SecondaryColor3iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3472(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3472(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3472(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3472(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3iv), .-GL_PREFIX(SecondaryColor3iv)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3s)
	.type	GL_PREFIX(SecondaryColor3s), @function
GL_PREFIX(SecondaryColor3s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3480(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3480(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3480(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3480(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3s), .-GL_PREFIX(SecondaryColor3s)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3sv)
	.type	GL_PREFIX(SecondaryColor3sv), @function
GL_PREFIX(SecondaryColor3sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3488(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3488(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3488(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3488(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3sv), .-GL_PREFIX(SecondaryColor3sv)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3ub)
	.type	GL_PREFIX(SecondaryColor3ub), @function
GL_PREFIX(SecondaryColor3ub):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3496(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3496(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3496(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3496(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3ub), .-GL_PREFIX(SecondaryColor3ub)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3ubv)
	.type	GL_PREFIX(SecondaryColor3ubv), @function
GL_PREFIX(SecondaryColor3ubv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3504(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3504(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3504(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3504(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3ubv), .-GL_PREFIX(SecondaryColor3ubv)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3ui)
	.type	GL_PREFIX(SecondaryColor3ui), @function
GL_PREFIX(SecondaryColor3ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3512(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3512(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3512(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3512(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3ui), .-GL_PREFIX(SecondaryColor3ui)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3uiv)
	.type	GL_PREFIX(SecondaryColor3uiv), @function
GL_PREFIX(SecondaryColor3uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3520(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3520(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3520(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3520(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3uiv), .-GL_PREFIX(SecondaryColor3uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3us)
	.type	GL_PREFIX(SecondaryColor3us), @function
GL_PREFIX(SecondaryColor3us):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3528(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3528(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3528(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3528(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3us), .-GL_PREFIX(SecondaryColor3us)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3usv)
	.type	GL_PREFIX(SecondaryColor3usv), @function
GL_PREFIX(SecondaryColor3usv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3536(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3536(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3536(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3536(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3usv), .-GL_PREFIX(SecondaryColor3usv)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColorPointer)
	.type	GL_PREFIX(SecondaryColorPointer), @function
GL_PREFIX(SecondaryColorPointer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3544(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3544(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3544(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3544(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColorPointer), .-GL_PREFIX(SecondaryColorPointer)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos2d)
	.type	GL_PREFIX(WindowPos2d), @function
GL_PREFIX(WindowPos2d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3552(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	3552(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3552(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	3552(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos2d), .-GL_PREFIX(WindowPos2d)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos2dv)
	.type	GL_PREFIX(WindowPos2dv), @function
GL_PREFIX(WindowPos2dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3560(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3560(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3560(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3560(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos2dv), .-GL_PREFIX(WindowPos2dv)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos2f)
	.type	GL_PREFIX(WindowPos2f), @function
GL_PREFIX(WindowPos2f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3568(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	3568(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3568(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	3568(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos2f), .-GL_PREFIX(WindowPos2f)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos2fv)
	.type	GL_PREFIX(WindowPos2fv), @function
GL_PREFIX(WindowPos2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3576(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3576(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3576(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3576(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos2fv), .-GL_PREFIX(WindowPos2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos2i)
	.type	GL_PREFIX(WindowPos2i), @function
GL_PREFIX(WindowPos2i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3584(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3584(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3584(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3584(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos2i), .-GL_PREFIX(WindowPos2i)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos2iv)
	.type	GL_PREFIX(WindowPos2iv), @function
GL_PREFIX(WindowPos2iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3592(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3592(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3592(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3592(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos2iv), .-GL_PREFIX(WindowPos2iv)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos2s)
	.type	GL_PREFIX(WindowPos2s), @function
GL_PREFIX(WindowPos2s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3600(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3600(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3600(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3600(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos2s), .-GL_PREFIX(WindowPos2s)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos2sv)
	.type	GL_PREFIX(WindowPos2sv), @function
GL_PREFIX(WindowPos2sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3608(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3608(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3608(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3608(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos2sv), .-GL_PREFIX(WindowPos2sv)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos3d)
	.type	GL_PREFIX(WindowPos3d), @function
GL_PREFIX(WindowPos3d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3616(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	3616(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3616(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	3616(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos3d), .-GL_PREFIX(WindowPos3d)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos3dv)
	.type	GL_PREFIX(WindowPos3dv), @function
GL_PREFIX(WindowPos3dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3624(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3624(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3624(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3624(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos3dv), .-GL_PREFIX(WindowPos3dv)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos3f)
	.type	GL_PREFIX(WindowPos3f), @function
GL_PREFIX(WindowPos3f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3632(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	3632(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3632(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	3632(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos3f), .-GL_PREFIX(WindowPos3f)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos3fv)
	.type	GL_PREFIX(WindowPos3fv), @function
GL_PREFIX(WindowPos3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3640(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3640(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3640(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3640(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos3fv), .-GL_PREFIX(WindowPos3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos3i)
	.type	GL_PREFIX(WindowPos3i), @function
GL_PREFIX(WindowPos3i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3648(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3648(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3648(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3648(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos3i), .-GL_PREFIX(WindowPos3i)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos3iv)
	.type	GL_PREFIX(WindowPos3iv), @function
GL_PREFIX(WindowPos3iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3656(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3656(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3656(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3656(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos3iv), .-GL_PREFIX(WindowPos3iv)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos3s)
	.type	GL_PREFIX(WindowPos3s), @function
GL_PREFIX(WindowPos3s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3664(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3664(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3664(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3664(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos3s), .-GL_PREFIX(WindowPos3s)

	.p2align	4,,15
	.globl	GL_PREFIX(WindowPos3sv)
	.type	GL_PREFIX(WindowPos3sv), @function
GL_PREFIX(WindowPos3sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3672(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3672(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3672(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3672(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WindowPos3sv), .-GL_PREFIX(WindowPos3sv)

	.p2align	4,,15
	.globl	GL_PREFIX(BeginQuery)
	.type	GL_PREFIX(BeginQuery), @function
GL_PREFIX(BeginQuery):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3680(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3680(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3680(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3680(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BeginQuery), .-GL_PREFIX(BeginQuery)

	.p2align	4,,15
	.globl	GL_PREFIX(BindBuffer)
	.type	GL_PREFIX(BindBuffer), @function
GL_PREFIX(BindBuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3688(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3688(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3688(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3688(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindBuffer), .-GL_PREFIX(BindBuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(BufferData)
	.type	GL_PREFIX(BufferData), @function
GL_PREFIX(BufferData):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3696(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3696(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3696(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3696(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BufferData), .-GL_PREFIX(BufferData)

	.p2align	4,,15
	.globl	GL_PREFIX(BufferSubData)
	.type	GL_PREFIX(BufferSubData), @function
GL_PREFIX(BufferSubData):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3704(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3704(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3704(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3704(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BufferSubData), .-GL_PREFIX(BufferSubData)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteBuffers)
	.type	GL_PREFIX(DeleteBuffers), @function
GL_PREFIX(DeleteBuffers):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3712(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3712(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3712(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3712(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteBuffers), .-GL_PREFIX(DeleteBuffers)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteQueries)
	.type	GL_PREFIX(DeleteQueries), @function
GL_PREFIX(DeleteQueries):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3720(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3720(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3720(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3720(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteQueries), .-GL_PREFIX(DeleteQueries)

	.p2align	4,,15
	.globl	GL_PREFIX(EndQuery)
	.type	GL_PREFIX(EndQuery), @function
GL_PREFIX(EndQuery):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3728(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3728(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3728(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3728(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EndQuery), .-GL_PREFIX(EndQuery)

	.p2align	4,,15
	.globl	GL_PREFIX(GenBuffers)
	.type	GL_PREFIX(GenBuffers), @function
GL_PREFIX(GenBuffers):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3736(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3736(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3736(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3736(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenBuffers), .-GL_PREFIX(GenBuffers)

	.p2align	4,,15
	.globl	GL_PREFIX(GenQueries)
	.type	GL_PREFIX(GenQueries), @function
GL_PREFIX(GenQueries):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3744(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3744(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3744(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3744(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenQueries), .-GL_PREFIX(GenQueries)

	.p2align	4,,15
	.globl	GL_PREFIX(GetBufferParameteriv)
	.type	GL_PREFIX(GetBufferParameteriv), @function
GL_PREFIX(GetBufferParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3752(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3752(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3752(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3752(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetBufferParameteriv), .-GL_PREFIX(GetBufferParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetBufferPointerv)
	.type	GL_PREFIX(GetBufferPointerv), @function
GL_PREFIX(GetBufferPointerv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3760(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3760(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3760(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3760(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetBufferPointerv), .-GL_PREFIX(GetBufferPointerv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetBufferSubData)
	.type	GL_PREFIX(GetBufferSubData), @function
GL_PREFIX(GetBufferSubData):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3768(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3768(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3768(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3768(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetBufferSubData), .-GL_PREFIX(GetBufferSubData)

	.p2align	4,,15
	.globl	GL_PREFIX(GetQueryObjectiv)
	.type	GL_PREFIX(GetQueryObjectiv), @function
GL_PREFIX(GetQueryObjectiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3776(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3776(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3776(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3776(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetQueryObjectiv), .-GL_PREFIX(GetQueryObjectiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetQueryObjectuiv)
	.type	GL_PREFIX(GetQueryObjectuiv), @function
GL_PREFIX(GetQueryObjectuiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3784(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3784(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3784(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3784(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetQueryObjectuiv), .-GL_PREFIX(GetQueryObjectuiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetQueryiv)
	.type	GL_PREFIX(GetQueryiv), @function
GL_PREFIX(GetQueryiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3792(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3792(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3792(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3792(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetQueryiv), .-GL_PREFIX(GetQueryiv)

	.p2align	4,,15
	.globl	GL_PREFIX(IsBuffer)
	.type	GL_PREFIX(IsBuffer), @function
GL_PREFIX(IsBuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3800(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3800(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3800(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3800(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsBuffer), .-GL_PREFIX(IsBuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(IsQuery)
	.type	GL_PREFIX(IsQuery), @function
GL_PREFIX(IsQuery):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3808(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3808(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3808(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3808(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsQuery), .-GL_PREFIX(IsQuery)

	.p2align	4,,15
	.globl	GL_PREFIX(MapBuffer)
	.type	GL_PREFIX(MapBuffer), @function
GL_PREFIX(MapBuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3816(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3816(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3816(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3816(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MapBuffer), .-GL_PREFIX(MapBuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(UnmapBuffer)
	.type	GL_PREFIX(UnmapBuffer), @function
GL_PREFIX(UnmapBuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3824(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3824(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3824(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3824(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UnmapBuffer), .-GL_PREFIX(UnmapBuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(AttachShader)
	.type	GL_PREFIX(AttachShader), @function
GL_PREFIX(AttachShader):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3832(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3832(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3832(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3832(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(AttachShader), .-GL_PREFIX(AttachShader)

	.p2align	4,,15
	.globl	GL_PREFIX(BindAttribLocation)
	.type	GL_PREFIX(BindAttribLocation), @function
GL_PREFIX(BindAttribLocation):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3840(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3840(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3840(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3840(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindAttribLocation), .-GL_PREFIX(BindAttribLocation)

	.p2align	4,,15
	.globl	GL_PREFIX(BlendEquationSeparate)
	.type	GL_PREFIX(BlendEquationSeparate), @function
GL_PREFIX(BlendEquationSeparate):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3848(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3848(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3848(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3848(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BlendEquationSeparate), .-GL_PREFIX(BlendEquationSeparate)

	.p2align	4,,15
	.globl	GL_PREFIX(CompileShader)
	.type	GL_PREFIX(CompileShader), @function
GL_PREFIX(CompileShader):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3856(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3856(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3856(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3856(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CompileShader), .-GL_PREFIX(CompileShader)

	.p2align	4,,15
	.globl	GL_PREFIX(CreateProgram)
	.type	GL_PREFIX(CreateProgram), @function
GL_PREFIX(CreateProgram):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3864(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	3864(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3864(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	3864(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CreateProgram), .-GL_PREFIX(CreateProgram)

	.p2align	4,,15
	.globl	GL_PREFIX(CreateShader)
	.type	GL_PREFIX(CreateShader), @function
GL_PREFIX(CreateShader):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3872(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3872(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3872(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3872(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CreateShader), .-GL_PREFIX(CreateShader)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteProgram)
	.type	GL_PREFIX(DeleteProgram), @function
GL_PREFIX(DeleteProgram):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3880(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3880(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3880(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3880(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteProgram), .-GL_PREFIX(DeleteProgram)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteShader)
	.type	GL_PREFIX(DeleteShader), @function
GL_PREFIX(DeleteShader):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3888(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3888(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3888(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3888(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteShader), .-GL_PREFIX(DeleteShader)

	.p2align	4,,15
	.globl	GL_PREFIX(DetachShader)
	.type	GL_PREFIX(DetachShader), @function
GL_PREFIX(DetachShader):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3896(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3896(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3896(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3896(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DetachShader), .-GL_PREFIX(DetachShader)

	.p2align	4,,15
	.globl	GL_PREFIX(DisableVertexAttribArray)
	.type	GL_PREFIX(DisableVertexAttribArray), @function
GL_PREFIX(DisableVertexAttribArray):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3904(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3904(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3904(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3904(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DisableVertexAttribArray), .-GL_PREFIX(DisableVertexAttribArray)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawBuffers)
	.type	GL_PREFIX(DrawBuffers), @function
GL_PREFIX(DrawBuffers):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3912(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3912(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3912(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3912(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawBuffers), .-GL_PREFIX(DrawBuffers)

	.p2align	4,,15
	.globl	GL_PREFIX(EnableVertexAttribArray)
	.type	GL_PREFIX(EnableVertexAttribArray), @function
GL_PREFIX(EnableVertexAttribArray):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3920(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	3920(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3920(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	3920(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EnableVertexAttribArray), .-GL_PREFIX(EnableVertexAttribArray)

	.p2align	4,,15
	.globl	GL_PREFIX(GetActiveAttrib)
	.type	GL_PREFIX(GetActiveAttrib), @function
GL_PREFIX(GetActiveAttrib):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3928(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3928(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3928(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3928(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetActiveAttrib), .-GL_PREFIX(GetActiveAttrib)

	.p2align	4,,15
	.globl	GL_PREFIX(GetActiveUniform)
	.type	GL_PREFIX(GetActiveUniform), @function
GL_PREFIX(GetActiveUniform):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3936(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3936(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3936(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3936(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetActiveUniform), .-GL_PREFIX(GetActiveUniform)

	.p2align	4,,15
	.globl	GL_PREFIX(GetAttachedShaders)
	.type	GL_PREFIX(GetAttachedShaders), @function
GL_PREFIX(GetAttachedShaders):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3944(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3944(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3944(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3944(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetAttachedShaders), .-GL_PREFIX(GetAttachedShaders)

	.p2align	4,,15
	.globl	GL_PREFIX(GetAttribLocation)
	.type	GL_PREFIX(GetAttribLocation), @function
GL_PREFIX(GetAttribLocation):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3952(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3952(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3952(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	3952(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetAttribLocation), .-GL_PREFIX(GetAttribLocation)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramInfoLog)
	.type	GL_PREFIX(GetProgramInfoLog), @function
GL_PREFIX(GetProgramInfoLog):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3960(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3960(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3960(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3960(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramInfoLog), .-GL_PREFIX(GetProgramInfoLog)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramiv)
	.type	GL_PREFIX(GetProgramiv), @function
GL_PREFIX(GetProgramiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3968(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3968(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3968(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3968(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramiv), .-GL_PREFIX(GetProgramiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetShaderInfoLog)
	.type	GL_PREFIX(GetShaderInfoLog), @function
GL_PREFIX(GetShaderInfoLog):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3976(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3976(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3976(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3976(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetShaderInfoLog), .-GL_PREFIX(GetShaderInfoLog)

	.p2align	4,,15
	.globl	GL_PREFIX(GetShaderSource)
	.type	GL_PREFIX(GetShaderSource), @function
GL_PREFIX(GetShaderSource):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3984(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3984(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3984(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3984(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetShaderSource), .-GL_PREFIX(GetShaderSource)

	.p2align	4,,15
	.globl	GL_PREFIX(GetShaderiv)
	.type	GL_PREFIX(GetShaderiv), @function
GL_PREFIX(GetShaderiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	3992(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3992(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	3992(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	3992(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetShaderiv), .-GL_PREFIX(GetShaderiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetUniformLocation)
	.type	GL_PREFIX(GetUniformLocation), @function
GL_PREFIX(GetUniformLocation):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4000(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4000(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4000(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4000(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetUniformLocation), .-GL_PREFIX(GetUniformLocation)

	.p2align	4,,15
	.globl	GL_PREFIX(GetUniformfv)
	.type	GL_PREFIX(GetUniformfv), @function
GL_PREFIX(GetUniformfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4008(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4008(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4008(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4008(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetUniformfv), .-GL_PREFIX(GetUniformfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetUniformiv)
	.type	GL_PREFIX(GetUniformiv), @function
GL_PREFIX(GetUniformiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4016(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4016(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4016(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4016(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetUniformiv), .-GL_PREFIX(GetUniformiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetVertexAttribPointerv)
	.type	GL_PREFIX(GetVertexAttribPointerv), @function
GL_PREFIX(GetVertexAttribPointerv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4024(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4024(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4024(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4024(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetVertexAttribPointerv), .-GL_PREFIX(GetVertexAttribPointerv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetVertexAttribdv)
	.type	GL_PREFIX(GetVertexAttribdv), @function
GL_PREFIX(GetVertexAttribdv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4032(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4032(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4032(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4032(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetVertexAttribdv), .-GL_PREFIX(GetVertexAttribdv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetVertexAttribfv)
	.type	GL_PREFIX(GetVertexAttribfv), @function
GL_PREFIX(GetVertexAttribfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4040(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4040(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4040(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4040(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetVertexAttribfv), .-GL_PREFIX(GetVertexAttribfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetVertexAttribiv)
	.type	GL_PREFIX(GetVertexAttribiv), @function
GL_PREFIX(GetVertexAttribiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4048(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4048(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4048(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4048(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetVertexAttribiv), .-GL_PREFIX(GetVertexAttribiv)

	.p2align	4,,15
	.globl	GL_PREFIX(IsProgram)
	.type	GL_PREFIX(IsProgram), @function
GL_PREFIX(IsProgram):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4056(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	4056(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4056(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	4056(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsProgram), .-GL_PREFIX(IsProgram)

	.p2align	4,,15
	.globl	GL_PREFIX(IsShader)
	.type	GL_PREFIX(IsShader), @function
GL_PREFIX(IsShader):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4064(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	4064(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4064(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	4064(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsShader), .-GL_PREFIX(IsShader)

	.p2align	4,,15
	.globl	GL_PREFIX(LinkProgram)
	.type	GL_PREFIX(LinkProgram), @function
GL_PREFIX(LinkProgram):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4072(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	4072(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4072(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	4072(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LinkProgram), .-GL_PREFIX(LinkProgram)

	.p2align	4,,15
	.globl	GL_PREFIX(ShaderSource)
	.type	GL_PREFIX(ShaderSource), @function
GL_PREFIX(ShaderSource):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4080(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4080(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4080(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4080(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ShaderSource), .-GL_PREFIX(ShaderSource)

	.p2align	4,,15
	.globl	GL_PREFIX(StencilFuncSeparate)
	.type	GL_PREFIX(StencilFuncSeparate), @function
GL_PREFIX(StencilFuncSeparate):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4088(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4088(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4088(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4088(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(StencilFuncSeparate), .-GL_PREFIX(StencilFuncSeparate)

	.p2align	4,,15
	.globl	GL_PREFIX(StencilMaskSeparate)
	.type	GL_PREFIX(StencilMaskSeparate), @function
GL_PREFIX(StencilMaskSeparate):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4096(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4096(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4096(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4096(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(StencilMaskSeparate), .-GL_PREFIX(StencilMaskSeparate)

	.p2align	4,,15
	.globl	GL_PREFIX(StencilOpSeparate)
	.type	GL_PREFIX(StencilOpSeparate), @function
GL_PREFIX(StencilOpSeparate):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4104(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(StencilOpSeparate), .-GL_PREFIX(StencilOpSeparate)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform1f)
	.type	GL_PREFIX(Uniform1f), @function
GL_PREFIX(Uniform1f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	4112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4112(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	4112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform1f), .-GL_PREFIX(Uniform1f)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform1fv)
	.type	GL_PREFIX(Uniform1fv), @function
GL_PREFIX(Uniform1fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform1fv), .-GL_PREFIX(Uniform1fv)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform1i)
	.type	GL_PREFIX(Uniform1i), @function
GL_PREFIX(Uniform1i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4128(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform1i), .-GL_PREFIX(Uniform1i)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform1iv)
	.type	GL_PREFIX(Uniform1iv), @function
GL_PREFIX(Uniform1iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4136(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform1iv), .-GL_PREFIX(Uniform1iv)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform2f)
	.type	GL_PREFIX(Uniform2f), @function
GL_PREFIX(Uniform2f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	4144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4144(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	4144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform2f), .-GL_PREFIX(Uniform2f)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform2fv)
	.type	GL_PREFIX(Uniform2fv), @function
GL_PREFIX(Uniform2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4152(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform2fv), .-GL_PREFIX(Uniform2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform2i)
	.type	GL_PREFIX(Uniform2i), @function
GL_PREFIX(Uniform2i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4160(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform2i), .-GL_PREFIX(Uniform2i)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform2iv)
	.type	GL_PREFIX(Uniform2iv), @function
GL_PREFIX(Uniform2iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform2iv), .-GL_PREFIX(Uniform2iv)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform3f)
	.type	GL_PREFIX(Uniform3f), @function
GL_PREFIX(Uniform3f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	4176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4176(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	4176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform3f), .-GL_PREFIX(Uniform3f)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform3fv)
	.type	GL_PREFIX(Uniform3fv), @function
GL_PREFIX(Uniform3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform3fv), .-GL_PREFIX(Uniform3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform3i)
	.type	GL_PREFIX(Uniform3i), @function
GL_PREFIX(Uniform3i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform3i), .-GL_PREFIX(Uniform3i)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform3iv)
	.type	GL_PREFIX(Uniform3iv), @function
GL_PREFIX(Uniform3iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4200(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform3iv), .-GL_PREFIX(Uniform3iv)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform4f)
	.type	GL_PREFIX(Uniform4f), @function
GL_PREFIX(Uniform4f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	4208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4208(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	4208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform4f), .-GL_PREFIX(Uniform4f)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform4fv)
	.type	GL_PREFIX(Uniform4fv), @function
GL_PREFIX(Uniform4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4216(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform4fv), .-GL_PREFIX(Uniform4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform4i)
	.type	GL_PREFIX(Uniform4i), @function
GL_PREFIX(Uniform4i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4224(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform4i), .-GL_PREFIX(Uniform4i)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform4iv)
	.type	GL_PREFIX(Uniform4iv), @function
GL_PREFIX(Uniform4iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4232(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform4iv), .-GL_PREFIX(Uniform4iv)

	.p2align	4,,15
	.globl	GL_PREFIX(UniformMatrix2fv)
	.type	GL_PREFIX(UniformMatrix2fv), @function
GL_PREFIX(UniformMatrix2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UniformMatrix2fv), .-GL_PREFIX(UniformMatrix2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(UniformMatrix3fv)
	.type	GL_PREFIX(UniformMatrix3fv), @function
GL_PREFIX(UniformMatrix3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4248(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UniformMatrix3fv), .-GL_PREFIX(UniformMatrix3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(UniformMatrix4fv)
	.type	GL_PREFIX(UniformMatrix4fv), @function
GL_PREFIX(UniformMatrix4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UniformMatrix4fv), .-GL_PREFIX(UniformMatrix4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(UseProgram)
	.type	GL_PREFIX(UseProgram), @function
GL_PREFIX(UseProgram):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	4264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	4264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UseProgram), .-GL_PREFIX(UseProgram)

	.p2align	4,,15
	.globl	GL_PREFIX(ValidateProgram)
	.type	GL_PREFIX(ValidateProgram), @function
GL_PREFIX(ValidateProgram):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	4272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4272(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	4272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ValidateProgram), .-GL_PREFIX(ValidateProgram)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib1d)
	.type	GL_PREFIX(VertexAttrib1d), @function
GL_PREFIX(VertexAttrib1d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4280(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	4280(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4280(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	4280(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib1d), .-GL_PREFIX(VertexAttrib1d)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib1dv)
	.type	GL_PREFIX(VertexAttrib1dv), @function
GL_PREFIX(VertexAttrib1dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4288(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4288(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4288(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4288(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib1dv), .-GL_PREFIX(VertexAttrib1dv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib1s)
	.type	GL_PREFIX(VertexAttrib1s), @function
GL_PREFIX(VertexAttrib1s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4296(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4296(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4296(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4296(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib1s), .-GL_PREFIX(VertexAttrib1s)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib1sv)
	.type	GL_PREFIX(VertexAttrib1sv), @function
GL_PREFIX(VertexAttrib1sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4304(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4304(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4304(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4304(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib1sv), .-GL_PREFIX(VertexAttrib1sv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib2d)
	.type	GL_PREFIX(VertexAttrib2d), @function
GL_PREFIX(VertexAttrib2d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4312(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	4312(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4312(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	4312(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib2d), .-GL_PREFIX(VertexAttrib2d)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib2dv)
	.type	GL_PREFIX(VertexAttrib2dv), @function
GL_PREFIX(VertexAttrib2dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4320(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4320(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4320(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4320(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib2dv), .-GL_PREFIX(VertexAttrib2dv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib2s)
	.type	GL_PREFIX(VertexAttrib2s), @function
GL_PREFIX(VertexAttrib2s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4328(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4328(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4328(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4328(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib2s), .-GL_PREFIX(VertexAttrib2s)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib2sv)
	.type	GL_PREFIX(VertexAttrib2sv), @function
GL_PREFIX(VertexAttrib2sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4336(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4336(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4336(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4336(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib2sv), .-GL_PREFIX(VertexAttrib2sv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib3d)
	.type	GL_PREFIX(VertexAttrib3d), @function
GL_PREFIX(VertexAttrib3d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4344(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	4344(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4344(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	4344(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib3d), .-GL_PREFIX(VertexAttrib3d)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib3dv)
	.type	GL_PREFIX(VertexAttrib3dv), @function
GL_PREFIX(VertexAttrib3dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4352(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4352(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4352(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4352(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib3dv), .-GL_PREFIX(VertexAttrib3dv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib3s)
	.type	GL_PREFIX(VertexAttrib3s), @function
GL_PREFIX(VertexAttrib3s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4360(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4360(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4360(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4360(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib3s), .-GL_PREFIX(VertexAttrib3s)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib3sv)
	.type	GL_PREFIX(VertexAttrib3sv), @function
GL_PREFIX(VertexAttrib3sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4368(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4368(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4368(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4368(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib3sv), .-GL_PREFIX(VertexAttrib3sv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4Nbv)
	.type	GL_PREFIX(VertexAttrib4Nbv), @function
GL_PREFIX(VertexAttrib4Nbv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4376(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4376(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4376(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4376(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4Nbv), .-GL_PREFIX(VertexAttrib4Nbv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4Niv)
	.type	GL_PREFIX(VertexAttrib4Niv), @function
GL_PREFIX(VertexAttrib4Niv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4384(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4384(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4384(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4384(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4Niv), .-GL_PREFIX(VertexAttrib4Niv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4Nsv)
	.type	GL_PREFIX(VertexAttrib4Nsv), @function
GL_PREFIX(VertexAttrib4Nsv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4392(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4392(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4392(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4392(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4Nsv), .-GL_PREFIX(VertexAttrib4Nsv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4Nub)
	.type	GL_PREFIX(VertexAttrib4Nub), @function
GL_PREFIX(VertexAttrib4Nub):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4400(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4400(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4400(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4400(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4Nub), .-GL_PREFIX(VertexAttrib4Nub)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4Nubv)
	.type	GL_PREFIX(VertexAttrib4Nubv), @function
GL_PREFIX(VertexAttrib4Nubv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4408(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4408(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4408(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4408(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4Nubv), .-GL_PREFIX(VertexAttrib4Nubv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4Nuiv)
	.type	GL_PREFIX(VertexAttrib4Nuiv), @function
GL_PREFIX(VertexAttrib4Nuiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4416(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4416(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4416(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4416(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4Nuiv), .-GL_PREFIX(VertexAttrib4Nuiv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4Nusv)
	.type	GL_PREFIX(VertexAttrib4Nusv), @function
GL_PREFIX(VertexAttrib4Nusv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4424(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4424(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4424(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4424(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4Nusv), .-GL_PREFIX(VertexAttrib4Nusv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4bv)
	.type	GL_PREFIX(VertexAttrib4bv), @function
GL_PREFIX(VertexAttrib4bv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4432(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4432(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4432(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4432(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4bv), .-GL_PREFIX(VertexAttrib4bv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4d)
	.type	GL_PREFIX(VertexAttrib4d), @function
GL_PREFIX(VertexAttrib4d):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4440(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	4440(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4440(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	4440(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4d), .-GL_PREFIX(VertexAttrib4d)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4dv)
	.type	GL_PREFIX(VertexAttrib4dv), @function
GL_PREFIX(VertexAttrib4dv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4448(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4448(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4448(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4448(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4dv), .-GL_PREFIX(VertexAttrib4dv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4iv)
	.type	GL_PREFIX(VertexAttrib4iv), @function
GL_PREFIX(VertexAttrib4iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4456(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4456(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4456(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4456(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4iv), .-GL_PREFIX(VertexAttrib4iv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4s)
	.type	GL_PREFIX(VertexAttrib4s), @function
GL_PREFIX(VertexAttrib4s):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4464(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4464(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4464(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4464(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4s), .-GL_PREFIX(VertexAttrib4s)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4sv)
	.type	GL_PREFIX(VertexAttrib4sv), @function
GL_PREFIX(VertexAttrib4sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4472(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4472(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4472(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4472(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4sv), .-GL_PREFIX(VertexAttrib4sv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4ubv)
	.type	GL_PREFIX(VertexAttrib4ubv), @function
GL_PREFIX(VertexAttrib4ubv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4480(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4480(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4480(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4480(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4ubv), .-GL_PREFIX(VertexAttrib4ubv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4uiv)
	.type	GL_PREFIX(VertexAttrib4uiv), @function
GL_PREFIX(VertexAttrib4uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4488(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4488(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4488(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4488(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4uiv), .-GL_PREFIX(VertexAttrib4uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4usv)
	.type	GL_PREFIX(VertexAttrib4usv), @function
GL_PREFIX(VertexAttrib4usv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4496(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4496(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4496(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4496(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4usv), .-GL_PREFIX(VertexAttrib4usv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribPointer)
	.type	GL_PREFIX(VertexAttribPointer), @function
GL_PREFIX(VertexAttribPointer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4504(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4504(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4504(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4504(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribPointer), .-GL_PREFIX(VertexAttribPointer)

	.p2align	4,,15
	.globl	GL_PREFIX(UniformMatrix2x3fv)
	.type	GL_PREFIX(UniformMatrix2x3fv), @function
GL_PREFIX(UniformMatrix2x3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4512(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4512(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4512(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4512(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UniformMatrix2x3fv), .-GL_PREFIX(UniformMatrix2x3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(UniformMatrix2x4fv)
	.type	GL_PREFIX(UniformMatrix2x4fv), @function
GL_PREFIX(UniformMatrix2x4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4520(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4520(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4520(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4520(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UniformMatrix2x4fv), .-GL_PREFIX(UniformMatrix2x4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(UniformMatrix3x2fv)
	.type	GL_PREFIX(UniformMatrix3x2fv), @function
GL_PREFIX(UniformMatrix3x2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4528(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4528(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4528(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4528(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UniformMatrix3x2fv), .-GL_PREFIX(UniformMatrix3x2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(UniformMatrix3x4fv)
	.type	GL_PREFIX(UniformMatrix3x4fv), @function
GL_PREFIX(UniformMatrix3x4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4536(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4536(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4536(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4536(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UniformMatrix3x4fv), .-GL_PREFIX(UniformMatrix3x4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(UniformMatrix4x2fv)
	.type	GL_PREFIX(UniformMatrix4x2fv), @function
GL_PREFIX(UniformMatrix4x2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4544(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4544(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4544(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4544(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UniformMatrix4x2fv), .-GL_PREFIX(UniformMatrix4x2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(UniformMatrix4x3fv)
	.type	GL_PREFIX(UniformMatrix4x3fv), @function
GL_PREFIX(UniformMatrix4x3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4552(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4552(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4552(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4552(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UniformMatrix4x3fv), .-GL_PREFIX(UniformMatrix4x3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(BeginConditionalRender)
	.type	GL_PREFIX(BeginConditionalRender), @function
GL_PREFIX(BeginConditionalRender):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4560(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4560(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4560(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4560(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BeginConditionalRender), .-GL_PREFIX(BeginConditionalRender)

	.p2align	4,,15
	.globl	GL_PREFIX(BeginTransformFeedback)
	.type	GL_PREFIX(BeginTransformFeedback), @function
GL_PREFIX(BeginTransformFeedback):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4568(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	4568(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4568(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	4568(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BeginTransformFeedback), .-GL_PREFIX(BeginTransformFeedback)

	.p2align	4,,15
	.globl	GL_PREFIX(BindBufferBase)
	.type	GL_PREFIX(BindBufferBase), @function
GL_PREFIX(BindBufferBase):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4576(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4576(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4576(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4576(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindBufferBase), .-GL_PREFIX(BindBufferBase)

	.p2align	4,,15
	.globl	GL_PREFIX(BindBufferRange)
	.type	GL_PREFIX(BindBufferRange), @function
GL_PREFIX(BindBufferRange):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4584(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4584(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4584(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4584(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindBufferRange), .-GL_PREFIX(BindBufferRange)

	.p2align	4,,15
	.globl	GL_PREFIX(BindFragDataLocation)
	.type	GL_PREFIX(BindFragDataLocation), @function
GL_PREFIX(BindFragDataLocation):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4592(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4592(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4592(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4592(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindFragDataLocation), .-GL_PREFIX(BindFragDataLocation)

	.p2align	4,,15
	.globl	GL_PREFIX(ClampColor)
	.type	GL_PREFIX(ClampColor), @function
GL_PREFIX(ClampColor):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4600(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4600(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4600(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4600(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClampColor), .-GL_PREFIX(ClampColor)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearBufferfi)
	.type	GL_PREFIX(ClearBufferfi), @function
GL_PREFIX(ClearBufferfi):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4608(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%rdx, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %rdx
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	4608(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4608(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%rdx, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %rdx
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	4608(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearBufferfi), .-GL_PREFIX(ClearBufferfi)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearBufferfv)
	.type	GL_PREFIX(ClearBufferfv), @function
GL_PREFIX(ClearBufferfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4616(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4616(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4616(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4616(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearBufferfv), .-GL_PREFIX(ClearBufferfv)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearBufferiv)
	.type	GL_PREFIX(ClearBufferiv), @function
GL_PREFIX(ClearBufferiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4624(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4624(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4624(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4624(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearBufferiv), .-GL_PREFIX(ClearBufferiv)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearBufferuiv)
	.type	GL_PREFIX(ClearBufferuiv), @function
GL_PREFIX(ClearBufferuiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4632(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4632(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4632(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4632(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearBufferuiv), .-GL_PREFIX(ClearBufferuiv)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorMaski)
	.type	GL_PREFIX(ColorMaski), @function
GL_PREFIX(ColorMaski):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4640(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4640(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4640(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4640(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorMaski), .-GL_PREFIX(ColorMaski)

	.p2align	4,,15
	.globl	GL_PREFIX(Disablei)
	.type	GL_PREFIX(Disablei), @function
GL_PREFIX(Disablei):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4648(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4648(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4648(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4648(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Disablei), .-GL_PREFIX(Disablei)

	.p2align	4,,15
	.globl	GL_PREFIX(Enablei)
	.type	GL_PREFIX(Enablei), @function
GL_PREFIX(Enablei):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4656(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4656(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4656(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4656(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Enablei), .-GL_PREFIX(Enablei)

	.p2align	4,,15
	.globl	GL_PREFIX(EndConditionalRender)
	.type	GL_PREFIX(EndConditionalRender), @function
GL_PREFIX(EndConditionalRender):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4664(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	4664(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4664(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	4664(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EndConditionalRender), .-GL_PREFIX(EndConditionalRender)

	.p2align	4,,15
	.globl	GL_PREFIX(EndTransformFeedback)
	.type	GL_PREFIX(EndTransformFeedback), @function
GL_PREFIX(EndTransformFeedback):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4672(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	4672(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4672(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	4672(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EndTransformFeedback), .-GL_PREFIX(EndTransformFeedback)

	.p2align	4,,15
	.globl	GL_PREFIX(GetBooleani_v)
	.type	GL_PREFIX(GetBooleani_v), @function
GL_PREFIX(GetBooleani_v):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4680(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4680(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4680(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4680(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetBooleani_v), .-GL_PREFIX(GetBooleani_v)

	.p2align	4,,15
	.globl	GL_PREFIX(GetFragDataLocation)
	.type	GL_PREFIX(GetFragDataLocation), @function
GL_PREFIX(GetFragDataLocation):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4688(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4688(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4688(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4688(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetFragDataLocation), .-GL_PREFIX(GetFragDataLocation)

	.p2align	4,,15
	.globl	GL_PREFIX(GetIntegeri_v)
	.type	GL_PREFIX(GetIntegeri_v), @function
GL_PREFIX(GetIntegeri_v):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4696(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4696(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4696(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4696(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetIntegeri_v), .-GL_PREFIX(GetIntegeri_v)

	.p2align	4,,15
	.globl	GL_PREFIX(GetStringi)
	.type	GL_PREFIX(GetStringi), @function
GL_PREFIX(GetStringi):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4704(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4704(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4704(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4704(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetStringi), .-GL_PREFIX(GetStringi)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexParameterIiv)
	.type	GL_PREFIX(GetTexParameterIiv), @function
GL_PREFIX(GetTexParameterIiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4712(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4712(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4712(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4712(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexParameterIiv), .-GL_PREFIX(GetTexParameterIiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexParameterIuiv)
	.type	GL_PREFIX(GetTexParameterIuiv), @function
GL_PREFIX(GetTexParameterIuiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4720(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4720(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4720(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4720(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexParameterIuiv), .-GL_PREFIX(GetTexParameterIuiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTransformFeedbackVarying)
	.type	GL_PREFIX(GetTransformFeedbackVarying), @function
GL_PREFIX(GetTransformFeedbackVarying):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4728(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4728(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4728(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4728(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTransformFeedbackVarying), .-GL_PREFIX(GetTransformFeedbackVarying)

	.p2align	4,,15
	.globl	GL_PREFIX(GetUniformuiv)
	.type	GL_PREFIX(GetUniformuiv), @function
GL_PREFIX(GetUniformuiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4736(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4736(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4736(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4736(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetUniformuiv), .-GL_PREFIX(GetUniformuiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetVertexAttribIiv)
	.type	GL_PREFIX(GetVertexAttribIiv), @function
GL_PREFIX(GetVertexAttribIiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4744(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4744(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4744(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4744(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetVertexAttribIiv), .-GL_PREFIX(GetVertexAttribIiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetVertexAttribIuiv)
	.type	GL_PREFIX(GetVertexAttribIuiv), @function
GL_PREFIX(GetVertexAttribIuiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4752(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4752(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4752(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4752(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetVertexAttribIuiv), .-GL_PREFIX(GetVertexAttribIuiv)

	.p2align	4,,15
	.globl	GL_PREFIX(IsEnabledi)
	.type	GL_PREFIX(IsEnabledi), @function
GL_PREFIX(IsEnabledi):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4760(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4760(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4760(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4760(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsEnabledi), .-GL_PREFIX(IsEnabledi)

	.p2align	4,,15
	.globl	GL_PREFIX(TexParameterIiv)
	.type	GL_PREFIX(TexParameterIiv), @function
GL_PREFIX(TexParameterIiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4768(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4768(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4768(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4768(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexParameterIiv), .-GL_PREFIX(TexParameterIiv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexParameterIuiv)
	.type	GL_PREFIX(TexParameterIuiv), @function
GL_PREFIX(TexParameterIuiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4776(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4776(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4776(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4776(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexParameterIuiv), .-GL_PREFIX(TexParameterIuiv)

	.p2align	4,,15
	.globl	GL_PREFIX(TransformFeedbackVaryings)
	.type	GL_PREFIX(TransformFeedbackVaryings), @function
GL_PREFIX(TransformFeedbackVaryings):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4784(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4784(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4784(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4784(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TransformFeedbackVaryings), .-GL_PREFIX(TransformFeedbackVaryings)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform1ui)
	.type	GL_PREFIX(Uniform1ui), @function
GL_PREFIX(Uniform1ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4792(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4792(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4792(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4792(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform1ui), .-GL_PREFIX(Uniform1ui)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform1uiv)
	.type	GL_PREFIX(Uniform1uiv), @function
GL_PREFIX(Uniform1uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4800(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4800(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4800(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4800(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform1uiv), .-GL_PREFIX(Uniform1uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform2ui)
	.type	GL_PREFIX(Uniform2ui), @function
GL_PREFIX(Uniform2ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4808(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4808(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4808(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4808(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform2ui), .-GL_PREFIX(Uniform2ui)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform2uiv)
	.type	GL_PREFIX(Uniform2uiv), @function
GL_PREFIX(Uniform2uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4816(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4816(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4816(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4816(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform2uiv), .-GL_PREFIX(Uniform2uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform3ui)
	.type	GL_PREFIX(Uniform3ui), @function
GL_PREFIX(Uniform3ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4824(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4824(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4824(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4824(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform3ui), .-GL_PREFIX(Uniform3ui)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform3uiv)
	.type	GL_PREFIX(Uniform3uiv), @function
GL_PREFIX(Uniform3uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4832(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4832(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4832(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4832(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform3uiv), .-GL_PREFIX(Uniform3uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform4ui)
	.type	GL_PREFIX(Uniform4ui), @function
GL_PREFIX(Uniform4ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4840(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4840(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4840(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4840(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform4ui), .-GL_PREFIX(Uniform4ui)

	.p2align	4,,15
	.globl	GL_PREFIX(Uniform4uiv)
	.type	GL_PREFIX(Uniform4uiv), @function
GL_PREFIX(Uniform4uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4848(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4848(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4848(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4848(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Uniform4uiv), .-GL_PREFIX(Uniform4uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI1iv)
	.type	GL_PREFIX(VertexAttribI1iv), @function
GL_PREFIX(VertexAttribI1iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4856(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4856(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4856(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4856(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI1iv), .-GL_PREFIX(VertexAttribI1iv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI1uiv)
	.type	GL_PREFIX(VertexAttribI1uiv), @function
GL_PREFIX(VertexAttribI1uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4864(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4864(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4864(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4864(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI1uiv), .-GL_PREFIX(VertexAttribI1uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI4bv)
	.type	GL_PREFIX(VertexAttribI4bv), @function
GL_PREFIX(VertexAttribI4bv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4872(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4872(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4872(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4872(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI4bv), .-GL_PREFIX(VertexAttribI4bv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI4sv)
	.type	GL_PREFIX(VertexAttribI4sv), @function
GL_PREFIX(VertexAttribI4sv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4880(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4880(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4880(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4880(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI4sv), .-GL_PREFIX(VertexAttribI4sv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI4ubv)
	.type	GL_PREFIX(VertexAttribI4ubv), @function
GL_PREFIX(VertexAttribI4ubv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4888(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4888(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4888(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4888(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI4ubv), .-GL_PREFIX(VertexAttribI4ubv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI4usv)
	.type	GL_PREFIX(VertexAttribI4usv), @function
GL_PREFIX(VertexAttribI4usv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4896(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4896(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4896(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4896(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI4usv), .-GL_PREFIX(VertexAttribI4usv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribIPointer)
	.type	GL_PREFIX(VertexAttribIPointer), @function
GL_PREFIX(VertexAttribIPointer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4904(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4904(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4904(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4904(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribIPointer), .-GL_PREFIX(VertexAttribIPointer)

	.p2align	4,,15
	.globl	GL_PREFIX(PrimitiveRestartIndex)
	.type	GL_PREFIX(PrimitiveRestartIndex), @function
GL_PREFIX(PrimitiveRestartIndex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4912(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	4912(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4912(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	4912(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PrimitiveRestartIndex), .-GL_PREFIX(PrimitiveRestartIndex)

	.p2align	4,,15
	.globl	GL_PREFIX(TexBuffer)
	.type	GL_PREFIX(TexBuffer), @function
GL_PREFIX(TexBuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4920(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4920(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4920(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4920(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexBuffer), .-GL_PREFIX(TexBuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(FramebufferTexture)
	.type	GL_PREFIX(FramebufferTexture), @function
GL_PREFIX(FramebufferTexture):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4928(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4928(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4928(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4928(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FramebufferTexture), .-GL_PREFIX(FramebufferTexture)

	.p2align	4,,15
	.globl	GL_PREFIX(GetBufferParameteri64v)
	.type	GL_PREFIX(GetBufferParameteri64v), @function
GL_PREFIX(GetBufferParameteri64v):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4936(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4936(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4936(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4936(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetBufferParameteri64v), .-GL_PREFIX(GetBufferParameteri64v)

	.p2align	4,,15
	.globl	GL_PREFIX(GetInteger64i_v)
	.type	GL_PREFIX(GetInteger64i_v), @function
GL_PREFIX(GetInteger64i_v):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4944(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4944(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4944(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	4944(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetInteger64i_v), .-GL_PREFIX(GetInteger64i_v)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribDivisor)
	.type	GL_PREFIX(VertexAttribDivisor), @function
GL_PREFIX(VertexAttribDivisor):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4952(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4952(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4952(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4952(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribDivisor), .-GL_PREFIX(VertexAttribDivisor)

	.p2align	4,,15
	.globl	GL_PREFIX(MinSampleShading)
	.type	GL_PREFIX(MinSampleShading), @function
GL_PREFIX(MinSampleShading):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4960(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	4960(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4960(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	4960(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MinSampleShading), .-GL_PREFIX(MinSampleShading)

	.p2align	4,,15
	.globl	GL_PREFIX(MemoryBarrierByRegion)
	.type	GL_PREFIX(MemoryBarrierByRegion), @function
GL_PREFIX(MemoryBarrierByRegion):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4968(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	4968(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4968(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	4968(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MemoryBarrierByRegion), .-GL_PREFIX(MemoryBarrierByRegion)

	.p2align	4,,15
	.globl	GL_PREFIX(BindProgramARB)
	.type	GL_PREFIX(BindProgramARB), @function
GL_PREFIX(BindProgramARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4976(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4976(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4976(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4976(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindProgramARB), .-GL_PREFIX(BindProgramARB)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteProgramsARB)
	.type	GL_PREFIX(DeleteProgramsARB), @function
GL_PREFIX(DeleteProgramsARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4984(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4984(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4984(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4984(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteProgramsARB), .-GL_PREFIX(DeleteProgramsARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GenProgramsARB)
	.type	GL_PREFIX(GenProgramsARB), @function
GL_PREFIX(GenProgramsARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	4992(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4992(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	4992(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	4992(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenProgramsARB), .-GL_PREFIX(GenProgramsARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramEnvParameterdvARB)
	.type	GL_PREFIX(GetProgramEnvParameterdvARB), @function
GL_PREFIX(GetProgramEnvParameterdvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5000(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5000(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5000(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5000(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramEnvParameterdvARB), .-GL_PREFIX(GetProgramEnvParameterdvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramEnvParameterfvARB)
	.type	GL_PREFIX(GetProgramEnvParameterfvARB), @function
GL_PREFIX(GetProgramEnvParameterfvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5008(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5008(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5008(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5008(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramEnvParameterfvARB), .-GL_PREFIX(GetProgramEnvParameterfvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramLocalParameterdvARB)
	.type	GL_PREFIX(GetProgramLocalParameterdvARB), @function
GL_PREFIX(GetProgramLocalParameterdvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5016(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5016(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5016(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5016(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramLocalParameterdvARB), .-GL_PREFIX(GetProgramLocalParameterdvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramLocalParameterfvARB)
	.type	GL_PREFIX(GetProgramLocalParameterfvARB), @function
GL_PREFIX(GetProgramLocalParameterfvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5024(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5024(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5024(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5024(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramLocalParameterfvARB), .-GL_PREFIX(GetProgramLocalParameterfvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramStringARB)
	.type	GL_PREFIX(GetProgramStringARB), @function
GL_PREFIX(GetProgramStringARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5032(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5032(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5032(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5032(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramStringARB), .-GL_PREFIX(GetProgramStringARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramivARB)
	.type	GL_PREFIX(GetProgramivARB), @function
GL_PREFIX(GetProgramivARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5040(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5040(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5040(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5040(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramivARB), .-GL_PREFIX(GetProgramivARB)

	.p2align	4,,15
	.globl	GL_PREFIX(IsProgramARB)
	.type	GL_PREFIX(IsProgramARB), @function
GL_PREFIX(IsProgramARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5048(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5048(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5048(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5048(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsProgramARB), .-GL_PREFIX(IsProgramARB)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramEnvParameter4dARB)
	.type	GL_PREFIX(ProgramEnvParameter4dARB), @function
GL_PREFIX(ProgramEnvParameter4dARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5056(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	5056(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5056(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	5056(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramEnvParameter4dARB), .-GL_PREFIX(ProgramEnvParameter4dARB)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramEnvParameter4dvARB)
	.type	GL_PREFIX(ProgramEnvParameter4dvARB), @function
GL_PREFIX(ProgramEnvParameter4dvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5064(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5064(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5064(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5064(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramEnvParameter4dvARB), .-GL_PREFIX(ProgramEnvParameter4dvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramEnvParameter4fARB)
	.type	GL_PREFIX(ProgramEnvParameter4fARB), @function
GL_PREFIX(ProgramEnvParameter4fARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5072(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	5072(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5072(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	5072(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramEnvParameter4fARB), .-GL_PREFIX(ProgramEnvParameter4fARB)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramEnvParameter4fvARB)
	.type	GL_PREFIX(ProgramEnvParameter4fvARB), @function
GL_PREFIX(ProgramEnvParameter4fvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5080(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5080(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5080(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5080(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramEnvParameter4fvARB), .-GL_PREFIX(ProgramEnvParameter4fvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramLocalParameter4dARB)
	.type	GL_PREFIX(ProgramLocalParameter4dARB), @function
GL_PREFIX(ProgramLocalParameter4dARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5088(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	5088(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5088(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	5088(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramLocalParameter4dARB), .-GL_PREFIX(ProgramLocalParameter4dARB)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramLocalParameter4dvARB)
	.type	GL_PREFIX(ProgramLocalParameter4dvARB), @function
GL_PREFIX(ProgramLocalParameter4dvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5096(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5096(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5096(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5096(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramLocalParameter4dvARB), .-GL_PREFIX(ProgramLocalParameter4dvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramLocalParameter4fARB)
	.type	GL_PREFIX(ProgramLocalParameter4fARB), @function
GL_PREFIX(ProgramLocalParameter4fARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	5104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5104(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	5104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramLocalParameter4fARB), .-GL_PREFIX(ProgramLocalParameter4fARB)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramLocalParameter4fvARB)
	.type	GL_PREFIX(ProgramLocalParameter4fvARB), @function
GL_PREFIX(ProgramLocalParameter4fvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5112(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramLocalParameter4fvARB), .-GL_PREFIX(ProgramLocalParameter4fvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramStringARB)
	.type	GL_PREFIX(ProgramStringARB), @function
GL_PREFIX(ProgramStringARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramStringARB), .-GL_PREFIX(ProgramStringARB)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib1fARB)
	.type	GL_PREFIX(VertexAttrib1fARB), @function
GL_PREFIX(VertexAttrib1fARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	5128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5128(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	5128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib1fARB), .-GL_PREFIX(VertexAttrib1fARB)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib1fvARB)
	.type	GL_PREFIX(VertexAttrib1fvARB), @function
GL_PREFIX(VertexAttrib1fvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5136(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib1fvARB), .-GL_PREFIX(VertexAttrib1fvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib2fARB)
	.type	GL_PREFIX(VertexAttrib2fARB), @function
GL_PREFIX(VertexAttrib2fARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	5144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5144(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	5144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib2fARB), .-GL_PREFIX(VertexAttrib2fARB)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib2fvARB)
	.type	GL_PREFIX(VertexAttrib2fvARB), @function
GL_PREFIX(VertexAttrib2fvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5152(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib2fvARB), .-GL_PREFIX(VertexAttrib2fvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib3fARB)
	.type	GL_PREFIX(VertexAttrib3fARB), @function
GL_PREFIX(VertexAttrib3fARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	5160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5160(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	5160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib3fARB), .-GL_PREFIX(VertexAttrib3fARB)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib3fvARB)
	.type	GL_PREFIX(VertexAttrib3fvARB), @function
GL_PREFIX(VertexAttrib3fvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib3fvARB), .-GL_PREFIX(VertexAttrib3fvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4fARB)
	.type	GL_PREFIX(VertexAttrib4fARB), @function
GL_PREFIX(VertexAttrib4fARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	5176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5176(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	5176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4fARB), .-GL_PREFIX(VertexAttrib4fARB)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttrib4fvARB)
	.type	GL_PREFIX(VertexAttrib4fvARB), @function
GL_PREFIX(VertexAttrib4fvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttrib4fvARB), .-GL_PREFIX(VertexAttrib4fvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(AttachObjectARB)
	.type	GL_PREFIX(AttachObjectARB), @function
GL_PREFIX(AttachObjectARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(AttachObjectARB), .-GL_PREFIX(AttachObjectARB)

	.p2align	4,,15
	.globl	GL_PREFIX(CreateProgramObjectARB)
	.type	GL_PREFIX(CreateProgramObjectARB), @function
GL_PREFIX(CreateProgramObjectARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	5200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5200(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	5200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CreateProgramObjectARB), .-GL_PREFIX(CreateProgramObjectARB)

	.p2align	4,,15
	.globl	GL_PREFIX(CreateShaderObjectARB)
	.type	GL_PREFIX(CreateShaderObjectARB), @function
GL_PREFIX(CreateShaderObjectARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5208(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CreateShaderObjectARB), .-GL_PREFIX(CreateShaderObjectARB)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteObjectARB)
	.type	GL_PREFIX(DeleteObjectARB), @function
GL_PREFIX(DeleteObjectARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5216(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteObjectARB), .-GL_PREFIX(DeleteObjectARB)

	.p2align	4,,15
	.globl	GL_PREFIX(DetachObjectARB)
	.type	GL_PREFIX(DetachObjectARB), @function
GL_PREFIX(DetachObjectARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5224(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DetachObjectARB), .-GL_PREFIX(DetachObjectARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetAttachedObjectsARB)
	.type	GL_PREFIX(GetAttachedObjectsARB), @function
GL_PREFIX(GetAttachedObjectsARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5232(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetAttachedObjectsARB), .-GL_PREFIX(GetAttachedObjectsARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetHandleARB)
	.type	GL_PREFIX(GetHandleARB), @function
GL_PREFIX(GetHandleARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetHandleARB), .-GL_PREFIX(GetHandleARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetInfoLogARB)
	.type	GL_PREFIX(GetInfoLogARB), @function
GL_PREFIX(GetInfoLogARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5248(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetInfoLogARB), .-GL_PREFIX(GetInfoLogARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetObjectParameterfvARB)
	.type	GL_PREFIX(GetObjectParameterfvARB), @function
GL_PREFIX(GetObjectParameterfvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetObjectParameterfvARB), .-GL_PREFIX(GetObjectParameterfvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetObjectParameterivARB)
	.type	GL_PREFIX(GetObjectParameterivARB), @function
GL_PREFIX(GetObjectParameterivARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetObjectParameterivARB), .-GL_PREFIX(GetObjectParameterivARB)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawArraysInstancedARB)
	.type	GL_PREFIX(DrawArraysInstancedARB), @function
GL_PREFIX(DrawArraysInstancedARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5272(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawArraysInstancedARB), .-GL_PREFIX(DrawArraysInstancedARB)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawElementsInstancedARB)
	.type	GL_PREFIX(DrawElementsInstancedARB), @function
GL_PREFIX(DrawElementsInstancedARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5280(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5280(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5280(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5280(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawElementsInstancedARB), .-GL_PREFIX(DrawElementsInstancedARB)

	.p2align	4,,15
	.globl	GL_PREFIX(BindFramebuffer)
	.type	GL_PREFIX(BindFramebuffer), @function
GL_PREFIX(BindFramebuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5288(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5288(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5288(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5288(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindFramebuffer), .-GL_PREFIX(BindFramebuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(BindRenderbuffer)
	.type	GL_PREFIX(BindRenderbuffer), @function
GL_PREFIX(BindRenderbuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5296(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5296(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5296(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5296(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindRenderbuffer), .-GL_PREFIX(BindRenderbuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(BlitFramebuffer)
	.type	GL_PREFIX(BlitFramebuffer), @function
GL_PREFIX(BlitFramebuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5304(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5304(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5304(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5304(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BlitFramebuffer), .-GL_PREFIX(BlitFramebuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(CheckFramebufferStatus)
	.type	GL_PREFIX(CheckFramebufferStatus), @function
GL_PREFIX(CheckFramebufferStatus):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5312(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5312(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5312(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5312(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CheckFramebufferStatus), .-GL_PREFIX(CheckFramebufferStatus)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteFramebuffers)
	.type	GL_PREFIX(DeleteFramebuffers), @function
GL_PREFIX(DeleteFramebuffers):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5320(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5320(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5320(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5320(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteFramebuffers), .-GL_PREFIX(DeleteFramebuffers)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteRenderbuffers)
	.type	GL_PREFIX(DeleteRenderbuffers), @function
GL_PREFIX(DeleteRenderbuffers):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5328(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5328(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5328(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5328(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteRenderbuffers), .-GL_PREFIX(DeleteRenderbuffers)

	.p2align	4,,15
	.globl	GL_PREFIX(FramebufferRenderbuffer)
	.type	GL_PREFIX(FramebufferRenderbuffer), @function
GL_PREFIX(FramebufferRenderbuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5336(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5336(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5336(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5336(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FramebufferRenderbuffer), .-GL_PREFIX(FramebufferRenderbuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(FramebufferTexture1D)
	.type	GL_PREFIX(FramebufferTexture1D), @function
GL_PREFIX(FramebufferTexture1D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5344(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5344(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5344(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5344(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FramebufferTexture1D), .-GL_PREFIX(FramebufferTexture1D)

	.p2align	4,,15
	.globl	GL_PREFIX(FramebufferTexture2D)
	.type	GL_PREFIX(FramebufferTexture2D), @function
GL_PREFIX(FramebufferTexture2D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5352(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5352(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5352(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5352(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FramebufferTexture2D), .-GL_PREFIX(FramebufferTexture2D)

	.p2align	4,,15
	.globl	GL_PREFIX(FramebufferTexture3D)
	.type	GL_PREFIX(FramebufferTexture3D), @function
GL_PREFIX(FramebufferTexture3D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5360(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5360(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5360(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5360(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FramebufferTexture3D), .-GL_PREFIX(FramebufferTexture3D)

	.p2align	4,,15
	.globl	GL_PREFIX(FramebufferTextureLayer)
	.type	GL_PREFIX(FramebufferTextureLayer), @function
GL_PREFIX(FramebufferTextureLayer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5368(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5368(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5368(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5368(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FramebufferTextureLayer), .-GL_PREFIX(FramebufferTextureLayer)

	.p2align	4,,15
	.globl	GL_PREFIX(GenFramebuffers)
	.type	GL_PREFIX(GenFramebuffers), @function
GL_PREFIX(GenFramebuffers):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5376(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5376(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5376(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5376(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenFramebuffers), .-GL_PREFIX(GenFramebuffers)

	.p2align	4,,15
	.globl	GL_PREFIX(GenRenderbuffers)
	.type	GL_PREFIX(GenRenderbuffers), @function
GL_PREFIX(GenRenderbuffers):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5384(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5384(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5384(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5384(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenRenderbuffers), .-GL_PREFIX(GenRenderbuffers)

	.p2align	4,,15
	.globl	GL_PREFIX(GenerateMipmap)
	.type	GL_PREFIX(GenerateMipmap), @function
GL_PREFIX(GenerateMipmap):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5392(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5392(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5392(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5392(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenerateMipmap), .-GL_PREFIX(GenerateMipmap)

	.p2align	4,,15
	.globl	GL_PREFIX(GetFramebufferAttachmentParameteriv)
	.type	GL_PREFIX(GetFramebufferAttachmentParameteriv), @function
GL_PREFIX(GetFramebufferAttachmentParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5400(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5400(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5400(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5400(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetFramebufferAttachmentParameteriv), .-GL_PREFIX(GetFramebufferAttachmentParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetRenderbufferParameteriv)
	.type	GL_PREFIX(GetRenderbufferParameteriv), @function
GL_PREFIX(GetRenderbufferParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5408(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5408(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5408(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5408(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetRenderbufferParameteriv), .-GL_PREFIX(GetRenderbufferParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(IsFramebuffer)
	.type	GL_PREFIX(IsFramebuffer), @function
GL_PREFIX(IsFramebuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5416(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5416(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5416(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5416(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsFramebuffer), .-GL_PREFIX(IsFramebuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(IsRenderbuffer)
	.type	GL_PREFIX(IsRenderbuffer), @function
GL_PREFIX(IsRenderbuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5424(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5424(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5424(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5424(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsRenderbuffer), .-GL_PREFIX(IsRenderbuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(RenderbufferStorage)
	.type	GL_PREFIX(RenderbufferStorage), @function
GL_PREFIX(RenderbufferStorage):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5432(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5432(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5432(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5432(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RenderbufferStorage), .-GL_PREFIX(RenderbufferStorage)

	.p2align	4,,15
	.globl	GL_PREFIX(RenderbufferStorageMultisample)
	.type	GL_PREFIX(RenderbufferStorageMultisample), @function
GL_PREFIX(RenderbufferStorageMultisample):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5440(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5440(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5440(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5440(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(RenderbufferStorageMultisample), .-GL_PREFIX(RenderbufferStorageMultisample)

	.p2align	4,,15
	.globl	GL_PREFIX(FlushMappedBufferRange)
	.type	GL_PREFIX(FlushMappedBufferRange), @function
GL_PREFIX(FlushMappedBufferRange):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5448(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5448(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5448(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5448(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FlushMappedBufferRange), .-GL_PREFIX(FlushMappedBufferRange)

	.p2align	4,,15
	.globl	GL_PREFIX(MapBufferRange)
	.type	GL_PREFIX(MapBufferRange), @function
GL_PREFIX(MapBufferRange):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5456(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5456(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5456(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5456(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MapBufferRange), .-GL_PREFIX(MapBufferRange)

	.p2align	4,,15
	.globl	GL_PREFIX(BindVertexArray)
	.type	GL_PREFIX(BindVertexArray), @function
GL_PREFIX(BindVertexArray):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5464(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5464(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5464(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5464(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindVertexArray), .-GL_PREFIX(BindVertexArray)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteVertexArrays)
	.type	GL_PREFIX(DeleteVertexArrays), @function
GL_PREFIX(DeleteVertexArrays):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5472(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5472(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5472(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5472(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteVertexArrays), .-GL_PREFIX(DeleteVertexArrays)

	.p2align	4,,15
	.globl	GL_PREFIX(GenVertexArrays)
	.type	GL_PREFIX(GenVertexArrays), @function
GL_PREFIX(GenVertexArrays):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5480(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5480(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5480(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5480(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenVertexArrays), .-GL_PREFIX(GenVertexArrays)

	.p2align	4,,15
	.globl	GL_PREFIX(IsVertexArray)
	.type	GL_PREFIX(IsVertexArray), @function
GL_PREFIX(IsVertexArray):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5488(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5488(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5488(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5488(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsVertexArray), .-GL_PREFIX(IsVertexArray)

	.p2align	4,,15
	.globl	GL_PREFIX(GetActiveUniformBlockName)
	.type	GL_PREFIX(GetActiveUniformBlockName), @function
GL_PREFIX(GetActiveUniformBlockName):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5496(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5496(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5496(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5496(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetActiveUniformBlockName), .-GL_PREFIX(GetActiveUniformBlockName)

	.p2align	4,,15
	.globl	GL_PREFIX(GetActiveUniformBlockiv)
	.type	GL_PREFIX(GetActiveUniformBlockiv), @function
GL_PREFIX(GetActiveUniformBlockiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5504(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5504(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5504(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5504(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetActiveUniformBlockiv), .-GL_PREFIX(GetActiveUniformBlockiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetActiveUniformName)
	.type	GL_PREFIX(GetActiveUniformName), @function
GL_PREFIX(GetActiveUniformName):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5512(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5512(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5512(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5512(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetActiveUniformName), .-GL_PREFIX(GetActiveUniformName)

	.p2align	4,,15
	.globl	GL_PREFIX(GetActiveUniformsiv)
	.type	GL_PREFIX(GetActiveUniformsiv), @function
GL_PREFIX(GetActiveUniformsiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5520(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5520(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5520(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5520(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetActiveUniformsiv), .-GL_PREFIX(GetActiveUniformsiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetUniformBlockIndex)
	.type	GL_PREFIX(GetUniformBlockIndex), @function
GL_PREFIX(GetUniformBlockIndex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5528(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5528(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5528(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5528(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetUniformBlockIndex), .-GL_PREFIX(GetUniformBlockIndex)

	.p2align	4,,15
	.globl	GL_PREFIX(GetUniformIndices)
	.type	GL_PREFIX(GetUniformIndices), @function
GL_PREFIX(GetUniformIndices):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5536(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5536(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5536(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5536(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetUniformIndices), .-GL_PREFIX(GetUniformIndices)

	.p2align	4,,15
	.globl	GL_PREFIX(UniformBlockBinding)
	.type	GL_PREFIX(UniformBlockBinding), @function
GL_PREFIX(UniformBlockBinding):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5544(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5544(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5544(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5544(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UniformBlockBinding), .-GL_PREFIX(UniformBlockBinding)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyBufferSubData)
	.type	GL_PREFIX(CopyBufferSubData), @function
GL_PREFIX(CopyBufferSubData):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5552(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5552(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5552(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5552(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyBufferSubData), .-GL_PREFIX(CopyBufferSubData)

	.p2align	4,,15
	.globl	GL_PREFIX(ClientWaitSync)
	.type	GL_PREFIX(ClientWaitSync), @function
GL_PREFIX(ClientWaitSync):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5560(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5560(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5560(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5560(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClientWaitSync), .-GL_PREFIX(ClientWaitSync)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteSync)
	.type	GL_PREFIX(DeleteSync), @function
GL_PREFIX(DeleteSync):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5568(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5568(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5568(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5568(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteSync), .-GL_PREFIX(DeleteSync)

	.p2align	4,,15
	.globl	GL_PREFIX(FenceSync)
	.type	GL_PREFIX(FenceSync), @function
GL_PREFIX(FenceSync):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5576(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5576(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5576(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5576(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FenceSync), .-GL_PREFIX(FenceSync)

	.p2align	4,,15
	.globl	GL_PREFIX(GetInteger64v)
	.type	GL_PREFIX(GetInteger64v), @function
GL_PREFIX(GetInteger64v):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5584(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5584(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5584(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5584(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetInteger64v), .-GL_PREFIX(GetInteger64v)

	.p2align	4,,15
	.globl	GL_PREFIX(GetSynciv)
	.type	GL_PREFIX(GetSynciv), @function
GL_PREFIX(GetSynciv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5592(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5592(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5592(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5592(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetSynciv), .-GL_PREFIX(GetSynciv)

	.p2align	4,,15
	.globl	GL_PREFIX(IsSync)
	.type	GL_PREFIX(IsSync), @function
GL_PREFIX(IsSync):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5600(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5600(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5600(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5600(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsSync), .-GL_PREFIX(IsSync)

	.p2align	4,,15
	.globl	GL_PREFIX(WaitSync)
	.type	GL_PREFIX(WaitSync), @function
GL_PREFIX(WaitSync):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5608(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5608(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5608(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5608(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(WaitSync), .-GL_PREFIX(WaitSync)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawElementsBaseVertex)
	.type	GL_PREFIX(DrawElementsBaseVertex), @function
GL_PREFIX(DrawElementsBaseVertex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5616(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5616(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5616(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5616(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawElementsBaseVertex), .-GL_PREFIX(DrawElementsBaseVertex)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawElementsInstancedBaseVertex)
	.type	GL_PREFIX(DrawElementsInstancedBaseVertex), @function
GL_PREFIX(DrawElementsInstancedBaseVertex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5624(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5624(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5624(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5624(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawElementsInstancedBaseVertex), .-GL_PREFIX(DrawElementsInstancedBaseVertex)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawRangeElementsBaseVertex)
	.type	GL_PREFIX(DrawRangeElementsBaseVertex), @function
GL_PREFIX(DrawRangeElementsBaseVertex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5632(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5632(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5632(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5632(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawRangeElementsBaseVertex), .-GL_PREFIX(DrawRangeElementsBaseVertex)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiDrawElementsBaseVertex)
	.type	GL_PREFIX(MultiDrawElementsBaseVertex), @function
GL_PREFIX(MultiDrawElementsBaseVertex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5640(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5640(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5640(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5640(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiDrawElementsBaseVertex), .-GL_PREFIX(MultiDrawElementsBaseVertex)

	.p2align	4,,15
	.globl	GL_PREFIX(ProvokingVertex)
	.type	GL_PREFIX(ProvokingVertex), @function
GL_PREFIX(ProvokingVertex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5648(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5648(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5648(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5648(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProvokingVertex), .-GL_PREFIX(ProvokingVertex)

	.p2align	4,,15
	.globl	GL_PREFIX(GetMultisamplefv)
	.type	GL_PREFIX(GetMultisamplefv), @function
GL_PREFIX(GetMultisamplefv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5656(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5656(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5656(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5656(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetMultisamplefv), .-GL_PREFIX(GetMultisamplefv)

	.p2align	4,,15
	.globl	GL_PREFIX(SampleMaski)
	.type	GL_PREFIX(SampleMaski), @function
GL_PREFIX(SampleMaski):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5664(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5664(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5664(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5664(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SampleMaski), .-GL_PREFIX(SampleMaski)

	.p2align	4,,15
	.globl	GL_PREFIX(TexImage2DMultisample)
	.type	GL_PREFIX(TexImage2DMultisample), @function
GL_PREFIX(TexImage2DMultisample):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5672(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5672(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5672(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5672(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexImage2DMultisample), .-GL_PREFIX(TexImage2DMultisample)

	.p2align	4,,15
	.globl	GL_PREFIX(TexImage3DMultisample)
	.type	GL_PREFIX(TexImage3DMultisample), @function
GL_PREFIX(TexImage3DMultisample):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5680(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5680(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5680(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5680(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexImage3DMultisample), .-GL_PREFIX(TexImage3DMultisample)

	.p2align	4,,15
	.globl	GL_PREFIX(BlendEquationSeparateiARB)
	.type	GL_PREFIX(BlendEquationSeparateiARB), @function
GL_PREFIX(BlendEquationSeparateiARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5688(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5688(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5688(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5688(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BlendEquationSeparateiARB), .-GL_PREFIX(BlendEquationSeparateiARB)

	.p2align	4,,15
	.globl	GL_PREFIX(BlendEquationiARB)
	.type	GL_PREFIX(BlendEquationiARB), @function
GL_PREFIX(BlendEquationiARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5696(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5696(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5696(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5696(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BlendEquationiARB), .-GL_PREFIX(BlendEquationiARB)

	.p2align	4,,15
	.globl	GL_PREFIX(BlendFuncSeparateiARB)
	.type	GL_PREFIX(BlendFuncSeparateiARB), @function
GL_PREFIX(BlendFuncSeparateiARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5704(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5704(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5704(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5704(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BlendFuncSeparateiARB), .-GL_PREFIX(BlendFuncSeparateiARB)

	.p2align	4,,15
	.globl	GL_PREFIX(BlendFunciARB)
	.type	GL_PREFIX(BlendFunciARB), @function
GL_PREFIX(BlendFunciARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5712(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5712(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5712(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5712(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BlendFunciARB), .-GL_PREFIX(BlendFunciARB)

	.p2align	4,,15
	.globl	GL_PREFIX(BindFragDataLocationIndexed)
	.type	GL_PREFIX(BindFragDataLocationIndexed), @function
GL_PREFIX(BindFragDataLocationIndexed):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5720(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5720(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5720(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5720(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindFragDataLocationIndexed), .-GL_PREFIX(BindFragDataLocationIndexed)

	.p2align	4,,15
	.globl	GL_PREFIX(GetFragDataIndex)
	.type	GL_PREFIX(GetFragDataIndex), @function
GL_PREFIX(GetFragDataIndex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5728(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5728(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5728(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5728(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetFragDataIndex), .-GL_PREFIX(GetFragDataIndex)

	.p2align	4,,15
	.globl	GL_PREFIX(BindSampler)
	.type	GL_PREFIX(BindSampler), @function
GL_PREFIX(BindSampler):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5736(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5736(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5736(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5736(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindSampler), .-GL_PREFIX(BindSampler)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteSamplers)
	.type	GL_PREFIX(DeleteSamplers), @function
GL_PREFIX(DeleteSamplers):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5744(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5744(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5744(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5744(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteSamplers), .-GL_PREFIX(DeleteSamplers)

	.p2align	4,,15
	.globl	GL_PREFIX(GenSamplers)
	.type	GL_PREFIX(GenSamplers), @function
GL_PREFIX(GenSamplers):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5752(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5752(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5752(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5752(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenSamplers), .-GL_PREFIX(GenSamplers)

	.p2align	4,,15
	.globl	GL_PREFIX(GetSamplerParameterIiv)
	.type	GL_PREFIX(GetSamplerParameterIiv), @function
GL_PREFIX(GetSamplerParameterIiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5760(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5760(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5760(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5760(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetSamplerParameterIiv), .-GL_PREFIX(GetSamplerParameterIiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetSamplerParameterIuiv)
	.type	GL_PREFIX(GetSamplerParameterIuiv), @function
GL_PREFIX(GetSamplerParameterIuiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5768(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5768(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5768(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5768(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetSamplerParameterIuiv), .-GL_PREFIX(GetSamplerParameterIuiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetSamplerParameterfv)
	.type	GL_PREFIX(GetSamplerParameterfv), @function
GL_PREFIX(GetSamplerParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5776(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5776(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5776(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5776(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetSamplerParameterfv), .-GL_PREFIX(GetSamplerParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetSamplerParameteriv)
	.type	GL_PREFIX(GetSamplerParameteriv), @function
GL_PREFIX(GetSamplerParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5784(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5784(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5784(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5784(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetSamplerParameteriv), .-GL_PREFIX(GetSamplerParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(IsSampler)
	.type	GL_PREFIX(IsSampler), @function
GL_PREFIX(IsSampler):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5792(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	5792(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5792(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	5792(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsSampler), .-GL_PREFIX(IsSampler)

	.p2align	4,,15
	.globl	GL_PREFIX(SamplerParameterIiv)
	.type	GL_PREFIX(SamplerParameterIiv), @function
GL_PREFIX(SamplerParameterIiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5800(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5800(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5800(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5800(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SamplerParameterIiv), .-GL_PREFIX(SamplerParameterIiv)

	.p2align	4,,15
	.globl	GL_PREFIX(SamplerParameterIuiv)
	.type	GL_PREFIX(SamplerParameterIuiv), @function
GL_PREFIX(SamplerParameterIuiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5808(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5808(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5808(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5808(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SamplerParameterIuiv), .-GL_PREFIX(SamplerParameterIuiv)

	.p2align	4,,15
	.globl	GL_PREFIX(SamplerParameterf)
	.type	GL_PREFIX(SamplerParameterf), @function
GL_PREFIX(SamplerParameterf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5816(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	5816(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5816(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	5816(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SamplerParameterf), .-GL_PREFIX(SamplerParameterf)

	.p2align	4,,15
	.globl	GL_PREFIX(SamplerParameterfv)
	.type	GL_PREFIX(SamplerParameterfv), @function
GL_PREFIX(SamplerParameterfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5824(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5824(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5824(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5824(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SamplerParameterfv), .-GL_PREFIX(SamplerParameterfv)

	.p2align	4,,15
	.globl	GL_PREFIX(SamplerParameteri)
	.type	GL_PREFIX(SamplerParameteri), @function
GL_PREFIX(SamplerParameteri):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5832(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5832(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5832(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5832(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SamplerParameteri), .-GL_PREFIX(SamplerParameteri)

	.p2align	4,,15
	.globl	GL_PREFIX(SamplerParameteriv)
	.type	GL_PREFIX(SamplerParameteriv), @function
GL_PREFIX(SamplerParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5840(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5840(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5840(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5840(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SamplerParameteriv), .-GL_PREFIX(SamplerParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_731)
	.type	GL_PREFIX(_dispatch_stub_731), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_731))
GL_PREFIX(_dispatch_stub_731):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5848(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5848(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5848(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5848(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_731), .-GL_PREFIX(_dispatch_stub_731)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_732)
	.type	GL_PREFIX(_dispatch_stub_732), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_732))
GL_PREFIX(_dispatch_stub_732):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5856(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5856(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5856(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5856(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_732), .-GL_PREFIX(_dispatch_stub_732)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_733)
	.type	GL_PREFIX(_dispatch_stub_733), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_733))
GL_PREFIX(_dispatch_stub_733):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5864(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5864(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5864(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5864(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_733), .-GL_PREFIX(_dispatch_stub_733)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorP3ui)
	.type	GL_PREFIX(ColorP3ui), @function
GL_PREFIX(ColorP3ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5872(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5872(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5872(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5872(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorP3ui), .-GL_PREFIX(ColorP3ui)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorP3uiv)
	.type	GL_PREFIX(ColorP3uiv), @function
GL_PREFIX(ColorP3uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5880(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5880(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5880(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5880(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorP3uiv), .-GL_PREFIX(ColorP3uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorP4ui)
	.type	GL_PREFIX(ColorP4ui), @function
GL_PREFIX(ColorP4ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5888(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5888(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5888(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5888(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorP4ui), .-GL_PREFIX(ColorP4ui)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorP4uiv)
	.type	GL_PREFIX(ColorP4uiv), @function
GL_PREFIX(ColorP4uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5896(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5896(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5896(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5896(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorP4uiv), .-GL_PREFIX(ColorP4uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoordP1ui)
	.type	GL_PREFIX(MultiTexCoordP1ui), @function
GL_PREFIX(MultiTexCoordP1ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5904(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5904(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5904(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5904(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoordP1ui), .-GL_PREFIX(MultiTexCoordP1ui)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoordP1uiv)
	.type	GL_PREFIX(MultiTexCoordP1uiv), @function
GL_PREFIX(MultiTexCoordP1uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5912(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5912(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5912(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5912(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoordP1uiv), .-GL_PREFIX(MultiTexCoordP1uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoordP2ui)
	.type	GL_PREFIX(MultiTexCoordP2ui), @function
GL_PREFIX(MultiTexCoordP2ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5920(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5920(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5920(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5920(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoordP2ui), .-GL_PREFIX(MultiTexCoordP2ui)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoordP2uiv)
	.type	GL_PREFIX(MultiTexCoordP2uiv), @function
GL_PREFIX(MultiTexCoordP2uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5928(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5928(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5928(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5928(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoordP2uiv), .-GL_PREFIX(MultiTexCoordP2uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoordP3ui)
	.type	GL_PREFIX(MultiTexCoordP3ui), @function
GL_PREFIX(MultiTexCoordP3ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5936(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5936(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5936(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5936(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoordP3ui), .-GL_PREFIX(MultiTexCoordP3ui)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoordP3uiv)
	.type	GL_PREFIX(MultiTexCoordP3uiv), @function
GL_PREFIX(MultiTexCoordP3uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5944(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5944(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5944(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5944(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoordP3uiv), .-GL_PREFIX(MultiTexCoordP3uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoordP4ui)
	.type	GL_PREFIX(MultiTexCoordP4ui), @function
GL_PREFIX(MultiTexCoordP4ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5952(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5952(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5952(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5952(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoordP4ui), .-GL_PREFIX(MultiTexCoordP4ui)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoordP4uiv)
	.type	GL_PREFIX(MultiTexCoordP4uiv), @function
GL_PREFIX(MultiTexCoordP4uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5960(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5960(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5960(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	5960(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoordP4uiv), .-GL_PREFIX(MultiTexCoordP4uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(NormalP3ui)
	.type	GL_PREFIX(NormalP3ui), @function
GL_PREFIX(NormalP3ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5968(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5968(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5968(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5968(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(NormalP3ui), .-GL_PREFIX(NormalP3ui)

	.p2align	4,,15
	.globl	GL_PREFIX(NormalP3uiv)
	.type	GL_PREFIX(NormalP3uiv), @function
GL_PREFIX(NormalP3uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5976(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5976(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5976(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5976(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(NormalP3uiv), .-GL_PREFIX(NormalP3uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColorP3ui)
	.type	GL_PREFIX(SecondaryColorP3ui), @function
GL_PREFIX(SecondaryColorP3ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5984(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5984(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5984(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5984(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColorP3ui), .-GL_PREFIX(SecondaryColorP3ui)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColorP3uiv)
	.type	GL_PREFIX(SecondaryColorP3uiv), @function
GL_PREFIX(SecondaryColorP3uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	5992(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5992(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	5992(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	5992(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColorP3uiv), .-GL_PREFIX(SecondaryColorP3uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoordP1ui)
	.type	GL_PREFIX(TexCoordP1ui), @function
GL_PREFIX(TexCoordP1ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6000(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6000(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6000(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6000(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoordP1ui), .-GL_PREFIX(TexCoordP1ui)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoordP1uiv)
	.type	GL_PREFIX(TexCoordP1uiv), @function
GL_PREFIX(TexCoordP1uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6008(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6008(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6008(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6008(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoordP1uiv), .-GL_PREFIX(TexCoordP1uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoordP2ui)
	.type	GL_PREFIX(TexCoordP2ui), @function
GL_PREFIX(TexCoordP2ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6016(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6016(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6016(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6016(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoordP2ui), .-GL_PREFIX(TexCoordP2ui)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoordP2uiv)
	.type	GL_PREFIX(TexCoordP2uiv), @function
GL_PREFIX(TexCoordP2uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6024(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6024(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6024(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6024(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoordP2uiv), .-GL_PREFIX(TexCoordP2uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoordP3ui)
	.type	GL_PREFIX(TexCoordP3ui), @function
GL_PREFIX(TexCoordP3ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6032(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6032(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6032(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6032(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoordP3ui), .-GL_PREFIX(TexCoordP3ui)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoordP3uiv)
	.type	GL_PREFIX(TexCoordP3uiv), @function
GL_PREFIX(TexCoordP3uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6040(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6040(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6040(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6040(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoordP3uiv), .-GL_PREFIX(TexCoordP3uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoordP4ui)
	.type	GL_PREFIX(TexCoordP4ui), @function
GL_PREFIX(TexCoordP4ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6048(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6048(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6048(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6048(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoordP4ui), .-GL_PREFIX(TexCoordP4ui)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoordP4uiv)
	.type	GL_PREFIX(TexCoordP4uiv), @function
GL_PREFIX(TexCoordP4uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6056(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6056(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6056(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6056(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoordP4uiv), .-GL_PREFIX(TexCoordP4uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribP1ui)
	.type	GL_PREFIX(VertexAttribP1ui), @function
GL_PREFIX(VertexAttribP1ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6064(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6064(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6064(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6064(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribP1ui), .-GL_PREFIX(VertexAttribP1ui)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribP1uiv)
	.type	GL_PREFIX(VertexAttribP1uiv), @function
GL_PREFIX(VertexAttribP1uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6072(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6072(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6072(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6072(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribP1uiv), .-GL_PREFIX(VertexAttribP1uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribP2ui)
	.type	GL_PREFIX(VertexAttribP2ui), @function
GL_PREFIX(VertexAttribP2ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6080(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6080(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6080(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6080(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribP2ui), .-GL_PREFIX(VertexAttribP2ui)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribP2uiv)
	.type	GL_PREFIX(VertexAttribP2uiv), @function
GL_PREFIX(VertexAttribP2uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6088(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6088(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6088(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6088(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribP2uiv), .-GL_PREFIX(VertexAttribP2uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribP3ui)
	.type	GL_PREFIX(VertexAttribP3ui), @function
GL_PREFIX(VertexAttribP3ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6096(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6096(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6096(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6096(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribP3ui), .-GL_PREFIX(VertexAttribP3ui)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribP3uiv)
	.type	GL_PREFIX(VertexAttribP3uiv), @function
GL_PREFIX(VertexAttribP3uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6104(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribP3uiv), .-GL_PREFIX(VertexAttribP3uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribP4ui)
	.type	GL_PREFIX(VertexAttribP4ui), @function
GL_PREFIX(VertexAttribP4ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6112(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribP4ui), .-GL_PREFIX(VertexAttribP4ui)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribP4uiv)
	.type	GL_PREFIX(VertexAttribP4uiv), @function
GL_PREFIX(VertexAttribP4uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribP4uiv), .-GL_PREFIX(VertexAttribP4uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexP2ui)
	.type	GL_PREFIX(VertexP2ui), @function
GL_PREFIX(VertexP2ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6128(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexP2ui), .-GL_PREFIX(VertexP2ui)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexP2uiv)
	.type	GL_PREFIX(VertexP2uiv), @function
GL_PREFIX(VertexP2uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6136(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexP2uiv), .-GL_PREFIX(VertexP2uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexP3ui)
	.type	GL_PREFIX(VertexP3ui), @function
GL_PREFIX(VertexP3ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6144(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexP3ui), .-GL_PREFIX(VertexP3ui)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexP3uiv)
	.type	GL_PREFIX(VertexP3uiv), @function
GL_PREFIX(VertexP3uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6152(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexP3uiv), .-GL_PREFIX(VertexP3uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexP4ui)
	.type	GL_PREFIX(VertexP4ui), @function
GL_PREFIX(VertexP4ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6160(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexP4ui), .-GL_PREFIX(VertexP4ui)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexP4uiv)
	.type	GL_PREFIX(VertexP4uiv), @function
GL_PREFIX(VertexP4uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexP4uiv), .-GL_PREFIX(VertexP4uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawArraysIndirect)
	.type	GL_PREFIX(DrawArraysIndirect), @function
GL_PREFIX(DrawArraysIndirect):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6176(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawArraysIndirect), .-GL_PREFIX(DrawArraysIndirect)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawElementsIndirect)
	.type	GL_PREFIX(DrawElementsIndirect), @function
GL_PREFIX(DrawElementsIndirect):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawElementsIndirect), .-GL_PREFIX(DrawElementsIndirect)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_774)
	.type	GL_PREFIX(_dispatch_stub_774), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_774))
GL_PREFIX(_dispatch_stub_774):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_774), .-GL_PREFIX(_dispatch_stub_774)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_775)
	.type	GL_PREFIX(_dispatch_stub_775), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_775))
GL_PREFIX(_dispatch_stub_775):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	6200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6200(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	6200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_775), .-GL_PREFIX(_dispatch_stub_775)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_776)
	.type	GL_PREFIX(_dispatch_stub_776), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_776))
GL_PREFIX(_dispatch_stub_776):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6208(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_776), .-GL_PREFIX(_dispatch_stub_776)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_777)
	.type	GL_PREFIX(_dispatch_stub_777), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_777))
GL_PREFIX(_dispatch_stub_777):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	6216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6216(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	6216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_777), .-GL_PREFIX(_dispatch_stub_777)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_778)
	.type	GL_PREFIX(_dispatch_stub_778), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_778))
GL_PREFIX(_dispatch_stub_778):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6224(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_778), .-GL_PREFIX(_dispatch_stub_778)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_779)
	.type	GL_PREFIX(_dispatch_stub_779), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_779))
GL_PREFIX(_dispatch_stub_779):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	6232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6232(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	6232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_779), .-GL_PREFIX(_dispatch_stub_779)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_780)
	.type	GL_PREFIX(_dispatch_stub_780), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_780))
GL_PREFIX(_dispatch_stub_780):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_780), .-GL_PREFIX(_dispatch_stub_780)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_781)
	.type	GL_PREFIX(_dispatch_stub_781), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_781))
GL_PREFIX(_dispatch_stub_781):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	6248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6248(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	6248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_781), .-GL_PREFIX(_dispatch_stub_781)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_782)
	.type	GL_PREFIX(_dispatch_stub_782), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_782))
GL_PREFIX(_dispatch_stub_782):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_782), .-GL_PREFIX(_dispatch_stub_782)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_783)
	.type	GL_PREFIX(_dispatch_stub_783), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_783))
GL_PREFIX(_dispatch_stub_783):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_783), .-GL_PREFIX(_dispatch_stub_783)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_784)
	.type	GL_PREFIX(_dispatch_stub_784), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_784))
GL_PREFIX(_dispatch_stub_784):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6272(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_784), .-GL_PREFIX(_dispatch_stub_784)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_785)
	.type	GL_PREFIX(_dispatch_stub_785), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_785))
GL_PREFIX(_dispatch_stub_785):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6280(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6280(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6280(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6280(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_785), .-GL_PREFIX(_dispatch_stub_785)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_786)
	.type	GL_PREFIX(_dispatch_stub_786), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_786))
GL_PREFIX(_dispatch_stub_786):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6288(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6288(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6288(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6288(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_786), .-GL_PREFIX(_dispatch_stub_786)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_787)
	.type	GL_PREFIX(_dispatch_stub_787), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_787))
GL_PREFIX(_dispatch_stub_787):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6296(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6296(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6296(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6296(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_787), .-GL_PREFIX(_dispatch_stub_787)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_788)
	.type	GL_PREFIX(_dispatch_stub_788), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_788))
GL_PREFIX(_dispatch_stub_788):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6304(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6304(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6304(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6304(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_788), .-GL_PREFIX(_dispatch_stub_788)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_789)
	.type	GL_PREFIX(_dispatch_stub_789), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_789))
GL_PREFIX(_dispatch_stub_789):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6312(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6312(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6312(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6312(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_789), .-GL_PREFIX(_dispatch_stub_789)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_790)
	.type	GL_PREFIX(_dispatch_stub_790), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_790))
GL_PREFIX(_dispatch_stub_790):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6320(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6320(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6320(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6320(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_790), .-GL_PREFIX(_dispatch_stub_790)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_791)
	.type	GL_PREFIX(_dispatch_stub_791), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_791))
GL_PREFIX(_dispatch_stub_791):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6328(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6328(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6328(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6328(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_791), .-GL_PREFIX(_dispatch_stub_791)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_792)
	.type	GL_PREFIX(_dispatch_stub_792), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_792))
GL_PREFIX(_dispatch_stub_792):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6336(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6336(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6336(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6336(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_792), .-GL_PREFIX(_dispatch_stub_792)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_793)
	.type	GL_PREFIX(_dispatch_stub_793), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_793))
GL_PREFIX(_dispatch_stub_793):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6344(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6344(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6344(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6344(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_793), .-GL_PREFIX(_dispatch_stub_793)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_794)
	.type	GL_PREFIX(_dispatch_stub_794), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_794))
GL_PREFIX(_dispatch_stub_794):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6352(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6352(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6352(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6352(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_794), .-GL_PREFIX(_dispatch_stub_794)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_795)
	.type	GL_PREFIX(_dispatch_stub_795), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_795))
GL_PREFIX(_dispatch_stub_795):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6360(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6360(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6360(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6360(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_795), .-GL_PREFIX(_dispatch_stub_795)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_796)
	.type	GL_PREFIX(_dispatch_stub_796), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_796))
GL_PREFIX(_dispatch_stub_796):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6368(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6368(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6368(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6368(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_796), .-GL_PREFIX(_dispatch_stub_796)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_797)
	.type	GL_PREFIX(_dispatch_stub_797), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_797))
GL_PREFIX(_dispatch_stub_797):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6376(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6376(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6376(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6376(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_797), .-GL_PREFIX(_dispatch_stub_797)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_798)
	.type	GL_PREFIX(_dispatch_stub_798), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_798))
GL_PREFIX(_dispatch_stub_798):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6384(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6384(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6384(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6384(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_798), .-GL_PREFIX(_dispatch_stub_798)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_799)
	.type	GL_PREFIX(_dispatch_stub_799), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_799))
GL_PREFIX(_dispatch_stub_799):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6392(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6392(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6392(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6392(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_799), .-GL_PREFIX(_dispatch_stub_799)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_800)
	.type	GL_PREFIX(_dispatch_stub_800), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_800))
GL_PREFIX(_dispatch_stub_800):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6400(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6400(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6400(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6400(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_800), .-GL_PREFIX(_dispatch_stub_800)

	.p2align	4,,15
	.globl	GL_PREFIX(PatchParameteri)
	.type	GL_PREFIX(PatchParameteri), @function
GL_PREFIX(PatchParameteri):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6408(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6408(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6408(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6408(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PatchParameteri), .-GL_PREFIX(PatchParameteri)

	.p2align	4,,15
	.globl	GL_PREFIX(BindTransformFeedback)
	.type	GL_PREFIX(BindTransformFeedback), @function
GL_PREFIX(BindTransformFeedback):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6416(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6416(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6416(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6416(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindTransformFeedback), .-GL_PREFIX(BindTransformFeedback)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteTransformFeedbacks)
	.type	GL_PREFIX(DeleteTransformFeedbacks), @function
GL_PREFIX(DeleteTransformFeedbacks):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6424(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6424(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6424(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6424(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteTransformFeedbacks), .-GL_PREFIX(DeleteTransformFeedbacks)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawTransformFeedback)
	.type	GL_PREFIX(DrawTransformFeedback), @function
GL_PREFIX(DrawTransformFeedback):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6432(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6432(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6432(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6432(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawTransformFeedback), .-GL_PREFIX(DrawTransformFeedback)

	.p2align	4,,15
	.globl	GL_PREFIX(GenTransformFeedbacks)
	.type	GL_PREFIX(GenTransformFeedbacks), @function
GL_PREFIX(GenTransformFeedbacks):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6440(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6440(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6440(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6440(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenTransformFeedbacks), .-GL_PREFIX(GenTransformFeedbacks)

	.p2align	4,,15
	.globl	GL_PREFIX(IsTransformFeedback)
	.type	GL_PREFIX(IsTransformFeedback), @function
GL_PREFIX(IsTransformFeedback):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6448(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	6448(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6448(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	6448(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsTransformFeedback), .-GL_PREFIX(IsTransformFeedback)

	.p2align	4,,15
	.globl	GL_PREFIX(PauseTransformFeedback)
	.type	GL_PREFIX(PauseTransformFeedback), @function
GL_PREFIX(PauseTransformFeedback):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6456(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	6456(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6456(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	6456(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PauseTransformFeedback), .-GL_PREFIX(PauseTransformFeedback)

	.p2align	4,,15
	.globl	GL_PREFIX(ResumeTransformFeedback)
	.type	GL_PREFIX(ResumeTransformFeedback), @function
GL_PREFIX(ResumeTransformFeedback):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6464(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	6464(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6464(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	6464(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ResumeTransformFeedback), .-GL_PREFIX(ResumeTransformFeedback)

	.p2align	4,,15
	.globl	GL_PREFIX(BeginQueryIndexed)
	.type	GL_PREFIX(BeginQueryIndexed), @function
GL_PREFIX(BeginQueryIndexed):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6472(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6472(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6472(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6472(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BeginQueryIndexed), .-GL_PREFIX(BeginQueryIndexed)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawTransformFeedbackStream)
	.type	GL_PREFIX(DrawTransformFeedbackStream), @function
GL_PREFIX(DrawTransformFeedbackStream):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6480(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6480(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6480(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6480(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawTransformFeedbackStream), .-GL_PREFIX(DrawTransformFeedbackStream)

	.p2align	4,,15
	.globl	GL_PREFIX(EndQueryIndexed)
	.type	GL_PREFIX(EndQueryIndexed), @function
GL_PREFIX(EndQueryIndexed):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6488(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6488(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6488(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6488(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EndQueryIndexed), .-GL_PREFIX(EndQueryIndexed)

	.p2align	4,,15
	.globl	GL_PREFIX(GetQueryIndexediv)
	.type	GL_PREFIX(GetQueryIndexediv), @function
GL_PREFIX(GetQueryIndexediv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6496(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6496(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6496(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6496(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetQueryIndexediv), .-GL_PREFIX(GetQueryIndexediv)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearDepthf)
	.type	GL_PREFIX(ClearDepthf), @function
GL_PREFIX(ClearDepthf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6504(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	6504(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6504(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	6504(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearDepthf), .-GL_PREFIX(ClearDepthf)

	.p2align	4,,15
	.globl	GL_PREFIX(DepthRangef)
	.type	GL_PREFIX(DepthRangef), @function
GL_PREFIX(DepthRangef):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6512(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6512(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6512(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6512(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DepthRangef), .-GL_PREFIX(DepthRangef)

	.p2align	4,,15
	.globl	GL_PREFIX(GetShaderPrecisionFormat)
	.type	GL_PREFIX(GetShaderPrecisionFormat), @function
GL_PREFIX(GetShaderPrecisionFormat):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6520(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6520(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6520(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6520(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetShaderPrecisionFormat), .-GL_PREFIX(GetShaderPrecisionFormat)

	.p2align	4,,15
	.globl	GL_PREFIX(ReleaseShaderCompiler)
	.type	GL_PREFIX(ReleaseShaderCompiler), @function
GL_PREFIX(ReleaseShaderCompiler):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6528(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	6528(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6528(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	6528(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ReleaseShaderCompiler), .-GL_PREFIX(ReleaseShaderCompiler)

	.p2align	4,,15
	.globl	GL_PREFIX(ShaderBinary)
	.type	GL_PREFIX(ShaderBinary), @function
GL_PREFIX(ShaderBinary):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6536(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6536(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6536(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6536(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ShaderBinary), .-GL_PREFIX(ShaderBinary)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramBinary)
	.type	GL_PREFIX(GetProgramBinary), @function
GL_PREFIX(GetProgramBinary):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6544(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6544(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6544(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6544(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramBinary), .-GL_PREFIX(GetProgramBinary)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramBinary)
	.type	GL_PREFIX(ProgramBinary), @function
GL_PREFIX(ProgramBinary):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6552(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6552(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6552(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6552(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramBinary), .-GL_PREFIX(ProgramBinary)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramParameteri)
	.type	GL_PREFIX(ProgramParameteri), @function
GL_PREFIX(ProgramParameteri):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6560(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6560(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6560(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6560(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramParameteri), .-GL_PREFIX(ProgramParameteri)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_821)
	.type	GL_PREFIX(_dispatch_stub_821), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_821))
GL_PREFIX(_dispatch_stub_821):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6568(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6568(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6568(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6568(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_821), .-GL_PREFIX(_dispatch_stub_821)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_822)
	.type	GL_PREFIX(_dispatch_stub_822), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_822))
GL_PREFIX(_dispatch_stub_822):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6576(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	6576(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6576(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	6576(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_822), .-GL_PREFIX(_dispatch_stub_822)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_823)
	.type	GL_PREFIX(_dispatch_stub_823), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_823))
GL_PREFIX(_dispatch_stub_823):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6584(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6584(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6584(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6584(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_823), .-GL_PREFIX(_dispatch_stub_823)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_824)
	.type	GL_PREFIX(_dispatch_stub_824), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_824))
GL_PREFIX(_dispatch_stub_824):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6592(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	6592(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6592(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	6592(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_824), .-GL_PREFIX(_dispatch_stub_824)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_825)
	.type	GL_PREFIX(_dispatch_stub_825), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_825))
GL_PREFIX(_dispatch_stub_825):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6600(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6600(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6600(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6600(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_825), .-GL_PREFIX(_dispatch_stub_825)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_826)
	.type	GL_PREFIX(_dispatch_stub_826), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_826))
GL_PREFIX(_dispatch_stub_826):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6608(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	6608(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6608(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	6608(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_826), .-GL_PREFIX(_dispatch_stub_826)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_827)
	.type	GL_PREFIX(_dispatch_stub_827), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_827))
GL_PREFIX(_dispatch_stub_827):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6616(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6616(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6616(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6616(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_827), .-GL_PREFIX(_dispatch_stub_827)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_828)
	.type	GL_PREFIX(_dispatch_stub_828), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_828))
GL_PREFIX(_dispatch_stub_828):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6624(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	6624(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6624(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	6624(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_828), .-GL_PREFIX(_dispatch_stub_828)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_829)
	.type	GL_PREFIX(_dispatch_stub_829), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_829))
GL_PREFIX(_dispatch_stub_829):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6632(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6632(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6632(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6632(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_829), .-GL_PREFIX(_dispatch_stub_829)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_830)
	.type	GL_PREFIX(_dispatch_stub_830), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_830))
GL_PREFIX(_dispatch_stub_830):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6640(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6640(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6640(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6640(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_830), .-GL_PREFIX(_dispatch_stub_830)

	.p2align	4,,15
	.globl	GL_PREFIX(DepthRangeArrayv)
	.type	GL_PREFIX(DepthRangeArrayv), @function
GL_PREFIX(DepthRangeArrayv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6648(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6648(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6648(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6648(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DepthRangeArrayv), .-GL_PREFIX(DepthRangeArrayv)

	.p2align	4,,15
	.globl	GL_PREFIX(DepthRangeIndexed)
	.type	GL_PREFIX(DepthRangeIndexed), @function
GL_PREFIX(DepthRangeIndexed):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6656(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6656(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6656(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6656(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DepthRangeIndexed), .-GL_PREFIX(DepthRangeIndexed)

	.p2align	4,,15
	.globl	GL_PREFIX(GetDoublei_v)
	.type	GL_PREFIX(GetDoublei_v), @function
GL_PREFIX(GetDoublei_v):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6664(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6664(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6664(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6664(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetDoublei_v), .-GL_PREFIX(GetDoublei_v)

	.p2align	4,,15
	.globl	GL_PREFIX(GetFloati_v)
	.type	GL_PREFIX(GetFloati_v), @function
GL_PREFIX(GetFloati_v):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6672(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6672(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6672(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6672(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetFloati_v), .-GL_PREFIX(GetFloati_v)

	.p2align	4,,15
	.globl	GL_PREFIX(ScissorArrayv)
	.type	GL_PREFIX(ScissorArrayv), @function
GL_PREFIX(ScissorArrayv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6680(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6680(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6680(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6680(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ScissorArrayv), .-GL_PREFIX(ScissorArrayv)

	.p2align	4,,15
	.globl	GL_PREFIX(ScissorIndexed)
	.type	GL_PREFIX(ScissorIndexed), @function
GL_PREFIX(ScissorIndexed):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6688(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6688(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6688(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6688(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ScissorIndexed), .-GL_PREFIX(ScissorIndexed)

	.p2align	4,,15
	.globl	GL_PREFIX(ScissorIndexedv)
	.type	GL_PREFIX(ScissorIndexedv), @function
GL_PREFIX(ScissorIndexedv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6696(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6696(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6696(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6696(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ScissorIndexedv), .-GL_PREFIX(ScissorIndexedv)

	.p2align	4,,15
	.globl	GL_PREFIX(ViewportArrayv)
	.type	GL_PREFIX(ViewportArrayv), @function
GL_PREFIX(ViewportArrayv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6704(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6704(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6704(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6704(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ViewportArrayv), .-GL_PREFIX(ViewportArrayv)

	.p2align	4,,15
	.globl	GL_PREFIX(ViewportIndexedf)
	.type	GL_PREFIX(ViewportIndexedf), @function
GL_PREFIX(ViewportIndexedf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6712(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	6712(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6712(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	6712(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ViewportIndexedf), .-GL_PREFIX(ViewportIndexedf)

	.p2align	4,,15
	.globl	GL_PREFIX(ViewportIndexedfv)
	.type	GL_PREFIX(ViewportIndexedfv), @function
GL_PREFIX(ViewportIndexedfv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6720(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6720(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6720(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6720(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ViewportIndexedfv), .-GL_PREFIX(ViewportIndexedfv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetGraphicsResetStatusARB)
	.type	GL_PREFIX(GetGraphicsResetStatusARB), @function
GL_PREFIX(GetGraphicsResetStatusARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6728(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	6728(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6728(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	6728(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetGraphicsResetStatusARB), .-GL_PREFIX(GetGraphicsResetStatusARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnColorTableARB)
	.type	GL_PREFIX(GetnColorTableARB), @function
GL_PREFIX(GetnColorTableARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6736(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6736(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6736(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6736(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnColorTableARB), .-GL_PREFIX(GetnColorTableARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnCompressedTexImageARB)
	.type	GL_PREFIX(GetnCompressedTexImageARB), @function
GL_PREFIX(GetnCompressedTexImageARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6744(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6744(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6744(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6744(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnCompressedTexImageARB), .-GL_PREFIX(GetnCompressedTexImageARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnConvolutionFilterARB)
	.type	GL_PREFIX(GetnConvolutionFilterARB), @function
GL_PREFIX(GetnConvolutionFilterARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6752(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6752(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6752(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6752(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnConvolutionFilterARB), .-GL_PREFIX(GetnConvolutionFilterARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnHistogramARB)
	.type	GL_PREFIX(GetnHistogramARB), @function
GL_PREFIX(GetnHistogramARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6760(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6760(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6760(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6760(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnHistogramARB), .-GL_PREFIX(GetnHistogramARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnMapdvARB)
	.type	GL_PREFIX(GetnMapdvARB), @function
GL_PREFIX(GetnMapdvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6768(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6768(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6768(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6768(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnMapdvARB), .-GL_PREFIX(GetnMapdvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnMapfvARB)
	.type	GL_PREFIX(GetnMapfvARB), @function
GL_PREFIX(GetnMapfvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6776(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6776(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6776(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6776(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnMapfvARB), .-GL_PREFIX(GetnMapfvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnMapivARB)
	.type	GL_PREFIX(GetnMapivARB), @function
GL_PREFIX(GetnMapivARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6784(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6784(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6784(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6784(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnMapivARB), .-GL_PREFIX(GetnMapivARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnMinmaxARB)
	.type	GL_PREFIX(GetnMinmaxARB), @function
GL_PREFIX(GetnMinmaxARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6792(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6792(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6792(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6792(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnMinmaxARB), .-GL_PREFIX(GetnMinmaxARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnPixelMapfvARB)
	.type	GL_PREFIX(GetnPixelMapfvARB), @function
GL_PREFIX(GetnPixelMapfvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6800(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6800(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6800(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6800(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnPixelMapfvARB), .-GL_PREFIX(GetnPixelMapfvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnPixelMapuivARB)
	.type	GL_PREFIX(GetnPixelMapuivARB), @function
GL_PREFIX(GetnPixelMapuivARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6808(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6808(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6808(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6808(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnPixelMapuivARB), .-GL_PREFIX(GetnPixelMapuivARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnPixelMapusvARB)
	.type	GL_PREFIX(GetnPixelMapusvARB), @function
GL_PREFIX(GetnPixelMapusvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6816(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6816(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6816(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6816(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnPixelMapusvARB), .-GL_PREFIX(GetnPixelMapusvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnPolygonStippleARB)
	.type	GL_PREFIX(GetnPolygonStippleARB), @function
GL_PREFIX(GetnPolygonStippleARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6824(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6824(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6824(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	6824(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnPolygonStippleARB), .-GL_PREFIX(GetnPolygonStippleARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnSeparableFilterARB)
	.type	GL_PREFIX(GetnSeparableFilterARB), @function
GL_PREFIX(GetnSeparableFilterARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6832(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6832(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6832(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6832(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnSeparableFilterARB), .-GL_PREFIX(GetnSeparableFilterARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnTexImageARB)
	.type	GL_PREFIX(GetnTexImageARB), @function
GL_PREFIX(GetnTexImageARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6840(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6840(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6840(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6840(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnTexImageARB), .-GL_PREFIX(GetnTexImageARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnUniformdvARB)
	.type	GL_PREFIX(GetnUniformdvARB), @function
GL_PREFIX(GetnUniformdvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6848(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6848(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6848(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6848(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnUniformdvARB), .-GL_PREFIX(GetnUniformdvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnUniformfvARB)
	.type	GL_PREFIX(GetnUniformfvARB), @function
GL_PREFIX(GetnUniformfvARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6856(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6856(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6856(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6856(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnUniformfvARB), .-GL_PREFIX(GetnUniformfvARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnUniformivARB)
	.type	GL_PREFIX(GetnUniformivARB), @function
GL_PREFIX(GetnUniformivARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6864(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6864(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6864(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6864(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnUniformivARB), .-GL_PREFIX(GetnUniformivARB)

	.p2align	4,,15
	.globl	GL_PREFIX(GetnUniformuivARB)
	.type	GL_PREFIX(GetnUniformuivARB), @function
GL_PREFIX(GetnUniformuivARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6872(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6872(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6872(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6872(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetnUniformuivARB), .-GL_PREFIX(GetnUniformuivARB)

	.p2align	4,,15
	.globl	GL_PREFIX(ReadnPixelsARB)
	.type	GL_PREFIX(ReadnPixelsARB), @function
GL_PREFIX(ReadnPixelsARB):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6880(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6880(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6880(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6880(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ReadnPixelsARB), .-GL_PREFIX(ReadnPixelsARB)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawArraysInstancedBaseInstance)
	.type	GL_PREFIX(DrawArraysInstancedBaseInstance), @function
GL_PREFIX(DrawArraysInstancedBaseInstance):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6888(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6888(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6888(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6888(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawArraysInstancedBaseInstance), .-GL_PREFIX(DrawArraysInstancedBaseInstance)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawElementsInstancedBaseInstance)
	.type	GL_PREFIX(DrawElementsInstancedBaseInstance), @function
GL_PREFIX(DrawElementsInstancedBaseInstance):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6896(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6896(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6896(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6896(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawElementsInstancedBaseInstance), .-GL_PREFIX(DrawElementsInstancedBaseInstance)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawElementsInstancedBaseVertexBaseInstance)
	.type	GL_PREFIX(DrawElementsInstancedBaseVertexBaseInstance), @function
GL_PREFIX(DrawElementsInstancedBaseVertexBaseInstance):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6904(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6904(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6904(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6904(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawElementsInstancedBaseVertexBaseInstance), .-GL_PREFIX(DrawElementsInstancedBaseVertexBaseInstance)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawTransformFeedbackInstanced)
	.type	GL_PREFIX(DrawTransformFeedbackInstanced), @function
GL_PREFIX(DrawTransformFeedbackInstanced):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6912(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6912(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6912(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6912(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawTransformFeedbackInstanced), .-GL_PREFIX(DrawTransformFeedbackInstanced)

	.p2align	4,,15
	.globl	GL_PREFIX(DrawTransformFeedbackStreamInstanced)
	.type	GL_PREFIX(DrawTransformFeedbackStreamInstanced), @function
GL_PREFIX(DrawTransformFeedbackStreamInstanced):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6920(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6920(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6920(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6920(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DrawTransformFeedbackStreamInstanced), .-GL_PREFIX(DrawTransformFeedbackStreamInstanced)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_866)
	.type	GL_PREFIX(_dispatch_stub_866), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_866))
GL_PREFIX(_dispatch_stub_866):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6928(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6928(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6928(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6928(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_866), .-GL_PREFIX(_dispatch_stub_866)

	.p2align	4,,15
	.globl	GL_PREFIX(GetActiveAtomicCounterBufferiv)
	.type	GL_PREFIX(GetActiveAtomicCounterBufferiv), @function
GL_PREFIX(GetActiveAtomicCounterBufferiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6936(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6936(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6936(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6936(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetActiveAtomicCounterBufferiv), .-GL_PREFIX(GetActiveAtomicCounterBufferiv)

	.p2align	4,,15
	.globl	GL_PREFIX(BindImageTexture)
	.type	GL_PREFIX(BindImageTexture), @function
GL_PREFIX(BindImageTexture):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6944(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6944(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6944(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6944(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindImageTexture), .-GL_PREFIX(BindImageTexture)

	.p2align	4,,15
	.globl	GL_PREFIX(MemoryBarrier)
	.type	GL_PREFIX(MemoryBarrier), @function
GL_PREFIX(MemoryBarrier):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6952(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	6952(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6952(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	6952(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MemoryBarrier), .-GL_PREFIX(MemoryBarrier)

	.p2align	4,,15
	.globl	GL_PREFIX(TexStorage1D)
	.type	GL_PREFIX(TexStorage1D), @function
GL_PREFIX(TexStorage1D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6960(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6960(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6960(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6960(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexStorage1D), .-GL_PREFIX(TexStorage1D)

	.p2align	4,,15
	.globl	GL_PREFIX(TexStorage2D)
	.type	GL_PREFIX(TexStorage2D), @function
GL_PREFIX(TexStorage2D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6968(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6968(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6968(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6968(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexStorage2D), .-GL_PREFIX(TexStorage2D)

	.p2align	4,,15
	.globl	GL_PREFIX(TexStorage3D)
	.type	GL_PREFIX(TexStorage3D), @function
GL_PREFIX(TexStorage3D):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6976(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6976(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6976(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6976(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexStorage3D), .-GL_PREFIX(TexStorage3D)

	.p2align	4,,15
	.globl	GL_PREFIX(TextureStorage1DEXT)
	.type	GL_PREFIX(TextureStorage1DEXT), @function
GL_PREFIX(TextureStorage1DEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6984(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6984(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6984(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6984(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TextureStorage1DEXT), .-GL_PREFIX(TextureStorage1DEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(TextureStorage2DEXT)
	.type	GL_PREFIX(TextureStorage2DEXT), @function
GL_PREFIX(TextureStorage2DEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	6992(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6992(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	6992(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	6992(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TextureStorage2DEXT), .-GL_PREFIX(TextureStorage2DEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(TextureStorage3DEXT)
	.type	GL_PREFIX(TextureStorage3DEXT), @function
GL_PREFIX(TextureStorage3DEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7000(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7000(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7000(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7000(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TextureStorage3DEXT), .-GL_PREFIX(TextureStorage3DEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearBufferData)
	.type	GL_PREFIX(ClearBufferData), @function
GL_PREFIX(ClearBufferData):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7008(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7008(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7008(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7008(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearBufferData), .-GL_PREFIX(ClearBufferData)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearBufferSubData)
	.type	GL_PREFIX(ClearBufferSubData), @function
GL_PREFIX(ClearBufferSubData):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7016(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7016(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7016(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7016(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearBufferSubData), .-GL_PREFIX(ClearBufferSubData)

	.p2align	4,,15
	.globl	GL_PREFIX(DispatchCompute)
	.type	GL_PREFIX(DispatchCompute), @function
GL_PREFIX(DispatchCompute):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7024(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7024(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7024(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7024(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DispatchCompute), .-GL_PREFIX(DispatchCompute)

	.p2align	4,,15
	.globl	GL_PREFIX(DispatchComputeIndirect)
	.type	GL_PREFIX(DispatchComputeIndirect), @function
GL_PREFIX(DispatchComputeIndirect):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7032(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	7032(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7032(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	7032(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DispatchComputeIndirect), .-GL_PREFIX(DispatchComputeIndirect)

	.p2align	4,,15
	.globl	GL_PREFIX(CopyImageSubData)
	.type	GL_PREFIX(CopyImageSubData), @function
GL_PREFIX(CopyImageSubData):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7040(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7040(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7040(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7040(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CopyImageSubData), .-GL_PREFIX(CopyImageSubData)

	.p2align	4,,15
	.globl	GL_PREFIX(TextureView)
	.type	GL_PREFIX(TextureView), @function
GL_PREFIX(TextureView):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7048(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7048(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7048(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7048(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TextureView), .-GL_PREFIX(TextureView)

	.p2align	4,,15
	.globl	GL_PREFIX(BindVertexBuffer)
	.type	GL_PREFIX(BindVertexBuffer), @function
GL_PREFIX(BindVertexBuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7056(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7056(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7056(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7056(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindVertexBuffer), .-GL_PREFIX(BindVertexBuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribBinding)
	.type	GL_PREFIX(VertexAttribBinding), @function
GL_PREFIX(VertexAttribBinding):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7064(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7064(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7064(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7064(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribBinding), .-GL_PREFIX(VertexAttribBinding)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribFormat)
	.type	GL_PREFIX(VertexAttribFormat), @function
GL_PREFIX(VertexAttribFormat):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7072(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7072(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7072(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7072(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribFormat), .-GL_PREFIX(VertexAttribFormat)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribIFormat)
	.type	GL_PREFIX(VertexAttribIFormat), @function
GL_PREFIX(VertexAttribIFormat):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7080(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7080(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7080(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7080(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribIFormat), .-GL_PREFIX(VertexAttribIFormat)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribLFormat)
	.type	GL_PREFIX(VertexAttribLFormat), @function
GL_PREFIX(VertexAttribLFormat):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7088(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7088(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7088(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7088(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribLFormat), .-GL_PREFIX(VertexAttribLFormat)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexBindingDivisor)
	.type	GL_PREFIX(VertexBindingDivisor), @function
GL_PREFIX(VertexBindingDivisor):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7096(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7096(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7096(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7096(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexBindingDivisor), .-GL_PREFIX(VertexBindingDivisor)

	.p2align	4,,15
	.globl	GL_PREFIX(FramebufferParameteri)
	.type	GL_PREFIX(FramebufferParameteri), @function
GL_PREFIX(FramebufferParameteri):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7104(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FramebufferParameteri), .-GL_PREFIX(FramebufferParameteri)

	.p2align	4,,15
	.globl	GL_PREFIX(GetFramebufferParameteriv)
	.type	GL_PREFIX(GetFramebufferParameteriv), @function
GL_PREFIX(GetFramebufferParameteriv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7112(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetFramebufferParameteriv), .-GL_PREFIX(GetFramebufferParameteriv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_890)
	.type	GL_PREFIX(_dispatch_stub_890), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_890))
GL_PREFIX(_dispatch_stub_890):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_890), .-GL_PREFIX(_dispatch_stub_890)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiDrawArraysIndirect)
	.type	GL_PREFIX(MultiDrawArraysIndirect), @function
GL_PREFIX(MultiDrawArraysIndirect):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7128(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiDrawArraysIndirect), .-GL_PREFIX(MultiDrawArraysIndirect)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiDrawElementsIndirect)
	.type	GL_PREFIX(MultiDrawElementsIndirect), @function
GL_PREFIX(MultiDrawElementsIndirect):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7136(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiDrawElementsIndirect), .-GL_PREFIX(MultiDrawElementsIndirect)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramInterfaceiv)
	.type	GL_PREFIX(GetProgramInterfaceiv), @function
GL_PREFIX(GetProgramInterfaceiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7144(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramInterfaceiv), .-GL_PREFIX(GetProgramInterfaceiv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramResourceIndex)
	.type	GL_PREFIX(GetProgramResourceIndex), @function
GL_PREFIX(GetProgramResourceIndex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7152(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramResourceIndex), .-GL_PREFIX(GetProgramResourceIndex)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramResourceLocation)
	.type	GL_PREFIX(GetProgramResourceLocation), @function
GL_PREFIX(GetProgramResourceLocation):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7160(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramResourceLocation), .-GL_PREFIX(GetProgramResourceLocation)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_896)
	.type	GL_PREFIX(_dispatch_stub_896), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_896))
GL_PREFIX(_dispatch_stub_896):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_896), .-GL_PREFIX(_dispatch_stub_896)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramResourceName)
	.type	GL_PREFIX(GetProgramResourceName), @function
GL_PREFIX(GetProgramResourceName):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7176(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramResourceName), .-GL_PREFIX(GetProgramResourceName)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramResourceiv)
	.type	GL_PREFIX(GetProgramResourceiv), @function
GL_PREFIX(GetProgramResourceiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramResourceiv), .-GL_PREFIX(GetProgramResourceiv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_899)
	.type	GL_PREFIX(_dispatch_stub_899), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_899))
GL_PREFIX(_dispatch_stub_899):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_899), .-GL_PREFIX(_dispatch_stub_899)

	.p2align	4,,15
	.globl	GL_PREFIX(TexBufferRange)
	.type	GL_PREFIX(TexBufferRange), @function
GL_PREFIX(TexBufferRange):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7200(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexBufferRange), .-GL_PREFIX(TexBufferRange)

	.p2align	4,,15
	.globl	GL_PREFIX(TexStorage2DMultisample)
	.type	GL_PREFIX(TexStorage2DMultisample), @function
GL_PREFIX(TexStorage2DMultisample):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7208(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexStorage2DMultisample), .-GL_PREFIX(TexStorage2DMultisample)

	.p2align	4,,15
	.globl	GL_PREFIX(TexStorage3DMultisample)
	.type	GL_PREFIX(TexStorage3DMultisample), @function
GL_PREFIX(TexStorage3DMultisample):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7216(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexStorage3DMultisample), .-GL_PREFIX(TexStorage3DMultisample)

	.p2align	4,,15
	.globl	GL_PREFIX(BufferStorage)
	.type	GL_PREFIX(BufferStorage), @function
GL_PREFIX(BufferStorage):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7224(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BufferStorage), .-GL_PREFIX(BufferStorage)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearTexImage)
	.type	GL_PREFIX(ClearTexImage), @function
GL_PREFIX(ClearTexImage):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7232(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearTexImage), .-GL_PREFIX(ClearTexImage)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearTexSubImage)
	.type	GL_PREFIX(ClearTexSubImage), @function
GL_PREFIX(ClearTexSubImage):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearTexSubImage), .-GL_PREFIX(ClearTexSubImage)

	.p2align	4,,15
	.globl	GL_PREFIX(BindBuffersBase)
	.type	GL_PREFIX(BindBuffersBase), @function
GL_PREFIX(BindBuffersBase):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7248(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindBuffersBase), .-GL_PREFIX(BindBuffersBase)

	.p2align	4,,15
	.globl	GL_PREFIX(BindBuffersRange)
	.type	GL_PREFIX(BindBuffersRange), @function
GL_PREFIX(BindBuffersRange):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindBuffersRange), .-GL_PREFIX(BindBuffersRange)

	.p2align	4,,15
	.globl	GL_PREFIX(BindImageTextures)
	.type	GL_PREFIX(BindImageTextures), @function
GL_PREFIX(BindImageTextures):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindImageTextures), .-GL_PREFIX(BindImageTextures)

	.p2align	4,,15
	.globl	GL_PREFIX(BindSamplers)
	.type	GL_PREFIX(BindSamplers), @function
GL_PREFIX(BindSamplers):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7272(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindSamplers), .-GL_PREFIX(BindSamplers)

	.p2align	4,,15
	.globl	GL_PREFIX(BindTextures)
	.type	GL_PREFIX(BindTextures), @function
GL_PREFIX(BindTextures):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7280(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7280(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7280(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7280(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindTextures), .-GL_PREFIX(BindTextures)

	.p2align	4,,15
	.globl	GL_PREFIX(BindVertexBuffers)
	.type	GL_PREFIX(BindVertexBuffers), @function
GL_PREFIX(BindVertexBuffers):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7288(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7288(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7288(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7288(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindVertexBuffers), .-GL_PREFIX(BindVertexBuffers)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_912)
	.type	GL_PREFIX(_dispatch_stub_912), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_912))
GL_PREFIX(_dispatch_stub_912):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7296(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7296(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7296(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7296(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_912), .-GL_PREFIX(_dispatch_stub_912)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_913)
	.type	GL_PREFIX(_dispatch_stub_913), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_913))
GL_PREFIX(_dispatch_stub_913):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7304(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	7304(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7304(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	7304(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_913), .-GL_PREFIX(_dispatch_stub_913)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_914)
	.type	GL_PREFIX(_dispatch_stub_914), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_914))
GL_PREFIX(_dispatch_stub_914):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7312(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7312(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7312(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7312(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_914), .-GL_PREFIX(_dispatch_stub_914)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_915)
	.type	GL_PREFIX(_dispatch_stub_915), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_915))
GL_PREFIX(_dispatch_stub_915):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7320(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7320(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7320(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7320(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_915), .-GL_PREFIX(_dispatch_stub_915)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_916)
	.type	GL_PREFIX(_dispatch_stub_916), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_916))
GL_PREFIX(_dispatch_stub_916):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7328(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	7328(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7328(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	7328(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_916), .-GL_PREFIX(_dispatch_stub_916)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_917)
	.type	GL_PREFIX(_dispatch_stub_917), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_917))
GL_PREFIX(_dispatch_stub_917):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7336(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	7336(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7336(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	7336(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_917), .-GL_PREFIX(_dispatch_stub_917)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_918)
	.type	GL_PREFIX(_dispatch_stub_918), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_918))
GL_PREFIX(_dispatch_stub_918):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7344(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	7344(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7344(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	7344(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_918), .-GL_PREFIX(_dispatch_stub_918)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_919)
	.type	GL_PREFIX(_dispatch_stub_919), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_919))
GL_PREFIX(_dispatch_stub_919):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7352(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7352(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7352(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7352(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_919), .-GL_PREFIX(_dispatch_stub_919)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_920)
	.type	GL_PREFIX(_dispatch_stub_920), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_920))
GL_PREFIX(_dispatch_stub_920):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7360(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	7360(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7360(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	7360(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_920), .-GL_PREFIX(_dispatch_stub_920)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_921)
	.type	GL_PREFIX(_dispatch_stub_921), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_921))
GL_PREFIX(_dispatch_stub_921):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7368(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	7368(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7368(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	7368(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_921), .-GL_PREFIX(_dispatch_stub_921)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_922)
	.type	GL_PREFIX(_dispatch_stub_922), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_922))
GL_PREFIX(_dispatch_stub_922):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7376(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7376(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7376(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7376(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_922), .-GL_PREFIX(_dispatch_stub_922)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_923)
	.type	GL_PREFIX(_dispatch_stub_923), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_923))
GL_PREFIX(_dispatch_stub_923):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7384(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7384(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7384(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7384(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_923), .-GL_PREFIX(_dispatch_stub_923)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_924)
	.type	GL_PREFIX(_dispatch_stub_924), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_924))
GL_PREFIX(_dispatch_stub_924):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7392(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7392(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7392(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7392(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_924), .-GL_PREFIX(_dispatch_stub_924)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_925)
	.type	GL_PREFIX(_dispatch_stub_925), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_925))
GL_PREFIX(_dispatch_stub_925):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7400(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7400(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7400(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7400(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_925), .-GL_PREFIX(_dispatch_stub_925)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_926)
	.type	GL_PREFIX(_dispatch_stub_926), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_926))
GL_PREFIX(_dispatch_stub_926):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7408(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7408(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7408(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7408(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_926), .-GL_PREFIX(_dispatch_stub_926)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_927)
	.type	GL_PREFIX(_dispatch_stub_927), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_927))
GL_PREFIX(_dispatch_stub_927):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7416(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7416(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7416(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7416(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_927), .-GL_PREFIX(_dispatch_stub_927)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_928)
	.type	GL_PREFIX(_dispatch_stub_928), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_928))
GL_PREFIX(_dispatch_stub_928):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7424(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7424(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7424(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7424(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_928), .-GL_PREFIX(_dispatch_stub_928)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_929)
	.type	GL_PREFIX(_dispatch_stub_929), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_929))
GL_PREFIX(_dispatch_stub_929):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7432(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7432(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7432(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7432(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_929), .-GL_PREFIX(_dispatch_stub_929)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_930)
	.type	GL_PREFIX(_dispatch_stub_930), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_930))
GL_PREFIX(_dispatch_stub_930):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7440(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7440(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7440(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7440(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_930), .-GL_PREFIX(_dispatch_stub_930)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_931)
	.type	GL_PREFIX(_dispatch_stub_931), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_931))
GL_PREFIX(_dispatch_stub_931):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7448(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7448(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7448(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7448(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_931), .-GL_PREFIX(_dispatch_stub_931)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_932)
	.type	GL_PREFIX(_dispatch_stub_932), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_932))
GL_PREFIX(_dispatch_stub_932):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7456(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7456(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7456(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7456(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_932), .-GL_PREFIX(_dispatch_stub_932)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_933)
	.type	GL_PREFIX(_dispatch_stub_933), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_933))
GL_PREFIX(_dispatch_stub_933):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7464(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7464(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7464(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7464(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_933), .-GL_PREFIX(_dispatch_stub_933)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_934)
	.type	GL_PREFIX(_dispatch_stub_934), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_934))
GL_PREFIX(_dispatch_stub_934):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7472(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7472(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7472(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7472(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_934), .-GL_PREFIX(_dispatch_stub_934)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_935)
	.type	GL_PREFIX(_dispatch_stub_935), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_935))
GL_PREFIX(_dispatch_stub_935):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7480(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7480(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7480(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7480(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_935), .-GL_PREFIX(_dispatch_stub_935)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_936)
	.type	GL_PREFIX(_dispatch_stub_936), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_936))
GL_PREFIX(_dispatch_stub_936):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7488(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7488(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7488(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7488(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_936), .-GL_PREFIX(_dispatch_stub_936)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_937)
	.type	GL_PREFIX(_dispatch_stub_937), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_937))
GL_PREFIX(_dispatch_stub_937):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7496(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
	movq	%xmm0, 24(%rsp)
	movq	%rcx, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %rcx
	movq	24(%rsp), %xmm0
	movq	16(%rsp), %rdx
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	7496(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7496(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
	movq	%xmm0, 24(%rsp)
	movq	%rcx, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %rcx
	movq	24(%rsp), %xmm0
	movq	16(%rsp), %rdx
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	7496(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_937), .-GL_PREFIX(_dispatch_stub_937)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_938)
	.type	GL_PREFIX(_dispatch_stub_938), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_938))
GL_PREFIX(_dispatch_stub_938):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7504(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7504(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7504(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7504(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_938), .-GL_PREFIX(_dispatch_stub_938)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_939)
	.type	GL_PREFIX(_dispatch_stub_939), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_939))
GL_PREFIX(_dispatch_stub_939):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7512(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7512(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7512(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7512(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_939), .-GL_PREFIX(_dispatch_stub_939)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_940)
	.type	GL_PREFIX(_dispatch_stub_940), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_940))
GL_PREFIX(_dispatch_stub_940):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7520(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7520(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7520(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7520(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_940), .-GL_PREFIX(_dispatch_stub_940)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_941)
	.type	GL_PREFIX(_dispatch_stub_941), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_941))
GL_PREFIX(_dispatch_stub_941):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7528(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7528(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7528(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7528(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_941), .-GL_PREFIX(_dispatch_stub_941)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_942)
	.type	GL_PREFIX(_dispatch_stub_942), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_942))
GL_PREFIX(_dispatch_stub_942):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7536(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7536(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7536(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7536(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_942), .-GL_PREFIX(_dispatch_stub_942)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_943)
	.type	GL_PREFIX(_dispatch_stub_943), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_943))
GL_PREFIX(_dispatch_stub_943):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7544(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7544(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7544(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7544(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_943), .-GL_PREFIX(_dispatch_stub_943)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_944)
	.type	GL_PREFIX(_dispatch_stub_944), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_944))
GL_PREFIX(_dispatch_stub_944):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7552(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7552(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7552(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7552(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_944), .-GL_PREFIX(_dispatch_stub_944)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_945)
	.type	GL_PREFIX(_dispatch_stub_945), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_945))
GL_PREFIX(_dispatch_stub_945):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7560(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7560(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7560(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7560(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_945), .-GL_PREFIX(_dispatch_stub_945)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_946)
	.type	GL_PREFIX(_dispatch_stub_946), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_946))
GL_PREFIX(_dispatch_stub_946):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7568(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7568(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7568(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7568(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_946), .-GL_PREFIX(_dispatch_stub_946)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_947)
	.type	GL_PREFIX(_dispatch_stub_947), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_947))
GL_PREFIX(_dispatch_stub_947):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7576(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7576(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7576(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7576(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_947), .-GL_PREFIX(_dispatch_stub_947)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_948)
	.type	GL_PREFIX(_dispatch_stub_948), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_948))
GL_PREFIX(_dispatch_stub_948):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7584(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7584(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7584(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7584(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_948), .-GL_PREFIX(_dispatch_stub_948)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_949)
	.type	GL_PREFIX(_dispatch_stub_949), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_949))
GL_PREFIX(_dispatch_stub_949):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7592(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7592(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7592(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7592(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_949), .-GL_PREFIX(_dispatch_stub_949)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_950)
	.type	GL_PREFIX(_dispatch_stub_950), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_950))
GL_PREFIX(_dispatch_stub_950):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7600(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7600(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7600(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7600(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_950), .-GL_PREFIX(_dispatch_stub_950)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_951)
	.type	GL_PREFIX(_dispatch_stub_951), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_951))
GL_PREFIX(_dispatch_stub_951):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7608(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7608(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7608(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7608(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_951), .-GL_PREFIX(_dispatch_stub_951)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_952)
	.type	GL_PREFIX(_dispatch_stub_952), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_952))
GL_PREFIX(_dispatch_stub_952):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7616(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7616(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7616(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7616(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_952), .-GL_PREFIX(_dispatch_stub_952)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_953)
	.type	GL_PREFIX(_dispatch_stub_953), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_953))
GL_PREFIX(_dispatch_stub_953):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7624(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7624(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7624(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7624(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_953), .-GL_PREFIX(_dispatch_stub_953)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_954)
	.type	GL_PREFIX(_dispatch_stub_954), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_954))
GL_PREFIX(_dispatch_stub_954):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7632(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7632(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7632(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7632(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_954), .-GL_PREFIX(_dispatch_stub_954)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_955)
	.type	GL_PREFIX(_dispatch_stub_955), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_955))
GL_PREFIX(_dispatch_stub_955):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7640(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7640(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7640(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7640(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_955), .-GL_PREFIX(_dispatch_stub_955)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_956)
	.type	GL_PREFIX(_dispatch_stub_956), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_956))
GL_PREFIX(_dispatch_stub_956):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7648(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7648(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7648(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7648(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_956), .-GL_PREFIX(_dispatch_stub_956)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_957)
	.type	GL_PREFIX(_dispatch_stub_957), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_957))
GL_PREFIX(_dispatch_stub_957):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7656(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7656(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7656(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7656(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_957), .-GL_PREFIX(_dispatch_stub_957)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_958)
	.type	GL_PREFIX(_dispatch_stub_958), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_958))
GL_PREFIX(_dispatch_stub_958):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7664(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7664(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7664(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7664(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_958), .-GL_PREFIX(_dispatch_stub_958)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_959)
	.type	GL_PREFIX(_dispatch_stub_959), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_959))
GL_PREFIX(_dispatch_stub_959):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7672(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7672(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7672(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7672(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_959), .-GL_PREFIX(_dispatch_stub_959)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_960)
	.type	GL_PREFIX(_dispatch_stub_960), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_960))
GL_PREFIX(_dispatch_stub_960):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7680(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	7680(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7680(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	7680(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_960), .-GL_PREFIX(_dispatch_stub_960)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_961)
	.type	GL_PREFIX(_dispatch_stub_961), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_961))
GL_PREFIX(_dispatch_stub_961):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7688(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7688(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7688(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7688(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_961), .-GL_PREFIX(_dispatch_stub_961)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_962)
	.type	GL_PREFIX(_dispatch_stub_962), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_962))
GL_PREFIX(_dispatch_stub_962):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7696(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7696(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7696(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7696(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_962), .-GL_PREFIX(_dispatch_stub_962)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_963)
	.type	GL_PREFIX(_dispatch_stub_963), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_963))
GL_PREFIX(_dispatch_stub_963):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7704(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7704(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7704(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7704(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_963), .-GL_PREFIX(_dispatch_stub_963)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_964)
	.type	GL_PREFIX(_dispatch_stub_964), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_964))
GL_PREFIX(_dispatch_stub_964):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7712(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7712(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7712(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7712(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_964), .-GL_PREFIX(_dispatch_stub_964)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_965)
	.type	GL_PREFIX(_dispatch_stub_965), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_965))
GL_PREFIX(_dispatch_stub_965):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7720(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7720(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7720(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7720(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_965), .-GL_PREFIX(_dispatch_stub_965)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_966)
	.type	GL_PREFIX(_dispatch_stub_966), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_966))
GL_PREFIX(_dispatch_stub_966):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7728(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7728(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7728(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7728(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_966), .-GL_PREFIX(_dispatch_stub_966)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_967)
	.type	GL_PREFIX(_dispatch_stub_967), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_967))
GL_PREFIX(_dispatch_stub_967):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7736(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7736(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7736(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7736(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_967), .-GL_PREFIX(_dispatch_stub_967)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_968)
	.type	GL_PREFIX(_dispatch_stub_968), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_968))
GL_PREFIX(_dispatch_stub_968):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7744(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7744(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7744(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7744(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_968), .-GL_PREFIX(_dispatch_stub_968)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_969)
	.type	GL_PREFIX(_dispatch_stub_969), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_969))
GL_PREFIX(_dispatch_stub_969):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7752(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7752(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7752(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7752(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_969), .-GL_PREFIX(_dispatch_stub_969)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_970)
	.type	GL_PREFIX(_dispatch_stub_970), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_970))
GL_PREFIX(_dispatch_stub_970):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7760(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7760(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7760(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7760(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_970), .-GL_PREFIX(_dispatch_stub_970)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_971)
	.type	GL_PREFIX(_dispatch_stub_971), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_971))
GL_PREFIX(_dispatch_stub_971):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7768(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7768(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7768(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7768(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_971), .-GL_PREFIX(_dispatch_stub_971)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_972)
	.type	GL_PREFIX(_dispatch_stub_972), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_972))
GL_PREFIX(_dispatch_stub_972):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7776(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7776(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7776(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7776(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_972), .-GL_PREFIX(_dispatch_stub_972)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_973)
	.type	GL_PREFIX(_dispatch_stub_973), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_973))
GL_PREFIX(_dispatch_stub_973):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7784(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7784(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7784(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7784(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_973), .-GL_PREFIX(_dispatch_stub_973)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_974)
	.type	GL_PREFIX(_dispatch_stub_974), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_974))
GL_PREFIX(_dispatch_stub_974):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7792(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7792(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7792(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7792(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_974), .-GL_PREFIX(_dispatch_stub_974)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_975)
	.type	GL_PREFIX(_dispatch_stub_975), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_975))
GL_PREFIX(_dispatch_stub_975):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7800(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7800(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7800(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7800(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_975), .-GL_PREFIX(_dispatch_stub_975)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_976)
	.type	GL_PREFIX(_dispatch_stub_976), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_976))
GL_PREFIX(_dispatch_stub_976):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7808(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7808(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7808(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7808(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_976), .-GL_PREFIX(_dispatch_stub_976)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_977)
	.type	GL_PREFIX(_dispatch_stub_977), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_977))
GL_PREFIX(_dispatch_stub_977):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7816(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7816(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7816(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7816(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_977), .-GL_PREFIX(_dispatch_stub_977)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_978)
	.type	GL_PREFIX(_dispatch_stub_978), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_978))
GL_PREFIX(_dispatch_stub_978):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7824(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7824(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7824(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7824(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_978), .-GL_PREFIX(_dispatch_stub_978)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_979)
	.type	GL_PREFIX(_dispatch_stub_979), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_979))
GL_PREFIX(_dispatch_stub_979):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7832(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7832(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7832(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7832(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_979), .-GL_PREFIX(_dispatch_stub_979)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_980)
	.type	GL_PREFIX(_dispatch_stub_980), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_980))
GL_PREFIX(_dispatch_stub_980):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7840(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7840(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7840(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7840(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_980), .-GL_PREFIX(_dispatch_stub_980)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_981)
	.type	GL_PREFIX(_dispatch_stub_981), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_981))
GL_PREFIX(_dispatch_stub_981):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7848(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7848(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7848(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7848(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_981), .-GL_PREFIX(_dispatch_stub_981)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_982)
	.type	GL_PREFIX(_dispatch_stub_982), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_982))
GL_PREFIX(_dispatch_stub_982):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7856(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7856(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7856(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7856(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_982), .-GL_PREFIX(_dispatch_stub_982)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_983)
	.type	GL_PREFIX(_dispatch_stub_983), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_983))
GL_PREFIX(_dispatch_stub_983):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7864(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7864(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7864(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7864(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_983), .-GL_PREFIX(_dispatch_stub_983)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_984)
	.type	GL_PREFIX(_dispatch_stub_984), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_984))
GL_PREFIX(_dispatch_stub_984):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7872(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7872(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7872(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7872(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_984), .-GL_PREFIX(_dispatch_stub_984)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_985)
	.type	GL_PREFIX(_dispatch_stub_985), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_985))
GL_PREFIX(_dispatch_stub_985):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7880(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7880(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7880(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7880(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_985), .-GL_PREFIX(_dispatch_stub_985)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_986)
	.type	GL_PREFIX(_dispatch_stub_986), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_986))
GL_PREFIX(_dispatch_stub_986):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7888(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7888(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7888(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7888(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_986), .-GL_PREFIX(_dispatch_stub_986)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_987)
	.type	GL_PREFIX(_dispatch_stub_987), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_987))
GL_PREFIX(_dispatch_stub_987):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7896(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7896(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7896(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7896(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_987), .-GL_PREFIX(_dispatch_stub_987)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_988)
	.type	GL_PREFIX(_dispatch_stub_988), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_988))
GL_PREFIX(_dispatch_stub_988):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7904(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7904(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7904(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7904(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_988), .-GL_PREFIX(_dispatch_stub_988)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_989)
	.type	GL_PREFIX(_dispatch_stub_989), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_989))
GL_PREFIX(_dispatch_stub_989):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7912(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7912(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7912(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7912(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_989), .-GL_PREFIX(_dispatch_stub_989)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_990)
	.type	GL_PREFIX(_dispatch_stub_990), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_990))
GL_PREFIX(_dispatch_stub_990):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7920(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7920(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7920(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7920(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_990), .-GL_PREFIX(_dispatch_stub_990)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_991)
	.type	GL_PREFIX(_dispatch_stub_991), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_991))
GL_PREFIX(_dispatch_stub_991):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7928(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7928(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7928(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7928(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_991), .-GL_PREFIX(_dispatch_stub_991)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_992)
	.type	GL_PREFIX(_dispatch_stub_992), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_992))
GL_PREFIX(_dispatch_stub_992):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7936(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7936(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7936(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7936(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_992), .-GL_PREFIX(_dispatch_stub_992)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_993)
	.type	GL_PREFIX(_dispatch_stub_993), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_993))
GL_PREFIX(_dispatch_stub_993):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7944(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7944(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7944(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7944(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_993), .-GL_PREFIX(_dispatch_stub_993)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_994)
	.type	GL_PREFIX(_dispatch_stub_994), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_994))
GL_PREFIX(_dispatch_stub_994):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7952(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7952(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7952(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7952(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_994), .-GL_PREFIX(_dispatch_stub_994)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_995)
	.type	GL_PREFIX(_dispatch_stub_995), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_995))
GL_PREFIX(_dispatch_stub_995):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7960(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7960(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7960(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7960(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_995), .-GL_PREFIX(_dispatch_stub_995)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_996)
	.type	GL_PREFIX(_dispatch_stub_996), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_996))
GL_PREFIX(_dispatch_stub_996):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7968(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7968(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7968(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	7968(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_996), .-GL_PREFIX(_dispatch_stub_996)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_997)
	.type	GL_PREFIX(_dispatch_stub_997), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_997))
GL_PREFIX(_dispatch_stub_997):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7976(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7976(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7976(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7976(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_997), .-GL_PREFIX(_dispatch_stub_997)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_998)
	.type	GL_PREFIX(_dispatch_stub_998), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_998))
GL_PREFIX(_dispatch_stub_998):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7984(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7984(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7984(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7984(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_998), .-GL_PREFIX(_dispatch_stub_998)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_999)
	.type	GL_PREFIX(_dispatch_stub_999), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_999))
GL_PREFIX(_dispatch_stub_999):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	7992(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7992(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	7992(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	7992(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_999), .-GL_PREFIX(_dispatch_stub_999)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1000)
	.type	GL_PREFIX(_dispatch_stub_1000), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1000))
GL_PREFIX(_dispatch_stub_1000):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8000(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8000(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8000(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8000(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1000), .-GL_PREFIX(_dispatch_stub_1000)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1001)
	.type	GL_PREFIX(_dispatch_stub_1001), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1001))
GL_PREFIX(_dispatch_stub_1001):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8008(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8008(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8008(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8008(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1001), .-GL_PREFIX(_dispatch_stub_1001)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1002)
	.type	GL_PREFIX(_dispatch_stub_1002), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1002))
GL_PREFIX(_dispatch_stub_1002):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8016(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8016(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8016(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8016(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1002), .-GL_PREFIX(_dispatch_stub_1002)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1003)
	.type	GL_PREFIX(_dispatch_stub_1003), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1003))
GL_PREFIX(_dispatch_stub_1003):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8024(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8024(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8024(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8024(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1003), .-GL_PREFIX(_dispatch_stub_1003)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1004)
	.type	GL_PREFIX(_dispatch_stub_1004), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1004))
GL_PREFIX(_dispatch_stub_1004):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8032(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8032(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8032(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8032(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1004), .-GL_PREFIX(_dispatch_stub_1004)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1005)
	.type	GL_PREFIX(_dispatch_stub_1005), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1005))
GL_PREFIX(_dispatch_stub_1005):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8040(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8040(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8040(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8040(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1005), .-GL_PREFIX(_dispatch_stub_1005)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1006)
	.type	GL_PREFIX(_dispatch_stub_1006), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1006))
GL_PREFIX(_dispatch_stub_1006):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8048(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	8048(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8048(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	8048(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1006), .-GL_PREFIX(_dispatch_stub_1006)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1007)
	.type	GL_PREFIX(_dispatch_stub_1007), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1007))
GL_PREFIX(_dispatch_stub_1007):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8056(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8056(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8056(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8056(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1007), .-GL_PREFIX(_dispatch_stub_1007)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1008)
	.type	GL_PREFIX(_dispatch_stub_1008), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1008))
GL_PREFIX(_dispatch_stub_1008):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8064(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8064(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8064(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8064(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1008), .-GL_PREFIX(_dispatch_stub_1008)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1009)
	.type	GL_PREFIX(_dispatch_stub_1009), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1009))
GL_PREFIX(_dispatch_stub_1009):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8072(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8072(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8072(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8072(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1009), .-GL_PREFIX(_dispatch_stub_1009)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1010)
	.type	GL_PREFIX(_dispatch_stub_1010), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1010))
GL_PREFIX(_dispatch_stub_1010):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8080(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8080(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8080(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8080(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1010), .-GL_PREFIX(_dispatch_stub_1010)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1011)
	.type	GL_PREFIX(_dispatch_stub_1011), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1011))
GL_PREFIX(_dispatch_stub_1011):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8088(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8088(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8088(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8088(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1011), .-GL_PREFIX(_dispatch_stub_1011)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1012)
	.type	GL_PREFIX(_dispatch_stub_1012), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1012))
GL_PREFIX(_dispatch_stub_1012):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8096(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8096(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8096(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8096(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1012), .-GL_PREFIX(_dispatch_stub_1012)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1013)
	.type	GL_PREFIX(_dispatch_stub_1013), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1013))
GL_PREFIX(_dispatch_stub_1013):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8104(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1013), .-GL_PREFIX(_dispatch_stub_1013)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1014)
	.type	GL_PREFIX(_dispatch_stub_1014), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1014))
GL_PREFIX(_dispatch_stub_1014):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8112(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1014), .-GL_PREFIX(_dispatch_stub_1014)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1015)
	.type	GL_PREFIX(_dispatch_stub_1015), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1015))
GL_PREFIX(_dispatch_stub_1015):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1015), .-GL_PREFIX(_dispatch_stub_1015)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1016)
	.type	GL_PREFIX(_dispatch_stub_1016), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1016))
GL_PREFIX(_dispatch_stub_1016):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8128(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1016), .-GL_PREFIX(_dispatch_stub_1016)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1017)
	.type	GL_PREFIX(_dispatch_stub_1017), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1017))
GL_PREFIX(_dispatch_stub_1017):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8136(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1017), .-GL_PREFIX(_dispatch_stub_1017)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1018)
	.type	GL_PREFIX(_dispatch_stub_1018), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1018))
GL_PREFIX(_dispatch_stub_1018):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8144(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1018), .-GL_PREFIX(_dispatch_stub_1018)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1019)
	.type	GL_PREFIX(_dispatch_stub_1019), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1019))
GL_PREFIX(_dispatch_stub_1019):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8152(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1019), .-GL_PREFIX(_dispatch_stub_1019)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1020)
	.type	GL_PREFIX(_dispatch_stub_1020), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1020))
GL_PREFIX(_dispatch_stub_1020):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	8160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8160(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	8160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1020), .-GL_PREFIX(_dispatch_stub_1020)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1021)
	.type	GL_PREFIX(_dispatch_stub_1021), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1021))
GL_PREFIX(_dispatch_stub_1021):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1021), .-GL_PREFIX(_dispatch_stub_1021)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1022)
	.type	GL_PREFIX(_dispatch_stub_1022), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1022))
GL_PREFIX(_dispatch_stub_1022):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8176(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1022), .-GL_PREFIX(_dispatch_stub_1022)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1023)
	.type	GL_PREFIX(_dispatch_stub_1023), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1023))
GL_PREFIX(_dispatch_stub_1023):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1023), .-GL_PREFIX(_dispatch_stub_1023)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1024)
	.type	GL_PREFIX(_dispatch_stub_1024), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1024))
GL_PREFIX(_dispatch_stub_1024):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1024), .-GL_PREFIX(_dispatch_stub_1024)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1025)
	.type	GL_PREFIX(_dispatch_stub_1025), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1025))
GL_PREFIX(_dispatch_stub_1025):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8200(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1025), .-GL_PREFIX(_dispatch_stub_1025)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1026)
	.type	GL_PREFIX(_dispatch_stub_1026), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1026))
GL_PREFIX(_dispatch_stub_1026):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8208(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1026), .-GL_PREFIX(_dispatch_stub_1026)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1027)
	.type	GL_PREFIX(_dispatch_stub_1027), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1027))
GL_PREFIX(_dispatch_stub_1027):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8216(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1027), .-GL_PREFIX(_dispatch_stub_1027)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1028)
	.type	GL_PREFIX(_dispatch_stub_1028), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1028))
GL_PREFIX(_dispatch_stub_1028):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8224(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1028), .-GL_PREFIX(_dispatch_stub_1028)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1029)
	.type	GL_PREFIX(_dispatch_stub_1029), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1029))
GL_PREFIX(_dispatch_stub_1029):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8232(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1029), .-GL_PREFIX(_dispatch_stub_1029)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1030)
	.type	GL_PREFIX(_dispatch_stub_1030), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1030))
GL_PREFIX(_dispatch_stub_1030):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1030), .-GL_PREFIX(_dispatch_stub_1030)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1031)
	.type	GL_PREFIX(_dispatch_stub_1031), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1031))
GL_PREFIX(_dispatch_stub_1031):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8248(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1031), .-GL_PREFIX(_dispatch_stub_1031)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1032)
	.type	GL_PREFIX(_dispatch_stub_1032), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1032))
GL_PREFIX(_dispatch_stub_1032):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1032), .-GL_PREFIX(_dispatch_stub_1032)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1033)
	.type	GL_PREFIX(_dispatch_stub_1033), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1033))
GL_PREFIX(_dispatch_stub_1033):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1033), .-GL_PREFIX(_dispatch_stub_1033)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1034)
	.type	GL_PREFIX(_dispatch_stub_1034), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1034))
GL_PREFIX(_dispatch_stub_1034):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8272(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1034), .-GL_PREFIX(_dispatch_stub_1034)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1035)
	.type	GL_PREFIX(_dispatch_stub_1035), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1035))
GL_PREFIX(_dispatch_stub_1035):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8280(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8280(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8280(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8280(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1035), .-GL_PREFIX(_dispatch_stub_1035)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1036)
	.type	GL_PREFIX(_dispatch_stub_1036), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1036))
GL_PREFIX(_dispatch_stub_1036):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8288(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8288(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8288(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8288(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1036), .-GL_PREFIX(_dispatch_stub_1036)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1037)
	.type	GL_PREFIX(_dispatch_stub_1037), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1037))
GL_PREFIX(_dispatch_stub_1037):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8296(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8296(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8296(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8296(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1037), .-GL_PREFIX(_dispatch_stub_1037)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1038)
	.type	GL_PREFIX(_dispatch_stub_1038), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1038))
GL_PREFIX(_dispatch_stub_1038):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8304(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8304(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8304(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8304(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1038), .-GL_PREFIX(_dispatch_stub_1038)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1039)
	.type	GL_PREFIX(_dispatch_stub_1039), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1039))
GL_PREFIX(_dispatch_stub_1039):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8312(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8312(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8312(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8312(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1039), .-GL_PREFIX(_dispatch_stub_1039)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1040)
	.type	GL_PREFIX(_dispatch_stub_1040), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1040))
GL_PREFIX(_dispatch_stub_1040):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8320(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8320(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8320(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8320(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1040), .-GL_PREFIX(_dispatch_stub_1040)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1041)
	.type	GL_PREFIX(_dispatch_stub_1041), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1041))
GL_PREFIX(_dispatch_stub_1041):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8328(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8328(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8328(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8328(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1041), .-GL_PREFIX(_dispatch_stub_1041)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1042)
	.type	GL_PREFIX(_dispatch_stub_1042), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1042))
GL_PREFIX(_dispatch_stub_1042):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8336(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8336(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8336(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8336(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1042), .-GL_PREFIX(_dispatch_stub_1042)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1043)
	.type	GL_PREFIX(_dispatch_stub_1043), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1043))
GL_PREFIX(_dispatch_stub_1043):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8344(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8344(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8344(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8344(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1043), .-GL_PREFIX(_dispatch_stub_1043)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1044)
	.type	GL_PREFIX(_dispatch_stub_1044), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1044))
GL_PREFIX(_dispatch_stub_1044):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8352(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8352(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8352(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8352(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1044), .-GL_PREFIX(_dispatch_stub_1044)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1045)
	.type	GL_PREFIX(_dispatch_stub_1045), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1045))
GL_PREFIX(_dispatch_stub_1045):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8360(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8360(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8360(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8360(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1045), .-GL_PREFIX(_dispatch_stub_1045)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1046)
	.type	GL_PREFIX(_dispatch_stub_1046), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1046))
GL_PREFIX(_dispatch_stub_1046):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8368(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8368(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8368(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8368(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1046), .-GL_PREFIX(_dispatch_stub_1046)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1047)
	.type	GL_PREFIX(_dispatch_stub_1047), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1047))
GL_PREFIX(_dispatch_stub_1047):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8376(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8376(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8376(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8376(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1047), .-GL_PREFIX(_dispatch_stub_1047)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1048)
	.type	GL_PREFIX(_dispatch_stub_1048), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1048))
GL_PREFIX(_dispatch_stub_1048):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8384(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8384(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8384(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8384(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1048), .-GL_PREFIX(_dispatch_stub_1048)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1049)
	.type	GL_PREFIX(_dispatch_stub_1049), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1049))
GL_PREFIX(_dispatch_stub_1049):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8392(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8392(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8392(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8392(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1049), .-GL_PREFIX(_dispatch_stub_1049)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1050)
	.type	GL_PREFIX(_dispatch_stub_1050), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1050))
GL_PREFIX(_dispatch_stub_1050):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8400(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8400(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8400(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8400(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1050), .-GL_PREFIX(_dispatch_stub_1050)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1051)
	.type	GL_PREFIX(_dispatch_stub_1051), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1051))
GL_PREFIX(_dispatch_stub_1051):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8408(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8408(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8408(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8408(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1051), .-GL_PREFIX(_dispatch_stub_1051)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1052)
	.type	GL_PREFIX(_dispatch_stub_1052), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1052))
GL_PREFIX(_dispatch_stub_1052):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8416(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8416(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8416(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8416(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1052), .-GL_PREFIX(_dispatch_stub_1052)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1053)
	.type	GL_PREFIX(_dispatch_stub_1053), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1053))
GL_PREFIX(_dispatch_stub_1053):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8424(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8424(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8424(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8424(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1053), .-GL_PREFIX(_dispatch_stub_1053)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1054)
	.type	GL_PREFIX(_dispatch_stub_1054), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1054))
GL_PREFIX(_dispatch_stub_1054):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8432(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8432(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8432(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8432(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1054), .-GL_PREFIX(_dispatch_stub_1054)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1055)
	.type	GL_PREFIX(_dispatch_stub_1055), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1055))
GL_PREFIX(_dispatch_stub_1055):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8440(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8440(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8440(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8440(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1055), .-GL_PREFIX(_dispatch_stub_1055)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1056)
	.type	GL_PREFIX(_dispatch_stub_1056), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1056))
GL_PREFIX(_dispatch_stub_1056):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8448(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8448(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8448(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8448(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1056), .-GL_PREFIX(_dispatch_stub_1056)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1057)
	.type	GL_PREFIX(_dispatch_stub_1057), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1057))
GL_PREFIX(_dispatch_stub_1057):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8456(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8456(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8456(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8456(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1057), .-GL_PREFIX(_dispatch_stub_1057)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1058)
	.type	GL_PREFIX(_dispatch_stub_1058), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1058))
GL_PREFIX(_dispatch_stub_1058):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8464(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8464(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8464(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8464(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1058), .-GL_PREFIX(_dispatch_stub_1058)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1059)
	.type	GL_PREFIX(_dispatch_stub_1059), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1059))
GL_PREFIX(_dispatch_stub_1059):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8472(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8472(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8472(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8472(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1059), .-GL_PREFIX(_dispatch_stub_1059)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1060)
	.type	GL_PREFIX(_dispatch_stub_1060), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1060))
GL_PREFIX(_dispatch_stub_1060):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8480(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8480(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8480(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8480(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1060), .-GL_PREFIX(_dispatch_stub_1060)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1061)
	.type	GL_PREFIX(_dispatch_stub_1061), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1061))
GL_PREFIX(_dispatch_stub_1061):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8488(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8488(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8488(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8488(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1061), .-GL_PREFIX(_dispatch_stub_1061)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1062)
	.type	GL_PREFIX(_dispatch_stub_1062), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1062))
GL_PREFIX(_dispatch_stub_1062):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8496(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8496(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8496(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8496(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1062), .-GL_PREFIX(_dispatch_stub_1062)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1063)
	.type	GL_PREFIX(_dispatch_stub_1063), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1063))
GL_PREFIX(_dispatch_stub_1063):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8504(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8504(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8504(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8504(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1063), .-GL_PREFIX(_dispatch_stub_1063)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1064)
	.type	GL_PREFIX(_dispatch_stub_1064), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1064))
GL_PREFIX(_dispatch_stub_1064):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8512(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8512(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8512(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8512(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1064), .-GL_PREFIX(_dispatch_stub_1064)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1065)
	.type	GL_PREFIX(_dispatch_stub_1065), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1065))
GL_PREFIX(_dispatch_stub_1065):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8520(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8520(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8520(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8520(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1065), .-GL_PREFIX(_dispatch_stub_1065)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1066)
	.type	GL_PREFIX(_dispatch_stub_1066), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1066))
GL_PREFIX(_dispatch_stub_1066):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8528(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8528(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8528(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8528(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1066), .-GL_PREFIX(_dispatch_stub_1066)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1067)
	.type	GL_PREFIX(_dispatch_stub_1067), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1067))
GL_PREFIX(_dispatch_stub_1067):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8536(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8536(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8536(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8536(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1067), .-GL_PREFIX(_dispatch_stub_1067)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1068)
	.type	GL_PREFIX(_dispatch_stub_1068), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1068))
GL_PREFIX(_dispatch_stub_1068):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8544(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8544(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8544(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8544(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1068), .-GL_PREFIX(_dispatch_stub_1068)

	.p2align	4,,15
	.globl	GL_PREFIX(InvalidateBufferData)
	.type	GL_PREFIX(InvalidateBufferData), @function
GL_PREFIX(InvalidateBufferData):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8552(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	8552(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8552(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	8552(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(InvalidateBufferData), .-GL_PREFIX(InvalidateBufferData)

	.p2align	4,,15
	.globl	GL_PREFIX(InvalidateBufferSubData)
	.type	GL_PREFIX(InvalidateBufferSubData), @function
GL_PREFIX(InvalidateBufferSubData):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8560(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8560(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8560(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8560(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(InvalidateBufferSubData), .-GL_PREFIX(InvalidateBufferSubData)

	.p2align	4,,15
	.globl	GL_PREFIX(InvalidateFramebuffer)
	.type	GL_PREFIX(InvalidateFramebuffer), @function
GL_PREFIX(InvalidateFramebuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8568(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8568(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8568(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8568(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(InvalidateFramebuffer), .-GL_PREFIX(InvalidateFramebuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(InvalidateSubFramebuffer)
	.type	GL_PREFIX(InvalidateSubFramebuffer), @function
GL_PREFIX(InvalidateSubFramebuffer):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8576(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8576(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8576(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8576(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(InvalidateSubFramebuffer), .-GL_PREFIX(InvalidateSubFramebuffer)

	.p2align	4,,15
	.globl	GL_PREFIX(InvalidateTexImage)
	.type	GL_PREFIX(InvalidateTexImage), @function
GL_PREFIX(InvalidateTexImage):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8584(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8584(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8584(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8584(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(InvalidateTexImage), .-GL_PREFIX(InvalidateTexImage)

	.p2align	4,,15
	.globl	GL_PREFIX(InvalidateTexSubImage)
	.type	GL_PREFIX(InvalidateTexSubImage), @function
GL_PREFIX(InvalidateTexSubImage):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8592(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8592(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8592(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8592(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(InvalidateTexSubImage), .-GL_PREFIX(InvalidateTexSubImage)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1075)
	.type	GL_PREFIX(_dispatch_stub_1075), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1075))
GL_PREFIX(_dispatch_stub_1075):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8600(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	8600(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8600(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	8600(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1075), .-GL_PREFIX(_dispatch_stub_1075)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1076)
	.type	GL_PREFIX(_dispatch_stub_1076), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1076))
GL_PREFIX(_dispatch_stub_1076):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8608(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	8608(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8608(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	8608(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1076), .-GL_PREFIX(_dispatch_stub_1076)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1077)
	.type	GL_PREFIX(_dispatch_stub_1077), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1077))
GL_PREFIX(_dispatch_stub_1077):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8616(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	8616(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8616(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	8616(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1077), .-GL_PREFIX(_dispatch_stub_1077)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1078)
	.type	GL_PREFIX(_dispatch_stub_1078), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1078))
GL_PREFIX(_dispatch_stub_1078):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8624(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8624(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8624(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8624(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1078), .-GL_PREFIX(_dispatch_stub_1078)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1079)
	.type	GL_PREFIX(_dispatch_stub_1079), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1079))
GL_PREFIX(_dispatch_stub_1079):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8632(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	8632(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8632(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	8632(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1079), .-GL_PREFIX(_dispatch_stub_1079)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1080)
	.type	GL_PREFIX(_dispatch_stub_1080), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1080))
GL_PREFIX(_dispatch_stub_1080):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8640(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8640(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8640(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8640(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1080), .-GL_PREFIX(_dispatch_stub_1080)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1081)
	.type	GL_PREFIX(_dispatch_stub_1081), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1081))
GL_PREFIX(_dispatch_stub_1081):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8648(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	8648(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8648(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	8648(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1081), .-GL_PREFIX(_dispatch_stub_1081)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1082)
	.type	GL_PREFIX(_dispatch_stub_1082), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1082))
GL_PREFIX(_dispatch_stub_1082):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8656(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8656(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8656(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8656(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1082), .-GL_PREFIX(_dispatch_stub_1082)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1083)
	.type	GL_PREFIX(_dispatch_stub_1083), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1083))
GL_PREFIX(_dispatch_stub_1083):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8664(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	8664(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8664(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	8664(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1083), .-GL_PREFIX(_dispatch_stub_1083)

	.p2align	4,,15
	.globl	GL_PREFIX(PointSizePointerOES)
	.type	GL_PREFIX(PointSizePointerOES), @function
GL_PREFIX(PointSizePointerOES):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8672(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8672(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8672(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8672(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PointSizePointerOES), .-GL_PREFIX(PointSizePointerOES)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1085)
	.type	GL_PREFIX(_dispatch_stub_1085), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1085))
GL_PREFIX(_dispatch_stub_1085):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8680(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8680(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8680(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8680(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1085), .-GL_PREFIX(_dispatch_stub_1085)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1086)
	.type	GL_PREFIX(_dispatch_stub_1086), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1086))
GL_PREFIX(_dispatch_stub_1086):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8688(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8688(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8688(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8688(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1086), .-GL_PREFIX(_dispatch_stub_1086)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1087)
	.type	GL_PREFIX(_dispatch_stub_1087), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1087))
GL_PREFIX(_dispatch_stub_1087):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8696(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	8696(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8696(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	8696(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1087), .-GL_PREFIX(_dispatch_stub_1087)

	.p2align	4,,15
	.globl	GL_PREFIX(ColorPointerEXT)
	.type	GL_PREFIX(ColorPointerEXT), @function
GL_PREFIX(ColorPointerEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8704(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8704(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8704(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8704(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ColorPointerEXT), .-GL_PREFIX(ColorPointerEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(EdgeFlagPointerEXT)
	.type	GL_PREFIX(EdgeFlagPointerEXT), @function
GL_PREFIX(EdgeFlagPointerEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8712(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8712(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8712(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8712(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(EdgeFlagPointerEXT), .-GL_PREFIX(EdgeFlagPointerEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(IndexPointerEXT)
	.type	GL_PREFIX(IndexPointerEXT), @function
GL_PREFIX(IndexPointerEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8720(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8720(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8720(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8720(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IndexPointerEXT), .-GL_PREFIX(IndexPointerEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(NormalPointerEXT)
	.type	GL_PREFIX(NormalPointerEXT), @function
GL_PREFIX(NormalPointerEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8728(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8728(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8728(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8728(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(NormalPointerEXT), .-GL_PREFIX(NormalPointerEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(TexCoordPointerEXT)
	.type	GL_PREFIX(TexCoordPointerEXT), @function
GL_PREFIX(TexCoordPointerEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8736(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8736(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8736(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8736(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexCoordPointerEXT), .-GL_PREFIX(TexCoordPointerEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexPointerEXT)
	.type	GL_PREFIX(VertexPointerEXT), @function
GL_PREFIX(VertexPointerEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8744(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8744(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8744(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8744(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexPointerEXT), .-GL_PREFIX(VertexPointerEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1094)
	.type	GL_PREFIX(_dispatch_stub_1094), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1094))
GL_PREFIX(_dispatch_stub_1094):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8752(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8752(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8752(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8752(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1094), .-GL_PREFIX(_dispatch_stub_1094)

	.p2align	4,,15
	.globl	GL_PREFIX(ActiveShaderProgram)
	.type	GL_PREFIX(ActiveShaderProgram), @function
GL_PREFIX(ActiveShaderProgram):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8760(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8760(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8760(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8760(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ActiveShaderProgram), .-GL_PREFIX(ActiveShaderProgram)

	.p2align	4,,15
	.globl	GL_PREFIX(BindProgramPipeline)
	.type	GL_PREFIX(BindProgramPipeline), @function
GL_PREFIX(BindProgramPipeline):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8768(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	8768(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8768(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	8768(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindProgramPipeline), .-GL_PREFIX(BindProgramPipeline)

	.p2align	4,,15
	.globl	GL_PREFIX(CreateShaderProgramv)
	.type	GL_PREFIX(CreateShaderProgramv), @function
GL_PREFIX(CreateShaderProgramv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8776(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8776(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8776(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8776(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(CreateShaderProgramv), .-GL_PREFIX(CreateShaderProgramv)

	.p2align	4,,15
	.globl	GL_PREFIX(DeleteProgramPipelines)
	.type	GL_PREFIX(DeleteProgramPipelines), @function
GL_PREFIX(DeleteProgramPipelines):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8784(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8784(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8784(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8784(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DeleteProgramPipelines), .-GL_PREFIX(DeleteProgramPipelines)

	.p2align	4,,15
	.globl	GL_PREFIX(GenProgramPipelines)
	.type	GL_PREFIX(GenProgramPipelines), @function
GL_PREFIX(GenProgramPipelines):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8792(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8792(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8792(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8792(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GenProgramPipelines), .-GL_PREFIX(GenProgramPipelines)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramPipelineInfoLog)
	.type	GL_PREFIX(GetProgramPipelineInfoLog), @function
GL_PREFIX(GetProgramPipelineInfoLog):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8800(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8800(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8800(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8800(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramPipelineInfoLog), .-GL_PREFIX(GetProgramPipelineInfoLog)

	.p2align	4,,15
	.globl	GL_PREFIX(GetProgramPipelineiv)
	.type	GL_PREFIX(GetProgramPipelineiv), @function
GL_PREFIX(GetProgramPipelineiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8808(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8808(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8808(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8808(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetProgramPipelineiv), .-GL_PREFIX(GetProgramPipelineiv)

	.p2align	4,,15
	.globl	GL_PREFIX(IsProgramPipeline)
	.type	GL_PREFIX(IsProgramPipeline), @function
GL_PREFIX(IsProgramPipeline):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8816(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	8816(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8816(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	8816(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(IsProgramPipeline), .-GL_PREFIX(IsProgramPipeline)

	.p2align	4,,15
	.globl	GL_PREFIX(LockArraysEXT)
	.type	GL_PREFIX(LockArraysEXT), @function
GL_PREFIX(LockArraysEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8824(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8824(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8824(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	8824(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LockArraysEXT), .-GL_PREFIX(LockArraysEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1104)
	.type	GL_PREFIX(_dispatch_stub_1104), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1104))
GL_PREFIX(_dispatch_stub_1104):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8832(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	8832(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8832(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	8832(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1104), .-GL_PREFIX(_dispatch_stub_1104)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1105)
	.type	GL_PREFIX(_dispatch_stub_1105), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1105))
GL_PREFIX(_dispatch_stub_1105):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8840(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8840(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8840(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8840(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1105), .-GL_PREFIX(_dispatch_stub_1105)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform1f)
	.type	GL_PREFIX(ProgramUniform1f), @function
GL_PREFIX(ProgramUniform1f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8848(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	8848(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8848(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	8848(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform1f), .-GL_PREFIX(ProgramUniform1f)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform1fv)
	.type	GL_PREFIX(ProgramUniform1fv), @function
GL_PREFIX(ProgramUniform1fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8856(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8856(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8856(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8856(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform1fv), .-GL_PREFIX(ProgramUniform1fv)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform1i)
	.type	GL_PREFIX(ProgramUniform1i), @function
GL_PREFIX(ProgramUniform1i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8864(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8864(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8864(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8864(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform1i), .-GL_PREFIX(ProgramUniform1i)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform1iv)
	.type	GL_PREFIX(ProgramUniform1iv), @function
GL_PREFIX(ProgramUniform1iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8872(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8872(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8872(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8872(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform1iv), .-GL_PREFIX(ProgramUniform1iv)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform1ui)
	.type	GL_PREFIX(ProgramUniform1ui), @function
GL_PREFIX(ProgramUniform1ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8880(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8880(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8880(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8880(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform1ui), .-GL_PREFIX(ProgramUniform1ui)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform1uiv)
	.type	GL_PREFIX(ProgramUniform1uiv), @function
GL_PREFIX(ProgramUniform1uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8888(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8888(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8888(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8888(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform1uiv), .-GL_PREFIX(ProgramUniform1uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1112)
	.type	GL_PREFIX(_dispatch_stub_1112), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1112))
GL_PREFIX(_dispatch_stub_1112):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8896(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	8896(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8896(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	8896(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1112), .-GL_PREFIX(_dispatch_stub_1112)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1113)
	.type	GL_PREFIX(_dispatch_stub_1113), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1113))
GL_PREFIX(_dispatch_stub_1113):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8904(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8904(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8904(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8904(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1113), .-GL_PREFIX(_dispatch_stub_1113)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform2f)
	.type	GL_PREFIX(ProgramUniform2f), @function
GL_PREFIX(ProgramUniform2f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8912(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	8912(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8912(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	8912(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform2f), .-GL_PREFIX(ProgramUniform2f)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform2fv)
	.type	GL_PREFIX(ProgramUniform2fv), @function
GL_PREFIX(ProgramUniform2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8920(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8920(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8920(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8920(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform2fv), .-GL_PREFIX(ProgramUniform2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform2i)
	.type	GL_PREFIX(ProgramUniform2i), @function
GL_PREFIX(ProgramUniform2i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8928(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8928(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8928(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8928(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform2i), .-GL_PREFIX(ProgramUniform2i)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform2iv)
	.type	GL_PREFIX(ProgramUniform2iv), @function
GL_PREFIX(ProgramUniform2iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8936(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8936(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8936(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8936(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform2iv), .-GL_PREFIX(ProgramUniform2iv)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform2ui)
	.type	GL_PREFIX(ProgramUniform2ui), @function
GL_PREFIX(ProgramUniform2ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8944(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8944(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8944(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8944(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform2ui), .-GL_PREFIX(ProgramUniform2ui)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform2uiv)
	.type	GL_PREFIX(ProgramUniform2uiv), @function
GL_PREFIX(ProgramUniform2uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8952(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8952(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8952(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8952(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform2uiv), .-GL_PREFIX(ProgramUniform2uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1120)
	.type	GL_PREFIX(_dispatch_stub_1120), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1120))
GL_PREFIX(_dispatch_stub_1120):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8960(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	8960(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8960(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	8960(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1120), .-GL_PREFIX(_dispatch_stub_1120)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1121)
	.type	GL_PREFIX(_dispatch_stub_1121), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1121))
GL_PREFIX(_dispatch_stub_1121):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8968(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8968(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8968(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8968(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1121), .-GL_PREFIX(_dispatch_stub_1121)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform3f)
	.type	GL_PREFIX(ProgramUniform3f), @function
GL_PREFIX(ProgramUniform3f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8976(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	8976(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8976(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	8976(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform3f), .-GL_PREFIX(ProgramUniform3f)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform3fv)
	.type	GL_PREFIX(ProgramUniform3fv), @function
GL_PREFIX(ProgramUniform3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8984(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8984(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8984(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8984(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform3fv), .-GL_PREFIX(ProgramUniform3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform3i)
	.type	GL_PREFIX(ProgramUniform3i), @function
GL_PREFIX(ProgramUniform3i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	8992(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8992(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	8992(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	8992(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform3i), .-GL_PREFIX(ProgramUniform3i)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform3iv)
	.type	GL_PREFIX(ProgramUniform3iv), @function
GL_PREFIX(ProgramUniform3iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9000(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9000(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9000(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9000(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform3iv), .-GL_PREFIX(ProgramUniform3iv)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform3ui)
	.type	GL_PREFIX(ProgramUniform3ui), @function
GL_PREFIX(ProgramUniform3ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9008(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9008(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9008(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9008(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform3ui), .-GL_PREFIX(ProgramUniform3ui)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform3uiv)
	.type	GL_PREFIX(ProgramUniform3uiv), @function
GL_PREFIX(ProgramUniform3uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9016(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9016(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9016(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9016(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform3uiv), .-GL_PREFIX(ProgramUniform3uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1128)
	.type	GL_PREFIX(_dispatch_stub_1128), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1128))
GL_PREFIX(_dispatch_stub_1128):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9024(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	9024(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9024(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	9024(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1128), .-GL_PREFIX(_dispatch_stub_1128)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1129)
	.type	GL_PREFIX(_dispatch_stub_1129), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1129))
GL_PREFIX(_dispatch_stub_1129):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9032(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9032(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9032(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9032(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1129), .-GL_PREFIX(_dispatch_stub_1129)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform4f)
	.type	GL_PREFIX(ProgramUniform4f), @function
GL_PREFIX(ProgramUniform4f):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9040(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	9040(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9040(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%xmm0, 16(%rsp)
	movq	%xmm1, 24(%rsp)
	movq	%xmm2, 32(%rsp)
	movq	%xmm3, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm3
	movq	32(%rsp), %xmm2
	movq	24(%rsp), %xmm1
	movq	16(%rsp), %xmm0
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	9040(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform4f), .-GL_PREFIX(ProgramUniform4f)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform4fv)
	.type	GL_PREFIX(ProgramUniform4fv), @function
GL_PREFIX(ProgramUniform4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9048(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9048(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9048(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9048(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform4fv), .-GL_PREFIX(ProgramUniform4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform4i)
	.type	GL_PREFIX(ProgramUniform4i), @function
GL_PREFIX(ProgramUniform4i):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9056(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9056(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9056(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9056(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform4i), .-GL_PREFIX(ProgramUniform4i)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform4iv)
	.type	GL_PREFIX(ProgramUniform4iv), @function
GL_PREFIX(ProgramUniform4iv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9064(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9064(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9064(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9064(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform4iv), .-GL_PREFIX(ProgramUniform4iv)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform4ui)
	.type	GL_PREFIX(ProgramUniform4ui), @function
GL_PREFIX(ProgramUniform4ui):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9072(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9072(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9072(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9072(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform4ui), .-GL_PREFIX(ProgramUniform4ui)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniform4uiv)
	.type	GL_PREFIX(ProgramUniform4uiv), @function
GL_PREFIX(ProgramUniform4uiv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9080(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9080(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9080(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9080(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniform4uiv), .-GL_PREFIX(ProgramUniform4uiv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1136)
	.type	GL_PREFIX(_dispatch_stub_1136), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1136))
GL_PREFIX(_dispatch_stub_1136):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9088(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9088(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9088(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9088(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1136), .-GL_PREFIX(_dispatch_stub_1136)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniformMatrix2fv)
	.type	GL_PREFIX(ProgramUniformMatrix2fv), @function
GL_PREFIX(ProgramUniformMatrix2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9096(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9096(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9096(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9096(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniformMatrix2fv), .-GL_PREFIX(ProgramUniformMatrix2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1138)
	.type	GL_PREFIX(_dispatch_stub_1138), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1138))
GL_PREFIX(_dispatch_stub_1138):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9104(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1138), .-GL_PREFIX(_dispatch_stub_1138)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniformMatrix2x3fv)
	.type	GL_PREFIX(ProgramUniformMatrix2x3fv), @function
GL_PREFIX(ProgramUniformMatrix2x3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9112(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniformMatrix2x3fv), .-GL_PREFIX(ProgramUniformMatrix2x3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1140)
	.type	GL_PREFIX(_dispatch_stub_1140), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1140))
GL_PREFIX(_dispatch_stub_1140):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1140), .-GL_PREFIX(_dispatch_stub_1140)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniformMatrix2x4fv)
	.type	GL_PREFIX(ProgramUniformMatrix2x4fv), @function
GL_PREFIX(ProgramUniformMatrix2x4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9128(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniformMatrix2x4fv), .-GL_PREFIX(ProgramUniformMatrix2x4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1142)
	.type	GL_PREFIX(_dispatch_stub_1142), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1142))
GL_PREFIX(_dispatch_stub_1142):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9136(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1142), .-GL_PREFIX(_dispatch_stub_1142)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniformMatrix3fv)
	.type	GL_PREFIX(ProgramUniformMatrix3fv), @function
GL_PREFIX(ProgramUniformMatrix3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9144(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniformMatrix3fv), .-GL_PREFIX(ProgramUniformMatrix3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1144)
	.type	GL_PREFIX(_dispatch_stub_1144), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1144))
GL_PREFIX(_dispatch_stub_1144):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9152(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1144), .-GL_PREFIX(_dispatch_stub_1144)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniformMatrix3x2fv)
	.type	GL_PREFIX(ProgramUniformMatrix3x2fv), @function
GL_PREFIX(ProgramUniformMatrix3x2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9160(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniformMatrix3x2fv), .-GL_PREFIX(ProgramUniformMatrix3x2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1146)
	.type	GL_PREFIX(_dispatch_stub_1146), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1146))
GL_PREFIX(_dispatch_stub_1146):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1146), .-GL_PREFIX(_dispatch_stub_1146)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniformMatrix3x4fv)
	.type	GL_PREFIX(ProgramUniformMatrix3x4fv), @function
GL_PREFIX(ProgramUniformMatrix3x4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9176(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniformMatrix3x4fv), .-GL_PREFIX(ProgramUniformMatrix3x4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1148)
	.type	GL_PREFIX(_dispatch_stub_1148), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1148))
GL_PREFIX(_dispatch_stub_1148):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1148), .-GL_PREFIX(_dispatch_stub_1148)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniformMatrix4fv)
	.type	GL_PREFIX(ProgramUniformMatrix4fv), @function
GL_PREFIX(ProgramUniformMatrix4fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniformMatrix4fv), .-GL_PREFIX(ProgramUniformMatrix4fv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1150)
	.type	GL_PREFIX(_dispatch_stub_1150), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1150))
GL_PREFIX(_dispatch_stub_1150):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9200(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1150), .-GL_PREFIX(_dispatch_stub_1150)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniformMatrix4x2fv)
	.type	GL_PREFIX(ProgramUniformMatrix4x2fv), @function
GL_PREFIX(ProgramUniformMatrix4x2fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9208(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniformMatrix4x2fv), .-GL_PREFIX(ProgramUniformMatrix4x2fv)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1152)
	.type	GL_PREFIX(_dispatch_stub_1152), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1152))
GL_PREFIX(_dispatch_stub_1152):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9216(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1152), .-GL_PREFIX(_dispatch_stub_1152)

	.p2align	4,,15
	.globl	GL_PREFIX(ProgramUniformMatrix4x3fv)
	.type	GL_PREFIX(ProgramUniformMatrix4x3fv), @function
GL_PREFIX(ProgramUniformMatrix4x3fv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9224(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ProgramUniformMatrix4x3fv), .-GL_PREFIX(ProgramUniformMatrix4x3fv)

	.p2align	4,,15
	.globl	GL_PREFIX(UnlockArraysEXT)
	.type	GL_PREFIX(UnlockArraysEXT), @function
GL_PREFIX(UnlockArraysEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	9232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9232(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	9232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UnlockArraysEXT), .-GL_PREFIX(UnlockArraysEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(UseProgramStages)
	.type	GL_PREFIX(UseProgramStages), @function
GL_PREFIX(UseProgramStages):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(UseProgramStages), .-GL_PREFIX(UseProgramStages)

	.p2align	4,,15
	.globl	GL_PREFIX(ValidateProgramPipeline)
	.type	GL_PREFIX(ValidateProgramPipeline), @function
GL_PREFIX(ValidateProgramPipeline):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	9248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9248(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	9248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ValidateProgramPipeline), .-GL_PREFIX(ValidateProgramPipeline)

	.p2align	4,,15
	.globl	GL_PREFIX(DebugMessageCallback)
	.type	GL_PREFIX(DebugMessageCallback), @function
GL_PREFIX(DebugMessageCallback):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DebugMessageCallback), .-GL_PREFIX(DebugMessageCallback)

	.p2align	4,,15
	.globl	GL_PREFIX(DebugMessageControl)
	.type	GL_PREFIX(DebugMessageControl), @function
GL_PREFIX(DebugMessageControl):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DebugMessageControl), .-GL_PREFIX(DebugMessageControl)

	.p2align	4,,15
	.globl	GL_PREFIX(DebugMessageInsert)
	.type	GL_PREFIX(DebugMessageInsert), @function
GL_PREFIX(DebugMessageInsert):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9272(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DebugMessageInsert), .-GL_PREFIX(DebugMessageInsert)

	.p2align	4,,15
	.globl	GL_PREFIX(GetDebugMessageLog)
	.type	GL_PREFIX(GetDebugMessageLog), @function
GL_PREFIX(GetDebugMessageLog):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9280(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9280(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9280(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9280(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetDebugMessageLog), .-GL_PREFIX(GetDebugMessageLog)

	.p2align	4,,15
	.globl	GL_PREFIX(GetObjectLabel)
	.type	GL_PREFIX(GetObjectLabel), @function
GL_PREFIX(GetObjectLabel):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9288(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9288(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9288(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9288(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetObjectLabel), .-GL_PREFIX(GetObjectLabel)

	.p2align	4,,15
	.globl	GL_PREFIX(GetObjectPtrLabel)
	.type	GL_PREFIX(GetObjectPtrLabel), @function
GL_PREFIX(GetObjectPtrLabel):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9296(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9296(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9296(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9296(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetObjectPtrLabel), .-GL_PREFIX(GetObjectPtrLabel)

	.p2align	4,,15
	.globl	GL_PREFIX(ObjectLabel)
	.type	GL_PREFIX(ObjectLabel), @function
GL_PREFIX(ObjectLabel):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9304(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9304(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9304(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9304(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ObjectLabel), .-GL_PREFIX(ObjectLabel)

	.p2align	4,,15
	.globl	GL_PREFIX(ObjectPtrLabel)
	.type	GL_PREFIX(ObjectPtrLabel), @function
GL_PREFIX(ObjectPtrLabel):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9312(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9312(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9312(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9312(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ObjectPtrLabel), .-GL_PREFIX(ObjectPtrLabel)

	.p2align	4,,15
	.globl	GL_PREFIX(PopDebugGroup)
	.type	GL_PREFIX(PopDebugGroup), @function
GL_PREFIX(PopDebugGroup):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9320(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	9320(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9320(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	9320(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PopDebugGroup), .-GL_PREFIX(PopDebugGroup)

	.p2align	4,,15
	.globl	GL_PREFIX(PushDebugGroup)
	.type	GL_PREFIX(PushDebugGroup), @function
GL_PREFIX(PushDebugGroup):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9328(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9328(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9328(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9328(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PushDebugGroup), .-GL_PREFIX(PushDebugGroup)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3fEXT)
	.type	GL_PREFIX(SecondaryColor3fEXT), @function
GL_PREFIX(SecondaryColor3fEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9336(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	9336(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9336(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	9336(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3fEXT), .-GL_PREFIX(SecondaryColor3fEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(SecondaryColor3fvEXT)
	.type	GL_PREFIX(SecondaryColor3fvEXT), @function
GL_PREFIX(SecondaryColor3fvEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9344(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	9344(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9344(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	9344(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SecondaryColor3fvEXT), .-GL_PREFIX(SecondaryColor3fvEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiDrawElementsEXT)
	.type	GL_PREFIX(MultiDrawElementsEXT), @function
GL_PREFIX(MultiDrawElementsEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9352(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9352(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9352(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9352(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiDrawElementsEXT), .-GL_PREFIX(MultiDrawElementsEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(FogCoordfEXT)
	.type	GL_PREFIX(FogCoordfEXT), @function
GL_PREFIX(FogCoordfEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9360(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	9360(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9360(%rax), %r11
	jmp	*%r11
1:
	subq	$8, %rsp
	movq	%xmm0, (%rsp)
	call	_glapi_get_dispatch
	movq	(%rsp), %xmm0
	addq	$8, %rsp
	movq	9360(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FogCoordfEXT), .-GL_PREFIX(FogCoordfEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(FogCoordfvEXT)
	.type	GL_PREFIX(FogCoordfvEXT), @function
GL_PREFIX(FogCoordfvEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9368(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	9368(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9368(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	9368(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(FogCoordfvEXT), .-GL_PREFIX(FogCoordfvEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1172)
	.type	GL_PREFIX(_dispatch_stub_1172), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1172))
GL_PREFIX(_dispatch_stub_1172):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9376(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	9376(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9376(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	9376(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1172), .-GL_PREFIX(_dispatch_stub_1172)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1173)
	.type	GL_PREFIX(_dispatch_stub_1173), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1173))
GL_PREFIX(_dispatch_stub_1173):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9384(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	9384(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9384(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	9384(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1173), .-GL_PREFIX(_dispatch_stub_1173)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1174)
	.type	GL_PREFIX(_dispatch_stub_1174), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1174))
GL_PREFIX(_dispatch_stub_1174):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9392(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	9392(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9392(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	9392(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1174), .-GL_PREFIX(_dispatch_stub_1174)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1175)
	.type	GL_PREFIX(_dispatch_stub_1175), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1175))
GL_PREFIX(_dispatch_stub_1175):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9400(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	9400(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9400(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$40, %rsp
	movq	9400(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1175), .-GL_PREFIX(_dispatch_stub_1175)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1176)
	.type	GL_PREFIX(_dispatch_stub_1176), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1176))
GL_PREFIX(_dispatch_stub_1176):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9408(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	9408(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9408(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	9408(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1176), .-GL_PREFIX(_dispatch_stub_1176)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1177)
	.type	GL_PREFIX(_dispatch_stub_1177), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1177))
GL_PREFIX(_dispatch_stub_1177):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9416(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9416(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9416(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9416(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1177), .-GL_PREFIX(_dispatch_stub_1177)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1178)
	.type	GL_PREFIX(_dispatch_stub_1178), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1178))
GL_PREFIX(_dispatch_stub_1178):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9424(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	9424(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9424(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	9424(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1178), .-GL_PREFIX(_dispatch_stub_1178)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1179)
	.type	GL_PREFIX(_dispatch_stub_1179), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1179))
GL_PREFIX(_dispatch_stub_1179):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9432(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9432(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9432(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9432(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1179), .-GL_PREFIX(_dispatch_stub_1179)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1180)
	.type	GL_PREFIX(_dispatch_stub_1180), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1180))
GL_PREFIX(_dispatch_stub_1180):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9440(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	9440(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9440(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	9440(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1180), .-GL_PREFIX(_dispatch_stub_1180)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1181)
	.type	GL_PREFIX(_dispatch_stub_1181), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1181))
GL_PREFIX(_dispatch_stub_1181):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9448(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9448(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9448(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9448(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1181), .-GL_PREFIX(_dispatch_stub_1181)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1182)
	.type	GL_PREFIX(_dispatch_stub_1182), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1182))
GL_PREFIX(_dispatch_stub_1182):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9456(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9456(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9456(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9456(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1182), .-GL_PREFIX(_dispatch_stub_1182)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1183)
	.type	GL_PREFIX(_dispatch_stub_1183), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1183))
GL_PREFIX(_dispatch_stub_1183):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9464(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9464(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9464(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9464(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1183), .-GL_PREFIX(_dispatch_stub_1183)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1184)
	.type	GL_PREFIX(_dispatch_stub_1184), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1184))
GL_PREFIX(_dispatch_stub_1184):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9472(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9472(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9472(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9472(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1184), .-GL_PREFIX(_dispatch_stub_1184)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1185)
	.type	GL_PREFIX(_dispatch_stub_1185), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1185))
GL_PREFIX(_dispatch_stub_1185):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9480(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9480(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9480(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9480(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1185), .-GL_PREFIX(_dispatch_stub_1185)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1186)
	.type	GL_PREFIX(_dispatch_stub_1186), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1186))
GL_PREFIX(_dispatch_stub_1186):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9488(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9488(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9488(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9488(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1186), .-GL_PREFIX(_dispatch_stub_1186)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1187)
	.type	GL_PREFIX(_dispatch_stub_1187), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1187))
GL_PREFIX(_dispatch_stub_1187):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9496(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9496(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9496(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9496(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1187), .-GL_PREFIX(_dispatch_stub_1187)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1188)
	.type	GL_PREFIX(_dispatch_stub_1188), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1188))
GL_PREFIX(_dispatch_stub_1188):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9504(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9504(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9504(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9504(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1188), .-GL_PREFIX(_dispatch_stub_1188)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1189)
	.type	GL_PREFIX(_dispatch_stub_1189), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1189))
GL_PREFIX(_dispatch_stub_1189):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9512(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9512(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9512(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9512(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1189), .-GL_PREFIX(_dispatch_stub_1189)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1190)
	.type	GL_PREFIX(_dispatch_stub_1190), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1190))
GL_PREFIX(_dispatch_stub_1190):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9520(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9520(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9520(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9520(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1190), .-GL_PREFIX(_dispatch_stub_1190)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1191)
	.type	GL_PREFIX(_dispatch_stub_1191), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1191))
GL_PREFIX(_dispatch_stub_1191):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9528(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9528(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9528(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9528(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1191), .-GL_PREFIX(_dispatch_stub_1191)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1192)
	.type	GL_PREFIX(_dispatch_stub_1192), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1192))
GL_PREFIX(_dispatch_stub_1192):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9536(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9536(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9536(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9536(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1192), .-GL_PREFIX(_dispatch_stub_1192)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1193)
	.type	GL_PREFIX(_dispatch_stub_1193), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1193))
GL_PREFIX(_dispatch_stub_1193):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9544(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9544(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9544(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9544(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1193), .-GL_PREFIX(_dispatch_stub_1193)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1194)
	.type	GL_PREFIX(_dispatch_stub_1194), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1194))
GL_PREFIX(_dispatch_stub_1194):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9552(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9552(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9552(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9552(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1194), .-GL_PREFIX(_dispatch_stub_1194)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1195)
	.type	GL_PREFIX(_dispatch_stub_1195), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1195))
GL_PREFIX(_dispatch_stub_1195):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9560(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9560(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9560(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9560(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1195), .-GL_PREFIX(_dispatch_stub_1195)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1196)
	.type	GL_PREFIX(_dispatch_stub_1196), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1196))
GL_PREFIX(_dispatch_stub_1196):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9568(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9568(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9568(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9568(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1196), .-GL_PREFIX(_dispatch_stub_1196)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1197)
	.type	GL_PREFIX(_dispatch_stub_1197), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1197))
GL_PREFIX(_dispatch_stub_1197):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9576(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9576(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9576(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9576(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1197), .-GL_PREFIX(_dispatch_stub_1197)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1198)
	.type	GL_PREFIX(_dispatch_stub_1198), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1198))
GL_PREFIX(_dispatch_stub_1198):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9584(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	9584(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9584(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	9584(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1198), .-GL_PREFIX(_dispatch_stub_1198)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1199)
	.type	GL_PREFIX(_dispatch_stub_1199), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1199))
GL_PREFIX(_dispatch_stub_1199):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9592(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9592(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9592(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9592(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1199), .-GL_PREFIX(_dispatch_stub_1199)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1200)
	.type	GL_PREFIX(_dispatch_stub_1200), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1200))
GL_PREFIX(_dispatch_stub_1200):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9600(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	9600(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9600(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	call	_glapi_get_dispatch
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	9600(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1200), .-GL_PREFIX(_dispatch_stub_1200)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1201)
	.type	GL_PREFIX(_dispatch_stub_1201), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1201))
GL_PREFIX(_dispatch_stub_1201):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9608(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9608(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9608(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9608(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1201), .-GL_PREFIX(_dispatch_stub_1201)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1202)
	.type	GL_PREFIX(_dispatch_stub_1202), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1202))
GL_PREFIX(_dispatch_stub_1202):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9616(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9616(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9616(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9616(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1202), .-GL_PREFIX(_dispatch_stub_1202)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1203)
	.type	GL_PREFIX(_dispatch_stub_1203), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1203))
GL_PREFIX(_dispatch_stub_1203):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9624(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9624(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9624(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9624(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1203), .-GL_PREFIX(_dispatch_stub_1203)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1204)
	.type	GL_PREFIX(_dispatch_stub_1204), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1204))
GL_PREFIX(_dispatch_stub_1204):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9632(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	9632(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9632(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	9632(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1204), .-GL_PREFIX(_dispatch_stub_1204)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1205)
	.type	GL_PREFIX(_dispatch_stub_1205), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1205))
GL_PREFIX(_dispatch_stub_1205):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9640(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9640(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9640(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9640(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1205), .-GL_PREFIX(_dispatch_stub_1205)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1206)
	.type	GL_PREFIX(_dispatch_stub_1206), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1206))
GL_PREFIX(_dispatch_stub_1206):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9648(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	9648(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9648(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	9648(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1206), .-GL_PREFIX(_dispatch_stub_1206)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1207)
	.type	GL_PREFIX(_dispatch_stub_1207), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1207))
GL_PREFIX(_dispatch_stub_1207):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9656(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9656(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9656(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9656(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1207), .-GL_PREFIX(_dispatch_stub_1207)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1208)
	.type	GL_PREFIX(_dispatch_stub_1208), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1208))
GL_PREFIX(_dispatch_stub_1208):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9664(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9664(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9664(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9664(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1208), .-GL_PREFIX(_dispatch_stub_1208)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1209)
	.type	GL_PREFIX(_dispatch_stub_1209), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1209))
GL_PREFIX(_dispatch_stub_1209):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9672(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9672(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9672(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9672(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1209), .-GL_PREFIX(_dispatch_stub_1209)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1210)
	.type	GL_PREFIX(_dispatch_stub_1210), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1210))
GL_PREFIX(_dispatch_stub_1210):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9680(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	9680(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9680(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	9680(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1210), .-GL_PREFIX(_dispatch_stub_1210)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1211)
	.type	GL_PREFIX(_dispatch_stub_1211), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1211))
GL_PREFIX(_dispatch_stub_1211):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9688(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9688(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9688(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9688(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1211), .-GL_PREFIX(_dispatch_stub_1211)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1212)
	.type	GL_PREFIX(_dispatch_stub_1212), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1212))
GL_PREFIX(_dispatch_stub_1212):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9696(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	9696(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9696(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	call	_glapi_get_dispatch
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	9696(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1212), .-GL_PREFIX(_dispatch_stub_1212)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1213)
	.type	GL_PREFIX(_dispatch_stub_1213), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1213))
GL_PREFIX(_dispatch_stub_1213):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9704(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9704(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9704(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9704(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1213), .-GL_PREFIX(_dispatch_stub_1213)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1214)
	.type	GL_PREFIX(_dispatch_stub_1214), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1214))
GL_PREFIX(_dispatch_stub_1214):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9712(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9712(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9712(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9712(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1214), .-GL_PREFIX(_dispatch_stub_1214)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1215)
	.type	GL_PREFIX(_dispatch_stub_1215), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1215))
GL_PREFIX(_dispatch_stub_1215):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9720(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9720(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9720(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9720(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1215), .-GL_PREFIX(_dispatch_stub_1215)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1216)
	.type	GL_PREFIX(_dispatch_stub_1216), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1216))
GL_PREFIX(_dispatch_stub_1216):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9728(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	9728(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9728(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	9728(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1216), .-GL_PREFIX(_dispatch_stub_1216)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1217)
	.type	GL_PREFIX(_dispatch_stub_1217), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1217))
GL_PREFIX(_dispatch_stub_1217):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9736(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9736(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9736(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9736(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1217), .-GL_PREFIX(_dispatch_stub_1217)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1218)
	.type	GL_PREFIX(_dispatch_stub_1218), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1218))
GL_PREFIX(_dispatch_stub_1218):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9744(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	9744(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9744(%rax), %r11
	jmp	*%r11
1:
	subq	$40, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	movq	%xmm2, 24(%rsp)
	movq	%xmm3, 32(%rsp)
	call	_glapi_get_dispatch
	movq	32(%rsp), %xmm3
	movq	24(%rsp), %xmm2
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$40, %rsp
	movq	9744(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1218), .-GL_PREFIX(_dispatch_stub_1218)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1219)
	.type	GL_PREFIX(_dispatch_stub_1219), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1219))
GL_PREFIX(_dispatch_stub_1219):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9752(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9752(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9752(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9752(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1219), .-GL_PREFIX(_dispatch_stub_1219)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1220)
	.type	GL_PREFIX(_dispatch_stub_1220), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1220))
GL_PREFIX(_dispatch_stub_1220):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9760(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9760(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9760(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9760(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1220), .-GL_PREFIX(_dispatch_stub_1220)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1221)
	.type	GL_PREFIX(_dispatch_stub_1221), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1221))
GL_PREFIX(_dispatch_stub_1221):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9768(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9768(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9768(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9768(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1221), .-GL_PREFIX(_dispatch_stub_1221)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1222)
	.type	GL_PREFIX(_dispatch_stub_1222), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1222))
GL_PREFIX(_dispatch_stub_1222):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9776(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9776(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9776(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9776(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1222), .-GL_PREFIX(_dispatch_stub_1222)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1223)
	.type	GL_PREFIX(_dispatch_stub_1223), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1223))
GL_PREFIX(_dispatch_stub_1223):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9784(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9784(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9784(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9784(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1223), .-GL_PREFIX(_dispatch_stub_1223)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1224)
	.type	GL_PREFIX(_dispatch_stub_1224), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1224))
GL_PREFIX(_dispatch_stub_1224):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9792(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9792(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9792(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9792(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1224), .-GL_PREFIX(_dispatch_stub_1224)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1225)
	.type	GL_PREFIX(_dispatch_stub_1225), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1225))
GL_PREFIX(_dispatch_stub_1225):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9800(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9800(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9800(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9800(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1225), .-GL_PREFIX(_dispatch_stub_1225)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1226)
	.type	GL_PREFIX(_dispatch_stub_1226), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1226))
GL_PREFIX(_dispatch_stub_1226):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9808(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9808(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9808(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9808(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1226), .-GL_PREFIX(_dispatch_stub_1226)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1227)
	.type	GL_PREFIX(_dispatch_stub_1227), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1227))
GL_PREFIX(_dispatch_stub_1227):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9816(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9816(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9816(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9816(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1227), .-GL_PREFIX(_dispatch_stub_1227)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1228)
	.type	GL_PREFIX(_dispatch_stub_1228), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1228))
GL_PREFIX(_dispatch_stub_1228):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9824(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9824(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9824(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9824(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1228), .-GL_PREFIX(_dispatch_stub_1228)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1229)
	.type	GL_PREFIX(_dispatch_stub_1229), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1229))
GL_PREFIX(_dispatch_stub_1229):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9832(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9832(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9832(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9832(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1229), .-GL_PREFIX(_dispatch_stub_1229)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1230)
	.type	GL_PREFIX(_dispatch_stub_1230), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1230))
GL_PREFIX(_dispatch_stub_1230):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9840(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9840(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9840(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9840(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1230), .-GL_PREFIX(_dispatch_stub_1230)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1231)
	.type	GL_PREFIX(_dispatch_stub_1231), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1231))
GL_PREFIX(_dispatch_stub_1231):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9848(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9848(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9848(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9848(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1231), .-GL_PREFIX(_dispatch_stub_1231)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1232)
	.type	GL_PREFIX(_dispatch_stub_1232), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1232))
GL_PREFIX(_dispatch_stub_1232):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9856(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9856(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9856(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9856(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1232), .-GL_PREFIX(_dispatch_stub_1232)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1233)
	.type	GL_PREFIX(_dispatch_stub_1233), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1233))
GL_PREFIX(_dispatch_stub_1233):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9864(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9864(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9864(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9864(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1233), .-GL_PREFIX(_dispatch_stub_1233)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1234)
	.type	GL_PREFIX(_dispatch_stub_1234), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1234))
GL_PREFIX(_dispatch_stub_1234):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9872(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9872(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9872(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9872(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1234), .-GL_PREFIX(_dispatch_stub_1234)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1235)
	.type	GL_PREFIX(_dispatch_stub_1235), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1235))
GL_PREFIX(_dispatch_stub_1235):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9880(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9880(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9880(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9880(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1235), .-GL_PREFIX(_dispatch_stub_1235)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1236)
	.type	GL_PREFIX(_dispatch_stub_1236), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1236))
GL_PREFIX(_dispatch_stub_1236):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9888(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9888(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9888(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9888(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1236), .-GL_PREFIX(_dispatch_stub_1236)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1237)
	.type	GL_PREFIX(_dispatch_stub_1237), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1237))
GL_PREFIX(_dispatch_stub_1237):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9896(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9896(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9896(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9896(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1237), .-GL_PREFIX(_dispatch_stub_1237)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1238)
	.type	GL_PREFIX(_dispatch_stub_1238), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1238))
GL_PREFIX(_dispatch_stub_1238):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9904(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9904(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9904(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9904(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1238), .-GL_PREFIX(_dispatch_stub_1238)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1239)
	.type	GL_PREFIX(_dispatch_stub_1239), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1239))
GL_PREFIX(_dispatch_stub_1239):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9912(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9912(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9912(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9912(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1239), .-GL_PREFIX(_dispatch_stub_1239)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1240)
	.type	GL_PREFIX(_dispatch_stub_1240), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1240))
GL_PREFIX(_dispatch_stub_1240):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9920(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9920(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9920(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9920(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1240), .-GL_PREFIX(_dispatch_stub_1240)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1241)
	.type	GL_PREFIX(_dispatch_stub_1241), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1241))
GL_PREFIX(_dispatch_stub_1241):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9928(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9928(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9928(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	9928(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1241), .-GL_PREFIX(_dispatch_stub_1241)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1242)
	.type	GL_PREFIX(_dispatch_stub_1242), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1242))
GL_PREFIX(_dispatch_stub_1242):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9936(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9936(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9936(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9936(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1242), .-GL_PREFIX(_dispatch_stub_1242)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1243)
	.type	GL_PREFIX(_dispatch_stub_1243), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1243))
GL_PREFIX(_dispatch_stub_1243):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9944(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9944(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9944(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9944(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1243), .-GL_PREFIX(_dispatch_stub_1243)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1244)
	.type	GL_PREFIX(_dispatch_stub_1244), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1244))
GL_PREFIX(_dispatch_stub_1244):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9952(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9952(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9952(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9952(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1244), .-GL_PREFIX(_dispatch_stub_1244)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1245)
	.type	GL_PREFIX(_dispatch_stub_1245), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1245))
GL_PREFIX(_dispatch_stub_1245):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9960(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	9960(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9960(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	9960(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1245), .-GL_PREFIX(_dispatch_stub_1245)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1246)
	.type	GL_PREFIX(_dispatch_stub_1246), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1246))
GL_PREFIX(_dispatch_stub_1246):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9968(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	9968(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9968(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	9968(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1246), .-GL_PREFIX(_dispatch_stub_1246)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1247)
	.type	GL_PREFIX(_dispatch_stub_1247), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1247))
GL_PREFIX(_dispatch_stub_1247):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9976(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9976(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9976(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9976(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1247), .-GL_PREFIX(_dispatch_stub_1247)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1248)
	.type	GL_PREFIX(_dispatch_stub_1248), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1248))
GL_PREFIX(_dispatch_stub_1248):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9984(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9984(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9984(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9984(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1248), .-GL_PREFIX(_dispatch_stub_1248)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1249)
	.type	GL_PREFIX(_dispatch_stub_1249), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1249))
GL_PREFIX(_dispatch_stub_1249):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	9992(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9992(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	9992(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	9992(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1249), .-GL_PREFIX(_dispatch_stub_1249)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1250)
	.type	GL_PREFIX(_dispatch_stub_1250), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1250))
GL_PREFIX(_dispatch_stub_1250):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10000(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10000(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10000(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10000(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1250), .-GL_PREFIX(_dispatch_stub_1250)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1251)
	.type	GL_PREFIX(_dispatch_stub_1251), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1251))
GL_PREFIX(_dispatch_stub_1251):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10008(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	10008(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10008(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	10008(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1251), .-GL_PREFIX(_dispatch_stub_1251)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1252)
	.type	GL_PREFIX(_dispatch_stub_1252), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1252))
GL_PREFIX(_dispatch_stub_1252):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10016(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10016(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10016(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10016(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1252), .-GL_PREFIX(_dispatch_stub_1252)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1253)
	.type	GL_PREFIX(_dispatch_stub_1253), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1253))
GL_PREFIX(_dispatch_stub_1253):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10024(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10024(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10024(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10024(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1253), .-GL_PREFIX(_dispatch_stub_1253)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1254)
	.type	GL_PREFIX(_dispatch_stub_1254), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1254))
GL_PREFIX(_dispatch_stub_1254):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10032(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10032(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10032(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10032(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1254), .-GL_PREFIX(_dispatch_stub_1254)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1255)
	.type	GL_PREFIX(_dispatch_stub_1255), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1255))
GL_PREFIX(_dispatch_stub_1255):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10040(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10040(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10040(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10040(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1255), .-GL_PREFIX(_dispatch_stub_1255)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1256)
	.type	GL_PREFIX(_dispatch_stub_1256), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1256))
GL_PREFIX(_dispatch_stub_1256):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10048(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10048(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10048(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10048(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1256), .-GL_PREFIX(_dispatch_stub_1256)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1257)
	.type	GL_PREFIX(_dispatch_stub_1257), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1257))
GL_PREFIX(_dispatch_stub_1257):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10056(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	10056(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10056(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%rdi, (%rsp)
	movq	%xmm0, 8(%rsp)
	movq	%xmm1, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm1
	movq	8(%rsp), %xmm0
	movq	(%rsp), %rdi
	addq	$24, %rsp
	movq	10056(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1257), .-GL_PREFIX(_dispatch_stub_1257)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1258)
	.type	GL_PREFIX(_dispatch_stub_1258), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1258))
GL_PREFIX(_dispatch_stub_1258):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10064(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10064(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10064(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10064(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1258), .-GL_PREFIX(_dispatch_stub_1258)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1259)
	.type	GL_PREFIX(_dispatch_stub_1259), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1259))
GL_PREFIX(_dispatch_stub_1259):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10072(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10072(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10072(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10072(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1259), .-GL_PREFIX(_dispatch_stub_1259)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1260)
	.type	GL_PREFIX(_dispatch_stub_1260), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1260))
GL_PREFIX(_dispatch_stub_1260):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10080(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10080(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10080(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10080(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1260), .-GL_PREFIX(_dispatch_stub_1260)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1261)
	.type	GL_PREFIX(_dispatch_stub_1261), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1261))
GL_PREFIX(_dispatch_stub_1261):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10088(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
	movq	%xmm0, 24(%rsp)
	movq	%xmm1, 32(%rsp)
	movq	%xmm2, 40(%rsp)
	movq	%xmm3, 48(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	48(%rsp), %xmm3
	movq	40(%rsp), %xmm2
	movq	32(%rsp), %xmm1
	movq	24(%rsp), %xmm0
	movq	16(%rsp), %rdx
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	10088(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10088(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
	movq	%xmm0, 24(%rsp)
	movq	%xmm1, 32(%rsp)
	movq	%xmm2, 40(%rsp)
	movq	%xmm3, 48(%rsp)
	call	_glapi_get_dispatch
	movq	48(%rsp), %xmm3
	movq	40(%rsp), %xmm2
	movq	32(%rsp), %xmm1
	movq	24(%rsp), %xmm0
	movq	16(%rsp), %rdx
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	10088(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1261), .-GL_PREFIX(_dispatch_stub_1261)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1262)
	.type	GL_PREFIX(_dispatch_stub_1262), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1262))
GL_PREFIX(_dispatch_stub_1262):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10096(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10096(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10096(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10096(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1262), .-GL_PREFIX(_dispatch_stub_1262)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1263)
	.type	GL_PREFIX(_dispatch_stub_1263), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1263))
GL_PREFIX(_dispatch_stub_1263):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
	movq	%xmm0, 24(%rsp)
	movq	%xmm1, 32(%rsp)
	movq	%xmm2, 40(%rsp)
	movq	%xmm3, 48(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	48(%rsp), %xmm3
	movq	40(%rsp), %xmm2
	movq	32(%rsp), %xmm1
	movq	24(%rsp), %xmm0
	movq	16(%rsp), %rdx
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	10104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10104(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%rdi, (%rsp)
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
	movq	%xmm0, 24(%rsp)
	movq	%xmm1, 32(%rsp)
	movq	%xmm2, 40(%rsp)
	movq	%xmm3, 48(%rsp)
	call	_glapi_get_dispatch
	movq	48(%rsp), %xmm3
	movq	40(%rsp), %xmm2
	movq	32(%rsp), %xmm1
	movq	24(%rsp), %xmm0
	movq	16(%rsp), %rdx
	movq	8(%rsp), %rsi
	movq	(%rsp), %rdi
	addq	$56, %rsp
	movq	10104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1263), .-GL_PREFIX(_dispatch_stub_1263)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1264)
	.type	GL_PREFIX(_dispatch_stub_1264), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1264))
GL_PREFIX(_dispatch_stub_1264):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10112(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1264), .-GL_PREFIX(_dispatch_stub_1264)

	.p2align	4,,15
	.globl	GL_PREFIX(PrimitiveRestartNV)
	.type	GL_PREFIX(PrimitiveRestartNV), @function
GL_PREFIX(PrimitiveRestartNV):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	10120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	10120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PrimitiveRestartNV), .-GL_PREFIX(PrimitiveRestartNV)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1266)
	.type	GL_PREFIX(_dispatch_stub_1266), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1266))
GL_PREFIX(_dispatch_stub_1266):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10128(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1266), .-GL_PREFIX(_dispatch_stub_1266)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1267)
	.type	GL_PREFIX(_dispatch_stub_1267), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1267))
GL_PREFIX(_dispatch_stub_1267):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10136(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1267), .-GL_PREFIX(_dispatch_stub_1267)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1268)
	.type	GL_PREFIX(_dispatch_stub_1268), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1268))
GL_PREFIX(_dispatch_stub_1268):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10144(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1268), .-GL_PREFIX(_dispatch_stub_1268)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1269)
	.type	GL_PREFIX(_dispatch_stub_1269), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1269))
GL_PREFIX(_dispatch_stub_1269):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10152(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1269), .-GL_PREFIX(_dispatch_stub_1269)

	.p2align	4,,15
	.globl	GL_PREFIX(BindFramebufferEXT)
	.type	GL_PREFIX(BindFramebufferEXT), @function
GL_PREFIX(BindFramebufferEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10160(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindFramebufferEXT), .-GL_PREFIX(BindFramebufferEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(BindRenderbufferEXT)
	.type	GL_PREFIX(BindRenderbufferEXT), @function
GL_PREFIX(BindRenderbufferEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BindRenderbufferEXT), .-GL_PREFIX(BindRenderbufferEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1272)
	.type	GL_PREFIX(_dispatch_stub_1272), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1272))
GL_PREFIX(_dispatch_stub_1272):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10176(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1272), .-GL_PREFIX(_dispatch_stub_1272)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1273)
	.type	GL_PREFIX(_dispatch_stub_1273), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1273))
GL_PREFIX(_dispatch_stub_1273):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1273), .-GL_PREFIX(_dispatch_stub_1273)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1274)
	.type	GL_PREFIX(_dispatch_stub_1274), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1274))
GL_PREFIX(_dispatch_stub_1274):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1274), .-GL_PREFIX(_dispatch_stub_1274)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI1iEXT)
	.type	GL_PREFIX(VertexAttribI1iEXT), @function
GL_PREFIX(VertexAttribI1iEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10200(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI1iEXT), .-GL_PREFIX(VertexAttribI1iEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI1uiEXT)
	.type	GL_PREFIX(VertexAttribI1uiEXT), @function
GL_PREFIX(VertexAttribI1uiEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10208(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI1uiEXT), .-GL_PREFIX(VertexAttribI1uiEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI2iEXT)
	.type	GL_PREFIX(VertexAttribI2iEXT), @function
GL_PREFIX(VertexAttribI2iEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10216(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI2iEXT), .-GL_PREFIX(VertexAttribI2iEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI2ivEXT)
	.type	GL_PREFIX(VertexAttribI2ivEXT), @function
GL_PREFIX(VertexAttribI2ivEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10224(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI2ivEXT), .-GL_PREFIX(VertexAttribI2ivEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI2uiEXT)
	.type	GL_PREFIX(VertexAttribI2uiEXT), @function
GL_PREFIX(VertexAttribI2uiEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10232(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI2uiEXT), .-GL_PREFIX(VertexAttribI2uiEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI2uivEXT)
	.type	GL_PREFIX(VertexAttribI2uivEXT), @function
GL_PREFIX(VertexAttribI2uivEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI2uivEXT), .-GL_PREFIX(VertexAttribI2uivEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI3iEXT)
	.type	GL_PREFIX(VertexAttribI3iEXT), @function
GL_PREFIX(VertexAttribI3iEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10248(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI3iEXT), .-GL_PREFIX(VertexAttribI3iEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI3ivEXT)
	.type	GL_PREFIX(VertexAttribI3ivEXT), @function
GL_PREFIX(VertexAttribI3ivEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI3ivEXT), .-GL_PREFIX(VertexAttribI3ivEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI3uiEXT)
	.type	GL_PREFIX(VertexAttribI3uiEXT), @function
GL_PREFIX(VertexAttribI3uiEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI3uiEXT), .-GL_PREFIX(VertexAttribI3uiEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI3uivEXT)
	.type	GL_PREFIX(VertexAttribI3uivEXT), @function
GL_PREFIX(VertexAttribI3uivEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10272(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI3uivEXT), .-GL_PREFIX(VertexAttribI3uivEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI4iEXT)
	.type	GL_PREFIX(VertexAttribI4iEXT), @function
GL_PREFIX(VertexAttribI4iEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10280(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10280(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10280(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10280(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI4iEXT), .-GL_PREFIX(VertexAttribI4iEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI4ivEXT)
	.type	GL_PREFIX(VertexAttribI4ivEXT), @function
GL_PREFIX(VertexAttribI4ivEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10288(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10288(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10288(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10288(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI4ivEXT), .-GL_PREFIX(VertexAttribI4ivEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI4uiEXT)
	.type	GL_PREFIX(VertexAttribI4uiEXT), @function
GL_PREFIX(VertexAttribI4uiEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10296(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10296(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10296(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10296(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI4uiEXT), .-GL_PREFIX(VertexAttribI4uiEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(VertexAttribI4uivEXT)
	.type	GL_PREFIX(VertexAttribI4uivEXT), @function
GL_PREFIX(VertexAttribI4uivEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10304(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10304(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10304(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10304(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(VertexAttribI4uivEXT), .-GL_PREFIX(VertexAttribI4uivEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearColorIiEXT)
	.type	GL_PREFIX(ClearColorIiEXT), @function
GL_PREFIX(ClearColorIiEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10312(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10312(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10312(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10312(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearColorIiEXT), .-GL_PREFIX(ClearColorIiEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearColorIuiEXT)
	.type	GL_PREFIX(ClearColorIuiEXT), @function
GL_PREFIX(ClearColorIuiEXT):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10320(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10320(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10320(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10320(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearColorIuiEXT), .-GL_PREFIX(ClearColorIuiEXT)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1291)
	.type	GL_PREFIX(_dispatch_stub_1291), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1291))
GL_PREFIX(_dispatch_stub_1291):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10328(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10328(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10328(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10328(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1291), .-GL_PREFIX(_dispatch_stub_1291)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1292)
	.type	GL_PREFIX(_dispatch_stub_1292), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1292))
GL_PREFIX(_dispatch_stub_1292):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10336(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10336(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10336(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10336(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1292), .-GL_PREFIX(_dispatch_stub_1292)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1293)
	.type	GL_PREFIX(_dispatch_stub_1293), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1293))
GL_PREFIX(_dispatch_stub_1293):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10344(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10344(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10344(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10344(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1293), .-GL_PREFIX(_dispatch_stub_1293)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1294)
	.type	GL_PREFIX(_dispatch_stub_1294), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1294))
GL_PREFIX(_dispatch_stub_1294):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10352(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10352(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10352(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10352(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1294), .-GL_PREFIX(_dispatch_stub_1294)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1295)
	.type	GL_PREFIX(_dispatch_stub_1295), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1295))
GL_PREFIX(_dispatch_stub_1295):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10360(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10360(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10360(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10360(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1295), .-GL_PREFIX(_dispatch_stub_1295)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1296)
	.type	GL_PREFIX(_dispatch_stub_1296), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1296))
GL_PREFIX(_dispatch_stub_1296):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10368(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10368(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10368(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10368(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1296), .-GL_PREFIX(_dispatch_stub_1296)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1297)
	.type	GL_PREFIX(_dispatch_stub_1297), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1297))
GL_PREFIX(_dispatch_stub_1297):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10376(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10376(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10376(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10376(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1297), .-GL_PREFIX(_dispatch_stub_1297)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1298)
	.type	GL_PREFIX(_dispatch_stub_1298), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1298))
GL_PREFIX(_dispatch_stub_1298):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10384(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10384(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10384(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10384(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1298), .-GL_PREFIX(_dispatch_stub_1298)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1299)
	.type	GL_PREFIX(_dispatch_stub_1299), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1299))
GL_PREFIX(_dispatch_stub_1299):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10392(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10392(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10392(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10392(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1299), .-GL_PREFIX(_dispatch_stub_1299)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1300)
	.type	GL_PREFIX(_dispatch_stub_1300), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1300))
GL_PREFIX(_dispatch_stub_1300):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10400(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10400(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10400(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10400(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1300), .-GL_PREFIX(_dispatch_stub_1300)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1301)
	.type	GL_PREFIX(_dispatch_stub_1301), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1301))
GL_PREFIX(_dispatch_stub_1301):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10408(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10408(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10408(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10408(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1301), .-GL_PREFIX(_dispatch_stub_1301)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1302)
	.type	GL_PREFIX(_dispatch_stub_1302), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1302))
GL_PREFIX(_dispatch_stub_1302):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10416(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10416(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10416(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10416(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1302), .-GL_PREFIX(_dispatch_stub_1302)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1303)
	.type	GL_PREFIX(_dispatch_stub_1303), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1303))
GL_PREFIX(_dispatch_stub_1303):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10424(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10424(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10424(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10424(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1303), .-GL_PREFIX(_dispatch_stub_1303)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1304)
	.type	GL_PREFIX(_dispatch_stub_1304), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1304))
GL_PREFIX(_dispatch_stub_1304):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10432(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10432(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10432(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10432(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1304), .-GL_PREFIX(_dispatch_stub_1304)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1305)
	.type	GL_PREFIX(_dispatch_stub_1305), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1305))
GL_PREFIX(_dispatch_stub_1305):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10440(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10440(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10440(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10440(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1305), .-GL_PREFIX(_dispatch_stub_1305)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1306)
	.type	GL_PREFIX(_dispatch_stub_1306), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1306))
GL_PREFIX(_dispatch_stub_1306):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10448(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10448(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10448(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10448(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1306), .-GL_PREFIX(_dispatch_stub_1306)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1307)
	.type	GL_PREFIX(_dispatch_stub_1307), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1307))
GL_PREFIX(_dispatch_stub_1307):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10456(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10456(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10456(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10456(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1307), .-GL_PREFIX(_dispatch_stub_1307)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1308)
	.type	GL_PREFIX(_dispatch_stub_1308), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1308))
GL_PREFIX(_dispatch_stub_1308):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10464(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10464(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10464(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10464(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1308), .-GL_PREFIX(_dispatch_stub_1308)

	.p2align	4,,15
	.globl	GL_PREFIX(TextureBarrierNV)
	.type	GL_PREFIX(TextureBarrierNV), @function
GL_PREFIX(TextureBarrierNV):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10472(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	10472(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10472(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	10472(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TextureBarrierNV), .-GL_PREFIX(TextureBarrierNV)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1310)
	.type	GL_PREFIX(_dispatch_stub_1310), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1310))
GL_PREFIX(_dispatch_stub_1310):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10480(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	10480(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10480(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	10480(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1310), .-GL_PREFIX(_dispatch_stub_1310)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1311)
	.type	GL_PREFIX(_dispatch_stub_1311), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1311))
GL_PREFIX(_dispatch_stub_1311):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10488(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10488(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10488(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10488(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1311), .-GL_PREFIX(_dispatch_stub_1311)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1312)
	.type	GL_PREFIX(_dispatch_stub_1312), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1312))
GL_PREFIX(_dispatch_stub_1312):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10496(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10496(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10496(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10496(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1312), .-GL_PREFIX(_dispatch_stub_1312)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1313)
	.type	GL_PREFIX(_dispatch_stub_1313), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1313))
GL_PREFIX(_dispatch_stub_1313):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10504(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10504(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10504(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10504(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1313), .-GL_PREFIX(_dispatch_stub_1313)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1314)
	.type	GL_PREFIX(_dispatch_stub_1314), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1314))
GL_PREFIX(_dispatch_stub_1314):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10512(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10512(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10512(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10512(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1314), .-GL_PREFIX(_dispatch_stub_1314)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1315)
	.type	GL_PREFIX(_dispatch_stub_1315), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1315))
GL_PREFIX(_dispatch_stub_1315):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10520(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10520(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10520(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10520(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1315), .-GL_PREFIX(_dispatch_stub_1315)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1316)
	.type	GL_PREFIX(_dispatch_stub_1316), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1316))
GL_PREFIX(_dispatch_stub_1316):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10528(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10528(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10528(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10528(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1316), .-GL_PREFIX(_dispatch_stub_1316)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1317)
	.type	GL_PREFIX(_dispatch_stub_1317), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1317))
GL_PREFIX(_dispatch_stub_1317):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10536(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10536(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10536(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10536(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1317), .-GL_PREFIX(_dispatch_stub_1317)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1318)
	.type	GL_PREFIX(_dispatch_stub_1318), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1318))
GL_PREFIX(_dispatch_stub_1318):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10544(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10544(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10544(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10544(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1318), .-GL_PREFIX(_dispatch_stub_1318)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1319)
	.type	GL_PREFIX(_dispatch_stub_1319), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1319))
GL_PREFIX(_dispatch_stub_1319):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10552(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10552(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10552(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10552(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1319), .-GL_PREFIX(_dispatch_stub_1319)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1320)
	.type	GL_PREFIX(_dispatch_stub_1320), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1320))
GL_PREFIX(_dispatch_stub_1320):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10560(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10560(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10560(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10560(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1320), .-GL_PREFIX(_dispatch_stub_1320)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1321)
	.type	GL_PREFIX(_dispatch_stub_1321), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1321))
GL_PREFIX(_dispatch_stub_1321):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10568(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10568(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10568(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10568(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1321), .-GL_PREFIX(_dispatch_stub_1321)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1322)
	.type	GL_PREFIX(_dispatch_stub_1322), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1322))
GL_PREFIX(_dispatch_stub_1322):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10576(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10576(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10576(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10576(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1322), .-GL_PREFIX(_dispatch_stub_1322)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1323)
	.type	GL_PREFIX(_dispatch_stub_1323), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1323))
GL_PREFIX(_dispatch_stub_1323):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10584(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10584(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10584(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10584(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1323), .-GL_PREFIX(_dispatch_stub_1323)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1324)
	.type	GL_PREFIX(_dispatch_stub_1324), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1324))
GL_PREFIX(_dispatch_stub_1324):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10592(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10592(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10592(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10592(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1324), .-GL_PREFIX(_dispatch_stub_1324)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1325)
	.type	GL_PREFIX(_dispatch_stub_1325), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1325))
GL_PREFIX(_dispatch_stub_1325):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10600(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10600(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10600(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10600(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1325), .-GL_PREFIX(_dispatch_stub_1325)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1326)
	.type	GL_PREFIX(_dispatch_stub_1326), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1326))
GL_PREFIX(_dispatch_stub_1326):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10608(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10608(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10608(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10608(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1326), .-GL_PREFIX(_dispatch_stub_1326)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1327)
	.type	GL_PREFIX(_dispatch_stub_1327), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1327))
GL_PREFIX(_dispatch_stub_1327):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10616(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10616(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10616(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10616(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1327), .-GL_PREFIX(_dispatch_stub_1327)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1328)
	.type	GL_PREFIX(_dispatch_stub_1328), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1328))
GL_PREFIX(_dispatch_stub_1328):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10624(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10624(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10624(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10624(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1328), .-GL_PREFIX(_dispatch_stub_1328)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1329)
	.type	GL_PREFIX(_dispatch_stub_1329), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1329))
GL_PREFIX(_dispatch_stub_1329):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10632(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10632(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10632(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10632(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1329), .-GL_PREFIX(_dispatch_stub_1329)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1330)
	.type	GL_PREFIX(_dispatch_stub_1330), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1330))
GL_PREFIX(_dispatch_stub_1330):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10640(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	10640(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10640(%rax), %r11
	jmp	*%r11
1:
	subq	$24, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	call	_glapi_get_dispatch
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$24, %rsp
	movq	10640(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1330), .-GL_PREFIX(_dispatch_stub_1330)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1331)
	.type	GL_PREFIX(_dispatch_stub_1331), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1331))
GL_PREFIX(_dispatch_stub_1331):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10648(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10648(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10648(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10648(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1331), .-GL_PREFIX(_dispatch_stub_1331)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1332)
	.type	GL_PREFIX(_dispatch_stub_1332), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1332))
GL_PREFIX(_dispatch_stub_1332):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10656(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10656(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10656(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10656(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1332), .-GL_PREFIX(_dispatch_stub_1332)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1333)
	.type	GL_PREFIX(_dispatch_stub_1333), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1333))
GL_PREFIX(_dispatch_stub_1333):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10664(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10664(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10664(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10664(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1333), .-GL_PREFIX(_dispatch_stub_1333)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1334)
	.type	GL_PREFIX(_dispatch_stub_1334), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1334))
GL_PREFIX(_dispatch_stub_1334):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10672(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10672(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10672(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10672(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1334), .-GL_PREFIX(_dispatch_stub_1334)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1335)
	.type	GL_PREFIX(_dispatch_stub_1335), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1335))
GL_PREFIX(_dispatch_stub_1335):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10680(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10680(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10680(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10680(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1335), .-GL_PREFIX(_dispatch_stub_1335)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1336)
	.type	GL_PREFIX(_dispatch_stub_1336), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1336))
GL_PREFIX(_dispatch_stub_1336):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10688(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10688(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10688(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10688(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1336), .-GL_PREFIX(_dispatch_stub_1336)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1337)
	.type	GL_PREFIX(_dispatch_stub_1337), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1337))
GL_PREFIX(_dispatch_stub_1337):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10696(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10696(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10696(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10696(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1337), .-GL_PREFIX(_dispatch_stub_1337)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1338)
	.type	GL_PREFIX(_dispatch_stub_1338), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1338))
GL_PREFIX(_dispatch_stub_1338):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10704(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10704(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10704(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10704(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1338), .-GL_PREFIX(_dispatch_stub_1338)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1339)
	.type	GL_PREFIX(_dispatch_stub_1339), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1339))
GL_PREFIX(_dispatch_stub_1339):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10712(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10712(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10712(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10712(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1339), .-GL_PREFIX(_dispatch_stub_1339)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1340)
	.type	GL_PREFIX(_dispatch_stub_1340), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1340))
GL_PREFIX(_dispatch_stub_1340):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10720(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10720(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10720(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10720(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1340), .-GL_PREFIX(_dispatch_stub_1340)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1341)
	.type	GL_PREFIX(_dispatch_stub_1341), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1341))
GL_PREFIX(_dispatch_stub_1341):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10728(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10728(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10728(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10728(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1341), .-GL_PREFIX(_dispatch_stub_1341)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1342)
	.type	GL_PREFIX(_dispatch_stub_1342), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1342))
GL_PREFIX(_dispatch_stub_1342):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10736(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10736(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10736(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10736(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1342), .-GL_PREFIX(_dispatch_stub_1342)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1343)
	.type	GL_PREFIX(_dispatch_stub_1343), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1343))
GL_PREFIX(_dispatch_stub_1343):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10744(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10744(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10744(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10744(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1343), .-GL_PREFIX(_dispatch_stub_1343)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1344)
	.type	GL_PREFIX(_dispatch_stub_1344), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1344))
GL_PREFIX(_dispatch_stub_1344):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10752(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10752(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10752(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10752(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1344), .-GL_PREFIX(_dispatch_stub_1344)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1345)
	.type	GL_PREFIX(_dispatch_stub_1345), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1345))
GL_PREFIX(_dispatch_stub_1345):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10760(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10760(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10760(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10760(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1345), .-GL_PREFIX(_dispatch_stub_1345)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1346)
	.type	GL_PREFIX(_dispatch_stub_1346), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1346))
GL_PREFIX(_dispatch_stub_1346):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10768(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10768(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10768(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10768(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1346), .-GL_PREFIX(_dispatch_stub_1346)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1347)
	.type	GL_PREFIX(_dispatch_stub_1347), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1347))
GL_PREFIX(_dispatch_stub_1347):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10776(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10776(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10776(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10776(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1347), .-GL_PREFIX(_dispatch_stub_1347)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1348)
	.type	GL_PREFIX(_dispatch_stub_1348), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1348))
GL_PREFIX(_dispatch_stub_1348):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10784(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10784(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10784(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10784(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1348), .-GL_PREFIX(_dispatch_stub_1348)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1349)
	.type	GL_PREFIX(_dispatch_stub_1349), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1349))
GL_PREFIX(_dispatch_stub_1349):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10792(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10792(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10792(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10792(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1349), .-GL_PREFIX(_dispatch_stub_1349)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1350)
	.type	GL_PREFIX(_dispatch_stub_1350), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1350))
GL_PREFIX(_dispatch_stub_1350):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10800(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10800(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10800(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10800(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1350), .-GL_PREFIX(_dispatch_stub_1350)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1351)
	.type	GL_PREFIX(_dispatch_stub_1351), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1351))
GL_PREFIX(_dispatch_stub_1351):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10808(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10808(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10808(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10808(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1351), .-GL_PREFIX(_dispatch_stub_1351)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1352)
	.type	GL_PREFIX(_dispatch_stub_1352), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1352))
GL_PREFIX(_dispatch_stub_1352):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10816(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10816(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10816(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10816(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1352), .-GL_PREFIX(_dispatch_stub_1352)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1353)
	.type	GL_PREFIX(_dispatch_stub_1353), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1353))
GL_PREFIX(_dispatch_stub_1353):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10824(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10824(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10824(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10824(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1353), .-GL_PREFIX(_dispatch_stub_1353)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1354)
	.type	GL_PREFIX(_dispatch_stub_1354), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1354))
GL_PREFIX(_dispatch_stub_1354):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10832(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10832(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10832(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10832(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1354), .-GL_PREFIX(_dispatch_stub_1354)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1355)
	.type	GL_PREFIX(_dispatch_stub_1355), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1355))
GL_PREFIX(_dispatch_stub_1355):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10840(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10840(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10840(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10840(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1355), .-GL_PREFIX(_dispatch_stub_1355)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1356)
	.type	GL_PREFIX(_dispatch_stub_1356), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1356))
GL_PREFIX(_dispatch_stub_1356):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10848(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10848(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10848(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10848(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1356), .-GL_PREFIX(_dispatch_stub_1356)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1357)
	.type	GL_PREFIX(_dispatch_stub_1357), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1357))
GL_PREFIX(_dispatch_stub_1357):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10856(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10856(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10856(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10856(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1357), .-GL_PREFIX(_dispatch_stub_1357)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1358)
	.type	GL_PREFIX(_dispatch_stub_1358), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1358))
GL_PREFIX(_dispatch_stub_1358):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10864(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10864(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10864(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10864(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1358), .-GL_PREFIX(_dispatch_stub_1358)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1359)
	.type	GL_PREFIX(_dispatch_stub_1359), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1359))
GL_PREFIX(_dispatch_stub_1359):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10872(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10872(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10872(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10872(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1359), .-GL_PREFIX(_dispatch_stub_1359)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1360)
	.type	GL_PREFIX(_dispatch_stub_1360), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1360))
GL_PREFIX(_dispatch_stub_1360):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10880(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10880(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10880(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10880(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1360), .-GL_PREFIX(_dispatch_stub_1360)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1361)
	.type	GL_PREFIX(_dispatch_stub_1361), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1361))
GL_PREFIX(_dispatch_stub_1361):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10888(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10888(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10888(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10888(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1361), .-GL_PREFIX(_dispatch_stub_1361)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1362)
	.type	GL_PREFIX(_dispatch_stub_1362), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1362))
GL_PREFIX(_dispatch_stub_1362):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10896(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10896(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10896(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10896(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1362), .-GL_PREFIX(_dispatch_stub_1362)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1363)
	.type	GL_PREFIX(_dispatch_stub_1363), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1363))
GL_PREFIX(_dispatch_stub_1363):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10904(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10904(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10904(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10904(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1363), .-GL_PREFIX(_dispatch_stub_1363)

	.p2align	4,,15
	.globl	GL_PREFIX(_dispatch_stub_1364)
	.type	GL_PREFIX(_dispatch_stub_1364), @function
	HIDDEN(GL_PREFIX(_dispatch_stub_1364))
GL_PREFIX(_dispatch_stub_1364):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10912(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10912(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10912(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10912(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(_dispatch_stub_1364), .-GL_PREFIX(_dispatch_stub_1364)

	.p2align	4,,15
	.globl	GL_PREFIX(AlphaFuncx)
	.type	GL_PREFIX(AlphaFuncx), @function
GL_PREFIX(AlphaFuncx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10920(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10920(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10920(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10920(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(AlphaFuncx), .-GL_PREFIX(AlphaFuncx)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearColorx)
	.type	GL_PREFIX(ClearColorx), @function
GL_PREFIX(ClearColorx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10928(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10928(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10928(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10928(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearColorx), .-GL_PREFIX(ClearColorx)

	.p2align	4,,15
	.globl	GL_PREFIX(ClearDepthx)
	.type	GL_PREFIX(ClearDepthx), @function
GL_PREFIX(ClearDepthx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10936(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	10936(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10936(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	10936(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClearDepthx), .-GL_PREFIX(ClearDepthx)

	.p2align	4,,15
	.globl	GL_PREFIX(Color4x)
	.type	GL_PREFIX(Color4x), @function
GL_PREFIX(Color4x):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10944(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10944(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10944(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10944(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Color4x), .-GL_PREFIX(Color4x)

	.p2align	4,,15
	.globl	GL_PREFIX(DepthRangex)
	.type	GL_PREFIX(DepthRangex), @function
GL_PREFIX(DepthRangex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10952(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10952(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10952(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10952(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(DepthRangex), .-GL_PREFIX(DepthRangex)

	.p2align	4,,15
	.globl	GL_PREFIX(Fogx)
	.type	GL_PREFIX(Fogx), @function
GL_PREFIX(Fogx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10960(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10960(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10960(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10960(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Fogx), .-GL_PREFIX(Fogx)

	.p2align	4,,15
	.globl	GL_PREFIX(Fogxv)
	.type	GL_PREFIX(Fogxv), @function
GL_PREFIX(Fogxv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10968(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10968(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10968(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10968(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Fogxv), .-GL_PREFIX(Fogxv)

	.p2align	4,,15
	.globl	GL_PREFIX(Frustumf)
	.type	GL_PREFIX(Frustumf), @function
GL_PREFIX(Frustumf):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10976(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	movq	%xmm5, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm5
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$56, %rsp
	movq	10976(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10976(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	movq	%xmm5, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm5
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$56, %rsp
	movq	10976(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Frustumf), .-GL_PREFIX(Frustumf)

	.p2align	4,,15
	.globl	GL_PREFIX(Frustumx)
	.type	GL_PREFIX(Frustumx), @function
GL_PREFIX(Frustumx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10984(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10984(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10984(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	10984(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Frustumx), .-GL_PREFIX(Frustumx)

	.p2align	4,,15
	.globl	GL_PREFIX(LightModelx)
	.type	GL_PREFIX(LightModelx), @function
GL_PREFIX(LightModelx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	10992(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10992(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	10992(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	10992(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LightModelx), .-GL_PREFIX(LightModelx)

	.p2align	4,,15
	.globl	GL_PREFIX(LightModelxv)
	.type	GL_PREFIX(LightModelxv), @function
GL_PREFIX(LightModelxv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11000(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11000(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11000(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11000(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LightModelxv), .-GL_PREFIX(LightModelxv)

	.p2align	4,,15
	.globl	GL_PREFIX(Lightx)
	.type	GL_PREFIX(Lightx), @function
GL_PREFIX(Lightx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11008(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11008(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11008(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11008(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Lightx), .-GL_PREFIX(Lightx)

	.p2align	4,,15
	.globl	GL_PREFIX(Lightxv)
	.type	GL_PREFIX(Lightxv), @function
GL_PREFIX(Lightxv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11016(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11016(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11016(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11016(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Lightxv), .-GL_PREFIX(Lightxv)

	.p2align	4,,15
	.globl	GL_PREFIX(LineWidthx)
	.type	GL_PREFIX(LineWidthx), @function
GL_PREFIX(LineWidthx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11024(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	11024(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11024(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	11024(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LineWidthx), .-GL_PREFIX(LineWidthx)

	.p2align	4,,15
	.globl	GL_PREFIX(LoadMatrixx)
	.type	GL_PREFIX(LoadMatrixx), @function
GL_PREFIX(LoadMatrixx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11032(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	11032(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11032(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	11032(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(LoadMatrixx), .-GL_PREFIX(LoadMatrixx)

	.p2align	4,,15
	.globl	GL_PREFIX(Materialx)
	.type	GL_PREFIX(Materialx), @function
GL_PREFIX(Materialx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11040(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11040(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11040(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11040(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Materialx), .-GL_PREFIX(Materialx)

	.p2align	4,,15
	.globl	GL_PREFIX(Materialxv)
	.type	GL_PREFIX(Materialxv), @function
GL_PREFIX(Materialxv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11048(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11048(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11048(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11048(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Materialxv), .-GL_PREFIX(Materialxv)

	.p2align	4,,15
	.globl	GL_PREFIX(MultMatrixx)
	.type	GL_PREFIX(MultMatrixx), @function
GL_PREFIX(MultMatrixx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11056(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	11056(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11056(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	11056(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultMatrixx), .-GL_PREFIX(MultMatrixx)

	.p2align	4,,15
	.globl	GL_PREFIX(MultiTexCoord4x)
	.type	GL_PREFIX(MultiTexCoord4x), @function
GL_PREFIX(MultiTexCoord4x):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11064(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_x86_64_get_dispatch@PLT
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11064(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11064(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	call	_glapi_get_dispatch
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11064(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(MultiTexCoord4x), .-GL_PREFIX(MultiTexCoord4x)

	.p2align	4,,15
	.globl	GL_PREFIX(Normal3x)
	.type	GL_PREFIX(Normal3x), @function
GL_PREFIX(Normal3x):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11072(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11072(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11072(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11072(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Normal3x), .-GL_PREFIX(Normal3x)

	.p2align	4,,15
	.globl	GL_PREFIX(Orthof)
	.type	GL_PREFIX(Orthof), @function
GL_PREFIX(Orthof):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11080(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$56, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	movq	%xmm5, 40(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	40(%rsp), %xmm5
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$56, %rsp
	movq	11080(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11080(%rax), %r11
	jmp	*%r11
1:
	subq	$56, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	movq	%xmm5, 40(%rsp)
	call	_glapi_get_dispatch
	movq	40(%rsp), %xmm5
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$56, %rsp
	movq	11080(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Orthof), .-GL_PREFIX(Orthof)

	.p2align	4,,15
	.globl	GL_PREFIX(Orthox)
	.type	GL_PREFIX(Orthox), @function
GL_PREFIX(Orthox):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11088(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11088(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11088(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%r8
	pushq	%r9
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%r9
	popq	%r8
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11088(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Orthox), .-GL_PREFIX(Orthox)

	.p2align	4,,15
	.globl	GL_PREFIX(PointSizex)
	.type	GL_PREFIX(PointSizex), @function
GL_PREFIX(PointSizex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11096(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	call	_x86_64_get_dispatch@PLT
	popq	%rdi
	movq	11096(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11096(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	call	_glapi_get_dispatch
	popq	%rdi
	movq	11096(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PointSizex), .-GL_PREFIX(PointSizex)

	.p2align	4,,15
	.globl	GL_PREFIX(PolygonOffsetx)
	.type	GL_PREFIX(PolygonOffsetx), @function
GL_PREFIX(PolygonOffsetx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11104(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11104(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11104(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11104(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PolygonOffsetx), .-GL_PREFIX(PolygonOffsetx)

	.p2align	4,,15
	.globl	GL_PREFIX(Rotatex)
	.type	GL_PREFIX(Rotatex), @function
GL_PREFIX(Rotatex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11112(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11112(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11112(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	pushq	%rcx
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rcx
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11112(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Rotatex), .-GL_PREFIX(Rotatex)

	.p2align	4,,15
	.globl	GL_PREFIX(SampleCoveragex)
	.type	GL_PREFIX(SampleCoveragex), @function
GL_PREFIX(SampleCoveragex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11120(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11120(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11120(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11120(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(SampleCoveragex), .-GL_PREFIX(SampleCoveragex)

	.p2align	4,,15
	.globl	GL_PREFIX(Scalex)
	.type	GL_PREFIX(Scalex), @function
GL_PREFIX(Scalex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11128(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11128(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11128(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11128(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Scalex), .-GL_PREFIX(Scalex)

	.p2align	4,,15
	.globl	GL_PREFIX(TexEnvx)
	.type	GL_PREFIX(TexEnvx), @function
GL_PREFIX(TexEnvx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11136(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11136(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11136(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11136(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexEnvx), .-GL_PREFIX(TexEnvx)

	.p2align	4,,15
	.globl	GL_PREFIX(TexEnvxv)
	.type	GL_PREFIX(TexEnvxv), @function
GL_PREFIX(TexEnvxv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11144(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11144(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11144(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11144(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexEnvxv), .-GL_PREFIX(TexEnvxv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexParameterx)
	.type	GL_PREFIX(TexParameterx), @function
GL_PREFIX(TexParameterx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11152(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11152(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11152(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11152(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexParameterx), .-GL_PREFIX(TexParameterx)

	.p2align	4,,15
	.globl	GL_PREFIX(Translatex)
	.type	GL_PREFIX(Translatex), @function
GL_PREFIX(Translatex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11160(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11160(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11160(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11160(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(Translatex), .-GL_PREFIX(Translatex)

	.p2align	4,,15
	.globl	GL_PREFIX(ClipPlanef)
	.type	GL_PREFIX(ClipPlanef), @function
GL_PREFIX(ClipPlanef):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11168(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11168(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11168(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11168(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClipPlanef), .-GL_PREFIX(ClipPlanef)

	.p2align	4,,15
	.globl	GL_PREFIX(ClipPlanex)
	.type	GL_PREFIX(ClipPlanex), @function
GL_PREFIX(ClipPlanex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11176(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11176(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11176(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11176(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(ClipPlanex), .-GL_PREFIX(ClipPlanex)

	.p2align	4,,15
	.globl	GL_PREFIX(GetClipPlanef)
	.type	GL_PREFIX(GetClipPlanef), @function
GL_PREFIX(GetClipPlanef):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11184(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11184(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11184(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11184(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetClipPlanef), .-GL_PREFIX(GetClipPlanef)

	.p2align	4,,15
	.globl	GL_PREFIX(GetClipPlanex)
	.type	GL_PREFIX(GetClipPlanex), @function
GL_PREFIX(GetClipPlanex):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11192(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11192(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11192(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11192(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetClipPlanex), .-GL_PREFIX(GetClipPlanex)

	.p2align	4,,15
	.globl	GL_PREFIX(GetFixedv)
	.type	GL_PREFIX(GetFixedv), @function
GL_PREFIX(GetFixedv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11200(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11200(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11200(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11200(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetFixedv), .-GL_PREFIX(GetFixedv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetLightxv)
	.type	GL_PREFIX(GetLightxv), @function
GL_PREFIX(GetLightxv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11208(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11208(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11208(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11208(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetLightxv), .-GL_PREFIX(GetLightxv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetMaterialxv)
	.type	GL_PREFIX(GetMaterialxv), @function
GL_PREFIX(GetMaterialxv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11216(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11216(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11216(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11216(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetMaterialxv), .-GL_PREFIX(GetMaterialxv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexEnvxv)
	.type	GL_PREFIX(GetTexEnvxv), @function
GL_PREFIX(GetTexEnvxv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11224(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11224(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11224(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11224(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexEnvxv), .-GL_PREFIX(GetTexEnvxv)

	.p2align	4,,15
	.globl	GL_PREFIX(GetTexParameterxv)
	.type	GL_PREFIX(GetTexParameterxv), @function
GL_PREFIX(GetTexParameterxv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11232(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11232(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11232(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11232(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(GetTexParameterxv), .-GL_PREFIX(GetTexParameterxv)

	.p2align	4,,15
	.globl	GL_PREFIX(PointParameterx)
	.type	GL_PREFIX(PointParameterx), @function
GL_PREFIX(PointParameterx):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11240(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11240(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11240(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11240(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PointParameterx), .-GL_PREFIX(PointParameterx)

	.p2align	4,,15
	.globl	GL_PREFIX(PointParameterxv)
	.type	GL_PREFIX(PointParameterxv), @function
GL_PREFIX(PointParameterxv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11248(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11248(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11248(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	popq	%rsi
	popq	%rdi
	movq	11248(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PointParameterxv), .-GL_PREFIX(PointParameterxv)

	.p2align	4,,15
	.globl	GL_PREFIX(TexParameterxv)
	.type	GL_PREFIX(TexParameterxv), @function
GL_PREFIX(TexParameterxv):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11256(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_x86_64_get_dispatch@PLT
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11256(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11256(%rax), %r11
	jmp	*%r11
1:
	pushq	%rdi
	pushq	%rsi
	pushq	%rdx
	call	_glapi_get_dispatch
	popq	%rdx
	popq	%rsi
	popq	%rdi
	movq	11256(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(TexParameterxv), .-GL_PREFIX(TexParameterxv)

	.p2align	4,,15
	.globl	GL_PREFIX(BlendBarrier)
	.type	GL_PREFIX(BlendBarrier), @function
GL_PREFIX(BlendBarrier):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11264(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	pushq	%rbp
	call	_x86_64_get_dispatch@PLT
	popq	%rbp
	movq	11264(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11264(%rax), %r11
	jmp	*%r11
1:
	pushq	%rbp
	call	_glapi_get_dispatch
	popq	%rbp
	movq	11264(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(BlendBarrier), .-GL_PREFIX(BlendBarrier)

	.p2align	4,,15
	.globl	GL_PREFIX(PrimitiveBoundingBox)
	.type	GL_PREFIX(PrimitiveBoundingBox), @function
GL_PREFIX(PrimitiveBoundingBox):
#if defined(GLX_USE_TLS)
	call	_x86_64_get_dispatch@PLT
	movq	11272(%rax), %r11
	jmp	*%r11
#elif defined(HAVE_PTHREAD)
	subq	$72, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	movq	%xmm5, 40(%rsp)
	movq	%xmm6, 48(%rsp)
	movq	%xmm7, 56(%rsp)
	call	_x86_64_get_dispatch@PLT
	movq	56(%rsp), %xmm7
	movq	48(%rsp), %xmm6
	movq	40(%rsp), %xmm5
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$72, %rsp
	movq	11272(%rax), %r11
	jmp	*%r11
#else
	movq	_glapi_Dispatch(%rip), %rax
	testq	%rax, %rax
	je	1f
	movq	11272(%rax), %r11
	jmp	*%r11
1:
	subq	$72, %rsp
	movq	%xmm0, (%rsp)
	movq	%xmm1, 8(%rsp)
	movq	%xmm2, 16(%rsp)
	movq	%xmm3, 24(%rsp)
	movq	%xmm4, 32(%rsp)
	movq	%xmm5, 40(%rsp)
	movq	%xmm6, 48(%rsp)
	movq	%xmm7, 56(%rsp)
	call	_glapi_get_dispatch
	movq	56(%rsp), %xmm7
	movq	48(%rsp), %xmm6
	movq	40(%rsp), %xmm5
	movq	32(%rsp), %xmm4
	movq	24(%rsp), %xmm3
	movq	16(%rsp), %xmm2
	movq	8(%rsp), %xmm1
	movq	(%rsp), %xmm0
	addq	$72, %rsp
	movq	11272(%rax), %r11
	jmp	*%r11
#endif /* defined(GLX_USE_TLS) */
	.size	GL_PREFIX(PrimitiveBoundingBox), .-GL_PREFIX(PrimitiveBoundingBox)

	.globl GL_PREFIX(ArrayElementEXT) ; .set GL_PREFIX(ArrayElementEXT), GL_PREFIX(ArrayElement)
	.globl GL_PREFIX(BindTextureEXT) ; .set GL_PREFIX(BindTextureEXT), GL_PREFIX(BindTexture)
	.globl GL_PREFIX(DrawArraysEXT) ; .set GL_PREFIX(DrawArraysEXT), GL_PREFIX(DrawArrays)
#ifndef GLX_INDIRECT_RENDERING
	.globl GL_PREFIX(AreTexturesResidentEXT) ; .set GL_PREFIX(AreTexturesResidentEXT), GL_PREFIX(AreTexturesResident)
#endif
#ifndef GLX_INDIRECT_RENDERING
	.globl GL_PREFIX(DeleteTexturesEXT) ; .set GL_PREFIX(DeleteTexturesEXT), GL_PREFIX(DeleteTextures)
#endif
#ifndef GLX_INDIRECT_RENDERING
	.globl GL_PREFIX(GenTexturesEXT) ; .set GL_PREFIX(GenTexturesEXT), GL_PREFIX(GenTextures)
#endif
	.globl GL_PREFIX(GetPointervEXT) ; .set GL_PREFIX(GetPointervEXT), GL_PREFIX(GetPointerv)
#ifndef GLX_INDIRECT_RENDERING
	.globl GL_PREFIX(IsTextureEXT) ; .set GL_PREFIX(IsTextureEXT), GL_PREFIX(IsTexture)
#endif
	.globl GL_PREFIX(PrioritizeTexturesEXT) ; .set GL_PREFIX(PrioritizeTexturesEXT), GL_PREFIX(PrioritizeTextures)
	.globl GL_PREFIX(BlendColorEXT) ; .set GL_PREFIX(BlendColorEXT), GL_PREFIX(BlendColor)
	.globl GL_PREFIX(BlendEquationEXT) ; .set GL_PREFIX(BlendEquationEXT), GL_PREFIX(BlendEquation)
	.globl GL_PREFIX(DrawRangeElementsEXT) ; .set GL_PREFIX(DrawRangeElementsEXT), GL_PREFIX(DrawRangeElements)
	.globl GL_PREFIX(TexImage3DEXT) ; .set GL_PREFIX(TexImage3DEXT), GL_PREFIX(TexImage3D)
	.globl GL_PREFIX(TexSubImage3DEXT) ; .set GL_PREFIX(TexSubImage3DEXT), GL_PREFIX(TexSubImage3D)
	.globl GL_PREFIX(CopyTexSubImage3DEXT) ; .set GL_PREFIX(CopyTexSubImage3DEXT), GL_PREFIX(CopyTexSubImage3D)
	.globl GL_PREFIX(ActiveTextureARB) ; .set GL_PREFIX(ActiveTextureARB), GL_PREFIX(ActiveTexture)
	.globl GL_PREFIX(ClientActiveTextureARB) ; .set GL_PREFIX(ClientActiveTextureARB), GL_PREFIX(ClientActiveTexture)
	.globl GL_PREFIX(MultiTexCoord1dARB) ; .set GL_PREFIX(MultiTexCoord1dARB), GL_PREFIX(MultiTexCoord1d)
	.globl GL_PREFIX(MultiTexCoord1dvARB) ; .set GL_PREFIX(MultiTexCoord1dvARB), GL_PREFIX(MultiTexCoord1dv)
	.globl GL_PREFIX(MultiTexCoord1f) ; .set GL_PREFIX(MultiTexCoord1f), GL_PREFIX(MultiTexCoord1fARB)
	.globl GL_PREFIX(MultiTexCoord1fv) ; .set GL_PREFIX(MultiTexCoord1fv), GL_PREFIX(MultiTexCoord1fvARB)
	.globl GL_PREFIX(MultiTexCoord1iARB) ; .set GL_PREFIX(MultiTexCoord1iARB), GL_PREFIX(MultiTexCoord1i)
	.globl GL_PREFIX(MultiTexCoord1ivARB) ; .set GL_PREFIX(MultiTexCoord1ivARB), GL_PREFIX(MultiTexCoord1iv)
	.globl GL_PREFIX(MultiTexCoord1sARB) ; .set GL_PREFIX(MultiTexCoord1sARB), GL_PREFIX(MultiTexCoord1s)
	.globl GL_PREFIX(MultiTexCoord1svARB) ; .set GL_PREFIX(MultiTexCoord1svARB), GL_PREFIX(MultiTexCoord1sv)
	.globl GL_PREFIX(MultiTexCoord2dARB) ; .set GL_PREFIX(MultiTexCoord2dARB), GL_PREFIX(MultiTexCoord2d)
	.globl GL_PREFIX(MultiTexCoord2dvARB) ; .set GL_PREFIX(MultiTexCoord2dvARB), GL_PREFIX(MultiTexCoord2dv)
	.globl GL_PREFIX(MultiTexCoord2f) ; .set GL_PREFIX(MultiTexCoord2f), GL_PREFIX(MultiTexCoord2fARB)
	.globl GL_PREFIX(MultiTexCoord2fv) ; .set GL_PREFIX(MultiTexCoord2fv), GL_PREFIX(MultiTexCoord2fvARB)
	.globl GL_PREFIX(MultiTexCoord2iARB) ; .set GL_PREFIX(MultiTexCoord2iARB), GL_PREFIX(MultiTexCoord2i)
	.globl GL_PREFIX(MultiTexCoord2ivARB) ; .set GL_PREFIX(MultiTexCoord2ivARB), GL_PREFIX(MultiTexCoord2iv)
	.globl GL_PREFIX(MultiTexCoord2sARB) ; .set GL_PREFIX(MultiTexCoord2sARB), GL_PREFIX(MultiTexCoord2s)
	.globl GL_PREFIX(MultiTexCoord2svARB) ; .set GL_PREFIX(MultiTexCoord2svARB), GL_PREFIX(MultiTexCoord2sv)
	.globl GL_PREFIX(MultiTexCoord3dARB) ; .set GL_PREFIX(MultiTexCoord3dARB), GL_PREFIX(MultiTexCoord3d)
	.globl GL_PREFIX(MultiTexCoord3dvARB) ; .set GL_PREFIX(MultiTexCoord3dvARB), GL_PREFIX(MultiTexCoord3dv)
	.globl GL_PREFIX(MultiTexCoord3f) ; .set GL_PREFIX(MultiTexCoord3f), GL_PREFIX(MultiTexCoord3fARB)
	.globl GL_PREFIX(MultiTexCoord3fv) ; .set GL_PREFIX(MultiTexCoord3fv), GL_PREFIX(MultiTexCoord3fvARB)
	.globl GL_PREFIX(MultiTexCoord3iARB) ; .set GL_PREFIX(MultiTexCoord3iARB), GL_PREFIX(MultiTexCoord3i)
	.globl GL_PREFIX(MultiTexCoord3ivARB) ; .set GL_PREFIX(MultiTexCoord3ivARB), GL_PREFIX(MultiTexCoord3iv)
	.globl GL_PREFIX(MultiTexCoord3sARB) ; .set GL_PREFIX(MultiTexCoord3sARB), GL_PREFIX(MultiTexCoord3s)
	.globl GL_PREFIX(MultiTexCoord3svARB) ; .set GL_PREFIX(MultiTexCoord3svARB), GL_PREFIX(MultiTexCoord3sv)
	.globl GL_PREFIX(MultiTexCoord4dARB) ; .set GL_PREFIX(MultiTexCoord4dARB), GL_PREFIX(MultiTexCoord4d)
	.globl GL_PREFIX(MultiTexCoord4dvARB) ; .set GL_PREFIX(MultiTexCoord4dvARB), GL_PREFIX(MultiTexCoord4dv)
	.globl GL_PREFIX(MultiTexCoord4f) ; .set GL_PREFIX(MultiTexCoord4f), GL_PREFIX(MultiTexCoord4fARB)
	.globl GL_PREFIX(MultiTexCoord4fv) ; .set GL_PREFIX(MultiTexCoord4fv), GL_PREFIX(MultiTexCoord4fvARB)
	.globl GL_PREFIX(MultiTexCoord4iARB) ; .set GL_PREFIX(MultiTexCoord4iARB), GL_PREFIX(MultiTexCoord4i)
	.globl GL_PREFIX(MultiTexCoord4ivARB) ; .set GL_PREFIX(MultiTexCoord4ivARB), GL_PREFIX(MultiTexCoord4iv)
	.globl GL_PREFIX(MultiTexCoord4sARB) ; .set GL_PREFIX(MultiTexCoord4sARB), GL_PREFIX(MultiTexCoord4s)
	.globl GL_PREFIX(MultiTexCoord4svARB) ; .set GL_PREFIX(MultiTexCoord4svARB), GL_PREFIX(MultiTexCoord4sv)
	.globl GL_PREFIX(CompressedTexImage1DARB) ; .set GL_PREFIX(CompressedTexImage1DARB), GL_PREFIX(CompressedTexImage1D)
	.globl GL_PREFIX(CompressedTexImage2DARB) ; .set GL_PREFIX(CompressedTexImage2DARB), GL_PREFIX(CompressedTexImage2D)
	.globl GL_PREFIX(CompressedTexImage3DARB) ; .set GL_PREFIX(CompressedTexImage3DARB), GL_PREFIX(CompressedTexImage3D)
	.globl GL_PREFIX(CompressedTexSubImage1DARB) ; .set GL_PREFIX(CompressedTexSubImage1DARB), GL_PREFIX(CompressedTexSubImage1D)
	.globl GL_PREFIX(CompressedTexSubImage2DARB) ; .set GL_PREFIX(CompressedTexSubImage2DARB), GL_PREFIX(CompressedTexSubImage2D)
	.globl GL_PREFIX(CompressedTexSubImage3DARB) ; .set GL_PREFIX(CompressedTexSubImage3DARB), GL_PREFIX(CompressedTexSubImage3D)
	.globl GL_PREFIX(GetCompressedTexImageARB) ; .set GL_PREFIX(GetCompressedTexImageARB), GL_PREFIX(GetCompressedTexImage)
	.globl GL_PREFIX(LoadTransposeMatrixdARB) ; .set GL_PREFIX(LoadTransposeMatrixdARB), GL_PREFIX(LoadTransposeMatrixd)
	.globl GL_PREFIX(LoadTransposeMatrixfARB) ; .set GL_PREFIX(LoadTransposeMatrixfARB), GL_PREFIX(LoadTransposeMatrixf)
	.globl GL_PREFIX(MultTransposeMatrixdARB) ; .set GL_PREFIX(MultTransposeMatrixdARB), GL_PREFIX(MultTransposeMatrixd)
	.globl GL_PREFIX(MultTransposeMatrixfARB) ; .set GL_PREFIX(MultTransposeMatrixfARB), GL_PREFIX(MultTransposeMatrixf)
	.globl GL_PREFIX(SampleCoverageARB) ; .set GL_PREFIX(SampleCoverageARB), GL_PREFIX(SampleCoverage)
	.globl GL_PREFIX(BlendFuncSeparateEXT) ; .set GL_PREFIX(BlendFuncSeparateEXT), GL_PREFIX(BlendFuncSeparate)
	.globl GL_PREFIX(FogCoordPointerEXT) ; .set GL_PREFIX(FogCoordPointerEXT), GL_PREFIX(FogCoordPointer)
	.globl GL_PREFIX(FogCoorddEXT) ; .set GL_PREFIX(FogCoorddEXT), GL_PREFIX(FogCoordd)
	.globl GL_PREFIX(FogCoorddvEXT) ; .set GL_PREFIX(FogCoorddvEXT), GL_PREFIX(FogCoorddv)
	.globl GL_PREFIX(MultiDrawArraysEXT) ; .set GL_PREFIX(MultiDrawArraysEXT), GL_PREFIX(MultiDrawArrays)
	.globl GL_PREFIX(PointParameterfARB) ; .set GL_PREFIX(PointParameterfARB), GL_PREFIX(PointParameterf)
	.globl GL_PREFIX(PointParameterfEXT) ; .set GL_PREFIX(PointParameterfEXT), GL_PREFIX(PointParameterf)
	.globl GL_PREFIX(PointParameterfvARB) ; .set GL_PREFIX(PointParameterfvARB), GL_PREFIX(PointParameterfv)
	.globl GL_PREFIX(PointParameterfvEXT) ; .set GL_PREFIX(PointParameterfvEXT), GL_PREFIX(PointParameterfv)
	.globl GL_PREFIX(SecondaryColor3bEXT) ; .set GL_PREFIX(SecondaryColor3bEXT), GL_PREFIX(SecondaryColor3b)
	.globl GL_PREFIX(SecondaryColor3bvEXT) ; .set GL_PREFIX(SecondaryColor3bvEXT), GL_PREFIX(SecondaryColor3bv)
	.globl GL_PREFIX(SecondaryColor3dEXT) ; .set GL_PREFIX(SecondaryColor3dEXT), GL_PREFIX(SecondaryColor3d)
	.globl GL_PREFIX(SecondaryColor3dvEXT) ; .set GL_PREFIX(SecondaryColor3dvEXT), GL_PREFIX(SecondaryColor3dv)
	.globl GL_PREFIX(SecondaryColor3iEXT) ; .set GL_PREFIX(SecondaryColor3iEXT), GL_PREFIX(SecondaryColor3i)
	.globl GL_PREFIX(SecondaryColor3ivEXT) ; .set GL_PREFIX(SecondaryColor3ivEXT), GL_PREFIX(SecondaryColor3iv)
	.globl GL_PREFIX(SecondaryColor3sEXT) ; .set GL_PREFIX(SecondaryColor3sEXT), GL_PREFIX(SecondaryColor3s)
	.globl GL_PREFIX(SecondaryColor3svEXT) ; .set GL_PREFIX(SecondaryColor3svEXT), GL_PREFIX(SecondaryColor3sv)
	.globl GL_PREFIX(SecondaryColor3ubEXT) ; .set GL_PREFIX(SecondaryColor3ubEXT), GL_PREFIX(SecondaryColor3ub)
	.globl GL_PREFIX(SecondaryColor3ubvEXT) ; .set GL_PREFIX(SecondaryColor3ubvEXT), GL_PREFIX(SecondaryColor3ubv)
	.globl GL_PREFIX(SecondaryColor3uiEXT) ; .set GL_PREFIX(SecondaryColor3uiEXT), GL_PREFIX(SecondaryColor3ui)
	.globl GL_PREFIX(SecondaryColor3uivEXT) ; .set GL_PREFIX(SecondaryColor3uivEXT), GL_PREFIX(SecondaryColor3uiv)
	.globl GL_PREFIX(SecondaryColor3usEXT) ; .set GL_PREFIX(SecondaryColor3usEXT), GL_PREFIX(SecondaryColor3us)
	.globl GL_PREFIX(SecondaryColor3usvEXT) ; .set GL_PREFIX(SecondaryColor3usvEXT), GL_PREFIX(SecondaryColor3usv)
	.globl GL_PREFIX(SecondaryColorPointerEXT) ; .set GL_PREFIX(SecondaryColorPointerEXT), GL_PREFIX(SecondaryColorPointer)
	.globl GL_PREFIX(WindowPos2dARB) ; .set GL_PREFIX(WindowPos2dARB), GL_PREFIX(WindowPos2d)
	.globl GL_PREFIX(WindowPos2dvARB) ; .set GL_PREFIX(WindowPos2dvARB), GL_PREFIX(WindowPos2dv)
	.globl GL_PREFIX(WindowPos2fARB) ; .set GL_PREFIX(WindowPos2fARB), GL_PREFIX(WindowPos2f)
	.globl GL_PREFIX(WindowPos2fvARB) ; .set GL_PREFIX(WindowPos2fvARB), GL_PREFIX(WindowPos2fv)
	.globl GL_PREFIX(WindowPos2iARB) ; .set GL_PREFIX(WindowPos2iARB), GL_PREFIX(WindowPos2i)
	.globl GL_PREFIX(WindowPos2ivARB) ; .set GL_PREFIX(WindowPos2ivARB), GL_PREFIX(WindowPos2iv)
	.globl GL_PREFIX(WindowPos2sARB) ; .set GL_PREFIX(WindowPos2sARB), GL_PREFIX(WindowPos2s)
	.globl GL_PREFIX(WindowPos2svARB) ; .set GL_PREFIX(WindowPos2svARB), GL_PREFIX(WindowPos2sv)
	.globl GL_PREFIX(WindowPos3dARB) ; .set GL_PREFIX(WindowPos3dARB), GL_PREFIX(WindowPos3d)
	.globl GL_PREFIX(WindowPos3dvARB) ; .set GL_PREFIX(WindowPos3dvARB), GL_PREFIX(WindowPos3dv)
	.globl GL_PREFIX(WindowPos3fARB) ; .set GL_PREFIX(WindowPos3fARB), GL_PREFIX(WindowPos3f)
	.globl GL_PREFIX(WindowPos3fvARB) ; .set GL_PREFIX(WindowPos3fvARB), GL_PREFIX(WindowPos3fv)
	.globl GL_PREFIX(WindowPos3iARB) ; .set GL_PREFIX(WindowPos3iARB), GL_PREFIX(WindowPos3i)
	.globl GL_PREFIX(WindowPos3ivARB) ; .set GL_PREFIX(WindowPos3ivARB), GL_PREFIX(WindowPos3iv)
	.globl GL_PREFIX(WindowPos3sARB) ; .set GL_PREFIX(WindowPos3sARB), GL_PREFIX(WindowPos3s)
	.globl GL_PREFIX(WindowPos3svARB) ; .set GL_PREFIX(WindowPos3svARB), GL_PREFIX(WindowPos3sv)
	.globl GL_PREFIX(BeginQueryARB) ; .set GL_PREFIX(BeginQueryARB), GL_PREFIX(BeginQuery)
	.globl GL_PREFIX(BindBufferARB) ; .set GL_PREFIX(BindBufferARB), GL_PREFIX(BindBuffer)
	.globl GL_PREFIX(BufferDataARB) ; .set GL_PREFIX(BufferDataARB), GL_PREFIX(BufferData)
	.globl GL_PREFIX(BufferSubDataARB) ; .set GL_PREFIX(BufferSubDataARB), GL_PREFIX(BufferSubData)
	.globl GL_PREFIX(DeleteBuffersARB) ; .set GL_PREFIX(DeleteBuffersARB), GL_PREFIX(DeleteBuffers)
	.globl GL_PREFIX(DeleteQueriesARB) ; .set GL_PREFIX(DeleteQueriesARB), GL_PREFIX(DeleteQueries)
	.globl GL_PREFIX(EndQueryARB) ; .set GL_PREFIX(EndQueryARB), GL_PREFIX(EndQuery)
	.globl GL_PREFIX(GenBuffersARB) ; .set GL_PREFIX(GenBuffersARB), GL_PREFIX(GenBuffers)
	.globl GL_PREFIX(GenQueriesARB) ; .set GL_PREFIX(GenQueriesARB), GL_PREFIX(GenQueries)
	.globl GL_PREFIX(GetBufferParameterivARB) ; .set GL_PREFIX(GetBufferParameterivARB), GL_PREFIX(GetBufferParameteriv)
	.globl GL_PREFIX(GetBufferPointervARB) ; .set GL_PREFIX(GetBufferPointervARB), GL_PREFIX(GetBufferPointerv)
	.globl GL_PREFIX(GetBufferSubDataARB) ; .set GL_PREFIX(GetBufferSubDataARB), GL_PREFIX(GetBufferSubData)
	.globl GL_PREFIX(GetQueryObjectivARB) ; .set GL_PREFIX(GetQueryObjectivARB), GL_PREFIX(GetQueryObjectiv)
	.globl GL_PREFIX(GetQueryObjectuivARB) ; .set GL_PREFIX(GetQueryObjectuivARB), GL_PREFIX(GetQueryObjectuiv)
	.globl GL_PREFIX(GetQueryivARB) ; .set GL_PREFIX(GetQueryivARB), GL_PREFIX(GetQueryiv)
	.globl GL_PREFIX(IsBufferARB) ; .set GL_PREFIX(IsBufferARB), GL_PREFIX(IsBuffer)
	.globl GL_PREFIX(IsQueryARB) ; .set GL_PREFIX(IsQueryARB), GL_PREFIX(IsQuery)
	.globl GL_PREFIX(MapBufferARB) ; .set GL_PREFIX(MapBufferARB), GL_PREFIX(MapBuffer)
	.globl GL_PREFIX(UnmapBufferARB) ; .set GL_PREFIX(UnmapBufferARB), GL_PREFIX(UnmapBuffer)
	.globl GL_PREFIX(BindAttribLocationARB) ; .set GL_PREFIX(BindAttribLocationARB), GL_PREFIX(BindAttribLocation)
	.globl GL_PREFIX(CompileShaderARB) ; .set GL_PREFIX(CompileShaderARB), GL_PREFIX(CompileShader)
	.globl GL_PREFIX(DisableVertexAttribArrayARB) ; .set GL_PREFIX(DisableVertexAttribArrayARB), GL_PREFIX(DisableVertexAttribArray)
	.globl GL_PREFIX(DrawBuffersARB) ; .set GL_PREFIX(DrawBuffersARB), GL_PREFIX(DrawBuffers)
	.globl GL_PREFIX(DrawBuffersATI) ; .set GL_PREFIX(DrawBuffersATI), GL_PREFIX(DrawBuffers)
	.globl GL_PREFIX(EnableVertexAttribArrayARB) ; .set GL_PREFIX(EnableVertexAttribArrayARB), GL_PREFIX(EnableVertexAttribArray)
	.globl GL_PREFIX(GetActiveAttribARB) ; .set GL_PREFIX(GetActiveAttribARB), GL_PREFIX(GetActiveAttrib)
	.globl GL_PREFIX(GetActiveUniformARB) ; .set GL_PREFIX(GetActiveUniformARB), GL_PREFIX(GetActiveUniform)
	.globl GL_PREFIX(GetAttribLocationARB) ; .set GL_PREFIX(GetAttribLocationARB), GL_PREFIX(GetAttribLocation)
	.globl GL_PREFIX(GetShaderSourceARB) ; .set GL_PREFIX(GetShaderSourceARB), GL_PREFIX(GetShaderSource)
	.globl GL_PREFIX(GetUniformLocationARB) ; .set GL_PREFIX(GetUniformLocationARB), GL_PREFIX(GetUniformLocation)
	.globl GL_PREFIX(GetUniformfvARB) ; .set GL_PREFIX(GetUniformfvARB), GL_PREFIX(GetUniformfv)
	.globl GL_PREFIX(GetUniformivARB) ; .set GL_PREFIX(GetUniformivARB), GL_PREFIX(GetUniformiv)
	.globl GL_PREFIX(GetVertexAttribPointervARB) ; .set GL_PREFIX(GetVertexAttribPointervARB), GL_PREFIX(GetVertexAttribPointerv)
	.globl GL_PREFIX(GetVertexAttribdvARB) ; .set GL_PREFIX(GetVertexAttribdvARB), GL_PREFIX(GetVertexAttribdv)
	.globl GL_PREFIX(GetVertexAttribfvARB) ; .set GL_PREFIX(GetVertexAttribfvARB), GL_PREFIX(GetVertexAttribfv)
	.globl GL_PREFIX(GetVertexAttribivARB) ; .set GL_PREFIX(GetVertexAttribivARB), GL_PREFIX(GetVertexAttribiv)
	.globl GL_PREFIX(LinkProgramARB) ; .set GL_PREFIX(LinkProgramARB), GL_PREFIX(LinkProgram)
	.globl GL_PREFIX(ShaderSourceARB) ; .set GL_PREFIX(ShaderSourceARB), GL_PREFIX(ShaderSource)
	.globl GL_PREFIX(Uniform1fARB) ; .set GL_PREFIX(Uniform1fARB), GL_PREFIX(Uniform1f)
	.globl GL_PREFIX(Uniform1fvARB) ; .set GL_PREFIX(Uniform1fvARB), GL_PREFIX(Uniform1fv)
	.globl GL_PREFIX(Uniform1iARB) ; .set GL_PREFIX(Uniform1iARB), GL_PREFIX(Uniform1i)
	.globl GL_PREFIX(Uniform1ivARB) ; .set GL_PREFIX(Uniform1ivARB), GL_PREFIX(Uniform1iv)
	.globl GL_PREFIX(Uniform2fARB) ; .set GL_PREFIX(Uniform2fARB), GL_PREFIX(Uniform2f)
	.globl GL_PREFIX(Uniform2fvARB) ; .set GL_PREFIX(Uniform2fvARB), GL_PREFIX(Uniform2fv)
	.globl GL_PREFIX(Uniform2iARB) ; .set GL_PREFIX(Uniform2iARB), GL_PREFIX(Uniform2i)
	.globl GL_PREFIX(Uniform2ivARB) ; .set GL_PREFIX(Uniform2ivARB), GL_PREFIX(Uniform2iv)
	.globl GL_PREFIX(Uniform3fARB) ; .set GL_PREFIX(Uniform3fARB), GL_PREFIX(Uniform3f)
	.globl GL_PREFIX(Uniform3fvARB) ; .set GL_PREFIX(Uniform3fvARB), GL_PREFIX(Uniform3fv)
	.globl GL_PREFIX(Uniform3iARB) ; .set GL_PREFIX(Uniform3iARB), GL_PREFIX(Uniform3i)
	.globl GL_PREFIX(Uniform3ivARB) ; .set GL_PREFIX(Uniform3ivARB), GL_PREFIX(Uniform3iv)
	.globl GL_PREFIX(Uniform4fARB) ; .set GL_PREFIX(Uniform4fARB), GL_PREFIX(Uniform4f)
	.globl GL_PREFIX(Uniform4fvARB) ; .set GL_PREFIX(Uniform4fvARB), GL_PREFIX(Uniform4fv)
	.globl GL_PREFIX(Uniform4iARB) ; .set GL_PREFIX(Uniform4iARB), GL_PREFIX(Uniform4i)
	.globl GL_PREFIX(Uniform4ivARB) ; .set GL_PREFIX(Uniform4ivARB), GL_PREFIX(Uniform4iv)
	.globl GL_PREFIX(UniformMatrix2fvARB) ; .set GL_PREFIX(UniformMatrix2fvARB), GL_PREFIX(UniformMatrix2fv)
	.globl GL_PREFIX(UniformMatrix3fvARB) ; .set GL_PREFIX(UniformMatrix3fvARB), GL_PREFIX(UniformMatrix3fv)
	.globl GL_PREFIX(UniformMatrix4fvARB) ; .set GL_PREFIX(UniformMatrix4fvARB), GL_PREFIX(UniformMatrix4fv)
	.globl GL_PREFIX(UseProgramObjectARB) ; .set GL_PREFIX(UseProgramObjectARB), GL_PREFIX(UseProgram)
	.globl GL_PREFIX(ValidateProgramARB) ; .set GL_PREFIX(ValidateProgramARB), GL_PREFIX(ValidateProgram)
	.globl GL_PREFIX(VertexAttrib1dARB) ; .set GL_PREFIX(VertexAttrib1dARB), GL_PREFIX(VertexAttrib1d)
	.globl GL_PREFIX(VertexAttrib1dvARB) ; .set GL_PREFIX(VertexAttrib1dvARB), GL_PREFIX(VertexAttrib1dv)
	.globl GL_PREFIX(VertexAttrib1sARB) ; .set GL_PREFIX(VertexAttrib1sARB), GL_PREFIX(VertexAttrib1s)
	.globl GL_PREFIX(VertexAttrib1svARB) ; .set GL_PREFIX(VertexAttrib1svARB), GL_PREFIX(VertexAttrib1sv)
	.globl GL_PREFIX(VertexAttrib2dARB) ; .set GL_PREFIX(VertexAttrib2dARB), GL_PREFIX(VertexAttrib2d)
	.globl GL_PREFIX(VertexAttrib2dvARB) ; .set GL_PREFIX(VertexAttrib2dvARB), GL_PREFIX(VertexAttrib2dv)
	.globl GL_PREFIX(VertexAttrib2sARB) ; .set GL_PREFIX(VertexAttrib2sARB), GL_PREFIX(VertexAttrib2s)
	.globl GL_PREFIX(VertexAttrib2svARB) ; .set GL_PREFIX(VertexAttrib2svARB), GL_PREFIX(VertexAttrib2sv)
	.globl GL_PREFIX(VertexAttrib3dARB) ; .set GL_PREFIX(VertexAttrib3dARB), GL_PREFIX(VertexAttrib3d)
	.globl GL_PREFIX(VertexAttrib3dvARB) ; .set GL_PREFIX(VertexAttrib3dvARB), GL_PREFIX(VertexAttrib3dv)
	.globl GL_PREFIX(VertexAttrib3sARB) ; .set GL_PREFIX(VertexAttrib3sARB), GL_PREFIX(VertexAttrib3s)
	.globl GL_PREFIX(VertexAttrib3svARB) ; .set GL_PREFIX(VertexAttrib3svARB), GL_PREFIX(VertexAttrib3sv)
	.globl GL_PREFIX(VertexAttrib4NbvARB) ; .set GL_PREFIX(VertexAttrib4NbvARB), GL_PREFIX(VertexAttrib4Nbv)
	.globl GL_PREFIX(VertexAttrib4NivARB) ; .set GL_PREFIX(VertexAttrib4NivARB), GL_PREFIX(VertexAttrib4Niv)
	.globl GL_PREFIX(VertexAttrib4NsvARB) ; .set GL_PREFIX(VertexAttrib4NsvARB), GL_PREFIX(VertexAttrib4Nsv)
	.globl GL_PREFIX(VertexAttrib4NubARB) ; .set GL_PREFIX(VertexAttrib4NubARB), GL_PREFIX(VertexAttrib4Nub)
	.globl GL_PREFIX(VertexAttrib4NubvARB) ; .set GL_PREFIX(VertexAttrib4NubvARB), GL_PREFIX(VertexAttrib4Nubv)
	.globl GL_PREFIX(VertexAttrib4NuivARB) ; .set GL_PREFIX(VertexAttrib4NuivARB), GL_PREFIX(VertexAttrib4Nuiv)
	.globl GL_PREFIX(VertexAttrib4NusvARB) ; .set GL_PREFIX(VertexAttrib4NusvARB), GL_PREFIX(VertexAttrib4Nusv)
	.globl GL_PREFIX(VertexAttrib4bvARB) ; .set GL_PREFIX(VertexAttrib4bvARB), GL_PREFIX(VertexAttrib4bv)
	.globl GL_PREFIX(VertexAttrib4dARB) ; .set GL_PREFIX(VertexAttrib4dARB), GL_PREFIX(VertexAttrib4d)
	.globl GL_PREFIX(VertexAttrib4dvARB) ; .set GL_PREFIX(VertexAttrib4dvARB), GL_PREFIX(VertexAttrib4dv)
	.globl GL_PREFIX(VertexAttrib4ivARB) ; .set GL_PREFIX(VertexAttrib4ivARB), GL_PREFIX(VertexAttrib4iv)
	.globl GL_PREFIX(VertexAttrib4sARB) ; .set GL_PREFIX(VertexAttrib4sARB), GL_PREFIX(VertexAttrib4s)
	.globl GL_PREFIX(VertexAttrib4svARB) ; .set GL_PREFIX(VertexAttrib4svARB), GL_PREFIX(VertexAttrib4sv)
	.globl GL_PREFIX(VertexAttrib4ubvARB) ; .set GL_PREFIX(VertexAttrib4ubvARB), GL_PREFIX(VertexAttrib4ubv)
	.globl GL_PREFIX(VertexAttrib4uivARB) ; .set GL_PREFIX(VertexAttrib4uivARB), GL_PREFIX(VertexAttrib4uiv)
	.globl GL_PREFIX(VertexAttrib4usvARB) ; .set GL_PREFIX(VertexAttrib4usvARB), GL_PREFIX(VertexAttrib4usv)
	.globl GL_PREFIX(VertexAttribPointerARB) ; .set GL_PREFIX(VertexAttribPointerARB), GL_PREFIX(VertexAttribPointer)
	.globl GL_PREFIX(BeginConditionalRenderNV) ; .set GL_PREFIX(BeginConditionalRenderNV), GL_PREFIX(BeginConditionalRender)
	.globl GL_PREFIX(BindFragDataLocationEXT) ; .set GL_PREFIX(BindFragDataLocationEXT), GL_PREFIX(BindFragDataLocation)
	.globl GL_PREFIX(ClampColorARB) ; .set GL_PREFIX(ClampColorARB), GL_PREFIX(ClampColor)
	.globl GL_PREFIX(ColorMaskIndexedEXT) ; .set GL_PREFIX(ColorMaskIndexedEXT), GL_PREFIX(ColorMaski)
	.globl GL_PREFIX(DisableIndexedEXT) ; .set GL_PREFIX(DisableIndexedEXT), GL_PREFIX(Disablei)
	.globl GL_PREFIX(EnableIndexedEXT) ; .set GL_PREFIX(EnableIndexedEXT), GL_PREFIX(Enablei)
	.globl GL_PREFIX(EndConditionalRenderNV) ; .set GL_PREFIX(EndConditionalRenderNV), GL_PREFIX(EndConditionalRender)
	.globl GL_PREFIX(GetBooleanIndexedvEXT) ; .set GL_PREFIX(GetBooleanIndexedvEXT), GL_PREFIX(GetBooleani_v)
	.globl GL_PREFIX(GetFragDataLocationEXT) ; .set GL_PREFIX(GetFragDataLocationEXT), GL_PREFIX(GetFragDataLocation)
	.globl GL_PREFIX(GetIntegerIndexedvEXT) ; .set GL_PREFIX(GetIntegerIndexedvEXT), GL_PREFIX(GetIntegeri_v)
	.globl GL_PREFIX(GetTexParameterIivEXT) ; .set GL_PREFIX(GetTexParameterIivEXT), GL_PREFIX(GetTexParameterIiv)
	.globl GL_PREFIX(GetTexParameterIuivEXT) ; .set GL_PREFIX(GetTexParameterIuivEXT), GL_PREFIX(GetTexParameterIuiv)
	.globl GL_PREFIX(GetUniformuivEXT) ; .set GL_PREFIX(GetUniformuivEXT), GL_PREFIX(GetUniformuiv)
	.globl GL_PREFIX(GetVertexAttribIivEXT) ; .set GL_PREFIX(GetVertexAttribIivEXT), GL_PREFIX(GetVertexAttribIiv)
	.globl GL_PREFIX(GetVertexAttribIuivEXT) ; .set GL_PREFIX(GetVertexAttribIuivEXT), GL_PREFIX(GetVertexAttribIuiv)
	.globl GL_PREFIX(IsEnabledIndexedEXT) ; .set GL_PREFIX(IsEnabledIndexedEXT), GL_PREFIX(IsEnabledi)
	.globl GL_PREFIX(TexParameterIivEXT) ; .set GL_PREFIX(TexParameterIivEXT), GL_PREFIX(TexParameterIiv)
	.globl GL_PREFIX(TexParameterIuivEXT) ; .set GL_PREFIX(TexParameterIuivEXT), GL_PREFIX(TexParameterIuiv)
	.globl GL_PREFIX(Uniform1uiEXT) ; .set GL_PREFIX(Uniform1uiEXT), GL_PREFIX(Uniform1ui)
	.globl GL_PREFIX(Uniform1uivEXT) ; .set GL_PREFIX(Uniform1uivEXT), GL_PREFIX(Uniform1uiv)
	.globl GL_PREFIX(Uniform2uiEXT) ; .set GL_PREFIX(Uniform2uiEXT), GL_PREFIX(Uniform2ui)
	.globl GL_PREFIX(Uniform2uivEXT) ; .set GL_PREFIX(Uniform2uivEXT), GL_PREFIX(Uniform2uiv)
	.globl GL_PREFIX(Uniform3uiEXT) ; .set GL_PREFIX(Uniform3uiEXT), GL_PREFIX(Uniform3ui)
	.globl GL_PREFIX(Uniform3uivEXT) ; .set GL_PREFIX(Uniform3uivEXT), GL_PREFIX(Uniform3uiv)
	.globl GL_PREFIX(Uniform4uiEXT) ; .set GL_PREFIX(Uniform4uiEXT), GL_PREFIX(Uniform4ui)
	.globl GL_PREFIX(Uniform4uivEXT) ; .set GL_PREFIX(Uniform4uivEXT), GL_PREFIX(Uniform4uiv)
	.globl GL_PREFIX(VertexAttribI1ivEXT) ; .set GL_PREFIX(VertexAttribI1ivEXT), GL_PREFIX(VertexAttribI1iv)
	.globl GL_PREFIX(VertexAttribI1uivEXT) ; .set GL_PREFIX(VertexAttribI1uivEXT), GL_PREFIX(VertexAttribI1uiv)
	.globl GL_PREFIX(VertexAttribI4bvEXT) ; .set GL_PREFIX(VertexAttribI4bvEXT), GL_PREFIX(VertexAttribI4bv)
	.globl GL_PREFIX(VertexAttribI4svEXT) ; .set GL_PREFIX(VertexAttribI4svEXT), GL_PREFIX(VertexAttribI4sv)
	.globl GL_PREFIX(VertexAttribI4ubvEXT) ; .set GL_PREFIX(VertexAttribI4ubvEXT), GL_PREFIX(VertexAttribI4ubv)
	.globl GL_PREFIX(VertexAttribI4usvEXT) ; .set GL_PREFIX(VertexAttribI4usvEXT), GL_PREFIX(VertexAttribI4usv)
	.globl GL_PREFIX(VertexAttribIPointerEXT) ; .set GL_PREFIX(VertexAttribIPointerEXT), GL_PREFIX(VertexAttribIPointer)
	.globl GL_PREFIX(PrimitiveRestartIndexNV) ; .set GL_PREFIX(PrimitiveRestartIndexNV), GL_PREFIX(PrimitiveRestartIndex)
	.globl GL_PREFIX(TexBufferARB) ; .set GL_PREFIX(TexBufferARB), GL_PREFIX(TexBuffer)
	.globl GL_PREFIX(VertexAttribDivisorARB) ; .set GL_PREFIX(VertexAttribDivisorARB), GL_PREFIX(VertexAttribDivisor)
	.globl GL_PREFIX(MinSampleShadingARB) ; .set GL_PREFIX(MinSampleShadingARB), GL_PREFIX(MinSampleShading)
	.globl GL_PREFIX(VertexAttrib1f) ; .set GL_PREFIX(VertexAttrib1f), GL_PREFIX(VertexAttrib1fARB)
	.globl GL_PREFIX(VertexAttrib1fv) ; .set GL_PREFIX(VertexAttrib1fv), GL_PREFIX(VertexAttrib1fvARB)
	.globl GL_PREFIX(VertexAttrib2f) ; .set GL_PREFIX(VertexAttrib2f), GL_PREFIX(VertexAttrib2fARB)
	.globl GL_PREFIX(VertexAttrib2fv) ; .set GL_PREFIX(VertexAttrib2fv), GL_PREFIX(VertexAttrib2fvARB)
	.globl GL_PREFIX(VertexAttrib3f) ; .set GL_PREFIX(VertexAttrib3f), GL_PREFIX(VertexAttrib3fARB)
	.globl GL_PREFIX(VertexAttrib3fv) ; .set GL_PREFIX(VertexAttrib3fv), GL_PREFIX(VertexAttrib3fvARB)
	.globl GL_PREFIX(VertexAttrib4f) ; .set GL_PREFIX(VertexAttrib4f), GL_PREFIX(VertexAttrib4fARB)
	.globl GL_PREFIX(VertexAttrib4fv) ; .set GL_PREFIX(VertexAttrib4fv), GL_PREFIX(VertexAttrib4fvARB)
	.globl GL_PREFIX(DrawArraysInstancedEXT) ; .set GL_PREFIX(DrawArraysInstancedEXT), GL_PREFIX(DrawArraysInstancedARB)
	.globl GL_PREFIX(DrawArraysInstanced) ; .set GL_PREFIX(DrawArraysInstanced), GL_PREFIX(DrawArraysInstancedARB)
	.globl GL_PREFIX(DrawElementsInstancedEXT) ; .set GL_PREFIX(DrawElementsInstancedEXT), GL_PREFIX(DrawElementsInstancedARB)
	.globl GL_PREFIX(DrawElementsInstanced) ; .set GL_PREFIX(DrawElementsInstanced), GL_PREFIX(DrawElementsInstancedARB)
	.globl GL_PREFIX(CheckFramebufferStatusEXT) ; .set GL_PREFIX(CheckFramebufferStatusEXT), GL_PREFIX(CheckFramebufferStatus)
	.globl GL_PREFIX(DeleteFramebuffersEXT) ; .set GL_PREFIX(DeleteFramebuffersEXT), GL_PREFIX(DeleteFramebuffers)
	.globl GL_PREFIX(DeleteRenderbuffersEXT) ; .set GL_PREFIX(DeleteRenderbuffersEXT), GL_PREFIX(DeleteRenderbuffers)
	.globl GL_PREFIX(FramebufferRenderbufferEXT) ; .set GL_PREFIX(FramebufferRenderbufferEXT), GL_PREFIX(FramebufferRenderbuffer)
	.globl GL_PREFIX(FramebufferTexture1DEXT) ; .set GL_PREFIX(FramebufferTexture1DEXT), GL_PREFIX(FramebufferTexture1D)
	.globl GL_PREFIX(FramebufferTexture2DEXT) ; .set GL_PREFIX(FramebufferTexture2DEXT), GL_PREFIX(FramebufferTexture2D)
	.globl GL_PREFIX(FramebufferTexture3DEXT) ; .set GL_PREFIX(FramebufferTexture3DEXT), GL_PREFIX(FramebufferTexture3D)
	.globl GL_PREFIX(FramebufferTextureLayerEXT) ; .set GL_PREFIX(FramebufferTextureLayerEXT), GL_PREFIX(FramebufferTextureLayer)
	.globl GL_PREFIX(GenFramebuffersEXT) ; .set GL_PREFIX(GenFramebuffersEXT), GL_PREFIX(GenFramebuffers)
	.globl GL_PREFIX(GenRenderbuffersEXT) ; .set GL_PREFIX(GenRenderbuffersEXT), GL_PREFIX(GenRenderbuffers)
	.globl GL_PREFIX(GenerateMipmapEXT) ; .set GL_PREFIX(GenerateMipmapEXT), GL_PREFIX(GenerateMipmap)
	.globl GL_PREFIX(GetFramebufferAttachmentParameterivEXT) ; .set GL_PREFIX(GetFramebufferAttachmentParameterivEXT), GL_PREFIX(GetFramebufferAttachmentParameteriv)
	.globl GL_PREFIX(GetRenderbufferParameterivEXT) ; .set GL_PREFIX(GetRenderbufferParameterivEXT), GL_PREFIX(GetRenderbufferParameteriv)
	.globl GL_PREFIX(IsFramebufferEXT) ; .set GL_PREFIX(IsFramebufferEXT), GL_PREFIX(IsFramebuffer)
	.globl GL_PREFIX(IsRenderbufferEXT) ; .set GL_PREFIX(IsRenderbufferEXT), GL_PREFIX(IsRenderbuffer)
	.globl GL_PREFIX(RenderbufferStorageEXT) ; .set GL_PREFIX(RenderbufferStorageEXT), GL_PREFIX(RenderbufferStorage)
	.globl GL_PREFIX(RenderbufferStorageMultisampleEXT) ; .set GL_PREFIX(RenderbufferStorageMultisampleEXT), GL_PREFIX(RenderbufferStorageMultisample)
	.globl GL_PREFIX(ProvokingVertexEXT) ; .set GL_PREFIX(ProvokingVertexEXT), GL_PREFIX(ProvokingVertex)
	.globl GL_PREFIX(BlendEquationSeparatei) ; .set GL_PREFIX(BlendEquationSeparatei), GL_PREFIX(BlendEquationSeparateiARB)
	.globl GL_PREFIX(BlendEquationi) ; .set GL_PREFIX(BlendEquationi), GL_PREFIX(BlendEquationiARB)
	.globl GL_PREFIX(BlendFuncSeparatei) ; .set GL_PREFIX(BlendFuncSeparatei), GL_PREFIX(BlendFuncSeparateiARB)
	.globl GL_PREFIX(BlendFunci) ; .set GL_PREFIX(BlendFunci), GL_PREFIX(BlendFunciARB)
	.globl GL_PREFIX(GetGraphicsResetStatus) ; .set GL_PREFIX(GetGraphicsResetStatus), GL_PREFIX(GetGraphicsResetStatusARB)
	.globl GL_PREFIX(GetnUniformfv) ; .set GL_PREFIX(GetnUniformfv), GL_PREFIX(GetnUniformfvARB)
	.globl GL_PREFIX(GetnUniformiv) ; .set GL_PREFIX(GetnUniformiv), GL_PREFIX(GetnUniformivARB)
	.globl GL_PREFIX(GetnUniformuiv) ; .set GL_PREFIX(GetnUniformuiv), GL_PREFIX(GetnUniformuivARB)
	.globl GL_PREFIX(ReadnPixels) ; .set GL_PREFIX(ReadnPixels), GL_PREFIX(ReadnPixelsARB)
	.globl GL_PREFIX(DebugMessageCallbackARB) ; .set GL_PREFIX(DebugMessageCallbackARB), GL_PREFIX(DebugMessageCallback)
	.globl GL_PREFIX(DebugMessageControlARB) ; .set GL_PREFIX(DebugMessageControlARB), GL_PREFIX(DebugMessageControl)
	.globl GL_PREFIX(DebugMessageInsertARB) ; .set GL_PREFIX(DebugMessageInsertARB), GL_PREFIX(DebugMessageInsert)
	.globl GL_PREFIX(GetDebugMessageLogARB) ; .set GL_PREFIX(GetDebugMessageLogARB), GL_PREFIX(GetDebugMessageLog)
	.globl GL_PREFIX(SecondaryColor3f) ; .set GL_PREFIX(SecondaryColor3f), GL_PREFIX(SecondaryColor3fEXT)
	.globl GL_PREFIX(SecondaryColor3fv) ; .set GL_PREFIX(SecondaryColor3fv), GL_PREFIX(SecondaryColor3fvEXT)
	.globl GL_PREFIX(MultiDrawElements) ; .set GL_PREFIX(MultiDrawElements), GL_PREFIX(MultiDrawElementsEXT)
	.globl GL_PREFIX(FogCoordf) ; .set GL_PREFIX(FogCoordf), GL_PREFIX(FogCoordfEXT)
	.globl GL_PREFIX(FogCoordfv) ; .set GL_PREFIX(FogCoordfv), GL_PREFIX(FogCoordfvEXT)
	.globl GL_PREFIX(VertexAttribI1i) ; .set GL_PREFIX(VertexAttribI1i), GL_PREFIX(VertexAttribI1iEXT)
	.globl GL_PREFIX(VertexAttribI1ui) ; .set GL_PREFIX(VertexAttribI1ui), GL_PREFIX(VertexAttribI1uiEXT)
	.globl GL_PREFIX(VertexAttribI2i) ; .set GL_PREFIX(VertexAttribI2i), GL_PREFIX(VertexAttribI2iEXT)
	.globl GL_PREFIX(VertexAttribI2iv) ; .set GL_PREFIX(VertexAttribI2iv), GL_PREFIX(VertexAttribI2ivEXT)
	.globl GL_PREFIX(VertexAttribI2ui) ; .set GL_PREFIX(VertexAttribI2ui), GL_PREFIX(VertexAttribI2uiEXT)
	.globl GL_PREFIX(VertexAttribI2uiv) ; .set GL_PREFIX(VertexAttribI2uiv), GL_PREFIX(VertexAttribI2uivEXT)
	.globl GL_PREFIX(VertexAttribI3i) ; .set GL_PREFIX(VertexAttribI3i), GL_PREFIX(VertexAttribI3iEXT)
	.globl GL_PREFIX(VertexAttribI3iv) ; .set GL_PREFIX(VertexAttribI3iv), GL_PREFIX(VertexAttribI3ivEXT)
	.globl GL_PREFIX(VertexAttribI3ui) ; .set GL_PREFIX(VertexAttribI3ui), GL_PREFIX(VertexAttribI3uiEXT)
	.globl GL_PREFIX(VertexAttribI3uiv) ; .set GL_PREFIX(VertexAttribI3uiv), GL_PREFIX(VertexAttribI3uivEXT)
	.globl GL_PREFIX(VertexAttribI4i) ; .set GL_PREFIX(VertexAttribI4i), GL_PREFIX(VertexAttribI4iEXT)
	.globl GL_PREFIX(VertexAttribI4iv) ; .set GL_PREFIX(VertexAttribI4iv), GL_PREFIX(VertexAttribI4ivEXT)
	.globl GL_PREFIX(VertexAttribI4ui) ; .set GL_PREFIX(VertexAttribI4ui), GL_PREFIX(VertexAttribI4uiEXT)
	.globl GL_PREFIX(VertexAttribI4uiv) ; .set GL_PREFIX(VertexAttribI4uiv), GL_PREFIX(VertexAttribI4uivEXT)

#if defined (__ELF__) && defined (__linux__)
	.section .note.GNU-stack,"",%progbits
#endif
