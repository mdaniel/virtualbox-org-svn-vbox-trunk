/* Autogenerated file -- do not edit
 * generated by gen_enum_to_str.py
 *
 * Copyright Â© 2017 Intel Corporation
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
 */

#ifndef MESA_VK_ENUM_TO_STR_H
#define MESA_VK_ENUM_TO_STR_H

#include <vulkan/vulkan.h>
#include <vulkan/vk_android_native_buffer.h>

#define _VK_AMD_draw_indirect_count_number (34)
#define _VK_AMD_gcn_shader_number (26)
#define _VK_AMD_gpu_shader_half_float_number (37)
#define _VK_AMD_gpu_shader_int16_number (133)
#define _VK_AMD_mixed_attachment_samples_number (137)
#define _VK_AMD_negative_viewport_height_number (36)
#define _VK_AMD_rasterization_order_number (19)
#define _VK_AMD_shader_ballot_number (38)
#define _VK_AMD_shader_explicit_vertex_parameter_number (22)
#define _VK_AMD_shader_fragment_mask_number (138)
#define _VK_AMD_shader_image_load_store_lod_number (47)
#define _VK_AMD_shader_trinary_minmax_number (21)
#define _VK_AMD_texture_gather_bias_lod_number (42)
#define _VK_ANDROID_native_buffer_number (11)
#define _VK_EXT_acquire_xlib_display_number (90)
#define _VK_EXT_blend_operation_advanced_number (149)
#define _VK_EXT_debug_marker_number (23)
#define _VK_EXT_debug_report_number (12)
#define _VK_EXT_depth_range_unrestricted_number (14)
#define _VK_EXT_direct_mode_display_number (89)
#define _VK_EXT_discard_rectangles_number (100)
#define _VK_EXT_display_control_number (92)
#define _VK_EXT_display_surface_counter_number (91)
#define _VK_EXT_global_priority_number (175)
#define _VK_EXT_hdr_metadata_number (106)
#define _VK_EXT_post_depth_coverage_number (156)
#define _VK_EXT_sample_locations_number (144)
#define _VK_EXT_sampler_filter_minmax_number (131)
#define _VK_EXT_shader_stencil_export_number (141)
#define _VK_EXT_shader_subgroup_ballot_number (65)
#define _VK_EXT_shader_subgroup_vote_number (66)
#define _VK_EXT_shader_viewport_index_layer_number (163)
#define _VK_EXT_swapchain_colorspace_number (105)
#define _VK_EXT_validation_cache_number (161)
#define _VK_EXT_validation_flags_number (62)
#define _VK_GOOGLE_display_timing_number (93)
#define _VK_IMG_filter_cubic_number (16)
#define _VK_IMG_format_pvrtc_number (55)
#define _VK_KHR_16bit_storage_number (84)
#define _VK_KHR_android_surface_number (9)
#define _VK_KHR_bind_memory2_number (158)
#define _VK_KHR_dedicated_allocation_number (128)
#define _VK_KHR_descriptor_update_template_number (86)
#define _VK_KHR_display_number (3)
#define _VK_KHR_display_swapchain_number (4)
#define _VK_KHR_external_fence_number (114)
#define _VK_KHR_external_fence_capabilities_number (113)
#define _VK_KHR_external_fence_fd_number (116)
#define _VK_KHR_external_fence_win32_number (115)
#define _VK_KHR_external_memory_number (73)
#define _VK_KHR_external_memory_capabilities_number (72)
#define _VK_KHR_external_memory_fd_number (75)
#define _VK_KHR_external_memory_win32_number (74)
#define _VK_KHR_external_semaphore_number (78)
#define _VK_KHR_external_semaphore_capabilities_number (77)
#define _VK_KHR_external_semaphore_fd_number (80)
#define _VK_KHR_external_semaphore_win32_number (79)
#define _VK_KHR_get_memory_requirements2_number (147)
#define _VK_KHR_get_physical_device_properties2_number (60)
#define _VK_KHR_get_surface_capabilities2_number (120)
#define _VK_KHR_image_format_list_number (148)
#define _VK_KHR_incremental_present_number (85)
#define _VK_KHR_maintenance1_number (70)
#define _VK_KHR_maintenance2_number (118)
#define _VK_KHR_mir_surface_number (8)
#define _VK_KHR_push_descriptor_number (81)
#define _VK_KHR_relaxed_block_layout_number (145)
#define _VK_KHR_sampler_mirror_clamp_to_edge_number (15)
#define _VK_KHR_sampler_ycbcr_conversion_number (157)
#define _VK_KHR_shader_draw_parameters_number (64)
#define _VK_KHR_shared_presentable_image_number (112)
#define _VK_KHR_storage_buffer_storage_class_number (132)
#define _VK_KHR_surface_number (1)
#define _VK_KHR_swapchain_number (2)
#define _VK_KHR_variable_pointers_number (121)
#define _VK_KHR_wayland_surface_number (7)
#define _VK_KHR_win32_keyed_mutex_number (76)
#define _VK_KHR_win32_surface_number (10)
#define _VK_KHR_xcb_surface_number (6)
#define _VK_KHR_xlib_surface_number (5)
#define _VK_KHX_device_group_number (61)
#define _VK_KHX_device_group_creation_number (71)
#define _VK_KHX_multiview_number (54)
#define _VK_MVK_ios_surface_number (123)
#define _VK_MVK_macos_surface_number (124)
#define _VK_NN_vi_surface_number (63)
#define _VK_NVX_device_generated_commands_number (87)
#define _VK_NVX_multiview_per_view_attributes_number (98)
#define _VK_NV_clip_space_w_scaling_number (88)
#define _VK_NV_dedicated_allocation_number (27)
#define _VK_NV_external_memory_number (57)
#define _VK_NV_external_memory_capabilities_number (56)
#define _VK_NV_external_memory_win32_number (58)
#define _VK_NV_fill_rectangle_number (154)
#define _VK_NV_fragment_coverage_to_color_number (150)
#define _VK_NV_framebuffer_mixed_samples_number (153)
#define _VK_NV_geometry_shader_passthrough_number (96)
#define _VK_NV_glsl_shader_number (13)
#define _VK_NV_sample_mask_override_coverage_number (95)
#define _VK_NV_viewport_array2_number (97)
#define _VK_NV_viewport_swizzle_number (99)
#define _VK_NV_win32_keyed_mutex_number (59)

const char * vk_AttachmentLoadOp_to_str(VkAttachmentLoadOp input);
const char * vk_AttachmentStoreOp_to_str(VkAttachmentStoreOp input);
const char * vk_BlendFactor_to_str(VkBlendFactor input);
const char * vk_BlendOp_to_str(VkBlendOp input);
const char * vk_BlendOverlapEXT_to_str(VkBlendOverlapEXT input);
const char * vk_BorderColor_to_str(VkBorderColor input);
const char * vk_ChromaLocationKHR_to_str(VkChromaLocationKHR input);
const char * vk_ColorSpaceKHR_to_str(VkColorSpaceKHR input);
const char * vk_CommandBufferLevel_to_str(VkCommandBufferLevel input);
const char * vk_CompareOp_to_str(VkCompareOp input);
const char * vk_ComponentSwizzle_to_str(VkComponentSwizzle input);
const char * vk_CoverageModulationModeNV_to_str(VkCoverageModulationModeNV input);
const char * vk_DebugReportObjectTypeEXT_to_str(VkDebugReportObjectTypeEXT input);
const char * vk_DescriptorType_to_str(VkDescriptorType input);
const char * vk_DescriptorUpdateTemplateTypeKHR_to_str(VkDescriptorUpdateTemplateTypeKHR input);
const char * vk_DeviceEventTypeEXT_to_str(VkDeviceEventTypeEXT input);
const char * vk_DiscardRectangleModeEXT_to_str(VkDiscardRectangleModeEXT input);
const char * vk_DisplayEventTypeEXT_to_str(VkDisplayEventTypeEXT input);
const char * vk_DisplayPowerStateEXT_to_str(VkDisplayPowerStateEXT input);
const char * vk_DynamicState_to_str(VkDynamicState input);
const char * vk_Filter_to_str(VkFilter input);
const char * vk_Format_to_str(VkFormat input);
const char * vk_FrontFace_to_str(VkFrontFace input);
const char * vk_ImageLayout_to_str(VkImageLayout input);
const char * vk_ImageTiling_to_str(VkImageTiling input);
const char * vk_ImageType_to_str(VkImageType input);
const char * vk_ImageViewType_to_str(VkImageViewType input);
const char * vk_IndexType_to_str(VkIndexType input);
const char * vk_IndirectCommandsTokenTypeNVX_to_str(VkIndirectCommandsTokenTypeNVX input);
const char * vk_InternalAllocationType_to_str(VkInternalAllocationType input);
const char * vk_LogicOp_to_str(VkLogicOp input);
const char * vk_ObjectEntryTypeNVX_to_str(VkObjectEntryTypeNVX input);
const char * vk_ObjectType_to_str(VkObjectType input);
const char * vk_PhysicalDeviceType_to_str(VkPhysicalDeviceType input);
const char * vk_PipelineBindPoint_to_str(VkPipelineBindPoint input);
const char * vk_PipelineCacheHeaderVersion_to_str(VkPipelineCacheHeaderVersion input);
const char * vk_PointClippingBehaviorKHR_to_str(VkPointClippingBehaviorKHR input);
const char * vk_PolygonMode_to_str(VkPolygonMode input);
const char * vk_PresentModeKHR_to_str(VkPresentModeKHR input);
const char * vk_PrimitiveTopology_to_str(VkPrimitiveTopology input);
const char * vk_QueryType_to_str(VkQueryType input);
const char * vk_QueueGlobalPriorityEXT_to_str(VkQueueGlobalPriorityEXT input);
const char * vk_RasterizationOrderAMD_to_str(VkRasterizationOrderAMD input);
const char * vk_Result_to_str(VkResult input);
const char * vk_SamplerAddressMode_to_str(VkSamplerAddressMode input);
const char * vk_SamplerMipmapMode_to_str(VkSamplerMipmapMode input);
const char * vk_SamplerReductionModeEXT_to_str(VkSamplerReductionModeEXT input);
const char * vk_SamplerYcbcrModelConversionKHR_to_str(VkSamplerYcbcrModelConversionKHR input);
const char * vk_SamplerYcbcrRangeKHR_to_str(VkSamplerYcbcrRangeKHR input);
const char * vk_SharingMode_to_str(VkSharingMode input);
const char * vk_StencilOp_to_str(VkStencilOp input);
const char * vk_StructureType_to_str(VkStructureType input);
const char * vk_SubpassContents_to_str(VkSubpassContents input);
const char * vk_SystemAllocationScope_to_str(VkSystemAllocationScope input);
const char * vk_TessellationDomainOriginKHR_to_str(VkTessellationDomainOriginKHR input);
const char * vk_ValidationCacheHeaderVersionEXT_to_str(VkValidationCacheHeaderVersionEXT input);
const char * vk_ValidationCheckEXT_to_str(VkValidationCheckEXT input);
const char * vk_VertexInputRate_to_str(VkVertexInputRate input);
const char * vk_ViewportCoordinateSwizzleNV_to_str(VkViewportCoordinateSwizzleNV input);

#endif