Mesa 18.1.1 Release Notes / June 1 2018
=======================================

Mesa 18.1.1 is a bug fix release which fixes bugs found since the 18.1.0
release.

Mesa 18.1.1 implements the OpenGL 4.5 API, but the version reported by
glGetString(GL_VERSION) or glGetIntegerv(GL_MAJOR_VERSION) /
glGetIntegerv(GL_MINOR_VERSION) depends on the particular driver being
used. Some drivers don't support all the features required in OpenGL
4.5. OpenGL 4.5 is **only** available if requested at context creation.
Compatibility contexts may report a lower version depending on each
driver.

SHA256 checksums
----------------

::

   366a35f7530a016f2a8284fb0ee5759eeb216b4d6fa47f0e96b89ad2e43faf96  mesa-18.1.1.tar.gz
   d3312a2ede5aac14a47476b208b8e3a401367838330197c4588ab8ad420d7781  mesa-18.1.1.tar.xz

New features
------------

None

Bug fixes
---------

None

Changes
-------

Anuj Phogat (1):

-  i965/glk: Add l3 banks count for 2x6 configuration

Bas Nieuwenhuizen (7):

-  radv: Fix multiview queries.
-  radv: Translate logic ops.
-  radv: Fix up 2_10_10_10 alpha sign.
-  radv: Disable texel buffers with A2 SNORM/SSCALED/SINT for pre-vega.
-  amd/addrlib: Use defines in autotools build.
-  radv: Fix SRGB compute copies.
-  radv: Only expose subgroup shuffles on VI+.

Christoph Haag (1):

-  radv: fix VK_EXT_descriptor_indexing

Dave Airlie (5):

-  radv/resolve: do fmask decompress on all layers.
-  radv: resolve all layers in compute resolve path.
-  radv: use compute path for multi-layer images.
-  virgl: set texture buffer offset alignment to disable
   ARB_texture_buffer_range.
-  tgsi/scan: add hw atomic to the list of memory accessing files

Dylan Baker (2):

-  docs: Add sha sums for release
-  VERSION: bump to 18.1.1 for next release

Eric Engestrom (1):

-  vulkan: don't free uninitialised memory

Francisco Jerez (4):

-  Revert "mesa: simplify \_mesa_is_image_unit_valid for buffers"
-  i965: Move buffer texture size calculation into a common helper
   function.
-  i965: Handle non-zero texture buffer offsets in buffer object range
   calculation.
-  i965: Use intel_bufferobj_buffer() wrapper in image surface state
   setup.

Ilia Mirkin (1):

-  nv30: ensure that displayable formats are marked accordingly

Jan Vesely (1):

-  eg/compute: Use reference counting to handle compute memory pool.

Faith Ekstrand (2):

-  intel/eu: Set EXECUTE_1 when setting the rounding mode in cr0
-  intel/blorp: Support blits and clears on surfaces with offsets

Jose Dapena Paz (1):

-  mesa: do not leak ctx->Shader.ReferencedProgram references

Kai Wasserbäch (1):

-  opencl: autotools: Fix linking order for OpenCL target

Marek Olšák (3):

-  st/mesa: simplify lastLevel determination in st_finalize_texture
-  radeonsi: fix incorrect parentheses around VS-PS varying elimination
-  mesa: handle GL_UNSIGNED_INT64_ARB properly (v2)

Michel Dänzer (1):

-  dri3: Stricter SBC wraparound handling

Nanley Chery (4):

-  i965: Add and use a getter for the miptree aux buffer
-  i965: Add and use a single miptree aux_buf field
-  i965/miptree: Fix handling of uninitialized MCS buffers
-  i965/miptree: Zero-initialize CCS_D buffers

Samuel Pitoiset (2):

-  spirv: fix visiting inner loops with same break/continue block
-  radv: fix centroid interpolation

Stuart Young (1):

-  etnaviv: Fix missing rnndb file in tarballs

Thierry Reding (3):

-  tegra: Treat resources with modifiers as scanout
-  tegra: Fix scanout resources without modifiers
-  tegra: Remove usage of non-stable UAPI

Timothy Arceri (1):

-  mesa: add glUniform*ui{v} support to display lists
