Mesa 20.0.8 Release Notes / 2020-06-11
======================================

Mesa 20.0.8 is a bug fix release which fixes bugs found since the 20.0.7
release.

Mesa 20.0.8 implements the OpenGL 4.6 API, but the version reported by
glGetString(GL_VERSION) or glGetIntegerv(GL_MAJOR_VERSION) /
glGetIntegerv(GL_MINOR_VERSION) depends on the particular driver being
used. Some drivers don't support all the features required in OpenGL
4.6. OpenGL 4.6 is **only** available if requested at context creation.
Compatibility contexts may report a lower version depending on each
driver.

Mesa 20.0.8 implements the Vulkan 1.2 API, but the version reported by
the apiVersion property of the VkPhysicalDeviceProperties struct depends
on the particular driver being used.

SHA256 checksum
---------------

::

     6cf0c010df89680f9b2bc6432ff01400031795e39bceda7535fa00af06740b6c  mesa-20.0.8.tar.xz

New features
------------

-  VK_GOOGLE_user_type on ANV and RADV.

Bug fixes
---------

-  iris/i965: possible regression in 20.0.5 due to changes in buffer
   manager sharing across screens (firefox/mozilla#1634213)
-  [RADV] - Doom Eternal (782330) & Metro Exodus (412020) - Title
   requires 'RADV_DEBUG=zerovram' to eliminate colorful graphical
   aberrations.
-  [RADV] - Doom Eternal (782330) & Metro Exodus (412020) - Title
   requires 'RADV_DEBUG=zerovram' to eliminate colorful graphical
   aberrations.
-  NIR validation failed after glsl to nir, before function inline,
   wrong {src,dst}->type ?
-  Mesa 20.0.7 / 20.1.0-rc4 regression, extremally long shader
   compilation time in NIR
-  Mesa-git build fails on Fedora Rawhide
-  iris/i965: possible regression in 20.0.5 due to changes in buffer
   manager sharing across screens (firefox/mozilla#1634213)
-  Incorrect \_NetBSD_\_ macro inside execmem.c
-  Possible invalid sizeof in device.c
-  mesa trunk master vulkan overlay-layer meson.build warning empty
   configuration_data() object
-  20.0.7: mesa still is not ready to gcc 10 default settings
-  [Gen9/icl] [Bisected] [Regression]
   dEQP-GLES3.functional.shaders.loops.short_circuit.do_while_fragment
   fail
-  Reproduceable i915 gpu hang Intel Iris Plus Graphics (Ice Lake 8x8
   GT2)
-  Double lock in fbobject.c
-  [bisected] Steam crashes when newest Iris built with LTO
-  freedreno: glamor issue with x11 desktops
-  Deadlock in anv_timelines_wait()

Changes
-------

Bas Nieuwenhuizen (3):

-  radv/winsys: Remove extra sizeof multiply.
-  radv: Handle failing to create .cache dir.
-  radv: Provide a better error for permission issues with priorities.

D Scott Phillips (1):

-  anv/gen11+: Disable object level preemption

Danylo Piliaiev (6):

-  anv: Translate relative timeout to absolute when calling
   anv_timelines_wait
-  anv: Fix deadlock in anv_timelines_wait
-  meson: Disable GCC's dead store elimination for memory zeroing custom
   new
-  mesa: Fix double-lock of Shared->FrameBuffers and usage of wrong
   mutex
-  intel/fs: Work around dual-source blending hangs in combination with
   SIMD16
-  glsl: inline functions with unsupported return type before converting
   to nir

Dave Airlie (1):

-  llvmpipe: compute shaders work better with all the threads.

Dylan Baker (10):

-  docs/relnotes Add sha256 sums to 20.0.7
-  .pick_status.json: Update to ceae09da156309327d7ba6f4a59d3a2e9b8837d9
-  .pick_status.json: Update to a887ad7c84e14fdad7907037a39e9fee9d504bf3
-  .pick_status.json: Update to 4504d6374dbe2aa40af519c16765457bcbf81b84
-  .pick_status.json: Update to f0c102c075f8ac76629bb34619187262ccc3e9d8
-  tests: Make tests aware of meson test wrapper
-  .pick_status.json: Update to e58112bc08f99861ac634ede8db0f98cd497fc14
-  radonsi/si_state.c: retab
-  .pick_status.json: Update to 0795241dde1507e0c6a3f9ef07c281ad4f2acf7b
-  vulkan-overlay/meson: use install_data instead of configure_file

Eric Engestrom (3):

-  tree-wide: fix deprecated GitLab URLs
-  glapi: remove deprecated .getchildren() that has been replace with an
   iterator
-  intel: fix gen_sort_tags.py

Erik Faye-Lund (2):

-  zink: use general-layout when blitting to/from same resource
-  nir: reuse existing psiz-variable

Gert Wollny (1):

-  nir: lower_tex: Don't normalize coordinates for TXF with RECT

Ian Romanick (1):

-  anv/tests: Don't rely on assert or changing NDEBUG in tests

Ilia Mirkin (1):

-  nouveau: allow invalidating coherent/persistent buffer backings

Jan Palus (1):

-  targets/opencl: fix build against LLVM>=10 with Polly support

Faith Ekstrand (6):

-  anv:gpu_memcpy: Emit 3DSTATE_VF_INDEXING on Gen8+
-  nir/lower_double_ops: Rework the if (progress) tree
-  nir/opt_deref: Report progress if we remove a deref
-  nir/copy_prop_vars: Record progress in more places
-  intel/vec4: Stomp the return type of RESINFO to UINT32
-  intel/fs: Fix unused texture coordinate zeroing on Gen4-5

Jonathan Marek (1):

-  freedreno/a6xx: use nonbinning VS when GS is used

Joshua Ashton (1):

-  radeonsi: Use TRUNC_COORD on samplers

Lionel Landwerlin (4):

-  iris: fix BO destruction in error path
-  i965: don't forget to set screen on duped image
-  i965: fix export of GEM handles
-  iris: fix export of GEM handles

Lucas Stach (1):

-  etnaviv: retarget transfer to render resource when necessary

Marek Olšák (2):

-  radeonsi: don't expose 16xAA on chips with 1 RB due to an occlusion
   query issue
-  radeonsi: add a hack to disable TRUNC_COORD for shadow samplers

Marek Vasut (1):

-  etnaviv: Disable seamless cube map on GC880

Michel Dänzer (1):

-  util: Change os_same_file_description return type from bool to int

Nataraj Deshpande (1):

-  dri_util: Update internal_format to GL_RGB8 for
   MESA_FORMAT_R8G8B8X8_UNORM

Neha Bhende (1):

-  util: Initialize pipe_shader_state for passthrough and transform
   shaders

Pierre-Eric Pelloux-Prayer (1):

-  omx: fix build with gcc 10

Rhys Perry (4):

-  nir: fix lowering to scratch with boolean access
-  aco: fix interaction with 3f branch workaround and p_constaddr
-  aco: check instruction format before waiting for a previous SMEM
   store
-  aco: preserve more fields when combining additions into SMEM

Rob Clark (1):

-  freedreno: clear last_fence after resource tracking

Samuel Pitoiset (4):

-  spirv,radv,anv: implement no-op VK_GOOGLE_user_type
-  nir/lower_explicit_io: fix NON_UNIFORM access for UBO loads
-  radv: enable zero VRAM for Doom Eternal
-  radv: enable zero VRAM for all VKD3D (DX12->VK) games

Timothy Arceri (3):

-  glsl: stop cascading errors if process_parameters() fails
-  radv: fix regression with builtin cache
-  glsl: fix potential slow compile times for GLSLOptimizeConservatively

Vinson Lee (4):

-  zink: Check fopen result.
-  r300g: Remove extra printf format specifiers.
-  vdpau: Fix wrong calloc sizeof argument.
-  mesa: Fix NetBSD compiler macro.

Yevhenii Kolesnikov (1):

-  intel/compiler: fix cmod propagation optimisations
