Mesa 22.2.1 Release Notes / 2022-10-11
======================================

Mesa 22.2.1 is a bug fix release which fixes bugs found since the 22.2.0 release.

Mesa 22.2.1 implements the OpenGL 4.6 API, but the version reported by
glGetString(GL_VERSION) or glGetIntegerv(GL_MAJOR_VERSION) /
glGetIntegerv(GL_MINOR_VERSION) depends on the particular driver being used.
Some drivers don't support all the features required in OpenGL 4.6. OpenGL
4.6 is **only** available if requested at context creation.
Compatibility contexts may report a lower version depending on each driver.

Mesa 22.2.1 implements the Vulkan 1.3 API, but the version reported by
the apiVersion property of the VkPhysicalDeviceProperties struct
depends on the particular driver being used.

SHA256 checksum
---------------

::

    0079beac0a33f45e7e0aec59e6913eafbc4268a3f1e2e330017440494f91b13c  mesa-22.2.1.tar.xz



New features
------------

- None


Bug fixes
---------

- r600: Shadows incorrecly rendered on Counter-Strike: Global Offensive with the NIR backend
- radeonsi/radv: Discrepancy in handling wd_switch_on_eop
- Shadows rendering issue in Deathloop
- RADV: Regression with RPCS3 where nothing renders
- [RADV][bisected] commit 3714c89d0ebf0c541d8f7a7a807ce7c1bfe3cfea at least lead to GPU hang when I run the game "Quake II RTX"


Changes
-------

Caio Oliveira (1):

- nir/lower_task_shader: Don't fail adding a launch when last instruction is a jump

Connor Abbott (3):

- tu: Fix maxPerStageDescriptorUpdateAfterBindInputAttachments
- ir3/analyze_ubo_ranges: Account for reserved consts
- ir3/analyze_ubo_ranges: Account for reserved consts better

Daniel Schürmann (1):

- aco/optimizer: disallow can_eliminate_and_exec() with s_not

Dave Airlie (5):

- lavapipe: fix 3d depth stencil image clearing.
- lavapipe: take layers into account around render surface creation.
- lavapipe: handle view mask layer count properly for begin rendering.
- llvmpipe: memset empty images in the key
- llvmpipe: bind sampler views/images properly.

Dylan Baker (15):

- docs: add release notes for 22.2.0
- docs: Add sha256 sum for 22.2.0
- .pick_status.json: Update to 3730be9873d556918a20795b37399b7e2e9630b5
- .pick_status.json: Update to c268ae9efe602129b848c800dca83411d55c3aab
- .pick_status.json: Mark 49efa73ba11c4cacaed0052b984e1fb884cf7600 as denominated
- .pick_status.json: Mark 5b7c2dffc43eb7ada61807a6e679cc2c1b3b2682 as denominated
- .pick_status.json: Mark 1aacd9492de42412c6c9ca79d48a40c4ffebcd79 as backported
- .pick_status.json: Mark cbad4adc133b16c803ec9445c8dd144bc5023a62 as denominated
- .pick_status.json: Mark 40a235c9a82027bcb92d34b7386ea6b1a2e1d587 as denominated
- .pick_status.json: Update to 3ed712f7483791aa0a256472d276ff5a83c643bc
- .pick_status.json: Update to e5631add0d1c97da4686f474735d45705facd308
- .pick_status.json: Mark 5af6dad179dc4140964ab444a2a7f8cf8d16c561 as denominated
- .pick_status.json: Update to 68f3c38c8011e3ff304a67b6ffb33fd21ee65b0c
- .pick_status.json: Mark ff933485b7e328c5041050d5e41a2dd28a032a92 as denominated
- docs: remove new_features.txt

Emma Anholt (2):

- turnip: Fix the "written stencil is unmodified" check.
- turnip: Fix busy-waiting on syncobjs with OS_TIMEOUT_INFINITE.

Erik Faye-Lund (4):

- mesa/st: always use normalized coords for samplers
- mesa/st: always use normalized coords for samplers
- mesa/st: always use normalized coords for samplers
- docs: fixup broken rst syntax

Feng Jiang (1):

- virgl/vtest: fix memory overwrite problem in virgl_vtest_send_get_caps()

Gert Wollny (2):

- r600/sfn: Handle shifts on Cayman
- nir_lower_to_source_mods: Don't sneek in an abs modifier from parent

James Park (1):

- meson,amd: Remove Windows libelf wrap

Faith Ekstrand (3):

- iris: Use a larger alignment for buffer allocations
- iris: Fix more BO alignments
- iris: Handle resource offsets in buffer copies

Jesse Natalie (1):

- u_atomic: Add a helper for pointer compare-exchange

Jonathan (2):

- gallium/u_threaded: Prepare for buffer sharedness tracking
- gallium/u_threaded: buffer sharedness tracking

Jonathan Gray (1):

- iris: check i915 features after hw gen

Lionel Landwerlin (12):

- anv: clear descriptorsets if AllocateDescriptorSets fails
- anv: add missing wokraround for texture cache invalidate
- intel/nir/rt: fixup generate hit
- intel/nir/rt: spill/fill the entire ray query data
- intel/nir/rt: fix ray query proceed level
- intel/nir/rt: change scratch check validation
- intel/nir/rt: store ray query state in scratch
- intel/fs: fixup a64 messages
- intel/nir: fixup preserved metadata in rayquery lowering
- intel/nir: fix potential invalid function impl ptr usage
- intel/nir: disable assert on async stack id
- anv: remove HDC flush from invalidate bits

Marcin Ślusarz (1):

- intel/compiler: remove second shading rate lowering for mesh

Marek Olšák (1):

- radeonsi: don't flush asynchronously for fence_server_signal

Martin Krastev (1):

- meson: add svga gallium driver to 'auto' group on arm/aarch64

Mike Blumenkrantz (23):

- zink: uncap ssbo size
- zink: fix atomic ssbo indexing with non-32bit values
- zink: split up get_clear_data()
- zink: make void clears more robust
- zink: fix/relax resolve geometry check
- zink: fix atomic ssbo fadd offsets
- st/bitmap: use normalized coords in samplers with lowered rects
- st/drawpixels: use normalized coords in samplers with lowered rects
- zink: handle culldistance xfb outputs like clipdistance
- lavapipe: set writemask for compute shader buffers
- lavapipe: propagate shader access info across libraries
- zink: free vertex_state_cache on shutdown
- zink: always unset var->data.explicit_xfb_buffer
- zink: avoid overflow when clamping bufferviews
- zink: always run optimize_nir after lower_64bit_vars
- zink: don't flatten 64bit arrays during rewrite
- mesa: set normalized_coords for bindless texture buffer samplers
- aux/trace: dump depth_clamp for rasterizer state
- zink: set layouts before possibly reordering image copies
- zink: add a draw barrier when unbinding a sampler-bound fb surface
- glthread: handle DeleteBuffers(n=-1) gracefully
- zink: fix/improve handling for multi-component bitfield ops
- pipe-loader: fix zink driinfo header path

Pierre-Eric Pelloux-Prayer (3):

- radeonsi/gfx11: don't set VERTS_PER_SUBGRP to 0
- tc: do a GPU->CPU copy to initialize cpu_storage
- tc: don't use CPU storage for glBufferData

Qiang Yu (1):

- nir: fix nir_xfb_info buffer_to_stream length

Rhys Perry (1):

- aco: fix VMEMtoScalarWriteHazard s_waitcnt mitigation

Samuel Pitoiset (1):

- radv: make sure to initialize wd_switch_on_eop before checking its value

SoroushIMG (1):

- zink: fix nir_op_unpack_64_2x32 emission

Tapani Pälli (1):

- mesa/st: fix a set_sampler_views call parameter order

Timur Kristóf (4):

- aco/optimizer_postRA: Mark a register overwritten when predecessors disagree.
- aco/optimizer_postRA: Don't assume all operand registers were written by same instr.
- aco/optimizer_postRA: Fix logical control flow handling.
- radv: Use a fallback for marketing name when libdrm doesn't know it.

Yiwei Zhang (1):

- mesa/st: emit string marker based on PIPE_CAP_STRING_MARKER

Yonggang Luo (3):

- drm-shim: drop gnu99 override
- ci/docs: Stick to specific version of python packages
- util: Disable usage of __attribute__((__const__)) when the compiler is clang

nyanmisaka (1):

- gallium: Do not include offscreen winsys if glx is disabled
