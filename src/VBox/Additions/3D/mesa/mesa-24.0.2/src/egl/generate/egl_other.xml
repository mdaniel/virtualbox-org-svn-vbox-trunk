<?xml version="1.0" encoding="UTF-8"?>
<registry>
    <!--
     (C) Copyright 2016, NVIDIA CORPORATION.
     All Rights Reserved.

     Permission is hereby granted, free of charge, to any person obtaining a
     copy of this software and associated documentation files (the "Software"),
     to deal in the Software without restriction, including without limitation
     on the rights to use, copy, modify, merge, publish, distribute, sub
     license, and/or sell copies of the Software, and to permit persons to whom
     the Software is furnished to do so, subject to the following conditions:

     The above copyright notice and this permission notice (including the next
     paragraph) shall be included in all copies or substantial portions of the
     Software.

     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
     IBM AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
     IN THE SOFTWARE.

     Authors:
        Kyle Brenneman <kbrenneman@nvidia.com>
    -->

    <comment>
        This file contains any EGL extension functions that are missing from
        the normal egl.xml list.
    </comment>
    <types>
        <type>struct <name>mesa_glinterop_device_info</name>;</type>
        <type>struct <name>mesa_glinterop_export_in</name>;</type>
        <type>struct <name>mesa_glinterop_export_out</name>;</type>
        <type>struct <name>mesa_glinterop_flush_out</name>;</type>
    </types>
    <commands namespace="EGL">
        <!-- EGL_WL_bind_wayland_display -->
        <command>
            <proto>struct wl_buffer * <name>eglCreateWaylandBufferFromImageWL</name></proto>
            <param><ptype>EGLDisplay</ptype> <name>dpy</name></param>
            <param><ptype>EGLImage</ptype> <name>image</name></param>
        </command>

        <command>
            <proto>EGLBoolean <name>eglUnbindWaylandDisplayWL</name></proto>
            <param><ptype>EGLDisplay</ptype> <name>dpy</name></param>
            <param><ptype>struct wl_display *</ptype> <name>display</name></param>
        </command>

        <command>
            <proto>EGLBoolean <name>eglQueryWaylandBufferWL</name></proto>
            <param><ptype>EGLDisplay</ptype> <name>dpy</name></param>
            <param><ptype>struct wl_resource *</ptype> <name>buffer</name></param>
            <param><ptype>EGLint</ptype> <name>attribute</name></param>
            <param><ptype>EGLint *</ptype> <name>value</name></param>
        </command>

        <command>
            <proto>EGLBoolean <name>eglBindWaylandDisplayWL</name></proto>
            <param><ptype>EGLDisplay</ptype> <name>dpy</name></param>
            <param><ptype>struct wl_display *</ptype> <name>display</name></param>
        </command>

        <!-- EGL_CHROMIUM_get_sync_values -->
        <command>
            <proto>EGLBoolean <name>eglGetSyncValuesCHROMIUM</name></proto>
            <param><ptype>EGLDisplay</ptype> <name>display</name></param>
            <param><ptype>EGLSurface</ptype> <name>surface</name></param>
            <param><ptype>EGLuint64KHR *</ptype> <name>ust</name></param>
            <param><ptype>EGLuint64KHR *</ptype> <name>msc</name></param>
            <param><ptype>EGLuint64KHR *</ptype> <name>sbc</name></param>
        </command>

        <!-- EGL_ANGLE_sync_control_rate -->
        <command>
            <proto>EGLBoolean <name>eglGetMscRateANGLE</name></proto>
            <param><ptype>EGLDisplay</ptype> <name>display</name></param>
            <param><ptype>EGLSurface</ptype> <name>surface</name></param>
            <param><ptype>EGLint *</ptype> <name>numerator</name></param>
            <param><ptype>EGLint *</ptype> <name>denominator</name></param>
        </command>

        <!-- EGL_MESA_gl_interop -->
        <command>
            <proto><ptype>EGLint</ptype> <name>eglGLInteropQueryDeviceInfoMESA</name></proto>
            <param><ptype>EGLDisplay</ptype> <name>dpy</name></param>
            <param><ptype>EGLContext</ptype> <name>ctx</name></param>
            <param>struct <ptype>mesa_glinterop_device_info</ptype> *<name>out</name></param>
        </command>
        <command>
            <proto><ptype>EGLint</ptype> <name>eglGLInteropExportObjectMESA</name></proto>
            <param><ptype>EGLDisplay</ptype> <name>dpy</name></param>
            <param><ptype>EGLContext</ptype> <name>ctx</name></param>
            <param>struct <ptype>mesa_glinterop_export_in</ptype> *<name>in</name></param>
            <param>struct <ptype>mesa_glinterop_export_out</ptype> *<name>out</name></param>
        </command>
        <command>
            <proto><ptype>EGLint</ptype> <name>eglGLInteropFlushObjectsMESA</name></proto>
            <param><ptype>EGLDisplay</ptype> <name>dpy</name></param>
            <param><ptype>EGLContext</ptype> <name>ctx</name></param>
            <param>unsigned <name>count</name></param>
            <param>struct <ptype>mesa_glinterop_export_in</ptype> *<name>objects</name></param>
            <param>struct <ptype>mesa_glinterop_flush_out</ptype> *<name>out</name></param>
        </command>
    </commands>
</registry>


