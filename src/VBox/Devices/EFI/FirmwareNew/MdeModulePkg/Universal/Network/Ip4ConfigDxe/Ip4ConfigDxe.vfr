/** @file
  Vfr file for IP4 config.

Copyright (c) 2009 - 2010, Intel Corporation. All rights reserved.<BR>
This program and the accompanying materials
are licensed and made available under the terms and conditions of the BSD License
which accompanies this distribution.  The full text of the license may be found at
http://opensource.org/licenses/bsd-license.php

THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.

**/
#include "Ip4NvData.h"

#define EFI_NETWORK_DEVICE_CLASS  0x04

formset
  guid     = EFI_NIC_IP4_CONFIG_NVDATA_GUID,
  title    = STRING_TOKEN(STR_IP4_CONFIG_FORM_TITLE),
  help     = STRING_TOKEN(STR_IP4_CONFIG_FORM_HELP),
  class    = EFI_NETWORK_DEVICE_CLASS,
  subclass = 0x03,

  varstore IP4_CONFIG_IFR_NVDATA,
    name = EfiNicIp4ConfigVariable,
    guid = EFI_NIC_IP4_CONFIG_NVDATA_GUID;

  form formid = FORMID_MAIN_FORM,
    title  = STRING_TOKEN(STR_IP4_DEVICE_FORM_TITLE);

    checkbox varid = EfiNicIp4ConfigVariable.Configure,
            prompt = STRING_TOKEN(STR_IP4_CONFIGURE),
            help   = STRING_TOKEN(STR_IP4_CONFIGURE),
            flags  = INTERACTIVE,
            key    = KEY_ENABLE,
    endcheckbox;

    suppressif ideqval EfiNicIp4ConfigVariable.Configure == 0x00;

      checkbox varid = EfiNicIp4ConfigVariable.DhcpEnable,
              prompt = STRING_TOKEN(STR_IP4_ENABLE_DHCP),
              help   = STRING_TOKEN(STR_IP4_ENABLE_DHCP),
              flags  = INTERACTIVE,
              key    = KEY_DHCP_ENABLE,
      endcheckbox;
    endif;

    suppressif ideqval EfiNicIp4ConfigVariable.DhcpEnable == 0x01 OR ideqval EfiNicIp4ConfigVariable.Configure == 0x00;

      string  varid   = EfiNicIp4ConfigVariable.StationAddress,
              prompt  = STRING_TOKEN(STR_IP4_LOCAL_IP_ADDRESS),
              help    = STRING_TOKEN(STR_IP4_IP_ADDRESS_HELP),
              flags   = INTERACTIVE,
              key     = KEY_LOCAL_IP,
              minsize = IP_MIN_SIZE,
              maxsize = IP_MAX_SIZE,
      endstring;

      string  varid   = EfiNicIp4ConfigVariable.SubnetMask,
              prompt  = STRING_TOKEN(STR_IP4_LOCAL_MASK),
              help    = STRING_TOKEN(STR_IP4_IP_ADDRESS_HELP),
              flags   = INTERACTIVE,
              key     = KEY_SUBNET_MASK,
              minsize = IP_MIN_SIZE,
             maxsize = IP_MAX_SIZE,
      endstring;

      string  varid   = EfiNicIp4ConfigVariable.GatewayAddress,
              prompt  = STRING_TOKEN(STR_IP4_LOCAL_GATEWAY),
              help    = STRING_TOKEN(STR_IP4_IP_ADDRESS_HELP),
              flags   = INTERACTIVE,
              key     = KEY_GATE_WAY,
              minsize = IP_MIN_SIZE,
              maxsize = IP_MAX_SIZE,
      endstring;

    endif;

    subtitle text = STRING_TOKEN(STR_NULL);

    text
      help   = STRING_TOKEN(STR_SAVE_CHANGES),
      text   = STRING_TOKEN(STR_SAVE_CHANGES),
      flags  = INTERACTIVE,
      key    = KEY_SAVE_CHANGES;

  endform;

endformset;

