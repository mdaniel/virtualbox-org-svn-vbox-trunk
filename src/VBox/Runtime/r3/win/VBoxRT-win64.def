; $Id$
;; @file
; IPRT - Win64 ASM exports.
;

;
; Copyright (C) 2006-2024 Oracle and/or its affiliates.
;
; This file is part of VirtualBox base platform packages, as
; available from https://www.virtualbox.org.
;
; This program is free software; you can redistribute it and/or
; modify it under the terms of the GNU General Public License
; as published by the Free Software Foundation, in version 3 of the
; License.
;
; This program is distributed in the hope that it will be useful, but
; WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
; General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program; if not, see <https://www.gnu.org/licenses>.
;
; The contents of this file may alternatively be used under the terms
; of the Common Development and Distribution License Version 1.0
; (CDDL), a copy of it is provided in the "COPYING.CDDL" file included
; in the VirtualBox distribution, in which case the provisions of the
; CDDL are applicable instead of those of the GPL.
;
; You may elect to license modified versions of this file under the
; terms and conditions of either the GPL or the CDDL or both.
;
; SPDX-License-Identifier: GPL-3.0-only OR CDDL-1.0
;

EXPORTS
    ASMAtomicBitClear
    ASMAtomicBitToggle
    ASMAtomicBitTestAndToggle
    ASMBitFirstClear
    ASMBitFirstSet
    ASMAtomicReadU64
    ASMAtomicXchgU8
    ASMAtomicXchgU16
    ASMGetFlags
    ASMProbeReadByte
    ASMSetFlags
    ASMMultU64ByU32DivByU32
    ASMNopPause

    RTTimeNanoTSLegacySyncInvarNoDelta
    RTTimeNanoTSLFenceSyncInvarNoDelta
    RTTimeNanoTSLegacyAsyncUseApicId
    RTTimeNanoTSLegacyAsyncUseRdtscp
    RTTimeNanoTSLegacyAsyncUseIdtrLim
    RTTimeNanoTSLegacySyncInvarWithDeltaUseApicId
    RTTimeNanoTSLegacySyncInvarWithDeltaUseRdtscp
    RTTimeNanoTSLegacySyncInvarWithDeltaUseIdtrLim
    RTTimeNanoTSLFenceAsyncUseApicId
    RTTimeNanoTSLFenceAsyncUseRdtscp
    RTTimeNanoTSLFenceAsyncUseIdtrLim
    RTTimeNanoTSLFenceSyncInvarWithDeltaUseApicId
    RTTimeNanoTSLFenceSyncInvarWithDeltaUseRdtscp
    RTTimeNanoTSLFenceSyncInvarWithDeltaUseIdtrLim

    RTStrMemFind32

    ; Export aliases for noexcept affected methods.
    ?setConsumerCallback@RTCRestBinaryResponse@@QEAAXP6AHPEAV1@PEBX_KI22@_EPEAX@Z=?setConsumerCallback@RTCRestBinaryResponse@@QEAAXP6AHPEAV1@PEBX_KI22@ZPEAX@Z     ; before-noexcept ; (public: void __cdecl RTCRestBinaryResponse::setConsumerCallback(int (__cdecl*)(class RTCRestBinaryResponse * __ptr64,void const * __ptr64,unsigned __int64,unsigned int,unsigned __int64,unsigned __int64) noexcept,void * __ptr64) __ptr64
    ?setConsumerCallback@RTCRestBinaryResponse@@QEAAXP6AHPEAV1@PEBX_KI22@ZPEAX@Z=?setConsumerCallback@RTCRestBinaryResponse@@QEAAXP6AHPEAV1@PEBX_KI22@_EPEAX@Z     ; after-noexcept  ; (public: void __cdecl RTCRestBinaryResponse::setConsumerCallback(int (__cdecl*)(class RTCRestBinaryResponse * __ptr64,void const * __ptr64,unsigned __int64,unsigned int,unsigned __int64,unsigned __int64),void * __ptr64) __ptr64)
    ?setProducerCallback@RTCRestBinaryParameter@@QEAAXP6AHPEAV1@PEAX_K2PEA_K@_E12@Z=?setProducerCallback@RTCRestBinaryParameter@@QEAAXP6AHPEAV1@PEAX_K2PEA_K@Z12@Z ; before-noexcept ; (public: void __cdecl RTCRestBinaryParameter::setProducerCallback(int (__cdecl*)(class RTCRestBinaryParameter * __ptr64,void * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64 * __ptr64) noexcept,void * __ptr64,unsigned __int64) __ptr64)
    ?setProducerCallback@RTCRestBinaryParameter@@QEAAXP6AHPEAV1@PEAX_K2PEA_K@Z12@Z=?setProducerCallback@RTCRestBinaryParameter@@QEAAXP6AHPEAV1@PEAX_K2PEA_K@_E12@Z ; after-noexcept  ; (public: void __cdecl RTCRestBinaryParameter::setProducerCallback(int (__cdecl*)(class RTCRestBinaryParameter * __ptr64,void * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64 * __ptr64),void * __ptr64,unsigned __int64) __ptr64)

