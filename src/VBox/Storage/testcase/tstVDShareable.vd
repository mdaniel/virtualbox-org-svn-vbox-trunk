/* $Id$ */
/**
 * Storage: Testcase for shareable disks.
 */

/*
 * Copyright (C) 2011-2024 Oracle and/or its affiliates.
 *
 * This file is part of VirtualBox base platform packages, as
 * available from https://www.virtualbox.org.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, in version 3 of the
 * License.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <https://www.gnu.org/licenses>.
 *
 * SPDX-License-Identifier: GPL-3.0-only
 */

void main()
{
    /* Init I/O RNG for generating random data for writes. */
    iorngcreate(10M, "manual", 1234567890);

    /* Create disk containers. */
    createdisk("shared1", false);
    createdisk("shared2", false);

    /* Create the disk and close it. */
    create("shared1", "base", "tstShared.vdi", "fixed", "VDI", 20M, false, false);
    close("shared1", "all", false);

    /* Open the disk with sharing enabled. */
    open("shared1", "tstShared.vdi", "VDI", true /* fAsync */, true /* fShareable */, false, false, false, false);
    open("shared2", "tstShared.vdi", "VDI", true /* fAsync */, true /* fShareable */, false, false, false, false);

    /* Write to one disk and verify that the other disk can see the content. */
    io("shared1", true, 32, "seq", 64K, 0, 20M, 20M, 100, "none");
    comparedisks("shared1", "shared2");

    /* Write to the second disk and verify that the first can see the content. */
    io("shared2", true, 64, "seq", 8K, 0, 20M, 20M, 50, "none");
    comparedisks("shared1", "shared2");

    /* Close but don't delete yet. */
    close("shared1", "all", false);
    close("shared2", "all", false);

    /* Open and delete. */
    open("shared1", "tstShared.vdi", "VDI", false /* fAsync */, false /* fShareable */, false, false, false, false);
    close("shared1", "single", true);

    /* Cleanup */
    destroydisk("shared1");
    destroydisk("shared2");
    iorngdestroy();
}

