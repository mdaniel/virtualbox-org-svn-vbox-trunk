; $Id$
;; @file
; BS3Kit - bs3-cpu-decoding-1, assembly template.
;

;
; Copyright (C) 2007-2019 Oracle Corporation
;
; This file is part of VirtualBox Open Source Edition (OSE), as
; available from http://www.virtualbox.org. This file is free software;
; you can redistribute it and/or modify it under the terms of the GNU
; General Public License (GPL) as published by the Free Software
; Foundation, in version 2 as it comes in the "COPYING" file of the
; VirtualBox OSE distribution. VirtualBox OSE is distributed in the
; hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
;
; The contents of this file may alternatively be used under the terms
; of the Common Development and Distribution License Version 1.0
; (CDDL) only, as it comes in the "COPYING.CDDL" file of the
; VirtualBox OSE distribution, in which case the provisions of the
; CDDL are applicable instead of those of the GPL.
;
; You may elect to license modified versions of this file under the
; terms and conditions of either the GPL or the CDDL or both.
;


;*********************************************************************************************************************************
;*  Header Files                                                                                                                 *
;*********************************************************************************************************************************
%include "bs3kit-template-header.mac"   ; setup environment


;*********************************************************************************************************************************
;*  External Symbols                                                                                                             *
;*********************************************************************************************************************************
TMPL_BEGIN_TEXT


%ifdef BS3_INSTANTIATING_CMN

BS3_PROC_BEGIN_CMN bs3CpuDecoding1_LoadXmm0, BS3_PBC_NEAR
        BS3_CALL_CONV_PROLOG 1
        push    xBP
        mov     xBP, xSP

%if TMPL_BITS == 16
        push    es
        push    bx
        les     bx, [xBP + xCB + cbCurRetAddr]
        movupd  xmm0, [es:bx]
        pop     bx
        pop     es
%else
        mov     xAX, [xBP + xCB + cbCurRetAddr]
        movupd  xmm0, [xAX]
%endif

        leave
        BS3_CALL_CONV_EPILOG 1
        BS3_HYBRID_RET
BS3_PROC_END_CMN   bs3CpuDecoding1_LoadXmm0


BS3_PROC_BEGIN_CMN bs3CpuDecoding1_LoadXmm1, BS3_PBC_NEAR
        BS3_CALL_CONV_PROLOG 1
        push    xBP
        mov     xBP, xSP

%if TMPL_BITS == 16
        push    es
        push    bx
        les     bx, [xBP + xCB + cbCurRetAddr]
        movupd  xmm1, [es:bx]
        pop     bx
        pop     es
%else
        mov     xAX, [xBP + xCB + cbCurRetAddr]
        movupd  xmm1, [xAX]
%endif

        leave
        BS3_CALL_CONV_EPILOG 1
        BS3_HYBRID_RET
BS3_PROC_END_CMN   bs3CpuDecoding1_LoadXmm1


BS3_PROC_BEGIN_CMN bs3CpuDecoding1_SaveXmm0, BS3_PBC_NEAR
        BS3_CALL_CONV_PROLOG 1
        push    xBP
        mov     xBP, xSP

%if TMPL_BITS == 16
        push    es
        push    bx
        les     bx, [xBP + xCB + cbCurRetAddr]
        movupd  [es:bx], xmm0
        pop     bx
        pop     es
%else
        mov     xAX, [xBP + xCB + cbCurRetAddr]
        movupd  [xAX], xmm0
%endif

        leave
        BS3_CALL_CONV_EPILOG 1
        BS3_HYBRID_RET
BS3_PROC_END_CMN   bs3CpuDecoding1_SaveXmm0


%endif

%include "bs3kit-template-footer.mac"   ; reset environment

