/* $Id$ */
/** @file
 * Autogenerate symbol mangling header for openssl.
 */

/*
 * Copyright (C) 2011-2023 Oracle and/or its affiliates.
 *
 * This file is part of VirtualBox base platform packages, as
 * available from https://www.virtualbox.org.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, in version 3 of the
 * License.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <https://www.gnu.org/licenses>.
 *
 * SPDX-License-Identifier: GPL-3.0-only
 */

#ifndef ___openssl_mangling_h___
#define ___openssl_mangling_h___
# ifdef VBOX_IN_EXTPACK
#  define OPENSSL_MANGLER(a_Name) OracleExtPack_ ## a_Name
#  define OPENSSL_MANGLER_ASM(a_Name) _OracleExtPack_ ## a_Name
# else
#  define OPENSSL_MANGLER(a_Name) VBox_ ## a_Name
#  define OPENSSL_MANGLER_ASM(a_Name) _VBox_ ## a_Name
# endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ACCESS_DESCRIPTION_free
#  define ACCESS_DESCRIPTION_free OPENSSL_MANGLER(ACCESS_DESCRIPTION_free)
# endif
#else
# ifndef _ACCESS_DESCRIPTION_free
#  define _ACCESS_DESCRIPTION_free OPENSSL_MANGLER_ASM(ACCESS_DESCRIPTION_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ACCESS_DESCRIPTION_it
#  define ACCESS_DESCRIPTION_it OPENSSL_MANGLER(ACCESS_DESCRIPTION_it)
# endif
#else
# ifndef _ACCESS_DESCRIPTION_it
#  define _ACCESS_DESCRIPTION_it OPENSSL_MANGLER_ASM(ACCESS_DESCRIPTION_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ACCESS_DESCRIPTION_new
#  define ACCESS_DESCRIPTION_new OPENSSL_MANGLER(ACCESS_DESCRIPTION_new)
# endif
#else
# ifndef _ACCESS_DESCRIPTION_new
#  define _ACCESS_DESCRIPTION_new OPENSSL_MANGLER_ASM(ACCESS_DESCRIPTION_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSIONS_free
#  define ADMISSIONS_free OPENSSL_MANGLER(ADMISSIONS_free)
# endif
#else
# ifndef _ADMISSIONS_free
#  define _ADMISSIONS_free OPENSSL_MANGLER_ASM(ADMISSIONS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSIONS_get0_admissionAuthority
#  define ADMISSIONS_get0_admissionAuthority OPENSSL_MANGLER(ADMISSIONS_get0_admissionAuthority)
# endif
#else
# ifndef _ADMISSIONS_get0_admissionAuthority
#  define _ADMISSIONS_get0_admissionAuthority OPENSSL_MANGLER_ASM(ADMISSIONS_get0_admissionAuthority)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSIONS_get0_namingAuthority
#  define ADMISSIONS_get0_namingAuthority OPENSSL_MANGLER(ADMISSIONS_get0_namingAuthority)
# endif
#else
# ifndef _ADMISSIONS_get0_namingAuthority
#  define _ADMISSIONS_get0_namingAuthority OPENSSL_MANGLER_ASM(ADMISSIONS_get0_namingAuthority)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSIONS_get0_professionInfos
#  define ADMISSIONS_get0_professionInfos OPENSSL_MANGLER(ADMISSIONS_get0_professionInfos)
# endif
#else
# ifndef _ADMISSIONS_get0_professionInfos
#  define _ADMISSIONS_get0_professionInfos OPENSSL_MANGLER_ASM(ADMISSIONS_get0_professionInfos)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSIONS_it
#  define ADMISSIONS_it OPENSSL_MANGLER(ADMISSIONS_it)
# endif
#else
# ifndef _ADMISSIONS_it
#  define _ADMISSIONS_it OPENSSL_MANGLER_ASM(ADMISSIONS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSIONS_new
#  define ADMISSIONS_new OPENSSL_MANGLER(ADMISSIONS_new)
# endif
#else
# ifndef _ADMISSIONS_new
#  define _ADMISSIONS_new OPENSSL_MANGLER_ASM(ADMISSIONS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSIONS_set0_admissionAuthority
#  define ADMISSIONS_set0_admissionAuthority OPENSSL_MANGLER(ADMISSIONS_set0_admissionAuthority)
# endif
#else
# ifndef _ADMISSIONS_set0_admissionAuthority
#  define _ADMISSIONS_set0_admissionAuthority OPENSSL_MANGLER_ASM(ADMISSIONS_set0_admissionAuthority)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSIONS_set0_namingAuthority
#  define ADMISSIONS_set0_namingAuthority OPENSSL_MANGLER(ADMISSIONS_set0_namingAuthority)
# endif
#else
# ifndef _ADMISSIONS_set0_namingAuthority
#  define _ADMISSIONS_set0_namingAuthority OPENSSL_MANGLER_ASM(ADMISSIONS_set0_namingAuthority)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSIONS_set0_professionInfos
#  define ADMISSIONS_set0_professionInfos OPENSSL_MANGLER(ADMISSIONS_set0_professionInfos)
# endif
#else
# ifndef _ADMISSIONS_set0_professionInfos
#  define _ADMISSIONS_set0_professionInfos OPENSSL_MANGLER_ASM(ADMISSIONS_set0_professionInfos)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSION_SYNTAX_free
#  define ADMISSION_SYNTAX_free OPENSSL_MANGLER(ADMISSION_SYNTAX_free)
# endif
#else
# ifndef _ADMISSION_SYNTAX_free
#  define _ADMISSION_SYNTAX_free OPENSSL_MANGLER_ASM(ADMISSION_SYNTAX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSION_SYNTAX_get0_admissionAuthority
#  define ADMISSION_SYNTAX_get0_admissionAuthority OPENSSL_MANGLER(ADMISSION_SYNTAX_get0_admissionAuthority)
# endif
#else
# ifndef _ADMISSION_SYNTAX_get0_admissionAuthority
#  define _ADMISSION_SYNTAX_get0_admissionAuthority OPENSSL_MANGLER_ASM(ADMISSION_SYNTAX_get0_admissionAuthority)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSION_SYNTAX_get0_contentsOfAdmissions
#  define ADMISSION_SYNTAX_get0_contentsOfAdmissions OPENSSL_MANGLER(ADMISSION_SYNTAX_get0_contentsOfAdmissions)
# endif
#else
# ifndef _ADMISSION_SYNTAX_get0_contentsOfAdmissions
#  define _ADMISSION_SYNTAX_get0_contentsOfAdmissions OPENSSL_MANGLER_ASM(ADMISSION_SYNTAX_get0_contentsOfAdmissions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSION_SYNTAX_it
#  define ADMISSION_SYNTAX_it OPENSSL_MANGLER(ADMISSION_SYNTAX_it)
# endif
#else
# ifndef _ADMISSION_SYNTAX_it
#  define _ADMISSION_SYNTAX_it OPENSSL_MANGLER_ASM(ADMISSION_SYNTAX_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSION_SYNTAX_new
#  define ADMISSION_SYNTAX_new OPENSSL_MANGLER(ADMISSION_SYNTAX_new)
# endif
#else
# ifndef _ADMISSION_SYNTAX_new
#  define _ADMISSION_SYNTAX_new OPENSSL_MANGLER_ASM(ADMISSION_SYNTAX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSION_SYNTAX_set0_admissionAuthority
#  define ADMISSION_SYNTAX_set0_admissionAuthority OPENSSL_MANGLER(ADMISSION_SYNTAX_set0_admissionAuthority)
# endif
#else
# ifndef _ADMISSION_SYNTAX_set0_admissionAuthority
#  define _ADMISSION_SYNTAX_set0_admissionAuthority OPENSSL_MANGLER_ASM(ADMISSION_SYNTAX_set0_admissionAuthority)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ADMISSION_SYNTAX_set0_contentsOfAdmissions
#  define ADMISSION_SYNTAX_set0_contentsOfAdmissions OPENSSL_MANGLER(ADMISSION_SYNTAX_set0_contentsOfAdmissions)
# endif
#else
# ifndef _ADMISSION_SYNTAX_set0_contentsOfAdmissions
#  define _ADMISSION_SYNTAX_set0_contentsOfAdmissions OPENSSL_MANGLER_ASM(ADMISSION_SYNTAX_set0_contentsOfAdmissions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_bi_ige_encrypt
#  define AES_bi_ige_encrypt OPENSSL_MANGLER(AES_bi_ige_encrypt)
# endif
#else
# ifndef _AES_bi_ige_encrypt
#  define _AES_bi_ige_encrypt OPENSSL_MANGLER_ASM(AES_bi_ige_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_cbc_encrypt
#  define AES_cbc_encrypt OPENSSL_MANGLER(AES_cbc_encrypt)
# endif
#else
# ifndef _AES_cbc_encrypt
#  define _AES_cbc_encrypt OPENSSL_MANGLER_ASM(AES_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_cfb128_encrypt
#  define AES_cfb128_encrypt OPENSSL_MANGLER(AES_cfb128_encrypt)
# endif
#else
# ifndef _AES_cfb128_encrypt
#  define _AES_cfb128_encrypt OPENSSL_MANGLER_ASM(AES_cfb128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_cfb1_encrypt
#  define AES_cfb1_encrypt OPENSSL_MANGLER(AES_cfb1_encrypt)
# endif
#else
# ifndef _AES_cfb1_encrypt
#  define _AES_cfb1_encrypt OPENSSL_MANGLER_ASM(AES_cfb1_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_cfb8_encrypt
#  define AES_cfb8_encrypt OPENSSL_MANGLER(AES_cfb8_encrypt)
# endif
#else
# ifndef _AES_cfb8_encrypt
#  define _AES_cfb8_encrypt OPENSSL_MANGLER_ASM(AES_cfb8_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_decrypt
#  define AES_decrypt OPENSSL_MANGLER(AES_decrypt)
# endif
#else
# ifndef _AES_decrypt
#  define _AES_decrypt OPENSSL_MANGLER_ASM(AES_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_ecb_encrypt
#  define AES_ecb_encrypt OPENSSL_MANGLER(AES_ecb_encrypt)
# endif
#else
# ifndef _AES_ecb_encrypt
#  define _AES_ecb_encrypt OPENSSL_MANGLER_ASM(AES_ecb_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_encrypt
#  define AES_encrypt OPENSSL_MANGLER(AES_encrypt)
# endif
#else
# ifndef _AES_encrypt
#  define _AES_encrypt OPENSSL_MANGLER_ASM(AES_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_ige_encrypt
#  define AES_ige_encrypt OPENSSL_MANGLER(AES_ige_encrypt)
# endif
#else
# ifndef _AES_ige_encrypt
#  define _AES_ige_encrypt OPENSSL_MANGLER_ASM(AES_ige_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_ofb128_encrypt
#  define AES_ofb128_encrypt OPENSSL_MANGLER(AES_ofb128_encrypt)
# endif
#else
# ifndef _AES_ofb128_encrypt
#  define _AES_ofb128_encrypt OPENSSL_MANGLER_ASM(AES_ofb128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_options
#  define AES_options OPENSSL_MANGLER(AES_options)
# endif
#else
# ifndef _AES_options
#  define _AES_options OPENSSL_MANGLER_ASM(AES_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_set_decrypt_key
#  define AES_set_decrypt_key OPENSSL_MANGLER(AES_set_decrypt_key)
# endif
#else
# ifndef _AES_set_decrypt_key
#  define _AES_set_decrypt_key OPENSSL_MANGLER_ASM(AES_set_decrypt_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_set_encrypt_key
#  define AES_set_encrypt_key OPENSSL_MANGLER(AES_set_encrypt_key)
# endif
#else
# ifndef _AES_set_encrypt_key
#  define _AES_set_encrypt_key OPENSSL_MANGLER_ASM(AES_set_encrypt_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_unwrap_key
#  define AES_unwrap_key OPENSSL_MANGLER(AES_unwrap_key)
# endif
#else
# ifndef _AES_unwrap_key
#  define _AES_unwrap_key OPENSSL_MANGLER_ASM(AES_unwrap_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AES_wrap_key
#  define AES_wrap_key OPENSSL_MANGLER(AES_wrap_key)
# endif
#else
# ifndef _AES_wrap_key
#  define _AES_wrap_key OPENSSL_MANGLER_ASM(AES_wrap_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASIdOrRange_free
#  define ASIdOrRange_free OPENSSL_MANGLER(ASIdOrRange_free)
# endif
#else
# ifndef _ASIdOrRange_free
#  define _ASIdOrRange_free OPENSSL_MANGLER_ASM(ASIdOrRange_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASIdOrRange_it
#  define ASIdOrRange_it OPENSSL_MANGLER(ASIdOrRange_it)
# endif
#else
# ifndef _ASIdOrRange_it
#  define _ASIdOrRange_it OPENSSL_MANGLER_ASM(ASIdOrRange_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASIdOrRange_new
#  define ASIdOrRange_new OPENSSL_MANGLER(ASIdOrRange_new)
# endif
#else
# ifndef _ASIdOrRange_new
#  define _ASIdOrRange_new OPENSSL_MANGLER_ASM(ASIdOrRange_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASIdentifierChoice_free
#  define ASIdentifierChoice_free OPENSSL_MANGLER(ASIdentifierChoice_free)
# endif
#else
# ifndef _ASIdentifierChoice_free
#  define _ASIdentifierChoice_free OPENSSL_MANGLER_ASM(ASIdentifierChoice_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASIdentifierChoice_it
#  define ASIdentifierChoice_it OPENSSL_MANGLER(ASIdentifierChoice_it)
# endif
#else
# ifndef _ASIdentifierChoice_it
#  define _ASIdentifierChoice_it OPENSSL_MANGLER_ASM(ASIdentifierChoice_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASIdentifierChoice_new
#  define ASIdentifierChoice_new OPENSSL_MANGLER(ASIdentifierChoice_new)
# endif
#else
# ifndef _ASIdentifierChoice_new
#  define _ASIdentifierChoice_new OPENSSL_MANGLER_ASM(ASIdentifierChoice_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASIdentifiers_free
#  define ASIdentifiers_free OPENSSL_MANGLER(ASIdentifiers_free)
# endif
#else
# ifndef _ASIdentifiers_free
#  define _ASIdentifiers_free OPENSSL_MANGLER_ASM(ASIdentifiers_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASIdentifiers_it
#  define ASIdentifiers_it OPENSSL_MANGLER(ASIdentifiers_it)
# endif
#else
# ifndef _ASIdentifiers_it
#  define _ASIdentifiers_it OPENSSL_MANGLER_ASM(ASIdentifiers_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASIdentifiers_new
#  define ASIdentifiers_new OPENSSL_MANGLER(ASIdentifiers_new)
# endif
#else
# ifndef _ASIdentifiers_new
#  define _ASIdentifiers_new OPENSSL_MANGLER_ASM(ASIdentifiers_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_ANY_it
#  define ASN1_ANY_it OPENSSL_MANGLER(ASN1_ANY_it)
# endif
#else
# ifndef _ASN1_ANY_it
#  define _ASN1_ANY_it OPENSSL_MANGLER_ASM(ASN1_ANY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BIT_STRING_check
#  define ASN1_BIT_STRING_check OPENSSL_MANGLER(ASN1_BIT_STRING_check)
# endif
#else
# ifndef _ASN1_BIT_STRING_check
#  define _ASN1_BIT_STRING_check OPENSSL_MANGLER_ASM(ASN1_BIT_STRING_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BIT_STRING_free
#  define ASN1_BIT_STRING_free OPENSSL_MANGLER(ASN1_BIT_STRING_free)
# endif
#else
# ifndef _ASN1_BIT_STRING_free
#  define _ASN1_BIT_STRING_free OPENSSL_MANGLER_ASM(ASN1_BIT_STRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BIT_STRING_get_bit
#  define ASN1_BIT_STRING_get_bit OPENSSL_MANGLER(ASN1_BIT_STRING_get_bit)
# endif
#else
# ifndef _ASN1_BIT_STRING_get_bit
#  define _ASN1_BIT_STRING_get_bit OPENSSL_MANGLER_ASM(ASN1_BIT_STRING_get_bit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BIT_STRING_it
#  define ASN1_BIT_STRING_it OPENSSL_MANGLER(ASN1_BIT_STRING_it)
# endif
#else
# ifndef _ASN1_BIT_STRING_it
#  define _ASN1_BIT_STRING_it OPENSSL_MANGLER_ASM(ASN1_BIT_STRING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BIT_STRING_name_print
#  define ASN1_BIT_STRING_name_print OPENSSL_MANGLER(ASN1_BIT_STRING_name_print)
# endif
#else
# ifndef _ASN1_BIT_STRING_name_print
#  define _ASN1_BIT_STRING_name_print OPENSSL_MANGLER_ASM(ASN1_BIT_STRING_name_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BIT_STRING_new
#  define ASN1_BIT_STRING_new OPENSSL_MANGLER(ASN1_BIT_STRING_new)
# endif
#else
# ifndef _ASN1_BIT_STRING_new
#  define _ASN1_BIT_STRING_new OPENSSL_MANGLER_ASM(ASN1_BIT_STRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BIT_STRING_num_asc
#  define ASN1_BIT_STRING_num_asc OPENSSL_MANGLER(ASN1_BIT_STRING_num_asc)
# endif
#else
# ifndef _ASN1_BIT_STRING_num_asc
#  define _ASN1_BIT_STRING_num_asc OPENSSL_MANGLER_ASM(ASN1_BIT_STRING_num_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BIT_STRING_set
#  define ASN1_BIT_STRING_set OPENSSL_MANGLER(ASN1_BIT_STRING_set)
# endif
#else
# ifndef _ASN1_BIT_STRING_set
#  define _ASN1_BIT_STRING_set OPENSSL_MANGLER_ASM(ASN1_BIT_STRING_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BIT_STRING_set_asc
#  define ASN1_BIT_STRING_set_asc OPENSSL_MANGLER(ASN1_BIT_STRING_set_asc)
# endif
#else
# ifndef _ASN1_BIT_STRING_set_asc
#  define _ASN1_BIT_STRING_set_asc OPENSSL_MANGLER_ASM(ASN1_BIT_STRING_set_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BIT_STRING_set_bit
#  define ASN1_BIT_STRING_set_bit OPENSSL_MANGLER(ASN1_BIT_STRING_set_bit)
# endif
#else
# ifndef _ASN1_BIT_STRING_set_bit
#  define _ASN1_BIT_STRING_set_bit OPENSSL_MANGLER_ASM(ASN1_BIT_STRING_set_bit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BMPSTRING_free
#  define ASN1_BMPSTRING_free OPENSSL_MANGLER(ASN1_BMPSTRING_free)
# endif
#else
# ifndef _ASN1_BMPSTRING_free
#  define _ASN1_BMPSTRING_free OPENSSL_MANGLER_ASM(ASN1_BMPSTRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BMPSTRING_it
#  define ASN1_BMPSTRING_it OPENSSL_MANGLER(ASN1_BMPSTRING_it)
# endif
#else
# ifndef _ASN1_BMPSTRING_it
#  define _ASN1_BMPSTRING_it OPENSSL_MANGLER_ASM(ASN1_BMPSTRING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BMPSTRING_new
#  define ASN1_BMPSTRING_new OPENSSL_MANGLER(ASN1_BMPSTRING_new)
# endif
#else
# ifndef _ASN1_BMPSTRING_new
#  define _ASN1_BMPSTRING_new OPENSSL_MANGLER_ASM(ASN1_BMPSTRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_BOOLEAN_it
#  define ASN1_BOOLEAN_it OPENSSL_MANGLER(ASN1_BOOLEAN_it)
# endif
#else
# ifndef _ASN1_BOOLEAN_it
#  define _ASN1_BOOLEAN_it OPENSSL_MANGLER_ASM(ASN1_BOOLEAN_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_ENUMERATED_free
#  define ASN1_ENUMERATED_free OPENSSL_MANGLER(ASN1_ENUMERATED_free)
# endif
#else
# ifndef _ASN1_ENUMERATED_free
#  define _ASN1_ENUMERATED_free OPENSSL_MANGLER_ASM(ASN1_ENUMERATED_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_ENUMERATED_get
#  define ASN1_ENUMERATED_get OPENSSL_MANGLER(ASN1_ENUMERATED_get)
# endif
#else
# ifndef _ASN1_ENUMERATED_get
#  define _ASN1_ENUMERATED_get OPENSSL_MANGLER_ASM(ASN1_ENUMERATED_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_ENUMERATED_get_int64
#  define ASN1_ENUMERATED_get_int64 OPENSSL_MANGLER(ASN1_ENUMERATED_get_int64)
# endif
#else
# ifndef _ASN1_ENUMERATED_get_int64
#  define _ASN1_ENUMERATED_get_int64 OPENSSL_MANGLER_ASM(ASN1_ENUMERATED_get_int64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_ENUMERATED_it
#  define ASN1_ENUMERATED_it OPENSSL_MANGLER(ASN1_ENUMERATED_it)
# endif
#else
# ifndef _ASN1_ENUMERATED_it
#  define _ASN1_ENUMERATED_it OPENSSL_MANGLER_ASM(ASN1_ENUMERATED_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_ENUMERATED_new
#  define ASN1_ENUMERATED_new OPENSSL_MANGLER(ASN1_ENUMERATED_new)
# endif
#else
# ifndef _ASN1_ENUMERATED_new
#  define _ASN1_ENUMERATED_new OPENSSL_MANGLER_ASM(ASN1_ENUMERATED_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_ENUMERATED_set
#  define ASN1_ENUMERATED_set OPENSSL_MANGLER(ASN1_ENUMERATED_set)
# endif
#else
# ifndef _ASN1_ENUMERATED_set
#  define _ASN1_ENUMERATED_set OPENSSL_MANGLER_ASM(ASN1_ENUMERATED_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_ENUMERATED_set_int64
#  define ASN1_ENUMERATED_set_int64 OPENSSL_MANGLER(ASN1_ENUMERATED_set_int64)
# endif
#else
# ifndef _ASN1_ENUMERATED_set_int64
#  define _ASN1_ENUMERATED_set_int64 OPENSSL_MANGLER_ASM(ASN1_ENUMERATED_set_int64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_ENUMERATED_to_BN
#  define ASN1_ENUMERATED_to_BN OPENSSL_MANGLER(ASN1_ENUMERATED_to_BN)
# endif
#else
# ifndef _ASN1_ENUMERATED_to_BN
#  define _ASN1_ENUMERATED_to_BN OPENSSL_MANGLER_ASM(ASN1_ENUMERATED_to_BN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_FBOOLEAN_it
#  define ASN1_FBOOLEAN_it OPENSSL_MANGLER(ASN1_FBOOLEAN_it)
# endif
#else
# ifndef _ASN1_FBOOLEAN_it
#  define _ASN1_FBOOLEAN_it OPENSSL_MANGLER_ASM(ASN1_FBOOLEAN_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALIZEDTIME_adj
#  define ASN1_GENERALIZEDTIME_adj OPENSSL_MANGLER(ASN1_GENERALIZEDTIME_adj)
# endif
#else
# ifndef _ASN1_GENERALIZEDTIME_adj
#  define _ASN1_GENERALIZEDTIME_adj OPENSSL_MANGLER_ASM(ASN1_GENERALIZEDTIME_adj)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALIZEDTIME_check
#  define ASN1_GENERALIZEDTIME_check OPENSSL_MANGLER(ASN1_GENERALIZEDTIME_check)
# endif
#else
# ifndef _ASN1_GENERALIZEDTIME_check
#  define _ASN1_GENERALIZEDTIME_check OPENSSL_MANGLER_ASM(ASN1_GENERALIZEDTIME_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALIZEDTIME_dup
#  define ASN1_GENERALIZEDTIME_dup OPENSSL_MANGLER(ASN1_GENERALIZEDTIME_dup)
# endif
#else
# ifndef _ASN1_GENERALIZEDTIME_dup
#  define _ASN1_GENERALIZEDTIME_dup OPENSSL_MANGLER_ASM(ASN1_GENERALIZEDTIME_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALIZEDTIME_free
#  define ASN1_GENERALIZEDTIME_free OPENSSL_MANGLER(ASN1_GENERALIZEDTIME_free)
# endif
#else
# ifndef _ASN1_GENERALIZEDTIME_free
#  define _ASN1_GENERALIZEDTIME_free OPENSSL_MANGLER_ASM(ASN1_GENERALIZEDTIME_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALIZEDTIME_it
#  define ASN1_GENERALIZEDTIME_it OPENSSL_MANGLER(ASN1_GENERALIZEDTIME_it)
# endif
#else
# ifndef _ASN1_GENERALIZEDTIME_it
#  define _ASN1_GENERALIZEDTIME_it OPENSSL_MANGLER_ASM(ASN1_GENERALIZEDTIME_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALIZEDTIME_new
#  define ASN1_GENERALIZEDTIME_new OPENSSL_MANGLER(ASN1_GENERALIZEDTIME_new)
# endif
#else
# ifndef _ASN1_GENERALIZEDTIME_new
#  define _ASN1_GENERALIZEDTIME_new OPENSSL_MANGLER_ASM(ASN1_GENERALIZEDTIME_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALIZEDTIME_print
#  define ASN1_GENERALIZEDTIME_print OPENSSL_MANGLER(ASN1_GENERALIZEDTIME_print)
# endif
#else
# ifndef _ASN1_GENERALIZEDTIME_print
#  define _ASN1_GENERALIZEDTIME_print OPENSSL_MANGLER_ASM(ASN1_GENERALIZEDTIME_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALIZEDTIME_set
#  define ASN1_GENERALIZEDTIME_set OPENSSL_MANGLER(ASN1_GENERALIZEDTIME_set)
# endif
#else
# ifndef _ASN1_GENERALIZEDTIME_set
#  define _ASN1_GENERALIZEDTIME_set OPENSSL_MANGLER_ASM(ASN1_GENERALIZEDTIME_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALIZEDTIME_set_string
#  define ASN1_GENERALIZEDTIME_set_string OPENSSL_MANGLER(ASN1_GENERALIZEDTIME_set_string)
# endif
#else
# ifndef _ASN1_GENERALIZEDTIME_set_string
#  define _ASN1_GENERALIZEDTIME_set_string OPENSSL_MANGLER_ASM(ASN1_GENERALIZEDTIME_set_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALSTRING_free
#  define ASN1_GENERALSTRING_free OPENSSL_MANGLER(ASN1_GENERALSTRING_free)
# endif
#else
# ifndef _ASN1_GENERALSTRING_free
#  define _ASN1_GENERALSTRING_free OPENSSL_MANGLER_ASM(ASN1_GENERALSTRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALSTRING_it
#  define ASN1_GENERALSTRING_it OPENSSL_MANGLER(ASN1_GENERALSTRING_it)
# endif
#else
# ifndef _ASN1_GENERALSTRING_it
#  define _ASN1_GENERALSTRING_it OPENSSL_MANGLER_ASM(ASN1_GENERALSTRING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_GENERALSTRING_new
#  define ASN1_GENERALSTRING_new OPENSSL_MANGLER(ASN1_GENERALSTRING_new)
# endif
#else
# ifndef _ASN1_GENERALSTRING_new
#  define _ASN1_GENERALSTRING_new OPENSSL_MANGLER_ASM(ASN1_GENERALSTRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_IA5STRING_free
#  define ASN1_IA5STRING_free OPENSSL_MANGLER(ASN1_IA5STRING_free)
# endif
#else
# ifndef _ASN1_IA5STRING_free
#  define _ASN1_IA5STRING_free OPENSSL_MANGLER_ASM(ASN1_IA5STRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_IA5STRING_it
#  define ASN1_IA5STRING_it OPENSSL_MANGLER(ASN1_IA5STRING_it)
# endif
#else
# ifndef _ASN1_IA5STRING_it
#  define _ASN1_IA5STRING_it OPENSSL_MANGLER_ASM(ASN1_IA5STRING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_IA5STRING_new
#  define ASN1_IA5STRING_new OPENSSL_MANGLER(ASN1_IA5STRING_new)
# endif
#else
# ifndef _ASN1_IA5STRING_new
#  define _ASN1_IA5STRING_new OPENSSL_MANGLER_ASM(ASN1_IA5STRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_cmp
#  define ASN1_INTEGER_cmp OPENSSL_MANGLER(ASN1_INTEGER_cmp)
# endif
#else
# ifndef _ASN1_INTEGER_cmp
#  define _ASN1_INTEGER_cmp OPENSSL_MANGLER_ASM(ASN1_INTEGER_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_dup
#  define ASN1_INTEGER_dup OPENSSL_MANGLER(ASN1_INTEGER_dup)
# endif
#else
# ifndef _ASN1_INTEGER_dup
#  define _ASN1_INTEGER_dup OPENSSL_MANGLER_ASM(ASN1_INTEGER_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_free
#  define ASN1_INTEGER_free OPENSSL_MANGLER(ASN1_INTEGER_free)
# endif
#else
# ifndef _ASN1_INTEGER_free
#  define _ASN1_INTEGER_free OPENSSL_MANGLER_ASM(ASN1_INTEGER_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_get
#  define ASN1_INTEGER_get OPENSSL_MANGLER(ASN1_INTEGER_get)
# endif
#else
# ifndef _ASN1_INTEGER_get
#  define _ASN1_INTEGER_get OPENSSL_MANGLER_ASM(ASN1_INTEGER_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_get_int64
#  define ASN1_INTEGER_get_int64 OPENSSL_MANGLER(ASN1_INTEGER_get_int64)
# endif
#else
# ifndef _ASN1_INTEGER_get_int64
#  define _ASN1_INTEGER_get_int64 OPENSSL_MANGLER_ASM(ASN1_INTEGER_get_int64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_get_uint64
#  define ASN1_INTEGER_get_uint64 OPENSSL_MANGLER(ASN1_INTEGER_get_uint64)
# endif
#else
# ifndef _ASN1_INTEGER_get_uint64
#  define _ASN1_INTEGER_get_uint64 OPENSSL_MANGLER_ASM(ASN1_INTEGER_get_uint64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_it
#  define ASN1_INTEGER_it OPENSSL_MANGLER(ASN1_INTEGER_it)
# endif
#else
# ifndef _ASN1_INTEGER_it
#  define _ASN1_INTEGER_it OPENSSL_MANGLER_ASM(ASN1_INTEGER_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_new
#  define ASN1_INTEGER_new OPENSSL_MANGLER(ASN1_INTEGER_new)
# endif
#else
# ifndef _ASN1_INTEGER_new
#  define _ASN1_INTEGER_new OPENSSL_MANGLER_ASM(ASN1_INTEGER_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_set
#  define ASN1_INTEGER_set OPENSSL_MANGLER(ASN1_INTEGER_set)
# endif
#else
# ifndef _ASN1_INTEGER_set
#  define _ASN1_INTEGER_set OPENSSL_MANGLER_ASM(ASN1_INTEGER_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_set_int64
#  define ASN1_INTEGER_set_int64 OPENSSL_MANGLER(ASN1_INTEGER_set_int64)
# endif
#else
# ifndef _ASN1_INTEGER_set_int64
#  define _ASN1_INTEGER_set_int64 OPENSSL_MANGLER_ASM(ASN1_INTEGER_set_int64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_set_uint64
#  define ASN1_INTEGER_set_uint64 OPENSSL_MANGLER(ASN1_INTEGER_set_uint64)
# endif
#else
# ifndef _ASN1_INTEGER_set_uint64
#  define _ASN1_INTEGER_set_uint64 OPENSSL_MANGLER_ASM(ASN1_INTEGER_set_uint64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_INTEGER_to_BN
#  define ASN1_INTEGER_to_BN OPENSSL_MANGLER(ASN1_INTEGER_to_BN)
# endif
#else
# ifndef _ASN1_INTEGER_to_BN
#  define _ASN1_INTEGER_to_BN OPENSSL_MANGLER_ASM(ASN1_INTEGER_to_BN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_ITEM_get
#  define ASN1_ITEM_get OPENSSL_MANGLER(ASN1_ITEM_get)
# endif
#else
# ifndef _ASN1_ITEM_get
#  define _ASN1_ITEM_get OPENSSL_MANGLER_ASM(ASN1_ITEM_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_ITEM_lookup
#  define ASN1_ITEM_lookup OPENSSL_MANGLER(ASN1_ITEM_lookup)
# endif
#else
# ifndef _ASN1_ITEM_lookup
#  define _ASN1_ITEM_lookup OPENSSL_MANGLER_ASM(ASN1_ITEM_lookup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_NULL_free
#  define ASN1_NULL_free OPENSSL_MANGLER(ASN1_NULL_free)
# endif
#else
# ifndef _ASN1_NULL_free
#  define _ASN1_NULL_free OPENSSL_MANGLER_ASM(ASN1_NULL_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_NULL_it
#  define ASN1_NULL_it OPENSSL_MANGLER(ASN1_NULL_it)
# endif
#else
# ifndef _ASN1_NULL_it
#  define _ASN1_NULL_it OPENSSL_MANGLER_ASM(ASN1_NULL_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_NULL_new
#  define ASN1_NULL_new OPENSSL_MANGLER(ASN1_NULL_new)
# endif
#else
# ifndef _ASN1_NULL_new
#  define _ASN1_NULL_new OPENSSL_MANGLER_ASM(ASN1_NULL_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_OBJECT_create
#  define ASN1_OBJECT_create OPENSSL_MANGLER(ASN1_OBJECT_create)
# endif
#else
# ifndef _ASN1_OBJECT_create
#  define _ASN1_OBJECT_create OPENSSL_MANGLER_ASM(ASN1_OBJECT_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_OBJECT_free
#  define ASN1_OBJECT_free OPENSSL_MANGLER(ASN1_OBJECT_free)
# endif
#else
# ifndef _ASN1_OBJECT_free
#  define _ASN1_OBJECT_free OPENSSL_MANGLER_ASM(ASN1_OBJECT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_OBJECT_it
#  define ASN1_OBJECT_it OPENSSL_MANGLER(ASN1_OBJECT_it)
# endif
#else
# ifndef _ASN1_OBJECT_it
#  define _ASN1_OBJECT_it OPENSSL_MANGLER_ASM(ASN1_OBJECT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_OBJECT_new
#  define ASN1_OBJECT_new OPENSSL_MANGLER(ASN1_OBJECT_new)
# endif
#else
# ifndef _ASN1_OBJECT_new
#  define _ASN1_OBJECT_new OPENSSL_MANGLER_ASM(ASN1_OBJECT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_OCTET_STRING_NDEF_it
#  define ASN1_OCTET_STRING_NDEF_it OPENSSL_MANGLER(ASN1_OCTET_STRING_NDEF_it)
# endif
#else
# ifndef _ASN1_OCTET_STRING_NDEF_it
#  define _ASN1_OCTET_STRING_NDEF_it OPENSSL_MANGLER_ASM(ASN1_OCTET_STRING_NDEF_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_OCTET_STRING_cmp
#  define ASN1_OCTET_STRING_cmp OPENSSL_MANGLER(ASN1_OCTET_STRING_cmp)
# endif
#else
# ifndef _ASN1_OCTET_STRING_cmp
#  define _ASN1_OCTET_STRING_cmp OPENSSL_MANGLER_ASM(ASN1_OCTET_STRING_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_OCTET_STRING_dup
#  define ASN1_OCTET_STRING_dup OPENSSL_MANGLER(ASN1_OCTET_STRING_dup)
# endif
#else
# ifndef _ASN1_OCTET_STRING_dup
#  define _ASN1_OCTET_STRING_dup OPENSSL_MANGLER_ASM(ASN1_OCTET_STRING_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_OCTET_STRING_free
#  define ASN1_OCTET_STRING_free OPENSSL_MANGLER(ASN1_OCTET_STRING_free)
# endif
#else
# ifndef _ASN1_OCTET_STRING_free
#  define _ASN1_OCTET_STRING_free OPENSSL_MANGLER_ASM(ASN1_OCTET_STRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_OCTET_STRING_it
#  define ASN1_OCTET_STRING_it OPENSSL_MANGLER(ASN1_OCTET_STRING_it)
# endif
#else
# ifndef _ASN1_OCTET_STRING_it
#  define _ASN1_OCTET_STRING_it OPENSSL_MANGLER_ASM(ASN1_OCTET_STRING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_OCTET_STRING_new
#  define ASN1_OCTET_STRING_new OPENSSL_MANGLER(ASN1_OCTET_STRING_new)
# endif
#else
# ifndef _ASN1_OCTET_STRING_new
#  define _ASN1_OCTET_STRING_new OPENSSL_MANGLER_ASM(ASN1_OCTET_STRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_OCTET_STRING_set
#  define ASN1_OCTET_STRING_set OPENSSL_MANGLER(ASN1_OCTET_STRING_set)
# endif
#else
# ifndef _ASN1_OCTET_STRING_set
#  define _ASN1_OCTET_STRING_set OPENSSL_MANGLER_ASM(ASN1_OCTET_STRING_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_free
#  define ASN1_PCTX_free OPENSSL_MANGLER(ASN1_PCTX_free)
# endif
#else
# ifndef _ASN1_PCTX_free
#  define _ASN1_PCTX_free OPENSSL_MANGLER_ASM(ASN1_PCTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_get_cert_flags
#  define ASN1_PCTX_get_cert_flags OPENSSL_MANGLER(ASN1_PCTX_get_cert_flags)
# endif
#else
# ifndef _ASN1_PCTX_get_cert_flags
#  define _ASN1_PCTX_get_cert_flags OPENSSL_MANGLER_ASM(ASN1_PCTX_get_cert_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_get_flags
#  define ASN1_PCTX_get_flags OPENSSL_MANGLER(ASN1_PCTX_get_flags)
# endif
#else
# ifndef _ASN1_PCTX_get_flags
#  define _ASN1_PCTX_get_flags OPENSSL_MANGLER_ASM(ASN1_PCTX_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_get_nm_flags
#  define ASN1_PCTX_get_nm_flags OPENSSL_MANGLER(ASN1_PCTX_get_nm_flags)
# endif
#else
# ifndef _ASN1_PCTX_get_nm_flags
#  define _ASN1_PCTX_get_nm_flags OPENSSL_MANGLER_ASM(ASN1_PCTX_get_nm_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_get_oid_flags
#  define ASN1_PCTX_get_oid_flags OPENSSL_MANGLER(ASN1_PCTX_get_oid_flags)
# endif
#else
# ifndef _ASN1_PCTX_get_oid_flags
#  define _ASN1_PCTX_get_oid_flags OPENSSL_MANGLER_ASM(ASN1_PCTX_get_oid_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_get_str_flags
#  define ASN1_PCTX_get_str_flags OPENSSL_MANGLER(ASN1_PCTX_get_str_flags)
# endif
#else
# ifndef _ASN1_PCTX_get_str_flags
#  define _ASN1_PCTX_get_str_flags OPENSSL_MANGLER_ASM(ASN1_PCTX_get_str_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_new
#  define ASN1_PCTX_new OPENSSL_MANGLER(ASN1_PCTX_new)
# endif
#else
# ifndef _ASN1_PCTX_new
#  define _ASN1_PCTX_new OPENSSL_MANGLER_ASM(ASN1_PCTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_set_cert_flags
#  define ASN1_PCTX_set_cert_flags OPENSSL_MANGLER(ASN1_PCTX_set_cert_flags)
# endif
#else
# ifndef _ASN1_PCTX_set_cert_flags
#  define _ASN1_PCTX_set_cert_flags OPENSSL_MANGLER_ASM(ASN1_PCTX_set_cert_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_set_flags
#  define ASN1_PCTX_set_flags OPENSSL_MANGLER(ASN1_PCTX_set_flags)
# endif
#else
# ifndef _ASN1_PCTX_set_flags
#  define _ASN1_PCTX_set_flags OPENSSL_MANGLER_ASM(ASN1_PCTX_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_set_nm_flags
#  define ASN1_PCTX_set_nm_flags OPENSSL_MANGLER(ASN1_PCTX_set_nm_flags)
# endif
#else
# ifndef _ASN1_PCTX_set_nm_flags
#  define _ASN1_PCTX_set_nm_flags OPENSSL_MANGLER_ASM(ASN1_PCTX_set_nm_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_set_oid_flags
#  define ASN1_PCTX_set_oid_flags OPENSSL_MANGLER(ASN1_PCTX_set_oid_flags)
# endif
#else
# ifndef _ASN1_PCTX_set_oid_flags
#  define _ASN1_PCTX_set_oid_flags OPENSSL_MANGLER_ASM(ASN1_PCTX_set_oid_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PCTX_set_str_flags
#  define ASN1_PCTX_set_str_flags OPENSSL_MANGLER(ASN1_PCTX_set_str_flags)
# endif
#else
# ifndef _ASN1_PCTX_set_str_flags
#  define _ASN1_PCTX_set_str_flags OPENSSL_MANGLER_ASM(ASN1_PCTX_set_str_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PRINTABLESTRING_free
#  define ASN1_PRINTABLESTRING_free OPENSSL_MANGLER(ASN1_PRINTABLESTRING_free)
# endif
#else
# ifndef _ASN1_PRINTABLESTRING_free
#  define _ASN1_PRINTABLESTRING_free OPENSSL_MANGLER_ASM(ASN1_PRINTABLESTRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PRINTABLESTRING_it
#  define ASN1_PRINTABLESTRING_it OPENSSL_MANGLER(ASN1_PRINTABLESTRING_it)
# endif
#else
# ifndef _ASN1_PRINTABLESTRING_it
#  define _ASN1_PRINTABLESTRING_it OPENSSL_MANGLER_ASM(ASN1_PRINTABLESTRING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PRINTABLESTRING_new
#  define ASN1_PRINTABLESTRING_new OPENSSL_MANGLER(ASN1_PRINTABLESTRING_new)
# endif
#else
# ifndef _ASN1_PRINTABLESTRING_new
#  define _ASN1_PRINTABLESTRING_new OPENSSL_MANGLER_ASM(ASN1_PRINTABLESTRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PRINTABLE_free
#  define ASN1_PRINTABLE_free OPENSSL_MANGLER(ASN1_PRINTABLE_free)
# endif
#else
# ifndef _ASN1_PRINTABLE_free
#  define _ASN1_PRINTABLE_free OPENSSL_MANGLER_ASM(ASN1_PRINTABLE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PRINTABLE_it
#  define ASN1_PRINTABLE_it OPENSSL_MANGLER(ASN1_PRINTABLE_it)
# endif
#else
# ifndef _ASN1_PRINTABLE_it
#  define _ASN1_PRINTABLE_it OPENSSL_MANGLER_ASM(ASN1_PRINTABLE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PRINTABLE_new
#  define ASN1_PRINTABLE_new OPENSSL_MANGLER(ASN1_PRINTABLE_new)
# endif
#else
# ifndef _ASN1_PRINTABLE_new
#  define _ASN1_PRINTABLE_new OPENSSL_MANGLER_ASM(ASN1_PRINTABLE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_PRINTABLE_type
#  define ASN1_PRINTABLE_type OPENSSL_MANGLER(ASN1_PRINTABLE_type)
# endif
#else
# ifndef _ASN1_PRINTABLE_type
#  define _ASN1_PRINTABLE_type OPENSSL_MANGLER_ASM(ASN1_PRINTABLE_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_SCTX_free
#  define ASN1_SCTX_free OPENSSL_MANGLER(ASN1_SCTX_free)
# endif
#else
# ifndef _ASN1_SCTX_free
#  define _ASN1_SCTX_free OPENSSL_MANGLER_ASM(ASN1_SCTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_SCTX_get_app_data
#  define ASN1_SCTX_get_app_data OPENSSL_MANGLER(ASN1_SCTX_get_app_data)
# endif
#else
# ifndef _ASN1_SCTX_get_app_data
#  define _ASN1_SCTX_get_app_data OPENSSL_MANGLER_ASM(ASN1_SCTX_get_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_SCTX_get_flags
#  define ASN1_SCTX_get_flags OPENSSL_MANGLER(ASN1_SCTX_get_flags)
# endif
#else
# ifndef _ASN1_SCTX_get_flags
#  define _ASN1_SCTX_get_flags OPENSSL_MANGLER_ASM(ASN1_SCTX_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_SCTX_get_item
#  define ASN1_SCTX_get_item OPENSSL_MANGLER(ASN1_SCTX_get_item)
# endif
#else
# ifndef _ASN1_SCTX_get_item
#  define _ASN1_SCTX_get_item OPENSSL_MANGLER_ASM(ASN1_SCTX_get_item)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_SCTX_get_template
#  define ASN1_SCTX_get_template OPENSSL_MANGLER(ASN1_SCTX_get_template)
# endif
#else
# ifndef _ASN1_SCTX_get_template
#  define _ASN1_SCTX_get_template OPENSSL_MANGLER_ASM(ASN1_SCTX_get_template)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_SCTX_new
#  define ASN1_SCTX_new OPENSSL_MANGLER(ASN1_SCTX_new)
# endif
#else
# ifndef _ASN1_SCTX_new
#  define _ASN1_SCTX_new OPENSSL_MANGLER_ASM(ASN1_SCTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_SCTX_set_app_data
#  define ASN1_SCTX_set_app_data OPENSSL_MANGLER(ASN1_SCTX_set_app_data)
# endif
#else
# ifndef _ASN1_SCTX_set_app_data
#  define _ASN1_SCTX_set_app_data OPENSSL_MANGLER_ASM(ASN1_SCTX_set_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_SEQUENCE_ANY_it
#  define ASN1_SEQUENCE_ANY_it OPENSSL_MANGLER(ASN1_SEQUENCE_ANY_it)
# endif
#else
# ifndef _ASN1_SEQUENCE_ANY_it
#  define _ASN1_SEQUENCE_ANY_it OPENSSL_MANGLER_ASM(ASN1_SEQUENCE_ANY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_SEQUENCE_it
#  define ASN1_SEQUENCE_it OPENSSL_MANGLER(ASN1_SEQUENCE_it)
# endif
#else
# ifndef _ASN1_SEQUENCE_it
#  define _ASN1_SEQUENCE_it OPENSSL_MANGLER_ASM(ASN1_SEQUENCE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_SET_ANY_it
#  define ASN1_SET_ANY_it OPENSSL_MANGLER(ASN1_SET_ANY_it)
# endif
#else
# ifndef _ASN1_SET_ANY_it
#  define _ASN1_SET_ANY_it OPENSSL_MANGLER_ASM(ASN1_SET_ANY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_TABLE_add
#  define ASN1_STRING_TABLE_add OPENSSL_MANGLER(ASN1_STRING_TABLE_add)
# endif
#else
# ifndef _ASN1_STRING_TABLE_add
#  define _ASN1_STRING_TABLE_add OPENSSL_MANGLER_ASM(ASN1_STRING_TABLE_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_TABLE_cleanup
#  define ASN1_STRING_TABLE_cleanup OPENSSL_MANGLER(ASN1_STRING_TABLE_cleanup)
# endif
#else
# ifndef _ASN1_STRING_TABLE_cleanup
#  define _ASN1_STRING_TABLE_cleanup OPENSSL_MANGLER_ASM(ASN1_STRING_TABLE_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_TABLE_get
#  define ASN1_STRING_TABLE_get OPENSSL_MANGLER(ASN1_STRING_TABLE_get)
# endif
#else
# ifndef _ASN1_STRING_TABLE_get
#  define _ASN1_STRING_TABLE_get OPENSSL_MANGLER_ASM(ASN1_STRING_TABLE_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_clear_free
#  define ASN1_STRING_clear_free OPENSSL_MANGLER(ASN1_STRING_clear_free)
# endif
#else
# ifndef _ASN1_STRING_clear_free
#  define _ASN1_STRING_clear_free OPENSSL_MANGLER_ASM(ASN1_STRING_clear_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_cmp
#  define ASN1_STRING_cmp OPENSSL_MANGLER(ASN1_STRING_cmp)
# endif
#else
# ifndef _ASN1_STRING_cmp
#  define _ASN1_STRING_cmp OPENSSL_MANGLER_ASM(ASN1_STRING_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_copy
#  define ASN1_STRING_copy OPENSSL_MANGLER(ASN1_STRING_copy)
# endif
#else
# ifndef _ASN1_STRING_copy
#  define _ASN1_STRING_copy OPENSSL_MANGLER_ASM(ASN1_STRING_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_dup
#  define ASN1_STRING_dup OPENSSL_MANGLER(ASN1_STRING_dup)
# endif
#else
# ifndef _ASN1_STRING_dup
#  define _ASN1_STRING_dup OPENSSL_MANGLER_ASM(ASN1_STRING_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_free
#  define ASN1_STRING_free OPENSSL_MANGLER(ASN1_STRING_free)
# endif
#else
# ifndef _ASN1_STRING_free
#  define _ASN1_STRING_free OPENSSL_MANGLER_ASM(ASN1_STRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_get0_data
#  define ASN1_STRING_get0_data OPENSSL_MANGLER(ASN1_STRING_get0_data)
# endif
#else
# ifndef _ASN1_STRING_get0_data
#  define _ASN1_STRING_get0_data OPENSSL_MANGLER_ASM(ASN1_STRING_get0_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_get_default_mask
#  define ASN1_STRING_get_default_mask OPENSSL_MANGLER(ASN1_STRING_get_default_mask)
# endif
#else
# ifndef _ASN1_STRING_get_default_mask
#  define _ASN1_STRING_get_default_mask OPENSSL_MANGLER_ASM(ASN1_STRING_get_default_mask)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_length
#  define ASN1_STRING_length OPENSSL_MANGLER(ASN1_STRING_length)
# endif
#else
# ifndef _ASN1_STRING_length
#  define _ASN1_STRING_length OPENSSL_MANGLER_ASM(ASN1_STRING_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_length_set
#  define ASN1_STRING_length_set OPENSSL_MANGLER(ASN1_STRING_length_set)
# endif
#else
# ifndef _ASN1_STRING_length_set
#  define _ASN1_STRING_length_set OPENSSL_MANGLER_ASM(ASN1_STRING_length_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_new
#  define ASN1_STRING_new OPENSSL_MANGLER(ASN1_STRING_new)
# endif
#else
# ifndef _ASN1_STRING_new
#  define _ASN1_STRING_new OPENSSL_MANGLER_ASM(ASN1_STRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_print
#  define ASN1_STRING_print OPENSSL_MANGLER(ASN1_STRING_print)
# endif
#else
# ifndef _ASN1_STRING_print
#  define _ASN1_STRING_print OPENSSL_MANGLER_ASM(ASN1_STRING_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_print_ex
#  define ASN1_STRING_print_ex OPENSSL_MANGLER(ASN1_STRING_print_ex)
# endif
#else
# ifndef _ASN1_STRING_print_ex
#  define _ASN1_STRING_print_ex OPENSSL_MANGLER_ASM(ASN1_STRING_print_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_print_ex_fp
#  define ASN1_STRING_print_ex_fp OPENSSL_MANGLER(ASN1_STRING_print_ex_fp)
# endif
#else
# ifndef _ASN1_STRING_print_ex_fp
#  define _ASN1_STRING_print_ex_fp OPENSSL_MANGLER_ASM(ASN1_STRING_print_ex_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_set
#  define ASN1_STRING_set OPENSSL_MANGLER(ASN1_STRING_set)
# endif
#else
# ifndef _ASN1_STRING_set
#  define _ASN1_STRING_set OPENSSL_MANGLER_ASM(ASN1_STRING_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_set0
#  define ASN1_STRING_set0 OPENSSL_MANGLER(ASN1_STRING_set0)
# endif
#else
# ifndef _ASN1_STRING_set0
#  define _ASN1_STRING_set0 OPENSSL_MANGLER_ASM(ASN1_STRING_set0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_set_by_NID
#  define ASN1_STRING_set_by_NID OPENSSL_MANGLER(ASN1_STRING_set_by_NID)
# endif
#else
# ifndef _ASN1_STRING_set_by_NID
#  define _ASN1_STRING_set_by_NID OPENSSL_MANGLER_ASM(ASN1_STRING_set_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_set_default_mask
#  define ASN1_STRING_set_default_mask OPENSSL_MANGLER(ASN1_STRING_set_default_mask)
# endif
#else
# ifndef _ASN1_STRING_set_default_mask
#  define _ASN1_STRING_set_default_mask OPENSSL_MANGLER_ASM(ASN1_STRING_set_default_mask)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_set_default_mask_asc
#  define ASN1_STRING_set_default_mask_asc OPENSSL_MANGLER(ASN1_STRING_set_default_mask_asc)
# endif
#else
# ifndef _ASN1_STRING_set_default_mask_asc
#  define _ASN1_STRING_set_default_mask_asc OPENSSL_MANGLER_ASM(ASN1_STRING_set_default_mask_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_to_UTF8
#  define ASN1_STRING_to_UTF8 OPENSSL_MANGLER(ASN1_STRING_to_UTF8)
# endif
#else
# ifndef _ASN1_STRING_to_UTF8
#  define _ASN1_STRING_to_UTF8 OPENSSL_MANGLER_ASM(ASN1_STRING_to_UTF8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_type
#  define ASN1_STRING_type OPENSSL_MANGLER(ASN1_STRING_type)
# endif
#else
# ifndef _ASN1_STRING_type
#  define _ASN1_STRING_type OPENSSL_MANGLER_ASM(ASN1_STRING_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_STRING_type_new
#  define ASN1_STRING_type_new OPENSSL_MANGLER(ASN1_STRING_type_new)
# endif
#else
# ifndef _ASN1_STRING_type_new
#  define _ASN1_STRING_type_new OPENSSL_MANGLER_ASM(ASN1_STRING_type_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_T61STRING_free
#  define ASN1_T61STRING_free OPENSSL_MANGLER(ASN1_T61STRING_free)
# endif
#else
# ifndef _ASN1_T61STRING_free
#  define _ASN1_T61STRING_free OPENSSL_MANGLER_ASM(ASN1_T61STRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_T61STRING_it
#  define ASN1_T61STRING_it OPENSSL_MANGLER(ASN1_T61STRING_it)
# endif
#else
# ifndef _ASN1_T61STRING_it
#  define _ASN1_T61STRING_it OPENSSL_MANGLER_ASM(ASN1_T61STRING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_T61STRING_new
#  define ASN1_T61STRING_new OPENSSL_MANGLER(ASN1_T61STRING_new)
# endif
#else
# ifndef _ASN1_T61STRING_new
#  define _ASN1_T61STRING_new OPENSSL_MANGLER_ASM(ASN1_T61STRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TBOOLEAN_it
#  define ASN1_TBOOLEAN_it OPENSSL_MANGLER(ASN1_TBOOLEAN_it)
# endif
#else
# ifndef _ASN1_TBOOLEAN_it
#  define _ASN1_TBOOLEAN_it OPENSSL_MANGLER_ASM(ASN1_TBOOLEAN_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_adj
#  define ASN1_TIME_adj OPENSSL_MANGLER(ASN1_TIME_adj)
# endif
#else
# ifndef _ASN1_TIME_adj
#  define _ASN1_TIME_adj OPENSSL_MANGLER_ASM(ASN1_TIME_adj)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_check
#  define ASN1_TIME_check OPENSSL_MANGLER(ASN1_TIME_check)
# endif
#else
# ifndef _ASN1_TIME_check
#  define _ASN1_TIME_check OPENSSL_MANGLER_ASM(ASN1_TIME_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_cmp_time_t
#  define ASN1_TIME_cmp_time_t OPENSSL_MANGLER(ASN1_TIME_cmp_time_t)
# endif
#else
# ifndef _ASN1_TIME_cmp_time_t
#  define _ASN1_TIME_cmp_time_t OPENSSL_MANGLER_ASM(ASN1_TIME_cmp_time_t)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_compare
#  define ASN1_TIME_compare OPENSSL_MANGLER(ASN1_TIME_compare)
# endif
#else
# ifndef _ASN1_TIME_compare
#  define _ASN1_TIME_compare OPENSSL_MANGLER_ASM(ASN1_TIME_compare)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_diff
#  define ASN1_TIME_diff OPENSSL_MANGLER(ASN1_TIME_diff)
# endif
#else
# ifndef _ASN1_TIME_diff
#  define _ASN1_TIME_diff OPENSSL_MANGLER_ASM(ASN1_TIME_diff)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_dup
#  define ASN1_TIME_dup OPENSSL_MANGLER(ASN1_TIME_dup)
# endif
#else
# ifndef _ASN1_TIME_dup
#  define _ASN1_TIME_dup OPENSSL_MANGLER_ASM(ASN1_TIME_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_free
#  define ASN1_TIME_free OPENSSL_MANGLER(ASN1_TIME_free)
# endif
#else
# ifndef _ASN1_TIME_free
#  define _ASN1_TIME_free OPENSSL_MANGLER_ASM(ASN1_TIME_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_it
#  define ASN1_TIME_it OPENSSL_MANGLER(ASN1_TIME_it)
# endif
#else
# ifndef _ASN1_TIME_it
#  define _ASN1_TIME_it OPENSSL_MANGLER_ASM(ASN1_TIME_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_new
#  define ASN1_TIME_new OPENSSL_MANGLER(ASN1_TIME_new)
# endif
#else
# ifndef _ASN1_TIME_new
#  define _ASN1_TIME_new OPENSSL_MANGLER_ASM(ASN1_TIME_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_normalize
#  define ASN1_TIME_normalize OPENSSL_MANGLER(ASN1_TIME_normalize)
# endif
#else
# ifndef _ASN1_TIME_normalize
#  define _ASN1_TIME_normalize OPENSSL_MANGLER_ASM(ASN1_TIME_normalize)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_print
#  define ASN1_TIME_print OPENSSL_MANGLER(ASN1_TIME_print)
# endif
#else
# ifndef _ASN1_TIME_print
#  define _ASN1_TIME_print OPENSSL_MANGLER_ASM(ASN1_TIME_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_print_ex
#  define ASN1_TIME_print_ex OPENSSL_MANGLER(ASN1_TIME_print_ex)
# endif
#else
# ifndef _ASN1_TIME_print_ex
#  define _ASN1_TIME_print_ex OPENSSL_MANGLER_ASM(ASN1_TIME_print_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_set
#  define ASN1_TIME_set OPENSSL_MANGLER(ASN1_TIME_set)
# endif
#else
# ifndef _ASN1_TIME_set
#  define _ASN1_TIME_set OPENSSL_MANGLER_ASM(ASN1_TIME_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_set_string
#  define ASN1_TIME_set_string OPENSSL_MANGLER(ASN1_TIME_set_string)
# endif
#else
# ifndef _ASN1_TIME_set_string
#  define _ASN1_TIME_set_string OPENSSL_MANGLER_ASM(ASN1_TIME_set_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_set_string_X509
#  define ASN1_TIME_set_string_X509 OPENSSL_MANGLER(ASN1_TIME_set_string_X509)
# endif
#else
# ifndef _ASN1_TIME_set_string_X509
#  define _ASN1_TIME_set_string_X509 OPENSSL_MANGLER_ASM(ASN1_TIME_set_string_X509)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_to_generalizedtime
#  define ASN1_TIME_to_generalizedtime OPENSSL_MANGLER(ASN1_TIME_to_generalizedtime)
# endif
#else
# ifndef _ASN1_TIME_to_generalizedtime
#  define _ASN1_TIME_to_generalizedtime OPENSSL_MANGLER_ASM(ASN1_TIME_to_generalizedtime)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TIME_to_tm
#  define ASN1_TIME_to_tm OPENSSL_MANGLER(ASN1_TIME_to_tm)
# endif
#else
# ifndef _ASN1_TIME_to_tm
#  define _ASN1_TIME_to_tm OPENSSL_MANGLER_ASM(ASN1_TIME_to_tm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_cmp
#  define ASN1_TYPE_cmp OPENSSL_MANGLER(ASN1_TYPE_cmp)
# endif
#else
# ifndef _ASN1_TYPE_cmp
#  define _ASN1_TYPE_cmp OPENSSL_MANGLER_ASM(ASN1_TYPE_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_free
#  define ASN1_TYPE_free OPENSSL_MANGLER(ASN1_TYPE_free)
# endif
#else
# ifndef _ASN1_TYPE_free
#  define _ASN1_TYPE_free OPENSSL_MANGLER_ASM(ASN1_TYPE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_get
#  define ASN1_TYPE_get OPENSSL_MANGLER(ASN1_TYPE_get)
# endif
#else
# ifndef _ASN1_TYPE_get
#  define _ASN1_TYPE_get OPENSSL_MANGLER_ASM(ASN1_TYPE_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_get_int_octetstring
#  define ASN1_TYPE_get_int_octetstring OPENSSL_MANGLER(ASN1_TYPE_get_int_octetstring)
# endif
#else
# ifndef _ASN1_TYPE_get_int_octetstring
#  define _ASN1_TYPE_get_int_octetstring OPENSSL_MANGLER_ASM(ASN1_TYPE_get_int_octetstring)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_get_octetstring
#  define ASN1_TYPE_get_octetstring OPENSSL_MANGLER(ASN1_TYPE_get_octetstring)
# endif
#else
# ifndef _ASN1_TYPE_get_octetstring
#  define _ASN1_TYPE_get_octetstring OPENSSL_MANGLER_ASM(ASN1_TYPE_get_octetstring)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_new
#  define ASN1_TYPE_new OPENSSL_MANGLER(ASN1_TYPE_new)
# endif
#else
# ifndef _ASN1_TYPE_new
#  define _ASN1_TYPE_new OPENSSL_MANGLER_ASM(ASN1_TYPE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_pack_sequence
#  define ASN1_TYPE_pack_sequence OPENSSL_MANGLER(ASN1_TYPE_pack_sequence)
# endif
#else
# ifndef _ASN1_TYPE_pack_sequence
#  define _ASN1_TYPE_pack_sequence OPENSSL_MANGLER_ASM(ASN1_TYPE_pack_sequence)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_set
#  define ASN1_TYPE_set OPENSSL_MANGLER(ASN1_TYPE_set)
# endif
#else
# ifndef _ASN1_TYPE_set
#  define _ASN1_TYPE_set OPENSSL_MANGLER_ASM(ASN1_TYPE_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_set1
#  define ASN1_TYPE_set1 OPENSSL_MANGLER(ASN1_TYPE_set1)
# endif
#else
# ifndef _ASN1_TYPE_set1
#  define _ASN1_TYPE_set1 OPENSSL_MANGLER_ASM(ASN1_TYPE_set1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_set_int_octetstring
#  define ASN1_TYPE_set_int_octetstring OPENSSL_MANGLER(ASN1_TYPE_set_int_octetstring)
# endif
#else
# ifndef _ASN1_TYPE_set_int_octetstring
#  define _ASN1_TYPE_set_int_octetstring OPENSSL_MANGLER_ASM(ASN1_TYPE_set_int_octetstring)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_set_octetstring
#  define ASN1_TYPE_set_octetstring OPENSSL_MANGLER(ASN1_TYPE_set_octetstring)
# endif
#else
# ifndef _ASN1_TYPE_set_octetstring
#  define _ASN1_TYPE_set_octetstring OPENSSL_MANGLER_ASM(ASN1_TYPE_set_octetstring)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_TYPE_unpack_sequence
#  define ASN1_TYPE_unpack_sequence OPENSSL_MANGLER(ASN1_TYPE_unpack_sequence)
# endif
#else
# ifndef _ASN1_TYPE_unpack_sequence
#  define _ASN1_TYPE_unpack_sequence OPENSSL_MANGLER_ASM(ASN1_TYPE_unpack_sequence)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UNIVERSALSTRING_free
#  define ASN1_UNIVERSALSTRING_free OPENSSL_MANGLER(ASN1_UNIVERSALSTRING_free)
# endif
#else
# ifndef _ASN1_UNIVERSALSTRING_free
#  define _ASN1_UNIVERSALSTRING_free OPENSSL_MANGLER_ASM(ASN1_UNIVERSALSTRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UNIVERSALSTRING_it
#  define ASN1_UNIVERSALSTRING_it OPENSSL_MANGLER(ASN1_UNIVERSALSTRING_it)
# endif
#else
# ifndef _ASN1_UNIVERSALSTRING_it
#  define _ASN1_UNIVERSALSTRING_it OPENSSL_MANGLER_ASM(ASN1_UNIVERSALSTRING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UNIVERSALSTRING_new
#  define ASN1_UNIVERSALSTRING_new OPENSSL_MANGLER(ASN1_UNIVERSALSTRING_new)
# endif
#else
# ifndef _ASN1_UNIVERSALSTRING_new
#  define _ASN1_UNIVERSALSTRING_new OPENSSL_MANGLER_ASM(ASN1_UNIVERSALSTRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UNIVERSALSTRING_to_string
#  define ASN1_UNIVERSALSTRING_to_string OPENSSL_MANGLER(ASN1_UNIVERSALSTRING_to_string)
# endif
#else
# ifndef _ASN1_UNIVERSALSTRING_to_string
#  define _ASN1_UNIVERSALSTRING_to_string OPENSSL_MANGLER_ASM(ASN1_UNIVERSALSTRING_to_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTCTIME_adj
#  define ASN1_UTCTIME_adj OPENSSL_MANGLER(ASN1_UTCTIME_adj)
# endif
#else
# ifndef _ASN1_UTCTIME_adj
#  define _ASN1_UTCTIME_adj OPENSSL_MANGLER_ASM(ASN1_UTCTIME_adj)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTCTIME_check
#  define ASN1_UTCTIME_check OPENSSL_MANGLER(ASN1_UTCTIME_check)
# endif
#else
# ifndef _ASN1_UTCTIME_check
#  define _ASN1_UTCTIME_check OPENSSL_MANGLER_ASM(ASN1_UTCTIME_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTCTIME_cmp_time_t
#  define ASN1_UTCTIME_cmp_time_t OPENSSL_MANGLER(ASN1_UTCTIME_cmp_time_t)
# endif
#else
# ifndef _ASN1_UTCTIME_cmp_time_t
#  define _ASN1_UTCTIME_cmp_time_t OPENSSL_MANGLER_ASM(ASN1_UTCTIME_cmp_time_t)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTCTIME_dup
#  define ASN1_UTCTIME_dup OPENSSL_MANGLER(ASN1_UTCTIME_dup)
# endif
#else
# ifndef _ASN1_UTCTIME_dup
#  define _ASN1_UTCTIME_dup OPENSSL_MANGLER_ASM(ASN1_UTCTIME_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTCTIME_free
#  define ASN1_UTCTIME_free OPENSSL_MANGLER(ASN1_UTCTIME_free)
# endif
#else
# ifndef _ASN1_UTCTIME_free
#  define _ASN1_UTCTIME_free OPENSSL_MANGLER_ASM(ASN1_UTCTIME_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTCTIME_it
#  define ASN1_UTCTIME_it OPENSSL_MANGLER(ASN1_UTCTIME_it)
# endif
#else
# ifndef _ASN1_UTCTIME_it
#  define _ASN1_UTCTIME_it OPENSSL_MANGLER_ASM(ASN1_UTCTIME_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTCTIME_new
#  define ASN1_UTCTIME_new OPENSSL_MANGLER(ASN1_UTCTIME_new)
# endif
#else
# ifndef _ASN1_UTCTIME_new
#  define _ASN1_UTCTIME_new OPENSSL_MANGLER_ASM(ASN1_UTCTIME_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTCTIME_print
#  define ASN1_UTCTIME_print OPENSSL_MANGLER(ASN1_UTCTIME_print)
# endif
#else
# ifndef _ASN1_UTCTIME_print
#  define _ASN1_UTCTIME_print OPENSSL_MANGLER_ASM(ASN1_UTCTIME_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTCTIME_set
#  define ASN1_UTCTIME_set OPENSSL_MANGLER(ASN1_UTCTIME_set)
# endif
#else
# ifndef _ASN1_UTCTIME_set
#  define _ASN1_UTCTIME_set OPENSSL_MANGLER_ASM(ASN1_UTCTIME_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTCTIME_set_string
#  define ASN1_UTCTIME_set_string OPENSSL_MANGLER(ASN1_UTCTIME_set_string)
# endif
#else
# ifndef _ASN1_UTCTIME_set_string
#  define _ASN1_UTCTIME_set_string OPENSSL_MANGLER_ASM(ASN1_UTCTIME_set_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTF8STRING_free
#  define ASN1_UTF8STRING_free OPENSSL_MANGLER(ASN1_UTF8STRING_free)
# endif
#else
# ifndef _ASN1_UTF8STRING_free
#  define _ASN1_UTF8STRING_free OPENSSL_MANGLER_ASM(ASN1_UTF8STRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTF8STRING_it
#  define ASN1_UTF8STRING_it OPENSSL_MANGLER(ASN1_UTF8STRING_it)
# endif
#else
# ifndef _ASN1_UTF8STRING_it
#  define _ASN1_UTF8STRING_it OPENSSL_MANGLER_ASM(ASN1_UTF8STRING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_UTF8STRING_new
#  define ASN1_UTF8STRING_new OPENSSL_MANGLER(ASN1_UTF8STRING_new)
# endif
#else
# ifndef _ASN1_UTF8STRING_new
#  define _ASN1_UTF8STRING_new OPENSSL_MANGLER_ASM(ASN1_UTF8STRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_VISIBLESTRING_free
#  define ASN1_VISIBLESTRING_free OPENSSL_MANGLER(ASN1_VISIBLESTRING_free)
# endif
#else
# ifndef _ASN1_VISIBLESTRING_free
#  define _ASN1_VISIBLESTRING_free OPENSSL_MANGLER_ASM(ASN1_VISIBLESTRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_VISIBLESTRING_it
#  define ASN1_VISIBLESTRING_it OPENSSL_MANGLER(ASN1_VISIBLESTRING_it)
# endif
#else
# ifndef _ASN1_VISIBLESTRING_it
#  define _ASN1_VISIBLESTRING_it OPENSSL_MANGLER_ASM(ASN1_VISIBLESTRING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_VISIBLESTRING_new
#  define ASN1_VISIBLESTRING_new OPENSSL_MANGLER(ASN1_VISIBLESTRING_new)
# endif
#else
# ifndef _ASN1_VISIBLESTRING_new
#  define _ASN1_VISIBLESTRING_new OPENSSL_MANGLER_ASM(ASN1_VISIBLESTRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_add_oid_module
#  define ASN1_add_oid_module OPENSSL_MANGLER(ASN1_add_oid_module)
# endif
#else
# ifndef _ASN1_add_oid_module
#  define _ASN1_add_oid_module OPENSSL_MANGLER_ASM(ASN1_add_oid_module)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_add_stable_module
#  define ASN1_add_stable_module OPENSSL_MANGLER(ASN1_add_stable_module)
# endif
#else
# ifndef _ASN1_add_stable_module
#  define _ASN1_add_stable_module OPENSSL_MANGLER_ASM(ASN1_add_stable_module)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_bn_print
#  define ASN1_bn_print OPENSSL_MANGLER(ASN1_bn_print)
# endif
#else
# ifndef _ASN1_bn_print
#  define _ASN1_bn_print OPENSSL_MANGLER_ASM(ASN1_bn_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_buf_print
#  define ASN1_buf_print OPENSSL_MANGLER(ASN1_buf_print)
# endif
#else
# ifndef _ASN1_buf_print
#  define _ASN1_buf_print OPENSSL_MANGLER_ASM(ASN1_buf_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_check_infinite_end
#  define ASN1_check_infinite_end OPENSSL_MANGLER(ASN1_check_infinite_end)
# endif
#else
# ifndef _ASN1_check_infinite_end
#  define _ASN1_check_infinite_end OPENSSL_MANGLER_ASM(ASN1_check_infinite_end)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_const_check_infinite_end
#  define ASN1_const_check_infinite_end OPENSSL_MANGLER(ASN1_const_check_infinite_end)
# endif
#else
# ifndef _ASN1_const_check_infinite_end
#  define _ASN1_const_check_infinite_end OPENSSL_MANGLER_ASM(ASN1_const_check_infinite_end)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_d2i_bio
#  define ASN1_d2i_bio OPENSSL_MANGLER(ASN1_d2i_bio)
# endif
#else
# ifndef _ASN1_d2i_bio
#  define _ASN1_d2i_bio OPENSSL_MANGLER_ASM(ASN1_d2i_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_d2i_fp
#  define ASN1_d2i_fp OPENSSL_MANGLER(ASN1_d2i_fp)
# endif
#else
# ifndef _ASN1_d2i_fp
#  define _ASN1_d2i_fp OPENSSL_MANGLER_ASM(ASN1_d2i_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_digest
#  define ASN1_digest OPENSSL_MANGLER(ASN1_digest)
# endif
#else
# ifndef _ASN1_digest
#  define _ASN1_digest OPENSSL_MANGLER_ASM(ASN1_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_dup
#  define ASN1_dup OPENSSL_MANGLER(ASN1_dup)
# endif
#else
# ifndef _ASN1_dup
#  define _ASN1_dup OPENSSL_MANGLER_ASM(ASN1_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_generate_nconf
#  define ASN1_generate_nconf OPENSSL_MANGLER(ASN1_generate_nconf)
# endif
#else
# ifndef _ASN1_generate_nconf
#  define _ASN1_generate_nconf OPENSSL_MANGLER_ASM(ASN1_generate_nconf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_generate_v3
#  define ASN1_generate_v3 OPENSSL_MANGLER(ASN1_generate_v3)
# endif
#else
# ifndef _ASN1_generate_v3
#  define _ASN1_generate_v3 OPENSSL_MANGLER_ASM(ASN1_generate_v3)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_get_object
#  define ASN1_get_object OPENSSL_MANGLER(ASN1_get_object)
# endif
#else
# ifndef _ASN1_get_object
#  define _ASN1_get_object OPENSSL_MANGLER_ASM(ASN1_get_object)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_i2d_bio
#  define ASN1_i2d_bio OPENSSL_MANGLER(ASN1_i2d_bio)
# endif
#else
# ifndef _ASN1_i2d_bio
#  define _ASN1_i2d_bio OPENSSL_MANGLER_ASM(ASN1_i2d_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_i2d_fp
#  define ASN1_i2d_fp OPENSSL_MANGLER(ASN1_i2d_fp)
# endif
#else
# ifndef _ASN1_i2d_fp
#  define _ASN1_i2d_fp OPENSSL_MANGLER_ASM(ASN1_i2d_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_d2i
#  define ASN1_item_d2i OPENSSL_MANGLER(ASN1_item_d2i)
# endif
#else
# ifndef _ASN1_item_d2i
#  define _ASN1_item_d2i OPENSSL_MANGLER_ASM(ASN1_item_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_d2i_bio
#  define ASN1_item_d2i_bio OPENSSL_MANGLER(ASN1_item_d2i_bio)
# endif
#else
# ifndef _ASN1_item_d2i_bio
#  define _ASN1_item_d2i_bio OPENSSL_MANGLER_ASM(ASN1_item_d2i_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_d2i_bio_ex
#  define ASN1_item_d2i_bio_ex OPENSSL_MANGLER(ASN1_item_d2i_bio_ex)
# endif
#else
# ifndef _ASN1_item_d2i_bio_ex
#  define _ASN1_item_d2i_bio_ex OPENSSL_MANGLER_ASM(ASN1_item_d2i_bio_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_d2i_ex
#  define ASN1_item_d2i_ex OPENSSL_MANGLER(ASN1_item_d2i_ex)
# endif
#else
# ifndef _ASN1_item_d2i_ex
#  define _ASN1_item_d2i_ex OPENSSL_MANGLER_ASM(ASN1_item_d2i_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_d2i_fp
#  define ASN1_item_d2i_fp OPENSSL_MANGLER(ASN1_item_d2i_fp)
# endif
#else
# ifndef _ASN1_item_d2i_fp
#  define _ASN1_item_d2i_fp OPENSSL_MANGLER_ASM(ASN1_item_d2i_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_d2i_fp_ex
#  define ASN1_item_d2i_fp_ex OPENSSL_MANGLER(ASN1_item_d2i_fp_ex)
# endif
#else
# ifndef _ASN1_item_d2i_fp_ex
#  define _ASN1_item_d2i_fp_ex OPENSSL_MANGLER_ASM(ASN1_item_d2i_fp_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_digest
#  define ASN1_item_digest OPENSSL_MANGLER(ASN1_item_digest)
# endif
#else
# ifndef _ASN1_item_digest
#  define _ASN1_item_digest OPENSSL_MANGLER_ASM(ASN1_item_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_dup
#  define ASN1_item_dup OPENSSL_MANGLER(ASN1_item_dup)
# endif
#else
# ifndef _ASN1_item_dup
#  define _ASN1_item_dup OPENSSL_MANGLER_ASM(ASN1_item_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_ex_d2i
#  define ASN1_item_ex_d2i OPENSSL_MANGLER(ASN1_item_ex_d2i)
# endif
#else
# ifndef _ASN1_item_ex_d2i
#  define _ASN1_item_ex_d2i OPENSSL_MANGLER_ASM(ASN1_item_ex_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_ex_free
#  define ASN1_item_ex_free OPENSSL_MANGLER(ASN1_item_ex_free)
# endif
#else
# ifndef _ASN1_item_ex_free
#  define _ASN1_item_ex_free OPENSSL_MANGLER_ASM(ASN1_item_ex_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_ex_i2d
#  define ASN1_item_ex_i2d OPENSSL_MANGLER(ASN1_item_ex_i2d)
# endif
#else
# ifndef _ASN1_item_ex_i2d
#  define _ASN1_item_ex_i2d OPENSSL_MANGLER_ASM(ASN1_item_ex_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_ex_new
#  define ASN1_item_ex_new OPENSSL_MANGLER(ASN1_item_ex_new)
# endif
#else
# ifndef _ASN1_item_ex_new
#  define _ASN1_item_ex_new OPENSSL_MANGLER_ASM(ASN1_item_ex_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_free
#  define ASN1_item_free OPENSSL_MANGLER(ASN1_item_free)
# endif
#else
# ifndef _ASN1_item_free
#  define _ASN1_item_free OPENSSL_MANGLER_ASM(ASN1_item_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_i2d
#  define ASN1_item_i2d OPENSSL_MANGLER(ASN1_item_i2d)
# endif
#else
# ifndef _ASN1_item_i2d
#  define _ASN1_item_i2d OPENSSL_MANGLER_ASM(ASN1_item_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_i2d_bio
#  define ASN1_item_i2d_bio OPENSSL_MANGLER(ASN1_item_i2d_bio)
# endif
#else
# ifndef _ASN1_item_i2d_bio
#  define _ASN1_item_i2d_bio OPENSSL_MANGLER_ASM(ASN1_item_i2d_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_i2d_fp
#  define ASN1_item_i2d_fp OPENSSL_MANGLER(ASN1_item_i2d_fp)
# endif
#else
# ifndef _ASN1_item_i2d_fp
#  define _ASN1_item_i2d_fp OPENSSL_MANGLER_ASM(ASN1_item_i2d_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_i2d_mem_bio
#  define ASN1_item_i2d_mem_bio OPENSSL_MANGLER(ASN1_item_i2d_mem_bio)
# endif
#else
# ifndef _ASN1_item_i2d_mem_bio
#  define _ASN1_item_i2d_mem_bio OPENSSL_MANGLER_ASM(ASN1_item_i2d_mem_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_ndef_i2d
#  define ASN1_item_ndef_i2d OPENSSL_MANGLER(ASN1_item_ndef_i2d)
# endif
#else
# ifndef _ASN1_item_ndef_i2d
#  define _ASN1_item_ndef_i2d OPENSSL_MANGLER_ASM(ASN1_item_ndef_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_new
#  define ASN1_item_new OPENSSL_MANGLER(ASN1_item_new)
# endif
#else
# ifndef _ASN1_item_new
#  define _ASN1_item_new OPENSSL_MANGLER_ASM(ASN1_item_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_new_ex
#  define ASN1_item_new_ex OPENSSL_MANGLER(ASN1_item_new_ex)
# endif
#else
# ifndef _ASN1_item_new_ex
#  define _ASN1_item_new_ex OPENSSL_MANGLER_ASM(ASN1_item_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_pack
#  define ASN1_item_pack OPENSSL_MANGLER(ASN1_item_pack)
# endif
#else
# ifndef _ASN1_item_pack
#  define _ASN1_item_pack OPENSSL_MANGLER_ASM(ASN1_item_pack)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_print
#  define ASN1_item_print OPENSSL_MANGLER(ASN1_item_print)
# endif
#else
# ifndef _ASN1_item_print
#  define _ASN1_item_print OPENSSL_MANGLER_ASM(ASN1_item_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_sign
#  define ASN1_item_sign OPENSSL_MANGLER(ASN1_item_sign)
# endif
#else
# ifndef _ASN1_item_sign
#  define _ASN1_item_sign OPENSSL_MANGLER_ASM(ASN1_item_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_sign_ctx
#  define ASN1_item_sign_ctx OPENSSL_MANGLER(ASN1_item_sign_ctx)
# endif
#else
# ifndef _ASN1_item_sign_ctx
#  define _ASN1_item_sign_ctx OPENSSL_MANGLER_ASM(ASN1_item_sign_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_sign_ex
#  define ASN1_item_sign_ex OPENSSL_MANGLER(ASN1_item_sign_ex)
# endif
#else
# ifndef _ASN1_item_sign_ex
#  define _ASN1_item_sign_ex OPENSSL_MANGLER_ASM(ASN1_item_sign_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_unpack
#  define ASN1_item_unpack OPENSSL_MANGLER(ASN1_item_unpack)
# endif
#else
# ifndef _ASN1_item_unpack
#  define _ASN1_item_unpack OPENSSL_MANGLER_ASM(ASN1_item_unpack)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_verify
#  define ASN1_item_verify OPENSSL_MANGLER(ASN1_item_verify)
# endif
#else
# ifndef _ASN1_item_verify
#  define _ASN1_item_verify OPENSSL_MANGLER_ASM(ASN1_item_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_verify_ctx
#  define ASN1_item_verify_ctx OPENSSL_MANGLER(ASN1_item_verify_ctx)
# endif
#else
# ifndef _ASN1_item_verify_ctx
#  define _ASN1_item_verify_ctx OPENSSL_MANGLER_ASM(ASN1_item_verify_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_item_verify_ex
#  define ASN1_item_verify_ex OPENSSL_MANGLER(ASN1_item_verify_ex)
# endif
#else
# ifndef _ASN1_item_verify_ex
#  define _ASN1_item_verify_ex OPENSSL_MANGLER_ASM(ASN1_item_verify_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_mbstring_copy
#  define ASN1_mbstring_copy OPENSSL_MANGLER(ASN1_mbstring_copy)
# endif
#else
# ifndef _ASN1_mbstring_copy
#  define _ASN1_mbstring_copy OPENSSL_MANGLER_ASM(ASN1_mbstring_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_mbstring_ncopy
#  define ASN1_mbstring_ncopy OPENSSL_MANGLER(ASN1_mbstring_ncopy)
# endif
#else
# ifndef _ASN1_mbstring_ncopy
#  define _ASN1_mbstring_ncopy OPENSSL_MANGLER_ASM(ASN1_mbstring_ncopy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_object_size
#  define ASN1_object_size OPENSSL_MANGLER(ASN1_object_size)
# endif
#else
# ifndef _ASN1_object_size
#  define _ASN1_object_size OPENSSL_MANGLER_ASM(ASN1_object_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_parse
#  define ASN1_parse OPENSSL_MANGLER(ASN1_parse)
# endif
#else
# ifndef _ASN1_parse
#  define _ASN1_parse OPENSSL_MANGLER_ASM(ASN1_parse)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_parse_dump
#  define ASN1_parse_dump OPENSSL_MANGLER(ASN1_parse_dump)
# endif
#else
# ifndef _ASN1_parse_dump
#  define _ASN1_parse_dump OPENSSL_MANGLER_ASM(ASN1_parse_dump)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_put_eoc
#  define ASN1_put_eoc OPENSSL_MANGLER(ASN1_put_eoc)
# endif
#else
# ifndef _ASN1_put_eoc
#  define _ASN1_put_eoc OPENSSL_MANGLER_ASM(ASN1_put_eoc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_put_object
#  define ASN1_put_object OPENSSL_MANGLER(ASN1_put_object)
# endif
#else
# ifndef _ASN1_put_object
#  define _ASN1_put_object OPENSSL_MANGLER_ASM(ASN1_put_object)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_sign
#  define ASN1_sign OPENSSL_MANGLER(ASN1_sign)
# endif
#else
# ifndef _ASN1_sign
#  define _ASN1_sign OPENSSL_MANGLER_ASM(ASN1_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_str2mask
#  define ASN1_str2mask OPENSSL_MANGLER(ASN1_str2mask)
# endif
#else
# ifndef _ASN1_str2mask
#  define _ASN1_str2mask OPENSSL_MANGLER_ASM(ASN1_str2mask)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_tag2bit
#  define ASN1_tag2bit OPENSSL_MANGLER(ASN1_tag2bit)
# endif
#else
# ifndef _ASN1_tag2bit
#  define _ASN1_tag2bit OPENSSL_MANGLER_ASM(ASN1_tag2bit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_tag2str
#  define ASN1_tag2str OPENSSL_MANGLER(ASN1_tag2str)
# endif
#else
# ifndef _ASN1_tag2str
#  define _ASN1_tag2str OPENSSL_MANGLER_ASM(ASN1_tag2str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASN1_verify
#  define ASN1_verify OPENSSL_MANGLER(ASN1_verify)
# endif
#else
# ifndef _ASN1_verify
#  define _ASN1_verify OPENSSL_MANGLER_ASM(ASN1_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASRange_free
#  define ASRange_free OPENSSL_MANGLER(ASRange_free)
# endif
#else
# ifndef _ASRange_free
#  define _ASRange_free OPENSSL_MANGLER_ASM(ASRange_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASRange_it
#  define ASRange_it OPENSSL_MANGLER(ASRange_it)
# endif
#else
# ifndef _ASRange_it
#  define _ASRange_it OPENSSL_MANGLER_ASM(ASRange_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASRange_new
#  define ASRange_new OPENSSL_MANGLER(ASRange_new)
# endif
#else
# ifndef _ASRange_new
#  define _ASRange_new OPENSSL_MANGLER_ASM(ASRange_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_WAIT_CTX_clear_fd
#  define ASYNC_WAIT_CTX_clear_fd OPENSSL_MANGLER(ASYNC_WAIT_CTX_clear_fd)
# endif
#else
# ifndef _ASYNC_WAIT_CTX_clear_fd
#  define _ASYNC_WAIT_CTX_clear_fd OPENSSL_MANGLER_ASM(ASYNC_WAIT_CTX_clear_fd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_WAIT_CTX_free
#  define ASYNC_WAIT_CTX_free OPENSSL_MANGLER(ASYNC_WAIT_CTX_free)
# endif
#else
# ifndef _ASYNC_WAIT_CTX_free
#  define _ASYNC_WAIT_CTX_free OPENSSL_MANGLER_ASM(ASYNC_WAIT_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_WAIT_CTX_get_all_fds
#  define ASYNC_WAIT_CTX_get_all_fds OPENSSL_MANGLER(ASYNC_WAIT_CTX_get_all_fds)
# endif
#else
# ifndef _ASYNC_WAIT_CTX_get_all_fds
#  define _ASYNC_WAIT_CTX_get_all_fds OPENSSL_MANGLER_ASM(ASYNC_WAIT_CTX_get_all_fds)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_WAIT_CTX_get_callback
#  define ASYNC_WAIT_CTX_get_callback OPENSSL_MANGLER(ASYNC_WAIT_CTX_get_callback)
# endif
#else
# ifndef _ASYNC_WAIT_CTX_get_callback
#  define _ASYNC_WAIT_CTX_get_callback OPENSSL_MANGLER_ASM(ASYNC_WAIT_CTX_get_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_WAIT_CTX_get_changed_fds
#  define ASYNC_WAIT_CTX_get_changed_fds OPENSSL_MANGLER(ASYNC_WAIT_CTX_get_changed_fds)
# endif
#else
# ifndef _ASYNC_WAIT_CTX_get_changed_fds
#  define _ASYNC_WAIT_CTX_get_changed_fds OPENSSL_MANGLER_ASM(ASYNC_WAIT_CTX_get_changed_fds)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_WAIT_CTX_get_fd
#  define ASYNC_WAIT_CTX_get_fd OPENSSL_MANGLER(ASYNC_WAIT_CTX_get_fd)
# endif
#else
# ifndef _ASYNC_WAIT_CTX_get_fd
#  define _ASYNC_WAIT_CTX_get_fd OPENSSL_MANGLER_ASM(ASYNC_WAIT_CTX_get_fd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_WAIT_CTX_get_status
#  define ASYNC_WAIT_CTX_get_status OPENSSL_MANGLER(ASYNC_WAIT_CTX_get_status)
# endif
#else
# ifndef _ASYNC_WAIT_CTX_get_status
#  define _ASYNC_WAIT_CTX_get_status OPENSSL_MANGLER_ASM(ASYNC_WAIT_CTX_get_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_WAIT_CTX_new
#  define ASYNC_WAIT_CTX_new OPENSSL_MANGLER(ASYNC_WAIT_CTX_new)
# endif
#else
# ifndef _ASYNC_WAIT_CTX_new
#  define _ASYNC_WAIT_CTX_new OPENSSL_MANGLER_ASM(ASYNC_WAIT_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_WAIT_CTX_set_callback
#  define ASYNC_WAIT_CTX_set_callback OPENSSL_MANGLER(ASYNC_WAIT_CTX_set_callback)
# endif
#else
# ifndef _ASYNC_WAIT_CTX_set_callback
#  define _ASYNC_WAIT_CTX_set_callback OPENSSL_MANGLER_ASM(ASYNC_WAIT_CTX_set_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_WAIT_CTX_set_status
#  define ASYNC_WAIT_CTX_set_status OPENSSL_MANGLER(ASYNC_WAIT_CTX_set_status)
# endif
#else
# ifndef _ASYNC_WAIT_CTX_set_status
#  define _ASYNC_WAIT_CTX_set_status OPENSSL_MANGLER_ASM(ASYNC_WAIT_CTX_set_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_WAIT_CTX_set_wait_fd
#  define ASYNC_WAIT_CTX_set_wait_fd OPENSSL_MANGLER(ASYNC_WAIT_CTX_set_wait_fd)
# endif
#else
# ifndef _ASYNC_WAIT_CTX_set_wait_fd
#  define _ASYNC_WAIT_CTX_set_wait_fd OPENSSL_MANGLER_ASM(ASYNC_WAIT_CTX_set_wait_fd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_block_pause
#  define ASYNC_block_pause OPENSSL_MANGLER(ASYNC_block_pause)
# endif
#else
# ifndef _ASYNC_block_pause
#  define _ASYNC_block_pause OPENSSL_MANGLER_ASM(ASYNC_block_pause)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_cleanup_thread
#  define ASYNC_cleanup_thread OPENSSL_MANGLER(ASYNC_cleanup_thread)
# endif
#else
# ifndef _ASYNC_cleanup_thread
#  define _ASYNC_cleanup_thread OPENSSL_MANGLER_ASM(ASYNC_cleanup_thread)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_get_current_job
#  define ASYNC_get_current_job OPENSSL_MANGLER(ASYNC_get_current_job)
# endif
#else
# ifndef _ASYNC_get_current_job
#  define _ASYNC_get_current_job OPENSSL_MANGLER_ASM(ASYNC_get_current_job)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_get_wait_ctx
#  define ASYNC_get_wait_ctx OPENSSL_MANGLER(ASYNC_get_wait_ctx)
# endif
#else
# ifndef _ASYNC_get_wait_ctx
#  define _ASYNC_get_wait_ctx OPENSSL_MANGLER_ASM(ASYNC_get_wait_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_init_thread
#  define ASYNC_init_thread OPENSSL_MANGLER(ASYNC_init_thread)
# endif
#else
# ifndef _ASYNC_init_thread
#  define _ASYNC_init_thread OPENSSL_MANGLER_ASM(ASYNC_init_thread)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_is_capable
#  define ASYNC_is_capable OPENSSL_MANGLER(ASYNC_is_capable)
# endif
#else
# ifndef _ASYNC_is_capable
#  define _ASYNC_is_capable OPENSSL_MANGLER_ASM(ASYNC_is_capable)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_pause_job
#  define ASYNC_pause_job OPENSSL_MANGLER(ASYNC_pause_job)
# endif
#else
# ifndef _ASYNC_pause_job
#  define _ASYNC_pause_job OPENSSL_MANGLER_ASM(ASYNC_pause_job)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_start_job
#  define ASYNC_start_job OPENSSL_MANGLER(ASYNC_start_job)
# endif
#else
# ifndef _ASYNC_start_job
#  define _ASYNC_start_job OPENSSL_MANGLER_ASM(ASYNC_start_job)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ASYNC_unblock_pause
#  define ASYNC_unblock_pause OPENSSL_MANGLER(ASYNC_unblock_pause)
# endif
#else
# ifndef _ASYNC_unblock_pause
#  define _ASYNC_unblock_pause OPENSSL_MANGLER_ASM(ASYNC_unblock_pause)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AUTHORITY_INFO_ACCESS_free
#  define AUTHORITY_INFO_ACCESS_free OPENSSL_MANGLER(AUTHORITY_INFO_ACCESS_free)
# endif
#else
# ifndef _AUTHORITY_INFO_ACCESS_free
#  define _AUTHORITY_INFO_ACCESS_free OPENSSL_MANGLER_ASM(AUTHORITY_INFO_ACCESS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AUTHORITY_INFO_ACCESS_it
#  define AUTHORITY_INFO_ACCESS_it OPENSSL_MANGLER(AUTHORITY_INFO_ACCESS_it)
# endif
#else
# ifndef _AUTHORITY_INFO_ACCESS_it
#  define _AUTHORITY_INFO_ACCESS_it OPENSSL_MANGLER_ASM(AUTHORITY_INFO_ACCESS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AUTHORITY_INFO_ACCESS_new
#  define AUTHORITY_INFO_ACCESS_new OPENSSL_MANGLER(AUTHORITY_INFO_ACCESS_new)
# endif
#else
# ifndef _AUTHORITY_INFO_ACCESS_new
#  define _AUTHORITY_INFO_ACCESS_new OPENSSL_MANGLER_ASM(AUTHORITY_INFO_ACCESS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AUTHORITY_KEYID_free
#  define AUTHORITY_KEYID_free OPENSSL_MANGLER(AUTHORITY_KEYID_free)
# endif
#else
# ifndef _AUTHORITY_KEYID_free
#  define _AUTHORITY_KEYID_free OPENSSL_MANGLER_ASM(AUTHORITY_KEYID_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AUTHORITY_KEYID_it
#  define AUTHORITY_KEYID_it OPENSSL_MANGLER(AUTHORITY_KEYID_it)
# endif
#else
# ifndef _AUTHORITY_KEYID_it
#  define _AUTHORITY_KEYID_it OPENSSL_MANGLER_ASM(AUTHORITY_KEYID_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef AUTHORITY_KEYID_new
#  define AUTHORITY_KEYID_new OPENSSL_MANGLER(AUTHORITY_KEYID_new)
# endif
#else
# ifndef _AUTHORITY_KEYID_new
#  define _AUTHORITY_KEYID_new OPENSSL_MANGLER_ASM(AUTHORITY_KEYID_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BASIC_CONSTRAINTS_free
#  define BASIC_CONSTRAINTS_free OPENSSL_MANGLER(BASIC_CONSTRAINTS_free)
# endif
#else
# ifndef _BASIC_CONSTRAINTS_free
#  define _BASIC_CONSTRAINTS_free OPENSSL_MANGLER_ASM(BASIC_CONSTRAINTS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BASIC_CONSTRAINTS_it
#  define BASIC_CONSTRAINTS_it OPENSSL_MANGLER(BASIC_CONSTRAINTS_it)
# endif
#else
# ifndef _BASIC_CONSTRAINTS_it
#  define _BASIC_CONSTRAINTS_it OPENSSL_MANGLER_ASM(BASIC_CONSTRAINTS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BASIC_CONSTRAINTS_new
#  define BASIC_CONSTRAINTS_new OPENSSL_MANGLER(BASIC_CONSTRAINTS_new)
# endif
#else
# ifndef _BASIC_CONSTRAINTS_new
#  define _BASIC_CONSTRAINTS_new OPENSSL_MANGLER_ASM(BASIC_CONSTRAINTS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BF_cbc_encrypt
#  define BF_cbc_encrypt OPENSSL_MANGLER(BF_cbc_encrypt)
# endif
#else
# ifndef _BF_cbc_encrypt
#  define _BF_cbc_encrypt OPENSSL_MANGLER_ASM(BF_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BF_cfb64_encrypt
#  define BF_cfb64_encrypt OPENSSL_MANGLER(BF_cfb64_encrypt)
# endif
#else
# ifndef _BF_cfb64_encrypt
#  define _BF_cfb64_encrypt OPENSSL_MANGLER_ASM(BF_cfb64_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BF_decrypt
#  define BF_decrypt OPENSSL_MANGLER(BF_decrypt)
# endif
#else
# ifndef _BF_decrypt
#  define _BF_decrypt OPENSSL_MANGLER_ASM(BF_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BF_ecb_encrypt
#  define BF_ecb_encrypt OPENSSL_MANGLER(BF_ecb_encrypt)
# endif
#else
# ifndef _BF_ecb_encrypt
#  define _BF_ecb_encrypt OPENSSL_MANGLER_ASM(BF_ecb_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BF_encrypt
#  define BF_encrypt OPENSSL_MANGLER(BF_encrypt)
# endif
#else
# ifndef _BF_encrypt
#  define _BF_encrypt OPENSSL_MANGLER_ASM(BF_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BF_ofb64_encrypt
#  define BF_ofb64_encrypt OPENSSL_MANGLER(BF_ofb64_encrypt)
# endif
#else
# ifndef _BF_ofb64_encrypt
#  define _BF_ofb64_encrypt OPENSSL_MANGLER_ASM(BF_ofb64_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BF_options
#  define BF_options OPENSSL_MANGLER(BF_options)
# endif
#else
# ifndef _BF_options
#  define _BF_options OPENSSL_MANGLER_ASM(BF_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BF_set_key
#  define BF_set_key OPENSSL_MANGLER(BF_set_key)
# endif
#else
# ifndef _BF_set_key
#  define _BF_set_key OPENSSL_MANGLER_ASM(BF_set_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIGNUM_it
#  define BIGNUM_it OPENSSL_MANGLER(BIGNUM_it)
# endif
#else
# ifndef _BIGNUM_it
#  define _BIGNUM_it OPENSSL_MANGLER_ASM(BIGNUM_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDRINFO_address
#  define BIO_ADDRINFO_address OPENSSL_MANGLER(BIO_ADDRINFO_address)
# endif
#else
# ifndef _BIO_ADDRINFO_address
#  define _BIO_ADDRINFO_address OPENSSL_MANGLER_ASM(BIO_ADDRINFO_address)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDRINFO_family
#  define BIO_ADDRINFO_family OPENSSL_MANGLER(BIO_ADDRINFO_family)
# endif
#else
# ifndef _BIO_ADDRINFO_family
#  define _BIO_ADDRINFO_family OPENSSL_MANGLER_ASM(BIO_ADDRINFO_family)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDRINFO_free
#  define BIO_ADDRINFO_free OPENSSL_MANGLER(BIO_ADDRINFO_free)
# endif
#else
# ifndef _BIO_ADDRINFO_free
#  define _BIO_ADDRINFO_free OPENSSL_MANGLER_ASM(BIO_ADDRINFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDRINFO_next
#  define BIO_ADDRINFO_next OPENSSL_MANGLER(BIO_ADDRINFO_next)
# endif
#else
# ifndef _BIO_ADDRINFO_next
#  define _BIO_ADDRINFO_next OPENSSL_MANGLER_ASM(BIO_ADDRINFO_next)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDRINFO_protocol
#  define BIO_ADDRINFO_protocol OPENSSL_MANGLER(BIO_ADDRINFO_protocol)
# endif
#else
# ifndef _BIO_ADDRINFO_protocol
#  define _BIO_ADDRINFO_protocol OPENSSL_MANGLER_ASM(BIO_ADDRINFO_protocol)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDRINFO_sockaddr
#  define BIO_ADDRINFO_sockaddr OPENSSL_MANGLER(BIO_ADDRINFO_sockaddr)
# endif
#else
# ifndef _BIO_ADDRINFO_sockaddr
#  define _BIO_ADDRINFO_sockaddr OPENSSL_MANGLER_ASM(BIO_ADDRINFO_sockaddr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDRINFO_sockaddr_size
#  define BIO_ADDRINFO_sockaddr_size OPENSSL_MANGLER(BIO_ADDRINFO_sockaddr_size)
# endif
#else
# ifndef _BIO_ADDRINFO_sockaddr_size
#  define _BIO_ADDRINFO_sockaddr_size OPENSSL_MANGLER_ASM(BIO_ADDRINFO_sockaddr_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDRINFO_socktype
#  define BIO_ADDRINFO_socktype OPENSSL_MANGLER(BIO_ADDRINFO_socktype)
# endif
#else
# ifndef _BIO_ADDRINFO_socktype
#  define _BIO_ADDRINFO_socktype OPENSSL_MANGLER_ASM(BIO_ADDRINFO_socktype)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_clear
#  define BIO_ADDR_clear OPENSSL_MANGLER(BIO_ADDR_clear)
# endif
#else
# ifndef _BIO_ADDR_clear
#  define _BIO_ADDR_clear OPENSSL_MANGLER_ASM(BIO_ADDR_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_family
#  define BIO_ADDR_family OPENSSL_MANGLER(BIO_ADDR_family)
# endif
#else
# ifndef _BIO_ADDR_family
#  define _BIO_ADDR_family OPENSSL_MANGLER_ASM(BIO_ADDR_family)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_free
#  define BIO_ADDR_free OPENSSL_MANGLER(BIO_ADDR_free)
# endif
#else
# ifndef _BIO_ADDR_free
#  define _BIO_ADDR_free OPENSSL_MANGLER_ASM(BIO_ADDR_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_hostname_string
#  define BIO_ADDR_hostname_string OPENSSL_MANGLER(BIO_ADDR_hostname_string)
# endif
#else
# ifndef _BIO_ADDR_hostname_string
#  define _BIO_ADDR_hostname_string OPENSSL_MANGLER_ASM(BIO_ADDR_hostname_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_make
#  define BIO_ADDR_make OPENSSL_MANGLER(BIO_ADDR_make)
# endif
#else
# ifndef _BIO_ADDR_make
#  define _BIO_ADDR_make OPENSSL_MANGLER_ASM(BIO_ADDR_make)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_new
#  define BIO_ADDR_new OPENSSL_MANGLER(BIO_ADDR_new)
# endif
#else
# ifndef _BIO_ADDR_new
#  define _BIO_ADDR_new OPENSSL_MANGLER_ASM(BIO_ADDR_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_path_string
#  define BIO_ADDR_path_string OPENSSL_MANGLER(BIO_ADDR_path_string)
# endif
#else
# ifndef _BIO_ADDR_path_string
#  define _BIO_ADDR_path_string OPENSSL_MANGLER_ASM(BIO_ADDR_path_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_rawaddress
#  define BIO_ADDR_rawaddress OPENSSL_MANGLER(BIO_ADDR_rawaddress)
# endif
#else
# ifndef _BIO_ADDR_rawaddress
#  define _BIO_ADDR_rawaddress OPENSSL_MANGLER_ASM(BIO_ADDR_rawaddress)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_rawmake
#  define BIO_ADDR_rawmake OPENSSL_MANGLER(BIO_ADDR_rawmake)
# endif
#else
# ifndef _BIO_ADDR_rawmake
#  define _BIO_ADDR_rawmake OPENSSL_MANGLER_ASM(BIO_ADDR_rawmake)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_rawport
#  define BIO_ADDR_rawport OPENSSL_MANGLER(BIO_ADDR_rawport)
# endif
#else
# ifndef _BIO_ADDR_rawport
#  define _BIO_ADDR_rawport OPENSSL_MANGLER_ASM(BIO_ADDR_rawport)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_service_string
#  define BIO_ADDR_service_string OPENSSL_MANGLER(BIO_ADDR_service_string)
# endif
#else
# ifndef _BIO_ADDR_service_string
#  define _BIO_ADDR_service_string OPENSSL_MANGLER_ASM(BIO_ADDR_service_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_sockaddr
#  define BIO_ADDR_sockaddr OPENSSL_MANGLER(BIO_ADDR_sockaddr)
# endif
#else
# ifndef _BIO_ADDR_sockaddr
#  define _BIO_ADDR_sockaddr OPENSSL_MANGLER_ASM(BIO_ADDR_sockaddr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_sockaddr_noconst
#  define BIO_ADDR_sockaddr_noconst OPENSSL_MANGLER(BIO_ADDR_sockaddr_noconst)
# endif
#else
# ifndef _BIO_ADDR_sockaddr_noconst
#  define _BIO_ADDR_sockaddr_noconst OPENSSL_MANGLER_ASM(BIO_ADDR_sockaddr_noconst)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ADDR_sockaddr_size
#  define BIO_ADDR_sockaddr_size OPENSSL_MANGLER(BIO_ADDR_sockaddr_size)
# endif
#else
# ifndef _BIO_ADDR_sockaddr_size
#  define _BIO_ADDR_sockaddr_size OPENSSL_MANGLER_ASM(BIO_ADDR_sockaddr_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_CONNECT_free
#  define BIO_CONNECT_free OPENSSL_MANGLER(BIO_CONNECT_free)
# endif
#else
# ifndef _BIO_CONNECT_free
#  define _BIO_CONNECT_free OPENSSL_MANGLER_ASM(BIO_CONNECT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_CONNECT_new
#  define BIO_CONNECT_new OPENSSL_MANGLER(BIO_CONNECT_new)
# endif
#else
# ifndef _BIO_CONNECT_new
#  define _BIO_CONNECT_new OPENSSL_MANGLER_ASM(BIO_CONNECT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_accept_ex
#  define BIO_accept_ex OPENSSL_MANGLER(BIO_accept_ex)
# endif
#else
# ifndef _BIO_accept_ex
#  define _BIO_accept_ex OPENSSL_MANGLER_ASM(BIO_accept_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_asn1_get_prefix
#  define BIO_asn1_get_prefix OPENSSL_MANGLER(BIO_asn1_get_prefix)
# endif
#else
# ifndef _BIO_asn1_get_prefix
#  define _BIO_asn1_get_prefix OPENSSL_MANGLER_ASM(BIO_asn1_get_prefix)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_asn1_get_suffix
#  define BIO_asn1_get_suffix OPENSSL_MANGLER(BIO_asn1_get_suffix)
# endif
#else
# ifndef _BIO_asn1_get_suffix
#  define _BIO_asn1_get_suffix OPENSSL_MANGLER_ASM(BIO_asn1_get_suffix)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_asn1_set_prefix
#  define BIO_asn1_set_prefix OPENSSL_MANGLER(BIO_asn1_set_prefix)
# endif
#else
# ifndef _BIO_asn1_set_prefix
#  define _BIO_asn1_set_prefix OPENSSL_MANGLER_ASM(BIO_asn1_set_prefix)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_asn1_set_suffix
#  define BIO_asn1_set_suffix OPENSSL_MANGLER(BIO_asn1_set_suffix)
# endif
#else
# ifndef _BIO_asn1_set_suffix
#  define _BIO_asn1_set_suffix OPENSSL_MANGLER_ASM(BIO_asn1_set_suffix)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_bind
#  define BIO_bind OPENSSL_MANGLER(BIO_bind)
# endif
#else
# ifndef _BIO_bind
#  define _BIO_bind OPENSSL_MANGLER_ASM(BIO_bind)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_callback_ctrl
#  define BIO_callback_ctrl OPENSSL_MANGLER(BIO_callback_ctrl)
# endif
#else
# ifndef _BIO_callback_ctrl
#  define _BIO_callback_ctrl OPENSSL_MANGLER_ASM(BIO_callback_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_clear_flags
#  define BIO_clear_flags OPENSSL_MANGLER(BIO_clear_flags)
# endif
#else
# ifndef _BIO_clear_flags
#  define _BIO_clear_flags OPENSSL_MANGLER_ASM(BIO_clear_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_closesocket
#  define BIO_closesocket OPENSSL_MANGLER(BIO_closesocket)
# endif
#else
# ifndef _BIO_closesocket
#  define _BIO_closesocket OPENSSL_MANGLER_ASM(BIO_closesocket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_connect
#  define BIO_connect OPENSSL_MANGLER(BIO_connect)
# endif
#else
# ifndef _BIO_connect
#  define _BIO_connect OPENSSL_MANGLER_ASM(BIO_connect)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_copy_next_retry
#  define BIO_copy_next_retry OPENSSL_MANGLER(BIO_copy_next_retry)
# endif
#else
# ifndef _BIO_copy_next_retry
#  define _BIO_copy_next_retry OPENSSL_MANGLER_ASM(BIO_copy_next_retry)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ctrl
#  define BIO_ctrl OPENSSL_MANGLER(BIO_ctrl)
# endif
#else
# ifndef _BIO_ctrl
#  define _BIO_ctrl OPENSSL_MANGLER_ASM(BIO_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ctrl_get_read_request
#  define BIO_ctrl_get_read_request OPENSSL_MANGLER(BIO_ctrl_get_read_request)
# endif
#else
# ifndef _BIO_ctrl_get_read_request
#  define _BIO_ctrl_get_read_request OPENSSL_MANGLER_ASM(BIO_ctrl_get_read_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ctrl_get_write_guarantee
#  define BIO_ctrl_get_write_guarantee OPENSSL_MANGLER(BIO_ctrl_get_write_guarantee)
# endif
#else
# ifndef _BIO_ctrl_get_write_guarantee
#  define _BIO_ctrl_get_write_guarantee OPENSSL_MANGLER_ASM(BIO_ctrl_get_write_guarantee)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ctrl_pending
#  define BIO_ctrl_pending OPENSSL_MANGLER(BIO_ctrl_pending)
# endif
#else
# ifndef _BIO_ctrl_pending
#  define _BIO_ctrl_pending OPENSSL_MANGLER_ASM(BIO_ctrl_pending)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ctrl_reset_read_request
#  define BIO_ctrl_reset_read_request OPENSSL_MANGLER(BIO_ctrl_reset_read_request)
# endif
#else
# ifndef _BIO_ctrl_reset_read_request
#  define _BIO_ctrl_reset_read_request OPENSSL_MANGLER_ASM(BIO_ctrl_reset_read_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ctrl_wpending
#  define BIO_ctrl_wpending OPENSSL_MANGLER(BIO_ctrl_wpending)
# endif
#else
# ifndef _BIO_ctrl_wpending
#  define _BIO_ctrl_wpending OPENSSL_MANGLER_ASM(BIO_ctrl_wpending)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_debug_callback
#  define BIO_debug_callback OPENSSL_MANGLER(BIO_debug_callback)
# endif
#else
# ifndef _BIO_debug_callback
#  define _BIO_debug_callback OPENSSL_MANGLER_ASM(BIO_debug_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_debug_callback_ex
#  define BIO_debug_callback_ex OPENSSL_MANGLER(BIO_debug_callback_ex)
# endif
#else
# ifndef _BIO_debug_callback_ex
#  define _BIO_debug_callback_ex OPENSSL_MANGLER_ASM(BIO_debug_callback_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_dgram_non_fatal_error
#  define BIO_dgram_non_fatal_error OPENSSL_MANGLER(BIO_dgram_non_fatal_error)
# endif
#else
# ifndef _BIO_dgram_non_fatal_error
#  define _BIO_dgram_non_fatal_error OPENSSL_MANGLER_ASM(BIO_dgram_non_fatal_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_do_connect_retry
#  define BIO_do_connect_retry OPENSSL_MANGLER(BIO_do_connect_retry)
# endif
#else
# ifndef _BIO_do_connect_retry
#  define _BIO_do_connect_retry OPENSSL_MANGLER_ASM(BIO_do_connect_retry)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_dump
#  define BIO_dump OPENSSL_MANGLER(BIO_dump)
# endif
#else
# ifndef _BIO_dump
#  define _BIO_dump OPENSSL_MANGLER_ASM(BIO_dump)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_dump_cb
#  define BIO_dump_cb OPENSSL_MANGLER(BIO_dump_cb)
# endif
#else
# ifndef _BIO_dump_cb
#  define _BIO_dump_cb OPENSSL_MANGLER_ASM(BIO_dump_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_dump_fp
#  define BIO_dump_fp OPENSSL_MANGLER(BIO_dump_fp)
# endif
#else
# ifndef _BIO_dump_fp
#  define _BIO_dump_fp OPENSSL_MANGLER_ASM(BIO_dump_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_dump_indent
#  define BIO_dump_indent OPENSSL_MANGLER(BIO_dump_indent)
# endif
#else
# ifndef _BIO_dump_indent
#  define _BIO_dump_indent OPENSSL_MANGLER_ASM(BIO_dump_indent)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_dump_indent_cb
#  define BIO_dump_indent_cb OPENSSL_MANGLER(BIO_dump_indent_cb)
# endif
#else
# ifndef _BIO_dump_indent_cb
#  define _BIO_dump_indent_cb OPENSSL_MANGLER_ASM(BIO_dump_indent_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_dump_indent_fp
#  define BIO_dump_indent_fp OPENSSL_MANGLER(BIO_dump_indent_fp)
# endif
#else
# ifndef _BIO_dump_indent_fp
#  define _BIO_dump_indent_fp OPENSSL_MANGLER_ASM(BIO_dump_indent_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_dup_chain
#  define BIO_dup_chain OPENSSL_MANGLER(BIO_dup_chain)
# endif
#else
# ifndef _BIO_dup_chain
#  define _BIO_dup_chain OPENSSL_MANGLER_ASM(BIO_dup_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_asn1
#  define BIO_f_asn1 OPENSSL_MANGLER(BIO_f_asn1)
# endif
#else
# ifndef _BIO_f_asn1
#  define _BIO_f_asn1 OPENSSL_MANGLER_ASM(BIO_f_asn1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_base64
#  define BIO_f_base64 OPENSSL_MANGLER(BIO_f_base64)
# endif
#else
# ifndef _BIO_f_base64
#  define _BIO_f_base64 OPENSSL_MANGLER_ASM(BIO_f_base64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_buffer
#  define BIO_f_buffer OPENSSL_MANGLER(BIO_f_buffer)
# endif
#else
# ifndef _BIO_f_buffer
#  define _BIO_f_buffer OPENSSL_MANGLER_ASM(BIO_f_buffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_cipher
#  define BIO_f_cipher OPENSSL_MANGLER(BIO_f_cipher)
# endif
#else
# ifndef _BIO_f_cipher
#  define _BIO_f_cipher OPENSSL_MANGLER_ASM(BIO_f_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_linebuffer
#  define BIO_f_linebuffer OPENSSL_MANGLER(BIO_f_linebuffer)
# endif
#else
# ifndef _BIO_f_linebuffer
#  define _BIO_f_linebuffer OPENSSL_MANGLER_ASM(BIO_f_linebuffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_md
#  define BIO_f_md OPENSSL_MANGLER(BIO_f_md)
# endif
#else
# ifndef _BIO_f_md
#  define _BIO_f_md OPENSSL_MANGLER_ASM(BIO_f_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_nbio_test
#  define BIO_f_nbio_test OPENSSL_MANGLER(BIO_f_nbio_test)
# endif
#else
# ifndef _BIO_f_nbio_test
#  define _BIO_f_nbio_test OPENSSL_MANGLER_ASM(BIO_f_nbio_test)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_null
#  define BIO_f_null OPENSSL_MANGLER(BIO_f_null)
# endif
#else
# ifndef _BIO_f_null
#  define _BIO_f_null OPENSSL_MANGLER_ASM(BIO_f_null)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_prefix
#  define BIO_f_prefix OPENSSL_MANGLER(BIO_f_prefix)
# endif
#else
# ifndef _BIO_f_prefix
#  define _BIO_f_prefix OPENSSL_MANGLER_ASM(BIO_f_prefix)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_readbuffer
#  define BIO_f_readbuffer OPENSSL_MANGLER(BIO_f_readbuffer)
# endif
#else
# ifndef _BIO_f_readbuffer
#  define _BIO_f_readbuffer OPENSSL_MANGLER_ASM(BIO_f_readbuffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_reliable
#  define BIO_f_reliable OPENSSL_MANGLER(BIO_f_reliable)
# endif
#else
# ifndef _BIO_f_reliable
#  define _BIO_f_reliable OPENSSL_MANGLER_ASM(BIO_f_reliable)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_f_ssl
#  define BIO_f_ssl OPENSSL_MANGLER(BIO_f_ssl)
# endif
#else
# ifndef _BIO_f_ssl
#  define _BIO_f_ssl OPENSSL_MANGLER_ASM(BIO_f_ssl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_fd_non_fatal_error
#  define BIO_fd_non_fatal_error OPENSSL_MANGLER(BIO_fd_non_fatal_error)
# endif
#else
# ifndef _BIO_fd_non_fatal_error
#  define _BIO_fd_non_fatal_error OPENSSL_MANGLER_ASM(BIO_fd_non_fatal_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_fd_should_retry
#  define BIO_fd_should_retry OPENSSL_MANGLER(BIO_fd_should_retry)
# endif
#else
# ifndef _BIO_fd_should_retry
#  define _BIO_fd_should_retry OPENSSL_MANGLER_ASM(BIO_fd_should_retry)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_find_type
#  define BIO_find_type OPENSSL_MANGLER(BIO_find_type)
# endif
#else
# ifndef _BIO_find_type
#  define _BIO_find_type OPENSSL_MANGLER_ASM(BIO_find_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_free
#  define BIO_free OPENSSL_MANGLER(BIO_free)
# endif
#else
# ifndef _BIO_free
#  define _BIO_free OPENSSL_MANGLER_ASM(BIO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_free_all
#  define BIO_free_all OPENSSL_MANGLER(BIO_free_all)
# endif
#else
# ifndef _BIO_free_all
#  define _BIO_free_all OPENSSL_MANGLER_ASM(BIO_free_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_get_callback
#  define BIO_get_callback OPENSSL_MANGLER(BIO_get_callback)
# endif
#else
# ifndef _BIO_get_callback
#  define _BIO_get_callback OPENSSL_MANGLER_ASM(BIO_get_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_get_callback_arg
#  define BIO_get_callback_arg OPENSSL_MANGLER(BIO_get_callback_arg)
# endif
#else
# ifndef _BIO_get_callback_arg
#  define _BIO_get_callback_arg OPENSSL_MANGLER_ASM(BIO_get_callback_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_get_callback_ex
#  define BIO_get_callback_ex OPENSSL_MANGLER(BIO_get_callback_ex)
# endif
#else
# ifndef _BIO_get_callback_ex
#  define _BIO_get_callback_ex OPENSSL_MANGLER_ASM(BIO_get_callback_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_get_data
#  define BIO_get_data OPENSSL_MANGLER(BIO_get_data)
# endif
#else
# ifndef _BIO_get_data
#  define _BIO_get_data OPENSSL_MANGLER_ASM(BIO_get_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_get_ex_data
#  define BIO_get_ex_data OPENSSL_MANGLER(BIO_get_ex_data)
# endif
#else
# ifndef _BIO_get_ex_data
#  define _BIO_get_ex_data OPENSSL_MANGLER_ASM(BIO_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_get_init
#  define BIO_get_init OPENSSL_MANGLER(BIO_get_init)
# endif
#else
# ifndef _BIO_get_init
#  define _BIO_get_init OPENSSL_MANGLER_ASM(BIO_get_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_get_line
#  define BIO_get_line OPENSSL_MANGLER(BIO_get_line)
# endif
#else
# ifndef _BIO_get_line
#  define _BIO_get_line OPENSSL_MANGLER_ASM(BIO_get_line)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_get_new_index
#  define BIO_get_new_index OPENSSL_MANGLER(BIO_get_new_index)
# endif
#else
# ifndef _BIO_get_new_index
#  define _BIO_get_new_index OPENSSL_MANGLER_ASM(BIO_get_new_index)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_get_retry_BIO
#  define BIO_get_retry_BIO OPENSSL_MANGLER(BIO_get_retry_BIO)
# endif
#else
# ifndef _BIO_get_retry_BIO
#  define _BIO_get_retry_BIO OPENSSL_MANGLER_ASM(BIO_get_retry_BIO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_get_retry_reason
#  define BIO_get_retry_reason OPENSSL_MANGLER(BIO_get_retry_reason)
# endif
#else
# ifndef _BIO_get_retry_reason
#  define _BIO_get_retry_reason OPENSSL_MANGLER_ASM(BIO_get_retry_reason)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_get_shutdown
#  define BIO_get_shutdown OPENSSL_MANGLER(BIO_get_shutdown)
# endif
#else
# ifndef _BIO_get_shutdown
#  define _BIO_get_shutdown OPENSSL_MANGLER_ASM(BIO_get_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_gets
#  define BIO_gets OPENSSL_MANGLER(BIO_gets)
# endif
#else
# ifndef _BIO_gets
#  define _BIO_gets OPENSSL_MANGLER_ASM(BIO_gets)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_hex_string
#  define BIO_hex_string OPENSSL_MANGLER(BIO_hex_string)
# endif
#else
# ifndef _BIO_hex_string
#  define _BIO_hex_string OPENSSL_MANGLER_ASM(BIO_hex_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_indent
#  define BIO_indent OPENSSL_MANGLER(BIO_indent)
# endif
#else
# ifndef _BIO_indent
#  define _BIO_indent OPENSSL_MANGLER_ASM(BIO_indent)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_int_ctrl
#  define BIO_int_ctrl OPENSSL_MANGLER(BIO_int_ctrl)
# endif
#else
# ifndef _BIO_int_ctrl
#  define _BIO_int_ctrl OPENSSL_MANGLER_ASM(BIO_int_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_listen
#  define BIO_listen OPENSSL_MANGLER(BIO_listen)
# endif
#else
# ifndef _BIO_listen
#  define _BIO_listen OPENSSL_MANGLER_ASM(BIO_listen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_lookup
#  define BIO_lookup OPENSSL_MANGLER(BIO_lookup)
# endif
#else
# ifndef _BIO_lookup
#  define _BIO_lookup OPENSSL_MANGLER_ASM(BIO_lookup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_lookup_ex
#  define BIO_lookup_ex OPENSSL_MANGLER(BIO_lookup_ex)
# endif
#else
# ifndef _BIO_lookup_ex
#  define _BIO_lookup_ex OPENSSL_MANGLER_ASM(BIO_lookup_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_free
#  define BIO_meth_free OPENSSL_MANGLER(BIO_meth_free)
# endif
#else
# ifndef _BIO_meth_free
#  define _BIO_meth_free OPENSSL_MANGLER_ASM(BIO_meth_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_get_callback_ctrl
#  define BIO_meth_get_callback_ctrl OPENSSL_MANGLER(BIO_meth_get_callback_ctrl)
# endif
#else
# ifndef _BIO_meth_get_callback_ctrl
#  define _BIO_meth_get_callback_ctrl OPENSSL_MANGLER_ASM(BIO_meth_get_callback_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_get_create
#  define BIO_meth_get_create OPENSSL_MANGLER(BIO_meth_get_create)
# endif
#else
# ifndef _BIO_meth_get_create
#  define _BIO_meth_get_create OPENSSL_MANGLER_ASM(BIO_meth_get_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_get_ctrl
#  define BIO_meth_get_ctrl OPENSSL_MANGLER(BIO_meth_get_ctrl)
# endif
#else
# ifndef _BIO_meth_get_ctrl
#  define _BIO_meth_get_ctrl OPENSSL_MANGLER_ASM(BIO_meth_get_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_get_destroy
#  define BIO_meth_get_destroy OPENSSL_MANGLER(BIO_meth_get_destroy)
# endif
#else
# ifndef _BIO_meth_get_destroy
#  define _BIO_meth_get_destroy OPENSSL_MANGLER_ASM(BIO_meth_get_destroy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_get_gets
#  define BIO_meth_get_gets OPENSSL_MANGLER(BIO_meth_get_gets)
# endif
#else
# ifndef _BIO_meth_get_gets
#  define _BIO_meth_get_gets OPENSSL_MANGLER_ASM(BIO_meth_get_gets)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_get_puts
#  define BIO_meth_get_puts OPENSSL_MANGLER(BIO_meth_get_puts)
# endif
#else
# ifndef _BIO_meth_get_puts
#  define _BIO_meth_get_puts OPENSSL_MANGLER_ASM(BIO_meth_get_puts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_get_read
#  define BIO_meth_get_read OPENSSL_MANGLER(BIO_meth_get_read)
# endif
#else
# ifndef _BIO_meth_get_read
#  define _BIO_meth_get_read OPENSSL_MANGLER_ASM(BIO_meth_get_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_get_read_ex
#  define BIO_meth_get_read_ex OPENSSL_MANGLER(BIO_meth_get_read_ex)
# endif
#else
# ifndef _BIO_meth_get_read_ex
#  define _BIO_meth_get_read_ex OPENSSL_MANGLER_ASM(BIO_meth_get_read_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_get_write
#  define BIO_meth_get_write OPENSSL_MANGLER(BIO_meth_get_write)
# endif
#else
# ifndef _BIO_meth_get_write
#  define _BIO_meth_get_write OPENSSL_MANGLER_ASM(BIO_meth_get_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_get_write_ex
#  define BIO_meth_get_write_ex OPENSSL_MANGLER(BIO_meth_get_write_ex)
# endif
#else
# ifndef _BIO_meth_get_write_ex
#  define _BIO_meth_get_write_ex OPENSSL_MANGLER_ASM(BIO_meth_get_write_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_new
#  define BIO_meth_new OPENSSL_MANGLER(BIO_meth_new)
# endif
#else
# ifndef _BIO_meth_new
#  define _BIO_meth_new OPENSSL_MANGLER_ASM(BIO_meth_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_set_callback_ctrl
#  define BIO_meth_set_callback_ctrl OPENSSL_MANGLER(BIO_meth_set_callback_ctrl)
# endif
#else
# ifndef _BIO_meth_set_callback_ctrl
#  define _BIO_meth_set_callback_ctrl OPENSSL_MANGLER_ASM(BIO_meth_set_callback_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_set_create
#  define BIO_meth_set_create OPENSSL_MANGLER(BIO_meth_set_create)
# endif
#else
# ifndef _BIO_meth_set_create
#  define _BIO_meth_set_create OPENSSL_MANGLER_ASM(BIO_meth_set_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_set_ctrl
#  define BIO_meth_set_ctrl OPENSSL_MANGLER(BIO_meth_set_ctrl)
# endif
#else
# ifndef _BIO_meth_set_ctrl
#  define _BIO_meth_set_ctrl OPENSSL_MANGLER_ASM(BIO_meth_set_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_set_destroy
#  define BIO_meth_set_destroy OPENSSL_MANGLER(BIO_meth_set_destroy)
# endif
#else
# ifndef _BIO_meth_set_destroy
#  define _BIO_meth_set_destroy OPENSSL_MANGLER_ASM(BIO_meth_set_destroy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_set_gets
#  define BIO_meth_set_gets OPENSSL_MANGLER(BIO_meth_set_gets)
# endif
#else
# ifndef _BIO_meth_set_gets
#  define _BIO_meth_set_gets OPENSSL_MANGLER_ASM(BIO_meth_set_gets)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_set_puts
#  define BIO_meth_set_puts OPENSSL_MANGLER(BIO_meth_set_puts)
# endif
#else
# ifndef _BIO_meth_set_puts
#  define _BIO_meth_set_puts OPENSSL_MANGLER_ASM(BIO_meth_set_puts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_set_read
#  define BIO_meth_set_read OPENSSL_MANGLER(BIO_meth_set_read)
# endif
#else
# ifndef _BIO_meth_set_read
#  define _BIO_meth_set_read OPENSSL_MANGLER_ASM(BIO_meth_set_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_set_read_ex
#  define BIO_meth_set_read_ex OPENSSL_MANGLER(BIO_meth_set_read_ex)
# endif
#else
# ifndef _BIO_meth_set_read_ex
#  define _BIO_meth_set_read_ex OPENSSL_MANGLER_ASM(BIO_meth_set_read_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_set_write
#  define BIO_meth_set_write OPENSSL_MANGLER(BIO_meth_set_write)
# endif
#else
# ifndef _BIO_meth_set_write
#  define _BIO_meth_set_write OPENSSL_MANGLER_ASM(BIO_meth_set_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_meth_set_write_ex
#  define BIO_meth_set_write_ex OPENSSL_MANGLER(BIO_meth_set_write_ex)
# endif
#else
# ifndef _BIO_meth_set_write_ex
#  define _BIO_meth_set_write_ex OPENSSL_MANGLER_ASM(BIO_meth_set_write_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_method_name
#  define BIO_method_name OPENSSL_MANGLER(BIO_method_name)
# endif
#else
# ifndef _BIO_method_name
#  define _BIO_method_name OPENSSL_MANGLER_ASM(BIO_method_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_method_type
#  define BIO_method_type OPENSSL_MANGLER(BIO_method_type)
# endif
#else
# ifndef _BIO_method_type
#  define _BIO_method_type OPENSSL_MANGLER_ASM(BIO_method_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new
#  define BIO_new OPENSSL_MANGLER(BIO_new)
# endif
#else
# ifndef _BIO_new
#  define _BIO_new OPENSSL_MANGLER_ASM(BIO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_CMS
#  define BIO_new_CMS OPENSSL_MANGLER(BIO_new_CMS)
# endif
#else
# ifndef _BIO_new_CMS
#  define _BIO_new_CMS OPENSSL_MANGLER_ASM(BIO_new_CMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_NDEF
#  define BIO_new_NDEF OPENSSL_MANGLER(BIO_new_NDEF)
# endif
#else
# ifndef _BIO_new_NDEF
#  define _BIO_new_NDEF OPENSSL_MANGLER_ASM(BIO_new_NDEF)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_PKCS7
#  define BIO_new_PKCS7 OPENSSL_MANGLER(BIO_new_PKCS7)
# endif
#else
# ifndef _BIO_new_PKCS7
#  define _BIO_new_PKCS7 OPENSSL_MANGLER_ASM(BIO_new_PKCS7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_accept
#  define BIO_new_accept OPENSSL_MANGLER(BIO_new_accept)
# endif
#else
# ifndef _BIO_new_accept
#  define _BIO_new_accept OPENSSL_MANGLER_ASM(BIO_new_accept)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_bio_pair
#  define BIO_new_bio_pair OPENSSL_MANGLER(BIO_new_bio_pair)
# endif
#else
# ifndef _BIO_new_bio_pair
#  define _BIO_new_bio_pair OPENSSL_MANGLER_ASM(BIO_new_bio_pair)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_buffer_ssl_connect
#  define BIO_new_buffer_ssl_connect OPENSSL_MANGLER(BIO_new_buffer_ssl_connect)
# endif
#else
# ifndef _BIO_new_buffer_ssl_connect
#  define _BIO_new_buffer_ssl_connect OPENSSL_MANGLER_ASM(BIO_new_buffer_ssl_connect)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_connect
#  define BIO_new_connect OPENSSL_MANGLER(BIO_new_connect)
# endif
#else
# ifndef _BIO_new_connect
#  define _BIO_new_connect OPENSSL_MANGLER_ASM(BIO_new_connect)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_dgram
#  define BIO_new_dgram OPENSSL_MANGLER(BIO_new_dgram)
# endif
#else
# ifndef _BIO_new_dgram
#  define _BIO_new_dgram OPENSSL_MANGLER_ASM(BIO_new_dgram)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_ex
#  define BIO_new_ex OPENSSL_MANGLER(BIO_new_ex)
# endif
#else
# ifndef _BIO_new_ex
#  define _BIO_new_ex OPENSSL_MANGLER_ASM(BIO_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_fd
#  define BIO_new_fd OPENSSL_MANGLER(BIO_new_fd)
# endif
#else
# ifndef _BIO_new_fd
#  define _BIO_new_fd OPENSSL_MANGLER_ASM(BIO_new_fd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_file
#  define BIO_new_file OPENSSL_MANGLER(BIO_new_file)
# endif
#else
# ifndef _BIO_new_file
#  define _BIO_new_file OPENSSL_MANGLER_ASM(BIO_new_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_fp
#  define BIO_new_fp OPENSSL_MANGLER(BIO_new_fp)
# endif
#else
# ifndef _BIO_new_fp
#  define _BIO_new_fp OPENSSL_MANGLER_ASM(BIO_new_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_from_core_bio
#  define BIO_new_from_core_bio OPENSSL_MANGLER(BIO_new_from_core_bio)
# endif
#else
# ifndef _BIO_new_from_core_bio
#  define _BIO_new_from_core_bio OPENSSL_MANGLER_ASM(BIO_new_from_core_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_mem_buf
#  define BIO_new_mem_buf OPENSSL_MANGLER(BIO_new_mem_buf)
# endif
#else
# ifndef _BIO_new_mem_buf
#  define _BIO_new_mem_buf OPENSSL_MANGLER_ASM(BIO_new_mem_buf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_socket
#  define BIO_new_socket OPENSSL_MANGLER(BIO_new_socket)
# endif
#else
# ifndef _BIO_new_socket
#  define _BIO_new_socket OPENSSL_MANGLER_ASM(BIO_new_socket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_ssl
#  define BIO_new_ssl OPENSSL_MANGLER(BIO_new_ssl)
# endif
#else
# ifndef _BIO_new_ssl
#  define _BIO_new_ssl OPENSSL_MANGLER_ASM(BIO_new_ssl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_new_ssl_connect
#  define BIO_new_ssl_connect OPENSSL_MANGLER(BIO_new_ssl_connect)
# endif
#else
# ifndef _BIO_new_ssl_connect
#  define _BIO_new_ssl_connect OPENSSL_MANGLER_ASM(BIO_new_ssl_connect)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_next
#  define BIO_next OPENSSL_MANGLER(BIO_next)
# endif
#else
# ifndef _BIO_next
#  define _BIO_next OPENSSL_MANGLER_ASM(BIO_next)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_nread
#  define BIO_nread OPENSSL_MANGLER(BIO_nread)
# endif
#else
# ifndef _BIO_nread
#  define _BIO_nread OPENSSL_MANGLER_ASM(BIO_nread)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_nread0
#  define BIO_nread0 OPENSSL_MANGLER(BIO_nread0)
# endif
#else
# ifndef _BIO_nread0
#  define _BIO_nread0 OPENSSL_MANGLER_ASM(BIO_nread0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_number_read
#  define BIO_number_read OPENSSL_MANGLER(BIO_number_read)
# endif
#else
# ifndef _BIO_number_read
#  define _BIO_number_read OPENSSL_MANGLER_ASM(BIO_number_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_number_written
#  define BIO_number_written OPENSSL_MANGLER(BIO_number_written)
# endif
#else
# ifndef _BIO_number_written
#  define _BIO_number_written OPENSSL_MANGLER_ASM(BIO_number_written)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_nwrite
#  define BIO_nwrite OPENSSL_MANGLER(BIO_nwrite)
# endif
#else
# ifndef _BIO_nwrite
#  define _BIO_nwrite OPENSSL_MANGLER_ASM(BIO_nwrite)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_nwrite0
#  define BIO_nwrite0 OPENSSL_MANGLER(BIO_nwrite0)
# endif
#else
# ifndef _BIO_nwrite0
#  define _BIO_nwrite0 OPENSSL_MANGLER_ASM(BIO_nwrite0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_parse_hostserv
#  define BIO_parse_hostserv OPENSSL_MANGLER(BIO_parse_hostserv)
# endif
#else
# ifndef _BIO_parse_hostserv
#  define _BIO_parse_hostserv OPENSSL_MANGLER_ASM(BIO_parse_hostserv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_pop
#  define BIO_pop OPENSSL_MANGLER(BIO_pop)
# endif
#else
# ifndef _BIO_pop
#  define _BIO_pop OPENSSL_MANGLER_ASM(BIO_pop)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_printf
#  define BIO_printf OPENSSL_MANGLER(BIO_printf)
# endif
#else
# ifndef _BIO_printf
#  define _BIO_printf OPENSSL_MANGLER_ASM(BIO_printf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ptr_ctrl
#  define BIO_ptr_ctrl OPENSSL_MANGLER(BIO_ptr_ctrl)
# endif
#else
# ifndef _BIO_ptr_ctrl
#  define _BIO_ptr_ctrl OPENSSL_MANGLER_ASM(BIO_ptr_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_push
#  define BIO_push OPENSSL_MANGLER(BIO_push)
# endif
#else
# ifndef _BIO_push
#  define _BIO_push OPENSSL_MANGLER_ASM(BIO_push)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_puts
#  define BIO_puts OPENSSL_MANGLER(BIO_puts)
# endif
#else
# ifndef _BIO_puts
#  define _BIO_puts OPENSSL_MANGLER_ASM(BIO_puts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_read
#  define BIO_read OPENSSL_MANGLER(BIO_read)
# endif
#else
# ifndef _BIO_read
#  define _BIO_read OPENSSL_MANGLER_ASM(BIO_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_read_ex
#  define BIO_read_ex OPENSSL_MANGLER(BIO_read_ex)
# endif
#else
# ifndef _BIO_read_ex
#  define _BIO_read_ex OPENSSL_MANGLER_ASM(BIO_read_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_accept
#  define BIO_s_accept OPENSSL_MANGLER(BIO_s_accept)
# endif
#else
# ifndef _BIO_s_accept
#  define _BIO_s_accept OPENSSL_MANGLER_ASM(BIO_s_accept)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_bio
#  define BIO_s_bio OPENSSL_MANGLER(BIO_s_bio)
# endif
#else
# ifndef _BIO_s_bio
#  define _BIO_s_bio OPENSSL_MANGLER_ASM(BIO_s_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_connect
#  define BIO_s_connect OPENSSL_MANGLER(BIO_s_connect)
# endif
#else
# ifndef _BIO_s_connect
#  define _BIO_s_connect OPENSSL_MANGLER_ASM(BIO_s_connect)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_core
#  define BIO_s_core OPENSSL_MANGLER(BIO_s_core)
# endif
#else
# ifndef _BIO_s_core
#  define _BIO_s_core OPENSSL_MANGLER_ASM(BIO_s_core)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_datagram
#  define BIO_s_datagram OPENSSL_MANGLER(BIO_s_datagram)
# endif
#else
# ifndef _BIO_s_datagram
#  define _BIO_s_datagram OPENSSL_MANGLER_ASM(BIO_s_datagram)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_fd
#  define BIO_s_fd OPENSSL_MANGLER(BIO_s_fd)
# endif
#else
# ifndef _BIO_s_fd
#  define _BIO_s_fd OPENSSL_MANGLER_ASM(BIO_s_fd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_file
#  define BIO_s_file OPENSSL_MANGLER(BIO_s_file)
# endif
#else
# ifndef _BIO_s_file
#  define _BIO_s_file OPENSSL_MANGLER_ASM(BIO_s_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_log
#  define BIO_s_log OPENSSL_MANGLER(BIO_s_log)
# endif
#else
# ifndef _BIO_s_log
#  define _BIO_s_log OPENSSL_MANGLER_ASM(BIO_s_log)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_mem
#  define BIO_s_mem OPENSSL_MANGLER(BIO_s_mem)
# endif
#else
# ifndef _BIO_s_mem
#  define _BIO_s_mem OPENSSL_MANGLER_ASM(BIO_s_mem)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_null
#  define BIO_s_null OPENSSL_MANGLER(BIO_s_null)
# endif
#else
# ifndef _BIO_s_null
#  define _BIO_s_null OPENSSL_MANGLER_ASM(BIO_s_null)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_secmem
#  define BIO_s_secmem OPENSSL_MANGLER(BIO_s_secmem)
# endif
#else
# ifndef _BIO_s_secmem
#  define _BIO_s_secmem OPENSSL_MANGLER_ASM(BIO_s_secmem)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_s_socket
#  define BIO_s_socket OPENSSL_MANGLER(BIO_s_socket)
# endif
#else
# ifndef _BIO_s_socket
#  define _BIO_s_socket OPENSSL_MANGLER_ASM(BIO_s_socket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_callback
#  define BIO_set_callback OPENSSL_MANGLER(BIO_set_callback)
# endif
#else
# ifndef _BIO_set_callback
#  define _BIO_set_callback OPENSSL_MANGLER_ASM(BIO_set_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_callback_arg
#  define BIO_set_callback_arg OPENSSL_MANGLER(BIO_set_callback_arg)
# endif
#else
# ifndef _BIO_set_callback_arg
#  define _BIO_set_callback_arg OPENSSL_MANGLER_ASM(BIO_set_callback_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_callback_ex
#  define BIO_set_callback_ex OPENSSL_MANGLER(BIO_set_callback_ex)
# endif
#else
# ifndef _BIO_set_callback_ex
#  define _BIO_set_callback_ex OPENSSL_MANGLER_ASM(BIO_set_callback_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_cipher
#  define BIO_set_cipher OPENSSL_MANGLER(BIO_set_cipher)
# endif
#else
# ifndef _BIO_set_cipher
#  define _BIO_set_cipher OPENSSL_MANGLER_ASM(BIO_set_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_data
#  define BIO_set_data OPENSSL_MANGLER(BIO_set_data)
# endif
#else
# ifndef _BIO_set_data
#  define _BIO_set_data OPENSSL_MANGLER_ASM(BIO_set_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_ex_data
#  define BIO_set_ex_data OPENSSL_MANGLER(BIO_set_ex_data)
# endif
#else
# ifndef _BIO_set_ex_data
#  define _BIO_set_ex_data OPENSSL_MANGLER_ASM(BIO_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_flags
#  define BIO_set_flags OPENSSL_MANGLER(BIO_set_flags)
# endif
#else
# ifndef _BIO_set_flags
#  define _BIO_set_flags OPENSSL_MANGLER_ASM(BIO_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_init
#  define BIO_set_init OPENSSL_MANGLER(BIO_set_init)
# endif
#else
# ifndef _BIO_set_init
#  define _BIO_set_init OPENSSL_MANGLER_ASM(BIO_set_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_next
#  define BIO_set_next OPENSSL_MANGLER(BIO_set_next)
# endif
#else
# ifndef _BIO_set_next
#  define _BIO_set_next OPENSSL_MANGLER_ASM(BIO_set_next)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_retry_reason
#  define BIO_set_retry_reason OPENSSL_MANGLER(BIO_set_retry_reason)
# endif
#else
# ifndef _BIO_set_retry_reason
#  define _BIO_set_retry_reason OPENSSL_MANGLER_ASM(BIO_set_retry_reason)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_shutdown
#  define BIO_set_shutdown OPENSSL_MANGLER(BIO_set_shutdown)
# endif
#else
# ifndef _BIO_set_shutdown
#  define _BIO_set_shutdown OPENSSL_MANGLER_ASM(BIO_set_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_set_tcp_ndelay
#  define BIO_set_tcp_ndelay OPENSSL_MANGLER(BIO_set_tcp_ndelay)
# endif
#else
# ifndef _BIO_set_tcp_ndelay
#  define _BIO_set_tcp_ndelay OPENSSL_MANGLER_ASM(BIO_set_tcp_ndelay)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_snprintf
#  define BIO_snprintf OPENSSL_MANGLER(BIO_snprintf)
# endif
#else
# ifndef _BIO_snprintf
#  define _BIO_snprintf OPENSSL_MANGLER_ASM(BIO_snprintf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_sock_error
#  define BIO_sock_error OPENSSL_MANGLER(BIO_sock_error)
# endif
#else
# ifndef _BIO_sock_error
#  define _BIO_sock_error OPENSSL_MANGLER_ASM(BIO_sock_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_sock_info
#  define BIO_sock_info OPENSSL_MANGLER(BIO_sock_info)
# endif
#else
# ifndef _BIO_sock_info
#  define _BIO_sock_info OPENSSL_MANGLER_ASM(BIO_sock_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_sock_init
#  define BIO_sock_init OPENSSL_MANGLER(BIO_sock_init)
# endif
#else
# ifndef _BIO_sock_init
#  define _BIO_sock_init OPENSSL_MANGLER_ASM(BIO_sock_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_sock_non_fatal_error
#  define BIO_sock_non_fatal_error OPENSSL_MANGLER(BIO_sock_non_fatal_error)
# endif
#else
# ifndef _BIO_sock_non_fatal_error
#  define _BIO_sock_non_fatal_error OPENSSL_MANGLER_ASM(BIO_sock_non_fatal_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_sock_should_retry
#  define BIO_sock_should_retry OPENSSL_MANGLER(BIO_sock_should_retry)
# endif
#else
# ifndef _BIO_sock_should_retry
#  define _BIO_sock_should_retry OPENSSL_MANGLER_ASM(BIO_sock_should_retry)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_socket
#  define BIO_socket OPENSSL_MANGLER(BIO_socket)
# endif
#else
# ifndef _BIO_socket
#  define _BIO_socket OPENSSL_MANGLER_ASM(BIO_socket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_socket_ioctl
#  define BIO_socket_ioctl OPENSSL_MANGLER(BIO_socket_ioctl)
# endif
#else
# ifndef _BIO_socket_ioctl
#  define _BIO_socket_ioctl OPENSSL_MANGLER_ASM(BIO_socket_ioctl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_socket_nbio
#  define BIO_socket_nbio OPENSSL_MANGLER(BIO_socket_nbio)
# endif
#else
# ifndef _BIO_socket_nbio
#  define _BIO_socket_nbio OPENSSL_MANGLER_ASM(BIO_socket_nbio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_socket_wait
#  define BIO_socket_wait OPENSSL_MANGLER(BIO_socket_wait)
# endif
#else
# ifndef _BIO_socket_wait
#  define _BIO_socket_wait OPENSSL_MANGLER_ASM(BIO_socket_wait)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ssl_copy_session_id
#  define BIO_ssl_copy_session_id OPENSSL_MANGLER(BIO_ssl_copy_session_id)
# endif
#else
# ifndef _BIO_ssl_copy_session_id
#  define _BIO_ssl_copy_session_id OPENSSL_MANGLER_ASM(BIO_ssl_copy_session_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_ssl_shutdown
#  define BIO_ssl_shutdown OPENSSL_MANGLER(BIO_ssl_shutdown)
# endif
#else
# ifndef _BIO_ssl_shutdown
#  define _BIO_ssl_shutdown OPENSSL_MANGLER_ASM(BIO_ssl_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_test_flags
#  define BIO_test_flags OPENSSL_MANGLER(BIO_test_flags)
# endif
#else
# ifndef _BIO_test_flags
#  define _BIO_test_flags OPENSSL_MANGLER_ASM(BIO_test_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_up_ref
#  define BIO_up_ref OPENSSL_MANGLER(BIO_up_ref)
# endif
#else
# ifndef _BIO_up_ref
#  define _BIO_up_ref OPENSSL_MANGLER_ASM(BIO_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_vfree
#  define BIO_vfree OPENSSL_MANGLER(BIO_vfree)
# endif
#else
# ifndef _BIO_vfree
#  define _BIO_vfree OPENSSL_MANGLER_ASM(BIO_vfree)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_vprintf
#  define BIO_vprintf OPENSSL_MANGLER(BIO_vprintf)
# endif
#else
# ifndef _BIO_vprintf
#  define _BIO_vprintf OPENSSL_MANGLER_ASM(BIO_vprintf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_vsnprintf
#  define BIO_vsnprintf OPENSSL_MANGLER(BIO_vsnprintf)
# endif
#else
# ifndef _BIO_vsnprintf
#  define _BIO_vsnprintf OPENSSL_MANGLER_ASM(BIO_vsnprintf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_wait
#  define BIO_wait OPENSSL_MANGLER(BIO_wait)
# endif
#else
# ifndef _BIO_wait
#  define _BIO_wait OPENSSL_MANGLER_ASM(BIO_wait)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_write
#  define BIO_write OPENSSL_MANGLER(BIO_write)
# endif
#else
# ifndef _BIO_write
#  define _BIO_write OPENSSL_MANGLER_ASM(BIO_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BIO_write_ex
#  define BIO_write_ex OPENSSL_MANGLER(BIO_write_ex)
# endif
#else
# ifndef _BIO_write_ex
#  define _BIO_write_ex OPENSSL_MANGLER_ASM(BIO_write_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_convert
#  define BN_BLINDING_convert OPENSSL_MANGLER(BN_BLINDING_convert)
# endif
#else
# ifndef _BN_BLINDING_convert
#  define _BN_BLINDING_convert OPENSSL_MANGLER_ASM(BN_BLINDING_convert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_convert_ex
#  define BN_BLINDING_convert_ex OPENSSL_MANGLER(BN_BLINDING_convert_ex)
# endif
#else
# ifndef _BN_BLINDING_convert_ex
#  define _BN_BLINDING_convert_ex OPENSSL_MANGLER_ASM(BN_BLINDING_convert_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_create_param
#  define BN_BLINDING_create_param OPENSSL_MANGLER(BN_BLINDING_create_param)
# endif
#else
# ifndef _BN_BLINDING_create_param
#  define _BN_BLINDING_create_param OPENSSL_MANGLER_ASM(BN_BLINDING_create_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_free
#  define BN_BLINDING_free OPENSSL_MANGLER(BN_BLINDING_free)
# endif
#else
# ifndef _BN_BLINDING_free
#  define _BN_BLINDING_free OPENSSL_MANGLER_ASM(BN_BLINDING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_get_flags
#  define BN_BLINDING_get_flags OPENSSL_MANGLER(BN_BLINDING_get_flags)
# endif
#else
# ifndef _BN_BLINDING_get_flags
#  define _BN_BLINDING_get_flags OPENSSL_MANGLER_ASM(BN_BLINDING_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_invert
#  define BN_BLINDING_invert OPENSSL_MANGLER(BN_BLINDING_invert)
# endif
#else
# ifndef _BN_BLINDING_invert
#  define _BN_BLINDING_invert OPENSSL_MANGLER_ASM(BN_BLINDING_invert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_invert_ex
#  define BN_BLINDING_invert_ex OPENSSL_MANGLER(BN_BLINDING_invert_ex)
# endif
#else
# ifndef _BN_BLINDING_invert_ex
#  define _BN_BLINDING_invert_ex OPENSSL_MANGLER_ASM(BN_BLINDING_invert_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_is_current_thread
#  define BN_BLINDING_is_current_thread OPENSSL_MANGLER(BN_BLINDING_is_current_thread)
# endif
#else
# ifndef _BN_BLINDING_is_current_thread
#  define _BN_BLINDING_is_current_thread OPENSSL_MANGLER_ASM(BN_BLINDING_is_current_thread)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_lock
#  define BN_BLINDING_lock OPENSSL_MANGLER(BN_BLINDING_lock)
# endif
#else
# ifndef _BN_BLINDING_lock
#  define _BN_BLINDING_lock OPENSSL_MANGLER_ASM(BN_BLINDING_lock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_new
#  define BN_BLINDING_new OPENSSL_MANGLER(BN_BLINDING_new)
# endif
#else
# ifndef _BN_BLINDING_new
#  define _BN_BLINDING_new OPENSSL_MANGLER_ASM(BN_BLINDING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_set_current_thread
#  define BN_BLINDING_set_current_thread OPENSSL_MANGLER(BN_BLINDING_set_current_thread)
# endif
#else
# ifndef _BN_BLINDING_set_current_thread
#  define _BN_BLINDING_set_current_thread OPENSSL_MANGLER_ASM(BN_BLINDING_set_current_thread)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_set_flags
#  define BN_BLINDING_set_flags OPENSSL_MANGLER(BN_BLINDING_set_flags)
# endif
#else
# ifndef _BN_BLINDING_set_flags
#  define _BN_BLINDING_set_flags OPENSSL_MANGLER_ASM(BN_BLINDING_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_unlock
#  define BN_BLINDING_unlock OPENSSL_MANGLER(BN_BLINDING_unlock)
# endif
#else
# ifndef _BN_BLINDING_unlock
#  define _BN_BLINDING_unlock OPENSSL_MANGLER_ASM(BN_BLINDING_unlock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_BLINDING_update
#  define BN_BLINDING_update OPENSSL_MANGLER(BN_BLINDING_update)
# endif
#else
# ifndef _BN_BLINDING_update
#  define _BN_BLINDING_update OPENSSL_MANGLER_ASM(BN_BLINDING_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_CTX_end
#  define BN_CTX_end OPENSSL_MANGLER(BN_CTX_end)
# endif
#else
# ifndef _BN_CTX_end
#  define _BN_CTX_end OPENSSL_MANGLER_ASM(BN_CTX_end)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_CTX_free
#  define BN_CTX_free OPENSSL_MANGLER(BN_CTX_free)
# endif
#else
# ifndef _BN_CTX_free
#  define _BN_CTX_free OPENSSL_MANGLER_ASM(BN_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_CTX_get
#  define BN_CTX_get OPENSSL_MANGLER(BN_CTX_get)
# endif
#else
# ifndef _BN_CTX_get
#  define _BN_CTX_get OPENSSL_MANGLER_ASM(BN_CTX_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_CTX_new
#  define BN_CTX_new OPENSSL_MANGLER(BN_CTX_new)
# endif
#else
# ifndef _BN_CTX_new
#  define _BN_CTX_new OPENSSL_MANGLER_ASM(BN_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_CTX_new_ex
#  define BN_CTX_new_ex OPENSSL_MANGLER(BN_CTX_new_ex)
# endif
#else
# ifndef _BN_CTX_new_ex
#  define _BN_CTX_new_ex OPENSSL_MANGLER_ASM(BN_CTX_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_CTX_secure_new
#  define BN_CTX_secure_new OPENSSL_MANGLER(BN_CTX_secure_new)
# endif
#else
# ifndef _BN_CTX_secure_new
#  define _BN_CTX_secure_new OPENSSL_MANGLER_ASM(BN_CTX_secure_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_CTX_secure_new_ex
#  define BN_CTX_secure_new_ex OPENSSL_MANGLER(BN_CTX_secure_new_ex)
# endif
#else
# ifndef _BN_CTX_secure_new_ex
#  define _BN_CTX_secure_new_ex OPENSSL_MANGLER_ASM(BN_CTX_secure_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_CTX_start
#  define BN_CTX_start OPENSSL_MANGLER(BN_CTX_start)
# endif
#else
# ifndef _BN_CTX_start
#  define _BN_CTX_start OPENSSL_MANGLER_ASM(BN_CTX_start)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GENCB_call
#  define BN_GENCB_call OPENSSL_MANGLER(BN_GENCB_call)
# endif
#else
# ifndef _BN_GENCB_call
#  define _BN_GENCB_call OPENSSL_MANGLER_ASM(BN_GENCB_call)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GENCB_free
#  define BN_GENCB_free OPENSSL_MANGLER(BN_GENCB_free)
# endif
#else
# ifndef _BN_GENCB_free
#  define _BN_GENCB_free OPENSSL_MANGLER_ASM(BN_GENCB_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GENCB_get_arg
#  define BN_GENCB_get_arg OPENSSL_MANGLER(BN_GENCB_get_arg)
# endif
#else
# ifndef _BN_GENCB_get_arg
#  define _BN_GENCB_get_arg OPENSSL_MANGLER_ASM(BN_GENCB_get_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GENCB_new
#  define BN_GENCB_new OPENSSL_MANGLER(BN_GENCB_new)
# endif
#else
# ifndef _BN_GENCB_new
#  define _BN_GENCB_new OPENSSL_MANGLER_ASM(BN_GENCB_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GENCB_set
#  define BN_GENCB_set OPENSSL_MANGLER(BN_GENCB_set)
# endif
#else
# ifndef _BN_GENCB_set
#  define _BN_GENCB_set OPENSSL_MANGLER_ASM(BN_GENCB_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GENCB_set_old
#  define BN_GENCB_set_old OPENSSL_MANGLER(BN_GENCB_set_old)
# endif
#else
# ifndef _BN_GENCB_set_old
#  define _BN_GENCB_set_old OPENSSL_MANGLER_ASM(BN_GENCB_set_old)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_add
#  define BN_GF2m_add OPENSSL_MANGLER(BN_GF2m_add)
# endif
#else
# ifndef _BN_GF2m_add
#  define _BN_GF2m_add OPENSSL_MANGLER_ASM(BN_GF2m_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_arr2poly
#  define BN_GF2m_arr2poly OPENSSL_MANGLER(BN_GF2m_arr2poly)
# endif
#else
# ifndef _BN_GF2m_arr2poly
#  define _BN_GF2m_arr2poly OPENSSL_MANGLER_ASM(BN_GF2m_arr2poly)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod
#  define BN_GF2m_mod OPENSSL_MANGLER(BN_GF2m_mod)
# endif
#else
# ifndef _BN_GF2m_mod
#  define _BN_GF2m_mod OPENSSL_MANGLER_ASM(BN_GF2m_mod)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_arr
#  define BN_GF2m_mod_arr OPENSSL_MANGLER(BN_GF2m_mod_arr)
# endif
#else
# ifndef _BN_GF2m_mod_arr
#  define _BN_GF2m_mod_arr OPENSSL_MANGLER_ASM(BN_GF2m_mod_arr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_div
#  define BN_GF2m_mod_div OPENSSL_MANGLER(BN_GF2m_mod_div)
# endif
#else
# ifndef _BN_GF2m_mod_div
#  define _BN_GF2m_mod_div OPENSSL_MANGLER_ASM(BN_GF2m_mod_div)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_div_arr
#  define BN_GF2m_mod_div_arr OPENSSL_MANGLER(BN_GF2m_mod_div_arr)
# endif
#else
# ifndef _BN_GF2m_mod_div_arr
#  define _BN_GF2m_mod_div_arr OPENSSL_MANGLER_ASM(BN_GF2m_mod_div_arr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_exp
#  define BN_GF2m_mod_exp OPENSSL_MANGLER(BN_GF2m_mod_exp)
# endif
#else
# ifndef _BN_GF2m_mod_exp
#  define _BN_GF2m_mod_exp OPENSSL_MANGLER_ASM(BN_GF2m_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_exp_arr
#  define BN_GF2m_mod_exp_arr OPENSSL_MANGLER(BN_GF2m_mod_exp_arr)
# endif
#else
# ifndef _BN_GF2m_mod_exp_arr
#  define _BN_GF2m_mod_exp_arr OPENSSL_MANGLER_ASM(BN_GF2m_mod_exp_arr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_inv
#  define BN_GF2m_mod_inv OPENSSL_MANGLER(BN_GF2m_mod_inv)
# endif
#else
# ifndef _BN_GF2m_mod_inv
#  define _BN_GF2m_mod_inv OPENSSL_MANGLER_ASM(BN_GF2m_mod_inv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_inv_arr
#  define BN_GF2m_mod_inv_arr OPENSSL_MANGLER(BN_GF2m_mod_inv_arr)
# endif
#else
# ifndef _BN_GF2m_mod_inv_arr
#  define _BN_GF2m_mod_inv_arr OPENSSL_MANGLER_ASM(BN_GF2m_mod_inv_arr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_mul
#  define BN_GF2m_mod_mul OPENSSL_MANGLER(BN_GF2m_mod_mul)
# endif
#else
# ifndef _BN_GF2m_mod_mul
#  define _BN_GF2m_mod_mul OPENSSL_MANGLER_ASM(BN_GF2m_mod_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_mul_arr
#  define BN_GF2m_mod_mul_arr OPENSSL_MANGLER(BN_GF2m_mod_mul_arr)
# endif
#else
# ifndef _BN_GF2m_mod_mul_arr
#  define _BN_GF2m_mod_mul_arr OPENSSL_MANGLER_ASM(BN_GF2m_mod_mul_arr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_solve_quad
#  define BN_GF2m_mod_solve_quad OPENSSL_MANGLER(BN_GF2m_mod_solve_quad)
# endif
#else
# ifndef _BN_GF2m_mod_solve_quad
#  define _BN_GF2m_mod_solve_quad OPENSSL_MANGLER_ASM(BN_GF2m_mod_solve_quad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_solve_quad_arr
#  define BN_GF2m_mod_solve_quad_arr OPENSSL_MANGLER(BN_GF2m_mod_solve_quad_arr)
# endif
#else
# ifndef _BN_GF2m_mod_solve_quad_arr
#  define _BN_GF2m_mod_solve_quad_arr OPENSSL_MANGLER_ASM(BN_GF2m_mod_solve_quad_arr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_sqr
#  define BN_GF2m_mod_sqr OPENSSL_MANGLER(BN_GF2m_mod_sqr)
# endif
#else
# ifndef _BN_GF2m_mod_sqr
#  define _BN_GF2m_mod_sqr OPENSSL_MANGLER_ASM(BN_GF2m_mod_sqr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_sqr_arr
#  define BN_GF2m_mod_sqr_arr OPENSSL_MANGLER(BN_GF2m_mod_sqr_arr)
# endif
#else
# ifndef _BN_GF2m_mod_sqr_arr
#  define _BN_GF2m_mod_sqr_arr OPENSSL_MANGLER_ASM(BN_GF2m_mod_sqr_arr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_sqrt
#  define BN_GF2m_mod_sqrt OPENSSL_MANGLER(BN_GF2m_mod_sqrt)
# endif
#else
# ifndef _BN_GF2m_mod_sqrt
#  define _BN_GF2m_mod_sqrt OPENSSL_MANGLER_ASM(BN_GF2m_mod_sqrt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_mod_sqrt_arr
#  define BN_GF2m_mod_sqrt_arr OPENSSL_MANGLER(BN_GF2m_mod_sqrt_arr)
# endif
#else
# ifndef _BN_GF2m_mod_sqrt_arr
#  define _BN_GF2m_mod_sqrt_arr OPENSSL_MANGLER_ASM(BN_GF2m_mod_sqrt_arr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_GF2m_poly2arr
#  define BN_GF2m_poly2arr OPENSSL_MANGLER(BN_GF2m_poly2arr)
# endif
#else
# ifndef _BN_GF2m_poly2arr
#  define _BN_GF2m_poly2arr OPENSSL_MANGLER_ASM(BN_GF2m_poly2arr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_MONT_CTX_copy
#  define BN_MONT_CTX_copy OPENSSL_MANGLER(BN_MONT_CTX_copy)
# endif
#else
# ifndef _BN_MONT_CTX_copy
#  define _BN_MONT_CTX_copy OPENSSL_MANGLER_ASM(BN_MONT_CTX_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_MONT_CTX_free
#  define BN_MONT_CTX_free OPENSSL_MANGLER(BN_MONT_CTX_free)
# endif
#else
# ifndef _BN_MONT_CTX_free
#  define _BN_MONT_CTX_free OPENSSL_MANGLER_ASM(BN_MONT_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_MONT_CTX_init
#  define BN_MONT_CTX_init OPENSSL_MANGLER(BN_MONT_CTX_init)
# endif
#else
# ifndef _BN_MONT_CTX_init
#  define _BN_MONT_CTX_init OPENSSL_MANGLER_ASM(BN_MONT_CTX_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_MONT_CTX_new
#  define BN_MONT_CTX_new OPENSSL_MANGLER(BN_MONT_CTX_new)
# endif
#else
# ifndef _BN_MONT_CTX_new
#  define _BN_MONT_CTX_new OPENSSL_MANGLER_ASM(BN_MONT_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_MONT_CTX_set
#  define BN_MONT_CTX_set OPENSSL_MANGLER(BN_MONT_CTX_set)
# endif
#else
# ifndef _BN_MONT_CTX_set
#  define _BN_MONT_CTX_set OPENSSL_MANGLER_ASM(BN_MONT_CTX_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_MONT_CTX_set_locked
#  define BN_MONT_CTX_set_locked OPENSSL_MANGLER(BN_MONT_CTX_set_locked)
# endif
#else
# ifndef _BN_MONT_CTX_set_locked
#  define _BN_MONT_CTX_set_locked OPENSSL_MANGLER_ASM(BN_MONT_CTX_set_locked)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_RECP_CTX_free
#  define BN_RECP_CTX_free OPENSSL_MANGLER(BN_RECP_CTX_free)
# endif
#else
# ifndef _BN_RECP_CTX_free
#  define _BN_RECP_CTX_free OPENSSL_MANGLER_ASM(BN_RECP_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_RECP_CTX_init
#  define BN_RECP_CTX_init OPENSSL_MANGLER(BN_RECP_CTX_init)
# endif
#else
# ifndef _BN_RECP_CTX_init
#  define _BN_RECP_CTX_init OPENSSL_MANGLER_ASM(BN_RECP_CTX_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_RECP_CTX_new
#  define BN_RECP_CTX_new OPENSSL_MANGLER(BN_RECP_CTX_new)
# endif
#else
# ifndef _BN_RECP_CTX_new
#  define _BN_RECP_CTX_new OPENSSL_MANGLER_ASM(BN_RECP_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_RECP_CTX_set
#  define BN_RECP_CTX_set OPENSSL_MANGLER(BN_RECP_CTX_set)
# endif
#else
# ifndef _BN_RECP_CTX_set
#  define _BN_RECP_CTX_set OPENSSL_MANGLER_ASM(BN_RECP_CTX_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_X931_derive_prime_ex
#  define BN_X931_derive_prime_ex OPENSSL_MANGLER(BN_X931_derive_prime_ex)
# endif
#else
# ifndef _BN_X931_derive_prime_ex
#  define _BN_X931_derive_prime_ex OPENSSL_MANGLER_ASM(BN_X931_derive_prime_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_X931_generate_Xpq
#  define BN_X931_generate_Xpq OPENSSL_MANGLER(BN_X931_generate_Xpq)
# endif
#else
# ifndef _BN_X931_generate_Xpq
#  define _BN_X931_generate_Xpq OPENSSL_MANGLER_ASM(BN_X931_generate_Xpq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_X931_generate_prime_ex
#  define BN_X931_generate_prime_ex OPENSSL_MANGLER(BN_X931_generate_prime_ex)
# endif
#else
# ifndef _BN_X931_generate_prime_ex
#  define _BN_X931_generate_prime_ex OPENSSL_MANGLER_ASM(BN_X931_generate_prime_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_abs_is_word
#  define BN_abs_is_word OPENSSL_MANGLER(BN_abs_is_word)
# endif
#else
# ifndef _BN_abs_is_word
#  define _BN_abs_is_word OPENSSL_MANGLER_ASM(BN_abs_is_word)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_add
#  define BN_add OPENSSL_MANGLER(BN_add)
# endif
#else
# ifndef _BN_add
#  define _BN_add OPENSSL_MANGLER_ASM(BN_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_add_word
#  define BN_add_word OPENSSL_MANGLER(BN_add_word)
# endif
#else
# ifndef _BN_add_word
#  define _BN_add_word OPENSSL_MANGLER_ASM(BN_add_word)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_asc2bn
#  define BN_asc2bn OPENSSL_MANGLER(BN_asc2bn)
# endif
#else
# ifndef _BN_asc2bn
#  define _BN_asc2bn OPENSSL_MANGLER_ASM(BN_asc2bn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_bin2bn
#  define BN_bin2bn OPENSSL_MANGLER(BN_bin2bn)
# endif
#else
# ifndef _BN_bin2bn
#  define _BN_bin2bn OPENSSL_MANGLER_ASM(BN_bin2bn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_bn2bin
#  define BN_bn2bin OPENSSL_MANGLER(BN_bn2bin)
# endif
#else
# ifndef _BN_bn2bin
#  define _BN_bn2bin OPENSSL_MANGLER_ASM(BN_bn2bin)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_bn2binpad
#  define BN_bn2binpad OPENSSL_MANGLER(BN_bn2binpad)
# endif
#else
# ifndef _BN_bn2binpad
#  define _BN_bn2binpad OPENSSL_MANGLER_ASM(BN_bn2binpad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_bn2dec
#  define BN_bn2dec OPENSSL_MANGLER(BN_bn2dec)
# endif
#else
# ifndef _BN_bn2dec
#  define _BN_bn2dec OPENSSL_MANGLER_ASM(BN_bn2dec)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_bn2hex
#  define BN_bn2hex OPENSSL_MANGLER(BN_bn2hex)
# endif
#else
# ifndef _BN_bn2hex
#  define _BN_bn2hex OPENSSL_MANGLER_ASM(BN_bn2hex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_bn2lebinpad
#  define BN_bn2lebinpad OPENSSL_MANGLER(BN_bn2lebinpad)
# endif
#else
# ifndef _BN_bn2lebinpad
#  define _BN_bn2lebinpad OPENSSL_MANGLER_ASM(BN_bn2lebinpad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_bn2mpi
#  define BN_bn2mpi OPENSSL_MANGLER(BN_bn2mpi)
# endif
#else
# ifndef _BN_bn2mpi
#  define _BN_bn2mpi OPENSSL_MANGLER_ASM(BN_bn2mpi)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_bn2nativepad
#  define BN_bn2nativepad OPENSSL_MANGLER(BN_bn2nativepad)
# endif
#else
# ifndef _BN_bn2nativepad
#  define _BN_bn2nativepad OPENSSL_MANGLER_ASM(BN_bn2nativepad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_bntest_rand
#  define BN_bntest_rand OPENSSL_MANGLER(BN_bntest_rand)
# endif
#else
# ifndef _BN_bntest_rand
#  define _BN_bntest_rand OPENSSL_MANGLER_ASM(BN_bntest_rand)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_check_prime
#  define BN_check_prime OPENSSL_MANGLER(BN_check_prime)
# endif
#else
# ifndef _BN_check_prime
#  define _BN_check_prime OPENSSL_MANGLER_ASM(BN_check_prime)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_clear
#  define BN_clear OPENSSL_MANGLER(BN_clear)
# endif
#else
# ifndef _BN_clear
#  define _BN_clear OPENSSL_MANGLER_ASM(BN_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_clear_bit
#  define BN_clear_bit OPENSSL_MANGLER(BN_clear_bit)
# endif
#else
# ifndef _BN_clear_bit
#  define _BN_clear_bit OPENSSL_MANGLER_ASM(BN_clear_bit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_clear_free
#  define BN_clear_free OPENSSL_MANGLER(BN_clear_free)
# endif
#else
# ifndef _BN_clear_free
#  define _BN_clear_free OPENSSL_MANGLER_ASM(BN_clear_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_cmp
#  define BN_cmp OPENSSL_MANGLER(BN_cmp)
# endif
#else
# ifndef _BN_cmp
#  define _BN_cmp OPENSSL_MANGLER_ASM(BN_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_consttime_swap
#  define BN_consttime_swap OPENSSL_MANGLER(BN_consttime_swap)
# endif
#else
# ifndef _BN_consttime_swap
#  define _BN_consttime_swap OPENSSL_MANGLER_ASM(BN_consttime_swap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_copy
#  define BN_copy OPENSSL_MANGLER(BN_copy)
# endif
#else
# ifndef _BN_copy
#  define _BN_copy OPENSSL_MANGLER_ASM(BN_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_dec2bn
#  define BN_dec2bn OPENSSL_MANGLER(BN_dec2bn)
# endif
#else
# ifndef _BN_dec2bn
#  define _BN_dec2bn OPENSSL_MANGLER_ASM(BN_dec2bn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_div
#  define BN_div OPENSSL_MANGLER(BN_div)
# endif
#else
# ifndef _BN_div
#  define _BN_div OPENSSL_MANGLER_ASM(BN_div)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_div_recp
#  define BN_div_recp OPENSSL_MANGLER(BN_div_recp)
# endif
#else
# ifndef _BN_div_recp
#  define _BN_div_recp OPENSSL_MANGLER_ASM(BN_div_recp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_div_word
#  define BN_div_word OPENSSL_MANGLER(BN_div_word)
# endif
#else
# ifndef _BN_div_word
#  define _BN_div_word OPENSSL_MANGLER_ASM(BN_div_word)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_dup
#  define BN_dup OPENSSL_MANGLER(BN_dup)
# endif
#else
# ifndef _BN_dup
#  define _BN_dup OPENSSL_MANGLER_ASM(BN_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_exp
#  define BN_exp OPENSSL_MANGLER(BN_exp)
# endif
#else
# ifndef _BN_exp
#  define _BN_exp OPENSSL_MANGLER_ASM(BN_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_free
#  define BN_free OPENSSL_MANGLER(BN_free)
# endif
#else
# ifndef _BN_free
#  define _BN_free OPENSSL_MANGLER_ASM(BN_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_from_montgomery
#  define BN_from_montgomery OPENSSL_MANGLER(BN_from_montgomery)
# endif
#else
# ifndef _BN_from_montgomery
#  define _BN_from_montgomery OPENSSL_MANGLER_ASM(BN_from_montgomery)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_gcd
#  define BN_gcd OPENSSL_MANGLER(BN_gcd)
# endif
#else
# ifndef _BN_gcd
#  define _BN_gcd OPENSSL_MANGLER_ASM(BN_gcd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_generate_dsa_nonce
#  define BN_generate_dsa_nonce OPENSSL_MANGLER(BN_generate_dsa_nonce)
# endif
#else
# ifndef _BN_generate_dsa_nonce
#  define _BN_generate_dsa_nonce OPENSSL_MANGLER_ASM(BN_generate_dsa_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_generate_prime
#  define BN_generate_prime OPENSSL_MANGLER(BN_generate_prime)
# endif
#else
# ifndef _BN_generate_prime
#  define _BN_generate_prime OPENSSL_MANGLER_ASM(BN_generate_prime)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_generate_prime_ex
#  define BN_generate_prime_ex OPENSSL_MANGLER(BN_generate_prime_ex)
# endif
#else
# ifndef _BN_generate_prime_ex
#  define _BN_generate_prime_ex OPENSSL_MANGLER_ASM(BN_generate_prime_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_generate_prime_ex2
#  define BN_generate_prime_ex2 OPENSSL_MANGLER(BN_generate_prime_ex2)
# endif
#else
# ifndef _BN_generate_prime_ex2
#  define _BN_generate_prime_ex2 OPENSSL_MANGLER_ASM(BN_generate_prime_ex2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get0_nist_prime_192
#  define BN_get0_nist_prime_192 OPENSSL_MANGLER(BN_get0_nist_prime_192)
# endif
#else
# ifndef _BN_get0_nist_prime_192
#  define _BN_get0_nist_prime_192 OPENSSL_MANGLER_ASM(BN_get0_nist_prime_192)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get0_nist_prime_224
#  define BN_get0_nist_prime_224 OPENSSL_MANGLER(BN_get0_nist_prime_224)
# endif
#else
# ifndef _BN_get0_nist_prime_224
#  define _BN_get0_nist_prime_224 OPENSSL_MANGLER_ASM(BN_get0_nist_prime_224)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get0_nist_prime_256
#  define BN_get0_nist_prime_256 OPENSSL_MANGLER(BN_get0_nist_prime_256)
# endif
#else
# ifndef _BN_get0_nist_prime_256
#  define _BN_get0_nist_prime_256 OPENSSL_MANGLER_ASM(BN_get0_nist_prime_256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get0_nist_prime_384
#  define BN_get0_nist_prime_384 OPENSSL_MANGLER(BN_get0_nist_prime_384)
# endif
#else
# ifndef _BN_get0_nist_prime_384
#  define _BN_get0_nist_prime_384 OPENSSL_MANGLER_ASM(BN_get0_nist_prime_384)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get0_nist_prime_521
#  define BN_get0_nist_prime_521 OPENSSL_MANGLER(BN_get0_nist_prime_521)
# endif
#else
# ifndef _BN_get0_nist_prime_521
#  define _BN_get0_nist_prime_521 OPENSSL_MANGLER_ASM(BN_get0_nist_prime_521)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get_flags
#  define BN_get_flags OPENSSL_MANGLER(BN_get_flags)
# endif
#else
# ifndef _BN_get_flags
#  define _BN_get_flags OPENSSL_MANGLER_ASM(BN_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get_rfc2409_prime_1024
#  define BN_get_rfc2409_prime_1024 OPENSSL_MANGLER(BN_get_rfc2409_prime_1024)
# endif
#else
# ifndef _BN_get_rfc2409_prime_1024
#  define _BN_get_rfc2409_prime_1024 OPENSSL_MANGLER_ASM(BN_get_rfc2409_prime_1024)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get_rfc2409_prime_768
#  define BN_get_rfc2409_prime_768 OPENSSL_MANGLER(BN_get_rfc2409_prime_768)
# endif
#else
# ifndef _BN_get_rfc2409_prime_768
#  define _BN_get_rfc2409_prime_768 OPENSSL_MANGLER_ASM(BN_get_rfc2409_prime_768)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get_rfc3526_prime_1536
#  define BN_get_rfc3526_prime_1536 OPENSSL_MANGLER(BN_get_rfc3526_prime_1536)
# endif
#else
# ifndef _BN_get_rfc3526_prime_1536
#  define _BN_get_rfc3526_prime_1536 OPENSSL_MANGLER_ASM(BN_get_rfc3526_prime_1536)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get_rfc3526_prime_2048
#  define BN_get_rfc3526_prime_2048 OPENSSL_MANGLER(BN_get_rfc3526_prime_2048)
# endif
#else
# ifndef _BN_get_rfc3526_prime_2048
#  define _BN_get_rfc3526_prime_2048 OPENSSL_MANGLER_ASM(BN_get_rfc3526_prime_2048)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get_rfc3526_prime_3072
#  define BN_get_rfc3526_prime_3072 OPENSSL_MANGLER(BN_get_rfc3526_prime_3072)
# endif
#else
# ifndef _BN_get_rfc3526_prime_3072
#  define _BN_get_rfc3526_prime_3072 OPENSSL_MANGLER_ASM(BN_get_rfc3526_prime_3072)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get_rfc3526_prime_4096
#  define BN_get_rfc3526_prime_4096 OPENSSL_MANGLER(BN_get_rfc3526_prime_4096)
# endif
#else
# ifndef _BN_get_rfc3526_prime_4096
#  define _BN_get_rfc3526_prime_4096 OPENSSL_MANGLER_ASM(BN_get_rfc3526_prime_4096)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get_rfc3526_prime_6144
#  define BN_get_rfc3526_prime_6144 OPENSSL_MANGLER(BN_get_rfc3526_prime_6144)
# endif
#else
# ifndef _BN_get_rfc3526_prime_6144
#  define _BN_get_rfc3526_prime_6144 OPENSSL_MANGLER_ASM(BN_get_rfc3526_prime_6144)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get_rfc3526_prime_8192
#  define BN_get_rfc3526_prime_8192 OPENSSL_MANGLER(BN_get_rfc3526_prime_8192)
# endif
#else
# ifndef _BN_get_rfc3526_prime_8192
#  define _BN_get_rfc3526_prime_8192 OPENSSL_MANGLER_ASM(BN_get_rfc3526_prime_8192)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_get_word
#  define BN_get_word OPENSSL_MANGLER(BN_get_word)
# endif
#else
# ifndef _BN_get_word
#  define _BN_get_word OPENSSL_MANGLER_ASM(BN_get_word)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_hex2bn
#  define BN_hex2bn OPENSSL_MANGLER(BN_hex2bn)
# endif
#else
# ifndef _BN_hex2bn
#  define _BN_hex2bn OPENSSL_MANGLER_ASM(BN_hex2bn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_is_bit_set
#  define BN_is_bit_set OPENSSL_MANGLER(BN_is_bit_set)
# endif
#else
# ifndef _BN_is_bit_set
#  define _BN_is_bit_set OPENSSL_MANGLER_ASM(BN_is_bit_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_is_negative
#  define BN_is_negative OPENSSL_MANGLER(BN_is_negative)
# endif
#else
# ifndef _BN_is_negative
#  define _BN_is_negative OPENSSL_MANGLER_ASM(BN_is_negative)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_is_odd
#  define BN_is_odd OPENSSL_MANGLER(BN_is_odd)
# endif
#else
# ifndef _BN_is_odd
#  define _BN_is_odd OPENSSL_MANGLER_ASM(BN_is_odd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_is_one
#  define BN_is_one OPENSSL_MANGLER(BN_is_one)
# endif
#else
# ifndef _BN_is_one
#  define _BN_is_one OPENSSL_MANGLER_ASM(BN_is_one)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_is_prime
#  define BN_is_prime OPENSSL_MANGLER(BN_is_prime)
# endif
#else
# ifndef _BN_is_prime
#  define _BN_is_prime OPENSSL_MANGLER_ASM(BN_is_prime)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_is_prime_ex
#  define BN_is_prime_ex OPENSSL_MANGLER(BN_is_prime_ex)
# endif
#else
# ifndef _BN_is_prime_ex
#  define _BN_is_prime_ex OPENSSL_MANGLER_ASM(BN_is_prime_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_is_prime_fasttest
#  define BN_is_prime_fasttest OPENSSL_MANGLER(BN_is_prime_fasttest)
# endif
#else
# ifndef _BN_is_prime_fasttest
#  define _BN_is_prime_fasttest OPENSSL_MANGLER_ASM(BN_is_prime_fasttest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_is_prime_fasttest_ex
#  define BN_is_prime_fasttest_ex OPENSSL_MANGLER(BN_is_prime_fasttest_ex)
# endif
#else
# ifndef _BN_is_prime_fasttest_ex
#  define _BN_is_prime_fasttest_ex OPENSSL_MANGLER_ASM(BN_is_prime_fasttest_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_is_word
#  define BN_is_word OPENSSL_MANGLER(BN_is_word)
# endif
#else
# ifndef _BN_is_word
#  define _BN_is_word OPENSSL_MANGLER_ASM(BN_is_word)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_is_zero
#  define BN_is_zero OPENSSL_MANGLER(BN_is_zero)
# endif
#else
# ifndef _BN_is_zero
#  define _BN_is_zero OPENSSL_MANGLER_ASM(BN_is_zero)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_kronecker
#  define BN_kronecker OPENSSL_MANGLER(BN_kronecker)
# endif
#else
# ifndef _BN_kronecker
#  define _BN_kronecker OPENSSL_MANGLER_ASM(BN_kronecker)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_lebin2bn
#  define BN_lebin2bn OPENSSL_MANGLER(BN_lebin2bn)
# endif
#else
# ifndef _BN_lebin2bn
#  define _BN_lebin2bn OPENSSL_MANGLER_ASM(BN_lebin2bn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_lshift
#  define BN_lshift OPENSSL_MANGLER(BN_lshift)
# endif
#else
# ifndef _BN_lshift
#  define _BN_lshift OPENSSL_MANGLER_ASM(BN_lshift)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_lshift1
#  define BN_lshift1 OPENSSL_MANGLER(BN_lshift1)
# endif
#else
# ifndef _BN_lshift1
#  define _BN_lshift1 OPENSSL_MANGLER_ASM(BN_lshift1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mask_bits
#  define BN_mask_bits OPENSSL_MANGLER(BN_mask_bits)
# endif
#else
# ifndef _BN_mask_bits
#  define _BN_mask_bits OPENSSL_MANGLER_ASM(BN_mask_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_add
#  define BN_mod_add OPENSSL_MANGLER(BN_mod_add)
# endif
#else
# ifndef _BN_mod_add
#  define _BN_mod_add OPENSSL_MANGLER_ASM(BN_mod_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_add_quick
#  define BN_mod_add_quick OPENSSL_MANGLER(BN_mod_add_quick)
# endif
#else
# ifndef _BN_mod_add_quick
#  define _BN_mod_add_quick OPENSSL_MANGLER_ASM(BN_mod_add_quick)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_exp
#  define BN_mod_exp OPENSSL_MANGLER(BN_mod_exp)
# endif
#else
# ifndef _BN_mod_exp
#  define _BN_mod_exp OPENSSL_MANGLER_ASM(BN_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_exp2_mont
#  define BN_mod_exp2_mont OPENSSL_MANGLER(BN_mod_exp2_mont)
# endif
#else
# ifndef _BN_mod_exp2_mont
#  define _BN_mod_exp2_mont OPENSSL_MANGLER_ASM(BN_mod_exp2_mont)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_exp_mont
#  define BN_mod_exp_mont OPENSSL_MANGLER(BN_mod_exp_mont)
# endif
#else
# ifndef _BN_mod_exp_mont
#  define _BN_mod_exp_mont OPENSSL_MANGLER_ASM(BN_mod_exp_mont)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_exp_mont_consttime
#  define BN_mod_exp_mont_consttime OPENSSL_MANGLER(BN_mod_exp_mont_consttime)
# endif
#else
# ifndef _BN_mod_exp_mont_consttime
#  define _BN_mod_exp_mont_consttime OPENSSL_MANGLER_ASM(BN_mod_exp_mont_consttime)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_exp_mont_consttime_x2
#  define BN_mod_exp_mont_consttime_x2 OPENSSL_MANGLER(BN_mod_exp_mont_consttime_x2)
# endif
#else
# ifndef _BN_mod_exp_mont_consttime_x2
#  define _BN_mod_exp_mont_consttime_x2 OPENSSL_MANGLER_ASM(BN_mod_exp_mont_consttime_x2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_exp_mont_word
#  define BN_mod_exp_mont_word OPENSSL_MANGLER(BN_mod_exp_mont_word)
# endif
#else
# ifndef _BN_mod_exp_mont_word
#  define _BN_mod_exp_mont_word OPENSSL_MANGLER_ASM(BN_mod_exp_mont_word)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_exp_recp
#  define BN_mod_exp_recp OPENSSL_MANGLER(BN_mod_exp_recp)
# endif
#else
# ifndef _BN_mod_exp_recp
#  define _BN_mod_exp_recp OPENSSL_MANGLER_ASM(BN_mod_exp_recp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_exp_simple
#  define BN_mod_exp_simple OPENSSL_MANGLER(BN_mod_exp_simple)
# endif
#else
# ifndef _BN_mod_exp_simple
#  define _BN_mod_exp_simple OPENSSL_MANGLER_ASM(BN_mod_exp_simple)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_inverse
#  define BN_mod_inverse OPENSSL_MANGLER(BN_mod_inverse)
# endif
#else
# ifndef _BN_mod_inverse
#  define _BN_mod_inverse OPENSSL_MANGLER_ASM(BN_mod_inverse)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_lshift
#  define BN_mod_lshift OPENSSL_MANGLER(BN_mod_lshift)
# endif
#else
# ifndef _BN_mod_lshift
#  define _BN_mod_lshift OPENSSL_MANGLER_ASM(BN_mod_lshift)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_lshift1
#  define BN_mod_lshift1 OPENSSL_MANGLER(BN_mod_lshift1)
# endif
#else
# ifndef _BN_mod_lshift1
#  define _BN_mod_lshift1 OPENSSL_MANGLER_ASM(BN_mod_lshift1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_lshift1_quick
#  define BN_mod_lshift1_quick OPENSSL_MANGLER(BN_mod_lshift1_quick)
# endif
#else
# ifndef _BN_mod_lshift1_quick
#  define _BN_mod_lshift1_quick OPENSSL_MANGLER_ASM(BN_mod_lshift1_quick)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_lshift_quick
#  define BN_mod_lshift_quick OPENSSL_MANGLER(BN_mod_lshift_quick)
# endif
#else
# ifndef _BN_mod_lshift_quick
#  define _BN_mod_lshift_quick OPENSSL_MANGLER_ASM(BN_mod_lshift_quick)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_mul
#  define BN_mod_mul OPENSSL_MANGLER(BN_mod_mul)
# endif
#else
# ifndef _BN_mod_mul
#  define _BN_mod_mul OPENSSL_MANGLER_ASM(BN_mod_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_mul_montgomery
#  define BN_mod_mul_montgomery OPENSSL_MANGLER(BN_mod_mul_montgomery)
# endif
#else
# ifndef _BN_mod_mul_montgomery
#  define _BN_mod_mul_montgomery OPENSSL_MANGLER_ASM(BN_mod_mul_montgomery)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_mul_reciprocal
#  define BN_mod_mul_reciprocal OPENSSL_MANGLER(BN_mod_mul_reciprocal)
# endif
#else
# ifndef _BN_mod_mul_reciprocal
#  define _BN_mod_mul_reciprocal OPENSSL_MANGLER_ASM(BN_mod_mul_reciprocal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_sqr
#  define BN_mod_sqr OPENSSL_MANGLER(BN_mod_sqr)
# endif
#else
# ifndef _BN_mod_sqr
#  define _BN_mod_sqr OPENSSL_MANGLER_ASM(BN_mod_sqr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_sqrt
#  define BN_mod_sqrt OPENSSL_MANGLER(BN_mod_sqrt)
# endif
#else
# ifndef _BN_mod_sqrt
#  define _BN_mod_sqrt OPENSSL_MANGLER_ASM(BN_mod_sqrt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_sub
#  define BN_mod_sub OPENSSL_MANGLER(BN_mod_sub)
# endif
#else
# ifndef _BN_mod_sub
#  define _BN_mod_sub OPENSSL_MANGLER_ASM(BN_mod_sub)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_sub_quick
#  define BN_mod_sub_quick OPENSSL_MANGLER(BN_mod_sub_quick)
# endif
#else
# ifndef _BN_mod_sub_quick
#  define _BN_mod_sub_quick OPENSSL_MANGLER_ASM(BN_mod_sub_quick)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mod_word
#  define BN_mod_word OPENSSL_MANGLER(BN_mod_word)
# endif
#else
# ifndef _BN_mod_word
#  define _BN_mod_word OPENSSL_MANGLER_ASM(BN_mod_word)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mpi2bn
#  define BN_mpi2bn OPENSSL_MANGLER(BN_mpi2bn)
# endif
#else
# ifndef _BN_mpi2bn
#  define _BN_mpi2bn OPENSSL_MANGLER_ASM(BN_mpi2bn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mul
#  define BN_mul OPENSSL_MANGLER(BN_mul)
# endif
#else
# ifndef _BN_mul
#  define _BN_mul OPENSSL_MANGLER_ASM(BN_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_mul_word
#  define BN_mul_word OPENSSL_MANGLER(BN_mul_word)
# endif
#else
# ifndef _BN_mul_word
#  define _BN_mul_word OPENSSL_MANGLER_ASM(BN_mul_word)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_native2bn
#  define BN_native2bn OPENSSL_MANGLER(BN_native2bn)
# endif
#else
# ifndef _BN_native2bn
#  define _BN_native2bn OPENSSL_MANGLER_ASM(BN_native2bn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_new
#  define BN_new OPENSSL_MANGLER(BN_new)
# endif
#else
# ifndef _BN_new
#  define _BN_new OPENSSL_MANGLER_ASM(BN_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_nist_mod_192
#  define BN_nist_mod_192 OPENSSL_MANGLER(BN_nist_mod_192)
# endif
#else
# ifndef _BN_nist_mod_192
#  define _BN_nist_mod_192 OPENSSL_MANGLER_ASM(BN_nist_mod_192)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_nist_mod_224
#  define BN_nist_mod_224 OPENSSL_MANGLER(BN_nist_mod_224)
# endif
#else
# ifndef _BN_nist_mod_224
#  define _BN_nist_mod_224 OPENSSL_MANGLER_ASM(BN_nist_mod_224)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_nist_mod_256
#  define BN_nist_mod_256 OPENSSL_MANGLER(BN_nist_mod_256)
# endif
#else
# ifndef _BN_nist_mod_256
#  define _BN_nist_mod_256 OPENSSL_MANGLER_ASM(BN_nist_mod_256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_nist_mod_384
#  define BN_nist_mod_384 OPENSSL_MANGLER(BN_nist_mod_384)
# endif
#else
# ifndef _BN_nist_mod_384
#  define _BN_nist_mod_384 OPENSSL_MANGLER_ASM(BN_nist_mod_384)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_nist_mod_521
#  define BN_nist_mod_521 OPENSSL_MANGLER(BN_nist_mod_521)
# endif
#else
# ifndef _BN_nist_mod_521
#  define _BN_nist_mod_521 OPENSSL_MANGLER_ASM(BN_nist_mod_521)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_nist_mod_func
#  define BN_nist_mod_func OPENSSL_MANGLER(BN_nist_mod_func)
# endif
#else
# ifndef _BN_nist_mod_func
#  define _BN_nist_mod_func OPENSSL_MANGLER_ASM(BN_nist_mod_func)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_nnmod
#  define BN_nnmod OPENSSL_MANGLER(BN_nnmod)
# endif
#else
# ifndef _BN_nnmod
#  define _BN_nnmod OPENSSL_MANGLER_ASM(BN_nnmod)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_num_bits
#  define BN_num_bits OPENSSL_MANGLER(BN_num_bits)
# endif
#else
# ifndef _BN_num_bits
#  define _BN_num_bits OPENSSL_MANGLER_ASM(BN_num_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_num_bits_word
#  define BN_num_bits_word OPENSSL_MANGLER(BN_num_bits_word)
# endif
#else
# ifndef _BN_num_bits_word
#  define _BN_num_bits_word OPENSSL_MANGLER_ASM(BN_num_bits_word)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_options
#  define BN_options OPENSSL_MANGLER(BN_options)
# endif
#else
# ifndef _BN_options
#  define _BN_options OPENSSL_MANGLER_ASM(BN_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_print
#  define BN_print OPENSSL_MANGLER(BN_print)
# endif
#else
# ifndef _BN_print
#  define _BN_print OPENSSL_MANGLER_ASM(BN_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_print_fp
#  define BN_print_fp OPENSSL_MANGLER(BN_print_fp)
# endif
#else
# ifndef _BN_print_fp
#  define _BN_print_fp OPENSSL_MANGLER_ASM(BN_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_priv_rand
#  define BN_priv_rand OPENSSL_MANGLER(BN_priv_rand)
# endif
#else
# ifndef _BN_priv_rand
#  define _BN_priv_rand OPENSSL_MANGLER_ASM(BN_priv_rand)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_priv_rand_ex
#  define BN_priv_rand_ex OPENSSL_MANGLER(BN_priv_rand_ex)
# endif
#else
# ifndef _BN_priv_rand_ex
#  define _BN_priv_rand_ex OPENSSL_MANGLER_ASM(BN_priv_rand_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_priv_rand_range
#  define BN_priv_rand_range OPENSSL_MANGLER(BN_priv_rand_range)
# endif
#else
# ifndef _BN_priv_rand_range
#  define _BN_priv_rand_range OPENSSL_MANGLER_ASM(BN_priv_rand_range)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_priv_rand_range_ex
#  define BN_priv_rand_range_ex OPENSSL_MANGLER(BN_priv_rand_range_ex)
# endif
#else
# ifndef _BN_priv_rand_range_ex
#  define _BN_priv_rand_range_ex OPENSSL_MANGLER_ASM(BN_priv_rand_range_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_pseudo_rand
#  define BN_pseudo_rand OPENSSL_MANGLER(BN_pseudo_rand)
# endif
#else
# ifndef _BN_pseudo_rand
#  define _BN_pseudo_rand OPENSSL_MANGLER_ASM(BN_pseudo_rand)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_pseudo_rand_range
#  define BN_pseudo_rand_range OPENSSL_MANGLER(BN_pseudo_rand_range)
# endif
#else
# ifndef _BN_pseudo_rand_range
#  define _BN_pseudo_rand_range OPENSSL_MANGLER_ASM(BN_pseudo_rand_range)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_rand
#  define BN_rand OPENSSL_MANGLER(BN_rand)
# endif
#else
# ifndef _BN_rand
#  define _BN_rand OPENSSL_MANGLER_ASM(BN_rand)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_rand_ex
#  define BN_rand_ex OPENSSL_MANGLER(BN_rand_ex)
# endif
#else
# ifndef _BN_rand_ex
#  define _BN_rand_ex OPENSSL_MANGLER_ASM(BN_rand_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_rand_range
#  define BN_rand_range OPENSSL_MANGLER(BN_rand_range)
# endif
#else
# ifndef _BN_rand_range
#  define _BN_rand_range OPENSSL_MANGLER_ASM(BN_rand_range)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_rand_range_ex
#  define BN_rand_range_ex OPENSSL_MANGLER(BN_rand_range_ex)
# endif
#else
# ifndef _BN_rand_range_ex
#  define _BN_rand_range_ex OPENSSL_MANGLER_ASM(BN_rand_range_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_reciprocal
#  define BN_reciprocal OPENSSL_MANGLER(BN_reciprocal)
# endif
#else
# ifndef _BN_reciprocal
#  define _BN_reciprocal OPENSSL_MANGLER_ASM(BN_reciprocal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_rshift
#  define BN_rshift OPENSSL_MANGLER(BN_rshift)
# endif
#else
# ifndef _BN_rshift
#  define _BN_rshift OPENSSL_MANGLER_ASM(BN_rshift)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_rshift1
#  define BN_rshift1 OPENSSL_MANGLER(BN_rshift1)
# endif
#else
# ifndef _BN_rshift1
#  define _BN_rshift1 OPENSSL_MANGLER_ASM(BN_rshift1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_secure_new
#  define BN_secure_new OPENSSL_MANGLER(BN_secure_new)
# endif
#else
# ifndef _BN_secure_new
#  define _BN_secure_new OPENSSL_MANGLER_ASM(BN_secure_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_security_bits
#  define BN_security_bits OPENSSL_MANGLER(BN_security_bits)
# endif
#else
# ifndef _BN_security_bits
#  define _BN_security_bits OPENSSL_MANGLER_ASM(BN_security_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_set_bit
#  define BN_set_bit OPENSSL_MANGLER(BN_set_bit)
# endif
#else
# ifndef _BN_set_bit
#  define _BN_set_bit OPENSSL_MANGLER_ASM(BN_set_bit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_set_flags
#  define BN_set_flags OPENSSL_MANGLER(BN_set_flags)
# endif
#else
# ifndef _BN_set_flags
#  define _BN_set_flags OPENSSL_MANGLER_ASM(BN_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_set_negative
#  define BN_set_negative OPENSSL_MANGLER(BN_set_negative)
# endif
#else
# ifndef _BN_set_negative
#  define _BN_set_negative OPENSSL_MANGLER_ASM(BN_set_negative)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_set_word
#  define BN_set_word OPENSSL_MANGLER(BN_set_word)
# endif
#else
# ifndef _BN_set_word
#  define _BN_set_word OPENSSL_MANGLER_ASM(BN_set_word)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_sqr
#  define BN_sqr OPENSSL_MANGLER(BN_sqr)
# endif
#else
# ifndef _BN_sqr
#  define _BN_sqr OPENSSL_MANGLER_ASM(BN_sqr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_sub
#  define BN_sub OPENSSL_MANGLER(BN_sub)
# endif
#else
# ifndef _BN_sub
#  define _BN_sub OPENSSL_MANGLER_ASM(BN_sub)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_sub_word
#  define BN_sub_word OPENSSL_MANGLER(BN_sub_word)
# endif
#else
# ifndef _BN_sub_word
#  define _BN_sub_word OPENSSL_MANGLER_ASM(BN_sub_word)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_swap
#  define BN_swap OPENSSL_MANGLER(BN_swap)
# endif
#else
# ifndef _BN_swap
#  define _BN_swap OPENSSL_MANGLER_ASM(BN_swap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_to_ASN1_ENUMERATED
#  define BN_to_ASN1_ENUMERATED OPENSSL_MANGLER(BN_to_ASN1_ENUMERATED)
# endif
#else
# ifndef _BN_to_ASN1_ENUMERATED
#  define _BN_to_ASN1_ENUMERATED OPENSSL_MANGLER_ASM(BN_to_ASN1_ENUMERATED)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_to_ASN1_INTEGER
#  define BN_to_ASN1_INTEGER OPENSSL_MANGLER(BN_to_ASN1_INTEGER)
# endif
#else
# ifndef _BN_to_ASN1_INTEGER
#  define _BN_to_ASN1_INTEGER OPENSSL_MANGLER_ASM(BN_to_ASN1_INTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_to_montgomery
#  define BN_to_montgomery OPENSSL_MANGLER(BN_to_montgomery)
# endif
#else
# ifndef _BN_to_montgomery
#  define _BN_to_montgomery OPENSSL_MANGLER_ASM(BN_to_montgomery)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_uadd
#  define BN_uadd OPENSSL_MANGLER(BN_uadd)
# endif
#else
# ifndef _BN_uadd
#  define _BN_uadd OPENSSL_MANGLER_ASM(BN_uadd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_ucmp
#  define BN_ucmp OPENSSL_MANGLER(BN_ucmp)
# endif
#else
# ifndef _BN_ucmp
#  define _BN_ucmp OPENSSL_MANGLER_ASM(BN_ucmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_usub
#  define BN_usub OPENSSL_MANGLER(BN_usub)
# endif
#else
# ifndef _BN_usub
#  define _BN_usub OPENSSL_MANGLER_ASM(BN_usub)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_value_one
#  define BN_value_one OPENSSL_MANGLER(BN_value_one)
# endif
#else
# ifndef _BN_value_one
#  define _BN_value_one OPENSSL_MANGLER_ASM(BN_value_one)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_with_flags
#  define BN_with_flags OPENSSL_MANGLER(BN_with_flags)
# endif
#else
# ifndef _BN_with_flags
#  define _BN_with_flags OPENSSL_MANGLER_ASM(BN_with_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BN_zero_ex
#  define BN_zero_ex OPENSSL_MANGLER(BN_zero_ex)
# endif
#else
# ifndef _BN_zero_ex
#  define _BN_zero_ex OPENSSL_MANGLER_ASM(BN_zero_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BUF_MEM_free
#  define BUF_MEM_free OPENSSL_MANGLER(BUF_MEM_free)
# endif
#else
# ifndef _BUF_MEM_free
#  define _BUF_MEM_free OPENSSL_MANGLER_ASM(BUF_MEM_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BUF_MEM_grow
#  define BUF_MEM_grow OPENSSL_MANGLER(BUF_MEM_grow)
# endif
#else
# ifndef _BUF_MEM_grow
#  define _BUF_MEM_grow OPENSSL_MANGLER_ASM(BUF_MEM_grow)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BUF_MEM_grow_clean
#  define BUF_MEM_grow_clean OPENSSL_MANGLER(BUF_MEM_grow_clean)
# endif
#else
# ifndef _BUF_MEM_grow_clean
#  define _BUF_MEM_grow_clean OPENSSL_MANGLER_ASM(BUF_MEM_grow_clean)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BUF_MEM_new
#  define BUF_MEM_new OPENSSL_MANGLER(BUF_MEM_new)
# endif
#else
# ifndef _BUF_MEM_new
#  define _BUF_MEM_new OPENSSL_MANGLER_ASM(BUF_MEM_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BUF_MEM_new_ex
#  define BUF_MEM_new_ex OPENSSL_MANGLER(BUF_MEM_new_ex)
# endif
#else
# ifndef _BUF_MEM_new_ex
#  define _BUF_MEM_new_ex OPENSSL_MANGLER_ASM(BUF_MEM_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef BUF_reverse
#  define BUF_reverse OPENSSL_MANGLER(BUF_reverse)
# endif
#else
# ifndef _BUF_reverse
#  define _BUF_reverse OPENSSL_MANGLER_ASM(BUF_reverse)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CAST_cbc_encrypt
#  define CAST_cbc_encrypt OPENSSL_MANGLER(CAST_cbc_encrypt)
# endif
#else
# ifndef _CAST_cbc_encrypt
#  define _CAST_cbc_encrypt OPENSSL_MANGLER_ASM(CAST_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CAST_cfb64_encrypt
#  define CAST_cfb64_encrypt OPENSSL_MANGLER(CAST_cfb64_encrypt)
# endif
#else
# ifndef _CAST_cfb64_encrypt
#  define _CAST_cfb64_encrypt OPENSSL_MANGLER_ASM(CAST_cfb64_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CAST_decrypt
#  define CAST_decrypt OPENSSL_MANGLER(CAST_decrypt)
# endif
#else
# ifndef _CAST_decrypt
#  define _CAST_decrypt OPENSSL_MANGLER_ASM(CAST_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CAST_ecb_encrypt
#  define CAST_ecb_encrypt OPENSSL_MANGLER(CAST_ecb_encrypt)
# endif
#else
# ifndef _CAST_ecb_encrypt
#  define _CAST_ecb_encrypt OPENSSL_MANGLER_ASM(CAST_ecb_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CAST_encrypt
#  define CAST_encrypt OPENSSL_MANGLER(CAST_encrypt)
# endif
#else
# ifndef _CAST_encrypt
#  define _CAST_encrypt OPENSSL_MANGLER_ASM(CAST_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CAST_ofb64_encrypt
#  define CAST_ofb64_encrypt OPENSSL_MANGLER(CAST_ofb64_encrypt)
# endif
#else
# ifndef _CAST_ofb64_encrypt
#  define _CAST_ofb64_encrypt OPENSSL_MANGLER_ASM(CAST_ofb64_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CAST_set_key
#  define CAST_set_key OPENSSL_MANGLER(CAST_set_key)
# endif
#else
# ifndef _CAST_set_key
#  define _CAST_set_key OPENSSL_MANGLER_ASM(CAST_set_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CBIGNUM_it
#  define CBIGNUM_it OPENSSL_MANGLER(CBIGNUM_it)
# endif
#else
# ifndef _CBIGNUM_it
#  define _CBIGNUM_it OPENSSL_MANGLER_ASM(CBIGNUM_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CERTIFICATEPOLICIES_free
#  define CERTIFICATEPOLICIES_free OPENSSL_MANGLER(CERTIFICATEPOLICIES_free)
# endif
#else
# ifndef _CERTIFICATEPOLICIES_free
#  define _CERTIFICATEPOLICIES_free OPENSSL_MANGLER_ASM(CERTIFICATEPOLICIES_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CERTIFICATEPOLICIES_it
#  define CERTIFICATEPOLICIES_it OPENSSL_MANGLER(CERTIFICATEPOLICIES_it)
# endif
#else
# ifndef _CERTIFICATEPOLICIES_it
#  define _CERTIFICATEPOLICIES_it OPENSSL_MANGLER_ASM(CERTIFICATEPOLICIES_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CERTIFICATEPOLICIES_new
#  define CERTIFICATEPOLICIES_new OPENSSL_MANGLER(CERTIFICATEPOLICIES_new)
# endif
#else
# ifndef _CERTIFICATEPOLICIES_new
#  define _CERTIFICATEPOLICIES_new OPENSSL_MANGLER_ASM(CERTIFICATEPOLICIES_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMAC_CTX_cleanup
#  define CMAC_CTX_cleanup OPENSSL_MANGLER(CMAC_CTX_cleanup)
# endif
#else
# ifndef _CMAC_CTX_cleanup
#  define _CMAC_CTX_cleanup OPENSSL_MANGLER_ASM(CMAC_CTX_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMAC_CTX_copy
#  define CMAC_CTX_copy OPENSSL_MANGLER(CMAC_CTX_copy)
# endif
#else
# ifndef _CMAC_CTX_copy
#  define _CMAC_CTX_copy OPENSSL_MANGLER_ASM(CMAC_CTX_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMAC_CTX_free
#  define CMAC_CTX_free OPENSSL_MANGLER(CMAC_CTX_free)
# endif
#else
# ifndef _CMAC_CTX_free
#  define _CMAC_CTX_free OPENSSL_MANGLER_ASM(CMAC_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMAC_CTX_get0_cipher_ctx
#  define CMAC_CTX_get0_cipher_ctx OPENSSL_MANGLER(CMAC_CTX_get0_cipher_ctx)
# endif
#else
# ifndef _CMAC_CTX_get0_cipher_ctx
#  define _CMAC_CTX_get0_cipher_ctx OPENSSL_MANGLER_ASM(CMAC_CTX_get0_cipher_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMAC_CTX_new
#  define CMAC_CTX_new OPENSSL_MANGLER(CMAC_CTX_new)
# endif
#else
# ifndef _CMAC_CTX_new
#  define _CMAC_CTX_new OPENSSL_MANGLER_ASM(CMAC_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMAC_Final
#  define CMAC_Final OPENSSL_MANGLER(CMAC_Final)
# endif
#else
# ifndef _CMAC_Final
#  define _CMAC_Final OPENSSL_MANGLER_ASM(CMAC_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMAC_Init
#  define CMAC_Init OPENSSL_MANGLER(CMAC_Init)
# endif
#else
# ifndef _CMAC_Init
#  define _CMAC_Init OPENSSL_MANGLER_ASM(CMAC_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMAC_Update
#  define CMAC_Update OPENSSL_MANGLER(CMAC_Update)
# endif
#else
# ifndef _CMAC_Update
#  define _CMAC_Update OPENSSL_MANGLER_ASM(CMAC_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMAC_resume
#  define CMAC_resume OPENSSL_MANGLER(CMAC_resume)
# endif
#else
# ifndef _CMAC_resume
#  define _CMAC_resume OPENSSL_MANGLER_ASM(CMAC_resume)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_Attributes_Sign_it
#  define CMS_Attributes_Sign_it OPENSSL_MANGLER(CMS_Attributes_Sign_it)
# endif
#else
# ifndef _CMS_Attributes_Sign_it
#  define _CMS_Attributes_Sign_it OPENSSL_MANGLER_ASM(CMS_Attributes_Sign_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_Attributes_Verify_it
#  define CMS_Attributes_Verify_it OPENSSL_MANGLER(CMS_Attributes_Verify_it)
# endif
#else
# ifndef _CMS_Attributes_Verify_it
#  define _CMS_Attributes_Verify_it OPENSSL_MANGLER_ASM(CMS_Attributes_Verify_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_AuthEnvelopedData_create
#  define CMS_AuthEnvelopedData_create OPENSSL_MANGLER(CMS_AuthEnvelopedData_create)
# endif
#else
# ifndef _CMS_AuthEnvelopedData_create
#  define _CMS_AuthEnvelopedData_create OPENSSL_MANGLER_ASM(CMS_AuthEnvelopedData_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_AuthEnvelopedData_create_ex
#  define CMS_AuthEnvelopedData_create_ex OPENSSL_MANGLER(CMS_AuthEnvelopedData_create_ex)
# endif
#else
# ifndef _CMS_AuthEnvelopedData_create_ex
#  define _CMS_AuthEnvelopedData_create_ex OPENSSL_MANGLER_ASM(CMS_AuthEnvelopedData_create_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_AuthEnvelopedData_it
#  define CMS_AuthEnvelopedData_it OPENSSL_MANGLER(CMS_AuthEnvelopedData_it)
# endif
#else
# ifndef _CMS_AuthEnvelopedData_it
#  define _CMS_AuthEnvelopedData_it OPENSSL_MANGLER_ASM(CMS_AuthEnvelopedData_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_CertificateChoices_it
#  define CMS_CertificateChoices_it OPENSSL_MANGLER(CMS_CertificateChoices_it)
# endif
#else
# ifndef _CMS_CertificateChoices_it
#  define _CMS_CertificateChoices_it OPENSSL_MANGLER_ASM(CMS_CertificateChoices_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_CompressedData_it
#  define CMS_CompressedData_it OPENSSL_MANGLER(CMS_CompressedData_it)
# endif
#else
# ifndef _CMS_CompressedData_it
#  define _CMS_CompressedData_it OPENSSL_MANGLER_ASM(CMS_CompressedData_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_ContentInfo_free
#  define CMS_ContentInfo_free OPENSSL_MANGLER(CMS_ContentInfo_free)
# endif
#else
# ifndef _CMS_ContentInfo_free
#  define _CMS_ContentInfo_free OPENSSL_MANGLER_ASM(CMS_ContentInfo_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_ContentInfo_it
#  define CMS_ContentInfo_it OPENSSL_MANGLER(CMS_ContentInfo_it)
# endif
#else
# ifndef _CMS_ContentInfo_it
#  define _CMS_ContentInfo_it OPENSSL_MANGLER_ASM(CMS_ContentInfo_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_ContentInfo_new
#  define CMS_ContentInfo_new OPENSSL_MANGLER(CMS_ContentInfo_new)
# endif
#else
# ifndef _CMS_ContentInfo_new
#  define _CMS_ContentInfo_new OPENSSL_MANGLER_ASM(CMS_ContentInfo_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_ContentInfo_new_ex
#  define CMS_ContentInfo_new_ex OPENSSL_MANGLER(CMS_ContentInfo_new_ex)
# endif
#else
# ifndef _CMS_ContentInfo_new_ex
#  define _CMS_ContentInfo_new_ex OPENSSL_MANGLER_ASM(CMS_ContentInfo_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_ContentInfo_print_ctx
#  define CMS_ContentInfo_print_ctx OPENSSL_MANGLER(CMS_ContentInfo_print_ctx)
# endif
#else
# ifndef _CMS_ContentInfo_print_ctx
#  define _CMS_ContentInfo_print_ctx OPENSSL_MANGLER_ASM(CMS_ContentInfo_print_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_DigestedData_it
#  define CMS_DigestedData_it OPENSSL_MANGLER(CMS_DigestedData_it)
# endif
#else
# ifndef _CMS_DigestedData_it
#  define _CMS_DigestedData_it OPENSSL_MANGLER_ASM(CMS_DigestedData_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_EncryptedData_decrypt
#  define CMS_EncryptedData_decrypt OPENSSL_MANGLER(CMS_EncryptedData_decrypt)
# endif
#else
# ifndef _CMS_EncryptedData_decrypt
#  define _CMS_EncryptedData_decrypt OPENSSL_MANGLER_ASM(CMS_EncryptedData_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_EncryptedData_encrypt
#  define CMS_EncryptedData_encrypt OPENSSL_MANGLER(CMS_EncryptedData_encrypt)
# endif
#else
# ifndef _CMS_EncryptedData_encrypt
#  define _CMS_EncryptedData_encrypt OPENSSL_MANGLER_ASM(CMS_EncryptedData_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_EncryptedData_encrypt_ex
#  define CMS_EncryptedData_encrypt_ex OPENSSL_MANGLER(CMS_EncryptedData_encrypt_ex)
# endif
#else
# ifndef _CMS_EncryptedData_encrypt_ex
#  define _CMS_EncryptedData_encrypt_ex OPENSSL_MANGLER_ASM(CMS_EncryptedData_encrypt_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_EncryptedData_it
#  define CMS_EncryptedData_it OPENSSL_MANGLER(CMS_EncryptedData_it)
# endif
#else
# ifndef _CMS_EncryptedData_it
#  define _CMS_EncryptedData_it OPENSSL_MANGLER_ASM(CMS_EncryptedData_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_EncryptedData_set1_key
#  define CMS_EncryptedData_set1_key OPENSSL_MANGLER(CMS_EncryptedData_set1_key)
# endif
#else
# ifndef _CMS_EncryptedData_set1_key
#  define _CMS_EncryptedData_set1_key OPENSSL_MANGLER_ASM(CMS_EncryptedData_set1_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_EnvelopedData_create
#  define CMS_EnvelopedData_create OPENSSL_MANGLER(CMS_EnvelopedData_create)
# endif
#else
# ifndef _CMS_EnvelopedData_create
#  define _CMS_EnvelopedData_create OPENSSL_MANGLER_ASM(CMS_EnvelopedData_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_EnvelopedData_create_ex
#  define CMS_EnvelopedData_create_ex OPENSSL_MANGLER(CMS_EnvelopedData_create_ex)
# endif
#else
# ifndef _CMS_EnvelopedData_create_ex
#  define _CMS_EnvelopedData_create_ex OPENSSL_MANGLER_ASM(CMS_EnvelopedData_create_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_EnvelopedData_it
#  define CMS_EnvelopedData_it OPENSSL_MANGLER(CMS_EnvelopedData_it)
# endif
#else
# ifndef _CMS_EnvelopedData_it
#  define _CMS_EnvelopedData_it OPENSSL_MANGLER_ASM(CMS_EnvelopedData_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_IssuerAndSerialNumber_it
#  define CMS_IssuerAndSerialNumber_it OPENSSL_MANGLER(CMS_IssuerAndSerialNumber_it)
# endif
#else
# ifndef _CMS_IssuerAndSerialNumber_it
#  define _CMS_IssuerAndSerialNumber_it OPENSSL_MANGLER_ASM(CMS_IssuerAndSerialNumber_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_KEKRecipientInfo_it
#  define CMS_KEKRecipientInfo_it OPENSSL_MANGLER(CMS_KEKRecipientInfo_it)
# endif
#else
# ifndef _CMS_KEKRecipientInfo_it
#  define _CMS_KEKRecipientInfo_it OPENSSL_MANGLER_ASM(CMS_KEKRecipientInfo_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_KeyAgreeRecipientInfo_it
#  define CMS_KeyAgreeRecipientInfo_it OPENSSL_MANGLER(CMS_KeyAgreeRecipientInfo_it)
# endif
#else
# ifndef _CMS_KeyAgreeRecipientInfo_it
#  define _CMS_KeyAgreeRecipientInfo_it OPENSSL_MANGLER_ASM(CMS_KeyAgreeRecipientInfo_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_KeyTransRecipientInfo_it
#  define CMS_KeyTransRecipientInfo_it OPENSSL_MANGLER(CMS_KeyTransRecipientInfo_it)
# endif
#else
# ifndef _CMS_KeyTransRecipientInfo_it
#  define _CMS_KeyTransRecipientInfo_it OPENSSL_MANGLER_ASM(CMS_KeyTransRecipientInfo_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_OriginatorPublicKey_it
#  define CMS_OriginatorPublicKey_it OPENSSL_MANGLER(CMS_OriginatorPublicKey_it)
# endif
#else
# ifndef _CMS_OriginatorPublicKey_it
#  define _CMS_OriginatorPublicKey_it OPENSSL_MANGLER_ASM(CMS_OriginatorPublicKey_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_OtherKeyAttribute_it
#  define CMS_OtherKeyAttribute_it OPENSSL_MANGLER(CMS_OtherKeyAttribute_it)
# endif
#else
# ifndef _CMS_OtherKeyAttribute_it
#  define _CMS_OtherKeyAttribute_it OPENSSL_MANGLER_ASM(CMS_OtherKeyAttribute_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_PasswordRecipientInfo_it
#  define CMS_PasswordRecipientInfo_it OPENSSL_MANGLER(CMS_PasswordRecipientInfo_it)
# endif
#else
# ifndef _CMS_PasswordRecipientInfo_it
#  define _CMS_PasswordRecipientInfo_it OPENSSL_MANGLER_ASM(CMS_PasswordRecipientInfo_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_ReceiptRequest_create0
#  define CMS_ReceiptRequest_create0 OPENSSL_MANGLER(CMS_ReceiptRequest_create0)
# endif
#else
# ifndef _CMS_ReceiptRequest_create0
#  define _CMS_ReceiptRequest_create0 OPENSSL_MANGLER_ASM(CMS_ReceiptRequest_create0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_ReceiptRequest_create0_ex
#  define CMS_ReceiptRequest_create0_ex OPENSSL_MANGLER(CMS_ReceiptRequest_create0_ex)
# endif
#else
# ifndef _CMS_ReceiptRequest_create0_ex
#  define _CMS_ReceiptRequest_create0_ex OPENSSL_MANGLER_ASM(CMS_ReceiptRequest_create0_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_ReceiptRequest_free
#  define CMS_ReceiptRequest_free OPENSSL_MANGLER(CMS_ReceiptRequest_free)
# endif
#else
# ifndef _CMS_ReceiptRequest_free
#  define _CMS_ReceiptRequest_free OPENSSL_MANGLER_ASM(CMS_ReceiptRequest_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_ReceiptRequest_get0_values
#  define CMS_ReceiptRequest_get0_values OPENSSL_MANGLER(CMS_ReceiptRequest_get0_values)
# endif
#else
# ifndef _CMS_ReceiptRequest_get0_values
#  define _CMS_ReceiptRequest_get0_values OPENSSL_MANGLER_ASM(CMS_ReceiptRequest_get0_values)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_ReceiptRequest_it
#  define CMS_ReceiptRequest_it OPENSSL_MANGLER(CMS_ReceiptRequest_it)
# endif
#else
# ifndef _CMS_ReceiptRequest_it
#  define _CMS_ReceiptRequest_it OPENSSL_MANGLER_ASM(CMS_ReceiptRequest_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_ReceiptRequest_new
#  define CMS_ReceiptRequest_new OPENSSL_MANGLER(CMS_ReceiptRequest_new)
# endif
#else
# ifndef _CMS_ReceiptRequest_new
#  define _CMS_ReceiptRequest_new OPENSSL_MANGLER_ASM(CMS_ReceiptRequest_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_Receipt_it
#  define CMS_Receipt_it OPENSSL_MANGLER(CMS_Receipt_it)
# endif
#else
# ifndef _CMS_Receipt_it
#  define _CMS_Receipt_it OPENSSL_MANGLER_ASM(CMS_Receipt_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientEncryptedKey_cert_cmp
#  define CMS_RecipientEncryptedKey_cert_cmp OPENSSL_MANGLER(CMS_RecipientEncryptedKey_cert_cmp)
# endif
#else
# ifndef _CMS_RecipientEncryptedKey_cert_cmp
#  define _CMS_RecipientEncryptedKey_cert_cmp OPENSSL_MANGLER_ASM(CMS_RecipientEncryptedKey_cert_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientEncryptedKey_get0_id
#  define CMS_RecipientEncryptedKey_get0_id OPENSSL_MANGLER(CMS_RecipientEncryptedKey_get0_id)
# endif
#else
# ifndef _CMS_RecipientEncryptedKey_get0_id
#  define _CMS_RecipientEncryptedKey_get0_id OPENSSL_MANGLER_ASM(CMS_RecipientEncryptedKey_get0_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientEncryptedKey_it
#  define CMS_RecipientEncryptedKey_it OPENSSL_MANGLER(CMS_RecipientEncryptedKey_it)
# endif
#else
# ifndef _CMS_RecipientEncryptedKey_it
#  define _CMS_RecipientEncryptedKey_it OPENSSL_MANGLER_ASM(CMS_RecipientEncryptedKey_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_decrypt
#  define CMS_RecipientInfo_decrypt OPENSSL_MANGLER(CMS_RecipientInfo_decrypt)
# endif
#else
# ifndef _CMS_RecipientInfo_decrypt
#  define _CMS_RecipientInfo_decrypt OPENSSL_MANGLER_ASM(CMS_RecipientInfo_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_encrypt
#  define CMS_RecipientInfo_encrypt OPENSSL_MANGLER(CMS_RecipientInfo_encrypt)
# endif
#else
# ifndef _CMS_RecipientInfo_encrypt
#  define _CMS_RecipientInfo_encrypt OPENSSL_MANGLER_ASM(CMS_RecipientInfo_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_get0_pkey_ctx
#  define CMS_RecipientInfo_get0_pkey_ctx OPENSSL_MANGLER(CMS_RecipientInfo_get0_pkey_ctx)
# endif
#else
# ifndef _CMS_RecipientInfo_get0_pkey_ctx
#  define _CMS_RecipientInfo_get0_pkey_ctx OPENSSL_MANGLER_ASM(CMS_RecipientInfo_get0_pkey_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_it
#  define CMS_RecipientInfo_it OPENSSL_MANGLER(CMS_RecipientInfo_it)
# endif
#else
# ifndef _CMS_RecipientInfo_it
#  define _CMS_RecipientInfo_it OPENSSL_MANGLER_ASM(CMS_RecipientInfo_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_kari_decrypt
#  define CMS_RecipientInfo_kari_decrypt OPENSSL_MANGLER(CMS_RecipientInfo_kari_decrypt)
# endif
#else
# ifndef _CMS_RecipientInfo_kari_decrypt
#  define _CMS_RecipientInfo_kari_decrypt OPENSSL_MANGLER_ASM(CMS_RecipientInfo_kari_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_kari_get0_alg
#  define CMS_RecipientInfo_kari_get0_alg OPENSSL_MANGLER(CMS_RecipientInfo_kari_get0_alg)
# endif
#else
# ifndef _CMS_RecipientInfo_kari_get0_alg
#  define _CMS_RecipientInfo_kari_get0_alg OPENSSL_MANGLER_ASM(CMS_RecipientInfo_kari_get0_alg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_kari_get0_ctx
#  define CMS_RecipientInfo_kari_get0_ctx OPENSSL_MANGLER(CMS_RecipientInfo_kari_get0_ctx)
# endif
#else
# ifndef _CMS_RecipientInfo_kari_get0_ctx
#  define _CMS_RecipientInfo_kari_get0_ctx OPENSSL_MANGLER_ASM(CMS_RecipientInfo_kari_get0_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_kari_get0_orig_id
#  define CMS_RecipientInfo_kari_get0_orig_id OPENSSL_MANGLER(CMS_RecipientInfo_kari_get0_orig_id)
# endif
#else
# ifndef _CMS_RecipientInfo_kari_get0_orig_id
#  define _CMS_RecipientInfo_kari_get0_orig_id OPENSSL_MANGLER_ASM(CMS_RecipientInfo_kari_get0_orig_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_kari_get0_reks
#  define CMS_RecipientInfo_kari_get0_reks OPENSSL_MANGLER(CMS_RecipientInfo_kari_get0_reks)
# endif
#else
# ifndef _CMS_RecipientInfo_kari_get0_reks
#  define _CMS_RecipientInfo_kari_get0_reks OPENSSL_MANGLER_ASM(CMS_RecipientInfo_kari_get0_reks)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_kari_orig_id_cmp
#  define CMS_RecipientInfo_kari_orig_id_cmp OPENSSL_MANGLER(CMS_RecipientInfo_kari_orig_id_cmp)
# endif
#else
# ifndef _CMS_RecipientInfo_kari_orig_id_cmp
#  define _CMS_RecipientInfo_kari_orig_id_cmp OPENSSL_MANGLER_ASM(CMS_RecipientInfo_kari_orig_id_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_kari_set0_pkey
#  define CMS_RecipientInfo_kari_set0_pkey OPENSSL_MANGLER(CMS_RecipientInfo_kari_set0_pkey)
# endif
#else
# ifndef _CMS_RecipientInfo_kari_set0_pkey
#  define _CMS_RecipientInfo_kari_set0_pkey OPENSSL_MANGLER_ASM(CMS_RecipientInfo_kari_set0_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_kari_set0_pkey_and_peer
#  define CMS_RecipientInfo_kari_set0_pkey_and_peer OPENSSL_MANGLER(CMS_RecipientInfo_kari_set0_pkey_and_peer)
# endif
#else
# ifndef _CMS_RecipientInfo_kari_set0_pkey_and_peer
#  define _CMS_RecipientInfo_kari_set0_pkey_and_peer OPENSSL_MANGLER_ASM(CMS_RecipientInfo_kari_set0_pkey_and_peer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_kekri_get0_id
#  define CMS_RecipientInfo_kekri_get0_id OPENSSL_MANGLER(CMS_RecipientInfo_kekri_get0_id)
# endif
#else
# ifndef _CMS_RecipientInfo_kekri_get0_id
#  define _CMS_RecipientInfo_kekri_get0_id OPENSSL_MANGLER_ASM(CMS_RecipientInfo_kekri_get0_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_kekri_id_cmp
#  define CMS_RecipientInfo_kekri_id_cmp OPENSSL_MANGLER(CMS_RecipientInfo_kekri_id_cmp)
# endif
#else
# ifndef _CMS_RecipientInfo_kekri_id_cmp
#  define _CMS_RecipientInfo_kekri_id_cmp OPENSSL_MANGLER_ASM(CMS_RecipientInfo_kekri_id_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_ktri_cert_cmp
#  define CMS_RecipientInfo_ktri_cert_cmp OPENSSL_MANGLER(CMS_RecipientInfo_ktri_cert_cmp)
# endif
#else
# ifndef _CMS_RecipientInfo_ktri_cert_cmp
#  define _CMS_RecipientInfo_ktri_cert_cmp OPENSSL_MANGLER_ASM(CMS_RecipientInfo_ktri_cert_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_ktri_get0_algs
#  define CMS_RecipientInfo_ktri_get0_algs OPENSSL_MANGLER(CMS_RecipientInfo_ktri_get0_algs)
# endif
#else
# ifndef _CMS_RecipientInfo_ktri_get0_algs
#  define _CMS_RecipientInfo_ktri_get0_algs OPENSSL_MANGLER_ASM(CMS_RecipientInfo_ktri_get0_algs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_ktri_get0_signer_id
#  define CMS_RecipientInfo_ktri_get0_signer_id OPENSSL_MANGLER(CMS_RecipientInfo_ktri_get0_signer_id)
# endif
#else
# ifndef _CMS_RecipientInfo_ktri_get0_signer_id
#  define _CMS_RecipientInfo_ktri_get0_signer_id OPENSSL_MANGLER_ASM(CMS_RecipientInfo_ktri_get0_signer_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_set0_key
#  define CMS_RecipientInfo_set0_key OPENSSL_MANGLER(CMS_RecipientInfo_set0_key)
# endif
#else
# ifndef _CMS_RecipientInfo_set0_key
#  define _CMS_RecipientInfo_set0_key OPENSSL_MANGLER_ASM(CMS_RecipientInfo_set0_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_set0_password
#  define CMS_RecipientInfo_set0_password OPENSSL_MANGLER(CMS_RecipientInfo_set0_password)
# endif
#else
# ifndef _CMS_RecipientInfo_set0_password
#  define _CMS_RecipientInfo_set0_password OPENSSL_MANGLER_ASM(CMS_RecipientInfo_set0_password)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_set0_pkey
#  define CMS_RecipientInfo_set0_pkey OPENSSL_MANGLER(CMS_RecipientInfo_set0_pkey)
# endif
#else
# ifndef _CMS_RecipientInfo_set0_pkey
#  define _CMS_RecipientInfo_set0_pkey OPENSSL_MANGLER_ASM(CMS_RecipientInfo_set0_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientInfo_type
#  define CMS_RecipientInfo_type OPENSSL_MANGLER(CMS_RecipientInfo_type)
# endif
#else
# ifndef _CMS_RecipientInfo_type
#  define _CMS_RecipientInfo_type OPENSSL_MANGLER_ASM(CMS_RecipientInfo_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RecipientKeyIdentifier_it
#  define CMS_RecipientKeyIdentifier_it OPENSSL_MANGLER(CMS_RecipientKeyIdentifier_it)
# endif
#else
# ifndef _CMS_RecipientKeyIdentifier_it
#  define _CMS_RecipientKeyIdentifier_it OPENSSL_MANGLER_ASM(CMS_RecipientKeyIdentifier_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_RevocationInfoChoice_it
#  define CMS_RevocationInfoChoice_it OPENSSL_MANGLER(CMS_RevocationInfoChoice_it)
# endif
#else
# ifndef _CMS_RevocationInfoChoice_it
#  define _CMS_RevocationInfoChoice_it OPENSSL_MANGLER_ASM(CMS_RevocationInfoChoice_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SharedInfo_encode
#  define CMS_SharedInfo_encode OPENSSL_MANGLER(CMS_SharedInfo_encode)
# endif
#else
# ifndef _CMS_SharedInfo_encode
#  define _CMS_SharedInfo_encode OPENSSL_MANGLER_ASM(CMS_SharedInfo_encode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignedData_init
#  define CMS_SignedData_init OPENSSL_MANGLER(CMS_SignedData_init)
# endif
#else
# ifndef _CMS_SignedData_init
#  define _CMS_SignedData_init OPENSSL_MANGLER_ASM(CMS_SignedData_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignedData_it
#  define CMS_SignedData_it OPENSSL_MANGLER(CMS_SignedData_it)
# endif
#else
# ifndef _CMS_SignedData_it
#  define _CMS_SignedData_it OPENSSL_MANGLER_ASM(CMS_SignedData_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignerInfo_cert_cmp
#  define CMS_SignerInfo_cert_cmp OPENSSL_MANGLER(CMS_SignerInfo_cert_cmp)
# endif
#else
# ifndef _CMS_SignerInfo_cert_cmp
#  define _CMS_SignerInfo_cert_cmp OPENSSL_MANGLER_ASM(CMS_SignerInfo_cert_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignerInfo_get0_algs
#  define CMS_SignerInfo_get0_algs OPENSSL_MANGLER(CMS_SignerInfo_get0_algs)
# endif
#else
# ifndef _CMS_SignerInfo_get0_algs
#  define _CMS_SignerInfo_get0_algs OPENSSL_MANGLER_ASM(CMS_SignerInfo_get0_algs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignerInfo_get0_md_ctx
#  define CMS_SignerInfo_get0_md_ctx OPENSSL_MANGLER(CMS_SignerInfo_get0_md_ctx)
# endif
#else
# ifndef _CMS_SignerInfo_get0_md_ctx
#  define _CMS_SignerInfo_get0_md_ctx OPENSSL_MANGLER_ASM(CMS_SignerInfo_get0_md_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignerInfo_get0_pkey_ctx
#  define CMS_SignerInfo_get0_pkey_ctx OPENSSL_MANGLER(CMS_SignerInfo_get0_pkey_ctx)
# endif
#else
# ifndef _CMS_SignerInfo_get0_pkey_ctx
#  define _CMS_SignerInfo_get0_pkey_ctx OPENSSL_MANGLER_ASM(CMS_SignerInfo_get0_pkey_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignerInfo_get0_signature
#  define CMS_SignerInfo_get0_signature OPENSSL_MANGLER(CMS_SignerInfo_get0_signature)
# endif
#else
# ifndef _CMS_SignerInfo_get0_signature
#  define _CMS_SignerInfo_get0_signature OPENSSL_MANGLER_ASM(CMS_SignerInfo_get0_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignerInfo_get0_signer_id
#  define CMS_SignerInfo_get0_signer_id OPENSSL_MANGLER(CMS_SignerInfo_get0_signer_id)
# endif
#else
# ifndef _CMS_SignerInfo_get0_signer_id
#  define _CMS_SignerInfo_get0_signer_id OPENSSL_MANGLER_ASM(CMS_SignerInfo_get0_signer_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignerInfo_it
#  define CMS_SignerInfo_it OPENSSL_MANGLER(CMS_SignerInfo_it)
# endif
#else
# ifndef _CMS_SignerInfo_it
#  define _CMS_SignerInfo_it OPENSSL_MANGLER_ASM(CMS_SignerInfo_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignerInfo_set1_signer_cert
#  define CMS_SignerInfo_set1_signer_cert OPENSSL_MANGLER(CMS_SignerInfo_set1_signer_cert)
# endif
#else
# ifndef _CMS_SignerInfo_set1_signer_cert
#  define _CMS_SignerInfo_set1_signer_cert OPENSSL_MANGLER_ASM(CMS_SignerInfo_set1_signer_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignerInfo_sign
#  define CMS_SignerInfo_sign OPENSSL_MANGLER(CMS_SignerInfo_sign)
# endif
#else
# ifndef _CMS_SignerInfo_sign
#  define _CMS_SignerInfo_sign OPENSSL_MANGLER_ASM(CMS_SignerInfo_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignerInfo_verify
#  define CMS_SignerInfo_verify OPENSSL_MANGLER(CMS_SignerInfo_verify)
# endif
#else
# ifndef _CMS_SignerInfo_verify
#  define _CMS_SignerInfo_verify OPENSSL_MANGLER_ASM(CMS_SignerInfo_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_SignerInfo_verify_content
#  define CMS_SignerInfo_verify_content OPENSSL_MANGLER(CMS_SignerInfo_verify_content)
# endif
#else
# ifndef _CMS_SignerInfo_verify_content
#  define _CMS_SignerInfo_verify_content OPENSSL_MANGLER_ASM(CMS_SignerInfo_verify_content)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add0_CertificateChoices
#  define CMS_add0_CertificateChoices OPENSSL_MANGLER(CMS_add0_CertificateChoices)
# endif
#else
# ifndef _CMS_add0_CertificateChoices
#  define _CMS_add0_CertificateChoices OPENSSL_MANGLER_ASM(CMS_add0_CertificateChoices)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add0_RevocationInfoChoice
#  define CMS_add0_RevocationInfoChoice OPENSSL_MANGLER(CMS_add0_RevocationInfoChoice)
# endif
#else
# ifndef _CMS_add0_RevocationInfoChoice
#  define _CMS_add0_RevocationInfoChoice OPENSSL_MANGLER_ASM(CMS_add0_RevocationInfoChoice)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add0_cert
#  define CMS_add0_cert OPENSSL_MANGLER(CMS_add0_cert)
# endif
#else
# ifndef _CMS_add0_cert
#  define _CMS_add0_cert OPENSSL_MANGLER_ASM(CMS_add0_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add0_crl
#  define CMS_add0_crl OPENSSL_MANGLER(CMS_add0_crl)
# endif
#else
# ifndef _CMS_add0_crl
#  define _CMS_add0_crl OPENSSL_MANGLER_ASM(CMS_add0_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add0_recipient_key
#  define CMS_add0_recipient_key OPENSSL_MANGLER(CMS_add0_recipient_key)
# endif
#else
# ifndef _CMS_add0_recipient_key
#  define _CMS_add0_recipient_key OPENSSL_MANGLER_ASM(CMS_add0_recipient_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add0_recipient_password
#  define CMS_add0_recipient_password OPENSSL_MANGLER(CMS_add0_recipient_password)
# endif
#else
# ifndef _CMS_add0_recipient_password
#  define _CMS_add0_recipient_password OPENSSL_MANGLER_ASM(CMS_add0_recipient_password)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add1_ReceiptRequest
#  define CMS_add1_ReceiptRequest OPENSSL_MANGLER(CMS_add1_ReceiptRequest)
# endif
#else
# ifndef _CMS_add1_ReceiptRequest
#  define _CMS_add1_ReceiptRequest OPENSSL_MANGLER_ASM(CMS_add1_ReceiptRequest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add1_cert
#  define CMS_add1_cert OPENSSL_MANGLER(CMS_add1_cert)
# endif
#else
# ifndef _CMS_add1_cert
#  define _CMS_add1_cert OPENSSL_MANGLER_ASM(CMS_add1_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add1_crl
#  define CMS_add1_crl OPENSSL_MANGLER(CMS_add1_crl)
# endif
#else
# ifndef _CMS_add1_crl
#  define _CMS_add1_crl OPENSSL_MANGLER_ASM(CMS_add1_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add1_recipient
#  define CMS_add1_recipient OPENSSL_MANGLER(CMS_add1_recipient)
# endif
#else
# ifndef _CMS_add1_recipient
#  define _CMS_add1_recipient OPENSSL_MANGLER_ASM(CMS_add1_recipient)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add1_recipient_cert
#  define CMS_add1_recipient_cert OPENSSL_MANGLER(CMS_add1_recipient_cert)
# endif
#else
# ifndef _CMS_add1_recipient_cert
#  define _CMS_add1_recipient_cert OPENSSL_MANGLER_ASM(CMS_add1_recipient_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add1_signer
#  define CMS_add1_signer OPENSSL_MANGLER(CMS_add1_signer)
# endif
#else
# ifndef _CMS_add1_signer
#  define _CMS_add1_signer OPENSSL_MANGLER_ASM(CMS_add1_signer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add_simple_smimecap
#  define CMS_add_simple_smimecap OPENSSL_MANGLER(CMS_add_simple_smimecap)
# endif
#else
# ifndef _CMS_add_simple_smimecap
#  define _CMS_add_simple_smimecap OPENSSL_MANGLER_ASM(CMS_add_simple_smimecap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add_smimecap
#  define CMS_add_smimecap OPENSSL_MANGLER(CMS_add_smimecap)
# endif
#else
# ifndef _CMS_add_smimecap
#  define _CMS_add_smimecap OPENSSL_MANGLER_ASM(CMS_add_smimecap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_add_standard_smimecap
#  define CMS_add_standard_smimecap OPENSSL_MANGLER(CMS_add_standard_smimecap)
# endif
#else
# ifndef _CMS_add_standard_smimecap
#  define _CMS_add_standard_smimecap OPENSSL_MANGLER_ASM(CMS_add_standard_smimecap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_compress
#  define CMS_compress OPENSSL_MANGLER(CMS_compress)
# endif
#else
# ifndef _CMS_compress
#  define _CMS_compress OPENSSL_MANGLER_ASM(CMS_compress)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_data
#  define CMS_data OPENSSL_MANGLER(CMS_data)
# endif
#else
# ifndef _CMS_data
#  define _CMS_data OPENSSL_MANGLER_ASM(CMS_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_dataFinal
#  define CMS_dataFinal OPENSSL_MANGLER(CMS_dataFinal)
# endif
#else
# ifndef _CMS_dataFinal
#  define _CMS_dataFinal OPENSSL_MANGLER_ASM(CMS_dataFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_dataInit
#  define CMS_dataInit OPENSSL_MANGLER(CMS_dataInit)
# endif
#else
# ifndef _CMS_dataInit
#  define _CMS_dataInit OPENSSL_MANGLER_ASM(CMS_dataInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_data_create
#  define CMS_data_create OPENSSL_MANGLER(CMS_data_create)
# endif
#else
# ifndef _CMS_data_create
#  define _CMS_data_create OPENSSL_MANGLER_ASM(CMS_data_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_data_create_ex
#  define CMS_data_create_ex OPENSSL_MANGLER(CMS_data_create_ex)
# endif
#else
# ifndef _CMS_data_create_ex
#  define _CMS_data_create_ex OPENSSL_MANGLER_ASM(CMS_data_create_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_decrypt
#  define CMS_decrypt OPENSSL_MANGLER(CMS_decrypt)
# endif
#else
# ifndef _CMS_decrypt
#  define _CMS_decrypt OPENSSL_MANGLER_ASM(CMS_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_decrypt_set1_key
#  define CMS_decrypt_set1_key OPENSSL_MANGLER(CMS_decrypt_set1_key)
# endif
#else
# ifndef _CMS_decrypt_set1_key
#  define _CMS_decrypt_set1_key OPENSSL_MANGLER_ASM(CMS_decrypt_set1_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_decrypt_set1_password
#  define CMS_decrypt_set1_password OPENSSL_MANGLER(CMS_decrypt_set1_password)
# endif
#else
# ifndef _CMS_decrypt_set1_password
#  define _CMS_decrypt_set1_password OPENSSL_MANGLER_ASM(CMS_decrypt_set1_password)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_decrypt_set1_pkey
#  define CMS_decrypt_set1_pkey OPENSSL_MANGLER(CMS_decrypt_set1_pkey)
# endif
#else
# ifndef _CMS_decrypt_set1_pkey
#  define _CMS_decrypt_set1_pkey OPENSSL_MANGLER_ASM(CMS_decrypt_set1_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_decrypt_set1_pkey_and_peer
#  define CMS_decrypt_set1_pkey_and_peer OPENSSL_MANGLER(CMS_decrypt_set1_pkey_and_peer)
# endif
#else
# ifndef _CMS_decrypt_set1_pkey_and_peer
#  define _CMS_decrypt_set1_pkey_and_peer OPENSSL_MANGLER_ASM(CMS_decrypt_set1_pkey_and_peer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_digest_create
#  define CMS_digest_create OPENSSL_MANGLER(CMS_digest_create)
# endif
#else
# ifndef _CMS_digest_create
#  define _CMS_digest_create OPENSSL_MANGLER_ASM(CMS_digest_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_digest_create_ex
#  define CMS_digest_create_ex OPENSSL_MANGLER(CMS_digest_create_ex)
# endif
#else
# ifndef _CMS_digest_create_ex
#  define _CMS_digest_create_ex OPENSSL_MANGLER_ASM(CMS_digest_create_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_digest_verify
#  define CMS_digest_verify OPENSSL_MANGLER(CMS_digest_verify)
# endif
#else
# ifndef _CMS_digest_verify
#  define _CMS_digest_verify OPENSSL_MANGLER_ASM(CMS_digest_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_encrypt
#  define CMS_encrypt OPENSSL_MANGLER(CMS_encrypt)
# endif
#else
# ifndef _CMS_encrypt
#  define _CMS_encrypt OPENSSL_MANGLER_ASM(CMS_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_encrypt_ex
#  define CMS_encrypt_ex OPENSSL_MANGLER(CMS_encrypt_ex)
# endif
#else
# ifndef _CMS_encrypt_ex
#  define _CMS_encrypt_ex OPENSSL_MANGLER_ASM(CMS_encrypt_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_final
#  define CMS_final OPENSSL_MANGLER(CMS_final)
# endif
#else
# ifndef _CMS_final
#  define _CMS_final OPENSSL_MANGLER_ASM(CMS_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_get0_RecipientInfos
#  define CMS_get0_RecipientInfos OPENSSL_MANGLER(CMS_get0_RecipientInfos)
# endif
#else
# ifndef _CMS_get0_RecipientInfos
#  define _CMS_get0_RecipientInfos OPENSSL_MANGLER_ASM(CMS_get0_RecipientInfos)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_get0_SignerInfos
#  define CMS_get0_SignerInfos OPENSSL_MANGLER(CMS_get0_SignerInfos)
# endif
#else
# ifndef _CMS_get0_SignerInfos
#  define _CMS_get0_SignerInfos OPENSSL_MANGLER_ASM(CMS_get0_SignerInfos)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_get0_content
#  define CMS_get0_content OPENSSL_MANGLER(CMS_get0_content)
# endif
#else
# ifndef _CMS_get0_content
#  define _CMS_get0_content OPENSSL_MANGLER_ASM(CMS_get0_content)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_get0_eContentType
#  define CMS_get0_eContentType OPENSSL_MANGLER(CMS_get0_eContentType)
# endif
#else
# ifndef _CMS_get0_eContentType
#  define _CMS_get0_eContentType OPENSSL_MANGLER_ASM(CMS_get0_eContentType)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_get0_signers
#  define CMS_get0_signers OPENSSL_MANGLER(CMS_get0_signers)
# endif
#else
# ifndef _CMS_get0_signers
#  define _CMS_get0_signers OPENSSL_MANGLER_ASM(CMS_get0_signers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_get0_type
#  define CMS_get0_type OPENSSL_MANGLER(CMS_get0_type)
# endif
#else
# ifndef _CMS_get0_type
#  define _CMS_get0_type OPENSSL_MANGLER_ASM(CMS_get0_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_get1_ReceiptRequest
#  define CMS_get1_ReceiptRequest OPENSSL_MANGLER(CMS_get1_ReceiptRequest)
# endif
#else
# ifndef _CMS_get1_ReceiptRequest
#  define _CMS_get1_ReceiptRequest OPENSSL_MANGLER_ASM(CMS_get1_ReceiptRequest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_get1_certs
#  define CMS_get1_certs OPENSSL_MANGLER(CMS_get1_certs)
# endif
#else
# ifndef _CMS_get1_certs
#  define _CMS_get1_certs OPENSSL_MANGLER_ASM(CMS_get1_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_get1_crls
#  define CMS_get1_crls OPENSSL_MANGLER(CMS_get1_crls)
# endif
#else
# ifndef _CMS_get1_crls
#  define _CMS_get1_crls OPENSSL_MANGLER_ASM(CMS_get1_crls)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_is_detached
#  define CMS_is_detached OPENSSL_MANGLER(CMS_is_detached)
# endif
#else
# ifndef _CMS_is_detached
#  define _CMS_is_detached OPENSSL_MANGLER_ASM(CMS_is_detached)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_set1_eContentType
#  define CMS_set1_eContentType OPENSSL_MANGLER(CMS_set1_eContentType)
# endif
#else
# ifndef _CMS_set1_eContentType
#  define _CMS_set1_eContentType OPENSSL_MANGLER_ASM(CMS_set1_eContentType)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_set1_signers_certs
#  define CMS_set1_signers_certs OPENSSL_MANGLER(CMS_set1_signers_certs)
# endif
#else
# ifndef _CMS_set1_signers_certs
#  define _CMS_set1_signers_certs OPENSSL_MANGLER_ASM(CMS_set1_signers_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_set_detached
#  define CMS_set_detached OPENSSL_MANGLER(CMS_set_detached)
# endif
#else
# ifndef _CMS_set_detached
#  define _CMS_set_detached OPENSSL_MANGLER_ASM(CMS_set_detached)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_sign
#  define CMS_sign OPENSSL_MANGLER(CMS_sign)
# endif
#else
# ifndef _CMS_sign
#  define _CMS_sign OPENSSL_MANGLER_ASM(CMS_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_sign_ex
#  define CMS_sign_ex OPENSSL_MANGLER(CMS_sign_ex)
# endif
#else
# ifndef _CMS_sign_ex
#  define _CMS_sign_ex OPENSSL_MANGLER_ASM(CMS_sign_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_sign_receipt
#  define CMS_sign_receipt OPENSSL_MANGLER(CMS_sign_receipt)
# endif
#else
# ifndef _CMS_sign_receipt
#  define _CMS_sign_receipt OPENSSL_MANGLER_ASM(CMS_sign_receipt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_signed_add1_attr
#  define CMS_signed_add1_attr OPENSSL_MANGLER(CMS_signed_add1_attr)
# endif
#else
# ifndef _CMS_signed_add1_attr
#  define _CMS_signed_add1_attr OPENSSL_MANGLER_ASM(CMS_signed_add1_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_signed_add1_attr_by_NID
#  define CMS_signed_add1_attr_by_NID OPENSSL_MANGLER(CMS_signed_add1_attr_by_NID)
# endif
#else
# ifndef _CMS_signed_add1_attr_by_NID
#  define _CMS_signed_add1_attr_by_NID OPENSSL_MANGLER_ASM(CMS_signed_add1_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_signed_add1_attr_by_OBJ
#  define CMS_signed_add1_attr_by_OBJ OPENSSL_MANGLER(CMS_signed_add1_attr_by_OBJ)
# endif
#else
# ifndef _CMS_signed_add1_attr_by_OBJ
#  define _CMS_signed_add1_attr_by_OBJ OPENSSL_MANGLER_ASM(CMS_signed_add1_attr_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_signed_add1_attr_by_txt
#  define CMS_signed_add1_attr_by_txt OPENSSL_MANGLER(CMS_signed_add1_attr_by_txt)
# endif
#else
# ifndef _CMS_signed_add1_attr_by_txt
#  define _CMS_signed_add1_attr_by_txt OPENSSL_MANGLER_ASM(CMS_signed_add1_attr_by_txt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_signed_delete_attr
#  define CMS_signed_delete_attr OPENSSL_MANGLER(CMS_signed_delete_attr)
# endif
#else
# ifndef _CMS_signed_delete_attr
#  define _CMS_signed_delete_attr OPENSSL_MANGLER_ASM(CMS_signed_delete_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_signed_get0_data_by_OBJ
#  define CMS_signed_get0_data_by_OBJ OPENSSL_MANGLER(CMS_signed_get0_data_by_OBJ)
# endif
#else
# ifndef _CMS_signed_get0_data_by_OBJ
#  define _CMS_signed_get0_data_by_OBJ OPENSSL_MANGLER_ASM(CMS_signed_get0_data_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_signed_get_attr
#  define CMS_signed_get_attr OPENSSL_MANGLER(CMS_signed_get_attr)
# endif
#else
# ifndef _CMS_signed_get_attr
#  define _CMS_signed_get_attr OPENSSL_MANGLER_ASM(CMS_signed_get_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_signed_get_attr_by_NID
#  define CMS_signed_get_attr_by_NID OPENSSL_MANGLER(CMS_signed_get_attr_by_NID)
# endif
#else
# ifndef _CMS_signed_get_attr_by_NID
#  define _CMS_signed_get_attr_by_NID OPENSSL_MANGLER_ASM(CMS_signed_get_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_signed_get_attr_by_OBJ
#  define CMS_signed_get_attr_by_OBJ OPENSSL_MANGLER(CMS_signed_get_attr_by_OBJ)
# endif
#else
# ifndef _CMS_signed_get_attr_by_OBJ
#  define _CMS_signed_get_attr_by_OBJ OPENSSL_MANGLER_ASM(CMS_signed_get_attr_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_signed_get_attr_count
#  define CMS_signed_get_attr_count OPENSSL_MANGLER(CMS_signed_get_attr_count)
# endif
#else
# ifndef _CMS_signed_get_attr_count
#  define _CMS_signed_get_attr_count OPENSSL_MANGLER_ASM(CMS_signed_get_attr_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_stream
#  define CMS_stream OPENSSL_MANGLER(CMS_stream)
# endif
#else
# ifndef _CMS_stream
#  define _CMS_stream OPENSSL_MANGLER_ASM(CMS_stream)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_uncompress
#  define CMS_uncompress OPENSSL_MANGLER(CMS_uncompress)
# endif
#else
# ifndef _CMS_uncompress
#  define _CMS_uncompress OPENSSL_MANGLER_ASM(CMS_uncompress)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_unsigned_add1_attr
#  define CMS_unsigned_add1_attr OPENSSL_MANGLER(CMS_unsigned_add1_attr)
# endif
#else
# ifndef _CMS_unsigned_add1_attr
#  define _CMS_unsigned_add1_attr OPENSSL_MANGLER_ASM(CMS_unsigned_add1_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_unsigned_add1_attr_by_NID
#  define CMS_unsigned_add1_attr_by_NID OPENSSL_MANGLER(CMS_unsigned_add1_attr_by_NID)
# endif
#else
# ifndef _CMS_unsigned_add1_attr_by_NID
#  define _CMS_unsigned_add1_attr_by_NID OPENSSL_MANGLER_ASM(CMS_unsigned_add1_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_unsigned_add1_attr_by_OBJ
#  define CMS_unsigned_add1_attr_by_OBJ OPENSSL_MANGLER(CMS_unsigned_add1_attr_by_OBJ)
# endif
#else
# ifndef _CMS_unsigned_add1_attr_by_OBJ
#  define _CMS_unsigned_add1_attr_by_OBJ OPENSSL_MANGLER_ASM(CMS_unsigned_add1_attr_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_unsigned_add1_attr_by_txt
#  define CMS_unsigned_add1_attr_by_txt OPENSSL_MANGLER(CMS_unsigned_add1_attr_by_txt)
# endif
#else
# ifndef _CMS_unsigned_add1_attr_by_txt
#  define _CMS_unsigned_add1_attr_by_txt OPENSSL_MANGLER_ASM(CMS_unsigned_add1_attr_by_txt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_unsigned_delete_attr
#  define CMS_unsigned_delete_attr OPENSSL_MANGLER(CMS_unsigned_delete_attr)
# endif
#else
# ifndef _CMS_unsigned_delete_attr
#  define _CMS_unsigned_delete_attr OPENSSL_MANGLER_ASM(CMS_unsigned_delete_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_unsigned_get0_data_by_OBJ
#  define CMS_unsigned_get0_data_by_OBJ OPENSSL_MANGLER(CMS_unsigned_get0_data_by_OBJ)
# endif
#else
# ifndef _CMS_unsigned_get0_data_by_OBJ
#  define _CMS_unsigned_get0_data_by_OBJ OPENSSL_MANGLER_ASM(CMS_unsigned_get0_data_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_unsigned_get_attr
#  define CMS_unsigned_get_attr OPENSSL_MANGLER(CMS_unsigned_get_attr)
# endif
#else
# ifndef _CMS_unsigned_get_attr
#  define _CMS_unsigned_get_attr OPENSSL_MANGLER_ASM(CMS_unsigned_get_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_unsigned_get_attr_by_NID
#  define CMS_unsigned_get_attr_by_NID OPENSSL_MANGLER(CMS_unsigned_get_attr_by_NID)
# endif
#else
# ifndef _CMS_unsigned_get_attr_by_NID
#  define _CMS_unsigned_get_attr_by_NID OPENSSL_MANGLER_ASM(CMS_unsigned_get_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_unsigned_get_attr_by_OBJ
#  define CMS_unsigned_get_attr_by_OBJ OPENSSL_MANGLER(CMS_unsigned_get_attr_by_OBJ)
# endif
#else
# ifndef _CMS_unsigned_get_attr_by_OBJ
#  define _CMS_unsigned_get_attr_by_OBJ OPENSSL_MANGLER_ASM(CMS_unsigned_get_attr_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_unsigned_get_attr_count
#  define CMS_unsigned_get_attr_count OPENSSL_MANGLER(CMS_unsigned_get_attr_count)
# endif
#else
# ifndef _CMS_unsigned_get_attr_count
#  define _CMS_unsigned_get_attr_count OPENSSL_MANGLER_ASM(CMS_unsigned_get_attr_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_verify
#  define CMS_verify OPENSSL_MANGLER(CMS_verify)
# endif
#else
# ifndef _CMS_verify
#  define _CMS_verify OPENSSL_MANGLER_ASM(CMS_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CMS_verify_receipt
#  define CMS_verify_receipt OPENSSL_MANGLER(CMS_verify_receipt)
# endif
#else
# ifndef _CMS_verify_receipt
#  define _CMS_verify_receipt OPENSSL_MANGLER_ASM(CMS_verify_receipt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef COMP_CTX_free
#  define COMP_CTX_free OPENSSL_MANGLER(COMP_CTX_free)
# endif
#else
# ifndef _COMP_CTX_free
#  define _COMP_CTX_free OPENSSL_MANGLER_ASM(COMP_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef COMP_CTX_get_method
#  define COMP_CTX_get_method OPENSSL_MANGLER(COMP_CTX_get_method)
# endif
#else
# ifndef _COMP_CTX_get_method
#  define _COMP_CTX_get_method OPENSSL_MANGLER_ASM(COMP_CTX_get_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef COMP_CTX_get_type
#  define COMP_CTX_get_type OPENSSL_MANGLER(COMP_CTX_get_type)
# endif
#else
# ifndef _COMP_CTX_get_type
#  define _COMP_CTX_get_type OPENSSL_MANGLER_ASM(COMP_CTX_get_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef COMP_CTX_new
#  define COMP_CTX_new OPENSSL_MANGLER(COMP_CTX_new)
# endif
#else
# ifndef _COMP_CTX_new
#  define _COMP_CTX_new OPENSSL_MANGLER_ASM(COMP_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef COMP_compress_block
#  define COMP_compress_block OPENSSL_MANGLER(COMP_compress_block)
# endif
#else
# ifndef _COMP_compress_block
#  define _COMP_compress_block OPENSSL_MANGLER_ASM(COMP_compress_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef COMP_expand_block
#  define COMP_expand_block OPENSSL_MANGLER(COMP_expand_block)
# endif
#else
# ifndef _COMP_expand_block
#  define _COMP_expand_block OPENSSL_MANGLER_ASM(COMP_expand_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef COMP_get_name
#  define COMP_get_name OPENSSL_MANGLER(COMP_get_name)
# endif
#else
# ifndef _COMP_get_name
#  define _COMP_get_name OPENSSL_MANGLER_ASM(COMP_get_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef COMP_get_type
#  define COMP_get_type OPENSSL_MANGLER(COMP_get_type)
# endif
#else
# ifndef _COMP_get_type
#  define _COMP_get_type OPENSSL_MANGLER_ASM(COMP_get_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef COMP_zlib
#  define COMP_zlib OPENSSL_MANGLER(COMP_zlib)
# endif
#else
# ifndef _COMP_zlib
#  define _COMP_zlib OPENSSL_MANGLER_ASM(COMP_zlib)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_dump_bio
#  define CONF_dump_bio OPENSSL_MANGLER(CONF_dump_bio)
# endif
#else
# ifndef _CONF_dump_bio
#  define _CONF_dump_bio OPENSSL_MANGLER_ASM(CONF_dump_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_dump_fp
#  define CONF_dump_fp OPENSSL_MANGLER(CONF_dump_fp)
# endif
#else
# ifndef _CONF_dump_fp
#  define _CONF_dump_fp OPENSSL_MANGLER_ASM(CONF_dump_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_free
#  define CONF_free OPENSSL_MANGLER(CONF_free)
# endif
#else
# ifndef _CONF_free
#  define _CONF_free OPENSSL_MANGLER_ASM(CONF_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_get1_default_config_file
#  define CONF_get1_default_config_file OPENSSL_MANGLER(CONF_get1_default_config_file)
# endif
#else
# ifndef _CONF_get1_default_config_file
#  define _CONF_get1_default_config_file OPENSSL_MANGLER_ASM(CONF_get1_default_config_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_get_number
#  define CONF_get_number OPENSSL_MANGLER(CONF_get_number)
# endif
#else
# ifndef _CONF_get_number
#  define _CONF_get_number OPENSSL_MANGLER_ASM(CONF_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_get_section
#  define CONF_get_section OPENSSL_MANGLER(CONF_get_section)
# endif
#else
# ifndef _CONF_get_section
#  define _CONF_get_section OPENSSL_MANGLER_ASM(CONF_get_section)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_get_string
#  define CONF_get_string OPENSSL_MANGLER(CONF_get_string)
# endif
#else
# ifndef _CONF_get_string
#  define _CONF_get_string OPENSSL_MANGLER_ASM(CONF_get_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_imodule_get_flags
#  define CONF_imodule_get_flags OPENSSL_MANGLER(CONF_imodule_get_flags)
# endif
#else
# ifndef _CONF_imodule_get_flags
#  define _CONF_imodule_get_flags OPENSSL_MANGLER_ASM(CONF_imodule_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_imodule_get_module
#  define CONF_imodule_get_module OPENSSL_MANGLER(CONF_imodule_get_module)
# endif
#else
# ifndef _CONF_imodule_get_module
#  define _CONF_imodule_get_module OPENSSL_MANGLER_ASM(CONF_imodule_get_module)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_imodule_get_name
#  define CONF_imodule_get_name OPENSSL_MANGLER(CONF_imodule_get_name)
# endif
#else
# ifndef _CONF_imodule_get_name
#  define _CONF_imodule_get_name OPENSSL_MANGLER_ASM(CONF_imodule_get_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_imodule_get_usr_data
#  define CONF_imodule_get_usr_data OPENSSL_MANGLER(CONF_imodule_get_usr_data)
# endif
#else
# ifndef _CONF_imodule_get_usr_data
#  define _CONF_imodule_get_usr_data OPENSSL_MANGLER_ASM(CONF_imodule_get_usr_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_imodule_get_value
#  define CONF_imodule_get_value OPENSSL_MANGLER(CONF_imodule_get_value)
# endif
#else
# ifndef _CONF_imodule_get_value
#  define _CONF_imodule_get_value OPENSSL_MANGLER_ASM(CONF_imodule_get_value)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_imodule_set_flags
#  define CONF_imodule_set_flags OPENSSL_MANGLER(CONF_imodule_set_flags)
# endif
#else
# ifndef _CONF_imodule_set_flags
#  define _CONF_imodule_set_flags OPENSSL_MANGLER_ASM(CONF_imodule_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_imodule_set_usr_data
#  define CONF_imodule_set_usr_data OPENSSL_MANGLER(CONF_imodule_set_usr_data)
# endif
#else
# ifndef _CONF_imodule_set_usr_data
#  define _CONF_imodule_set_usr_data OPENSSL_MANGLER_ASM(CONF_imodule_set_usr_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_load
#  define CONF_load OPENSSL_MANGLER(CONF_load)
# endif
#else
# ifndef _CONF_load
#  define _CONF_load OPENSSL_MANGLER_ASM(CONF_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_load_bio
#  define CONF_load_bio OPENSSL_MANGLER(CONF_load_bio)
# endif
#else
# ifndef _CONF_load_bio
#  define _CONF_load_bio OPENSSL_MANGLER_ASM(CONF_load_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_load_fp
#  define CONF_load_fp OPENSSL_MANGLER(CONF_load_fp)
# endif
#else
# ifndef _CONF_load_fp
#  define _CONF_load_fp OPENSSL_MANGLER_ASM(CONF_load_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_module_add
#  define CONF_module_add OPENSSL_MANGLER(CONF_module_add)
# endif
#else
# ifndef _CONF_module_add
#  define _CONF_module_add OPENSSL_MANGLER_ASM(CONF_module_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_module_get_usr_data
#  define CONF_module_get_usr_data OPENSSL_MANGLER(CONF_module_get_usr_data)
# endif
#else
# ifndef _CONF_module_get_usr_data
#  define _CONF_module_get_usr_data OPENSSL_MANGLER_ASM(CONF_module_get_usr_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_module_set_usr_data
#  define CONF_module_set_usr_data OPENSSL_MANGLER(CONF_module_set_usr_data)
# endif
#else
# ifndef _CONF_module_set_usr_data
#  define _CONF_module_set_usr_data OPENSSL_MANGLER_ASM(CONF_module_set_usr_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_modules_finish
#  define CONF_modules_finish OPENSSL_MANGLER(CONF_modules_finish)
# endif
#else
# ifndef _CONF_modules_finish
#  define _CONF_modules_finish OPENSSL_MANGLER_ASM(CONF_modules_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_modules_load
#  define CONF_modules_load OPENSSL_MANGLER(CONF_modules_load)
# endif
#else
# ifndef _CONF_modules_load
#  define _CONF_modules_load OPENSSL_MANGLER_ASM(CONF_modules_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_modules_load_file
#  define CONF_modules_load_file OPENSSL_MANGLER(CONF_modules_load_file)
# endif
#else
# ifndef _CONF_modules_load_file
#  define _CONF_modules_load_file OPENSSL_MANGLER_ASM(CONF_modules_load_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_modules_load_file_ex
#  define CONF_modules_load_file_ex OPENSSL_MANGLER(CONF_modules_load_file_ex)
# endif
#else
# ifndef _CONF_modules_load_file_ex
#  define _CONF_modules_load_file_ex OPENSSL_MANGLER_ASM(CONF_modules_load_file_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_modules_unload
#  define CONF_modules_unload OPENSSL_MANGLER(CONF_modules_unload)
# endif
#else
# ifndef _CONF_modules_unload
#  define _CONF_modules_unload OPENSSL_MANGLER_ASM(CONF_modules_unload)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_parse_list
#  define CONF_parse_list OPENSSL_MANGLER(CONF_parse_list)
# endif
#else
# ifndef _CONF_parse_list
#  define _CONF_parse_list OPENSSL_MANGLER_ASM(CONF_parse_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_set_default_method
#  define CONF_set_default_method OPENSSL_MANGLER(CONF_set_default_method)
# endif
#else
# ifndef _CONF_set_default_method
#  define _CONF_set_default_method OPENSSL_MANGLER_ASM(CONF_set_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CONF_set_nconf
#  define CONF_set_nconf OPENSSL_MANGLER(CONF_set_nconf)
# endif
#else
# ifndef _CONF_set_nconf
#  define _CONF_set_nconf OPENSSL_MANGLER_ASM(CONF_set_nconf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRL_DIST_POINTS_free
#  define CRL_DIST_POINTS_free OPENSSL_MANGLER(CRL_DIST_POINTS_free)
# endif
#else
# ifndef _CRL_DIST_POINTS_free
#  define _CRL_DIST_POINTS_free OPENSSL_MANGLER_ASM(CRL_DIST_POINTS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRL_DIST_POINTS_it
#  define CRL_DIST_POINTS_it OPENSSL_MANGLER(CRL_DIST_POINTS_it)
# endif
#else
# ifndef _CRL_DIST_POINTS_it
#  define _CRL_DIST_POINTS_it OPENSSL_MANGLER_ASM(CRL_DIST_POINTS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRL_DIST_POINTS_new
#  define CRL_DIST_POINTS_new OPENSSL_MANGLER(CRL_DIST_POINTS_new)
# endif
#else
# ifndef _CRL_DIST_POINTS_new
#  define _CRL_DIST_POINTS_new OPENSSL_MANGLER_ASM(CRL_DIST_POINTS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_128_unwrap
#  define CRYPTO_128_unwrap OPENSSL_MANGLER(CRYPTO_128_unwrap)
# endif
#else
# ifndef _CRYPTO_128_unwrap
#  define _CRYPTO_128_unwrap OPENSSL_MANGLER_ASM(CRYPTO_128_unwrap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_128_unwrap_pad
#  define CRYPTO_128_unwrap_pad OPENSSL_MANGLER(CRYPTO_128_unwrap_pad)
# endif
#else
# ifndef _CRYPTO_128_unwrap_pad
#  define _CRYPTO_128_unwrap_pad OPENSSL_MANGLER_ASM(CRYPTO_128_unwrap_pad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_128_wrap
#  define CRYPTO_128_wrap OPENSSL_MANGLER(CRYPTO_128_wrap)
# endif
#else
# ifndef _CRYPTO_128_wrap
#  define _CRYPTO_128_wrap OPENSSL_MANGLER_ASM(CRYPTO_128_wrap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_128_wrap_pad
#  define CRYPTO_128_wrap_pad OPENSSL_MANGLER(CRYPTO_128_wrap_pad)
# endif
#else
# ifndef _CRYPTO_128_wrap_pad
#  define _CRYPTO_128_wrap_pad OPENSSL_MANGLER_ASM(CRYPTO_128_wrap_pad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_THREAD_cleanup_local
#  define CRYPTO_THREAD_cleanup_local OPENSSL_MANGLER(CRYPTO_THREAD_cleanup_local)
# endif
#else
# ifndef _CRYPTO_THREAD_cleanup_local
#  define _CRYPTO_THREAD_cleanup_local OPENSSL_MANGLER_ASM(CRYPTO_THREAD_cleanup_local)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_THREAD_compare_id
#  define CRYPTO_THREAD_compare_id OPENSSL_MANGLER(CRYPTO_THREAD_compare_id)
# endif
#else
# ifndef _CRYPTO_THREAD_compare_id
#  define _CRYPTO_THREAD_compare_id OPENSSL_MANGLER_ASM(CRYPTO_THREAD_compare_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_THREAD_get_current_id
#  define CRYPTO_THREAD_get_current_id OPENSSL_MANGLER(CRYPTO_THREAD_get_current_id)
# endif
#else
# ifndef _CRYPTO_THREAD_get_current_id
#  define _CRYPTO_THREAD_get_current_id OPENSSL_MANGLER_ASM(CRYPTO_THREAD_get_current_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_THREAD_get_local
#  define CRYPTO_THREAD_get_local OPENSSL_MANGLER(CRYPTO_THREAD_get_local)
# endif
#else
# ifndef _CRYPTO_THREAD_get_local
#  define _CRYPTO_THREAD_get_local OPENSSL_MANGLER_ASM(CRYPTO_THREAD_get_local)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_THREAD_init_local
#  define CRYPTO_THREAD_init_local OPENSSL_MANGLER(CRYPTO_THREAD_init_local)
# endif
#else
# ifndef _CRYPTO_THREAD_init_local
#  define _CRYPTO_THREAD_init_local OPENSSL_MANGLER_ASM(CRYPTO_THREAD_init_local)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_THREAD_lock_free
#  define CRYPTO_THREAD_lock_free OPENSSL_MANGLER(CRYPTO_THREAD_lock_free)
# endif
#else
# ifndef _CRYPTO_THREAD_lock_free
#  define _CRYPTO_THREAD_lock_free OPENSSL_MANGLER_ASM(CRYPTO_THREAD_lock_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_THREAD_lock_new
#  define CRYPTO_THREAD_lock_new OPENSSL_MANGLER(CRYPTO_THREAD_lock_new)
# endif
#else
# ifndef _CRYPTO_THREAD_lock_new
#  define _CRYPTO_THREAD_lock_new OPENSSL_MANGLER_ASM(CRYPTO_THREAD_lock_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_THREAD_read_lock
#  define CRYPTO_THREAD_read_lock OPENSSL_MANGLER(CRYPTO_THREAD_read_lock)
# endif
#else
# ifndef _CRYPTO_THREAD_read_lock
#  define _CRYPTO_THREAD_read_lock OPENSSL_MANGLER_ASM(CRYPTO_THREAD_read_lock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_THREAD_set_local
#  define CRYPTO_THREAD_set_local OPENSSL_MANGLER(CRYPTO_THREAD_set_local)
# endif
#else
# ifndef _CRYPTO_THREAD_set_local
#  define _CRYPTO_THREAD_set_local OPENSSL_MANGLER_ASM(CRYPTO_THREAD_set_local)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_THREAD_unlock
#  define CRYPTO_THREAD_unlock OPENSSL_MANGLER(CRYPTO_THREAD_unlock)
# endif
#else
# ifndef _CRYPTO_THREAD_unlock
#  define _CRYPTO_THREAD_unlock OPENSSL_MANGLER_ASM(CRYPTO_THREAD_unlock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_THREAD_write_lock
#  define CRYPTO_THREAD_write_lock OPENSSL_MANGLER(CRYPTO_THREAD_write_lock)
# endif
#else
# ifndef _CRYPTO_THREAD_write_lock
#  define _CRYPTO_THREAD_write_lock OPENSSL_MANGLER_ASM(CRYPTO_THREAD_write_lock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_alloc_ex_data
#  define CRYPTO_alloc_ex_data OPENSSL_MANGLER(CRYPTO_alloc_ex_data)
# endif
#else
# ifndef _CRYPTO_alloc_ex_data
#  define _CRYPTO_alloc_ex_data OPENSSL_MANGLER_ASM(CRYPTO_alloc_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_atomic_add
#  define CRYPTO_atomic_add OPENSSL_MANGLER(CRYPTO_atomic_add)
# endif
#else
# ifndef _CRYPTO_atomic_add
#  define _CRYPTO_atomic_add OPENSSL_MANGLER_ASM(CRYPTO_atomic_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_atomic_load
#  define CRYPTO_atomic_load OPENSSL_MANGLER(CRYPTO_atomic_load)
# endif
#else
# ifndef _CRYPTO_atomic_load
#  define _CRYPTO_atomic_load OPENSSL_MANGLER_ASM(CRYPTO_atomic_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_atomic_or
#  define CRYPTO_atomic_or OPENSSL_MANGLER(CRYPTO_atomic_or)
# endif
#else
# ifndef _CRYPTO_atomic_or
#  define _CRYPTO_atomic_or OPENSSL_MANGLER_ASM(CRYPTO_atomic_or)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_cbc128_decrypt
#  define CRYPTO_cbc128_decrypt OPENSSL_MANGLER(CRYPTO_cbc128_decrypt)
# endif
#else
# ifndef _CRYPTO_cbc128_decrypt
#  define _CRYPTO_cbc128_decrypt OPENSSL_MANGLER_ASM(CRYPTO_cbc128_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_cbc128_encrypt
#  define CRYPTO_cbc128_encrypt OPENSSL_MANGLER(CRYPTO_cbc128_encrypt)
# endif
#else
# ifndef _CRYPTO_cbc128_encrypt
#  define _CRYPTO_cbc128_encrypt OPENSSL_MANGLER_ASM(CRYPTO_cbc128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ccm128_aad
#  define CRYPTO_ccm128_aad OPENSSL_MANGLER(CRYPTO_ccm128_aad)
# endif
#else
# ifndef _CRYPTO_ccm128_aad
#  define _CRYPTO_ccm128_aad OPENSSL_MANGLER_ASM(CRYPTO_ccm128_aad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ccm128_decrypt
#  define CRYPTO_ccm128_decrypt OPENSSL_MANGLER(CRYPTO_ccm128_decrypt)
# endif
#else
# ifndef _CRYPTO_ccm128_decrypt
#  define _CRYPTO_ccm128_decrypt OPENSSL_MANGLER_ASM(CRYPTO_ccm128_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ccm128_decrypt_ccm64
#  define CRYPTO_ccm128_decrypt_ccm64 OPENSSL_MANGLER(CRYPTO_ccm128_decrypt_ccm64)
# endif
#else
# ifndef _CRYPTO_ccm128_decrypt_ccm64
#  define _CRYPTO_ccm128_decrypt_ccm64 OPENSSL_MANGLER_ASM(CRYPTO_ccm128_decrypt_ccm64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ccm128_encrypt
#  define CRYPTO_ccm128_encrypt OPENSSL_MANGLER(CRYPTO_ccm128_encrypt)
# endif
#else
# ifndef _CRYPTO_ccm128_encrypt
#  define _CRYPTO_ccm128_encrypt OPENSSL_MANGLER_ASM(CRYPTO_ccm128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ccm128_encrypt_ccm64
#  define CRYPTO_ccm128_encrypt_ccm64 OPENSSL_MANGLER(CRYPTO_ccm128_encrypt_ccm64)
# endif
#else
# ifndef _CRYPTO_ccm128_encrypt_ccm64
#  define _CRYPTO_ccm128_encrypt_ccm64 OPENSSL_MANGLER_ASM(CRYPTO_ccm128_encrypt_ccm64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ccm128_init
#  define CRYPTO_ccm128_init OPENSSL_MANGLER(CRYPTO_ccm128_init)
# endif
#else
# ifndef _CRYPTO_ccm128_init
#  define _CRYPTO_ccm128_init OPENSSL_MANGLER_ASM(CRYPTO_ccm128_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ccm128_setiv
#  define CRYPTO_ccm128_setiv OPENSSL_MANGLER(CRYPTO_ccm128_setiv)
# endif
#else
# ifndef _CRYPTO_ccm128_setiv
#  define _CRYPTO_ccm128_setiv OPENSSL_MANGLER_ASM(CRYPTO_ccm128_setiv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ccm128_tag
#  define CRYPTO_ccm128_tag OPENSSL_MANGLER(CRYPTO_ccm128_tag)
# endif
#else
# ifndef _CRYPTO_ccm128_tag
#  define _CRYPTO_ccm128_tag OPENSSL_MANGLER_ASM(CRYPTO_ccm128_tag)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_cfb128_1_encrypt
#  define CRYPTO_cfb128_1_encrypt OPENSSL_MANGLER(CRYPTO_cfb128_1_encrypt)
# endif
#else
# ifndef _CRYPTO_cfb128_1_encrypt
#  define _CRYPTO_cfb128_1_encrypt OPENSSL_MANGLER_ASM(CRYPTO_cfb128_1_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_cfb128_8_encrypt
#  define CRYPTO_cfb128_8_encrypt OPENSSL_MANGLER(CRYPTO_cfb128_8_encrypt)
# endif
#else
# ifndef _CRYPTO_cfb128_8_encrypt
#  define _CRYPTO_cfb128_8_encrypt OPENSSL_MANGLER_ASM(CRYPTO_cfb128_8_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_cfb128_encrypt
#  define CRYPTO_cfb128_encrypt OPENSSL_MANGLER(CRYPTO_cfb128_encrypt)
# endif
#else
# ifndef _CRYPTO_cfb128_encrypt
#  define _CRYPTO_cfb128_encrypt OPENSSL_MANGLER_ASM(CRYPTO_cfb128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_clear_free
#  define CRYPTO_clear_free OPENSSL_MANGLER(CRYPTO_clear_free)
# endif
#else
# ifndef _CRYPTO_clear_free
#  define _CRYPTO_clear_free OPENSSL_MANGLER_ASM(CRYPTO_clear_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_clear_realloc
#  define CRYPTO_clear_realloc OPENSSL_MANGLER(CRYPTO_clear_realloc)
# endif
#else
# ifndef _CRYPTO_clear_realloc
#  define _CRYPTO_clear_realloc OPENSSL_MANGLER_ASM(CRYPTO_clear_realloc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ctr128_encrypt
#  define CRYPTO_ctr128_encrypt OPENSSL_MANGLER(CRYPTO_ctr128_encrypt)
# endif
#else
# ifndef _CRYPTO_ctr128_encrypt
#  define _CRYPTO_ctr128_encrypt OPENSSL_MANGLER_ASM(CRYPTO_ctr128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ctr128_encrypt_ctr32
#  define CRYPTO_ctr128_encrypt_ctr32 OPENSSL_MANGLER(CRYPTO_ctr128_encrypt_ctr32)
# endif
#else
# ifndef _CRYPTO_ctr128_encrypt_ctr32
#  define _CRYPTO_ctr128_encrypt_ctr32 OPENSSL_MANGLER_ASM(CRYPTO_ctr128_encrypt_ctr32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_cts128_decrypt
#  define CRYPTO_cts128_decrypt OPENSSL_MANGLER(CRYPTO_cts128_decrypt)
# endif
#else
# ifndef _CRYPTO_cts128_decrypt
#  define _CRYPTO_cts128_decrypt OPENSSL_MANGLER_ASM(CRYPTO_cts128_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_cts128_decrypt_block
#  define CRYPTO_cts128_decrypt_block OPENSSL_MANGLER(CRYPTO_cts128_decrypt_block)
# endif
#else
# ifndef _CRYPTO_cts128_decrypt_block
#  define _CRYPTO_cts128_decrypt_block OPENSSL_MANGLER_ASM(CRYPTO_cts128_decrypt_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_cts128_encrypt
#  define CRYPTO_cts128_encrypt OPENSSL_MANGLER(CRYPTO_cts128_encrypt)
# endif
#else
# ifndef _CRYPTO_cts128_encrypt
#  define _CRYPTO_cts128_encrypt OPENSSL_MANGLER_ASM(CRYPTO_cts128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_cts128_encrypt_block
#  define CRYPTO_cts128_encrypt_block OPENSSL_MANGLER(CRYPTO_cts128_encrypt_block)
# endif
#else
# ifndef _CRYPTO_cts128_encrypt_block
#  define _CRYPTO_cts128_encrypt_block OPENSSL_MANGLER_ASM(CRYPTO_cts128_encrypt_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_dup_ex_data
#  define CRYPTO_dup_ex_data OPENSSL_MANGLER(CRYPTO_dup_ex_data)
# endif
#else
# ifndef _CRYPTO_dup_ex_data
#  define _CRYPTO_dup_ex_data OPENSSL_MANGLER_ASM(CRYPTO_dup_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_free
#  define CRYPTO_free OPENSSL_MANGLER(CRYPTO_free)
# endif
#else
# ifndef _CRYPTO_free
#  define _CRYPTO_free OPENSSL_MANGLER_ASM(CRYPTO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_free_ex_data
#  define CRYPTO_free_ex_data OPENSSL_MANGLER(CRYPTO_free_ex_data)
# endif
#else
# ifndef _CRYPTO_free_ex_data
#  define _CRYPTO_free_ex_data OPENSSL_MANGLER_ASM(CRYPTO_free_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_free_ex_index
#  define CRYPTO_free_ex_index OPENSSL_MANGLER(CRYPTO_free_ex_index)
# endif
#else
# ifndef _CRYPTO_free_ex_index
#  define _CRYPTO_free_ex_index OPENSSL_MANGLER_ASM(CRYPTO_free_ex_index)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_gcm128_aad
#  define CRYPTO_gcm128_aad OPENSSL_MANGLER(CRYPTO_gcm128_aad)
# endif
#else
# ifndef _CRYPTO_gcm128_aad
#  define _CRYPTO_gcm128_aad OPENSSL_MANGLER_ASM(CRYPTO_gcm128_aad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_gcm128_decrypt
#  define CRYPTO_gcm128_decrypt OPENSSL_MANGLER(CRYPTO_gcm128_decrypt)
# endif
#else
# ifndef _CRYPTO_gcm128_decrypt
#  define _CRYPTO_gcm128_decrypt OPENSSL_MANGLER_ASM(CRYPTO_gcm128_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_gcm128_decrypt_ctr32
#  define CRYPTO_gcm128_decrypt_ctr32 OPENSSL_MANGLER(CRYPTO_gcm128_decrypt_ctr32)
# endif
#else
# ifndef _CRYPTO_gcm128_decrypt_ctr32
#  define _CRYPTO_gcm128_decrypt_ctr32 OPENSSL_MANGLER_ASM(CRYPTO_gcm128_decrypt_ctr32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_gcm128_encrypt
#  define CRYPTO_gcm128_encrypt OPENSSL_MANGLER(CRYPTO_gcm128_encrypt)
# endif
#else
# ifndef _CRYPTO_gcm128_encrypt
#  define _CRYPTO_gcm128_encrypt OPENSSL_MANGLER_ASM(CRYPTO_gcm128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_gcm128_encrypt_ctr32
#  define CRYPTO_gcm128_encrypt_ctr32 OPENSSL_MANGLER(CRYPTO_gcm128_encrypt_ctr32)
# endif
#else
# ifndef _CRYPTO_gcm128_encrypt_ctr32
#  define _CRYPTO_gcm128_encrypt_ctr32 OPENSSL_MANGLER_ASM(CRYPTO_gcm128_encrypt_ctr32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_gcm128_finish
#  define CRYPTO_gcm128_finish OPENSSL_MANGLER(CRYPTO_gcm128_finish)
# endif
#else
# ifndef _CRYPTO_gcm128_finish
#  define _CRYPTO_gcm128_finish OPENSSL_MANGLER_ASM(CRYPTO_gcm128_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_gcm128_init
#  define CRYPTO_gcm128_init OPENSSL_MANGLER(CRYPTO_gcm128_init)
# endif
#else
# ifndef _CRYPTO_gcm128_init
#  define _CRYPTO_gcm128_init OPENSSL_MANGLER_ASM(CRYPTO_gcm128_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_gcm128_new
#  define CRYPTO_gcm128_new OPENSSL_MANGLER(CRYPTO_gcm128_new)
# endif
#else
# ifndef _CRYPTO_gcm128_new
#  define _CRYPTO_gcm128_new OPENSSL_MANGLER_ASM(CRYPTO_gcm128_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_gcm128_release
#  define CRYPTO_gcm128_release OPENSSL_MANGLER(CRYPTO_gcm128_release)
# endif
#else
# ifndef _CRYPTO_gcm128_release
#  define _CRYPTO_gcm128_release OPENSSL_MANGLER_ASM(CRYPTO_gcm128_release)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_gcm128_setiv
#  define CRYPTO_gcm128_setiv OPENSSL_MANGLER(CRYPTO_gcm128_setiv)
# endif
#else
# ifndef _CRYPTO_gcm128_setiv
#  define _CRYPTO_gcm128_setiv OPENSSL_MANGLER_ASM(CRYPTO_gcm128_setiv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_gcm128_tag
#  define CRYPTO_gcm128_tag OPENSSL_MANGLER(CRYPTO_gcm128_tag)
# endif
#else
# ifndef _CRYPTO_gcm128_tag
#  define _CRYPTO_gcm128_tag OPENSSL_MANGLER_ASM(CRYPTO_gcm128_tag)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_get_ex_data
#  define CRYPTO_get_ex_data OPENSSL_MANGLER(CRYPTO_get_ex_data)
# endif
#else
# ifndef _CRYPTO_get_ex_data
#  define _CRYPTO_get_ex_data OPENSSL_MANGLER_ASM(CRYPTO_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_get_ex_new_index
#  define CRYPTO_get_ex_new_index OPENSSL_MANGLER(CRYPTO_get_ex_new_index)
# endif
#else
# ifndef _CRYPTO_get_ex_new_index
#  define _CRYPTO_get_ex_new_index OPENSSL_MANGLER_ASM(CRYPTO_get_ex_new_index)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_get_mem_functions
#  define CRYPTO_get_mem_functions OPENSSL_MANGLER(CRYPTO_get_mem_functions)
# endif
#else
# ifndef _CRYPTO_get_mem_functions
#  define _CRYPTO_get_mem_functions OPENSSL_MANGLER_ASM(CRYPTO_get_mem_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_malloc
#  define CRYPTO_malloc OPENSSL_MANGLER(CRYPTO_malloc)
# endif
#else
# ifndef _CRYPTO_malloc
#  define _CRYPTO_malloc OPENSSL_MANGLER_ASM(CRYPTO_malloc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_memcmp
#  define CRYPTO_memcmp OPENSSL_MANGLER(CRYPTO_memcmp)
# endif
#else
# ifndef _CRYPTO_memcmp
#  define _CRYPTO_memcmp OPENSSL_MANGLER_ASM(CRYPTO_memcmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_memdup
#  define CRYPTO_memdup OPENSSL_MANGLER(CRYPTO_memdup)
# endif
#else
# ifndef _CRYPTO_memdup
#  define _CRYPTO_memdup OPENSSL_MANGLER_ASM(CRYPTO_memdup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_new_ex_data
#  define CRYPTO_new_ex_data OPENSSL_MANGLER(CRYPTO_new_ex_data)
# endif
#else
# ifndef _CRYPTO_new_ex_data
#  define _CRYPTO_new_ex_data OPENSSL_MANGLER_ASM(CRYPTO_new_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_nistcts128_decrypt
#  define CRYPTO_nistcts128_decrypt OPENSSL_MANGLER(CRYPTO_nistcts128_decrypt)
# endif
#else
# ifndef _CRYPTO_nistcts128_decrypt
#  define _CRYPTO_nistcts128_decrypt OPENSSL_MANGLER_ASM(CRYPTO_nistcts128_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_nistcts128_decrypt_block
#  define CRYPTO_nistcts128_decrypt_block OPENSSL_MANGLER(CRYPTO_nistcts128_decrypt_block)
# endif
#else
# ifndef _CRYPTO_nistcts128_decrypt_block
#  define _CRYPTO_nistcts128_decrypt_block OPENSSL_MANGLER_ASM(CRYPTO_nistcts128_decrypt_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_nistcts128_encrypt
#  define CRYPTO_nistcts128_encrypt OPENSSL_MANGLER(CRYPTO_nistcts128_encrypt)
# endif
#else
# ifndef _CRYPTO_nistcts128_encrypt
#  define _CRYPTO_nistcts128_encrypt OPENSSL_MANGLER_ASM(CRYPTO_nistcts128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_nistcts128_encrypt_block
#  define CRYPTO_nistcts128_encrypt_block OPENSSL_MANGLER(CRYPTO_nistcts128_encrypt_block)
# endif
#else
# ifndef _CRYPTO_nistcts128_encrypt_block
#  define _CRYPTO_nistcts128_encrypt_block OPENSSL_MANGLER_ASM(CRYPTO_nistcts128_encrypt_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ocb128_aad
#  define CRYPTO_ocb128_aad OPENSSL_MANGLER(CRYPTO_ocb128_aad)
# endif
#else
# ifndef _CRYPTO_ocb128_aad
#  define _CRYPTO_ocb128_aad OPENSSL_MANGLER_ASM(CRYPTO_ocb128_aad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ocb128_cleanup
#  define CRYPTO_ocb128_cleanup OPENSSL_MANGLER(CRYPTO_ocb128_cleanup)
# endif
#else
# ifndef _CRYPTO_ocb128_cleanup
#  define _CRYPTO_ocb128_cleanup OPENSSL_MANGLER_ASM(CRYPTO_ocb128_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ocb128_copy_ctx
#  define CRYPTO_ocb128_copy_ctx OPENSSL_MANGLER(CRYPTO_ocb128_copy_ctx)
# endif
#else
# ifndef _CRYPTO_ocb128_copy_ctx
#  define _CRYPTO_ocb128_copy_ctx OPENSSL_MANGLER_ASM(CRYPTO_ocb128_copy_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ocb128_decrypt
#  define CRYPTO_ocb128_decrypt OPENSSL_MANGLER(CRYPTO_ocb128_decrypt)
# endif
#else
# ifndef _CRYPTO_ocb128_decrypt
#  define _CRYPTO_ocb128_decrypt OPENSSL_MANGLER_ASM(CRYPTO_ocb128_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ocb128_encrypt
#  define CRYPTO_ocb128_encrypt OPENSSL_MANGLER(CRYPTO_ocb128_encrypt)
# endif
#else
# ifndef _CRYPTO_ocb128_encrypt
#  define _CRYPTO_ocb128_encrypt OPENSSL_MANGLER_ASM(CRYPTO_ocb128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ocb128_finish
#  define CRYPTO_ocb128_finish OPENSSL_MANGLER(CRYPTO_ocb128_finish)
# endif
#else
# ifndef _CRYPTO_ocb128_finish
#  define _CRYPTO_ocb128_finish OPENSSL_MANGLER_ASM(CRYPTO_ocb128_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ocb128_init
#  define CRYPTO_ocb128_init OPENSSL_MANGLER(CRYPTO_ocb128_init)
# endif
#else
# ifndef _CRYPTO_ocb128_init
#  define _CRYPTO_ocb128_init OPENSSL_MANGLER_ASM(CRYPTO_ocb128_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ocb128_new
#  define CRYPTO_ocb128_new OPENSSL_MANGLER(CRYPTO_ocb128_new)
# endif
#else
# ifndef _CRYPTO_ocb128_new
#  define _CRYPTO_ocb128_new OPENSSL_MANGLER_ASM(CRYPTO_ocb128_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ocb128_setiv
#  define CRYPTO_ocb128_setiv OPENSSL_MANGLER(CRYPTO_ocb128_setiv)
# endif
#else
# ifndef _CRYPTO_ocb128_setiv
#  define _CRYPTO_ocb128_setiv OPENSSL_MANGLER_ASM(CRYPTO_ocb128_setiv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ocb128_tag
#  define CRYPTO_ocb128_tag OPENSSL_MANGLER(CRYPTO_ocb128_tag)
# endif
#else
# ifndef _CRYPTO_ocb128_tag
#  define _CRYPTO_ocb128_tag OPENSSL_MANGLER_ASM(CRYPTO_ocb128_tag)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_ofb128_encrypt
#  define CRYPTO_ofb128_encrypt OPENSSL_MANGLER(CRYPTO_ofb128_encrypt)
# endif
#else
# ifndef _CRYPTO_ofb128_encrypt
#  define _CRYPTO_ofb128_encrypt OPENSSL_MANGLER_ASM(CRYPTO_ofb128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_realloc
#  define CRYPTO_realloc OPENSSL_MANGLER(CRYPTO_realloc)
# endif
#else
# ifndef _CRYPTO_realloc
#  define _CRYPTO_realloc OPENSSL_MANGLER_ASM(CRYPTO_realloc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_secure_actual_size
#  define CRYPTO_secure_actual_size OPENSSL_MANGLER(CRYPTO_secure_actual_size)
# endif
#else
# ifndef _CRYPTO_secure_actual_size
#  define _CRYPTO_secure_actual_size OPENSSL_MANGLER_ASM(CRYPTO_secure_actual_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_secure_allocated
#  define CRYPTO_secure_allocated OPENSSL_MANGLER(CRYPTO_secure_allocated)
# endif
#else
# ifndef _CRYPTO_secure_allocated
#  define _CRYPTO_secure_allocated OPENSSL_MANGLER_ASM(CRYPTO_secure_allocated)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_secure_clear_free
#  define CRYPTO_secure_clear_free OPENSSL_MANGLER(CRYPTO_secure_clear_free)
# endif
#else
# ifndef _CRYPTO_secure_clear_free
#  define _CRYPTO_secure_clear_free OPENSSL_MANGLER_ASM(CRYPTO_secure_clear_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_secure_free
#  define CRYPTO_secure_free OPENSSL_MANGLER(CRYPTO_secure_free)
# endif
#else
# ifndef _CRYPTO_secure_free
#  define _CRYPTO_secure_free OPENSSL_MANGLER_ASM(CRYPTO_secure_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_secure_malloc
#  define CRYPTO_secure_malloc OPENSSL_MANGLER(CRYPTO_secure_malloc)
# endif
#else
# ifndef _CRYPTO_secure_malloc
#  define _CRYPTO_secure_malloc OPENSSL_MANGLER_ASM(CRYPTO_secure_malloc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_secure_malloc_done
#  define CRYPTO_secure_malloc_done OPENSSL_MANGLER(CRYPTO_secure_malloc_done)
# endif
#else
# ifndef _CRYPTO_secure_malloc_done
#  define _CRYPTO_secure_malloc_done OPENSSL_MANGLER_ASM(CRYPTO_secure_malloc_done)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_secure_malloc_init
#  define CRYPTO_secure_malloc_init OPENSSL_MANGLER(CRYPTO_secure_malloc_init)
# endif
#else
# ifndef _CRYPTO_secure_malloc_init
#  define _CRYPTO_secure_malloc_init OPENSSL_MANGLER_ASM(CRYPTO_secure_malloc_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_secure_malloc_initialized
#  define CRYPTO_secure_malloc_initialized OPENSSL_MANGLER(CRYPTO_secure_malloc_initialized)
# endif
#else
# ifndef _CRYPTO_secure_malloc_initialized
#  define _CRYPTO_secure_malloc_initialized OPENSSL_MANGLER_ASM(CRYPTO_secure_malloc_initialized)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_secure_used
#  define CRYPTO_secure_used OPENSSL_MANGLER(CRYPTO_secure_used)
# endif
#else
# ifndef _CRYPTO_secure_used
#  define _CRYPTO_secure_used OPENSSL_MANGLER_ASM(CRYPTO_secure_used)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_secure_zalloc
#  define CRYPTO_secure_zalloc OPENSSL_MANGLER(CRYPTO_secure_zalloc)
# endif
#else
# ifndef _CRYPTO_secure_zalloc
#  define _CRYPTO_secure_zalloc OPENSSL_MANGLER_ASM(CRYPTO_secure_zalloc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_set_ex_data
#  define CRYPTO_set_ex_data OPENSSL_MANGLER(CRYPTO_set_ex_data)
# endif
#else
# ifndef _CRYPTO_set_ex_data
#  define _CRYPTO_set_ex_data OPENSSL_MANGLER_ASM(CRYPTO_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_set_mem_functions
#  define CRYPTO_set_mem_functions OPENSSL_MANGLER(CRYPTO_set_mem_functions)
# endif
#else
# ifndef _CRYPTO_set_mem_functions
#  define _CRYPTO_set_mem_functions OPENSSL_MANGLER_ASM(CRYPTO_set_mem_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_strdup
#  define CRYPTO_strdup OPENSSL_MANGLER(CRYPTO_strdup)
# endif
#else
# ifndef _CRYPTO_strdup
#  define _CRYPTO_strdup OPENSSL_MANGLER_ASM(CRYPTO_strdup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_strndup
#  define CRYPTO_strndup OPENSSL_MANGLER(CRYPTO_strndup)
# endif
#else
# ifndef _CRYPTO_strndup
#  define _CRYPTO_strndup OPENSSL_MANGLER_ASM(CRYPTO_strndup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_xts128_encrypt
#  define CRYPTO_xts128_encrypt OPENSSL_MANGLER(CRYPTO_xts128_encrypt)
# endif
#else
# ifndef _CRYPTO_xts128_encrypt
#  define _CRYPTO_xts128_encrypt OPENSSL_MANGLER_ASM(CRYPTO_xts128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CRYPTO_zalloc
#  define CRYPTO_zalloc OPENSSL_MANGLER(CRYPTO_zalloc)
# endif
#else
# ifndef _CRYPTO_zalloc
#  define _CRYPTO_zalloc OPENSSL_MANGLER_ASM(CRYPTO_zalloc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_STORE_free
#  define CTLOG_STORE_free OPENSSL_MANGLER(CTLOG_STORE_free)
# endif
#else
# ifndef _CTLOG_STORE_free
#  define _CTLOG_STORE_free OPENSSL_MANGLER_ASM(CTLOG_STORE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_STORE_get0_log_by_id
#  define CTLOG_STORE_get0_log_by_id OPENSSL_MANGLER(CTLOG_STORE_get0_log_by_id)
# endif
#else
# ifndef _CTLOG_STORE_get0_log_by_id
#  define _CTLOG_STORE_get0_log_by_id OPENSSL_MANGLER_ASM(CTLOG_STORE_get0_log_by_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_STORE_load_default_file
#  define CTLOG_STORE_load_default_file OPENSSL_MANGLER(CTLOG_STORE_load_default_file)
# endif
#else
# ifndef _CTLOG_STORE_load_default_file
#  define _CTLOG_STORE_load_default_file OPENSSL_MANGLER_ASM(CTLOG_STORE_load_default_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_STORE_load_file
#  define CTLOG_STORE_load_file OPENSSL_MANGLER(CTLOG_STORE_load_file)
# endif
#else
# ifndef _CTLOG_STORE_load_file
#  define _CTLOG_STORE_load_file OPENSSL_MANGLER_ASM(CTLOG_STORE_load_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_STORE_new
#  define CTLOG_STORE_new OPENSSL_MANGLER(CTLOG_STORE_new)
# endif
#else
# ifndef _CTLOG_STORE_new
#  define _CTLOG_STORE_new OPENSSL_MANGLER_ASM(CTLOG_STORE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_STORE_new_ex
#  define CTLOG_STORE_new_ex OPENSSL_MANGLER(CTLOG_STORE_new_ex)
# endif
#else
# ifndef _CTLOG_STORE_new_ex
#  define _CTLOG_STORE_new_ex OPENSSL_MANGLER_ASM(CTLOG_STORE_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_free
#  define CTLOG_free OPENSSL_MANGLER(CTLOG_free)
# endif
#else
# ifndef _CTLOG_free
#  define _CTLOG_free OPENSSL_MANGLER_ASM(CTLOG_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_get0_log_id
#  define CTLOG_get0_log_id OPENSSL_MANGLER(CTLOG_get0_log_id)
# endif
#else
# ifndef _CTLOG_get0_log_id
#  define _CTLOG_get0_log_id OPENSSL_MANGLER_ASM(CTLOG_get0_log_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_get0_name
#  define CTLOG_get0_name OPENSSL_MANGLER(CTLOG_get0_name)
# endif
#else
# ifndef _CTLOG_get0_name
#  define _CTLOG_get0_name OPENSSL_MANGLER_ASM(CTLOG_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_get0_public_key
#  define CTLOG_get0_public_key OPENSSL_MANGLER(CTLOG_get0_public_key)
# endif
#else
# ifndef _CTLOG_get0_public_key
#  define _CTLOG_get0_public_key OPENSSL_MANGLER_ASM(CTLOG_get0_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_new
#  define CTLOG_new OPENSSL_MANGLER(CTLOG_new)
# endif
#else
# ifndef _CTLOG_new
#  define _CTLOG_new OPENSSL_MANGLER_ASM(CTLOG_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_new_ex
#  define CTLOG_new_ex OPENSSL_MANGLER(CTLOG_new_ex)
# endif
#else
# ifndef _CTLOG_new_ex
#  define _CTLOG_new_ex OPENSSL_MANGLER_ASM(CTLOG_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_new_from_base64
#  define CTLOG_new_from_base64 OPENSSL_MANGLER(CTLOG_new_from_base64)
# endif
#else
# ifndef _CTLOG_new_from_base64
#  define _CTLOG_new_from_base64 OPENSSL_MANGLER_ASM(CTLOG_new_from_base64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CTLOG_new_from_base64_ex
#  define CTLOG_new_from_base64_ex OPENSSL_MANGLER(CTLOG_new_from_base64_ex)
# endif
#else
# ifndef _CTLOG_new_from_base64_ex
#  define _CTLOG_new_from_base64_ex OPENSSL_MANGLER_ASM(CTLOG_new_from_base64_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CT_POLICY_EVAL_CTX_free
#  define CT_POLICY_EVAL_CTX_free OPENSSL_MANGLER(CT_POLICY_EVAL_CTX_free)
# endif
#else
# ifndef _CT_POLICY_EVAL_CTX_free
#  define _CT_POLICY_EVAL_CTX_free OPENSSL_MANGLER_ASM(CT_POLICY_EVAL_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CT_POLICY_EVAL_CTX_get0_cert
#  define CT_POLICY_EVAL_CTX_get0_cert OPENSSL_MANGLER(CT_POLICY_EVAL_CTX_get0_cert)
# endif
#else
# ifndef _CT_POLICY_EVAL_CTX_get0_cert
#  define _CT_POLICY_EVAL_CTX_get0_cert OPENSSL_MANGLER_ASM(CT_POLICY_EVAL_CTX_get0_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CT_POLICY_EVAL_CTX_get0_issuer
#  define CT_POLICY_EVAL_CTX_get0_issuer OPENSSL_MANGLER(CT_POLICY_EVAL_CTX_get0_issuer)
# endif
#else
# ifndef _CT_POLICY_EVAL_CTX_get0_issuer
#  define _CT_POLICY_EVAL_CTX_get0_issuer OPENSSL_MANGLER_ASM(CT_POLICY_EVAL_CTX_get0_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CT_POLICY_EVAL_CTX_get0_log_store
#  define CT_POLICY_EVAL_CTX_get0_log_store OPENSSL_MANGLER(CT_POLICY_EVAL_CTX_get0_log_store)
# endif
#else
# ifndef _CT_POLICY_EVAL_CTX_get0_log_store
#  define _CT_POLICY_EVAL_CTX_get0_log_store OPENSSL_MANGLER_ASM(CT_POLICY_EVAL_CTX_get0_log_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CT_POLICY_EVAL_CTX_get_time
#  define CT_POLICY_EVAL_CTX_get_time OPENSSL_MANGLER(CT_POLICY_EVAL_CTX_get_time)
# endif
#else
# ifndef _CT_POLICY_EVAL_CTX_get_time
#  define _CT_POLICY_EVAL_CTX_get_time OPENSSL_MANGLER_ASM(CT_POLICY_EVAL_CTX_get_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CT_POLICY_EVAL_CTX_new
#  define CT_POLICY_EVAL_CTX_new OPENSSL_MANGLER(CT_POLICY_EVAL_CTX_new)
# endif
#else
# ifndef _CT_POLICY_EVAL_CTX_new
#  define _CT_POLICY_EVAL_CTX_new OPENSSL_MANGLER_ASM(CT_POLICY_EVAL_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CT_POLICY_EVAL_CTX_new_ex
#  define CT_POLICY_EVAL_CTX_new_ex OPENSSL_MANGLER(CT_POLICY_EVAL_CTX_new_ex)
# endif
#else
# ifndef _CT_POLICY_EVAL_CTX_new_ex
#  define _CT_POLICY_EVAL_CTX_new_ex OPENSSL_MANGLER_ASM(CT_POLICY_EVAL_CTX_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CT_POLICY_EVAL_CTX_set1_cert
#  define CT_POLICY_EVAL_CTX_set1_cert OPENSSL_MANGLER(CT_POLICY_EVAL_CTX_set1_cert)
# endif
#else
# ifndef _CT_POLICY_EVAL_CTX_set1_cert
#  define _CT_POLICY_EVAL_CTX_set1_cert OPENSSL_MANGLER_ASM(CT_POLICY_EVAL_CTX_set1_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CT_POLICY_EVAL_CTX_set1_issuer
#  define CT_POLICY_EVAL_CTX_set1_issuer OPENSSL_MANGLER(CT_POLICY_EVAL_CTX_set1_issuer)
# endif
#else
# ifndef _CT_POLICY_EVAL_CTX_set1_issuer
#  define _CT_POLICY_EVAL_CTX_set1_issuer OPENSSL_MANGLER_ASM(CT_POLICY_EVAL_CTX_set1_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE
#  define CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE OPENSSL_MANGLER(CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE)
# endif
#else
# ifndef _CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE
#  define _CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE OPENSSL_MANGLER_ASM(CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef CT_POLICY_EVAL_CTX_set_time
#  define CT_POLICY_EVAL_CTX_set_time OPENSSL_MANGLER(CT_POLICY_EVAL_CTX_set_time)
# endif
#else
# ifndef _CT_POLICY_EVAL_CTX_set_time
#  define _CT_POLICY_EVAL_CTX_set_time OPENSSL_MANGLER_ASM(CT_POLICY_EVAL_CTX_set_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_DecryptBlock
#  define Camellia_DecryptBlock OPENSSL_MANGLER(Camellia_DecryptBlock)
# endif
#else
# ifndef _Camellia_DecryptBlock
#  define _Camellia_DecryptBlock OPENSSL_MANGLER_ASM(Camellia_DecryptBlock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_DecryptBlock_Rounds
#  define Camellia_DecryptBlock_Rounds OPENSSL_MANGLER(Camellia_DecryptBlock_Rounds)
# endif
#else
# ifndef _Camellia_DecryptBlock_Rounds
#  define _Camellia_DecryptBlock_Rounds OPENSSL_MANGLER_ASM(Camellia_DecryptBlock_Rounds)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_Ekeygen
#  define Camellia_Ekeygen OPENSSL_MANGLER(Camellia_Ekeygen)
# endif
#else
# ifndef _Camellia_Ekeygen
#  define _Camellia_Ekeygen OPENSSL_MANGLER_ASM(Camellia_Ekeygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_EncryptBlock
#  define Camellia_EncryptBlock OPENSSL_MANGLER(Camellia_EncryptBlock)
# endif
#else
# ifndef _Camellia_EncryptBlock
#  define _Camellia_EncryptBlock OPENSSL_MANGLER_ASM(Camellia_EncryptBlock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_EncryptBlock_Rounds
#  define Camellia_EncryptBlock_Rounds OPENSSL_MANGLER(Camellia_EncryptBlock_Rounds)
# endif
#else
# ifndef _Camellia_EncryptBlock_Rounds
#  define _Camellia_EncryptBlock_Rounds OPENSSL_MANGLER_ASM(Camellia_EncryptBlock_Rounds)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_cbc_encrypt
#  define Camellia_cbc_encrypt OPENSSL_MANGLER(Camellia_cbc_encrypt)
# endif
#else
# ifndef _Camellia_cbc_encrypt
#  define _Camellia_cbc_encrypt OPENSSL_MANGLER_ASM(Camellia_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_cfb128_encrypt
#  define Camellia_cfb128_encrypt OPENSSL_MANGLER(Camellia_cfb128_encrypt)
# endif
#else
# ifndef _Camellia_cfb128_encrypt
#  define _Camellia_cfb128_encrypt OPENSSL_MANGLER_ASM(Camellia_cfb128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_cfb1_encrypt
#  define Camellia_cfb1_encrypt OPENSSL_MANGLER(Camellia_cfb1_encrypt)
# endif
#else
# ifndef _Camellia_cfb1_encrypt
#  define _Camellia_cfb1_encrypt OPENSSL_MANGLER_ASM(Camellia_cfb1_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_cfb8_encrypt
#  define Camellia_cfb8_encrypt OPENSSL_MANGLER(Camellia_cfb8_encrypt)
# endif
#else
# ifndef _Camellia_cfb8_encrypt
#  define _Camellia_cfb8_encrypt OPENSSL_MANGLER_ASM(Camellia_cfb8_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_ctr128_encrypt
#  define Camellia_ctr128_encrypt OPENSSL_MANGLER(Camellia_ctr128_encrypt)
# endif
#else
# ifndef _Camellia_ctr128_encrypt
#  define _Camellia_ctr128_encrypt OPENSSL_MANGLER_ASM(Camellia_ctr128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_decrypt
#  define Camellia_decrypt OPENSSL_MANGLER(Camellia_decrypt)
# endif
#else
# ifndef _Camellia_decrypt
#  define _Camellia_decrypt OPENSSL_MANGLER_ASM(Camellia_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_ecb_encrypt
#  define Camellia_ecb_encrypt OPENSSL_MANGLER(Camellia_ecb_encrypt)
# endif
#else
# ifndef _Camellia_ecb_encrypt
#  define _Camellia_ecb_encrypt OPENSSL_MANGLER_ASM(Camellia_ecb_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_encrypt
#  define Camellia_encrypt OPENSSL_MANGLER(Camellia_encrypt)
# endif
#else
# ifndef _Camellia_encrypt
#  define _Camellia_encrypt OPENSSL_MANGLER_ASM(Camellia_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_ofb128_encrypt
#  define Camellia_ofb128_encrypt OPENSSL_MANGLER(Camellia_ofb128_encrypt)
# endif
#else
# ifndef _Camellia_ofb128_encrypt
#  define _Camellia_ofb128_encrypt OPENSSL_MANGLER_ASM(Camellia_ofb128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Camellia_set_key
#  define Camellia_set_key OPENSSL_MANGLER(Camellia_set_key)
# endif
#else
# ifndef _Camellia_set_key
#  define _Camellia_set_key OPENSSL_MANGLER_ASM(Camellia_set_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ChaCha20_ctr32
#  define ChaCha20_ctr32 OPENSSL_MANGLER(ChaCha20_ctr32)
# endif
#else
# ifndef _ChaCha20_ctr32
#  define _ChaCha20_ctr32 OPENSSL_MANGLER_ASM(ChaCha20_ctr32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_cbc_cksum
#  define DES_cbc_cksum OPENSSL_MANGLER(DES_cbc_cksum)
# endif
#else
# ifndef _DES_cbc_cksum
#  define _DES_cbc_cksum OPENSSL_MANGLER_ASM(DES_cbc_cksum)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_cbc_encrypt
#  define DES_cbc_encrypt OPENSSL_MANGLER(DES_cbc_encrypt)
# endif
#else
# ifndef _DES_cbc_encrypt
#  define _DES_cbc_encrypt OPENSSL_MANGLER_ASM(DES_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_cfb64_encrypt
#  define DES_cfb64_encrypt OPENSSL_MANGLER(DES_cfb64_encrypt)
# endif
#else
# ifndef _DES_cfb64_encrypt
#  define _DES_cfb64_encrypt OPENSSL_MANGLER_ASM(DES_cfb64_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_cfb_encrypt
#  define DES_cfb_encrypt OPENSSL_MANGLER(DES_cfb_encrypt)
# endif
#else
# ifndef _DES_cfb_encrypt
#  define _DES_cfb_encrypt OPENSSL_MANGLER_ASM(DES_cfb_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_check_key_parity
#  define DES_check_key_parity OPENSSL_MANGLER(DES_check_key_parity)
# endif
#else
# ifndef _DES_check_key_parity
#  define _DES_check_key_parity OPENSSL_MANGLER_ASM(DES_check_key_parity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_crypt
#  define DES_crypt OPENSSL_MANGLER(DES_crypt)
# endif
#else
# ifndef _DES_crypt
#  define _DES_crypt OPENSSL_MANGLER_ASM(DES_crypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_decrypt3
#  define DES_decrypt3 OPENSSL_MANGLER(DES_decrypt3)
# endif
#else
# ifndef _DES_decrypt3
#  define _DES_decrypt3 OPENSSL_MANGLER_ASM(DES_decrypt3)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_ecb3_encrypt
#  define DES_ecb3_encrypt OPENSSL_MANGLER(DES_ecb3_encrypt)
# endif
#else
# ifndef _DES_ecb3_encrypt
#  define _DES_ecb3_encrypt OPENSSL_MANGLER_ASM(DES_ecb3_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_ecb_encrypt
#  define DES_ecb_encrypt OPENSSL_MANGLER(DES_ecb_encrypt)
# endif
#else
# ifndef _DES_ecb_encrypt
#  define _DES_ecb_encrypt OPENSSL_MANGLER_ASM(DES_ecb_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_ede3_cbc_encrypt
#  define DES_ede3_cbc_encrypt OPENSSL_MANGLER(DES_ede3_cbc_encrypt)
# endif
#else
# ifndef _DES_ede3_cbc_encrypt
#  define _DES_ede3_cbc_encrypt OPENSSL_MANGLER_ASM(DES_ede3_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_ede3_cfb64_encrypt
#  define DES_ede3_cfb64_encrypt OPENSSL_MANGLER(DES_ede3_cfb64_encrypt)
# endif
#else
# ifndef _DES_ede3_cfb64_encrypt
#  define _DES_ede3_cfb64_encrypt OPENSSL_MANGLER_ASM(DES_ede3_cfb64_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_ede3_cfb_encrypt
#  define DES_ede3_cfb_encrypt OPENSSL_MANGLER(DES_ede3_cfb_encrypt)
# endif
#else
# ifndef _DES_ede3_cfb_encrypt
#  define _DES_ede3_cfb_encrypt OPENSSL_MANGLER_ASM(DES_ede3_cfb_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_ede3_ofb64_encrypt
#  define DES_ede3_ofb64_encrypt OPENSSL_MANGLER(DES_ede3_ofb64_encrypt)
# endif
#else
# ifndef _DES_ede3_ofb64_encrypt
#  define _DES_ede3_ofb64_encrypt OPENSSL_MANGLER_ASM(DES_ede3_ofb64_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_encrypt1
#  define DES_encrypt1 OPENSSL_MANGLER(DES_encrypt1)
# endif
#else
# ifndef _DES_encrypt1
#  define _DES_encrypt1 OPENSSL_MANGLER_ASM(DES_encrypt1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_encrypt2
#  define DES_encrypt2 OPENSSL_MANGLER(DES_encrypt2)
# endif
#else
# ifndef _DES_encrypt2
#  define _DES_encrypt2 OPENSSL_MANGLER_ASM(DES_encrypt2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_encrypt3
#  define DES_encrypt3 OPENSSL_MANGLER(DES_encrypt3)
# endif
#else
# ifndef _DES_encrypt3
#  define _DES_encrypt3 OPENSSL_MANGLER_ASM(DES_encrypt3)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_fcrypt
#  define DES_fcrypt OPENSSL_MANGLER(DES_fcrypt)
# endif
#else
# ifndef _DES_fcrypt
#  define _DES_fcrypt OPENSSL_MANGLER_ASM(DES_fcrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_is_weak_key
#  define DES_is_weak_key OPENSSL_MANGLER(DES_is_weak_key)
# endif
#else
# ifndef _DES_is_weak_key
#  define _DES_is_weak_key OPENSSL_MANGLER_ASM(DES_is_weak_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_key_sched
#  define DES_key_sched OPENSSL_MANGLER(DES_key_sched)
# endif
#else
# ifndef _DES_key_sched
#  define _DES_key_sched OPENSSL_MANGLER_ASM(DES_key_sched)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_ncbc_encrypt
#  define DES_ncbc_encrypt OPENSSL_MANGLER(DES_ncbc_encrypt)
# endif
#else
# ifndef _DES_ncbc_encrypt
#  define _DES_ncbc_encrypt OPENSSL_MANGLER_ASM(DES_ncbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_ncbc_encrypt
#  define DES_ncbc_encrypt OPENSSL_MANGLER(DES_ncbc_encrypt)
# endif
#else
# ifndef _DES_ncbc_encrypt
#  define _DES_ncbc_encrypt OPENSSL_MANGLER_ASM(DES_ncbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_ofb64_encrypt
#  define DES_ofb64_encrypt OPENSSL_MANGLER(DES_ofb64_encrypt)
# endif
#else
# ifndef _DES_ofb64_encrypt
#  define _DES_ofb64_encrypt OPENSSL_MANGLER_ASM(DES_ofb64_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_ofb_encrypt
#  define DES_ofb_encrypt OPENSSL_MANGLER(DES_ofb_encrypt)
# endif
#else
# ifndef _DES_ofb_encrypt
#  define _DES_ofb_encrypt OPENSSL_MANGLER_ASM(DES_ofb_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_options
#  define DES_options OPENSSL_MANGLER(DES_options)
# endif
#else
# ifndef _DES_options
#  define _DES_options OPENSSL_MANGLER_ASM(DES_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_pcbc_encrypt
#  define DES_pcbc_encrypt OPENSSL_MANGLER(DES_pcbc_encrypt)
# endif
#else
# ifndef _DES_pcbc_encrypt
#  define _DES_pcbc_encrypt OPENSSL_MANGLER_ASM(DES_pcbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_quad_cksum
#  define DES_quad_cksum OPENSSL_MANGLER(DES_quad_cksum)
# endif
#else
# ifndef _DES_quad_cksum
#  define _DES_quad_cksum OPENSSL_MANGLER_ASM(DES_quad_cksum)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_random_key
#  define DES_random_key OPENSSL_MANGLER(DES_random_key)
# endif
#else
# ifndef _DES_random_key
#  define _DES_random_key OPENSSL_MANGLER_ASM(DES_random_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_set_key
#  define DES_set_key OPENSSL_MANGLER(DES_set_key)
# endif
#else
# ifndef _DES_set_key
#  define _DES_set_key OPENSSL_MANGLER_ASM(DES_set_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_set_key_checked
#  define DES_set_key_checked OPENSSL_MANGLER(DES_set_key_checked)
# endif
#else
# ifndef _DES_set_key_checked
#  define _DES_set_key_checked OPENSSL_MANGLER_ASM(DES_set_key_checked)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_set_key_unchecked
#  define DES_set_key_unchecked OPENSSL_MANGLER(DES_set_key_unchecked)
# endif
#else
# ifndef _DES_set_key_unchecked
#  define _DES_set_key_unchecked OPENSSL_MANGLER_ASM(DES_set_key_unchecked)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_set_odd_parity
#  define DES_set_odd_parity OPENSSL_MANGLER(DES_set_odd_parity)
# endif
#else
# ifndef _DES_set_odd_parity
#  define _DES_set_odd_parity OPENSSL_MANGLER_ASM(DES_set_odd_parity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_string_to_2keys
#  define DES_string_to_2keys OPENSSL_MANGLER(DES_string_to_2keys)
# endif
#else
# ifndef _DES_string_to_2keys
#  define _DES_string_to_2keys OPENSSL_MANGLER_ASM(DES_string_to_2keys)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_string_to_key
#  define DES_string_to_key OPENSSL_MANGLER(DES_string_to_key)
# endif
#else
# ifndef _DES_string_to_key
#  define _DES_string_to_key OPENSSL_MANGLER_ASM(DES_string_to_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DES_xcbc_encrypt
#  define DES_xcbc_encrypt OPENSSL_MANGLER(DES_xcbc_encrypt)
# endif
#else
# ifndef _DES_xcbc_encrypt
#  define _DES_xcbc_encrypt OPENSSL_MANGLER_ASM(DES_xcbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_KDF_X9_42
#  define DH_KDF_X9_42 OPENSSL_MANGLER(DH_KDF_X9_42)
# endif
#else
# ifndef _DH_KDF_X9_42
#  define _DH_KDF_X9_42 OPENSSL_MANGLER_ASM(DH_KDF_X9_42)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_OpenSSL
#  define DH_OpenSSL OPENSSL_MANGLER(DH_OpenSSL)
# endif
#else
# ifndef _DH_OpenSSL
#  define _DH_OpenSSL OPENSSL_MANGLER_ASM(DH_OpenSSL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_bits
#  define DH_bits OPENSSL_MANGLER(DH_bits)
# endif
#else
# ifndef _DH_bits
#  define _DH_bits OPENSSL_MANGLER_ASM(DH_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_check
#  define DH_check OPENSSL_MANGLER(DH_check)
# endif
#else
# ifndef _DH_check
#  define _DH_check OPENSSL_MANGLER_ASM(DH_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_check_ex
#  define DH_check_ex OPENSSL_MANGLER(DH_check_ex)
# endif
#else
# ifndef _DH_check_ex
#  define _DH_check_ex OPENSSL_MANGLER_ASM(DH_check_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_check_params
#  define DH_check_params OPENSSL_MANGLER(DH_check_params)
# endif
#else
# ifndef _DH_check_params
#  define _DH_check_params OPENSSL_MANGLER_ASM(DH_check_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_check_params_ex
#  define DH_check_params_ex OPENSSL_MANGLER(DH_check_params_ex)
# endif
#else
# ifndef _DH_check_params_ex
#  define _DH_check_params_ex OPENSSL_MANGLER_ASM(DH_check_params_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_check_pub_key
#  define DH_check_pub_key OPENSSL_MANGLER(DH_check_pub_key)
# endif
#else
# ifndef _DH_check_pub_key
#  define _DH_check_pub_key OPENSSL_MANGLER_ASM(DH_check_pub_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_check_pub_key_ex
#  define DH_check_pub_key_ex OPENSSL_MANGLER(DH_check_pub_key_ex)
# endif
#else
# ifndef _DH_check_pub_key_ex
#  define _DH_check_pub_key_ex OPENSSL_MANGLER_ASM(DH_check_pub_key_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_clear_flags
#  define DH_clear_flags OPENSSL_MANGLER(DH_clear_flags)
# endif
#else
# ifndef _DH_clear_flags
#  define _DH_clear_flags OPENSSL_MANGLER_ASM(DH_clear_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_compute_key
#  define DH_compute_key OPENSSL_MANGLER(DH_compute_key)
# endif
#else
# ifndef _DH_compute_key
#  define _DH_compute_key OPENSSL_MANGLER_ASM(DH_compute_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_compute_key_padded
#  define DH_compute_key_padded OPENSSL_MANGLER(DH_compute_key_padded)
# endif
#else
# ifndef _DH_compute_key_padded
#  define _DH_compute_key_padded OPENSSL_MANGLER_ASM(DH_compute_key_padded)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_free
#  define DH_free OPENSSL_MANGLER(DH_free)
# endif
#else
# ifndef _DH_free
#  define _DH_free OPENSSL_MANGLER_ASM(DH_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_generate_key
#  define DH_generate_key OPENSSL_MANGLER(DH_generate_key)
# endif
#else
# ifndef _DH_generate_key
#  define _DH_generate_key OPENSSL_MANGLER_ASM(DH_generate_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_generate_parameters
#  define DH_generate_parameters OPENSSL_MANGLER(DH_generate_parameters)
# endif
#else
# ifndef _DH_generate_parameters
#  define _DH_generate_parameters OPENSSL_MANGLER_ASM(DH_generate_parameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_generate_parameters_ex
#  define DH_generate_parameters_ex OPENSSL_MANGLER(DH_generate_parameters_ex)
# endif
#else
# ifndef _DH_generate_parameters_ex
#  define _DH_generate_parameters_ex OPENSSL_MANGLER_ASM(DH_generate_parameters_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get0_engine
#  define DH_get0_engine OPENSSL_MANGLER(DH_get0_engine)
# endif
#else
# ifndef _DH_get0_engine
#  define _DH_get0_engine OPENSSL_MANGLER_ASM(DH_get0_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get0_g
#  define DH_get0_g OPENSSL_MANGLER(DH_get0_g)
# endif
#else
# ifndef _DH_get0_g
#  define _DH_get0_g OPENSSL_MANGLER_ASM(DH_get0_g)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get0_key
#  define DH_get0_key OPENSSL_MANGLER(DH_get0_key)
# endif
#else
# ifndef _DH_get0_key
#  define _DH_get0_key OPENSSL_MANGLER_ASM(DH_get0_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get0_p
#  define DH_get0_p OPENSSL_MANGLER(DH_get0_p)
# endif
#else
# ifndef _DH_get0_p
#  define _DH_get0_p OPENSSL_MANGLER_ASM(DH_get0_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get0_pqg
#  define DH_get0_pqg OPENSSL_MANGLER(DH_get0_pqg)
# endif
#else
# ifndef _DH_get0_pqg
#  define _DH_get0_pqg OPENSSL_MANGLER_ASM(DH_get0_pqg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get0_priv_key
#  define DH_get0_priv_key OPENSSL_MANGLER(DH_get0_priv_key)
# endif
#else
# ifndef _DH_get0_priv_key
#  define _DH_get0_priv_key OPENSSL_MANGLER_ASM(DH_get0_priv_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get0_pub_key
#  define DH_get0_pub_key OPENSSL_MANGLER(DH_get0_pub_key)
# endif
#else
# ifndef _DH_get0_pub_key
#  define _DH_get0_pub_key OPENSSL_MANGLER_ASM(DH_get0_pub_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get0_q
#  define DH_get0_q OPENSSL_MANGLER(DH_get0_q)
# endif
#else
# ifndef _DH_get0_q
#  define _DH_get0_q OPENSSL_MANGLER_ASM(DH_get0_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get_1024_160
#  define DH_get_1024_160 OPENSSL_MANGLER(DH_get_1024_160)
# endif
#else
# ifndef _DH_get_1024_160
#  define _DH_get_1024_160 OPENSSL_MANGLER_ASM(DH_get_1024_160)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get_2048_224
#  define DH_get_2048_224 OPENSSL_MANGLER(DH_get_2048_224)
# endif
#else
# ifndef _DH_get_2048_224
#  define _DH_get_2048_224 OPENSSL_MANGLER_ASM(DH_get_2048_224)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get_2048_256
#  define DH_get_2048_256 OPENSSL_MANGLER(DH_get_2048_256)
# endif
#else
# ifndef _DH_get_2048_256
#  define _DH_get_2048_256 OPENSSL_MANGLER_ASM(DH_get_2048_256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get_default_method
#  define DH_get_default_method OPENSSL_MANGLER(DH_get_default_method)
# endif
#else
# ifndef _DH_get_default_method
#  define _DH_get_default_method OPENSSL_MANGLER_ASM(DH_get_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get_ex_data
#  define DH_get_ex_data OPENSSL_MANGLER(DH_get_ex_data)
# endif
#else
# ifndef _DH_get_ex_data
#  define _DH_get_ex_data OPENSSL_MANGLER_ASM(DH_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get_length
#  define DH_get_length OPENSSL_MANGLER(DH_get_length)
# endif
#else
# ifndef _DH_get_length
#  define _DH_get_length OPENSSL_MANGLER_ASM(DH_get_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_get_nid
#  define DH_get_nid OPENSSL_MANGLER(DH_get_nid)
# endif
#else
# ifndef _DH_get_nid
#  define _DH_get_nid OPENSSL_MANGLER_ASM(DH_get_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_dup
#  define DH_meth_dup OPENSSL_MANGLER(DH_meth_dup)
# endif
#else
# ifndef _DH_meth_dup
#  define _DH_meth_dup OPENSSL_MANGLER_ASM(DH_meth_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_free
#  define DH_meth_free OPENSSL_MANGLER(DH_meth_free)
# endif
#else
# ifndef _DH_meth_free
#  define _DH_meth_free OPENSSL_MANGLER_ASM(DH_meth_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_get0_app_data
#  define DH_meth_get0_app_data OPENSSL_MANGLER(DH_meth_get0_app_data)
# endif
#else
# ifndef _DH_meth_get0_app_data
#  define _DH_meth_get0_app_data OPENSSL_MANGLER_ASM(DH_meth_get0_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_get0_name
#  define DH_meth_get0_name OPENSSL_MANGLER(DH_meth_get0_name)
# endif
#else
# ifndef _DH_meth_get0_name
#  define _DH_meth_get0_name OPENSSL_MANGLER_ASM(DH_meth_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_get_bn_mod_exp
#  define DH_meth_get_bn_mod_exp OPENSSL_MANGLER(DH_meth_get_bn_mod_exp)
# endif
#else
# ifndef _DH_meth_get_bn_mod_exp
#  define _DH_meth_get_bn_mod_exp OPENSSL_MANGLER_ASM(DH_meth_get_bn_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_get_compute_key
#  define DH_meth_get_compute_key OPENSSL_MANGLER(DH_meth_get_compute_key)
# endif
#else
# ifndef _DH_meth_get_compute_key
#  define _DH_meth_get_compute_key OPENSSL_MANGLER_ASM(DH_meth_get_compute_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_get_finish
#  define DH_meth_get_finish OPENSSL_MANGLER(DH_meth_get_finish)
# endif
#else
# ifndef _DH_meth_get_finish
#  define _DH_meth_get_finish OPENSSL_MANGLER_ASM(DH_meth_get_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_get_flags
#  define DH_meth_get_flags OPENSSL_MANGLER(DH_meth_get_flags)
# endif
#else
# ifndef _DH_meth_get_flags
#  define _DH_meth_get_flags OPENSSL_MANGLER_ASM(DH_meth_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_get_generate_key
#  define DH_meth_get_generate_key OPENSSL_MANGLER(DH_meth_get_generate_key)
# endif
#else
# ifndef _DH_meth_get_generate_key
#  define _DH_meth_get_generate_key OPENSSL_MANGLER_ASM(DH_meth_get_generate_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_get_generate_params
#  define DH_meth_get_generate_params OPENSSL_MANGLER(DH_meth_get_generate_params)
# endif
#else
# ifndef _DH_meth_get_generate_params
#  define _DH_meth_get_generate_params OPENSSL_MANGLER_ASM(DH_meth_get_generate_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_get_init
#  define DH_meth_get_init OPENSSL_MANGLER(DH_meth_get_init)
# endif
#else
# ifndef _DH_meth_get_init
#  define _DH_meth_get_init OPENSSL_MANGLER_ASM(DH_meth_get_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_new
#  define DH_meth_new OPENSSL_MANGLER(DH_meth_new)
# endif
#else
# ifndef _DH_meth_new
#  define _DH_meth_new OPENSSL_MANGLER_ASM(DH_meth_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_set0_app_data
#  define DH_meth_set0_app_data OPENSSL_MANGLER(DH_meth_set0_app_data)
# endif
#else
# ifndef _DH_meth_set0_app_data
#  define _DH_meth_set0_app_data OPENSSL_MANGLER_ASM(DH_meth_set0_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_set1_name
#  define DH_meth_set1_name OPENSSL_MANGLER(DH_meth_set1_name)
# endif
#else
# ifndef _DH_meth_set1_name
#  define _DH_meth_set1_name OPENSSL_MANGLER_ASM(DH_meth_set1_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_set_bn_mod_exp
#  define DH_meth_set_bn_mod_exp OPENSSL_MANGLER(DH_meth_set_bn_mod_exp)
# endif
#else
# ifndef _DH_meth_set_bn_mod_exp
#  define _DH_meth_set_bn_mod_exp OPENSSL_MANGLER_ASM(DH_meth_set_bn_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_set_compute_key
#  define DH_meth_set_compute_key OPENSSL_MANGLER(DH_meth_set_compute_key)
# endif
#else
# ifndef _DH_meth_set_compute_key
#  define _DH_meth_set_compute_key OPENSSL_MANGLER_ASM(DH_meth_set_compute_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_set_finish
#  define DH_meth_set_finish OPENSSL_MANGLER(DH_meth_set_finish)
# endif
#else
# ifndef _DH_meth_set_finish
#  define _DH_meth_set_finish OPENSSL_MANGLER_ASM(DH_meth_set_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_set_flags
#  define DH_meth_set_flags OPENSSL_MANGLER(DH_meth_set_flags)
# endif
#else
# ifndef _DH_meth_set_flags
#  define _DH_meth_set_flags OPENSSL_MANGLER_ASM(DH_meth_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_set_generate_key
#  define DH_meth_set_generate_key OPENSSL_MANGLER(DH_meth_set_generate_key)
# endif
#else
# ifndef _DH_meth_set_generate_key
#  define _DH_meth_set_generate_key OPENSSL_MANGLER_ASM(DH_meth_set_generate_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_set_generate_params
#  define DH_meth_set_generate_params OPENSSL_MANGLER(DH_meth_set_generate_params)
# endif
#else
# ifndef _DH_meth_set_generate_params
#  define _DH_meth_set_generate_params OPENSSL_MANGLER_ASM(DH_meth_set_generate_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_meth_set_init
#  define DH_meth_set_init OPENSSL_MANGLER(DH_meth_set_init)
# endif
#else
# ifndef _DH_meth_set_init
#  define _DH_meth_set_init OPENSSL_MANGLER_ASM(DH_meth_set_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_new
#  define DH_new OPENSSL_MANGLER(DH_new)
# endif
#else
# ifndef _DH_new
#  define _DH_new OPENSSL_MANGLER_ASM(DH_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_new_by_nid
#  define DH_new_by_nid OPENSSL_MANGLER(DH_new_by_nid)
# endif
#else
# ifndef _DH_new_by_nid
#  define _DH_new_by_nid OPENSSL_MANGLER_ASM(DH_new_by_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_new_method
#  define DH_new_method OPENSSL_MANGLER(DH_new_method)
# endif
#else
# ifndef _DH_new_method
#  define _DH_new_method OPENSSL_MANGLER_ASM(DH_new_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_security_bits
#  define DH_security_bits OPENSSL_MANGLER(DH_security_bits)
# endif
#else
# ifndef _DH_security_bits
#  define _DH_security_bits OPENSSL_MANGLER_ASM(DH_security_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_set0_key
#  define DH_set0_key OPENSSL_MANGLER(DH_set0_key)
# endif
#else
# ifndef _DH_set0_key
#  define _DH_set0_key OPENSSL_MANGLER_ASM(DH_set0_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_set0_pqg
#  define DH_set0_pqg OPENSSL_MANGLER(DH_set0_pqg)
# endif
#else
# ifndef _DH_set0_pqg
#  define _DH_set0_pqg OPENSSL_MANGLER_ASM(DH_set0_pqg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_set_default_method
#  define DH_set_default_method OPENSSL_MANGLER(DH_set_default_method)
# endif
#else
# ifndef _DH_set_default_method
#  define _DH_set_default_method OPENSSL_MANGLER_ASM(DH_set_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_set_ex_data
#  define DH_set_ex_data OPENSSL_MANGLER(DH_set_ex_data)
# endif
#else
# ifndef _DH_set_ex_data
#  define _DH_set_ex_data OPENSSL_MANGLER_ASM(DH_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_set_flags
#  define DH_set_flags OPENSSL_MANGLER(DH_set_flags)
# endif
#else
# ifndef _DH_set_flags
#  define _DH_set_flags OPENSSL_MANGLER_ASM(DH_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_set_length
#  define DH_set_length OPENSSL_MANGLER(DH_set_length)
# endif
#else
# ifndef _DH_set_length
#  define _DH_set_length OPENSSL_MANGLER_ASM(DH_set_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_set_method
#  define DH_set_method OPENSSL_MANGLER(DH_set_method)
# endif
#else
# ifndef _DH_set_method
#  define _DH_set_method OPENSSL_MANGLER_ASM(DH_set_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_size
#  define DH_size OPENSSL_MANGLER(DH_size)
# endif
#else
# ifndef _DH_size
#  define _DH_size OPENSSL_MANGLER_ASM(DH_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_test_flags
#  define DH_test_flags OPENSSL_MANGLER(DH_test_flags)
# endif
#else
# ifndef _DH_test_flags
#  define _DH_test_flags OPENSSL_MANGLER_ASM(DH_test_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DH_up_ref
#  define DH_up_ref OPENSSL_MANGLER(DH_up_ref)
# endif
#else
# ifndef _DH_up_ref
#  define _DH_up_ref OPENSSL_MANGLER_ASM(DH_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DHparams_dup
#  define DHparams_dup OPENSSL_MANGLER(DHparams_dup)
# endif
#else
# ifndef _DHparams_dup
#  define _DHparams_dup OPENSSL_MANGLER_ASM(DHparams_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DHparams_it
#  define DHparams_it OPENSSL_MANGLER(DHparams_it)
# endif
#else
# ifndef _DHparams_it
#  define _DHparams_it OPENSSL_MANGLER_ASM(DHparams_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DHparams_print
#  define DHparams_print OPENSSL_MANGLER(DHparams_print)
# endif
#else
# ifndef _DHparams_print
#  define _DHparams_print OPENSSL_MANGLER_ASM(DHparams_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DHparams_print_fp
#  define DHparams_print_fp OPENSSL_MANGLER(DHparams_print_fp)
# endif
#else
# ifndef _DHparams_print_fp
#  define _DHparams_print_fp OPENSSL_MANGLER_ASM(DHparams_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DIRECTORYSTRING_free
#  define DIRECTORYSTRING_free OPENSSL_MANGLER(DIRECTORYSTRING_free)
# endif
#else
# ifndef _DIRECTORYSTRING_free
#  define _DIRECTORYSTRING_free OPENSSL_MANGLER_ASM(DIRECTORYSTRING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DIRECTORYSTRING_it
#  define DIRECTORYSTRING_it OPENSSL_MANGLER(DIRECTORYSTRING_it)
# endif
#else
# ifndef _DIRECTORYSTRING_it
#  define _DIRECTORYSTRING_it OPENSSL_MANGLER_ASM(DIRECTORYSTRING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DIRECTORYSTRING_new
#  define DIRECTORYSTRING_new OPENSSL_MANGLER(DIRECTORYSTRING_new)
# endif
#else
# ifndef _DIRECTORYSTRING_new
#  define _DIRECTORYSTRING_new OPENSSL_MANGLER_ASM(DIRECTORYSTRING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DISPLAYTEXT_free
#  define DISPLAYTEXT_free OPENSSL_MANGLER(DISPLAYTEXT_free)
# endif
#else
# ifndef _DISPLAYTEXT_free
#  define _DISPLAYTEXT_free OPENSSL_MANGLER_ASM(DISPLAYTEXT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DISPLAYTEXT_it
#  define DISPLAYTEXT_it OPENSSL_MANGLER(DISPLAYTEXT_it)
# endif
#else
# ifndef _DISPLAYTEXT_it
#  define _DISPLAYTEXT_it OPENSSL_MANGLER_ASM(DISPLAYTEXT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DISPLAYTEXT_new
#  define DISPLAYTEXT_new OPENSSL_MANGLER(DISPLAYTEXT_new)
# endif
#else
# ifndef _DISPLAYTEXT_new
#  define _DISPLAYTEXT_new OPENSSL_MANGLER_ASM(DISPLAYTEXT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DIST_POINT_NAME_free
#  define DIST_POINT_NAME_free OPENSSL_MANGLER(DIST_POINT_NAME_free)
# endif
#else
# ifndef _DIST_POINT_NAME_free
#  define _DIST_POINT_NAME_free OPENSSL_MANGLER_ASM(DIST_POINT_NAME_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DIST_POINT_NAME_it
#  define DIST_POINT_NAME_it OPENSSL_MANGLER(DIST_POINT_NAME_it)
# endif
#else
# ifndef _DIST_POINT_NAME_it
#  define _DIST_POINT_NAME_it OPENSSL_MANGLER_ASM(DIST_POINT_NAME_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DIST_POINT_NAME_new
#  define DIST_POINT_NAME_new OPENSSL_MANGLER(DIST_POINT_NAME_new)
# endif
#else
# ifndef _DIST_POINT_NAME_new
#  define _DIST_POINT_NAME_new OPENSSL_MANGLER_ASM(DIST_POINT_NAME_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DIST_POINT_free
#  define DIST_POINT_free OPENSSL_MANGLER(DIST_POINT_free)
# endif
#else
# ifndef _DIST_POINT_free
#  define _DIST_POINT_free OPENSSL_MANGLER_ASM(DIST_POINT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DIST_POINT_it
#  define DIST_POINT_it OPENSSL_MANGLER(DIST_POINT_it)
# endif
#else
# ifndef _DIST_POINT_it
#  define _DIST_POINT_it OPENSSL_MANGLER_ASM(DIST_POINT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DIST_POINT_new
#  define DIST_POINT_new OPENSSL_MANGLER(DIST_POINT_new)
# endif
#else
# ifndef _DIST_POINT_new
#  define _DIST_POINT_new OPENSSL_MANGLER_ASM(DIST_POINT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DIST_POINT_set_dpname
#  define DIST_POINT_set_dpname OPENSSL_MANGLER(DIST_POINT_set_dpname)
# endif
#else
# ifndef _DIST_POINT_set_dpname
#  define _DIST_POINT_set_dpname OPENSSL_MANGLER_ASM(DIST_POINT_set_dpname)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_OpenSSL
#  define DSA_OpenSSL OPENSSL_MANGLER(DSA_OpenSSL)
# endif
#else
# ifndef _DSA_OpenSSL
#  define _DSA_OpenSSL OPENSSL_MANGLER_ASM(DSA_OpenSSL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_SIG_free
#  define DSA_SIG_free OPENSSL_MANGLER(DSA_SIG_free)
# endif
#else
# ifndef _DSA_SIG_free
#  define _DSA_SIG_free OPENSSL_MANGLER_ASM(DSA_SIG_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_SIG_get0
#  define DSA_SIG_get0 OPENSSL_MANGLER(DSA_SIG_get0)
# endif
#else
# ifndef _DSA_SIG_get0
#  define _DSA_SIG_get0 OPENSSL_MANGLER_ASM(DSA_SIG_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_SIG_new
#  define DSA_SIG_new OPENSSL_MANGLER(DSA_SIG_new)
# endif
#else
# ifndef _DSA_SIG_new
#  define _DSA_SIG_new OPENSSL_MANGLER_ASM(DSA_SIG_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_SIG_set0
#  define DSA_SIG_set0 OPENSSL_MANGLER(DSA_SIG_set0)
# endif
#else
# ifndef _DSA_SIG_set0
#  define _DSA_SIG_set0 OPENSSL_MANGLER_ASM(DSA_SIG_set0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_bits
#  define DSA_bits OPENSSL_MANGLER(DSA_bits)
# endif
#else
# ifndef _DSA_bits
#  define _DSA_bits OPENSSL_MANGLER_ASM(DSA_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_clear_flags
#  define DSA_clear_flags OPENSSL_MANGLER(DSA_clear_flags)
# endif
#else
# ifndef _DSA_clear_flags
#  define _DSA_clear_flags OPENSSL_MANGLER_ASM(DSA_clear_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_do_sign
#  define DSA_do_sign OPENSSL_MANGLER(DSA_do_sign)
# endif
#else
# ifndef _DSA_do_sign
#  define _DSA_do_sign OPENSSL_MANGLER_ASM(DSA_do_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_do_verify
#  define DSA_do_verify OPENSSL_MANGLER(DSA_do_verify)
# endif
#else
# ifndef _DSA_do_verify
#  define _DSA_do_verify OPENSSL_MANGLER_ASM(DSA_do_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_dup_DH
#  define DSA_dup_DH OPENSSL_MANGLER(DSA_dup_DH)
# endif
#else
# ifndef _DSA_dup_DH
#  define _DSA_dup_DH OPENSSL_MANGLER_ASM(DSA_dup_DH)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_free
#  define DSA_free OPENSSL_MANGLER(DSA_free)
# endif
#else
# ifndef _DSA_free
#  define _DSA_free OPENSSL_MANGLER_ASM(DSA_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_generate_key
#  define DSA_generate_key OPENSSL_MANGLER(DSA_generate_key)
# endif
#else
# ifndef _DSA_generate_key
#  define _DSA_generate_key OPENSSL_MANGLER_ASM(DSA_generate_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_generate_parameters
#  define DSA_generate_parameters OPENSSL_MANGLER(DSA_generate_parameters)
# endif
#else
# ifndef _DSA_generate_parameters
#  define _DSA_generate_parameters OPENSSL_MANGLER_ASM(DSA_generate_parameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_generate_parameters_ex
#  define DSA_generate_parameters_ex OPENSSL_MANGLER(DSA_generate_parameters_ex)
# endif
#else
# ifndef _DSA_generate_parameters_ex
#  define _DSA_generate_parameters_ex OPENSSL_MANGLER_ASM(DSA_generate_parameters_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_get0_engine
#  define DSA_get0_engine OPENSSL_MANGLER(DSA_get0_engine)
# endif
#else
# ifndef _DSA_get0_engine
#  define _DSA_get0_engine OPENSSL_MANGLER_ASM(DSA_get0_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_get0_g
#  define DSA_get0_g OPENSSL_MANGLER(DSA_get0_g)
# endif
#else
# ifndef _DSA_get0_g
#  define _DSA_get0_g OPENSSL_MANGLER_ASM(DSA_get0_g)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_get0_key
#  define DSA_get0_key OPENSSL_MANGLER(DSA_get0_key)
# endif
#else
# ifndef _DSA_get0_key
#  define _DSA_get0_key OPENSSL_MANGLER_ASM(DSA_get0_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_get0_p
#  define DSA_get0_p OPENSSL_MANGLER(DSA_get0_p)
# endif
#else
# ifndef _DSA_get0_p
#  define _DSA_get0_p OPENSSL_MANGLER_ASM(DSA_get0_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_get0_pqg
#  define DSA_get0_pqg OPENSSL_MANGLER(DSA_get0_pqg)
# endif
#else
# ifndef _DSA_get0_pqg
#  define _DSA_get0_pqg OPENSSL_MANGLER_ASM(DSA_get0_pqg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_get0_priv_key
#  define DSA_get0_priv_key OPENSSL_MANGLER(DSA_get0_priv_key)
# endif
#else
# ifndef _DSA_get0_priv_key
#  define _DSA_get0_priv_key OPENSSL_MANGLER_ASM(DSA_get0_priv_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_get0_pub_key
#  define DSA_get0_pub_key OPENSSL_MANGLER(DSA_get0_pub_key)
# endif
#else
# ifndef _DSA_get0_pub_key
#  define _DSA_get0_pub_key OPENSSL_MANGLER_ASM(DSA_get0_pub_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_get0_q
#  define DSA_get0_q OPENSSL_MANGLER(DSA_get0_q)
# endif
#else
# ifndef _DSA_get0_q
#  define _DSA_get0_q OPENSSL_MANGLER_ASM(DSA_get0_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_get_default_method
#  define DSA_get_default_method OPENSSL_MANGLER(DSA_get_default_method)
# endif
#else
# ifndef _DSA_get_default_method
#  define _DSA_get_default_method OPENSSL_MANGLER_ASM(DSA_get_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_get_ex_data
#  define DSA_get_ex_data OPENSSL_MANGLER(DSA_get_ex_data)
# endif
#else
# ifndef _DSA_get_ex_data
#  define _DSA_get_ex_data OPENSSL_MANGLER_ASM(DSA_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_get_method
#  define DSA_get_method OPENSSL_MANGLER(DSA_get_method)
# endif
#else
# ifndef _DSA_get_method
#  define _DSA_get_method OPENSSL_MANGLER_ASM(DSA_get_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_dup
#  define DSA_meth_dup OPENSSL_MANGLER(DSA_meth_dup)
# endif
#else
# ifndef _DSA_meth_dup
#  define _DSA_meth_dup OPENSSL_MANGLER_ASM(DSA_meth_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_free
#  define DSA_meth_free OPENSSL_MANGLER(DSA_meth_free)
# endif
#else
# ifndef _DSA_meth_free
#  define _DSA_meth_free OPENSSL_MANGLER_ASM(DSA_meth_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get0_app_data
#  define DSA_meth_get0_app_data OPENSSL_MANGLER(DSA_meth_get0_app_data)
# endif
#else
# ifndef _DSA_meth_get0_app_data
#  define _DSA_meth_get0_app_data OPENSSL_MANGLER_ASM(DSA_meth_get0_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get0_name
#  define DSA_meth_get0_name OPENSSL_MANGLER(DSA_meth_get0_name)
# endif
#else
# ifndef _DSA_meth_get0_name
#  define _DSA_meth_get0_name OPENSSL_MANGLER_ASM(DSA_meth_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get_bn_mod_exp
#  define DSA_meth_get_bn_mod_exp OPENSSL_MANGLER(DSA_meth_get_bn_mod_exp)
# endif
#else
# ifndef _DSA_meth_get_bn_mod_exp
#  define _DSA_meth_get_bn_mod_exp OPENSSL_MANGLER_ASM(DSA_meth_get_bn_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get_finish
#  define DSA_meth_get_finish OPENSSL_MANGLER(DSA_meth_get_finish)
# endif
#else
# ifndef _DSA_meth_get_finish
#  define _DSA_meth_get_finish OPENSSL_MANGLER_ASM(DSA_meth_get_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get_flags
#  define DSA_meth_get_flags OPENSSL_MANGLER(DSA_meth_get_flags)
# endif
#else
# ifndef _DSA_meth_get_flags
#  define _DSA_meth_get_flags OPENSSL_MANGLER_ASM(DSA_meth_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get_init
#  define DSA_meth_get_init OPENSSL_MANGLER(DSA_meth_get_init)
# endif
#else
# ifndef _DSA_meth_get_init
#  define _DSA_meth_get_init OPENSSL_MANGLER_ASM(DSA_meth_get_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get_keygen
#  define DSA_meth_get_keygen OPENSSL_MANGLER(DSA_meth_get_keygen)
# endif
#else
# ifndef _DSA_meth_get_keygen
#  define _DSA_meth_get_keygen OPENSSL_MANGLER_ASM(DSA_meth_get_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get_mod_exp
#  define DSA_meth_get_mod_exp OPENSSL_MANGLER(DSA_meth_get_mod_exp)
# endif
#else
# ifndef _DSA_meth_get_mod_exp
#  define _DSA_meth_get_mod_exp OPENSSL_MANGLER_ASM(DSA_meth_get_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get_paramgen
#  define DSA_meth_get_paramgen OPENSSL_MANGLER(DSA_meth_get_paramgen)
# endif
#else
# ifndef _DSA_meth_get_paramgen
#  define _DSA_meth_get_paramgen OPENSSL_MANGLER_ASM(DSA_meth_get_paramgen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get_sign
#  define DSA_meth_get_sign OPENSSL_MANGLER(DSA_meth_get_sign)
# endif
#else
# ifndef _DSA_meth_get_sign
#  define _DSA_meth_get_sign OPENSSL_MANGLER_ASM(DSA_meth_get_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get_sign_setup
#  define DSA_meth_get_sign_setup OPENSSL_MANGLER(DSA_meth_get_sign_setup)
# endif
#else
# ifndef _DSA_meth_get_sign_setup
#  define _DSA_meth_get_sign_setup OPENSSL_MANGLER_ASM(DSA_meth_get_sign_setup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_get_verify
#  define DSA_meth_get_verify OPENSSL_MANGLER(DSA_meth_get_verify)
# endif
#else
# ifndef _DSA_meth_get_verify
#  define _DSA_meth_get_verify OPENSSL_MANGLER_ASM(DSA_meth_get_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_new
#  define DSA_meth_new OPENSSL_MANGLER(DSA_meth_new)
# endif
#else
# ifndef _DSA_meth_new
#  define _DSA_meth_new OPENSSL_MANGLER_ASM(DSA_meth_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set0_app_data
#  define DSA_meth_set0_app_data OPENSSL_MANGLER(DSA_meth_set0_app_data)
# endif
#else
# ifndef _DSA_meth_set0_app_data
#  define _DSA_meth_set0_app_data OPENSSL_MANGLER_ASM(DSA_meth_set0_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set1_name
#  define DSA_meth_set1_name OPENSSL_MANGLER(DSA_meth_set1_name)
# endif
#else
# ifndef _DSA_meth_set1_name
#  define _DSA_meth_set1_name OPENSSL_MANGLER_ASM(DSA_meth_set1_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set_bn_mod_exp
#  define DSA_meth_set_bn_mod_exp OPENSSL_MANGLER(DSA_meth_set_bn_mod_exp)
# endif
#else
# ifndef _DSA_meth_set_bn_mod_exp
#  define _DSA_meth_set_bn_mod_exp OPENSSL_MANGLER_ASM(DSA_meth_set_bn_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set_finish
#  define DSA_meth_set_finish OPENSSL_MANGLER(DSA_meth_set_finish)
# endif
#else
# ifndef _DSA_meth_set_finish
#  define _DSA_meth_set_finish OPENSSL_MANGLER_ASM(DSA_meth_set_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set_flags
#  define DSA_meth_set_flags OPENSSL_MANGLER(DSA_meth_set_flags)
# endif
#else
# ifndef _DSA_meth_set_flags
#  define _DSA_meth_set_flags OPENSSL_MANGLER_ASM(DSA_meth_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set_init
#  define DSA_meth_set_init OPENSSL_MANGLER(DSA_meth_set_init)
# endif
#else
# ifndef _DSA_meth_set_init
#  define _DSA_meth_set_init OPENSSL_MANGLER_ASM(DSA_meth_set_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set_keygen
#  define DSA_meth_set_keygen OPENSSL_MANGLER(DSA_meth_set_keygen)
# endif
#else
# ifndef _DSA_meth_set_keygen
#  define _DSA_meth_set_keygen OPENSSL_MANGLER_ASM(DSA_meth_set_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set_mod_exp
#  define DSA_meth_set_mod_exp OPENSSL_MANGLER(DSA_meth_set_mod_exp)
# endif
#else
# ifndef _DSA_meth_set_mod_exp
#  define _DSA_meth_set_mod_exp OPENSSL_MANGLER_ASM(DSA_meth_set_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set_paramgen
#  define DSA_meth_set_paramgen OPENSSL_MANGLER(DSA_meth_set_paramgen)
# endif
#else
# ifndef _DSA_meth_set_paramgen
#  define _DSA_meth_set_paramgen OPENSSL_MANGLER_ASM(DSA_meth_set_paramgen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set_sign
#  define DSA_meth_set_sign OPENSSL_MANGLER(DSA_meth_set_sign)
# endif
#else
# ifndef _DSA_meth_set_sign
#  define _DSA_meth_set_sign OPENSSL_MANGLER_ASM(DSA_meth_set_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set_sign_setup
#  define DSA_meth_set_sign_setup OPENSSL_MANGLER(DSA_meth_set_sign_setup)
# endif
#else
# ifndef _DSA_meth_set_sign_setup
#  define _DSA_meth_set_sign_setup OPENSSL_MANGLER_ASM(DSA_meth_set_sign_setup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_meth_set_verify
#  define DSA_meth_set_verify OPENSSL_MANGLER(DSA_meth_set_verify)
# endif
#else
# ifndef _DSA_meth_set_verify
#  define _DSA_meth_set_verify OPENSSL_MANGLER_ASM(DSA_meth_set_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_new
#  define DSA_new OPENSSL_MANGLER(DSA_new)
# endif
#else
# ifndef _DSA_new
#  define _DSA_new OPENSSL_MANGLER_ASM(DSA_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_new_method
#  define DSA_new_method OPENSSL_MANGLER(DSA_new_method)
# endif
#else
# ifndef _DSA_new_method
#  define _DSA_new_method OPENSSL_MANGLER_ASM(DSA_new_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_print
#  define DSA_print OPENSSL_MANGLER(DSA_print)
# endif
#else
# ifndef _DSA_print
#  define _DSA_print OPENSSL_MANGLER_ASM(DSA_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_print_fp
#  define DSA_print_fp OPENSSL_MANGLER(DSA_print_fp)
# endif
#else
# ifndef _DSA_print_fp
#  define _DSA_print_fp OPENSSL_MANGLER_ASM(DSA_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_security_bits
#  define DSA_security_bits OPENSSL_MANGLER(DSA_security_bits)
# endif
#else
# ifndef _DSA_security_bits
#  define _DSA_security_bits OPENSSL_MANGLER_ASM(DSA_security_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_set0_key
#  define DSA_set0_key OPENSSL_MANGLER(DSA_set0_key)
# endif
#else
# ifndef _DSA_set0_key
#  define _DSA_set0_key OPENSSL_MANGLER_ASM(DSA_set0_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_set0_pqg
#  define DSA_set0_pqg OPENSSL_MANGLER(DSA_set0_pqg)
# endif
#else
# ifndef _DSA_set0_pqg
#  define _DSA_set0_pqg OPENSSL_MANGLER_ASM(DSA_set0_pqg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_set_default_method
#  define DSA_set_default_method OPENSSL_MANGLER(DSA_set_default_method)
# endif
#else
# ifndef _DSA_set_default_method
#  define _DSA_set_default_method OPENSSL_MANGLER_ASM(DSA_set_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_set_ex_data
#  define DSA_set_ex_data OPENSSL_MANGLER(DSA_set_ex_data)
# endif
#else
# ifndef _DSA_set_ex_data
#  define _DSA_set_ex_data OPENSSL_MANGLER_ASM(DSA_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_set_flags
#  define DSA_set_flags OPENSSL_MANGLER(DSA_set_flags)
# endif
#else
# ifndef _DSA_set_flags
#  define _DSA_set_flags OPENSSL_MANGLER_ASM(DSA_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_set_method
#  define DSA_set_method OPENSSL_MANGLER(DSA_set_method)
# endif
#else
# ifndef _DSA_set_method
#  define _DSA_set_method OPENSSL_MANGLER_ASM(DSA_set_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_sign
#  define DSA_sign OPENSSL_MANGLER(DSA_sign)
# endif
#else
# ifndef _DSA_sign
#  define _DSA_sign OPENSSL_MANGLER_ASM(DSA_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_sign_setup
#  define DSA_sign_setup OPENSSL_MANGLER(DSA_sign_setup)
# endif
#else
# ifndef _DSA_sign_setup
#  define _DSA_sign_setup OPENSSL_MANGLER_ASM(DSA_sign_setup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_size
#  define DSA_size OPENSSL_MANGLER(DSA_size)
# endif
#else
# ifndef _DSA_size
#  define _DSA_size OPENSSL_MANGLER_ASM(DSA_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_test_flags
#  define DSA_test_flags OPENSSL_MANGLER(DSA_test_flags)
# endif
#else
# ifndef _DSA_test_flags
#  define _DSA_test_flags OPENSSL_MANGLER_ASM(DSA_test_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_up_ref
#  define DSA_up_ref OPENSSL_MANGLER(DSA_up_ref)
# endif
#else
# ifndef _DSA_up_ref
#  define _DSA_up_ref OPENSSL_MANGLER_ASM(DSA_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSA_verify
#  define DSA_verify OPENSSL_MANGLER(DSA_verify)
# endif
#else
# ifndef _DSA_verify
#  define _DSA_verify OPENSSL_MANGLER_ASM(DSA_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSAparams_dup
#  define DSAparams_dup OPENSSL_MANGLER(DSAparams_dup)
# endif
#else
# ifndef _DSAparams_dup
#  define _DSAparams_dup OPENSSL_MANGLER_ASM(DSAparams_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSAparams_print
#  define DSAparams_print OPENSSL_MANGLER(DSAparams_print)
# endif
#else
# ifndef _DSAparams_print
#  define _DSAparams_print OPENSSL_MANGLER_ASM(DSAparams_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSAparams_print_fp
#  define DSAparams_print_fp OPENSSL_MANGLER(DSAparams_print_fp)
# endif
#else
# ifndef _DSAparams_print_fp
#  define _DSAparams_print_fp OPENSSL_MANGLER_ASM(DSAparams_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_METHOD_openssl
#  define DSO_METHOD_openssl OPENSSL_MANGLER(DSO_METHOD_openssl)
# endif
#else
# ifndef _DSO_METHOD_openssl
#  define _DSO_METHOD_openssl OPENSSL_MANGLER_ASM(DSO_METHOD_openssl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_bind_func
#  define DSO_bind_func OPENSSL_MANGLER(DSO_bind_func)
# endif
#else
# ifndef _DSO_bind_func
#  define _DSO_bind_func OPENSSL_MANGLER_ASM(DSO_bind_func)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_convert_filename
#  define DSO_convert_filename OPENSSL_MANGLER(DSO_convert_filename)
# endif
#else
# ifndef _DSO_convert_filename
#  define _DSO_convert_filename OPENSSL_MANGLER_ASM(DSO_convert_filename)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_ctrl
#  define DSO_ctrl OPENSSL_MANGLER(DSO_ctrl)
# endif
#else
# ifndef _DSO_ctrl
#  define _DSO_ctrl OPENSSL_MANGLER_ASM(DSO_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_dsobyaddr
#  define DSO_dsobyaddr OPENSSL_MANGLER(DSO_dsobyaddr)
# endif
#else
# ifndef _DSO_dsobyaddr
#  define _DSO_dsobyaddr OPENSSL_MANGLER_ASM(DSO_dsobyaddr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_flags
#  define DSO_flags OPENSSL_MANGLER(DSO_flags)
# endif
#else
# ifndef _DSO_flags
#  define _DSO_flags OPENSSL_MANGLER_ASM(DSO_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_free
#  define DSO_free OPENSSL_MANGLER(DSO_free)
# endif
#else
# ifndef _DSO_free
#  define _DSO_free OPENSSL_MANGLER_ASM(DSO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_get_filename
#  define DSO_get_filename OPENSSL_MANGLER(DSO_get_filename)
# endif
#else
# ifndef _DSO_get_filename
#  define _DSO_get_filename OPENSSL_MANGLER_ASM(DSO_get_filename)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_global_lookup
#  define DSO_global_lookup OPENSSL_MANGLER(DSO_global_lookup)
# endif
#else
# ifndef _DSO_global_lookup
#  define _DSO_global_lookup OPENSSL_MANGLER_ASM(DSO_global_lookup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_load
#  define DSO_load OPENSSL_MANGLER(DSO_load)
# endif
#else
# ifndef _DSO_load
#  define _DSO_load OPENSSL_MANGLER_ASM(DSO_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_merge
#  define DSO_merge OPENSSL_MANGLER(DSO_merge)
# endif
#else
# ifndef _DSO_merge
#  define _DSO_merge OPENSSL_MANGLER_ASM(DSO_merge)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_new
#  define DSO_new OPENSSL_MANGLER(DSO_new)
# endif
#else
# ifndef _DSO_new
#  define _DSO_new OPENSSL_MANGLER_ASM(DSO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_pathbyaddr
#  define DSO_pathbyaddr OPENSSL_MANGLER(DSO_pathbyaddr)
# endif
#else
# ifndef _DSO_pathbyaddr
#  define _DSO_pathbyaddr OPENSSL_MANGLER_ASM(DSO_pathbyaddr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_set_filename
#  define DSO_set_filename OPENSSL_MANGLER(DSO_set_filename)
# endif
#else
# ifndef _DSO_set_filename
#  define _DSO_set_filename OPENSSL_MANGLER_ASM(DSO_set_filename)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DSO_up_ref
#  define DSO_up_ref OPENSSL_MANGLER(DSO_up_ref)
# endif
#else
# ifndef _DSO_up_ref
#  define _DSO_up_ref OPENSSL_MANGLER_ASM(DSO_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLS_RECORD_LAYER_clear
#  define DTLS_RECORD_LAYER_clear OPENSSL_MANGLER(DTLS_RECORD_LAYER_clear)
# endif
#else
# ifndef _DTLS_RECORD_LAYER_clear
#  define _DTLS_RECORD_LAYER_clear OPENSSL_MANGLER_ASM(DTLS_RECORD_LAYER_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLS_RECORD_LAYER_free
#  define DTLS_RECORD_LAYER_free OPENSSL_MANGLER(DTLS_RECORD_LAYER_free)
# endif
#else
# ifndef _DTLS_RECORD_LAYER_free
#  define _DTLS_RECORD_LAYER_free OPENSSL_MANGLER_ASM(DTLS_RECORD_LAYER_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLS_RECORD_LAYER_new
#  define DTLS_RECORD_LAYER_new OPENSSL_MANGLER(DTLS_RECORD_LAYER_new)
# endif
#else
# ifndef _DTLS_RECORD_LAYER_new
#  define _DTLS_RECORD_LAYER_new OPENSSL_MANGLER_ASM(DTLS_RECORD_LAYER_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLS_RECORD_LAYER_set_saved_w_epoch
#  define DTLS_RECORD_LAYER_set_saved_w_epoch OPENSSL_MANGLER(DTLS_RECORD_LAYER_set_saved_w_epoch)
# endif
#else
# ifndef _DTLS_RECORD_LAYER_set_saved_w_epoch
#  define _DTLS_RECORD_LAYER_set_saved_w_epoch OPENSSL_MANGLER_ASM(DTLS_RECORD_LAYER_set_saved_w_epoch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLS_RECORD_LAYER_set_write_sequence
#  define DTLS_RECORD_LAYER_set_write_sequence OPENSSL_MANGLER(DTLS_RECORD_LAYER_set_write_sequence)
# endif
#else
# ifndef _DTLS_RECORD_LAYER_set_write_sequence
#  define _DTLS_RECORD_LAYER_set_write_sequence OPENSSL_MANGLER_ASM(DTLS_RECORD_LAYER_set_write_sequence)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLS_client_method
#  define DTLS_client_method OPENSSL_MANGLER(DTLS_client_method)
# endif
#else
# ifndef _DTLS_client_method
#  define _DTLS_client_method OPENSSL_MANGLER_ASM(DTLS_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLS_get_data_mtu
#  define DTLS_get_data_mtu OPENSSL_MANGLER(DTLS_get_data_mtu)
# endif
#else
# ifndef _DTLS_get_data_mtu
#  define _DTLS_get_data_mtu OPENSSL_MANGLER_ASM(DTLS_get_data_mtu)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLS_method
#  define DTLS_method OPENSSL_MANGLER(DTLS_method)
# endif
#else
# ifndef _DTLS_method
#  define _DTLS_method OPENSSL_MANGLER_ASM(DTLS_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLS_server_method
#  define DTLS_server_method OPENSSL_MANGLER(DTLS_server_method)
# endif
#else
# ifndef _DTLS_server_method
#  define _DTLS_server_method OPENSSL_MANGLER_ASM(DTLS_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLS_set_timer_cb
#  define DTLS_set_timer_cb OPENSSL_MANGLER(DTLS_set_timer_cb)
# endif
#else
# ifndef _DTLS_set_timer_cb
#  define _DTLS_set_timer_cb OPENSSL_MANGLER_ASM(DTLS_set_timer_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLSv1_2_client_method
#  define DTLSv1_2_client_method OPENSSL_MANGLER(DTLSv1_2_client_method)
# endif
#else
# ifndef _DTLSv1_2_client_method
#  define _DTLSv1_2_client_method OPENSSL_MANGLER_ASM(DTLSv1_2_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLSv1_2_enc_data
#  define DTLSv1_2_enc_data OPENSSL_MANGLER(DTLSv1_2_enc_data)
# endif
#else
# ifndef _DTLSv1_2_enc_data
#  define _DTLSv1_2_enc_data OPENSSL_MANGLER_ASM(DTLSv1_2_enc_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLSv1_2_method
#  define DTLSv1_2_method OPENSSL_MANGLER(DTLSv1_2_method)
# endif
#else
# ifndef _DTLSv1_2_method
#  define _DTLSv1_2_method OPENSSL_MANGLER_ASM(DTLSv1_2_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLSv1_2_server_method
#  define DTLSv1_2_server_method OPENSSL_MANGLER(DTLSv1_2_server_method)
# endif
#else
# ifndef _DTLSv1_2_server_method
#  define _DTLSv1_2_server_method OPENSSL_MANGLER_ASM(DTLSv1_2_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLSv1_client_method
#  define DTLSv1_client_method OPENSSL_MANGLER(DTLSv1_client_method)
# endif
#else
# ifndef _DTLSv1_client_method
#  define _DTLSv1_client_method OPENSSL_MANGLER_ASM(DTLSv1_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLSv1_enc_data
#  define DTLSv1_enc_data OPENSSL_MANGLER(DTLSv1_enc_data)
# endif
#else
# ifndef _DTLSv1_enc_data
#  define _DTLSv1_enc_data OPENSSL_MANGLER_ASM(DTLSv1_enc_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLSv1_listen
#  define DTLSv1_listen OPENSSL_MANGLER(DTLSv1_listen)
# endif
#else
# ifndef _DTLSv1_listen
#  define _DTLSv1_listen OPENSSL_MANGLER_ASM(DTLSv1_listen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLSv1_method
#  define DTLSv1_method OPENSSL_MANGLER(DTLSv1_method)
# endif
#else
# ifndef _DTLSv1_method
#  define _DTLSv1_method OPENSSL_MANGLER_ASM(DTLSv1_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef DTLSv1_server_method
#  define DTLSv1_server_method OPENSSL_MANGLER(DTLSv1_server_method)
# endif
#else
# ifndef _DTLSv1_server_method
#  define _DTLSv1_server_method OPENSSL_MANGLER_ASM(DTLSv1_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDH_KDF_X9_62
#  define ECDH_KDF_X9_62 OPENSSL_MANGLER(ECDH_KDF_X9_62)
# endif
#else
# ifndef _ECDH_KDF_X9_62
#  define _ECDH_KDF_X9_62 OPENSSL_MANGLER_ASM(ECDH_KDF_X9_62)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDH_compute_key
#  define ECDH_compute_key OPENSSL_MANGLER(ECDH_compute_key)
# endif
#else
# ifndef _ECDH_compute_key
#  define _ECDH_compute_key OPENSSL_MANGLER_ASM(ECDH_compute_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_SIG_free
#  define ECDSA_SIG_free OPENSSL_MANGLER(ECDSA_SIG_free)
# endif
#else
# ifndef _ECDSA_SIG_free
#  define _ECDSA_SIG_free OPENSSL_MANGLER_ASM(ECDSA_SIG_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_SIG_get0
#  define ECDSA_SIG_get0 OPENSSL_MANGLER(ECDSA_SIG_get0)
# endif
#else
# ifndef _ECDSA_SIG_get0
#  define _ECDSA_SIG_get0 OPENSSL_MANGLER_ASM(ECDSA_SIG_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_SIG_get0_r
#  define ECDSA_SIG_get0_r OPENSSL_MANGLER(ECDSA_SIG_get0_r)
# endif
#else
# ifndef _ECDSA_SIG_get0_r
#  define _ECDSA_SIG_get0_r OPENSSL_MANGLER_ASM(ECDSA_SIG_get0_r)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_SIG_get0_s
#  define ECDSA_SIG_get0_s OPENSSL_MANGLER(ECDSA_SIG_get0_s)
# endif
#else
# ifndef _ECDSA_SIG_get0_s
#  define _ECDSA_SIG_get0_s OPENSSL_MANGLER_ASM(ECDSA_SIG_get0_s)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_SIG_new
#  define ECDSA_SIG_new OPENSSL_MANGLER(ECDSA_SIG_new)
# endif
#else
# ifndef _ECDSA_SIG_new
#  define _ECDSA_SIG_new OPENSSL_MANGLER_ASM(ECDSA_SIG_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_SIG_set0
#  define ECDSA_SIG_set0 OPENSSL_MANGLER(ECDSA_SIG_set0)
# endif
#else
# ifndef _ECDSA_SIG_set0
#  define _ECDSA_SIG_set0 OPENSSL_MANGLER_ASM(ECDSA_SIG_set0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_do_sign
#  define ECDSA_do_sign OPENSSL_MANGLER(ECDSA_do_sign)
# endif
#else
# ifndef _ECDSA_do_sign
#  define _ECDSA_do_sign OPENSSL_MANGLER_ASM(ECDSA_do_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_do_sign_ex
#  define ECDSA_do_sign_ex OPENSSL_MANGLER(ECDSA_do_sign_ex)
# endif
#else
# ifndef _ECDSA_do_sign_ex
#  define _ECDSA_do_sign_ex OPENSSL_MANGLER_ASM(ECDSA_do_sign_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_do_verify
#  define ECDSA_do_verify OPENSSL_MANGLER(ECDSA_do_verify)
# endif
#else
# ifndef _ECDSA_do_verify
#  define _ECDSA_do_verify OPENSSL_MANGLER_ASM(ECDSA_do_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_sign
#  define ECDSA_sign OPENSSL_MANGLER(ECDSA_sign)
# endif
#else
# ifndef _ECDSA_sign
#  define _ECDSA_sign OPENSSL_MANGLER_ASM(ECDSA_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_sign_ex
#  define ECDSA_sign_ex OPENSSL_MANGLER(ECDSA_sign_ex)
# endif
#else
# ifndef _ECDSA_sign_ex
#  define _ECDSA_sign_ex OPENSSL_MANGLER_ASM(ECDSA_sign_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_sign_setup
#  define ECDSA_sign_setup OPENSSL_MANGLER(ECDSA_sign_setup)
# endif
#else
# ifndef _ECDSA_sign_setup
#  define _ECDSA_sign_setup OPENSSL_MANGLER_ASM(ECDSA_sign_setup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_size
#  define ECDSA_size OPENSSL_MANGLER(ECDSA_size)
# endif
#else
# ifndef _ECDSA_size
#  define _ECDSA_size OPENSSL_MANGLER_ASM(ECDSA_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECDSA_verify
#  define ECDSA_verify OPENSSL_MANGLER(ECDSA_verify)
# endif
#else
# ifndef _ECDSA_verify
#  define _ECDSA_verify OPENSSL_MANGLER_ASM(ECDSA_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECPARAMETERS_free
#  define ECPARAMETERS_free OPENSSL_MANGLER(ECPARAMETERS_free)
# endif
#else
# ifndef _ECPARAMETERS_free
#  define _ECPARAMETERS_free OPENSSL_MANGLER_ASM(ECPARAMETERS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECPARAMETERS_it
#  define ECPARAMETERS_it OPENSSL_MANGLER(ECPARAMETERS_it)
# endif
#else
# ifndef _ECPARAMETERS_it
#  define _ECPARAMETERS_it OPENSSL_MANGLER_ASM(ECPARAMETERS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECPARAMETERS_new
#  define ECPARAMETERS_new OPENSSL_MANGLER(ECPARAMETERS_new)
# endif
#else
# ifndef _ECPARAMETERS_new
#  define _ECPARAMETERS_new OPENSSL_MANGLER_ASM(ECPARAMETERS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECPKPARAMETERS_free
#  define ECPKPARAMETERS_free OPENSSL_MANGLER(ECPKPARAMETERS_free)
# endif
#else
# ifndef _ECPKPARAMETERS_free
#  define _ECPKPARAMETERS_free OPENSSL_MANGLER_ASM(ECPKPARAMETERS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECPKPARAMETERS_it
#  define ECPKPARAMETERS_it OPENSSL_MANGLER(ECPKPARAMETERS_it)
# endif
#else
# ifndef _ECPKPARAMETERS_it
#  define _ECPKPARAMETERS_it OPENSSL_MANGLER_ASM(ECPKPARAMETERS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECPKPARAMETERS_new
#  define ECPKPARAMETERS_new OPENSSL_MANGLER(ECPKPARAMETERS_new)
# endif
#else
# ifndef _ECPKPARAMETERS_new
#  define _ECPKPARAMETERS_new OPENSSL_MANGLER_ASM(ECPKPARAMETERS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECPKParameters_print
#  define ECPKParameters_print OPENSSL_MANGLER(ECPKParameters_print)
# endif
#else
# ifndef _ECPKParameters_print
#  define _ECPKParameters_print OPENSSL_MANGLER_ASM(ECPKParameters_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECPKParameters_print_fp
#  define ECPKParameters_print_fp OPENSSL_MANGLER(ECPKParameters_print_fp)
# endif
#else
# ifndef _ECPKParameters_print_fp
#  define _ECPKParameters_print_fp OPENSSL_MANGLER_ASM(ECPKParameters_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECParameters_print
#  define ECParameters_print OPENSSL_MANGLER(ECParameters_print)
# endif
#else
# ifndef _ECParameters_print
#  define _ECParameters_print OPENSSL_MANGLER_ASM(ECParameters_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ECParameters_print_fp
#  define ECParameters_print_fp OPENSSL_MANGLER(ECParameters_print_fp)
# endif
#else
# ifndef _ECParameters_print_fp
#  define _ECParameters_print_fp OPENSSL_MANGLER_ASM(ECParameters_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GF2m_simple_method
#  define EC_GF2m_simple_method OPENSSL_MANGLER(EC_GF2m_simple_method)
# endif
#else
# ifndef _EC_GF2m_simple_method
#  define _EC_GF2m_simple_method OPENSSL_MANGLER_ASM(EC_GF2m_simple_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GFp_mont_method
#  define EC_GFp_mont_method OPENSSL_MANGLER(EC_GFp_mont_method)
# endif
#else
# ifndef _EC_GFp_mont_method
#  define _EC_GFp_mont_method OPENSSL_MANGLER_ASM(EC_GFp_mont_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GFp_nist_method
#  define EC_GFp_nist_method OPENSSL_MANGLER(EC_GFp_nist_method)
# endif
#else
# ifndef _EC_GFp_nist_method
#  define _EC_GFp_nist_method OPENSSL_MANGLER_ASM(EC_GFp_nist_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GFp_nistz256_method
#  define EC_GFp_nistz256_method OPENSSL_MANGLER(EC_GFp_nistz256_method)
# endif
#else
# ifndef _EC_GFp_nistz256_method
#  define _EC_GFp_nistz256_method OPENSSL_MANGLER_ASM(EC_GFp_nistz256_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GFp_simple_method
#  define EC_GFp_simple_method OPENSSL_MANGLER(EC_GFp_simple_method)
# endif
#else
# ifndef _EC_GFp_simple_method
#  define _EC_GFp_simple_method OPENSSL_MANGLER_ASM(EC_GFp_simple_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_check
#  define EC_GROUP_check OPENSSL_MANGLER(EC_GROUP_check)
# endif
#else
# ifndef _EC_GROUP_check
#  define _EC_GROUP_check OPENSSL_MANGLER_ASM(EC_GROUP_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_check_discriminant
#  define EC_GROUP_check_discriminant OPENSSL_MANGLER(EC_GROUP_check_discriminant)
# endif
#else
# ifndef _EC_GROUP_check_discriminant
#  define _EC_GROUP_check_discriminant OPENSSL_MANGLER_ASM(EC_GROUP_check_discriminant)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_check_named_curve
#  define EC_GROUP_check_named_curve OPENSSL_MANGLER(EC_GROUP_check_named_curve)
# endif
#else
# ifndef _EC_GROUP_check_named_curve
#  define _EC_GROUP_check_named_curve OPENSSL_MANGLER_ASM(EC_GROUP_check_named_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_clear_free
#  define EC_GROUP_clear_free OPENSSL_MANGLER(EC_GROUP_clear_free)
# endif
#else
# ifndef _EC_GROUP_clear_free
#  define _EC_GROUP_clear_free OPENSSL_MANGLER_ASM(EC_GROUP_clear_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_cmp
#  define EC_GROUP_cmp OPENSSL_MANGLER(EC_GROUP_cmp)
# endif
#else
# ifndef _EC_GROUP_cmp
#  define _EC_GROUP_cmp OPENSSL_MANGLER_ASM(EC_GROUP_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_copy
#  define EC_GROUP_copy OPENSSL_MANGLER(EC_GROUP_copy)
# endif
#else
# ifndef _EC_GROUP_copy
#  define _EC_GROUP_copy OPENSSL_MANGLER_ASM(EC_GROUP_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_dup
#  define EC_GROUP_dup OPENSSL_MANGLER(EC_GROUP_dup)
# endif
#else
# ifndef _EC_GROUP_dup
#  define _EC_GROUP_dup OPENSSL_MANGLER_ASM(EC_GROUP_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_free
#  define EC_GROUP_free OPENSSL_MANGLER(EC_GROUP_free)
# endif
#else
# ifndef _EC_GROUP_free
#  define _EC_GROUP_free OPENSSL_MANGLER_ASM(EC_GROUP_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get0_cofactor
#  define EC_GROUP_get0_cofactor OPENSSL_MANGLER(EC_GROUP_get0_cofactor)
# endif
#else
# ifndef _EC_GROUP_get0_cofactor
#  define _EC_GROUP_get0_cofactor OPENSSL_MANGLER_ASM(EC_GROUP_get0_cofactor)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get0_field
#  define EC_GROUP_get0_field OPENSSL_MANGLER(EC_GROUP_get0_field)
# endif
#else
# ifndef _EC_GROUP_get0_field
#  define _EC_GROUP_get0_field OPENSSL_MANGLER_ASM(EC_GROUP_get0_field)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get0_generator
#  define EC_GROUP_get0_generator OPENSSL_MANGLER(EC_GROUP_get0_generator)
# endif
#else
# ifndef _EC_GROUP_get0_generator
#  define _EC_GROUP_get0_generator OPENSSL_MANGLER_ASM(EC_GROUP_get0_generator)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get0_order
#  define EC_GROUP_get0_order OPENSSL_MANGLER(EC_GROUP_get0_order)
# endif
#else
# ifndef _EC_GROUP_get0_order
#  define _EC_GROUP_get0_order OPENSSL_MANGLER_ASM(EC_GROUP_get0_order)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get0_seed
#  define EC_GROUP_get0_seed OPENSSL_MANGLER(EC_GROUP_get0_seed)
# endif
#else
# ifndef _EC_GROUP_get0_seed
#  define _EC_GROUP_get0_seed OPENSSL_MANGLER_ASM(EC_GROUP_get0_seed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_asn1_flag
#  define EC_GROUP_get_asn1_flag OPENSSL_MANGLER(EC_GROUP_get_asn1_flag)
# endif
#else
# ifndef _EC_GROUP_get_asn1_flag
#  define _EC_GROUP_get_asn1_flag OPENSSL_MANGLER_ASM(EC_GROUP_get_asn1_flag)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_basis_type
#  define EC_GROUP_get_basis_type OPENSSL_MANGLER(EC_GROUP_get_basis_type)
# endif
#else
# ifndef _EC_GROUP_get_basis_type
#  define _EC_GROUP_get_basis_type OPENSSL_MANGLER_ASM(EC_GROUP_get_basis_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_cofactor
#  define EC_GROUP_get_cofactor OPENSSL_MANGLER(EC_GROUP_get_cofactor)
# endif
#else
# ifndef _EC_GROUP_get_cofactor
#  define _EC_GROUP_get_cofactor OPENSSL_MANGLER_ASM(EC_GROUP_get_cofactor)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_curve
#  define EC_GROUP_get_curve OPENSSL_MANGLER(EC_GROUP_get_curve)
# endif
#else
# ifndef _EC_GROUP_get_curve
#  define _EC_GROUP_get_curve OPENSSL_MANGLER_ASM(EC_GROUP_get_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_curve_GF2m
#  define EC_GROUP_get_curve_GF2m OPENSSL_MANGLER(EC_GROUP_get_curve_GF2m)
# endif
#else
# ifndef _EC_GROUP_get_curve_GF2m
#  define _EC_GROUP_get_curve_GF2m OPENSSL_MANGLER_ASM(EC_GROUP_get_curve_GF2m)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_curve_GFp
#  define EC_GROUP_get_curve_GFp OPENSSL_MANGLER(EC_GROUP_get_curve_GFp)
# endif
#else
# ifndef _EC_GROUP_get_curve_GFp
#  define _EC_GROUP_get_curve_GFp OPENSSL_MANGLER_ASM(EC_GROUP_get_curve_GFp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_curve_name
#  define EC_GROUP_get_curve_name OPENSSL_MANGLER(EC_GROUP_get_curve_name)
# endif
#else
# ifndef _EC_GROUP_get_curve_name
#  define _EC_GROUP_get_curve_name OPENSSL_MANGLER_ASM(EC_GROUP_get_curve_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_degree
#  define EC_GROUP_get_degree OPENSSL_MANGLER(EC_GROUP_get_degree)
# endif
#else
# ifndef _EC_GROUP_get_degree
#  define _EC_GROUP_get_degree OPENSSL_MANGLER_ASM(EC_GROUP_get_degree)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_ecparameters
#  define EC_GROUP_get_ecparameters OPENSSL_MANGLER(EC_GROUP_get_ecparameters)
# endif
#else
# ifndef _EC_GROUP_get_ecparameters
#  define _EC_GROUP_get_ecparameters OPENSSL_MANGLER_ASM(EC_GROUP_get_ecparameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_ecpkparameters
#  define EC_GROUP_get_ecpkparameters OPENSSL_MANGLER(EC_GROUP_get_ecpkparameters)
# endif
#else
# ifndef _EC_GROUP_get_ecpkparameters
#  define _EC_GROUP_get_ecpkparameters OPENSSL_MANGLER_ASM(EC_GROUP_get_ecpkparameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_field_type
#  define EC_GROUP_get_field_type OPENSSL_MANGLER(EC_GROUP_get_field_type)
# endif
#else
# ifndef _EC_GROUP_get_field_type
#  define _EC_GROUP_get_field_type OPENSSL_MANGLER_ASM(EC_GROUP_get_field_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_mont_data
#  define EC_GROUP_get_mont_data OPENSSL_MANGLER(EC_GROUP_get_mont_data)
# endif
#else
# ifndef _EC_GROUP_get_mont_data
#  define _EC_GROUP_get_mont_data OPENSSL_MANGLER_ASM(EC_GROUP_get_mont_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_order
#  define EC_GROUP_get_order OPENSSL_MANGLER(EC_GROUP_get_order)
# endif
#else
# ifndef _EC_GROUP_get_order
#  define _EC_GROUP_get_order OPENSSL_MANGLER_ASM(EC_GROUP_get_order)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_pentanomial_basis
#  define EC_GROUP_get_pentanomial_basis OPENSSL_MANGLER(EC_GROUP_get_pentanomial_basis)
# endif
#else
# ifndef _EC_GROUP_get_pentanomial_basis
#  define _EC_GROUP_get_pentanomial_basis OPENSSL_MANGLER_ASM(EC_GROUP_get_pentanomial_basis)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_point_conversion_form
#  define EC_GROUP_get_point_conversion_form OPENSSL_MANGLER(EC_GROUP_get_point_conversion_form)
# endif
#else
# ifndef _EC_GROUP_get_point_conversion_form
#  define _EC_GROUP_get_point_conversion_form OPENSSL_MANGLER_ASM(EC_GROUP_get_point_conversion_form)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_seed_len
#  define EC_GROUP_get_seed_len OPENSSL_MANGLER(EC_GROUP_get_seed_len)
# endif
#else
# ifndef _EC_GROUP_get_seed_len
#  define _EC_GROUP_get_seed_len OPENSSL_MANGLER_ASM(EC_GROUP_get_seed_len)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_get_trinomial_basis
#  define EC_GROUP_get_trinomial_basis OPENSSL_MANGLER(EC_GROUP_get_trinomial_basis)
# endif
#else
# ifndef _EC_GROUP_get_trinomial_basis
#  define _EC_GROUP_get_trinomial_basis OPENSSL_MANGLER_ASM(EC_GROUP_get_trinomial_basis)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_have_precompute_mult
#  define EC_GROUP_have_precompute_mult OPENSSL_MANGLER(EC_GROUP_have_precompute_mult)
# endif
#else
# ifndef _EC_GROUP_have_precompute_mult
#  define _EC_GROUP_have_precompute_mult OPENSSL_MANGLER_ASM(EC_GROUP_have_precompute_mult)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_method_of
#  define EC_GROUP_method_of OPENSSL_MANGLER(EC_GROUP_method_of)
# endif
#else
# ifndef _EC_GROUP_method_of
#  define _EC_GROUP_method_of OPENSSL_MANGLER_ASM(EC_GROUP_method_of)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_new
#  define EC_GROUP_new OPENSSL_MANGLER(EC_GROUP_new)
# endif
#else
# ifndef _EC_GROUP_new
#  define _EC_GROUP_new OPENSSL_MANGLER_ASM(EC_GROUP_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_new_by_curve_name
#  define EC_GROUP_new_by_curve_name OPENSSL_MANGLER(EC_GROUP_new_by_curve_name)
# endif
#else
# ifndef _EC_GROUP_new_by_curve_name
#  define _EC_GROUP_new_by_curve_name OPENSSL_MANGLER_ASM(EC_GROUP_new_by_curve_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_new_by_curve_name_ex
#  define EC_GROUP_new_by_curve_name_ex OPENSSL_MANGLER(EC_GROUP_new_by_curve_name_ex)
# endif
#else
# ifndef _EC_GROUP_new_by_curve_name_ex
#  define _EC_GROUP_new_by_curve_name_ex OPENSSL_MANGLER_ASM(EC_GROUP_new_by_curve_name_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_new_curve_GF2m
#  define EC_GROUP_new_curve_GF2m OPENSSL_MANGLER(EC_GROUP_new_curve_GF2m)
# endif
#else
# ifndef _EC_GROUP_new_curve_GF2m
#  define _EC_GROUP_new_curve_GF2m OPENSSL_MANGLER_ASM(EC_GROUP_new_curve_GF2m)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_new_curve_GFp
#  define EC_GROUP_new_curve_GFp OPENSSL_MANGLER(EC_GROUP_new_curve_GFp)
# endif
#else
# ifndef _EC_GROUP_new_curve_GFp
#  define _EC_GROUP_new_curve_GFp OPENSSL_MANGLER_ASM(EC_GROUP_new_curve_GFp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_new_from_ecparameters
#  define EC_GROUP_new_from_ecparameters OPENSSL_MANGLER(EC_GROUP_new_from_ecparameters)
# endif
#else
# ifndef _EC_GROUP_new_from_ecparameters
#  define _EC_GROUP_new_from_ecparameters OPENSSL_MANGLER_ASM(EC_GROUP_new_from_ecparameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_new_from_ecpkparameters
#  define EC_GROUP_new_from_ecpkparameters OPENSSL_MANGLER(EC_GROUP_new_from_ecpkparameters)
# endif
#else
# ifndef _EC_GROUP_new_from_ecpkparameters
#  define _EC_GROUP_new_from_ecpkparameters OPENSSL_MANGLER_ASM(EC_GROUP_new_from_ecpkparameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_new_from_params
#  define EC_GROUP_new_from_params OPENSSL_MANGLER(EC_GROUP_new_from_params)
# endif
#else
# ifndef _EC_GROUP_new_from_params
#  define _EC_GROUP_new_from_params OPENSSL_MANGLER_ASM(EC_GROUP_new_from_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_order_bits
#  define EC_GROUP_order_bits OPENSSL_MANGLER(EC_GROUP_order_bits)
# endif
#else
# ifndef _EC_GROUP_order_bits
#  define _EC_GROUP_order_bits OPENSSL_MANGLER_ASM(EC_GROUP_order_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_precompute_mult
#  define EC_GROUP_precompute_mult OPENSSL_MANGLER(EC_GROUP_precompute_mult)
# endif
#else
# ifndef _EC_GROUP_precompute_mult
#  define _EC_GROUP_precompute_mult OPENSSL_MANGLER_ASM(EC_GROUP_precompute_mult)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_set_asn1_flag
#  define EC_GROUP_set_asn1_flag OPENSSL_MANGLER(EC_GROUP_set_asn1_flag)
# endif
#else
# ifndef _EC_GROUP_set_asn1_flag
#  define _EC_GROUP_set_asn1_flag OPENSSL_MANGLER_ASM(EC_GROUP_set_asn1_flag)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_set_curve
#  define EC_GROUP_set_curve OPENSSL_MANGLER(EC_GROUP_set_curve)
# endif
#else
# ifndef _EC_GROUP_set_curve
#  define _EC_GROUP_set_curve OPENSSL_MANGLER_ASM(EC_GROUP_set_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_set_curve_GF2m
#  define EC_GROUP_set_curve_GF2m OPENSSL_MANGLER(EC_GROUP_set_curve_GF2m)
# endif
#else
# ifndef _EC_GROUP_set_curve_GF2m
#  define _EC_GROUP_set_curve_GF2m OPENSSL_MANGLER_ASM(EC_GROUP_set_curve_GF2m)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_set_curve_GFp
#  define EC_GROUP_set_curve_GFp OPENSSL_MANGLER(EC_GROUP_set_curve_GFp)
# endif
#else
# ifndef _EC_GROUP_set_curve_GFp
#  define _EC_GROUP_set_curve_GFp OPENSSL_MANGLER_ASM(EC_GROUP_set_curve_GFp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_set_curve_name
#  define EC_GROUP_set_curve_name OPENSSL_MANGLER(EC_GROUP_set_curve_name)
# endif
#else
# ifndef _EC_GROUP_set_curve_name
#  define _EC_GROUP_set_curve_name OPENSSL_MANGLER_ASM(EC_GROUP_set_curve_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_set_generator
#  define EC_GROUP_set_generator OPENSSL_MANGLER(EC_GROUP_set_generator)
# endif
#else
# ifndef _EC_GROUP_set_generator
#  define _EC_GROUP_set_generator OPENSSL_MANGLER_ASM(EC_GROUP_set_generator)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_set_point_conversion_form
#  define EC_GROUP_set_point_conversion_form OPENSSL_MANGLER(EC_GROUP_set_point_conversion_form)
# endif
#else
# ifndef _EC_GROUP_set_point_conversion_form
#  define _EC_GROUP_set_point_conversion_form OPENSSL_MANGLER_ASM(EC_GROUP_set_point_conversion_form)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_GROUP_set_seed
#  define EC_GROUP_set_seed OPENSSL_MANGLER(EC_GROUP_set_seed)
# endif
#else
# ifndef _EC_GROUP_set_seed
#  define _EC_GROUP_set_seed OPENSSL_MANGLER_ASM(EC_GROUP_set_seed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_free
#  define EC_KEY_METHOD_free OPENSSL_MANGLER(EC_KEY_METHOD_free)
# endif
#else
# ifndef _EC_KEY_METHOD_free
#  define _EC_KEY_METHOD_free OPENSSL_MANGLER_ASM(EC_KEY_METHOD_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_get_compute_key
#  define EC_KEY_METHOD_get_compute_key OPENSSL_MANGLER(EC_KEY_METHOD_get_compute_key)
# endif
#else
# ifndef _EC_KEY_METHOD_get_compute_key
#  define _EC_KEY_METHOD_get_compute_key OPENSSL_MANGLER_ASM(EC_KEY_METHOD_get_compute_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_get_init
#  define EC_KEY_METHOD_get_init OPENSSL_MANGLER(EC_KEY_METHOD_get_init)
# endif
#else
# ifndef _EC_KEY_METHOD_get_init
#  define _EC_KEY_METHOD_get_init OPENSSL_MANGLER_ASM(EC_KEY_METHOD_get_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_get_keygen
#  define EC_KEY_METHOD_get_keygen OPENSSL_MANGLER(EC_KEY_METHOD_get_keygen)
# endif
#else
# ifndef _EC_KEY_METHOD_get_keygen
#  define _EC_KEY_METHOD_get_keygen OPENSSL_MANGLER_ASM(EC_KEY_METHOD_get_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_get_sign
#  define EC_KEY_METHOD_get_sign OPENSSL_MANGLER(EC_KEY_METHOD_get_sign)
# endif
#else
# ifndef _EC_KEY_METHOD_get_sign
#  define _EC_KEY_METHOD_get_sign OPENSSL_MANGLER_ASM(EC_KEY_METHOD_get_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_get_verify
#  define EC_KEY_METHOD_get_verify OPENSSL_MANGLER(EC_KEY_METHOD_get_verify)
# endif
#else
# ifndef _EC_KEY_METHOD_get_verify
#  define _EC_KEY_METHOD_get_verify OPENSSL_MANGLER_ASM(EC_KEY_METHOD_get_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_new
#  define EC_KEY_METHOD_new OPENSSL_MANGLER(EC_KEY_METHOD_new)
# endif
#else
# ifndef _EC_KEY_METHOD_new
#  define _EC_KEY_METHOD_new OPENSSL_MANGLER_ASM(EC_KEY_METHOD_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_set_compute_key
#  define EC_KEY_METHOD_set_compute_key OPENSSL_MANGLER(EC_KEY_METHOD_set_compute_key)
# endif
#else
# ifndef _EC_KEY_METHOD_set_compute_key
#  define _EC_KEY_METHOD_set_compute_key OPENSSL_MANGLER_ASM(EC_KEY_METHOD_set_compute_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_set_init
#  define EC_KEY_METHOD_set_init OPENSSL_MANGLER(EC_KEY_METHOD_set_init)
# endif
#else
# ifndef _EC_KEY_METHOD_set_init
#  define _EC_KEY_METHOD_set_init OPENSSL_MANGLER_ASM(EC_KEY_METHOD_set_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_set_keygen
#  define EC_KEY_METHOD_set_keygen OPENSSL_MANGLER(EC_KEY_METHOD_set_keygen)
# endif
#else
# ifndef _EC_KEY_METHOD_set_keygen
#  define _EC_KEY_METHOD_set_keygen OPENSSL_MANGLER_ASM(EC_KEY_METHOD_set_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_set_sign
#  define EC_KEY_METHOD_set_sign OPENSSL_MANGLER(EC_KEY_METHOD_set_sign)
# endif
#else
# ifndef _EC_KEY_METHOD_set_sign
#  define _EC_KEY_METHOD_set_sign OPENSSL_MANGLER_ASM(EC_KEY_METHOD_set_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_METHOD_set_verify
#  define EC_KEY_METHOD_set_verify OPENSSL_MANGLER(EC_KEY_METHOD_set_verify)
# endif
#else
# ifndef _EC_KEY_METHOD_set_verify
#  define _EC_KEY_METHOD_set_verify OPENSSL_MANGLER_ASM(EC_KEY_METHOD_set_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_OpenSSL
#  define EC_KEY_OpenSSL OPENSSL_MANGLER(EC_KEY_OpenSSL)
# endif
#else
# ifndef _EC_KEY_OpenSSL
#  define _EC_KEY_OpenSSL OPENSSL_MANGLER_ASM(EC_KEY_OpenSSL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_can_sign
#  define EC_KEY_can_sign OPENSSL_MANGLER(EC_KEY_can_sign)
# endif
#else
# ifndef _EC_KEY_can_sign
#  define _EC_KEY_can_sign OPENSSL_MANGLER_ASM(EC_KEY_can_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_check_key
#  define EC_KEY_check_key OPENSSL_MANGLER(EC_KEY_check_key)
# endif
#else
# ifndef _EC_KEY_check_key
#  define _EC_KEY_check_key OPENSSL_MANGLER_ASM(EC_KEY_check_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_clear_flags
#  define EC_KEY_clear_flags OPENSSL_MANGLER(EC_KEY_clear_flags)
# endif
#else
# ifndef _EC_KEY_clear_flags
#  define _EC_KEY_clear_flags OPENSSL_MANGLER_ASM(EC_KEY_clear_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_copy
#  define EC_KEY_copy OPENSSL_MANGLER(EC_KEY_copy)
# endif
#else
# ifndef _EC_KEY_copy
#  define _EC_KEY_copy OPENSSL_MANGLER_ASM(EC_KEY_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_decoded_from_explicit_params
#  define EC_KEY_decoded_from_explicit_params OPENSSL_MANGLER(EC_KEY_decoded_from_explicit_params)
# endif
#else
# ifndef _EC_KEY_decoded_from_explicit_params
#  define _EC_KEY_decoded_from_explicit_params OPENSSL_MANGLER_ASM(EC_KEY_decoded_from_explicit_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_dup
#  define EC_KEY_dup OPENSSL_MANGLER(EC_KEY_dup)
# endif
#else
# ifndef _EC_KEY_dup
#  define _EC_KEY_dup OPENSSL_MANGLER_ASM(EC_KEY_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_free
#  define EC_KEY_free OPENSSL_MANGLER(EC_KEY_free)
# endif
#else
# ifndef _EC_KEY_free
#  define _EC_KEY_free OPENSSL_MANGLER_ASM(EC_KEY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_generate_key
#  define EC_KEY_generate_key OPENSSL_MANGLER(EC_KEY_generate_key)
# endif
#else
# ifndef _EC_KEY_generate_key
#  define _EC_KEY_generate_key OPENSSL_MANGLER_ASM(EC_KEY_generate_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_get0_engine
#  define EC_KEY_get0_engine OPENSSL_MANGLER(EC_KEY_get0_engine)
# endif
#else
# ifndef _EC_KEY_get0_engine
#  define _EC_KEY_get0_engine OPENSSL_MANGLER_ASM(EC_KEY_get0_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_get0_group
#  define EC_KEY_get0_group OPENSSL_MANGLER(EC_KEY_get0_group)
# endif
#else
# ifndef _EC_KEY_get0_group
#  define _EC_KEY_get0_group OPENSSL_MANGLER_ASM(EC_KEY_get0_group)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_get0_private_key
#  define EC_KEY_get0_private_key OPENSSL_MANGLER(EC_KEY_get0_private_key)
# endif
#else
# ifndef _EC_KEY_get0_private_key
#  define _EC_KEY_get0_private_key OPENSSL_MANGLER_ASM(EC_KEY_get0_private_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_get0_public_key
#  define EC_KEY_get0_public_key OPENSSL_MANGLER(EC_KEY_get0_public_key)
# endif
#else
# ifndef _EC_KEY_get0_public_key
#  define _EC_KEY_get0_public_key OPENSSL_MANGLER_ASM(EC_KEY_get0_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_get_conv_form
#  define EC_KEY_get_conv_form OPENSSL_MANGLER(EC_KEY_get_conv_form)
# endif
#else
# ifndef _EC_KEY_get_conv_form
#  define _EC_KEY_get_conv_form OPENSSL_MANGLER_ASM(EC_KEY_get_conv_form)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_get_default_method
#  define EC_KEY_get_default_method OPENSSL_MANGLER(EC_KEY_get_default_method)
# endif
#else
# ifndef _EC_KEY_get_default_method
#  define _EC_KEY_get_default_method OPENSSL_MANGLER_ASM(EC_KEY_get_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_get_enc_flags
#  define EC_KEY_get_enc_flags OPENSSL_MANGLER(EC_KEY_get_enc_flags)
# endif
#else
# ifndef _EC_KEY_get_enc_flags
#  define _EC_KEY_get_enc_flags OPENSSL_MANGLER_ASM(EC_KEY_get_enc_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_get_ex_data
#  define EC_KEY_get_ex_data OPENSSL_MANGLER(EC_KEY_get_ex_data)
# endif
#else
# ifndef _EC_KEY_get_ex_data
#  define _EC_KEY_get_ex_data OPENSSL_MANGLER_ASM(EC_KEY_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_get_flags
#  define EC_KEY_get_flags OPENSSL_MANGLER(EC_KEY_get_flags)
# endif
#else
# ifndef _EC_KEY_get_flags
#  define _EC_KEY_get_flags OPENSSL_MANGLER_ASM(EC_KEY_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_get_method
#  define EC_KEY_get_method OPENSSL_MANGLER(EC_KEY_get_method)
# endif
#else
# ifndef _EC_KEY_get_method
#  define _EC_KEY_get_method OPENSSL_MANGLER_ASM(EC_KEY_get_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_key2buf
#  define EC_KEY_key2buf OPENSSL_MANGLER(EC_KEY_key2buf)
# endif
#else
# ifndef _EC_KEY_key2buf
#  define _EC_KEY_key2buf OPENSSL_MANGLER_ASM(EC_KEY_key2buf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_new
#  define EC_KEY_new OPENSSL_MANGLER(EC_KEY_new)
# endif
#else
# ifndef _EC_KEY_new
#  define _EC_KEY_new OPENSSL_MANGLER_ASM(EC_KEY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_new_by_curve_name
#  define EC_KEY_new_by_curve_name OPENSSL_MANGLER(EC_KEY_new_by_curve_name)
# endif
#else
# ifndef _EC_KEY_new_by_curve_name
#  define _EC_KEY_new_by_curve_name OPENSSL_MANGLER_ASM(EC_KEY_new_by_curve_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_new_by_curve_name_ex
#  define EC_KEY_new_by_curve_name_ex OPENSSL_MANGLER(EC_KEY_new_by_curve_name_ex)
# endif
#else
# ifndef _EC_KEY_new_by_curve_name_ex
#  define _EC_KEY_new_by_curve_name_ex OPENSSL_MANGLER_ASM(EC_KEY_new_by_curve_name_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_new_ex
#  define EC_KEY_new_ex OPENSSL_MANGLER(EC_KEY_new_ex)
# endif
#else
# ifndef _EC_KEY_new_ex
#  define _EC_KEY_new_ex OPENSSL_MANGLER_ASM(EC_KEY_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_new_method
#  define EC_KEY_new_method OPENSSL_MANGLER(EC_KEY_new_method)
# endif
#else
# ifndef _EC_KEY_new_method
#  define _EC_KEY_new_method OPENSSL_MANGLER_ASM(EC_KEY_new_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_oct2key
#  define EC_KEY_oct2key OPENSSL_MANGLER(EC_KEY_oct2key)
# endif
#else
# ifndef _EC_KEY_oct2key
#  define _EC_KEY_oct2key OPENSSL_MANGLER_ASM(EC_KEY_oct2key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_oct2priv
#  define EC_KEY_oct2priv OPENSSL_MANGLER(EC_KEY_oct2priv)
# endif
#else
# ifndef _EC_KEY_oct2priv
#  define _EC_KEY_oct2priv OPENSSL_MANGLER_ASM(EC_KEY_oct2priv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_precompute_mult
#  define EC_KEY_precompute_mult OPENSSL_MANGLER(EC_KEY_precompute_mult)
# endif
#else
# ifndef _EC_KEY_precompute_mult
#  define _EC_KEY_precompute_mult OPENSSL_MANGLER_ASM(EC_KEY_precompute_mult)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_print
#  define EC_KEY_print OPENSSL_MANGLER(EC_KEY_print)
# endif
#else
# ifndef _EC_KEY_print
#  define _EC_KEY_print OPENSSL_MANGLER_ASM(EC_KEY_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_print_fp
#  define EC_KEY_print_fp OPENSSL_MANGLER(EC_KEY_print_fp)
# endif
#else
# ifndef _EC_KEY_print_fp
#  define _EC_KEY_print_fp OPENSSL_MANGLER_ASM(EC_KEY_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_priv2buf
#  define EC_KEY_priv2buf OPENSSL_MANGLER(EC_KEY_priv2buf)
# endif
#else
# ifndef _EC_KEY_priv2buf
#  define _EC_KEY_priv2buf OPENSSL_MANGLER_ASM(EC_KEY_priv2buf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_priv2oct
#  define EC_KEY_priv2oct OPENSSL_MANGLER(EC_KEY_priv2oct)
# endif
#else
# ifndef _EC_KEY_priv2oct
#  define _EC_KEY_priv2oct OPENSSL_MANGLER_ASM(EC_KEY_priv2oct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_set_asn1_flag
#  define EC_KEY_set_asn1_flag OPENSSL_MANGLER(EC_KEY_set_asn1_flag)
# endif
#else
# ifndef _EC_KEY_set_asn1_flag
#  define _EC_KEY_set_asn1_flag OPENSSL_MANGLER_ASM(EC_KEY_set_asn1_flag)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_set_conv_form
#  define EC_KEY_set_conv_form OPENSSL_MANGLER(EC_KEY_set_conv_form)
# endif
#else
# ifndef _EC_KEY_set_conv_form
#  define _EC_KEY_set_conv_form OPENSSL_MANGLER_ASM(EC_KEY_set_conv_form)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_set_default_method
#  define EC_KEY_set_default_method OPENSSL_MANGLER(EC_KEY_set_default_method)
# endif
#else
# ifndef _EC_KEY_set_default_method
#  define _EC_KEY_set_default_method OPENSSL_MANGLER_ASM(EC_KEY_set_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_set_enc_flags
#  define EC_KEY_set_enc_flags OPENSSL_MANGLER(EC_KEY_set_enc_flags)
# endif
#else
# ifndef _EC_KEY_set_enc_flags
#  define _EC_KEY_set_enc_flags OPENSSL_MANGLER_ASM(EC_KEY_set_enc_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_set_ex_data
#  define EC_KEY_set_ex_data OPENSSL_MANGLER(EC_KEY_set_ex_data)
# endif
#else
# ifndef _EC_KEY_set_ex_data
#  define _EC_KEY_set_ex_data OPENSSL_MANGLER_ASM(EC_KEY_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_set_flags
#  define EC_KEY_set_flags OPENSSL_MANGLER(EC_KEY_set_flags)
# endif
#else
# ifndef _EC_KEY_set_flags
#  define _EC_KEY_set_flags OPENSSL_MANGLER_ASM(EC_KEY_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_set_group
#  define EC_KEY_set_group OPENSSL_MANGLER(EC_KEY_set_group)
# endif
#else
# ifndef _EC_KEY_set_group
#  define _EC_KEY_set_group OPENSSL_MANGLER_ASM(EC_KEY_set_group)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_set_method
#  define EC_KEY_set_method OPENSSL_MANGLER(EC_KEY_set_method)
# endif
#else
# ifndef _EC_KEY_set_method
#  define _EC_KEY_set_method OPENSSL_MANGLER_ASM(EC_KEY_set_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_set_private_key
#  define EC_KEY_set_private_key OPENSSL_MANGLER(EC_KEY_set_private_key)
# endif
#else
# ifndef _EC_KEY_set_private_key
#  define _EC_KEY_set_private_key OPENSSL_MANGLER_ASM(EC_KEY_set_private_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_set_public_key
#  define EC_KEY_set_public_key OPENSSL_MANGLER(EC_KEY_set_public_key)
# endif
#else
# ifndef _EC_KEY_set_public_key
#  define _EC_KEY_set_public_key OPENSSL_MANGLER_ASM(EC_KEY_set_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_set_public_key_affine_coordinates
#  define EC_KEY_set_public_key_affine_coordinates OPENSSL_MANGLER(EC_KEY_set_public_key_affine_coordinates)
# endif
#else
# ifndef _EC_KEY_set_public_key_affine_coordinates
#  define _EC_KEY_set_public_key_affine_coordinates OPENSSL_MANGLER_ASM(EC_KEY_set_public_key_affine_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_KEY_up_ref
#  define EC_KEY_up_ref OPENSSL_MANGLER(EC_KEY_up_ref)
# endif
#else
# ifndef _EC_KEY_up_ref
#  define _EC_KEY_up_ref OPENSSL_MANGLER_ASM(EC_KEY_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_METHOD_get_field_type
#  define EC_METHOD_get_field_type OPENSSL_MANGLER(EC_METHOD_get_field_type)
# endif
#else
# ifndef _EC_METHOD_get_field_type
#  define _EC_METHOD_get_field_type OPENSSL_MANGLER_ASM(EC_METHOD_get_field_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_add
#  define EC_POINT_add OPENSSL_MANGLER(EC_POINT_add)
# endif
#else
# ifndef _EC_POINT_add
#  define _EC_POINT_add OPENSSL_MANGLER_ASM(EC_POINT_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_bn2point
#  define EC_POINT_bn2point OPENSSL_MANGLER(EC_POINT_bn2point)
# endif
#else
# ifndef _EC_POINT_bn2point
#  define _EC_POINT_bn2point OPENSSL_MANGLER_ASM(EC_POINT_bn2point)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_clear_free
#  define EC_POINT_clear_free OPENSSL_MANGLER(EC_POINT_clear_free)
# endif
#else
# ifndef _EC_POINT_clear_free
#  define _EC_POINT_clear_free OPENSSL_MANGLER_ASM(EC_POINT_clear_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_cmp
#  define EC_POINT_cmp OPENSSL_MANGLER(EC_POINT_cmp)
# endif
#else
# ifndef _EC_POINT_cmp
#  define _EC_POINT_cmp OPENSSL_MANGLER_ASM(EC_POINT_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_copy
#  define EC_POINT_copy OPENSSL_MANGLER(EC_POINT_copy)
# endif
#else
# ifndef _EC_POINT_copy
#  define _EC_POINT_copy OPENSSL_MANGLER_ASM(EC_POINT_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_dbl
#  define EC_POINT_dbl OPENSSL_MANGLER(EC_POINT_dbl)
# endif
#else
# ifndef _EC_POINT_dbl
#  define _EC_POINT_dbl OPENSSL_MANGLER_ASM(EC_POINT_dbl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_dup
#  define EC_POINT_dup OPENSSL_MANGLER(EC_POINT_dup)
# endif
#else
# ifndef _EC_POINT_dup
#  define _EC_POINT_dup OPENSSL_MANGLER_ASM(EC_POINT_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_free
#  define EC_POINT_free OPENSSL_MANGLER(EC_POINT_free)
# endif
#else
# ifndef _EC_POINT_free
#  define _EC_POINT_free OPENSSL_MANGLER_ASM(EC_POINT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_get_Jprojective_coordinates_GFp
#  define EC_POINT_get_Jprojective_coordinates_GFp OPENSSL_MANGLER(EC_POINT_get_Jprojective_coordinates_GFp)
# endif
#else
# ifndef _EC_POINT_get_Jprojective_coordinates_GFp
#  define _EC_POINT_get_Jprojective_coordinates_GFp OPENSSL_MANGLER_ASM(EC_POINT_get_Jprojective_coordinates_GFp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_get_affine_coordinates
#  define EC_POINT_get_affine_coordinates OPENSSL_MANGLER(EC_POINT_get_affine_coordinates)
# endif
#else
# ifndef _EC_POINT_get_affine_coordinates
#  define _EC_POINT_get_affine_coordinates OPENSSL_MANGLER_ASM(EC_POINT_get_affine_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_get_affine_coordinates_GF2m
#  define EC_POINT_get_affine_coordinates_GF2m OPENSSL_MANGLER(EC_POINT_get_affine_coordinates_GF2m)
# endif
#else
# ifndef _EC_POINT_get_affine_coordinates_GF2m
#  define _EC_POINT_get_affine_coordinates_GF2m OPENSSL_MANGLER_ASM(EC_POINT_get_affine_coordinates_GF2m)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_get_affine_coordinates_GFp
#  define EC_POINT_get_affine_coordinates_GFp OPENSSL_MANGLER(EC_POINT_get_affine_coordinates_GFp)
# endif
#else
# ifndef _EC_POINT_get_affine_coordinates_GFp
#  define _EC_POINT_get_affine_coordinates_GFp OPENSSL_MANGLER_ASM(EC_POINT_get_affine_coordinates_GFp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_hex2point
#  define EC_POINT_hex2point OPENSSL_MANGLER(EC_POINT_hex2point)
# endif
#else
# ifndef _EC_POINT_hex2point
#  define _EC_POINT_hex2point OPENSSL_MANGLER_ASM(EC_POINT_hex2point)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_invert
#  define EC_POINT_invert OPENSSL_MANGLER(EC_POINT_invert)
# endif
#else
# ifndef _EC_POINT_invert
#  define _EC_POINT_invert OPENSSL_MANGLER_ASM(EC_POINT_invert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_is_at_infinity
#  define EC_POINT_is_at_infinity OPENSSL_MANGLER(EC_POINT_is_at_infinity)
# endif
#else
# ifndef _EC_POINT_is_at_infinity
#  define _EC_POINT_is_at_infinity OPENSSL_MANGLER_ASM(EC_POINT_is_at_infinity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_is_on_curve
#  define EC_POINT_is_on_curve OPENSSL_MANGLER(EC_POINT_is_on_curve)
# endif
#else
# ifndef _EC_POINT_is_on_curve
#  define _EC_POINT_is_on_curve OPENSSL_MANGLER_ASM(EC_POINT_is_on_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_make_affine
#  define EC_POINT_make_affine OPENSSL_MANGLER(EC_POINT_make_affine)
# endif
#else
# ifndef _EC_POINT_make_affine
#  define _EC_POINT_make_affine OPENSSL_MANGLER_ASM(EC_POINT_make_affine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_method_of
#  define EC_POINT_method_of OPENSSL_MANGLER(EC_POINT_method_of)
# endif
#else
# ifndef _EC_POINT_method_of
#  define _EC_POINT_method_of OPENSSL_MANGLER_ASM(EC_POINT_method_of)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_mul
#  define EC_POINT_mul OPENSSL_MANGLER(EC_POINT_mul)
# endif
#else
# ifndef _EC_POINT_mul
#  define _EC_POINT_mul OPENSSL_MANGLER_ASM(EC_POINT_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_new
#  define EC_POINT_new OPENSSL_MANGLER(EC_POINT_new)
# endif
#else
# ifndef _EC_POINT_new
#  define _EC_POINT_new OPENSSL_MANGLER_ASM(EC_POINT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_oct2point
#  define EC_POINT_oct2point OPENSSL_MANGLER(EC_POINT_oct2point)
# endif
#else
# ifndef _EC_POINT_oct2point
#  define _EC_POINT_oct2point OPENSSL_MANGLER_ASM(EC_POINT_oct2point)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_point2bn
#  define EC_POINT_point2bn OPENSSL_MANGLER(EC_POINT_point2bn)
# endif
#else
# ifndef _EC_POINT_point2bn
#  define _EC_POINT_point2bn OPENSSL_MANGLER_ASM(EC_POINT_point2bn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_point2buf
#  define EC_POINT_point2buf OPENSSL_MANGLER(EC_POINT_point2buf)
# endif
#else
# ifndef _EC_POINT_point2buf
#  define _EC_POINT_point2buf OPENSSL_MANGLER_ASM(EC_POINT_point2buf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_point2hex
#  define EC_POINT_point2hex OPENSSL_MANGLER(EC_POINT_point2hex)
# endif
#else
# ifndef _EC_POINT_point2hex
#  define _EC_POINT_point2hex OPENSSL_MANGLER_ASM(EC_POINT_point2hex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_point2oct
#  define EC_POINT_point2oct OPENSSL_MANGLER(EC_POINT_point2oct)
# endif
#else
# ifndef _EC_POINT_point2oct
#  define _EC_POINT_point2oct OPENSSL_MANGLER_ASM(EC_POINT_point2oct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_set_Jprojective_coordinates_GFp
#  define EC_POINT_set_Jprojective_coordinates_GFp OPENSSL_MANGLER(EC_POINT_set_Jprojective_coordinates_GFp)
# endif
#else
# ifndef _EC_POINT_set_Jprojective_coordinates_GFp
#  define _EC_POINT_set_Jprojective_coordinates_GFp OPENSSL_MANGLER_ASM(EC_POINT_set_Jprojective_coordinates_GFp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_set_affine_coordinates
#  define EC_POINT_set_affine_coordinates OPENSSL_MANGLER(EC_POINT_set_affine_coordinates)
# endif
#else
# ifndef _EC_POINT_set_affine_coordinates
#  define _EC_POINT_set_affine_coordinates OPENSSL_MANGLER_ASM(EC_POINT_set_affine_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_set_affine_coordinates_GF2m
#  define EC_POINT_set_affine_coordinates_GF2m OPENSSL_MANGLER(EC_POINT_set_affine_coordinates_GF2m)
# endif
#else
# ifndef _EC_POINT_set_affine_coordinates_GF2m
#  define _EC_POINT_set_affine_coordinates_GF2m OPENSSL_MANGLER_ASM(EC_POINT_set_affine_coordinates_GF2m)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_set_affine_coordinates_GFp
#  define EC_POINT_set_affine_coordinates_GFp OPENSSL_MANGLER(EC_POINT_set_affine_coordinates_GFp)
# endif
#else
# ifndef _EC_POINT_set_affine_coordinates_GFp
#  define _EC_POINT_set_affine_coordinates_GFp OPENSSL_MANGLER_ASM(EC_POINT_set_affine_coordinates_GFp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_set_compressed_coordinates
#  define EC_POINT_set_compressed_coordinates OPENSSL_MANGLER(EC_POINT_set_compressed_coordinates)
# endif
#else
# ifndef _EC_POINT_set_compressed_coordinates
#  define _EC_POINT_set_compressed_coordinates OPENSSL_MANGLER_ASM(EC_POINT_set_compressed_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_set_compressed_coordinates_GF2m
#  define EC_POINT_set_compressed_coordinates_GF2m OPENSSL_MANGLER(EC_POINT_set_compressed_coordinates_GF2m)
# endif
#else
# ifndef _EC_POINT_set_compressed_coordinates_GF2m
#  define _EC_POINT_set_compressed_coordinates_GF2m OPENSSL_MANGLER_ASM(EC_POINT_set_compressed_coordinates_GF2m)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_set_compressed_coordinates_GFp
#  define EC_POINT_set_compressed_coordinates_GFp OPENSSL_MANGLER(EC_POINT_set_compressed_coordinates_GFp)
# endif
#else
# ifndef _EC_POINT_set_compressed_coordinates_GFp
#  define _EC_POINT_set_compressed_coordinates_GFp OPENSSL_MANGLER_ASM(EC_POINT_set_compressed_coordinates_GFp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINT_set_to_infinity
#  define EC_POINT_set_to_infinity OPENSSL_MANGLER(EC_POINT_set_to_infinity)
# endif
#else
# ifndef _EC_POINT_set_to_infinity
#  define _EC_POINT_set_to_infinity OPENSSL_MANGLER_ASM(EC_POINT_set_to_infinity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINTs_make_affine
#  define EC_POINTs_make_affine OPENSSL_MANGLER(EC_POINTs_make_affine)
# endif
#else
# ifndef _EC_POINTs_make_affine
#  define _EC_POINTs_make_affine OPENSSL_MANGLER_ASM(EC_POINTs_make_affine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_POINTs_mul
#  define EC_POINTs_mul OPENSSL_MANGLER(EC_POINTs_mul)
# endif
#else
# ifndef _EC_POINTs_mul
#  define _EC_POINTs_mul OPENSSL_MANGLER_ASM(EC_POINTs_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_PRIVATEKEY_free
#  define EC_PRIVATEKEY_free OPENSSL_MANGLER(EC_PRIVATEKEY_free)
# endif
#else
# ifndef _EC_PRIVATEKEY_free
#  define _EC_PRIVATEKEY_free OPENSSL_MANGLER_ASM(EC_PRIVATEKEY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_PRIVATEKEY_new
#  define EC_PRIVATEKEY_new OPENSSL_MANGLER(EC_PRIVATEKEY_new)
# endif
#else
# ifndef _EC_PRIVATEKEY_new
#  define _EC_PRIVATEKEY_new OPENSSL_MANGLER_ASM(EC_PRIVATEKEY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_curve_nid2nist
#  define EC_curve_nid2nist OPENSSL_MANGLER(EC_curve_nid2nist)
# endif
#else
# ifndef _EC_curve_nid2nist
#  define _EC_curve_nid2nist OPENSSL_MANGLER_ASM(EC_curve_nid2nist)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_curve_nist2nid
#  define EC_curve_nist2nid OPENSSL_MANGLER(EC_curve_nist2nid)
# endif
#else
# ifndef _EC_curve_nist2nid
#  define _EC_curve_nist2nid OPENSSL_MANGLER_ASM(EC_curve_nist2nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_ec_pre_comp_dup
#  define EC_ec_pre_comp_dup OPENSSL_MANGLER(EC_ec_pre_comp_dup)
# endif
#else
# ifndef _EC_ec_pre_comp_dup
#  define _EC_ec_pre_comp_dup OPENSSL_MANGLER_ASM(EC_ec_pre_comp_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_ec_pre_comp_free
#  define EC_ec_pre_comp_free OPENSSL_MANGLER(EC_ec_pre_comp_free)
# endif
#else
# ifndef _EC_ec_pre_comp_free
#  define _EC_ec_pre_comp_free OPENSSL_MANGLER_ASM(EC_ec_pre_comp_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_get_builtin_curves
#  define EC_get_builtin_curves OPENSSL_MANGLER(EC_get_builtin_curves)
# endif
#else
# ifndef _EC_get_builtin_curves
#  define _EC_get_builtin_curves OPENSSL_MANGLER_ASM(EC_get_builtin_curves)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_nistz256_pre_comp_dup
#  define EC_nistz256_pre_comp_dup OPENSSL_MANGLER(EC_nistz256_pre_comp_dup)
# endif
#else
# ifndef _EC_nistz256_pre_comp_dup
#  define _EC_nistz256_pre_comp_dup OPENSSL_MANGLER_ASM(EC_nistz256_pre_comp_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_nistz256_pre_comp_free
#  define EC_nistz256_pre_comp_free OPENSSL_MANGLER(EC_nistz256_pre_comp_free)
# endif
#else
# ifndef _EC_nistz256_pre_comp_free
#  define _EC_nistz256_pre_comp_free OPENSSL_MANGLER_ASM(EC_nistz256_pre_comp_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EC_pre_comp_free
#  define EC_pre_comp_free OPENSSL_MANGLER(EC_pre_comp_free)
# endif
#else
# ifndef _EC_pre_comp_free
#  define _EC_pre_comp_free OPENSSL_MANGLER_ASM(EC_pre_comp_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EDIPARTYNAME_free
#  define EDIPARTYNAME_free OPENSSL_MANGLER(EDIPARTYNAME_free)
# endif
#else
# ifndef _EDIPARTYNAME_free
#  define _EDIPARTYNAME_free OPENSSL_MANGLER_ASM(EDIPARTYNAME_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EDIPARTYNAME_it
#  define EDIPARTYNAME_it OPENSSL_MANGLER(EDIPARTYNAME_it)
# endif
#else
# ifndef _EDIPARTYNAME_it
#  define _EDIPARTYNAME_it OPENSSL_MANGLER_ASM(EDIPARTYNAME_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EDIPARTYNAME_new
#  define EDIPARTYNAME_new OPENSSL_MANGLER(EDIPARTYNAME_new)
# endif
#else
# ifndef _EDIPARTYNAME_new
#  define _EDIPARTYNAME_new OPENSSL_MANGLER_ASM(EDIPARTYNAME_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_add
#  define ENGINE_add OPENSSL_MANGLER(ENGINE_add)
# endif
#else
# ifndef _ENGINE_add
#  define _ENGINE_add OPENSSL_MANGLER_ASM(ENGINE_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_add_conf_module
#  define ENGINE_add_conf_module OPENSSL_MANGLER(ENGINE_add_conf_module)
# endif
#else
# ifndef _ENGINE_add_conf_module
#  define _ENGINE_add_conf_module OPENSSL_MANGLER_ASM(ENGINE_add_conf_module)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_by_id
#  define ENGINE_by_id OPENSSL_MANGLER(ENGINE_by_id)
# endif
#else
# ifndef _ENGINE_by_id
#  define _ENGINE_by_id OPENSSL_MANGLER_ASM(ENGINE_by_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_cmd_is_executable
#  define ENGINE_cmd_is_executable OPENSSL_MANGLER(ENGINE_cmd_is_executable)
# endif
#else
# ifndef _ENGINE_cmd_is_executable
#  define _ENGINE_cmd_is_executable OPENSSL_MANGLER_ASM(ENGINE_cmd_is_executable)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_ctrl
#  define ENGINE_ctrl OPENSSL_MANGLER(ENGINE_ctrl)
# endif
#else
# ifndef _ENGINE_ctrl
#  define _ENGINE_ctrl OPENSSL_MANGLER_ASM(ENGINE_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_ctrl_cmd
#  define ENGINE_ctrl_cmd OPENSSL_MANGLER(ENGINE_ctrl_cmd)
# endif
#else
# ifndef _ENGINE_ctrl_cmd
#  define _ENGINE_ctrl_cmd OPENSSL_MANGLER_ASM(ENGINE_ctrl_cmd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_ctrl_cmd_string
#  define ENGINE_ctrl_cmd_string OPENSSL_MANGLER(ENGINE_ctrl_cmd_string)
# endif
#else
# ifndef _ENGINE_ctrl_cmd_string
#  define _ENGINE_ctrl_cmd_string OPENSSL_MANGLER_ASM(ENGINE_ctrl_cmd_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_finish
#  define ENGINE_finish OPENSSL_MANGLER(ENGINE_finish)
# endif
#else
# ifndef _ENGINE_finish
#  define _ENGINE_finish OPENSSL_MANGLER_ASM(ENGINE_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_free
#  define ENGINE_free OPENSSL_MANGLER(ENGINE_free)
# endif
#else
# ifndef _ENGINE_free
#  define _ENGINE_free OPENSSL_MANGLER_ASM(ENGINE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_DH
#  define ENGINE_get_DH OPENSSL_MANGLER(ENGINE_get_DH)
# endif
#else
# ifndef _ENGINE_get_DH
#  define _ENGINE_get_DH OPENSSL_MANGLER_ASM(ENGINE_get_DH)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_DSA
#  define ENGINE_get_DSA OPENSSL_MANGLER(ENGINE_get_DSA)
# endif
#else
# ifndef _ENGINE_get_DSA
#  define _ENGINE_get_DSA OPENSSL_MANGLER_ASM(ENGINE_get_DSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_EC
#  define ENGINE_get_EC OPENSSL_MANGLER(ENGINE_get_EC)
# endif
#else
# ifndef _ENGINE_get_EC
#  define _ENGINE_get_EC OPENSSL_MANGLER_ASM(ENGINE_get_EC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_RAND
#  define ENGINE_get_RAND OPENSSL_MANGLER(ENGINE_get_RAND)
# endif
#else
# ifndef _ENGINE_get_RAND
#  define _ENGINE_get_RAND OPENSSL_MANGLER_ASM(ENGINE_get_RAND)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_RSA
#  define ENGINE_get_RSA OPENSSL_MANGLER(ENGINE_get_RSA)
# endif
#else
# ifndef _ENGINE_get_RSA
#  define _ENGINE_get_RSA OPENSSL_MANGLER_ASM(ENGINE_get_RSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_cipher
#  define ENGINE_get_cipher OPENSSL_MANGLER(ENGINE_get_cipher)
# endif
#else
# ifndef _ENGINE_get_cipher
#  define _ENGINE_get_cipher OPENSSL_MANGLER_ASM(ENGINE_get_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_cipher_engine
#  define ENGINE_get_cipher_engine OPENSSL_MANGLER(ENGINE_get_cipher_engine)
# endif
#else
# ifndef _ENGINE_get_cipher_engine
#  define _ENGINE_get_cipher_engine OPENSSL_MANGLER_ASM(ENGINE_get_cipher_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_ciphers
#  define ENGINE_get_ciphers OPENSSL_MANGLER(ENGINE_get_ciphers)
# endif
#else
# ifndef _ENGINE_get_ciphers
#  define _ENGINE_get_ciphers OPENSSL_MANGLER_ASM(ENGINE_get_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_cmd_defns
#  define ENGINE_get_cmd_defns OPENSSL_MANGLER(ENGINE_get_cmd_defns)
# endif
#else
# ifndef _ENGINE_get_cmd_defns
#  define _ENGINE_get_cmd_defns OPENSSL_MANGLER_ASM(ENGINE_get_cmd_defns)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_ctrl_function
#  define ENGINE_get_ctrl_function OPENSSL_MANGLER(ENGINE_get_ctrl_function)
# endif
#else
# ifndef _ENGINE_get_ctrl_function
#  define _ENGINE_get_ctrl_function OPENSSL_MANGLER_ASM(ENGINE_get_ctrl_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_default_DH
#  define ENGINE_get_default_DH OPENSSL_MANGLER(ENGINE_get_default_DH)
# endif
#else
# ifndef _ENGINE_get_default_DH
#  define _ENGINE_get_default_DH OPENSSL_MANGLER_ASM(ENGINE_get_default_DH)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_default_DSA
#  define ENGINE_get_default_DSA OPENSSL_MANGLER(ENGINE_get_default_DSA)
# endif
#else
# ifndef _ENGINE_get_default_DSA
#  define _ENGINE_get_default_DSA OPENSSL_MANGLER_ASM(ENGINE_get_default_DSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_default_EC
#  define ENGINE_get_default_EC OPENSSL_MANGLER(ENGINE_get_default_EC)
# endif
#else
# ifndef _ENGINE_get_default_EC
#  define _ENGINE_get_default_EC OPENSSL_MANGLER_ASM(ENGINE_get_default_EC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_default_RAND
#  define ENGINE_get_default_RAND OPENSSL_MANGLER(ENGINE_get_default_RAND)
# endif
#else
# ifndef _ENGINE_get_default_RAND
#  define _ENGINE_get_default_RAND OPENSSL_MANGLER_ASM(ENGINE_get_default_RAND)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_default_RSA
#  define ENGINE_get_default_RSA OPENSSL_MANGLER(ENGINE_get_default_RSA)
# endif
#else
# ifndef _ENGINE_get_default_RSA
#  define _ENGINE_get_default_RSA OPENSSL_MANGLER_ASM(ENGINE_get_default_RSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_destroy_function
#  define ENGINE_get_destroy_function OPENSSL_MANGLER(ENGINE_get_destroy_function)
# endif
#else
# ifndef _ENGINE_get_destroy_function
#  define _ENGINE_get_destroy_function OPENSSL_MANGLER_ASM(ENGINE_get_destroy_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_digest
#  define ENGINE_get_digest OPENSSL_MANGLER(ENGINE_get_digest)
# endif
#else
# ifndef _ENGINE_get_digest
#  define _ENGINE_get_digest OPENSSL_MANGLER_ASM(ENGINE_get_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_digest_engine
#  define ENGINE_get_digest_engine OPENSSL_MANGLER(ENGINE_get_digest_engine)
# endif
#else
# ifndef _ENGINE_get_digest_engine
#  define _ENGINE_get_digest_engine OPENSSL_MANGLER_ASM(ENGINE_get_digest_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_digests
#  define ENGINE_get_digests OPENSSL_MANGLER(ENGINE_get_digests)
# endif
#else
# ifndef _ENGINE_get_digests
#  define _ENGINE_get_digests OPENSSL_MANGLER_ASM(ENGINE_get_digests)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_ex_data
#  define ENGINE_get_ex_data OPENSSL_MANGLER(ENGINE_get_ex_data)
# endif
#else
# ifndef _ENGINE_get_ex_data
#  define _ENGINE_get_ex_data OPENSSL_MANGLER_ASM(ENGINE_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_finish_function
#  define ENGINE_get_finish_function OPENSSL_MANGLER(ENGINE_get_finish_function)
# endif
#else
# ifndef _ENGINE_get_finish_function
#  define _ENGINE_get_finish_function OPENSSL_MANGLER_ASM(ENGINE_get_finish_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_first
#  define ENGINE_get_first OPENSSL_MANGLER(ENGINE_get_first)
# endif
#else
# ifndef _ENGINE_get_first
#  define _ENGINE_get_first OPENSSL_MANGLER_ASM(ENGINE_get_first)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_flags
#  define ENGINE_get_flags OPENSSL_MANGLER(ENGINE_get_flags)
# endif
#else
# ifndef _ENGINE_get_flags
#  define _ENGINE_get_flags OPENSSL_MANGLER_ASM(ENGINE_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_id
#  define ENGINE_get_id OPENSSL_MANGLER(ENGINE_get_id)
# endif
#else
# ifndef _ENGINE_get_id
#  define _ENGINE_get_id OPENSSL_MANGLER_ASM(ENGINE_get_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_init_function
#  define ENGINE_get_init_function OPENSSL_MANGLER(ENGINE_get_init_function)
# endif
#else
# ifndef _ENGINE_get_init_function
#  define _ENGINE_get_init_function OPENSSL_MANGLER_ASM(ENGINE_get_init_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_last
#  define ENGINE_get_last OPENSSL_MANGLER(ENGINE_get_last)
# endif
#else
# ifndef _ENGINE_get_last
#  define _ENGINE_get_last OPENSSL_MANGLER_ASM(ENGINE_get_last)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_load_privkey_function
#  define ENGINE_get_load_privkey_function OPENSSL_MANGLER(ENGINE_get_load_privkey_function)
# endif
#else
# ifndef _ENGINE_get_load_privkey_function
#  define _ENGINE_get_load_privkey_function OPENSSL_MANGLER_ASM(ENGINE_get_load_privkey_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_load_pubkey_function
#  define ENGINE_get_load_pubkey_function OPENSSL_MANGLER(ENGINE_get_load_pubkey_function)
# endif
#else
# ifndef _ENGINE_get_load_pubkey_function
#  define _ENGINE_get_load_pubkey_function OPENSSL_MANGLER_ASM(ENGINE_get_load_pubkey_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_name
#  define ENGINE_get_name OPENSSL_MANGLER(ENGINE_get_name)
# endif
#else
# ifndef _ENGINE_get_name
#  define _ENGINE_get_name OPENSSL_MANGLER_ASM(ENGINE_get_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_next
#  define ENGINE_get_next OPENSSL_MANGLER(ENGINE_get_next)
# endif
#else
# ifndef _ENGINE_get_next
#  define _ENGINE_get_next OPENSSL_MANGLER_ASM(ENGINE_get_next)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_pkey_asn1_meth
#  define ENGINE_get_pkey_asn1_meth OPENSSL_MANGLER(ENGINE_get_pkey_asn1_meth)
# endif
#else
# ifndef _ENGINE_get_pkey_asn1_meth
#  define _ENGINE_get_pkey_asn1_meth OPENSSL_MANGLER_ASM(ENGINE_get_pkey_asn1_meth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_pkey_asn1_meth_engine
#  define ENGINE_get_pkey_asn1_meth_engine OPENSSL_MANGLER(ENGINE_get_pkey_asn1_meth_engine)
# endif
#else
# ifndef _ENGINE_get_pkey_asn1_meth_engine
#  define _ENGINE_get_pkey_asn1_meth_engine OPENSSL_MANGLER_ASM(ENGINE_get_pkey_asn1_meth_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_pkey_asn1_meth_str
#  define ENGINE_get_pkey_asn1_meth_str OPENSSL_MANGLER(ENGINE_get_pkey_asn1_meth_str)
# endif
#else
# ifndef _ENGINE_get_pkey_asn1_meth_str
#  define _ENGINE_get_pkey_asn1_meth_str OPENSSL_MANGLER_ASM(ENGINE_get_pkey_asn1_meth_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_pkey_asn1_meths
#  define ENGINE_get_pkey_asn1_meths OPENSSL_MANGLER(ENGINE_get_pkey_asn1_meths)
# endif
#else
# ifndef _ENGINE_get_pkey_asn1_meths
#  define _ENGINE_get_pkey_asn1_meths OPENSSL_MANGLER_ASM(ENGINE_get_pkey_asn1_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_pkey_meth
#  define ENGINE_get_pkey_meth OPENSSL_MANGLER(ENGINE_get_pkey_meth)
# endif
#else
# ifndef _ENGINE_get_pkey_meth
#  define _ENGINE_get_pkey_meth OPENSSL_MANGLER_ASM(ENGINE_get_pkey_meth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_pkey_meth_engine
#  define ENGINE_get_pkey_meth_engine OPENSSL_MANGLER(ENGINE_get_pkey_meth_engine)
# endif
#else
# ifndef _ENGINE_get_pkey_meth_engine
#  define _ENGINE_get_pkey_meth_engine OPENSSL_MANGLER_ASM(ENGINE_get_pkey_meth_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_pkey_meths
#  define ENGINE_get_pkey_meths OPENSSL_MANGLER(ENGINE_get_pkey_meths)
# endif
#else
# ifndef _ENGINE_get_pkey_meths
#  define _ENGINE_get_pkey_meths OPENSSL_MANGLER_ASM(ENGINE_get_pkey_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_prev
#  define ENGINE_get_prev OPENSSL_MANGLER(ENGINE_get_prev)
# endif
#else
# ifndef _ENGINE_get_prev
#  define _ENGINE_get_prev OPENSSL_MANGLER_ASM(ENGINE_get_prev)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_ssl_client_cert_function
#  define ENGINE_get_ssl_client_cert_function OPENSSL_MANGLER(ENGINE_get_ssl_client_cert_function)
# endif
#else
# ifndef _ENGINE_get_ssl_client_cert_function
#  define _ENGINE_get_ssl_client_cert_function OPENSSL_MANGLER_ASM(ENGINE_get_ssl_client_cert_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_static_state
#  define ENGINE_get_static_state OPENSSL_MANGLER(ENGINE_get_static_state)
# endif
#else
# ifndef _ENGINE_get_static_state
#  define _ENGINE_get_static_state OPENSSL_MANGLER_ASM(ENGINE_get_static_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_get_table_flags
#  define ENGINE_get_table_flags OPENSSL_MANGLER(ENGINE_get_table_flags)
# endif
#else
# ifndef _ENGINE_get_table_flags
#  define _ENGINE_get_table_flags OPENSSL_MANGLER_ASM(ENGINE_get_table_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_init
#  define ENGINE_init OPENSSL_MANGLER(ENGINE_init)
# endif
#else
# ifndef _ENGINE_init
#  define _ENGINE_init OPENSSL_MANGLER_ASM(ENGINE_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_load_builtin_engines
#  define ENGINE_load_builtin_engines OPENSSL_MANGLER(ENGINE_load_builtin_engines)
# endif
#else
# ifndef _ENGINE_load_builtin_engines
#  define _ENGINE_load_builtin_engines OPENSSL_MANGLER_ASM(ENGINE_load_builtin_engines)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_load_private_key
#  define ENGINE_load_private_key OPENSSL_MANGLER(ENGINE_load_private_key)
# endif
#else
# ifndef _ENGINE_load_private_key
#  define _ENGINE_load_private_key OPENSSL_MANGLER_ASM(ENGINE_load_private_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_load_public_key
#  define ENGINE_load_public_key OPENSSL_MANGLER(ENGINE_load_public_key)
# endif
#else
# ifndef _ENGINE_load_public_key
#  define _ENGINE_load_public_key OPENSSL_MANGLER_ASM(ENGINE_load_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_load_ssl_client_cert
#  define ENGINE_load_ssl_client_cert OPENSSL_MANGLER(ENGINE_load_ssl_client_cert)
# endif
#else
# ifndef _ENGINE_load_ssl_client_cert
#  define _ENGINE_load_ssl_client_cert OPENSSL_MANGLER_ASM(ENGINE_load_ssl_client_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_new
#  define ENGINE_new OPENSSL_MANGLER(ENGINE_new)
# endif
#else
# ifndef _ENGINE_new
#  define _ENGINE_new OPENSSL_MANGLER_ASM(ENGINE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_pkey_asn1_find_str
#  define ENGINE_pkey_asn1_find_str OPENSSL_MANGLER(ENGINE_pkey_asn1_find_str)
# endif
#else
# ifndef _ENGINE_pkey_asn1_find_str
#  define _ENGINE_pkey_asn1_find_str OPENSSL_MANGLER_ASM(ENGINE_pkey_asn1_find_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_DH
#  define ENGINE_register_DH OPENSSL_MANGLER(ENGINE_register_DH)
# endif
#else
# ifndef _ENGINE_register_DH
#  define _ENGINE_register_DH OPENSSL_MANGLER_ASM(ENGINE_register_DH)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_DSA
#  define ENGINE_register_DSA OPENSSL_MANGLER(ENGINE_register_DSA)
# endif
#else
# ifndef _ENGINE_register_DSA
#  define _ENGINE_register_DSA OPENSSL_MANGLER_ASM(ENGINE_register_DSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_EC
#  define ENGINE_register_EC OPENSSL_MANGLER(ENGINE_register_EC)
# endif
#else
# ifndef _ENGINE_register_EC
#  define _ENGINE_register_EC OPENSSL_MANGLER_ASM(ENGINE_register_EC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_RAND
#  define ENGINE_register_RAND OPENSSL_MANGLER(ENGINE_register_RAND)
# endif
#else
# ifndef _ENGINE_register_RAND
#  define _ENGINE_register_RAND OPENSSL_MANGLER_ASM(ENGINE_register_RAND)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_RSA
#  define ENGINE_register_RSA OPENSSL_MANGLER(ENGINE_register_RSA)
# endif
#else
# ifndef _ENGINE_register_RSA
#  define _ENGINE_register_RSA OPENSSL_MANGLER_ASM(ENGINE_register_RSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_all_DH
#  define ENGINE_register_all_DH OPENSSL_MANGLER(ENGINE_register_all_DH)
# endif
#else
# ifndef _ENGINE_register_all_DH
#  define _ENGINE_register_all_DH OPENSSL_MANGLER_ASM(ENGINE_register_all_DH)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_all_DSA
#  define ENGINE_register_all_DSA OPENSSL_MANGLER(ENGINE_register_all_DSA)
# endif
#else
# ifndef _ENGINE_register_all_DSA
#  define _ENGINE_register_all_DSA OPENSSL_MANGLER_ASM(ENGINE_register_all_DSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_all_EC
#  define ENGINE_register_all_EC OPENSSL_MANGLER(ENGINE_register_all_EC)
# endif
#else
# ifndef _ENGINE_register_all_EC
#  define _ENGINE_register_all_EC OPENSSL_MANGLER_ASM(ENGINE_register_all_EC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_all_RAND
#  define ENGINE_register_all_RAND OPENSSL_MANGLER(ENGINE_register_all_RAND)
# endif
#else
# ifndef _ENGINE_register_all_RAND
#  define _ENGINE_register_all_RAND OPENSSL_MANGLER_ASM(ENGINE_register_all_RAND)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_all_RSA
#  define ENGINE_register_all_RSA OPENSSL_MANGLER(ENGINE_register_all_RSA)
# endif
#else
# ifndef _ENGINE_register_all_RSA
#  define _ENGINE_register_all_RSA OPENSSL_MANGLER_ASM(ENGINE_register_all_RSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_all_ciphers
#  define ENGINE_register_all_ciphers OPENSSL_MANGLER(ENGINE_register_all_ciphers)
# endif
#else
# ifndef _ENGINE_register_all_ciphers
#  define _ENGINE_register_all_ciphers OPENSSL_MANGLER_ASM(ENGINE_register_all_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_all_complete
#  define ENGINE_register_all_complete OPENSSL_MANGLER(ENGINE_register_all_complete)
# endif
#else
# ifndef _ENGINE_register_all_complete
#  define _ENGINE_register_all_complete OPENSSL_MANGLER_ASM(ENGINE_register_all_complete)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_all_digests
#  define ENGINE_register_all_digests OPENSSL_MANGLER(ENGINE_register_all_digests)
# endif
#else
# ifndef _ENGINE_register_all_digests
#  define _ENGINE_register_all_digests OPENSSL_MANGLER_ASM(ENGINE_register_all_digests)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_all_pkey_asn1_meths
#  define ENGINE_register_all_pkey_asn1_meths OPENSSL_MANGLER(ENGINE_register_all_pkey_asn1_meths)
# endif
#else
# ifndef _ENGINE_register_all_pkey_asn1_meths
#  define _ENGINE_register_all_pkey_asn1_meths OPENSSL_MANGLER_ASM(ENGINE_register_all_pkey_asn1_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_all_pkey_meths
#  define ENGINE_register_all_pkey_meths OPENSSL_MANGLER(ENGINE_register_all_pkey_meths)
# endif
#else
# ifndef _ENGINE_register_all_pkey_meths
#  define _ENGINE_register_all_pkey_meths OPENSSL_MANGLER_ASM(ENGINE_register_all_pkey_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_ciphers
#  define ENGINE_register_ciphers OPENSSL_MANGLER(ENGINE_register_ciphers)
# endif
#else
# ifndef _ENGINE_register_ciphers
#  define _ENGINE_register_ciphers OPENSSL_MANGLER_ASM(ENGINE_register_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_complete
#  define ENGINE_register_complete OPENSSL_MANGLER(ENGINE_register_complete)
# endif
#else
# ifndef _ENGINE_register_complete
#  define _ENGINE_register_complete OPENSSL_MANGLER_ASM(ENGINE_register_complete)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_digests
#  define ENGINE_register_digests OPENSSL_MANGLER(ENGINE_register_digests)
# endif
#else
# ifndef _ENGINE_register_digests
#  define _ENGINE_register_digests OPENSSL_MANGLER_ASM(ENGINE_register_digests)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_pkey_asn1_meths
#  define ENGINE_register_pkey_asn1_meths OPENSSL_MANGLER(ENGINE_register_pkey_asn1_meths)
# endif
#else
# ifndef _ENGINE_register_pkey_asn1_meths
#  define _ENGINE_register_pkey_asn1_meths OPENSSL_MANGLER_ASM(ENGINE_register_pkey_asn1_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_register_pkey_meths
#  define ENGINE_register_pkey_meths OPENSSL_MANGLER(ENGINE_register_pkey_meths)
# endif
#else
# ifndef _ENGINE_register_pkey_meths
#  define _ENGINE_register_pkey_meths OPENSSL_MANGLER_ASM(ENGINE_register_pkey_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_remove
#  define ENGINE_remove OPENSSL_MANGLER(ENGINE_remove)
# endif
#else
# ifndef _ENGINE_remove
#  define _ENGINE_remove OPENSSL_MANGLER_ASM(ENGINE_remove)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_DH
#  define ENGINE_set_DH OPENSSL_MANGLER(ENGINE_set_DH)
# endif
#else
# ifndef _ENGINE_set_DH
#  define _ENGINE_set_DH OPENSSL_MANGLER_ASM(ENGINE_set_DH)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_DSA
#  define ENGINE_set_DSA OPENSSL_MANGLER(ENGINE_set_DSA)
# endif
#else
# ifndef _ENGINE_set_DSA
#  define _ENGINE_set_DSA OPENSSL_MANGLER_ASM(ENGINE_set_DSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_EC
#  define ENGINE_set_EC OPENSSL_MANGLER(ENGINE_set_EC)
# endif
#else
# ifndef _ENGINE_set_EC
#  define _ENGINE_set_EC OPENSSL_MANGLER_ASM(ENGINE_set_EC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_RAND
#  define ENGINE_set_RAND OPENSSL_MANGLER(ENGINE_set_RAND)
# endif
#else
# ifndef _ENGINE_set_RAND
#  define _ENGINE_set_RAND OPENSSL_MANGLER_ASM(ENGINE_set_RAND)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_RSA
#  define ENGINE_set_RSA OPENSSL_MANGLER(ENGINE_set_RSA)
# endif
#else
# ifndef _ENGINE_set_RSA
#  define _ENGINE_set_RSA OPENSSL_MANGLER_ASM(ENGINE_set_RSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_ciphers
#  define ENGINE_set_ciphers OPENSSL_MANGLER(ENGINE_set_ciphers)
# endif
#else
# ifndef _ENGINE_set_ciphers
#  define _ENGINE_set_ciphers OPENSSL_MANGLER_ASM(ENGINE_set_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_cmd_defns
#  define ENGINE_set_cmd_defns OPENSSL_MANGLER(ENGINE_set_cmd_defns)
# endif
#else
# ifndef _ENGINE_set_cmd_defns
#  define _ENGINE_set_cmd_defns OPENSSL_MANGLER_ASM(ENGINE_set_cmd_defns)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_ctrl_function
#  define ENGINE_set_ctrl_function OPENSSL_MANGLER(ENGINE_set_ctrl_function)
# endif
#else
# ifndef _ENGINE_set_ctrl_function
#  define _ENGINE_set_ctrl_function OPENSSL_MANGLER_ASM(ENGINE_set_ctrl_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_default
#  define ENGINE_set_default OPENSSL_MANGLER(ENGINE_set_default)
# endif
#else
# ifndef _ENGINE_set_default
#  define _ENGINE_set_default OPENSSL_MANGLER_ASM(ENGINE_set_default)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_default_DH
#  define ENGINE_set_default_DH OPENSSL_MANGLER(ENGINE_set_default_DH)
# endif
#else
# ifndef _ENGINE_set_default_DH
#  define _ENGINE_set_default_DH OPENSSL_MANGLER_ASM(ENGINE_set_default_DH)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_default_DSA
#  define ENGINE_set_default_DSA OPENSSL_MANGLER(ENGINE_set_default_DSA)
# endif
#else
# ifndef _ENGINE_set_default_DSA
#  define _ENGINE_set_default_DSA OPENSSL_MANGLER_ASM(ENGINE_set_default_DSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_default_EC
#  define ENGINE_set_default_EC OPENSSL_MANGLER(ENGINE_set_default_EC)
# endif
#else
# ifndef _ENGINE_set_default_EC
#  define _ENGINE_set_default_EC OPENSSL_MANGLER_ASM(ENGINE_set_default_EC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_default_RAND
#  define ENGINE_set_default_RAND OPENSSL_MANGLER(ENGINE_set_default_RAND)
# endif
#else
# ifndef _ENGINE_set_default_RAND
#  define _ENGINE_set_default_RAND OPENSSL_MANGLER_ASM(ENGINE_set_default_RAND)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_default_RSA
#  define ENGINE_set_default_RSA OPENSSL_MANGLER(ENGINE_set_default_RSA)
# endif
#else
# ifndef _ENGINE_set_default_RSA
#  define _ENGINE_set_default_RSA OPENSSL_MANGLER_ASM(ENGINE_set_default_RSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_default_ciphers
#  define ENGINE_set_default_ciphers OPENSSL_MANGLER(ENGINE_set_default_ciphers)
# endif
#else
# ifndef _ENGINE_set_default_ciphers
#  define _ENGINE_set_default_ciphers OPENSSL_MANGLER_ASM(ENGINE_set_default_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_default_digests
#  define ENGINE_set_default_digests OPENSSL_MANGLER(ENGINE_set_default_digests)
# endif
#else
# ifndef _ENGINE_set_default_digests
#  define _ENGINE_set_default_digests OPENSSL_MANGLER_ASM(ENGINE_set_default_digests)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_default_pkey_asn1_meths
#  define ENGINE_set_default_pkey_asn1_meths OPENSSL_MANGLER(ENGINE_set_default_pkey_asn1_meths)
# endif
#else
# ifndef _ENGINE_set_default_pkey_asn1_meths
#  define _ENGINE_set_default_pkey_asn1_meths OPENSSL_MANGLER_ASM(ENGINE_set_default_pkey_asn1_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_default_pkey_meths
#  define ENGINE_set_default_pkey_meths OPENSSL_MANGLER(ENGINE_set_default_pkey_meths)
# endif
#else
# ifndef _ENGINE_set_default_pkey_meths
#  define _ENGINE_set_default_pkey_meths OPENSSL_MANGLER_ASM(ENGINE_set_default_pkey_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_default_string
#  define ENGINE_set_default_string OPENSSL_MANGLER(ENGINE_set_default_string)
# endif
#else
# ifndef _ENGINE_set_default_string
#  define _ENGINE_set_default_string OPENSSL_MANGLER_ASM(ENGINE_set_default_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_destroy_function
#  define ENGINE_set_destroy_function OPENSSL_MANGLER(ENGINE_set_destroy_function)
# endif
#else
# ifndef _ENGINE_set_destroy_function
#  define _ENGINE_set_destroy_function OPENSSL_MANGLER_ASM(ENGINE_set_destroy_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_digests
#  define ENGINE_set_digests OPENSSL_MANGLER(ENGINE_set_digests)
# endif
#else
# ifndef _ENGINE_set_digests
#  define _ENGINE_set_digests OPENSSL_MANGLER_ASM(ENGINE_set_digests)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_ex_data
#  define ENGINE_set_ex_data OPENSSL_MANGLER(ENGINE_set_ex_data)
# endif
#else
# ifndef _ENGINE_set_ex_data
#  define _ENGINE_set_ex_data OPENSSL_MANGLER_ASM(ENGINE_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_finish_function
#  define ENGINE_set_finish_function OPENSSL_MANGLER(ENGINE_set_finish_function)
# endif
#else
# ifndef _ENGINE_set_finish_function
#  define _ENGINE_set_finish_function OPENSSL_MANGLER_ASM(ENGINE_set_finish_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_flags
#  define ENGINE_set_flags OPENSSL_MANGLER(ENGINE_set_flags)
# endif
#else
# ifndef _ENGINE_set_flags
#  define _ENGINE_set_flags OPENSSL_MANGLER_ASM(ENGINE_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_id
#  define ENGINE_set_id OPENSSL_MANGLER(ENGINE_set_id)
# endif
#else
# ifndef _ENGINE_set_id
#  define _ENGINE_set_id OPENSSL_MANGLER_ASM(ENGINE_set_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_init_function
#  define ENGINE_set_init_function OPENSSL_MANGLER(ENGINE_set_init_function)
# endif
#else
# ifndef _ENGINE_set_init_function
#  define _ENGINE_set_init_function OPENSSL_MANGLER_ASM(ENGINE_set_init_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_load_privkey_function
#  define ENGINE_set_load_privkey_function OPENSSL_MANGLER(ENGINE_set_load_privkey_function)
# endif
#else
# ifndef _ENGINE_set_load_privkey_function
#  define _ENGINE_set_load_privkey_function OPENSSL_MANGLER_ASM(ENGINE_set_load_privkey_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_load_pubkey_function
#  define ENGINE_set_load_pubkey_function OPENSSL_MANGLER(ENGINE_set_load_pubkey_function)
# endif
#else
# ifndef _ENGINE_set_load_pubkey_function
#  define _ENGINE_set_load_pubkey_function OPENSSL_MANGLER_ASM(ENGINE_set_load_pubkey_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_load_ssl_client_cert_function
#  define ENGINE_set_load_ssl_client_cert_function OPENSSL_MANGLER(ENGINE_set_load_ssl_client_cert_function)
# endif
#else
# ifndef _ENGINE_set_load_ssl_client_cert_function
#  define _ENGINE_set_load_ssl_client_cert_function OPENSSL_MANGLER_ASM(ENGINE_set_load_ssl_client_cert_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_name
#  define ENGINE_set_name OPENSSL_MANGLER(ENGINE_set_name)
# endif
#else
# ifndef _ENGINE_set_name
#  define _ENGINE_set_name OPENSSL_MANGLER_ASM(ENGINE_set_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_pkey_asn1_meths
#  define ENGINE_set_pkey_asn1_meths OPENSSL_MANGLER(ENGINE_set_pkey_asn1_meths)
# endif
#else
# ifndef _ENGINE_set_pkey_asn1_meths
#  define _ENGINE_set_pkey_asn1_meths OPENSSL_MANGLER_ASM(ENGINE_set_pkey_asn1_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_pkey_meths
#  define ENGINE_set_pkey_meths OPENSSL_MANGLER(ENGINE_set_pkey_meths)
# endif
#else
# ifndef _ENGINE_set_pkey_meths
#  define _ENGINE_set_pkey_meths OPENSSL_MANGLER_ASM(ENGINE_set_pkey_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_set_table_flags
#  define ENGINE_set_table_flags OPENSSL_MANGLER(ENGINE_set_table_flags)
# endif
#else
# ifndef _ENGINE_set_table_flags
#  define _ENGINE_set_table_flags OPENSSL_MANGLER_ASM(ENGINE_set_table_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_unregister_DH
#  define ENGINE_unregister_DH OPENSSL_MANGLER(ENGINE_unregister_DH)
# endif
#else
# ifndef _ENGINE_unregister_DH
#  define _ENGINE_unregister_DH OPENSSL_MANGLER_ASM(ENGINE_unregister_DH)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_unregister_DSA
#  define ENGINE_unregister_DSA OPENSSL_MANGLER(ENGINE_unregister_DSA)
# endif
#else
# ifndef _ENGINE_unregister_DSA
#  define _ENGINE_unregister_DSA OPENSSL_MANGLER_ASM(ENGINE_unregister_DSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_unregister_EC
#  define ENGINE_unregister_EC OPENSSL_MANGLER(ENGINE_unregister_EC)
# endif
#else
# ifndef _ENGINE_unregister_EC
#  define _ENGINE_unregister_EC OPENSSL_MANGLER_ASM(ENGINE_unregister_EC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_unregister_RAND
#  define ENGINE_unregister_RAND OPENSSL_MANGLER(ENGINE_unregister_RAND)
# endif
#else
# ifndef _ENGINE_unregister_RAND
#  define _ENGINE_unregister_RAND OPENSSL_MANGLER_ASM(ENGINE_unregister_RAND)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_unregister_RSA
#  define ENGINE_unregister_RSA OPENSSL_MANGLER(ENGINE_unregister_RSA)
# endif
#else
# ifndef _ENGINE_unregister_RSA
#  define _ENGINE_unregister_RSA OPENSSL_MANGLER_ASM(ENGINE_unregister_RSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_unregister_ciphers
#  define ENGINE_unregister_ciphers OPENSSL_MANGLER(ENGINE_unregister_ciphers)
# endif
#else
# ifndef _ENGINE_unregister_ciphers
#  define _ENGINE_unregister_ciphers OPENSSL_MANGLER_ASM(ENGINE_unregister_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_unregister_digests
#  define ENGINE_unregister_digests OPENSSL_MANGLER(ENGINE_unregister_digests)
# endif
#else
# ifndef _ENGINE_unregister_digests
#  define _ENGINE_unregister_digests OPENSSL_MANGLER_ASM(ENGINE_unregister_digests)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_unregister_pkey_asn1_meths
#  define ENGINE_unregister_pkey_asn1_meths OPENSSL_MANGLER(ENGINE_unregister_pkey_asn1_meths)
# endif
#else
# ifndef _ENGINE_unregister_pkey_asn1_meths
#  define _ENGINE_unregister_pkey_asn1_meths OPENSSL_MANGLER_ASM(ENGINE_unregister_pkey_asn1_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_unregister_pkey_meths
#  define ENGINE_unregister_pkey_meths OPENSSL_MANGLER(ENGINE_unregister_pkey_meths)
# endif
#else
# ifndef _ENGINE_unregister_pkey_meths
#  define _ENGINE_unregister_pkey_meths OPENSSL_MANGLER_ASM(ENGINE_unregister_pkey_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ENGINE_up_ref
#  define ENGINE_up_ref OPENSSL_MANGLER(ENGINE_up_ref)
# endif
#else
# ifndef _ENGINE_up_ref
#  define _ENGINE_up_ref OPENSSL_MANGLER_ASM(ENGINE_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_add_error_data
#  define ERR_add_error_data OPENSSL_MANGLER(ERR_add_error_data)
# endif
#else
# ifndef _ERR_add_error_data
#  define _ERR_add_error_data OPENSSL_MANGLER_ASM(ERR_add_error_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_add_error_mem_bio
#  define ERR_add_error_mem_bio OPENSSL_MANGLER(ERR_add_error_mem_bio)
# endif
#else
# ifndef _ERR_add_error_mem_bio
#  define _ERR_add_error_mem_bio OPENSSL_MANGLER_ASM(ERR_add_error_mem_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_add_error_txt
#  define ERR_add_error_txt OPENSSL_MANGLER(ERR_add_error_txt)
# endif
#else
# ifndef _ERR_add_error_txt
#  define _ERR_add_error_txt OPENSSL_MANGLER_ASM(ERR_add_error_txt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_add_error_vdata
#  define ERR_add_error_vdata OPENSSL_MANGLER(ERR_add_error_vdata)
# endif
#else
# ifndef _ERR_add_error_vdata
#  define _ERR_add_error_vdata OPENSSL_MANGLER_ASM(ERR_add_error_vdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_clear_error
#  define ERR_clear_error OPENSSL_MANGLER(ERR_clear_error)
# endif
#else
# ifndef _ERR_clear_error
#  define _ERR_clear_error OPENSSL_MANGLER_ASM(ERR_clear_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_clear_last_mark
#  define ERR_clear_last_mark OPENSSL_MANGLER(ERR_clear_last_mark)
# endif
#else
# ifndef _ERR_clear_last_mark
#  define _ERR_clear_last_mark OPENSSL_MANGLER_ASM(ERR_clear_last_mark)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_error_string
#  define ERR_error_string OPENSSL_MANGLER(ERR_error_string)
# endif
#else
# ifndef _ERR_error_string
#  define _ERR_error_string OPENSSL_MANGLER_ASM(ERR_error_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_error_string_n
#  define ERR_error_string_n OPENSSL_MANGLER(ERR_error_string_n)
# endif
#else
# ifndef _ERR_error_string_n
#  define _ERR_error_string_n OPENSSL_MANGLER_ASM(ERR_error_string_n)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_func_error_string
#  define ERR_func_error_string OPENSSL_MANGLER(ERR_func_error_string)
# endif
#else
# ifndef _ERR_func_error_string
#  define _ERR_func_error_string OPENSSL_MANGLER_ASM(ERR_func_error_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_get_error
#  define ERR_get_error OPENSSL_MANGLER(ERR_get_error)
# endif
#else
# ifndef _ERR_get_error
#  define _ERR_get_error OPENSSL_MANGLER_ASM(ERR_get_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_get_error_all
#  define ERR_get_error_all OPENSSL_MANGLER(ERR_get_error_all)
# endif
#else
# ifndef _ERR_get_error_all
#  define _ERR_get_error_all OPENSSL_MANGLER_ASM(ERR_get_error_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_get_error_line
#  define ERR_get_error_line OPENSSL_MANGLER(ERR_get_error_line)
# endif
#else
# ifndef _ERR_get_error_line
#  define _ERR_get_error_line OPENSSL_MANGLER_ASM(ERR_get_error_line)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_get_error_line_data
#  define ERR_get_error_line_data OPENSSL_MANGLER(ERR_get_error_line_data)
# endif
#else
# ifndef _ERR_get_error_line_data
#  define _ERR_get_error_line_data OPENSSL_MANGLER_ASM(ERR_get_error_line_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_get_next_error_library
#  define ERR_get_next_error_library OPENSSL_MANGLER(ERR_get_next_error_library)
# endif
#else
# ifndef _ERR_get_next_error_library
#  define _ERR_get_next_error_library OPENSSL_MANGLER_ASM(ERR_get_next_error_library)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_get_state
#  define ERR_get_state OPENSSL_MANGLER(ERR_get_state)
# endif
#else
# ifndef _ERR_get_state
#  define _ERR_get_state OPENSSL_MANGLER_ASM(ERR_get_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_lib_error_string
#  define ERR_lib_error_string OPENSSL_MANGLER(ERR_lib_error_string)
# endif
#else
# ifndef _ERR_lib_error_string
#  define _ERR_lib_error_string OPENSSL_MANGLER_ASM(ERR_lib_error_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_ASN1_strings
#  define ERR_load_ASN1_strings OPENSSL_MANGLER(ERR_load_ASN1_strings)
# endif
#else
# ifndef _ERR_load_ASN1_strings
#  define _ERR_load_ASN1_strings OPENSSL_MANGLER_ASM(ERR_load_ASN1_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_ASYNC_strings
#  define ERR_load_ASYNC_strings OPENSSL_MANGLER(ERR_load_ASYNC_strings)
# endif
#else
# ifndef _ERR_load_ASYNC_strings
#  define _ERR_load_ASYNC_strings OPENSSL_MANGLER_ASM(ERR_load_ASYNC_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_BIO_strings
#  define ERR_load_BIO_strings OPENSSL_MANGLER(ERR_load_BIO_strings)
# endif
#else
# ifndef _ERR_load_BIO_strings
#  define _ERR_load_BIO_strings OPENSSL_MANGLER_ASM(ERR_load_BIO_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_BN_strings
#  define ERR_load_BN_strings OPENSSL_MANGLER(ERR_load_BN_strings)
# endif
#else
# ifndef _ERR_load_BN_strings
#  define _ERR_load_BN_strings OPENSSL_MANGLER_ASM(ERR_load_BN_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_BUF_strings
#  define ERR_load_BUF_strings OPENSSL_MANGLER(ERR_load_BUF_strings)
# endif
#else
# ifndef _ERR_load_BUF_strings
#  define _ERR_load_BUF_strings OPENSSL_MANGLER_ASM(ERR_load_BUF_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_CMS_strings
#  define ERR_load_CMS_strings OPENSSL_MANGLER(ERR_load_CMS_strings)
# endif
#else
# ifndef _ERR_load_CMS_strings
#  define _ERR_load_CMS_strings OPENSSL_MANGLER_ASM(ERR_load_CMS_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_COMP_strings
#  define ERR_load_COMP_strings OPENSSL_MANGLER(ERR_load_COMP_strings)
# endif
#else
# ifndef _ERR_load_COMP_strings
#  define _ERR_load_COMP_strings OPENSSL_MANGLER_ASM(ERR_load_COMP_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_CONF_strings
#  define ERR_load_CONF_strings OPENSSL_MANGLER(ERR_load_CONF_strings)
# endif
#else
# ifndef _ERR_load_CONF_strings
#  define _ERR_load_CONF_strings OPENSSL_MANGLER_ASM(ERR_load_CONF_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_CRYPTO_strings
#  define ERR_load_CRYPTO_strings OPENSSL_MANGLER(ERR_load_CRYPTO_strings)
# endif
#else
# ifndef _ERR_load_CRYPTO_strings
#  define _ERR_load_CRYPTO_strings OPENSSL_MANGLER_ASM(ERR_load_CRYPTO_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_CT_strings
#  define ERR_load_CT_strings OPENSSL_MANGLER(ERR_load_CT_strings)
# endif
#else
# ifndef _ERR_load_CT_strings
#  define _ERR_load_CT_strings OPENSSL_MANGLER_ASM(ERR_load_CT_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_DH_strings
#  define ERR_load_DH_strings OPENSSL_MANGLER(ERR_load_DH_strings)
# endif
#else
# ifndef _ERR_load_DH_strings
#  define _ERR_load_DH_strings OPENSSL_MANGLER_ASM(ERR_load_DH_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_DSA_strings
#  define ERR_load_DSA_strings OPENSSL_MANGLER(ERR_load_DSA_strings)
# endif
#else
# ifndef _ERR_load_DSA_strings
#  define _ERR_load_DSA_strings OPENSSL_MANGLER_ASM(ERR_load_DSA_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_EC_strings
#  define ERR_load_EC_strings OPENSSL_MANGLER(ERR_load_EC_strings)
# endif
#else
# ifndef _ERR_load_EC_strings
#  define _ERR_load_EC_strings OPENSSL_MANGLER_ASM(ERR_load_EC_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_ENGINE_strings
#  define ERR_load_ENGINE_strings OPENSSL_MANGLER(ERR_load_ENGINE_strings)
# endif
#else
# ifndef _ERR_load_ENGINE_strings
#  define _ERR_load_ENGINE_strings OPENSSL_MANGLER_ASM(ERR_load_ENGINE_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_ERR_strings
#  define ERR_load_ERR_strings OPENSSL_MANGLER(ERR_load_ERR_strings)
# endif
#else
# ifndef _ERR_load_ERR_strings
#  define _ERR_load_ERR_strings OPENSSL_MANGLER_ASM(ERR_load_ERR_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_EVP_strings
#  define ERR_load_EVP_strings OPENSSL_MANGLER(ERR_load_EVP_strings)
# endif
#else
# ifndef _ERR_load_EVP_strings
#  define _ERR_load_EVP_strings OPENSSL_MANGLER_ASM(ERR_load_EVP_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_KDF_strings
#  define ERR_load_KDF_strings OPENSSL_MANGLER(ERR_load_KDF_strings)
# endif
#else
# ifndef _ERR_load_KDF_strings
#  define _ERR_load_KDF_strings OPENSSL_MANGLER_ASM(ERR_load_KDF_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_OBJ_strings
#  define ERR_load_OBJ_strings OPENSSL_MANGLER(ERR_load_OBJ_strings)
# endif
#else
# ifndef _ERR_load_OBJ_strings
#  define _ERR_load_OBJ_strings OPENSSL_MANGLER_ASM(ERR_load_OBJ_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_OCSP_strings
#  define ERR_load_OCSP_strings OPENSSL_MANGLER(ERR_load_OCSP_strings)
# endif
#else
# ifndef _ERR_load_OCSP_strings
#  define _ERR_load_OCSP_strings OPENSSL_MANGLER_ASM(ERR_load_OCSP_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_OSSL_STORE_strings
#  define ERR_load_OSSL_STORE_strings OPENSSL_MANGLER(ERR_load_OSSL_STORE_strings)
# endif
#else
# ifndef _ERR_load_OSSL_STORE_strings
#  define _ERR_load_OSSL_STORE_strings OPENSSL_MANGLER_ASM(ERR_load_OSSL_STORE_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_PEM_strings
#  define ERR_load_PEM_strings OPENSSL_MANGLER(ERR_load_PEM_strings)
# endif
#else
# ifndef _ERR_load_PEM_strings
#  define _ERR_load_PEM_strings OPENSSL_MANGLER_ASM(ERR_load_PEM_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_PKCS12_strings
#  define ERR_load_PKCS12_strings OPENSSL_MANGLER(ERR_load_PKCS12_strings)
# endif
#else
# ifndef _ERR_load_PKCS12_strings
#  define _ERR_load_PKCS12_strings OPENSSL_MANGLER_ASM(ERR_load_PKCS12_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_PKCS7_strings
#  define ERR_load_PKCS7_strings OPENSSL_MANGLER(ERR_load_PKCS7_strings)
# endif
#else
# ifndef _ERR_load_PKCS7_strings
#  define _ERR_load_PKCS7_strings OPENSSL_MANGLER_ASM(ERR_load_PKCS7_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_RAND_strings
#  define ERR_load_RAND_strings OPENSSL_MANGLER(ERR_load_RAND_strings)
# endif
#else
# ifndef _ERR_load_RAND_strings
#  define _ERR_load_RAND_strings OPENSSL_MANGLER_ASM(ERR_load_RAND_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_RSA_strings
#  define ERR_load_RSA_strings OPENSSL_MANGLER(ERR_load_RSA_strings)
# endif
#else
# ifndef _ERR_load_RSA_strings
#  define _ERR_load_RSA_strings OPENSSL_MANGLER_ASM(ERR_load_RSA_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_TS_strings
#  define ERR_load_TS_strings OPENSSL_MANGLER(ERR_load_TS_strings)
# endif
#else
# ifndef _ERR_load_TS_strings
#  define _ERR_load_TS_strings OPENSSL_MANGLER_ASM(ERR_load_TS_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_UI_strings
#  define ERR_load_UI_strings OPENSSL_MANGLER(ERR_load_UI_strings)
# endif
#else
# ifndef _ERR_load_UI_strings
#  define _ERR_load_UI_strings OPENSSL_MANGLER_ASM(ERR_load_UI_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_X509V3_strings
#  define ERR_load_X509V3_strings OPENSSL_MANGLER(ERR_load_X509V3_strings)
# endif
#else
# ifndef _ERR_load_X509V3_strings
#  define _ERR_load_X509V3_strings OPENSSL_MANGLER_ASM(ERR_load_X509V3_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_X509_strings
#  define ERR_load_X509_strings OPENSSL_MANGLER(ERR_load_X509_strings)
# endif
#else
# ifndef _ERR_load_X509_strings
#  define _ERR_load_X509_strings OPENSSL_MANGLER_ASM(ERR_load_X509_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_strings
#  define ERR_load_strings OPENSSL_MANGLER(ERR_load_strings)
# endif
#else
# ifndef _ERR_load_strings
#  define _ERR_load_strings OPENSSL_MANGLER_ASM(ERR_load_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_load_strings_const
#  define ERR_load_strings_const OPENSSL_MANGLER(ERR_load_strings_const)
# endif
#else
# ifndef _ERR_load_strings_const
#  define _ERR_load_strings_const OPENSSL_MANGLER_ASM(ERR_load_strings_const)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_new
#  define ERR_new OPENSSL_MANGLER(ERR_new)
# endif
#else
# ifndef _ERR_new
#  define _ERR_new OPENSSL_MANGLER_ASM(ERR_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_error
#  define ERR_peek_error OPENSSL_MANGLER(ERR_peek_error)
# endif
#else
# ifndef _ERR_peek_error
#  define _ERR_peek_error OPENSSL_MANGLER_ASM(ERR_peek_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_error_all
#  define ERR_peek_error_all OPENSSL_MANGLER(ERR_peek_error_all)
# endif
#else
# ifndef _ERR_peek_error_all
#  define _ERR_peek_error_all OPENSSL_MANGLER_ASM(ERR_peek_error_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_error_data
#  define ERR_peek_error_data OPENSSL_MANGLER(ERR_peek_error_data)
# endif
#else
# ifndef _ERR_peek_error_data
#  define _ERR_peek_error_data OPENSSL_MANGLER_ASM(ERR_peek_error_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_error_func
#  define ERR_peek_error_func OPENSSL_MANGLER(ERR_peek_error_func)
# endif
#else
# ifndef _ERR_peek_error_func
#  define _ERR_peek_error_func OPENSSL_MANGLER_ASM(ERR_peek_error_func)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_error_line
#  define ERR_peek_error_line OPENSSL_MANGLER(ERR_peek_error_line)
# endif
#else
# ifndef _ERR_peek_error_line
#  define _ERR_peek_error_line OPENSSL_MANGLER_ASM(ERR_peek_error_line)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_error_line_data
#  define ERR_peek_error_line_data OPENSSL_MANGLER(ERR_peek_error_line_data)
# endif
#else
# ifndef _ERR_peek_error_line_data
#  define _ERR_peek_error_line_data OPENSSL_MANGLER_ASM(ERR_peek_error_line_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_last_error
#  define ERR_peek_last_error OPENSSL_MANGLER(ERR_peek_last_error)
# endif
#else
# ifndef _ERR_peek_last_error
#  define _ERR_peek_last_error OPENSSL_MANGLER_ASM(ERR_peek_last_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_last_error_all
#  define ERR_peek_last_error_all OPENSSL_MANGLER(ERR_peek_last_error_all)
# endif
#else
# ifndef _ERR_peek_last_error_all
#  define _ERR_peek_last_error_all OPENSSL_MANGLER_ASM(ERR_peek_last_error_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_last_error_data
#  define ERR_peek_last_error_data OPENSSL_MANGLER(ERR_peek_last_error_data)
# endif
#else
# ifndef _ERR_peek_last_error_data
#  define _ERR_peek_last_error_data OPENSSL_MANGLER_ASM(ERR_peek_last_error_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_last_error_func
#  define ERR_peek_last_error_func OPENSSL_MANGLER(ERR_peek_last_error_func)
# endif
#else
# ifndef _ERR_peek_last_error_func
#  define _ERR_peek_last_error_func OPENSSL_MANGLER_ASM(ERR_peek_last_error_func)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_last_error_line
#  define ERR_peek_last_error_line OPENSSL_MANGLER(ERR_peek_last_error_line)
# endif
#else
# ifndef _ERR_peek_last_error_line
#  define _ERR_peek_last_error_line OPENSSL_MANGLER_ASM(ERR_peek_last_error_line)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_peek_last_error_line_data
#  define ERR_peek_last_error_line_data OPENSSL_MANGLER(ERR_peek_last_error_line_data)
# endif
#else
# ifndef _ERR_peek_last_error_line_data
#  define _ERR_peek_last_error_line_data OPENSSL_MANGLER_ASM(ERR_peek_last_error_line_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_pop_to_mark
#  define ERR_pop_to_mark OPENSSL_MANGLER(ERR_pop_to_mark)
# endif
#else
# ifndef _ERR_pop_to_mark
#  define _ERR_pop_to_mark OPENSSL_MANGLER_ASM(ERR_pop_to_mark)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_print_errors
#  define ERR_print_errors OPENSSL_MANGLER(ERR_print_errors)
# endif
#else
# ifndef _ERR_print_errors
#  define _ERR_print_errors OPENSSL_MANGLER_ASM(ERR_print_errors)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_print_errors_cb
#  define ERR_print_errors_cb OPENSSL_MANGLER(ERR_print_errors_cb)
# endif
#else
# ifndef _ERR_print_errors_cb
#  define _ERR_print_errors_cb OPENSSL_MANGLER_ASM(ERR_print_errors_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_print_errors_fp
#  define ERR_print_errors_fp OPENSSL_MANGLER(ERR_print_errors_fp)
# endif
#else
# ifndef _ERR_print_errors_fp
#  define _ERR_print_errors_fp OPENSSL_MANGLER_ASM(ERR_print_errors_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_reason_error_string
#  define ERR_reason_error_string OPENSSL_MANGLER(ERR_reason_error_string)
# endif
#else
# ifndef _ERR_reason_error_string
#  define _ERR_reason_error_string OPENSSL_MANGLER_ASM(ERR_reason_error_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_set_debug
#  define ERR_set_debug OPENSSL_MANGLER(ERR_set_debug)
# endif
#else
# ifndef _ERR_set_debug
#  define _ERR_set_debug OPENSSL_MANGLER_ASM(ERR_set_debug)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_set_error
#  define ERR_set_error OPENSSL_MANGLER(ERR_set_error)
# endif
#else
# ifndef _ERR_set_error
#  define _ERR_set_error OPENSSL_MANGLER_ASM(ERR_set_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_set_error_data
#  define ERR_set_error_data OPENSSL_MANGLER(ERR_set_error_data)
# endif
#else
# ifndef _ERR_set_error_data
#  define _ERR_set_error_data OPENSSL_MANGLER_ASM(ERR_set_error_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_set_mark
#  define ERR_set_mark OPENSSL_MANGLER(ERR_set_mark)
# endif
#else
# ifndef _ERR_set_mark
#  define _ERR_set_mark OPENSSL_MANGLER_ASM(ERR_set_mark)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_unload_strings
#  define ERR_unload_strings OPENSSL_MANGLER(ERR_unload_strings)
# endif
#else
# ifndef _ERR_unload_strings
#  define _ERR_unload_strings OPENSSL_MANGLER_ASM(ERR_unload_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ERR_vset_error
#  define ERR_vset_error OPENSSL_MANGLER(ERR_vset_error)
# endif
#else
# ifndef _ERR_vset_error
#  define _ERR_vset_error OPENSSL_MANGLER_ASM(ERR_vset_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_CERT_ID_V2_dup
#  define ESS_CERT_ID_V2_dup OPENSSL_MANGLER(ESS_CERT_ID_V2_dup)
# endif
#else
# ifndef _ESS_CERT_ID_V2_dup
#  define _ESS_CERT_ID_V2_dup OPENSSL_MANGLER_ASM(ESS_CERT_ID_V2_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_CERT_ID_V2_free
#  define ESS_CERT_ID_V2_free OPENSSL_MANGLER(ESS_CERT_ID_V2_free)
# endif
#else
# ifndef _ESS_CERT_ID_V2_free
#  define _ESS_CERT_ID_V2_free OPENSSL_MANGLER_ASM(ESS_CERT_ID_V2_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_CERT_ID_V2_new
#  define ESS_CERT_ID_V2_new OPENSSL_MANGLER(ESS_CERT_ID_V2_new)
# endif
#else
# ifndef _ESS_CERT_ID_V2_new
#  define _ESS_CERT_ID_V2_new OPENSSL_MANGLER_ASM(ESS_CERT_ID_V2_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_CERT_ID_dup
#  define ESS_CERT_ID_dup OPENSSL_MANGLER(ESS_CERT_ID_dup)
# endif
#else
# ifndef _ESS_CERT_ID_dup
#  define _ESS_CERT_ID_dup OPENSSL_MANGLER_ASM(ESS_CERT_ID_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_CERT_ID_free
#  define ESS_CERT_ID_free OPENSSL_MANGLER(ESS_CERT_ID_free)
# endif
#else
# ifndef _ESS_CERT_ID_free
#  define _ESS_CERT_ID_free OPENSSL_MANGLER_ASM(ESS_CERT_ID_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_CERT_ID_new
#  define ESS_CERT_ID_new OPENSSL_MANGLER(ESS_CERT_ID_new)
# endif
#else
# ifndef _ESS_CERT_ID_new
#  define _ESS_CERT_ID_new OPENSSL_MANGLER_ASM(ESS_CERT_ID_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_ISSUER_SERIAL_dup
#  define ESS_ISSUER_SERIAL_dup OPENSSL_MANGLER(ESS_ISSUER_SERIAL_dup)
# endif
#else
# ifndef _ESS_ISSUER_SERIAL_dup
#  define _ESS_ISSUER_SERIAL_dup OPENSSL_MANGLER_ASM(ESS_ISSUER_SERIAL_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_ISSUER_SERIAL_free
#  define ESS_ISSUER_SERIAL_free OPENSSL_MANGLER(ESS_ISSUER_SERIAL_free)
# endif
#else
# ifndef _ESS_ISSUER_SERIAL_free
#  define _ESS_ISSUER_SERIAL_free OPENSSL_MANGLER_ASM(ESS_ISSUER_SERIAL_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_ISSUER_SERIAL_new
#  define ESS_ISSUER_SERIAL_new OPENSSL_MANGLER(ESS_ISSUER_SERIAL_new)
# endif
#else
# ifndef _ESS_ISSUER_SERIAL_new
#  define _ESS_ISSUER_SERIAL_new OPENSSL_MANGLER_ASM(ESS_ISSUER_SERIAL_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_SIGNING_CERT_V2_dup
#  define ESS_SIGNING_CERT_V2_dup OPENSSL_MANGLER(ESS_SIGNING_CERT_V2_dup)
# endif
#else
# ifndef _ESS_SIGNING_CERT_V2_dup
#  define _ESS_SIGNING_CERT_V2_dup OPENSSL_MANGLER_ASM(ESS_SIGNING_CERT_V2_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_SIGNING_CERT_V2_free
#  define ESS_SIGNING_CERT_V2_free OPENSSL_MANGLER(ESS_SIGNING_CERT_V2_free)
# endif
#else
# ifndef _ESS_SIGNING_CERT_V2_free
#  define _ESS_SIGNING_CERT_V2_free OPENSSL_MANGLER_ASM(ESS_SIGNING_CERT_V2_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_SIGNING_CERT_V2_it
#  define ESS_SIGNING_CERT_V2_it OPENSSL_MANGLER(ESS_SIGNING_CERT_V2_it)
# endif
#else
# ifndef _ESS_SIGNING_CERT_V2_it
#  define _ESS_SIGNING_CERT_V2_it OPENSSL_MANGLER_ASM(ESS_SIGNING_CERT_V2_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_SIGNING_CERT_V2_new
#  define ESS_SIGNING_CERT_V2_new OPENSSL_MANGLER(ESS_SIGNING_CERT_V2_new)
# endif
#else
# ifndef _ESS_SIGNING_CERT_V2_new
#  define _ESS_SIGNING_CERT_V2_new OPENSSL_MANGLER_ASM(ESS_SIGNING_CERT_V2_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_SIGNING_CERT_dup
#  define ESS_SIGNING_CERT_dup OPENSSL_MANGLER(ESS_SIGNING_CERT_dup)
# endif
#else
# ifndef _ESS_SIGNING_CERT_dup
#  define _ESS_SIGNING_CERT_dup OPENSSL_MANGLER_ASM(ESS_SIGNING_CERT_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_SIGNING_CERT_free
#  define ESS_SIGNING_CERT_free OPENSSL_MANGLER(ESS_SIGNING_CERT_free)
# endif
#else
# ifndef _ESS_SIGNING_CERT_free
#  define _ESS_SIGNING_CERT_free OPENSSL_MANGLER_ASM(ESS_SIGNING_CERT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_SIGNING_CERT_it
#  define ESS_SIGNING_CERT_it OPENSSL_MANGLER(ESS_SIGNING_CERT_it)
# endif
#else
# ifndef _ESS_SIGNING_CERT_it
#  define _ESS_SIGNING_CERT_it OPENSSL_MANGLER_ASM(ESS_SIGNING_CERT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ESS_SIGNING_CERT_new
#  define ESS_SIGNING_CERT_new OPENSSL_MANGLER(ESS_SIGNING_CERT_new)
# endif
#else
# ifndef _ESS_SIGNING_CERT_new
#  define _ESS_SIGNING_CERT_new OPENSSL_MANGLER_ASM(ESS_SIGNING_CERT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ASYM_CIPHER_do_all_provided
#  define EVP_ASYM_CIPHER_do_all_provided OPENSSL_MANGLER(EVP_ASYM_CIPHER_do_all_provided)
# endif
#else
# ifndef _EVP_ASYM_CIPHER_do_all_provided
#  define _EVP_ASYM_CIPHER_do_all_provided OPENSSL_MANGLER_ASM(EVP_ASYM_CIPHER_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ASYM_CIPHER_fetch
#  define EVP_ASYM_CIPHER_fetch OPENSSL_MANGLER(EVP_ASYM_CIPHER_fetch)
# endif
#else
# ifndef _EVP_ASYM_CIPHER_fetch
#  define _EVP_ASYM_CIPHER_fetch OPENSSL_MANGLER_ASM(EVP_ASYM_CIPHER_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ASYM_CIPHER_free
#  define EVP_ASYM_CIPHER_free OPENSSL_MANGLER(EVP_ASYM_CIPHER_free)
# endif
#else
# ifndef _EVP_ASYM_CIPHER_free
#  define _EVP_ASYM_CIPHER_free OPENSSL_MANGLER_ASM(EVP_ASYM_CIPHER_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ASYM_CIPHER_get0_description
#  define EVP_ASYM_CIPHER_get0_description OPENSSL_MANGLER(EVP_ASYM_CIPHER_get0_description)
# endif
#else
# ifndef _EVP_ASYM_CIPHER_get0_description
#  define _EVP_ASYM_CIPHER_get0_description OPENSSL_MANGLER_ASM(EVP_ASYM_CIPHER_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ASYM_CIPHER_get0_name
#  define EVP_ASYM_CIPHER_get0_name OPENSSL_MANGLER(EVP_ASYM_CIPHER_get0_name)
# endif
#else
# ifndef _EVP_ASYM_CIPHER_get0_name
#  define _EVP_ASYM_CIPHER_get0_name OPENSSL_MANGLER_ASM(EVP_ASYM_CIPHER_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ASYM_CIPHER_get0_provider
#  define EVP_ASYM_CIPHER_get0_provider OPENSSL_MANGLER(EVP_ASYM_CIPHER_get0_provider)
# endif
#else
# ifndef _EVP_ASYM_CIPHER_get0_provider
#  define _EVP_ASYM_CIPHER_get0_provider OPENSSL_MANGLER_ASM(EVP_ASYM_CIPHER_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ASYM_CIPHER_gettable_ctx_params
#  define EVP_ASYM_CIPHER_gettable_ctx_params OPENSSL_MANGLER(EVP_ASYM_CIPHER_gettable_ctx_params)
# endif
#else
# ifndef _EVP_ASYM_CIPHER_gettable_ctx_params
#  define _EVP_ASYM_CIPHER_gettable_ctx_params OPENSSL_MANGLER_ASM(EVP_ASYM_CIPHER_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ASYM_CIPHER_is_a
#  define EVP_ASYM_CIPHER_is_a OPENSSL_MANGLER(EVP_ASYM_CIPHER_is_a)
# endif
#else
# ifndef _EVP_ASYM_CIPHER_is_a
#  define _EVP_ASYM_CIPHER_is_a OPENSSL_MANGLER_ASM(EVP_ASYM_CIPHER_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ASYM_CIPHER_names_do_all
#  define EVP_ASYM_CIPHER_names_do_all OPENSSL_MANGLER(EVP_ASYM_CIPHER_names_do_all)
# endif
#else
# ifndef _EVP_ASYM_CIPHER_names_do_all
#  define _EVP_ASYM_CIPHER_names_do_all OPENSSL_MANGLER_ASM(EVP_ASYM_CIPHER_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ASYM_CIPHER_settable_ctx_params
#  define EVP_ASYM_CIPHER_settable_ctx_params OPENSSL_MANGLER(EVP_ASYM_CIPHER_settable_ctx_params)
# endif
#else
# ifndef _EVP_ASYM_CIPHER_settable_ctx_params
#  define _EVP_ASYM_CIPHER_settable_ctx_params OPENSSL_MANGLER_ASM(EVP_ASYM_CIPHER_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ASYM_CIPHER_up_ref
#  define EVP_ASYM_CIPHER_up_ref OPENSSL_MANGLER(EVP_ASYM_CIPHER_up_ref)
# endif
#else
# ifndef _EVP_ASYM_CIPHER_up_ref
#  define _EVP_ASYM_CIPHER_up_ref OPENSSL_MANGLER_ASM(EVP_ASYM_CIPHER_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_BytesToKey
#  define EVP_BytesToKey OPENSSL_MANGLER(EVP_BytesToKey)
# endif
#else
# ifndef _EVP_BytesToKey
#  define _EVP_BytesToKey OPENSSL_MANGLER_ASM(EVP_BytesToKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_buf_noconst
#  define EVP_CIPHER_CTX_buf_noconst OPENSSL_MANGLER(EVP_CIPHER_CTX_buf_noconst)
# endif
#else
# ifndef _EVP_CIPHER_CTX_buf_noconst
#  define _EVP_CIPHER_CTX_buf_noconst OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_buf_noconst)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_cipher
#  define EVP_CIPHER_CTX_cipher OPENSSL_MANGLER(EVP_CIPHER_CTX_cipher)
# endif
#else
# ifndef _EVP_CIPHER_CTX_cipher
#  define _EVP_CIPHER_CTX_cipher OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_clear_flags
#  define EVP_CIPHER_CTX_clear_flags OPENSSL_MANGLER(EVP_CIPHER_CTX_clear_flags)
# endif
#else
# ifndef _EVP_CIPHER_CTX_clear_flags
#  define _EVP_CIPHER_CTX_clear_flags OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_clear_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_copy
#  define EVP_CIPHER_CTX_copy OPENSSL_MANGLER(EVP_CIPHER_CTX_copy)
# endif
#else
# ifndef _EVP_CIPHER_CTX_copy
#  define _EVP_CIPHER_CTX_copy OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_ctrl
#  define EVP_CIPHER_CTX_ctrl OPENSSL_MANGLER(EVP_CIPHER_CTX_ctrl)
# endif
#else
# ifndef _EVP_CIPHER_CTX_ctrl
#  define _EVP_CIPHER_CTX_ctrl OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_free
#  define EVP_CIPHER_CTX_free OPENSSL_MANGLER(EVP_CIPHER_CTX_free)
# endif
#else
# ifndef _EVP_CIPHER_CTX_free
#  define _EVP_CIPHER_CTX_free OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get0_cipher
#  define EVP_CIPHER_CTX_get0_cipher OPENSSL_MANGLER(EVP_CIPHER_CTX_get0_cipher)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get0_cipher
#  define _EVP_CIPHER_CTX_get0_cipher OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get0_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get1_cipher
#  define EVP_CIPHER_CTX_get1_cipher OPENSSL_MANGLER(EVP_CIPHER_CTX_get1_cipher)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get1_cipher
#  define _EVP_CIPHER_CTX_get1_cipher OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get1_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get_app_data
#  define EVP_CIPHER_CTX_get_app_data OPENSSL_MANGLER(EVP_CIPHER_CTX_get_app_data)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get_app_data
#  define _EVP_CIPHER_CTX_get_app_data OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get_block_size
#  define EVP_CIPHER_CTX_get_block_size OPENSSL_MANGLER(EVP_CIPHER_CTX_get_block_size)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get_block_size
#  define _EVP_CIPHER_CTX_get_block_size OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get_block_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get_cipher_data
#  define EVP_CIPHER_CTX_get_cipher_data OPENSSL_MANGLER(EVP_CIPHER_CTX_get_cipher_data)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get_cipher_data
#  define _EVP_CIPHER_CTX_get_cipher_data OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get_cipher_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get_iv_length
#  define EVP_CIPHER_CTX_get_iv_length OPENSSL_MANGLER(EVP_CIPHER_CTX_get_iv_length)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get_iv_length
#  define _EVP_CIPHER_CTX_get_iv_length OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get_iv_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get_key_length
#  define EVP_CIPHER_CTX_get_key_length OPENSSL_MANGLER(EVP_CIPHER_CTX_get_key_length)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get_key_length
#  define _EVP_CIPHER_CTX_get_key_length OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get_key_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get_nid
#  define EVP_CIPHER_CTX_get_nid OPENSSL_MANGLER(EVP_CIPHER_CTX_get_nid)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get_nid
#  define _EVP_CIPHER_CTX_get_nid OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get_num
#  define EVP_CIPHER_CTX_get_num OPENSSL_MANGLER(EVP_CIPHER_CTX_get_num)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get_num
#  define _EVP_CIPHER_CTX_get_num OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get_num)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get_original_iv
#  define EVP_CIPHER_CTX_get_original_iv OPENSSL_MANGLER(EVP_CIPHER_CTX_get_original_iv)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get_original_iv
#  define _EVP_CIPHER_CTX_get_original_iv OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get_original_iv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get_params
#  define EVP_CIPHER_CTX_get_params OPENSSL_MANGLER(EVP_CIPHER_CTX_get_params)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get_params
#  define _EVP_CIPHER_CTX_get_params OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get_tag_length
#  define EVP_CIPHER_CTX_get_tag_length OPENSSL_MANGLER(EVP_CIPHER_CTX_get_tag_length)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get_tag_length
#  define _EVP_CIPHER_CTX_get_tag_length OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get_tag_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_get_updated_iv
#  define EVP_CIPHER_CTX_get_updated_iv OPENSSL_MANGLER(EVP_CIPHER_CTX_get_updated_iv)
# endif
#else
# ifndef _EVP_CIPHER_CTX_get_updated_iv
#  define _EVP_CIPHER_CTX_get_updated_iv OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_get_updated_iv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_gettable_params
#  define EVP_CIPHER_CTX_gettable_params OPENSSL_MANGLER(EVP_CIPHER_CTX_gettable_params)
# endif
#else
# ifndef _EVP_CIPHER_CTX_gettable_params
#  define _EVP_CIPHER_CTX_gettable_params OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_is_encrypting
#  define EVP_CIPHER_CTX_is_encrypting OPENSSL_MANGLER(EVP_CIPHER_CTX_is_encrypting)
# endif
#else
# ifndef _EVP_CIPHER_CTX_is_encrypting
#  define _EVP_CIPHER_CTX_is_encrypting OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_is_encrypting)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_iv
#  define EVP_CIPHER_CTX_iv OPENSSL_MANGLER(EVP_CIPHER_CTX_iv)
# endif
#else
# ifndef _EVP_CIPHER_CTX_iv
#  define _EVP_CIPHER_CTX_iv OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_iv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_iv_noconst
#  define EVP_CIPHER_CTX_iv_noconst OPENSSL_MANGLER(EVP_CIPHER_CTX_iv_noconst)
# endif
#else
# ifndef _EVP_CIPHER_CTX_iv_noconst
#  define _EVP_CIPHER_CTX_iv_noconst OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_iv_noconst)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_new
#  define EVP_CIPHER_CTX_new OPENSSL_MANGLER(EVP_CIPHER_CTX_new)
# endif
#else
# ifndef _EVP_CIPHER_CTX_new
#  define _EVP_CIPHER_CTX_new OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_original_iv
#  define EVP_CIPHER_CTX_original_iv OPENSSL_MANGLER(EVP_CIPHER_CTX_original_iv)
# endif
#else
# ifndef _EVP_CIPHER_CTX_original_iv
#  define _EVP_CIPHER_CTX_original_iv OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_original_iv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_rand_key
#  define EVP_CIPHER_CTX_rand_key OPENSSL_MANGLER(EVP_CIPHER_CTX_rand_key)
# endif
#else
# ifndef _EVP_CIPHER_CTX_rand_key
#  define _EVP_CIPHER_CTX_rand_key OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_rand_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_reset
#  define EVP_CIPHER_CTX_reset OPENSSL_MANGLER(EVP_CIPHER_CTX_reset)
# endif
#else
# ifndef _EVP_CIPHER_CTX_reset
#  define _EVP_CIPHER_CTX_reset OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_reset)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_set_app_data
#  define EVP_CIPHER_CTX_set_app_data OPENSSL_MANGLER(EVP_CIPHER_CTX_set_app_data)
# endif
#else
# ifndef _EVP_CIPHER_CTX_set_app_data
#  define _EVP_CIPHER_CTX_set_app_data OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_set_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_set_cipher_data
#  define EVP_CIPHER_CTX_set_cipher_data OPENSSL_MANGLER(EVP_CIPHER_CTX_set_cipher_data)
# endif
#else
# ifndef _EVP_CIPHER_CTX_set_cipher_data
#  define _EVP_CIPHER_CTX_set_cipher_data OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_set_cipher_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_set_flags
#  define EVP_CIPHER_CTX_set_flags OPENSSL_MANGLER(EVP_CIPHER_CTX_set_flags)
# endif
#else
# ifndef _EVP_CIPHER_CTX_set_flags
#  define _EVP_CIPHER_CTX_set_flags OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_set_key_length
#  define EVP_CIPHER_CTX_set_key_length OPENSSL_MANGLER(EVP_CIPHER_CTX_set_key_length)
# endif
#else
# ifndef _EVP_CIPHER_CTX_set_key_length
#  define _EVP_CIPHER_CTX_set_key_length OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_set_key_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_set_num
#  define EVP_CIPHER_CTX_set_num OPENSSL_MANGLER(EVP_CIPHER_CTX_set_num)
# endif
#else
# ifndef _EVP_CIPHER_CTX_set_num
#  define _EVP_CIPHER_CTX_set_num OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_set_num)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_set_padding
#  define EVP_CIPHER_CTX_set_padding OPENSSL_MANGLER(EVP_CIPHER_CTX_set_padding)
# endif
#else
# ifndef _EVP_CIPHER_CTX_set_padding
#  define _EVP_CIPHER_CTX_set_padding OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_set_padding)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_set_params
#  define EVP_CIPHER_CTX_set_params OPENSSL_MANGLER(EVP_CIPHER_CTX_set_params)
# endif
#else
# ifndef _EVP_CIPHER_CTX_set_params
#  define _EVP_CIPHER_CTX_set_params OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_settable_params
#  define EVP_CIPHER_CTX_settable_params OPENSSL_MANGLER(EVP_CIPHER_CTX_settable_params)
# endif
#else
# ifndef _EVP_CIPHER_CTX_settable_params
#  define _EVP_CIPHER_CTX_settable_params OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_settable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_CTX_test_flags
#  define EVP_CIPHER_CTX_test_flags OPENSSL_MANGLER(EVP_CIPHER_CTX_test_flags)
# endif
#else
# ifndef _EVP_CIPHER_CTX_test_flags
#  define _EVP_CIPHER_CTX_test_flags OPENSSL_MANGLER_ASM(EVP_CIPHER_CTX_test_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_asn1_to_param
#  define EVP_CIPHER_asn1_to_param OPENSSL_MANGLER(EVP_CIPHER_asn1_to_param)
# endif
#else
# ifndef _EVP_CIPHER_asn1_to_param
#  define _EVP_CIPHER_asn1_to_param OPENSSL_MANGLER_ASM(EVP_CIPHER_asn1_to_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_do_all
#  define EVP_CIPHER_do_all OPENSSL_MANGLER(EVP_CIPHER_do_all)
# endif
#else
# ifndef _EVP_CIPHER_do_all
#  define _EVP_CIPHER_do_all OPENSSL_MANGLER_ASM(EVP_CIPHER_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_do_all_provided
#  define EVP_CIPHER_do_all_provided OPENSSL_MANGLER(EVP_CIPHER_do_all_provided)
# endif
#else
# ifndef _EVP_CIPHER_do_all_provided
#  define _EVP_CIPHER_do_all_provided OPENSSL_MANGLER_ASM(EVP_CIPHER_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_do_all_sorted
#  define EVP_CIPHER_do_all_sorted OPENSSL_MANGLER(EVP_CIPHER_do_all_sorted)
# endif
#else
# ifndef _EVP_CIPHER_do_all_sorted
#  define _EVP_CIPHER_do_all_sorted OPENSSL_MANGLER_ASM(EVP_CIPHER_do_all_sorted)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_fetch
#  define EVP_CIPHER_fetch OPENSSL_MANGLER(EVP_CIPHER_fetch)
# endif
#else
# ifndef _EVP_CIPHER_fetch
#  define _EVP_CIPHER_fetch OPENSSL_MANGLER_ASM(EVP_CIPHER_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_free
#  define EVP_CIPHER_free OPENSSL_MANGLER(EVP_CIPHER_free)
# endif
#else
# ifndef _EVP_CIPHER_free
#  define _EVP_CIPHER_free OPENSSL_MANGLER_ASM(EVP_CIPHER_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get0_description
#  define EVP_CIPHER_get0_description OPENSSL_MANGLER(EVP_CIPHER_get0_description)
# endif
#else
# ifndef _EVP_CIPHER_get0_description
#  define _EVP_CIPHER_get0_description OPENSSL_MANGLER_ASM(EVP_CIPHER_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get0_name
#  define EVP_CIPHER_get0_name OPENSSL_MANGLER(EVP_CIPHER_get0_name)
# endif
#else
# ifndef _EVP_CIPHER_get0_name
#  define _EVP_CIPHER_get0_name OPENSSL_MANGLER_ASM(EVP_CIPHER_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get0_provider
#  define EVP_CIPHER_get0_provider OPENSSL_MANGLER(EVP_CIPHER_get0_provider)
# endif
#else
# ifndef _EVP_CIPHER_get0_provider
#  define _EVP_CIPHER_get0_provider OPENSSL_MANGLER_ASM(EVP_CIPHER_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get_asn1_iv
#  define EVP_CIPHER_get_asn1_iv OPENSSL_MANGLER(EVP_CIPHER_get_asn1_iv)
# endif
#else
# ifndef _EVP_CIPHER_get_asn1_iv
#  define _EVP_CIPHER_get_asn1_iv OPENSSL_MANGLER_ASM(EVP_CIPHER_get_asn1_iv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get_block_size
#  define EVP_CIPHER_get_block_size OPENSSL_MANGLER(EVP_CIPHER_get_block_size)
# endif
#else
# ifndef _EVP_CIPHER_get_block_size
#  define _EVP_CIPHER_get_block_size OPENSSL_MANGLER_ASM(EVP_CIPHER_get_block_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get_flags
#  define EVP_CIPHER_get_flags OPENSSL_MANGLER(EVP_CIPHER_get_flags)
# endif
#else
# ifndef _EVP_CIPHER_get_flags
#  define _EVP_CIPHER_get_flags OPENSSL_MANGLER_ASM(EVP_CIPHER_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get_iv_length
#  define EVP_CIPHER_get_iv_length OPENSSL_MANGLER(EVP_CIPHER_get_iv_length)
# endif
#else
# ifndef _EVP_CIPHER_get_iv_length
#  define _EVP_CIPHER_get_iv_length OPENSSL_MANGLER_ASM(EVP_CIPHER_get_iv_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get_key_length
#  define EVP_CIPHER_get_key_length OPENSSL_MANGLER(EVP_CIPHER_get_key_length)
# endif
#else
# ifndef _EVP_CIPHER_get_key_length
#  define _EVP_CIPHER_get_key_length OPENSSL_MANGLER_ASM(EVP_CIPHER_get_key_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get_mode
#  define EVP_CIPHER_get_mode OPENSSL_MANGLER(EVP_CIPHER_get_mode)
# endif
#else
# ifndef _EVP_CIPHER_get_mode
#  define _EVP_CIPHER_get_mode OPENSSL_MANGLER_ASM(EVP_CIPHER_get_mode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get_nid
#  define EVP_CIPHER_get_nid OPENSSL_MANGLER(EVP_CIPHER_get_nid)
# endif
#else
# ifndef _EVP_CIPHER_get_nid
#  define _EVP_CIPHER_get_nid OPENSSL_MANGLER_ASM(EVP_CIPHER_get_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get_params
#  define EVP_CIPHER_get_params OPENSSL_MANGLER(EVP_CIPHER_get_params)
# endif
#else
# ifndef _EVP_CIPHER_get_params
#  define _EVP_CIPHER_get_params OPENSSL_MANGLER_ASM(EVP_CIPHER_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_get_type
#  define EVP_CIPHER_get_type OPENSSL_MANGLER(EVP_CIPHER_get_type)
# endif
#else
# ifndef _EVP_CIPHER_get_type
#  define _EVP_CIPHER_get_type OPENSSL_MANGLER_ASM(EVP_CIPHER_get_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_gettable_ctx_params
#  define EVP_CIPHER_gettable_ctx_params OPENSSL_MANGLER(EVP_CIPHER_gettable_ctx_params)
# endif
#else
# ifndef _EVP_CIPHER_gettable_ctx_params
#  define _EVP_CIPHER_gettable_ctx_params OPENSSL_MANGLER_ASM(EVP_CIPHER_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_gettable_params
#  define EVP_CIPHER_gettable_params OPENSSL_MANGLER(EVP_CIPHER_gettable_params)
# endif
#else
# ifndef _EVP_CIPHER_gettable_params
#  define _EVP_CIPHER_gettable_params OPENSSL_MANGLER_ASM(EVP_CIPHER_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_impl_ctx_size
#  define EVP_CIPHER_impl_ctx_size OPENSSL_MANGLER(EVP_CIPHER_impl_ctx_size)
# endif
#else
# ifndef _EVP_CIPHER_impl_ctx_size
#  define _EVP_CIPHER_impl_ctx_size OPENSSL_MANGLER_ASM(EVP_CIPHER_impl_ctx_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_is_a
#  define EVP_CIPHER_is_a OPENSSL_MANGLER(EVP_CIPHER_is_a)
# endif
#else
# ifndef _EVP_CIPHER_is_a
#  define _EVP_CIPHER_is_a OPENSSL_MANGLER_ASM(EVP_CIPHER_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_dup
#  define EVP_CIPHER_meth_dup OPENSSL_MANGLER(EVP_CIPHER_meth_dup)
# endif
#else
# ifndef _EVP_CIPHER_meth_dup
#  define _EVP_CIPHER_meth_dup OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_free
#  define EVP_CIPHER_meth_free OPENSSL_MANGLER(EVP_CIPHER_meth_free)
# endif
#else
# ifndef _EVP_CIPHER_meth_free
#  define _EVP_CIPHER_meth_free OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_get_cleanup
#  define EVP_CIPHER_meth_get_cleanup OPENSSL_MANGLER(EVP_CIPHER_meth_get_cleanup)
# endif
#else
# ifndef _EVP_CIPHER_meth_get_cleanup
#  define _EVP_CIPHER_meth_get_cleanup OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_get_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_get_ctrl
#  define EVP_CIPHER_meth_get_ctrl OPENSSL_MANGLER(EVP_CIPHER_meth_get_ctrl)
# endif
#else
# ifndef _EVP_CIPHER_meth_get_ctrl
#  define _EVP_CIPHER_meth_get_ctrl OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_get_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_get_do_cipher
#  define EVP_CIPHER_meth_get_do_cipher OPENSSL_MANGLER(EVP_CIPHER_meth_get_do_cipher)
# endif
#else
# ifndef _EVP_CIPHER_meth_get_do_cipher
#  define _EVP_CIPHER_meth_get_do_cipher OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_get_do_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_get_get_asn1_params
#  define EVP_CIPHER_meth_get_get_asn1_params OPENSSL_MANGLER(EVP_CIPHER_meth_get_get_asn1_params)
# endif
#else
# ifndef _EVP_CIPHER_meth_get_get_asn1_params
#  define _EVP_CIPHER_meth_get_get_asn1_params OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_get_get_asn1_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_get_init
#  define EVP_CIPHER_meth_get_init OPENSSL_MANGLER(EVP_CIPHER_meth_get_init)
# endif
#else
# ifndef _EVP_CIPHER_meth_get_init
#  define _EVP_CIPHER_meth_get_init OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_get_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_get_set_asn1_params
#  define EVP_CIPHER_meth_get_set_asn1_params OPENSSL_MANGLER(EVP_CIPHER_meth_get_set_asn1_params)
# endif
#else
# ifndef _EVP_CIPHER_meth_get_set_asn1_params
#  define _EVP_CIPHER_meth_get_set_asn1_params OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_get_set_asn1_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_new
#  define EVP_CIPHER_meth_new OPENSSL_MANGLER(EVP_CIPHER_meth_new)
# endif
#else
# ifndef _EVP_CIPHER_meth_new
#  define _EVP_CIPHER_meth_new OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_set_cleanup
#  define EVP_CIPHER_meth_set_cleanup OPENSSL_MANGLER(EVP_CIPHER_meth_set_cleanup)
# endif
#else
# ifndef _EVP_CIPHER_meth_set_cleanup
#  define _EVP_CIPHER_meth_set_cleanup OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_set_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_set_ctrl
#  define EVP_CIPHER_meth_set_ctrl OPENSSL_MANGLER(EVP_CIPHER_meth_set_ctrl)
# endif
#else
# ifndef _EVP_CIPHER_meth_set_ctrl
#  define _EVP_CIPHER_meth_set_ctrl OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_set_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_set_do_cipher
#  define EVP_CIPHER_meth_set_do_cipher OPENSSL_MANGLER(EVP_CIPHER_meth_set_do_cipher)
# endif
#else
# ifndef _EVP_CIPHER_meth_set_do_cipher
#  define _EVP_CIPHER_meth_set_do_cipher OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_set_do_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_set_flags
#  define EVP_CIPHER_meth_set_flags OPENSSL_MANGLER(EVP_CIPHER_meth_set_flags)
# endif
#else
# ifndef _EVP_CIPHER_meth_set_flags
#  define _EVP_CIPHER_meth_set_flags OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_set_get_asn1_params
#  define EVP_CIPHER_meth_set_get_asn1_params OPENSSL_MANGLER(EVP_CIPHER_meth_set_get_asn1_params)
# endif
#else
# ifndef _EVP_CIPHER_meth_set_get_asn1_params
#  define _EVP_CIPHER_meth_set_get_asn1_params OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_set_get_asn1_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_set_impl_ctx_size
#  define EVP_CIPHER_meth_set_impl_ctx_size OPENSSL_MANGLER(EVP_CIPHER_meth_set_impl_ctx_size)
# endif
#else
# ifndef _EVP_CIPHER_meth_set_impl_ctx_size
#  define _EVP_CIPHER_meth_set_impl_ctx_size OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_set_impl_ctx_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_set_init
#  define EVP_CIPHER_meth_set_init OPENSSL_MANGLER(EVP_CIPHER_meth_set_init)
# endif
#else
# ifndef _EVP_CIPHER_meth_set_init
#  define _EVP_CIPHER_meth_set_init OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_set_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_set_iv_length
#  define EVP_CIPHER_meth_set_iv_length OPENSSL_MANGLER(EVP_CIPHER_meth_set_iv_length)
# endif
#else
# ifndef _EVP_CIPHER_meth_set_iv_length
#  define _EVP_CIPHER_meth_set_iv_length OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_set_iv_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_meth_set_set_asn1_params
#  define EVP_CIPHER_meth_set_set_asn1_params OPENSSL_MANGLER(EVP_CIPHER_meth_set_set_asn1_params)
# endif
#else
# ifndef _EVP_CIPHER_meth_set_set_asn1_params
#  define _EVP_CIPHER_meth_set_set_asn1_params OPENSSL_MANGLER_ASM(EVP_CIPHER_meth_set_set_asn1_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_names_do_all
#  define EVP_CIPHER_names_do_all OPENSSL_MANGLER(EVP_CIPHER_names_do_all)
# endif
#else
# ifndef _EVP_CIPHER_names_do_all
#  define _EVP_CIPHER_names_do_all OPENSSL_MANGLER_ASM(EVP_CIPHER_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_param_to_asn1
#  define EVP_CIPHER_param_to_asn1 OPENSSL_MANGLER(EVP_CIPHER_param_to_asn1)
# endif
#else
# ifndef _EVP_CIPHER_param_to_asn1
#  define _EVP_CIPHER_param_to_asn1 OPENSSL_MANGLER_ASM(EVP_CIPHER_param_to_asn1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_set_asn1_iv
#  define EVP_CIPHER_set_asn1_iv OPENSSL_MANGLER(EVP_CIPHER_set_asn1_iv)
# endif
#else
# ifndef _EVP_CIPHER_set_asn1_iv
#  define _EVP_CIPHER_set_asn1_iv OPENSSL_MANGLER_ASM(EVP_CIPHER_set_asn1_iv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_settable_ctx_params
#  define EVP_CIPHER_settable_ctx_params OPENSSL_MANGLER(EVP_CIPHER_settable_ctx_params)
# endif
#else
# ifndef _EVP_CIPHER_settable_ctx_params
#  define _EVP_CIPHER_settable_ctx_params OPENSSL_MANGLER_ASM(EVP_CIPHER_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CIPHER_up_ref
#  define EVP_CIPHER_up_ref OPENSSL_MANGLER(EVP_CIPHER_up_ref)
# endif
#else
# ifndef _EVP_CIPHER_up_ref
#  define _EVP_CIPHER_up_ref OPENSSL_MANGLER_ASM(EVP_CIPHER_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_Cipher
#  define EVP_Cipher OPENSSL_MANGLER(EVP_Cipher)
# endif
#else
# ifndef _EVP_Cipher
#  define _EVP_Cipher OPENSSL_MANGLER_ASM(EVP_Cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CipherFinal
#  define EVP_CipherFinal OPENSSL_MANGLER(EVP_CipherFinal)
# endif
#else
# ifndef _EVP_CipherFinal
#  define _EVP_CipherFinal OPENSSL_MANGLER_ASM(EVP_CipherFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CipherFinal_ex
#  define EVP_CipherFinal_ex OPENSSL_MANGLER(EVP_CipherFinal_ex)
# endif
#else
# ifndef _EVP_CipherFinal_ex
#  define _EVP_CipherFinal_ex OPENSSL_MANGLER_ASM(EVP_CipherFinal_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CipherInit
#  define EVP_CipherInit OPENSSL_MANGLER(EVP_CipherInit)
# endif
#else
# ifndef _EVP_CipherInit
#  define _EVP_CipherInit OPENSSL_MANGLER_ASM(EVP_CipherInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CipherInit_ex
#  define EVP_CipherInit_ex OPENSSL_MANGLER(EVP_CipherInit_ex)
# endif
#else
# ifndef _EVP_CipherInit_ex
#  define _EVP_CipherInit_ex OPENSSL_MANGLER_ASM(EVP_CipherInit_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CipherInit_ex2
#  define EVP_CipherInit_ex2 OPENSSL_MANGLER(EVP_CipherInit_ex2)
# endif
#else
# ifndef _EVP_CipherInit_ex2
#  define _EVP_CipherInit_ex2 OPENSSL_MANGLER_ASM(EVP_CipherInit_ex2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_CipherUpdate
#  define EVP_CipherUpdate OPENSSL_MANGLER(EVP_CipherUpdate)
# endif
#else
# ifndef _EVP_CipherUpdate
#  define _EVP_CipherUpdate OPENSSL_MANGLER_ASM(EVP_CipherUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DecodeBlock
#  define EVP_DecodeBlock OPENSSL_MANGLER(EVP_DecodeBlock)
# endif
#else
# ifndef _EVP_DecodeBlock
#  define _EVP_DecodeBlock OPENSSL_MANGLER_ASM(EVP_DecodeBlock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DecodeFinal
#  define EVP_DecodeFinal OPENSSL_MANGLER(EVP_DecodeFinal)
# endif
#else
# ifndef _EVP_DecodeFinal
#  define _EVP_DecodeFinal OPENSSL_MANGLER_ASM(EVP_DecodeFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DecodeInit
#  define EVP_DecodeInit OPENSSL_MANGLER(EVP_DecodeInit)
# endif
#else
# ifndef _EVP_DecodeInit
#  define _EVP_DecodeInit OPENSSL_MANGLER_ASM(EVP_DecodeInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DecodeUpdate
#  define EVP_DecodeUpdate OPENSSL_MANGLER(EVP_DecodeUpdate)
# endif
#else
# ifndef _EVP_DecodeUpdate
#  define _EVP_DecodeUpdate OPENSSL_MANGLER_ASM(EVP_DecodeUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DecryptFinal
#  define EVP_DecryptFinal OPENSSL_MANGLER(EVP_DecryptFinal)
# endif
#else
# ifndef _EVP_DecryptFinal
#  define _EVP_DecryptFinal OPENSSL_MANGLER_ASM(EVP_DecryptFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DecryptFinal_ex
#  define EVP_DecryptFinal_ex OPENSSL_MANGLER(EVP_DecryptFinal_ex)
# endif
#else
# ifndef _EVP_DecryptFinal_ex
#  define _EVP_DecryptFinal_ex OPENSSL_MANGLER_ASM(EVP_DecryptFinal_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DecryptInit
#  define EVP_DecryptInit OPENSSL_MANGLER(EVP_DecryptInit)
# endif
#else
# ifndef _EVP_DecryptInit
#  define _EVP_DecryptInit OPENSSL_MANGLER_ASM(EVP_DecryptInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DecryptInit_ex
#  define EVP_DecryptInit_ex OPENSSL_MANGLER(EVP_DecryptInit_ex)
# endif
#else
# ifndef _EVP_DecryptInit_ex
#  define _EVP_DecryptInit_ex OPENSSL_MANGLER_ASM(EVP_DecryptInit_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DecryptInit_ex2
#  define EVP_DecryptInit_ex2 OPENSSL_MANGLER(EVP_DecryptInit_ex2)
# endif
#else
# ifndef _EVP_DecryptInit_ex2
#  define _EVP_DecryptInit_ex2 OPENSSL_MANGLER_ASM(EVP_DecryptInit_ex2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DecryptUpdate
#  define EVP_DecryptUpdate OPENSSL_MANGLER(EVP_DecryptUpdate)
# endif
#else
# ifndef _EVP_DecryptUpdate
#  define _EVP_DecryptUpdate OPENSSL_MANGLER_ASM(EVP_DecryptUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_Digest
#  define EVP_Digest OPENSSL_MANGLER(EVP_Digest)
# endif
#else
# ifndef _EVP_Digest
#  define _EVP_Digest OPENSSL_MANGLER_ASM(EVP_Digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestFinal
#  define EVP_DigestFinal OPENSSL_MANGLER(EVP_DigestFinal)
# endif
#else
# ifndef _EVP_DigestFinal
#  define _EVP_DigestFinal OPENSSL_MANGLER_ASM(EVP_DigestFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestFinalXOF
#  define EVP_DigestFinalXOF OPENSSL_MANGLER(EVP_DigestFinalXOF)
# endif
#else
# ifndef _EVP_DigestFinalXOF
#  define _EVP_DigestFinalXOF OPENSSL_MANGLER_ASM(EVP_DigestFinalXOF)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestFinal_ex
#  define EVP_DigestFinal_ex OPENSSL_MANGLER(EVP_DigestFinal_ex)
# endif
#else
# ifndef _EVP_DigestFinal_ex
#  define _EVP_DigestFinal_ex OPENSSL_MANGLER_ASM(EVP_DigestFinal_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestInit
#  define EVP_DigestInit OPENSSL_MANGLER(EVP_DigestInit)
# endif
#else
# ifndef _EVP_DigestInit
#  define _EVP_DigestInit OPENSSL_MANGLER_ASM(EVP_DigestInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestInit_ex
#  define EVP_DigestInit_ex OPENSSL_MANGLER(EVP_DigestInit_ex)
# endif
#else
# ifndef _EVP_DigestInit_ex
#  define _EVP_DigestInit_ex OPENSSL_MANGLER_ASM(EVP_DigestInit_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestInit_ex2
#  define EVP_DigestInit_ex2 OPENSSL_MANGLER(EVP_DigestInit_ex2)
# endif
#else
# ifndef _EVP_DigestInit_ex2
#  define _EVP_DigestInit_ex2 OPENSSL_MANGLER_ASM(EVP_DigestInit_ex2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestSign
#  define EVP_DigestSign OPENSSL_MANGLER(EVP_DigestSign)
# endif
#else
# ifndef _EVP_DigestSign
#  define _EVP_DigestSign OPENSSL_MANGLER_ASM(EVP_DigestSign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestSignFinal
#  define EVP_DigestSignFinal OPENSSL_MANGLER(EVP_DigestSignFinal)
# endif
#else
# ifndef _EVP_DigestSignFinal
#  define _EVP_DigestSignFinal OPENSSL_MANGLER_ASM(EVP_DigestSignFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestSignInit
#  define EVP_DigestSignInit OPENSSL_MANGLER(EVP_DigestSignInit)
# endif
#else
# ifndef _EVP_DigestSignInit
#  define _EVP_DigestSignInit OPENSSL_MANGLER_ASM(EVP_DigestSignInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestSignInit_ex
#  define EVP_DigestSignInit_ex OPENSSL_MANGLER(EVP_DigestSignInit_ex)
# endif
#else
# ifndef _EVP_DigestSignInit_ex
#  define _EVP_DigestSignInit_ex OPENSSL_MANGLER_ASM(EVP_DigestSignInit_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestSignUpdate
#  define EVP_DigestSignUpdate OPENSSL_MANGLER(EVP_DigestSignUpdate)
# endif
#else
# ifndef _EVP_DigestSignUpdate
#  define _EVP_DigestSignUpdate OPENSSL_MANGLER_ASM(EVP_DigestSignUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestUpdate
#  define EVP_DigestUpdate OPENSSL_MANGLER(EVP_DigestUpdate)
# endif
#else
# ifndef _EVP_DigestUpdate
#  define _EVP_DigestUpdate OPENSSL_MANGLER_ASM(EVP_DigestUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestVerify
#  define EVP_DigestVerify OPENSSL_MANGLER(EVP_DigestVerify)
# endif
#else
# ifndef _EVP_DigestVerify
#  define _EVP_DigestVerify OPENSSL_MANGLER_ASM(EVP_DigestVerify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestVerifyFinal
#  define EVP_DigestVerifyFinal OPENSSL_MANGLER(EVP_DigestVerifyFinal)
# endif
#else
# ifndef _EVP_DigestVerifyFinal
#  define _EVP_DigestVerifyFinal OPENSSL_MANGLER_ASM(EVP_DigestVerifyFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestVerifyInit
#  define EVP_DigestVerifyInit OPENSSL_MANGLER(EVP_DigestVerifyInit)
# endif
#else
# ifndef _EVP_DigestVerifyInit
#  define _EVP_DigestVerifyInit OPENSSL_MANGLER_ASM(EVP_DigestVerifyInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestVerifyInit_ex
#  define EVP_DigestVerifyInit_ex OPENSSL_MANGLER(EVP_DigestVerifyInit_ex)
# endif
#else
# ifndef _EVP_DigestVerifyInit_ex
#  define _EVP_DigestVerifyInit_ex OPENSSL_MANGLER_ASM(EVP_DigestVerifyInit_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_DigestVerifyUpdate
#  define EVP_DigestVerifyUpdate OPENSSL_MANGLER(EVP_DigestVerifyUpdate)
# endif
#else
# ifndef _EVP_DigestVerifyUpdate
#  define _EVP_DigestVerifyUpdate OPENSSL_MANGLER_ASM(EVP_DigestVerifyUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ENCODE_CTX_copy
#  define EVP_ENCODE_CTX_copy OPENSSL_MANGLER(EVP_ENCODE_CTX_copy)
# endif
#else
# ifndef _EVP_ENCODE_CTX_copy
#  define _EVP_ENCODE_CTX_copy OPENSSL_MANGLER_ASM(EVP_ENCODE_CTX_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ENCODE_CTX_free
#  define EVP_ENCODE_CTX_free OPENSSL_MANGLER(EVP_ENCODE_CTX_free)
# endif
#else
# ifndef _EVP_ENCODE_CTX_free
#  define _EVP_ENCODE_CTX_free OPENSSL_MANGLER_ASM(EVP_ENCODE_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ENCODE_CTX_new
#  define EVP_ENCODE_CTX_new OPENSSL_MANGLER(EVP_ENCODE_CTX_new)
# endif
#else
# ifndef _EVP_ENCODE_CTX_new
#  define _EVP_ENCODE_CTX_new OPENSSL_MANGLER_ASM(EVP_ENCODE_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_ENCODE_CTX_num
#  define EVP_ENCODE_CTX_num OPENSSL_MANGLER(EVP_ENCODE_CTX_num)
# endif
#else
# ifndef _EVP_ENCODE_CTX_num
#  define _EVP_ENCODE_CTX_num OPENSSL_MANGLER_ASM(EVP_ENCODE_CTX_num)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_EncodeBlock
#  define EVP_EncodeBlock OPENSSL_MANGLER(EVP_EncodeBlock)
# endif
#else
# ifndef _EVP_EncodeBlock
#  define _EVP_EncodeBlock OPENSSL_MANGLER_ASM(EVP_EncodeBlock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_EncodeFinal
#  define EVP_EncodeFinal OPENSSL_MANGLER(EVP_EncodeFinal)
# endif
#else
# ifndef _EVP_EncodeFinal
#  define _EVP_EncodeFinal OPENSSL_MANGLER_ASM(EVP_EncodeFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_EncodeInit
#  define EVP_EncodeInit OPENSSL_MANGLER(EVP_EncodeInit)
# endif
#else
# ifndef _EVP_EncodeInit
#  define _EVP_EncodeInit OPENSSL_MANGLER_ASM(EVP_EncodeInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_EncodeUpdate
#  define EVP_EncodeUpdate OPENSSL_MANGLER(EVP_EncodeUpdate)
# endif
#else
# ifndef _EVP_EncodeUpdate
#  define _EVP_EncodeUpdate OPENSSL_MANGLER_ASM(EVP_EncodeUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_EncryptFinal
#  define EVP_EncryptFinal OPENSSL_MANGLER(EVP_EncryptFinal)
# endif
#else
# ifndef _EVP_EncryptFinal
#  define _EVP_EncryptFinal OPENSSL_MANGLER_ASM(EVP_EncryptFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_EncryptFinal_ex
#  define EVP_EncryptFinal_ex OPENSSL_MANGLER(EVP_EncryptFinal_ex)
# endif
#else
# ifndef _EVP_EncryptFinal_ex
#  define _EVP_EncryptFinal_ex OPENSSL_MANGLER_ASM(EVP_EncryptFinal_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_EncryptInit
#  define EVP_EncryptInit OPENSSL_MANGLER(EVP_EncryptInit)
# endif
#else
# ifndef _EVP_EncryptInit
#  define _EVP_EncryptInit OPENSSL_MANGLER_ASM(EVP_EncryptInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_EncryptInit_ex
#  define EVP_EncryptInit_ex OPENSSL_MANGLER(EVP_EncryptInit_ex)
# endif
#else
# ifndef _EVP_EncryptInit_ex
#  define _EVP_EncryptInit_ex OPENSSL_MANGLER_ASM(EVP_EncryptInit_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_EncryptInit_ex2
#  define EVP_EncryptInit_ex2 OPENSSL_MANGLER(EVP_EncryptInit_ex2)
# endif
#else
# ifndef _EVP_EncryptInit_ex2
#  define _EVP_EncryptInit_ex2 OPENSSL_MANGLER_ASM(EVP_EncryptInit_ex2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_EncryptUpdate
#  define EVP_EncryptUpdate OPENSSL_MANGLER(EVP_EncryptUpdate)
# endif
#else
# ifndef _EVP_EncryptUpdate
#  define _EVP_EncryptUpdate OPENSSL_MANGLER_ASM(EVP_EncryptUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_CTX_dup
#  define EVP_KDF_CTX_dup OPENSSL_MANGLER(EVP_KDF_CTX_dup)
# endif
#else
# ifndef _EVP_KDF_CTX_dup
#  define _EVP_KDF_CTX_dup OPENSSL_MANGLER_ASM(EVP_KDF_CTX_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_CTX_free
#  define EVP_KDF_CTX_free OPENSSL_MANGLER(EVP_KDF_CTX_free)
# endif
#else
# ifndef _EVP_KDF_CTX_free
#  define _EVP_KDF_CTX_free OPENSSL_MANGLER_ASM(EVP_KDF_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_CTX_get_kdf_size
#  define EVP_KDF_CTX_get_kdf_size OPENSSL_MANGLER(EVP_KDF_CTX_get_kdf_size)
# endif
#else
# ifndef _EVP_KDF_CTX_get_kdf_size
#  define _EVP_KDF_CTX_get_kdf_size OPENSSL_MANGLER_ASM(EVP_KDF_CTX_get_kdf_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_CTX_get_params
#  define EVP_KDF_CTX_get_params OPENSSL_MANGLER(EVP_KDF_CTX_get_params)
# endif
#else
# ifndef _EVP_KDF_CTX_get_params
#  define _EVP_KDF_CTX_get_params OPENSSL_MANGLER_ASM(EVP_KDF_CTX_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_CTX_gettable_params
#  define EVP_KDF_CTX_gettable_params OPENSSL_MANGLER(EVP_KDF_CTX_gettable_params)
# endif
#else
# ifndef _EVP_KDF_CTX_gettable_params
#  define _EVP_KDF_CTX_gettable_params OPENSSL_MANGLER_ASM(EVP_KDF_CTX_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_CTX_kdf
#  define EVP_KDF_CTX_kdf OPENSSL_MANGLER(EVP_KDF_CTX_kdf)
# endif
#else
# ifndef _EVP_KDF_CTX_kdf
#  define _EVP_KDF_CTX_kdf OPENSSL_MANGLER_ASM(EVP_KDF_CTX_kdf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_CTX_new
#  define EVP_KDF_CTX_new OPENSSL_MANGLER(EVP_KDF_CTX_new)
# endif
#else
# ifndef _EVP_KDF_CTX_new
#  define _EVP_KDF_CTX_new OPENSSL_MANGLER_ASM(EVP_KDF_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_CTX_reset
#  define EVP_KDF_CTX_reset OPENSSL_MANGLER(EVP_KDF_CTX_reset)
# endif
#else
# ifndef _EVP_KDF_CTX_reset
#  define _EVP_KDF_CTX_reset OPENSSL_MANGLER_ASM(EVP_KDF_CTX_reset)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_CTX_set_params
#  define EVP_KDF_CTX_set_params OPENSSL_MANGLER(EVP_KDF_CTX_set_params)
# endif
#else
# ifndef _EVP_KDF_CTX_set_params
#  define _EVP_KDF_CTX_set_params OPENSSL_MANGLER_ASM(EVP_KDF_CTX_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_CTX_settable_params
#  define EVP_KDF_CTX_settable_params OPENSSL_MANGLER(EVP_KDF_CTX_settable_params)
# endif
#else
# ifndef _EVP_KDF_CTX_settable_params
#  define _EVP_KDF_CTX_settable_params OPENSSL_MANGLER_ASM(EVP_KDF_CTX_settable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_derive
#  define EVP_KDF_derive OPENSSL_MANGLER(EVP_KDF_derive)
# endif
#else
# ifndef _EVP_KDF_derive
#  define _EVP_KDF_derive OPENSSL_MANGLER_ASM(EVP_KDF_derive)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_do_all_provided
#  define EVP_KDF_do_all_provided OPENSSL_MANGLER(EVP_KDF_do_all_provided)
# endif
#else
# ifndef _EVP_KDF_do_all_provided
#  define _EVP_KDF_do_all_provided OPENSSL_MANGLER_ASM(EVP_KDF_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_fetch
#  define EVP_KDF_fetch OPENSSL_MANGLER(EVP_KDF_fetch)
# endif
#else
# ifndef _EVP_KDF_fetch
#  define _EVP_KDF_fetch OPENSSL_MANGLER_ASM(EVP_KDF_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_free
#  define EVP_KDF_free OPENSSL_MANGLER(EVP_KDF_free)
# endif
#else
# ifndef _EVP_KDF_free
#  define _EVP_KDF_free OPENSSL_MANGLER_ASM(EVP_KDF_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_get0_description
#  define EVP_KDF_get0_description OPENSSL_MANGLER(EVP_KDF_get0_description)
# endif
#else
# ifndef _EVP_KDF_get0_description
#  define _EVP_KDF_get0_description OPENSSL_MANGLER_ASM(EVP_KDF_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_get0_name
#  define EVP_KDF_get0_name OPENSSL_MANGLER(EVP_KDF_get0_name)
# endif
#else
# ifndef _EVP_KDF_get0_name
#  define _EVP_KDF_get0_name OPENSSL_MANGLER_ASM(EVP_KDF_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_get0_provider
#  define EVP_KDF_get0_provider OPENSSL_MANGLER(EVP_KDF_get0_provider)
# endif
#else
# ifndef _EVP_KDF_get0_provider
#  define _EVP_KDF_get0_provider OPENSSL_MANGLER_ASM(EVP_KDF_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_get_params
#  define EVP_KDF_get_params OPENSSL_MANGLER(EVP_KDF_get_params)
# endif
#else
# ifndef _EVP_KDF_get_params
#  define _EVP_KDF_get_params OPENSSL_MANGLER_ASM(EVP_KDF_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_gettable_ctx_params
#  define EVP_KDF_gettable_ctx_params OPENSSL_MANGLER(EVP_KDF_gettable_ctx_params)
# endif
#else
# ifndef _EVP_KDF_gettable_ctx_params
#  define _EVP_KDF_gettable_ctx_params OPENSSL_MANGLER_ASM(EVP_KDF_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_gettable_params
#  define EVP_KDF_gettable_params OPENSSL_MANGLER(EVP_KDF_gettable_params)
# endif
#else
# ifndef _EVP_KDF_gettable_params
#  define _EVP_KDF_gettable_params OPENSSL_MANGLER_ASM(EVP_KDF_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_is_a
#  define EVP_KDF_is_a OPENSSL_MANGLER(EVP_KDF_is_a)
# endif
#else
# ifndef _EVP_KDF_is_a
#  define _EVP_KDF_is_a OPENSSL_MANGLER_ASM(EVP_KDF_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_names_do_all
#  define EVP_KDF_names_do_all OPENSSL_MANGLER(EVP_KDF_names_do_all)
# endif
#else
# ifndef _EVP_KDF_names_do_all
#  define _EVP_KDF_names_do_all OPENSSL_MANGLER_ASM(EVP_KDF_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_settable_ctx_params
#  define EVP_KDF_settable_ctx_params OPENSSL_MANGLER(EVP_KDF_settable_ctx_params)
# endif
#else
# ifndef _EVP_KDF_settable_ctx_params
#  define _EVP_KDF_settable_ctx_params OPENSSL_MANGLER_ASM(EVP_KDF_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KDF_up_ref
#  define EVP_KDF_up_ref OPENSSL_MANGLER(EVP_KDF_up_ref)
# endif
#else
# ifndef _EVP_KDF_up_ref
#  define _EVP_KDF_up_ref OPENSSL_MANGLER_ASM(EVP_KDF_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEM_do_all_provided
#  define EVP_KEM_do_all_provided OPENSSL_MANGLER(EVP_KEM_do_all_provided)
# endif
#else
# ifndef _EVP_KEM_do_all_provided
#  define _EVP_KEM_do_all_provided OPENSSL_MANGLER_ASM(EVP_KEM_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEM_fetch
#  define EVP_KEM_fetch OPENSSL_MANGLER(EVP_KEM_fetch)
# endif
#else
# ifndef _EVP_KEM_fetch
#  define _EVP_KEM_fetch OPENSSL_MANGLER_ASM(EVP_KEM_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEM_free
#  define EVP_KEM_free OPENSSL_MANGLER(EVP_KEM_free)
# endif
#else
# ifndef _EVP_KEM_free
#  define _EVP_KEM_free OPENSSL_MANGLER_ASM(EVP_KEM_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEM_get0_description
#  define EVP_KEM_get0_description OPENSSL_MANGLER(EVP_KEM_get0_description)
# endif
#else
# ifndef _EVP_KEM_get0_description
#  define _EVP_KEM_get0_description OPENSSL_MANGLER_ASM(EVP_KEM_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEM_get0_name
#  define EVP_KEM_get0_name OPENSSL_MANGLER(EVP_KEM_get0_name)
# endif
#else
# ifndef _EVP_KEM_get0_name
#  define _EVP_KEM_get0_name OPENSSL_MANGLER_ASM(EVP_KEM_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEM_get0_provider
#  define EVP_KEM_get0_provider OPENSSL_MANGLER(EVP_KEM_get0_provider)
# endif
#else
# ifndef _EVP_KEM_get0_provider
#  define _EVP_KEM_get0_provider OPENSSL_MANGLER_ASM(EVP_KEM_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEM_gettable_ctx_params
#  define EVP_KEM_gettable_ctx_params OPENSSL_MANGLER(EVP_KEM_gettable_ctx_params)
# endif
#else
# ifndef _EVP_KEM_gettable_ctx_params
#  define _EVP_KEM_gettable_ctx_params OPENSSL_MANGLER_ASM(EVP_KEM_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEM_is_a
#  define EVP_KEM_is_a OPENSSL_MANGLER(EVP_KEM_is_a)
# endif
#else
# ifndef _EVP_KEM_is_a
#  define _EVP_KEM_is_a OPENSSL_MANGLER_ASM(EVP_KEM_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEM_names_do_all
#  define EVP_KEM_names_do_all OPENSSL_MANGLER(EVP_KEM_names_do_all)
# endif
#else
# ifndef _EVP_KEM_names_do_all
#  define _EVP_KEM_names_do_all OPENSSL_MANGLER_ASM(EVP_KEM_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEM_settable_ctx_params
#  define EVP_KEM_settable_ctx_params OPENSSL_MANGLER(EVP_KEM_settable_ctx_params)
# endif
#else
# ifndef _EVP_KEM_settable_ctx_params
#  define _EVP_KEM_settable_ctx_params OPENSSL_MANGLER_ASM(EVP_KEM_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEM_up_ref
#  define EVP_KEM_up_ref OPENSSL_MANGLER(EVP_KEM_up_ref)
# endif
#else
# ifndef _EVP_KEM_up_ref
#  define _EVP_KEM_up_ref OPENSSL_MANGLER_ASM(EVP_KEM_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYEXCH_do_all_provided
#  define EVP_KEYEXCH_do_all_provided OPENSSL_MANGLER(EVP_KEYEXCH_do_all_provided)
# endif
#else
# ifndef _EVP_KEYEXCH_do_all_provided
#  define _EVP_KEYEXCH_do_all_provided OPENSSL_MANGLER_ASM(EVP_KEYEXCH_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYEXCH_fetch
#  define EVP_KEYEXCH_fetch OPENSSL_MANGLER(EVP_KEYEXCH_fetch)
# endif
#else
# ifndef _EVP_KEYEXCH_fetch
#  define _EVP_KEYEXCH_fetch OPENSSL_MANGLER_ASM(EVP_KEYEXCH_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYEXCH_free
#  define EVP_KEYEXCH_free OPENSSL_MANGLER(EVP_KEYEXCH_free)
# endif
#else
# ifndef _EVP_KEYEXCH_free
#  define _EVP_KEYEXCH_free OPENSSL_MANGLER_ASM(EVP_KEYEXCH_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYEXCH_get0_description
#  define EVP_KEYEXCH_get0_description OPENSSL_MANGLER(EVP_KEYEXCH_get0_description)
# endif
#else
# ifndef _EVP_KEYEXCH_get0_description
#  define _EVP_KEYEXCH_get0_description OPENSSL_MANGLER_ASM(EVP_KEYEXCH_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYEXCH_get0_name
#  define EVP_KEYEXCH_get0_name OPENSSL_MANGLER(EVP_KEYEXCH_get0_name)
# endif
#else
# ifndef _EVP_KEYEXCH_get0_name
#  define _EVP_KEYEXCH_get0_name OPENSSL_MANGLER_ASM(EVP_KEYEXCH_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYEXCH_get0_provider
#  define EVP_KEYEXCH_get0_provider OPENSSL_MANGLER(EVP_KEYEXCH_get0_provider)
# endif
#else
# ifndef _EVP_KEYEXCH_get0_provider
#  define _EVP_KEYEXCH_get0_provider OPENSSL_MANGLER_ASM(EVP_KEYEXCH_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYEXCH_gettable_ctx_params
#  define EVP_KEYEXCH_gettable_ctx_params OPENSSL_MANGLER(EVP_KEYEXCH_gettable_ctx_params)
# endif
#else
# ifndef _EVP_KEYEXCH_gettable_ctx_params
#  define _EVP_KEYEXCH_gettable_ctx_params OPENSSL_MANGLER_ASM(EVP_KEYEXCH_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYEXCH_is_a
#  define EVP_KEYEXCH_is_a OPENSSL_MANGLER(EVP_KEYEXCH_is_a)
# endif
#else
# ifndef _EVP_KEYEXCH_is_a
#  define _EVP_KEYEXCH_is_a OPENSSL_MANGLER_ASM(EVP_KEYEXCH_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYEXCH_names_do_all
#  define EVP_KEYEXCH_names_do_all OPENSSL_MANGLER(EVP_KEYEXCH_names_do_all)
# endif
#else
# ifndef _EVP_KEYEXCH_names_do_all
#  define _EVP_KEYEXCH_names_do_all OPENSSL_MANGLER_ASM(EVP_KEYEXCH_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYEXCH_settable_ctx_params
#  define EVP_KEYEXCH_settable_ctx_params OPENSSL_MANGLER(EVP_KEYEXCH_settable_ctx_params)
# endif
#else
# ifndef _EVP_KEYEXCH_settable_ctx_params
#  define _EVP_KEYEXCH_settable_ctx_params OPENSSL_MANGLER_ASM(EVP_KEYEXCH_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYEXCH_up_ref
#  define EVP_KEYEXCH_up_ref OPENSSL_MANGLER(EVP_KEYEXCH_up_ref)
# endif
#else
# ifndef _EVP_KEYEXCH_up_ref
#  define _EVP_KEYEXCH_up_ref OPENSSL_MANGLER_ASM(EVP_KEYEXCH_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_do_all_provided
#  define EVP_KEYMGMT_do_all_provided OPENSSL_MANGLER(EVP_KEYMGMT_do_all_provided)
# endif
#else
# ifndef _EVP_KEYMGMT_do_all_provided
#  define _EVP_KEYMGMT_do_all_provided OPENSSL_MANGLER_ASM(EVP_KEYMGMT_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_fetch
#  define EVP_KEYMGMT_fetch OPENSSL_MANGLER(EVP_KEYMGMT_fetch)
# endif
#else
# ifndef _EVP_KEYMGMT_fetch
#  define _EVP_KEYMGMT_fetch OPENSSL_MANGLER_ASM(EVP_KEYMGMT_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_free
#  define EVP_KEYMGMT_free OPENSSL_MANGLER(EVP_KEYMGMT_free)
# endif
#else
# ifndef _EVP_KEYMGMT_free
#  define _EVP_KEYMGMT_free OPENSSL_MANGLER_ASM(EVP_KEYMGMT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_gen_settable_params
#  define EVP_KEYMGMT_gen_settable_params OPENSSL_MANGLER(EVP_KEYMGMT_gen_settable_params)
# endif
#else
# ifndef _EVP_KEYMGMT_gen_settable_params
#  define _EVP_KEYMGMT_gen_settable_params OPENSSL_MANGLER_ASM(EVP_KEYMGMT_gen_settable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_get0_description
#  define EVP_KEYMGMT_get0_description OPENSSL_MANGLER(EVP_KEYMGMT_get0_description)
# endif
#else
# ifndef _EVP_KEYMGMT_get0_description
#  define _EVP_KEYMGMT_get0_description OPENSSL_MANGLER_ASM(EVP_KEYMGMT_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_get0_name
#  define EVP_KEYMGMT_get0_name OPENSSL_MANGLER(EVP_KEYMGMT_get0_name)
# endif
#else
# ifndef _EVP_KEYMGMT_get0_name
#  define _EVP_KEYMGMT_get0_name OPENSSL_MANGLER_ASM(EVP_KEYMGMT_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_get0_provider
#  define EVP_KEYMGMT_get0_provider OPENSSL_MANGLER(EVP_KEYMGMT_get0_provider)
# endif
#else
# ifndef _EVP_KEYMGMT_get0_provider
#  define _EVP_KEYMGMT_get0_provider OPENSSL_MANGLER_ASM(EVP_KEYMGMT_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_gettable_params
#  define EVP_KEYMGMT_gettable_params OPENSSL_MANGLER(EVP_KEYMGMT_gettable_params)
# endif
#else
# ifndef _EVP_KEYMGMT_gettable_params
#  define _EVP_KEYMGMT_gettable_params OPENSSL_MANGLER_ASM(EVP_KEYMGMT_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_is_a
#  define EVP_KEYMGMT_is_a OPENSSL_MANGLER(EVP_KEYMGMT_is_a)
# endif
#else
# ifndef _EVP_KEYMGMT_is_a
#  define _EVP_KEYMGMT_is_a OPENSSL_MANGLER_ASM(EVP_KEYMGMT_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_names_do_all
#  define EVP_KEYMGMT_names_do_all OPENSSL_MANGLER(EVP_KEYMGMT_names_do_all)
# endif
#else
# ifndef _EVP_KEYMGMT_names_do_all
#  define _EVP_KEYMGMT_names_do_all OPENSSL_MANGLER_ASM(EVP_KEYMGMT_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_settable_params
#  define EVP_KEYMGMT_settable_params OPENSSL_MANGLER(EVP_KEYMGMT_settable_params)
# endif
#else
# ifndef _EVP_KEYMGMT_settable_params
#  define _EVP_KEYMGMT_settable_params OPENSSL_MANGLER_ASM(EVP_KEYMGMT_settable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_KEYMGMT_up_ref
#  define EVP_KEYMGMT_up_ref OPENSSL_MANGLER(EVP_KEYMGMT_up_ref)
# endif
#else
# ifndef _EVP_KEYMGMT_up_ref
#  define _EVP_KEYMGMT_up_ref OPENSSL_MANGLER_ASM(EVP_KEYMGMT_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_CTX_dup
#  define EVP_MAC_CTX_dup OPENSSL_MANGLER(EVP_MAC_CTX_dup)
# endif
#else
# ifndef _EVP_MAC_CTX_dup
#  define _EVP_MAC_CTX_dup OPENSSL_MANGLER_ASM(EVP_MAC_CTX_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_CTX_free
#  define EVP_MAC_CTX_free OPENSSL_MANGLER(EVP_MAC_CTX_free)
# endif
#else
# ifndef _EVP_MAC_CTX_free
#  define _EVP_MAC_CTX_free OPENSSL_MANGLER_ASM(EVP_MAC_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_CTX_get0_mac
#  define EVP_MAC_CTX_get0_mac OPENSSL_MANGLER(EVP_MAC_CTX_get0_mac)
# endif
#else
# ifndef _EVP_MAC_CTX_get0_mac
#  define _EVP_MAC_CTX_get0_mac OPENSSL_MANGLER_ASM(EVP_MAC_CTX_get0_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_CTX_get_block_size
#  define EVP_MAC_CTX_get_block_size OPENSSL_MANGLER(EVP_MAC_CTX_get_block_size)
# endif
#else
# ifndef _EVP_MAC_CTX_get_block_size
#  define _EVP_MAC_CTX_get_block_size OPENSSL_MANGLER_ASM(EVP_MAC_CTX_get_block_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_CTX_get_mac_size
#  define EVP_MAC_CTX_get_mac_size OPENSSL_MANGLER(EVP_MAC_CTX_get_mac_size)
# endif
#else
# ifndef _EVP_MAC_CTX_get_mac_size
#  define _EVP_MAC_CTX_get_mac_size OPENSSL_MANGLER_ASM(EVP_MAC_CTX_get_mac_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_CTX_get_params
#  define EVP_MAC_CTX_get_params OPENSSL_MANGLER(EVP_MAC_CTX_get_params)
# endif
#else
# ifndef _EVP_MAC_CTX_get_params
#  define _EVP_MAC_CTX_get_params OPENSSL_MANGLER_ASM(EVP_MAC_CTX_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_CTX_gettable_params
#  define EVP_MAC_CTX_gettable_params OPENSSL_MANGLER(EVP_MAC_CTX_gettable_params)
# endif
#else
# ifndef _EVP_MAC_CTX_gettable_params
#  define _EVP_MAC_CTX_gettable_params OPENSSL_MANGLER_ASM(EVP_MAC_CTX_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_CTX_new
#  define EVP_MAC_CTX_new OPENSSL_MANGLER(EVP_MAC_CTX_new)
# endif
#else
# ifndef _EVP_MAC_CTX_new
#  define _EVP_MAC_CTX_new OPENSSL_MANGLER_ASM(EVP_MAC_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_CTX_set_params
#  define EVP_MAC_CTX_set_params OPENSSL_MANGLER(EVP_MAC_CTX_set_params)
# endif
#else
# ifndef _EVP_MAC_CTX_set_params
#  define _EVP_MAC_CTX_set_params OPENSSL_MANGLER_ASM(EVP_MAC_CTX_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_CTX_settable_params
#  define EVP_MAC_CTX_settable_params OPENSSL_MANGLER(EVP_MAC_CTX_settable_params)
# endif
#else
# ifndef _EVP_MAC_CTX_settable_params
#  define _EVP_MAC_CTX_settable_params OPENSSL_MANGLER_ASM(EVP_MAC_CTX_settable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_do_all_provided
#  define EVP_MAC_do_all_provided OPENSSL_MANGLER(EVP_MAC_do_all_provided)
# endif
#else
# ifndef _EVP_MAC_do_all_provided
#  define _EVP_MAC_do_all_provided OPENSSL_MANGLER_ASM(EVP_MAC_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_fetch
#  define EVP_MAC_fetch OPENSSL_MANGLER(EVP_MAC_fetch)
# endif
#else
# ifndef _EVP_MAC_fetch
#  define _EVP_MAC_fetch OPENSSL_MANGLER_ASM(EVP_MAC_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_final
#  define EVP_MAC_final OPENSSL_MANGLER(EVP_MAC_final)
# endif
#else
# ifndef _EVP_MAC_final
#  define _EVP_MAC_final OPENSSL_MANGLER_ASM(EVP_MAC_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_finalXOF
#  define EVP_MAC_finalXOF OPENSSL_MANGLER(EVP_MAC_finalXOF)
# endif
#else
# ifndef _EVP_MAC_finalXOF
#  define _EVP_MAC_finalXOF OPENSSL_MANGLER_ASM(EVP_MAC_finalXOF)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_free
#  define EVP_MAC_free OPENSSL_MANGLER(EVP_MAC_free)
# endif
#else
# ifndef _EVP_MAC_free
#  define _EVP_MAC_free OPENSSL_MANGLER_ASM(EVP_MAC_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_get0_description
#  define EVP_MAC_get0_description OPENSSL_MANGLER(EVP_MAC_get0_description)
# endif
#else
# ifndef _EVP_MAC_get0_description
#  define _EVP_MAC_get0_description OPENSSL_MANGLER_ASM(EVP_MAC_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_get0_name
#  define EVP_MAC_get0_name OPENSSL_MANGLER(EVP_MAC_get0_name)
# endif
#else
# ifndef _EVP_MAC_get0_name
#  define _EVP_MAC_get0_name OPENSSL_MANGLER_ASM(EVP_MAC_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_get0_provider
#  define EVP_MAC_get0_provider OPENSSL_MANGLER(EVP_MAC_get0_provider)
# endif
#else
# ifndef _EVP_MAC_get0_provider
#  define _EVP_MAC_get0_provider OPENSSL_MANGLER_ASM(EVP_MAC_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_get_params
#  define EVP_MAC_get_params OPENSSL_MANGLER(EVP_MAC_get_params)
# endif
#else
# ifndef _EVP_MAC_get_params
#  define _EVP_MAC_get_params OPENSSL_MANGLER_ASM(EVP_MAC_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_gettable_ctx_params
#  define EVP_MAC_gettable_ctx_params OPENSSL_MANGLER(EVP_MAC_gettable_ctx_params)
# endif
#else
# ifndef _EVP_MAC_gettable_ctx_params
#  define _EVP_MAC_gettable_ctx_params OPENSSL_MANGLER_ASM(EVP_MAC_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_gettable_params
#  define EVP_MAC_gettable_params OPENSSL_MANGLER(EVP_MAC_gettable_params)
# endif
#else
# ifndef _EVP_MAC_gettable_params
#  define _EVP_MAC_gettable_params OPENSSL_MANGLER_ASM(EVP_MAC_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_init
#  define EVP_MAC_init OPENSSL_MANGLER(EVP_MAC_init)
# endif
#else
# ifndef _EVP_MAC_init
#  define _EVP_MAC_init OPENSSL_MANGLER_ASM(EVP_MAC_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_is_a
#  define EVP_MAC_is_a OPENSSL_MANGLER(EVP_MAC_is_a)
# endif
#else
# ifndef _EVP_MAC_is_a
#  define _EVP_MAC_is_a OPENSSL_MANGLER_ASM(EVP_MAC_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_names_do_all
#  define EVP_MAC_names_do_all OPENSSL_MANGLER(EVP_MAC_names_do_all)
# endif
#else
# ifndef _EVP_MAC_names_do_all
#  define _EVP_MAC_names_do_all OPENSSL_MANGLER_ASM(EVP_MAC_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_settable_ctx_params
#  define EVP_MAC_settable_ctx_params OPENSSL_MANGLER(EVP_MAC_settable_ctx_params)
# endif
#else
# ifndef _EVP_MAC_settable_ctx_params
#  define _EVP_MAC_settable_ctx_params OPENSSL_MANGLER_ASM(EVP_MAC_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_up_ref
#  define EVP_MAC_up_ref OPENSSL_MANGLER(EVP_MAC_up_ref)
# endif
#else
# ifndef _EVP_MAC_up_ref
#  define _EVP_MAC_up_ref OPENSSL_MANGLER_ASM(EVP_MAC_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MAC_update
#  define EVP_MAC_update OPENSSL_MANGLER(EVP_MAC_update)
# endif
#else
# ifndef _EVP_MAC_update
#  define _EVP_MAC_update OPENSSL_MANGLER_ASM(EVP_MAC_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_clear_flags
#  define EVP_MD_CTX_clear_flags OPENSSL_MANGLER(EVP_MD_CTX_clear_flags)
# endif
#else
# ifndef _EVP_MD_CTX_clear_flags
#  define _EVP_MD_CTX_clear_flags OPENSSL_MANGLER_ASM(EVP_MD_CTX_clear_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_copy
#  define EVP_MD_CTX_copy OPENSSL_MANGLER(EVP_MD_CTX_copy)
# endif
#else
# ifndef _EVP_MD_CTX_copy
#  define _EVP_MD_CTX_copy OPENSSL_MANGLER_ASM(EVP_MD_CTX_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_copy_ex
#  define EVP_MD_CTX_copy_ex OPENSSL_MANGLER(EVP_MD_CTX_copy_ex)
# endif
#else
# ifndef _EVP_MD_CTX_copy_ex
#  define _EVP_MD_CTX_copy_ex OPENSSL_MANGLER_ASM(EVP_MD_CTX_copy_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_ctrl
#  define EVP_MD_CTX_ctrl OPENSSL_MANGLER(EVP_MD_CTX_ctrl)
# endif
#else
# ifndef _EVP_MD_CTX_ctrl
#  define _EVP_MD_CTX_ctrl OPENSSL_MANGLER_ASM(EVP_MD_CTX_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_free
#  define EVP_MD_CTX_free OPENSSL_MANGLER(EVP_MD_CTX_free)
# endif
#else
# ifndef _EVP_MD_CTX_free
#  define _EVP_MD_CTX_free OPENSSL_MANGLER_ASM(EVP_MD_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_get0_md
#  define EVP_MD_CTX_get0_md OPENSSL_MANGLER(EVP_MD_CTX_get0_md)
# endif
#else
# ifndef _EVP_MD_CTX_get0_md
#  define _EVP_MD_CTX_get0_md OPENSSL_MANGLER_ASM(EVP_MD_CTX_get0_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_get0_md_data
#  define EVP_MD_CTX_get0_md_data OPENSSL_MANGLER(EVP_MD_CTX_get0_md_data)
# endif
#else
# ifndef _EVP_MD_CTX_get0_md_data
#  define _EVP_MD_CTX_get0_md_data OPENSSL_MANGLER_ASM(EVP_MD_CTX_get0_md_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_get1_md
#  define EVP_MD_CTX_get1_md OPENSSL_MANGLER(EVP_MD_CTX_get1_md)
# endif
#else
# ifndef _EVP_MD_CTX_get1_md
#  define _EVP_MD_CTX_get1_md OPENSSL_MANGLER_ASM(EVP_MD_CTX_get1_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_get_params
#  define EVP_MD_CTX_get_params OPENSSL_MANGLER(EVP_MD_CTX_get_params)
# endif
#else
# ifndef _EVP_MD_CTX_get_params
#  define _EVP_MD_CTX_get_params OPENSSL_MANGLER_ASM(EVP_MD_CTX_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_get_pkey_ctx
#  define EVP_MD_CTX_get_pkey_ctx OPENSSL_MANGLER(EVP_MD_CTX_get_pkey_ctx)
# endif
#else
# ifndef _EVP_MD_CTX_get_pkey_ctx
#  define _EVP_MD_CTX_get_pkey_ctx OPENSSL_MANGLER_ASM(EVP_MD_CTX_get_pkey_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_gettable_params
#  define EVP_MD_CTX_gettable_params OPENSSL_MANGLER(EVP_MD_CTX_gettable_params)
# endif
#else
# ifndef _EVP_MD_CTX_gettable_params
#  define _EVP_MD_CTX_gettable_params OPENSSL_MANGLER_ASM(EVP_MD_CTX_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_md
#  define EVP_MD_CTX_md OPENSSL_MANGLER(EVP_MD_CTX_md)
# endif
#else
# ifndef _EVP_MD_CTX_md
#  define _EVP_MD_CTX_md OPENSSL_MANGLER_ASM(EVP_MD_CTX_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_new
#  define EVP_MD_CTX_new OPENSSL_MANGLER(EVP_MD_CTX_new)
# endif
#else
# ifndef _EVP_MD_CTX_new
#  define _EVP_MD_CTX_new OPENSSL_MANGLER_ASM(EVP_MD_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_reset
#  define EVP_MD_CTX_reset OPENSSL_MANGLER(EVP_MD_CTX_reset)
# endif
#else
# ifndef _EVP_MD_CTX_reset
#  define _EVP_MD_CTX_reset OPENSSL_MANGLER_ASM(EVP_MD_CTX_reset)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_set_flags
#  define EVP_MD_CTX_set_flags OPENSSL_MANGLER(EVP_MD_CTX_set_flags)
# endif
#else
# ifndef _EVP_MD_CTX_set_flags
#  define _EVP_MD_CTX_set_flags OPENSSL_MANGLER_ASM(EVP_MD_CTX_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_set_params
#  define EVP_MD_CTX_set_params OPENSSL_MANGLER(EVP_MD_CTX_set_params)
# endif
#else
# ifndef _EVP_MD_CTX_set_params
#  define _EVP_MD_CTX_set_params OPENSSL_MANGLER_ASM(EVP_MD_CTX_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_set_pkey_ctx
#  define EVP_MD_CTX_set_pkey_ctx OPENSSL_MANGLER(EVP_MD_CTX_set_pkey_ctx)
# endif
#else
# ifndef _EVP_MD_CTX_set_pkey_ctx
#  define _EVP_MD_CTX_set_pkey_ctx OPENSSL_MANGLER_ASM(EVP_MD_CTX_set_pkey_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_set_update_fn
#  define EVP_MD_CTX_set_update_fn OPENSSL_MANGLER(EVP_MD_CTX_set_update_fn)
# endif
#else
# ifndef _EVP_MD_CTX_set_update_fn
#  define _EVP_MD_CTX_set_update_fn OPENSSL_MANGLER_ASM(EVP_MD_CTX_set_update_fn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_settable_params
#  define EVP_MD_CTX_settable_params OPENSSL_MANGLER(EVP_MD_CTX_settable_params)
# endif
#else
# ifndef _EVP_MD_CTX_settable_params
#  define _EVP_MD_CTX_settable_params OPENSSL_MANGLER_ASM(EVP_MD_CTX_settable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_test_flags
#  define EVP_MD_CTX_test_flags OPENSSL_MANGLER(EVP_MD_CTX_test_flags)
# endif
#else
# ifndef _EVP_MD_CTX_test_flags
#  define _EVP_MD_CTX_test_flags OPENSSL_MANGLER_ASM(EVP_MD_CTX_test_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_CTX_update_fn
#  define EVP_MD_CTX_update_fn OPENSSL_MANGLER(EVP_MD_CTX_update_fn)
# endif
#else
# ifndef _EVP_MD_CTX_update_fn
#  define _EVP_MD_CTX_update_fn OPENSSL_MANGLER_ASM(EVP_MD_CTX_update_fn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_do_all
#  define EVP_MD_do_all OPENSSL_MANGLER(EVP_MD_do_all)
# endif
#else
# ifndef _EVP_MD_do_all
#  define _EVP_MD_do_all OPENSSL_MANGLER_ASM(EVP_MD_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_do_all_provided
#  define EVP_MD_do_all_provided OPENSSL_MANGLER(EVP_MD_do_all_provided)
# endif
#else
# ifndef _EVP_MD_do_all_provided
#  define _EVP_MD_do_all_provided OPENSSL_MANGLER_ASM(EVP_MD_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_do_all_sorted
#  define EVP_MD_do_all_sorted OPENSSL_MANGLER(EVP_MD_do_all_sorted)
# endif
#else
# ifndef _EVP_MD_do_all_sorted
#  define _EVP_MD_do_all_sorted OPENSSL_MANGLER_ASM(EVP_MD_do_all_sorted)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_fetch
#  define EVP_MD_fetch OPENSSL_MANGLER(EVP_MD_fetch)
# endif
#else
# ifndef _EVP_MD_fetch
#  define _EVP_MD_fetch OPENSSL_MANGLER_ASM(EVP_MD_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_free
#  define EVP_MD_free OPENSSL_MANGLER(EVP_MD_free)
# endif
#else
# ifndef _EVP_MD_free
#  define _EVP_MD_free OPENSSL_MANGLER_ASM(EVP_MD_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_get0_description
#  define EVP_MD_get0_description OPENSSL_MANGLER(EVP_MD_get0_description)
# endif
#else
# ifndef _EVP_MD_get0_description
#  define _EVP_MD_get0_description OPENSSL_MANGLER_ASM(EVP_MD_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_get0_name
#  define EVP_MD_get0_name OPENSSL_MANGLER(EVP_MD_get0_name)
# endif
#else
# ifndef _EVP_MD_get0_name
#  define _EVP_MD_get0_name OPENSSL_MANGLER_ASM(EVP_MD_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_get0_provider
#  define EVP_MD_get0_provider OPENSSL_MANGLER(EVP_MD_get0_provider)
# endif
#else
# ifndef _EVP_MD_get0_provider
#  define _EVP_MD_get0_provider OPENSSL_MANGLER_ASM(EVP_MD_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_get_block_size
#  define EVP_MD_get_block_size OPENSSL_MANGLER(EVP_MD_get_block_size)
# endif
#else
# ifndef _EVP_MD_get_block_size
#  define _EVP_MD_get_block_size OPENSSL_MANGLER_ASM(EVP_MD_get_block_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_get_flags
#  define EVP_MD_get_flags OPENSSL_MANGLER(EVP_MD_get_flags)
# endif
#else
# ifndef _EVP_MD_get_flags
#  define _EVP_MD_get_flags OPENSSL_MANGLER_ASM(EVP_MD_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_get_params
#  define EVP_MD_get_params OPENSSL_MANGLER(EVP_MD_get_params)
# endif
#else
# ifndef _EVP_MD_get_params
#  define _EVP_MD_get_params OPENSSL_MANGLER_ASM(EVP_MD_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_get_pkey_type
#  define EVP_MD_get_pkey_type OPENSSL_MANGLER(EVP_MD_get_pkey_type)
# endif
#else
# ifndef _EVP_MD_get_pkey_type
#  define _EVP_MD_get_pkey_type OPENSSL_MANGLER_ASM(EVP_MD_get_pkey_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_get_size
#  define EVP_MD_get_size OPENSSL_MANGLER(EVP_MD_get_size)
# endif
#else
# ifndef _EVP_MD_get_size
#  define _EVP_MD_get_size OPENSSL_MANGLER_ASM(EVP_MD_get_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_get_type
#  define EVP_MD_get_type OPENSSL_MANGLER(EVP_MD_get_type)
# endif
#else
# ifndef _EVP_MD_get_type
#  define _EVP_MD_get_type OPENSSL_MANGLER_ASM(EVP_MD_get_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_gettable_ctx_params
#  define EVP_MD_gettable_ctx_params OPENSSL_MANGLER(EVP_MD_gettable_ctx_params)
# endif
#else
# ifndef _EVP_MD_gettable_ctx_params
#  define _EVP_MD_gettable_ctx_params OPENSSL_MANGLER_ASM(EVP_MD_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_gettable_params
#  define EVP_MD_gettable_params OPENSSL_MANGLER(EVP_MD_gettable_params)
# endif
#else
# ifndef _EVP_MD_gettable_params
#  define _EVP_MD_gettable_params OPENSSL_MANGLER_ASM(EVP_MD_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_is_a
#  define EVP_MD_is_a OPENSSL_MANGLER(EVP_MD_is_a)
# endif
#else
# ifndef _EVP_MD_is_a
#  define _EVP_MD_is_a OPENSSL_MANGLER_ASM(EVP_MD_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_dup
#  define EVP_MD_meth_dup OPENSSL_MANGLER(EVP_MD_meth_dup)
# endif
#else
# ifndef _EVP_MD_meth_dup
#  define _EVP_MD_meth_dup OPENSSL_MANGLER_ASM(EVP_MD_meth_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_free
#  define EVP_MD_meth_free OPENSSL_MANGLER(EVP_MD_meth_free)
# endif
#else
# ifndef _EVP_MD_meth_free
#  define _EVP_MD_meth_free OPENSSL_MANGLER_ASM(EVP_MD_meth_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_get_app_datasize
#  define EVP_MD_meth_get_app_datasize OPENSSL_MANGLER(EVP_MD_meth_get_app_datasize)
# endif
#else
# ifndef _EVP_MD_meth_get_app_datasize
#  define _EVP_MD_meth_get_app_datasize OPENSSL_MANGLER_ASM(EVP_MD_meth_get_app_datasize)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_get_cleanup
#  define EVP_MD_meth_get_cleanup OPENSSL_MANGLER(EVP_MD_meth_get_cleanup)
# endif
#else
# ifndef _EVP_MD_meth_get_cleanup
#  define _EVP_MD_meth_get_cleanup OPENSSL_MANGLER_ASM(EVP_MD_meth_get_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_get_copy
#  define EVP_MD_meth_get_copy OPENSSL_MANGLER(EVP_MD_meth_get_copy)
# endif
#else
# ifndef _EVP_MD_meth_get_copy
#  define _EVP_MD_meth_get_copy OPENSSL_MANGLER_ASM(EVP_MD_meth_get_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_get_ctrl
#  define EVP_MD_meth_get_ctrl OPENSSL_MANGLER(EVP_MD_meth_get_ctrl)
# endif
#else
# ifndef _EVP_MD_meth_get_ctrl
#  define _EVP_MD_meth_get_ctrl OPENSSL_MANGLER_ASM(EVP_MD_meth_get_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_get_final
#  define EVP_MD_meth_get_final OPENSSL_MANGLER(EVP_MD_meth_get_final)
# endif
#else
# ifndef _EVP_MD_meth_get_final
#  define _EVP_MD_meth_get_final OPENSSL_MANGLER_ASM(EVP_MD_meth_get_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_get_flags
#  define EVP_MD_meth_get_flags OPENSSL_MANGLER(EVP_MD_meth_get_flags)
# endif
#else
# ifndef _EVP_MD_meth_get_flags
#  define _EVP_MD_meth_get_flags OPENSSL_MANGLER_ASM(EVP_MD_meth_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_get_init
#  define EVP_MD_meth_get_init OPENSSL_MANGLER(EVP_MD_meth_get_init)
# endif
#else
# ifndef _EVP_MD_meth_get_init
#  define _EVP_MD_meth_get_init OPENSSL_MANGLER_ASM(EVP_MD_meth_get_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_get_input_blocksize
#  define EVP_MD_meth_get_input_blocksize OPENSSL_MANGLER(EVP_MD_meth_get_input_blocksize)
# endif
#else
# ifndef _EVP_MD_meth_get_input_blocksize
#  define _EVP_MD_meth_get_input_blocksize OPENSSL_MANGLER_ASM(EVP_MD_meth_get_input_blocksize)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_get_result_size
#  define EVP_MD_meth_get_result_size OPENSSL_MANGLER(EVP_MD_meth_get_result_size)
# endif
#else
# ifndef _EVP_MD_meth_get_result_size
#  define _EVP_MD_meth_get_result_size OPENSSL_MANGLER_ASM(EVP_MD_meth_get_result_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_get_update
#  define EVP_MD_meth_get_update OPENSSL_MANGLER(EVP_MD_meth_get_update)
# endif
#else
# ifndef _EVP_MD_meth_get_update
#  define _EVP_MD_meth_get_update OPENSSL_MANGLER_ASM(EVP_MD_meth_get_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_new
#  define EVP_MD_meth_new OPENSSL_MANGLER(EVP_MD_meth_new)
# endif
#else
# ifndef _EVP_MD_meth_new
#  define _EVP_MD_meth_new OPENSSL_MANGLER_ASM(EVP_MD_meth_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_set_app_datasize
#  define EVP_MD_meth_set_app_datasize OPENSSL_MANGLER(EVP_MD_meth_set_app_datasize)
# endif
#else
# ifndef _EVP_MD_meth_set_app_datasize
#  define _EVP_MD_meth_set_app_datasize OPENSSL_MANGLER_ASM(EVP_MD_meth_set_app_datasize)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_set_cleanup
#  define EVP_MD_meth_set_cleanup OPENSSL_MANGLER(EVP_MD_meth_set_cleanup)
# endif
#else
# ifndef _EVP_MD_meth_set_cleanup
#  define _EVP_MD_meth_set_cleanup OPENSSL_MANGLER_ASM(EVP_MD_meth_set_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_set_copy
#  define EVP_MD_meth_set_copy OPENSSL_MANGLER(EVP_MD_meth_set_copy)
# endif
#else
# ifndef _EVP_MD_meth_set_copy
#  define _EVP_MD_meth_set_copy OPENSSL_MANGLER_ASM(EVP_MD_meth_set_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_set_ctrl
#  define EVP_MD_meth_set_ctrl OPENSSL_MANGLER(EVP_MD_meth_set_ctrl)
# endif
#else
# ifndef _EVP_MD_meth_set_ctrl
#  define _EVP_MD_meth_set_ctrl OPENSSL_MANGLER_ASM(EVP_MD_meth_set_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_set_final
#  define EVP_MD_meth_set_final OPENSSL_MANGLER(EVP_MD_meth_set_final)
# endif
#else
# ifndef _EVP_MD_meth_set_final
#  define _EVP_MD_meth_set_final OPENSSL_MANGLER_ASM(EVP_MD_meth_set_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_set_flags
#  define EVP_MD_meth_set_flags OPENSSL_MANGLER(EVP_MD_meth_set_flags)
# endif
#else
# ifndef _EVP_MD_meth_set_flags
#  define _EVP_MD_meth_set_flags OPENSSL_MANGLER_ASM(EVP_MD_meth_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_set_init
#  define EVP_MD_meth_set_init OPENSSL_MANGLER(EVP_MD_meth_set_init)
# endif
#else
# ifndef _EVP_MD_meth_set_init
#  define _EVP_MD_meth_set_init OPENSSL_MANGLER_ASM(EVP_MD_meth_set_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_set_input_blocksize
#  define EVP_MD_meth_set_input_blocksize OPENSSL_MANGLER(EVP_MD_meth_set_input_blocksize)
# endif
#else
# ifndef _EVP_MD_meth_set_input_blocksize
#  define _EVP_MD_meth_set_input_blocksize OPENSSL_MANGLER_ASM(EVP_MD_meth_set_input_blocksize)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_set_result_size
#  define EVP_MD_meth_set_result_size OPENSSL_MANGLER(EVP_MD_meth_set_result_size)
# endif
#else
# ifndef _EVP_MD_meth_set_result_size
#  define _EVP_MD_meth_set_result_size OPENSSL_MANGLER_ASM(EVP_MD_meth_set_result_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_meth_set_update
#  define EVP_MD_meth_set_update OPENSSL_MANGLER(EVP_MD_meth_set_update)
# endif
#else
# ifndef _EVP_MD_meth_set_update
#  define _EVP_MD_meth_set_update OPENSSL_MANGLER_ASM(EVP_MD_meth_set_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_names_do_all
#  define EVP_MD_names_do_all OPENSSL_MANGLER(EVP_MD_names_do_all)
# endif
#else
# ifndef _EVP_MD_names_do_all
#  define _EVP_MD_names_do_all OPENSSL_MANGLER_ASM(EVP_MD_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_settable_ctx_params
#  define EVP_MD_settable_ctx_params OPENSSL_MANGLER(EVP_MD_settable_ctx_params)
# endif
#else
# ifndef _EVP_MD_settable_ctx_params
#  define _EVP_MD_settable_ctx_params OPENSSL_MANGLER_ASM(EVP_MD_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_MD_up_ref
#  define EVP_MD_up_ref OPENSSL_MANGLER(EVP_MD_up_ref)
# endif
#else
# ifndef _EVP_MD_up_ref
#  define _EVP_MD_up_ref OPENSSL_MANGLER_ASM(EVP_MD_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_OpenFinal
#  define EVP_OpenFinal OPENSSL_MANGLER(EVP_OpenFinal)
# endif
#else
# ifndef _EVP_OpenFinal
#  define _EVP_OpenFinal OPENSSL_MANGLER_ASM(EVP_OpenFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_OpenInit
#  define EVP_OpenInit OPENSSL_MANGLER(EVP_OpenInit)
# endif
#else
# ifndef _EVP_OpenInit
#  define _EVP_OpenInit OPENSSL_MANGLER_ASM(EVP_OpenInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PBE_CipherInit
#  define EVP_PBE_CipherInit OPENSSL_MANGLER(EVP_PBE_CipherInit)
# endif
#else
# ifndef _EVP_PBE_CipherInit
#  define _EVP_PBE_CipherInit OPENSSL_MANGLER_ASM(EVP_PBE_CipherInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PBE_CipherInit_ex
#  define EVP_PBE_CipherInit_ex OPENSSL_MANGLER(EVP_PBE_CipherInit_ex)
# endif
#else
# ifndef _EVP_PBE_CipherInit_ex
#  define _EVP_PBE_CipherInit_ex OPENSSL_MANGLER_ASM(EVP_PBE_CipherInit_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PBE_alg_add
#  define EVP_PBE_alg_add OPENSSL_MANGLER(EVP_PBE_alg_add)
# endif
#else
# ifndef _EVP_PBE_alg_add
#  define _EVP_PBE_alg_add OPENSSL_MANGLER_ASM(EVP_PBE_alg_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PBE_alg_add_type
#  define EVP_PBE_alg_add_type OPENSSL_MANGLER(EVP_PBE_alg_add_type)
# endif
#else
# ifndef _EVP_PBE_alg_add_type
#  define _EVP_PBE_alg_add_type OPENSSL_MANGLER_ASM(EVP_PBE_alg_add_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PBE_cleanup
#  define EVP_PBE_cleanup OPENSSL_MANGLER(EVP_PBE_cleanup)
# endif
#else
# ifndef _EVP_PBE_cleanup
#  define _EVP_PBE_cleanup OPENSSL_MANGLER_ASM(EVP_PBE_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PBE_find
#  define EVP_PBE_find OPENSSL_MANGLER(EVP_PBE_find)
# endif
#else
# ifndef _EVP_PBE_find
#  define _EVP_PBE_find OPENSSL_MANGLER_ASM(EVP_PBE_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PBE_find_ex
#  define EVP_PBE_find_ex OPENSSL_MANGLER(EVP_PBE_find_ex)
# endif
#else
# ifndef _EVP_PBE_find_ex
#  define _EVP_PBE_find_ex OPENSSL_MANGLER_ASM(EVP_PBE_find_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PBE_get
#  define EVP_PBE_get OPENSSL_MANGLER(EVP_PBE_get)
# endif
#else
# ifndef _EVP_PBE_get
#  define _EVP_PBE_get OPENSSL_MANGLER_ASM(EVP_PBE_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PBE_scrypt
#  define EVP_PBE_scrypt OPENSSL_MANGLER(EVP_PBE_scrypt)
# endif
#else
# ifndef _EVP_PBE_scrypt
#  define _EVP_PBE_scrypt OPENSSL_MANGLER_ASM(EVP_PBE_scrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PBE_scrypt_ex
#  define EVP_PBE_scrypt_ex OPENSSL_MANGLER(EVP_PBE_scrypt_ex)
# endif
#else
# ifndef _EVP_PBE_scrypt_ex
#  define _EVP_PBE_scrypt_ex OPENSSL_MANGLER_ASM(EVP_PBE_scrypt_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKCS82PKEY
#  define EVP_PKCS82PKEY OPENSSL_MANGLER(EVP_PKCS82PKEY)
# endif
#else
# ifndef _EVP_PKCS82PKEY
#  define _EVP_PKCS82PKEY OPENSSL_MANGLER_ASM(EVP_PKCS82PKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKCS82PKEY_ex
#  define EVP_PKCS82PKEY_ex OPENSSL_MANGLER(EVP_PKCS82PKEY_ex)
# endif
#else
# ifndef _EVP_PKCS82PKEY_ex
#  define _EVP_PKCS82PKEY_ex OPENSSL_MANGLER_ASM(EVP_PKCS82PKEY_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY2PKCS8
#  define EVP_PKEY2PKCS8 OPENSSL_MANGLER(EVP_PKEY2PKCS8)
# endif
#else
# ifndef _EVP_PKEY2PKCS8
#  define _EVP_PKEY2PKCS8 OPENSSL_MANGLER_ASM(EVP_PKEY2PKCS8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_add1_hkdf_info
#  define EVP_PKEY_CTX_add1_hkdf_info OPENSSL_MANGLER(EVP_PKEY_CTX_add1_hkdf_info)
# endif
#else
# ifndef _EVP_PKEY_CTX_add1_hkdf_info
#  define _EVP_PKEY_CTX_add1_hkdf_info OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_add1_hkdf_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_add1_tls1_prf_seed
#  define EVP_PKEY_CTX_add1_tls1_prf_seed OPENSSL_MANGLER(EVP_PKEY_CTX_add1_tls1_prf_seed)
# endif
#else
# ifndef _EVP_PKEY_CTX_add1_tls1_prf_seed
#  define _EVP_PKEY_CTX_add1_tls1_prf_seed OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_add1_tls1_prf_seed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_ctrl
#  define EVP_PKEY_CTX_ctrl OPENSSL_MANGLER(EVP_PKEY_CTX_ctrl)
# endif
#else
# ifndef _EVP_PKEY_CTX_ctrl
#  define _EVP_PKEY_CTX_ctrl OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_ctrl_str
#  define EVP_PKEY_CTX_ctrl_str OPENSSL_MANGLER(EVP_PKEY_CTX_ctrl_str)
# endif
#else
# ifndef _EVP_PKEY_CTX_ctrl_str
#  define _EVP_PKEY_CTX_ctrl_str OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_ctrl_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_ctrl_uint64
#  define EVP_PKEY_CTX_ctrl_uint64 OPENSSL_MANGLER(EVP_PKEY_CTX_ctrl_uint64)
# endif
#else
# ifndef _EVP_PKEY_CTX_ctrl_uint64
#  define _EVP_PKEY_CTX_ctrl_uint64 OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_ctrl_uint64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_dup
#  define EVP_PKEY_CTX_dup OPENSSL_MANGLER(EVP_PKEY_CTX_dup)
# endif
#else
# ifndef _EVP_PKEY_CTX_dup
#  define _EVP_PKEY_CTX_dup OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_free
#  define EVP_PKEY_CTX_free OPENSSL_MANGLER(EVP_PKEY_CTX_free)
# endif
#else
# ifndef _EVP_PKEY_CTX_free
#  define _EVP_PKEY_CTX_free OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get0_dh_kdf_oid
#  define EVP_PKEY_CTX_get0_dh_kdf_oid OPENSSL_MANGLER(EVP_PKEY_CTX_get0_dh_kdf_oid)
# endif
#else
# ifndef _EVP_PKEY_CTX_get0_dh_kdf_oid
#  define _EVP_PKEY_CTX_get0_dh_kdf_oid OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get0_dh_kdf_oid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get0_dh_kdf_ukm
#  define EVP_PKEY_CTX_get0_dh_kdf_ukm OPENSSL_MANGLER(EVP_PKEY_CTX_get0_dh_kdf_ukm)
# endif
#else
# ifndef _EVP_PKEY_CTX_get0_dh_kdf_ukm
#  define _EVP_PKEY_CTX_get0_dh_kdf_ukm OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get0_dh_kdf_ukm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get0_ecdh_kdf_ukm
#  define EVP_PKEY_CTX_get0_ecdh_kdf_ukm OPENSSL_MANGLER(EVP_PKEY_CTX_get0_ecdh_kdf_ukm)
# endif
#else
# ifndef _EVP_PKEY_CTX_get0_ecdh_kdf_ukm
#  define _EVP_PKEY_CTX_get0_ecdh_kdf_ukm OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get0_ecdh_kdf_ukm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get0_libctx
#  define EVP_PKEY_CTX_get0_libctx OPENSSL_MANGLER(EVP_PKEY_CTX_get0_libctx)
# endif
#else
# ifndef _EVP_PKEY_CTX_get0_libctx
#  define _EVP_PKEY_CTX_get0_libctx OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get0_peerkey
#  define EVP_PKEY_CTX_get0_peerkey OPENSSL_MANGLER(EVP_PKEY_CTX_get0_peerkey)
# endif
#else
# ifndef _EVP_PKEY_CTX_get0_peerkey
#  define _EVP_PKEY_CTX_get0_peerkey OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get0_peerkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get0_pkey
#  define EVP_PKEY_CTX_get0_pkey OPENSSL_MANGLER(EVP_PKEY_CTX_get0_pkey)
# endif
#else
# ifndef _EVP_PKEY_CTX_get0_pkey
#  define _EVP_PKEY_CTX_get0_pkey OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get0_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get0_propq
#  define EVP_PKEY_CTX_get0_propq OPENSSL_MANGLER(EVP_PKEY_CTX_get0_propq)
# endif
#else
# ifndef _EVP_PKEY_CTX_get0_propq
#  define _EVP_PKEY_CTX_get0_propq OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get0_propq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get0_provider
#  define EVP_PKEY_CTX_get0_provider OPENSSL_MANGLER(EVP_PKEY_CTX_get0_provider)
# endif
#else
# ifndef _EVP_PKEY_CTX_get0_provider
#  define _EVP_PKEY_CTX_get0_provider OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get0_rsa_oaep_label
#  define EVP_PKEY_CTX_get0_rsa_oaep_label OPENSSL_MANGLER(EVP_PKEY_CTX_get0_rsa_oaep_label)
# endif
#else
# ifndef _EVP_PKEY_CTX_get0_rsa_oaep_label
#  define _EVP_PKEY_CTX_get0_rsa_oaep_label OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get0_rsa_oaep_label)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get1_id
#  define EVP_PKEY_CTX_get1_id OPENSSL_MANGLER(EVP_PKEY_CTX_get1_id)
# endif
#else
# ifndef _EVP_PKEY_CTX_get1_id
#  define _EVP_PKEY_CTX_get1_id OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get1_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get1_id_len
#  define EVP_PKEY_CTX_get1_id_len OPENSSL_MANGLER(EVP_PKEY_CTX_get1_id_len)
# endif
#else
# ifndef _EVP_PKEY_CTX_get1_id_len
#  define _EVP_PKEY_CTX_get1_id_len OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get1_id_len)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_app_data
#  define EVP_PKEY_CTX_get_app_data OPENSSL_MANGLER(EVP_PKEY_CTX_get_app_data)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_app_data
#  define _EVP_PKEY_CTX_get_app_data OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_cb
#  define EVP_PKEY_CTX_get_cb OPENSSL_MANGLER(EVP_PKEY_CTX_get_cb)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_cb
#  define _EVP_PKEY_CTX_get_cb OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_data
#  define EVP_PKEY_CTX_get_data OPENSSL_MANGLER(EVP_PKEY_CTX_get_data)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_data
#  define _EVP_PKEY_CTX_get_data OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_dh_kdf_md
#  define EVP_PKEY_CTX_get_dh_kdf_md OPENSSL_MANGLER(EVP_PKEY_CTX_get_dh_kdf_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_dh_kdf_md
#  define _EVP_PKEY_CTX_get_dh_kdf_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_dh_kdf_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_dh_kdf_outlen
#  define EVP_PKEY_CTX_get_dh_kdf_outlen OPENSSL_MANGLER(EVP_PKEY_CTX_get_dh_kdf_outlen)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_dh_kdf_outlen
#  define _EVP_PKEY_CTX_get_dh_kdf_outlen OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_dh_kdf_outlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_dh_kdf_type
#  define EVP_PKEY_CTX_get_dh_kdf_type OPENSSL_MANGLER(EVP_PKEY_CTX_get_dh_kdf_type)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_dh_kdf_type
#  define _EVP_PKEY_CTX_get_dh_kdf_type OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_dh_kdf_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_ecdh_cofactor_mode
#  define EVP_PKEY_CTX_get_ecdh_cofactor_mode OPENSSL_MANGLER(EVP_PKEY_CTX_get_ecdh_cofactor_mode)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_ecdh_cofactor_mode
#  define _EVP_PKEY_CTX_get_ecdh_cofactor_mode OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_ecdh_cofactor_mode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_ecdh_kdf_md
#  define EVP_PKEY_CTX_get_ecdh_kdf_md OPENSSL_MANGLER(EVP_PKEY_CTX_get_ecdh_kdf_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_ecdh_kdf_md
#  define _EVP_PKEY_CTX_get_ecdh_kdf_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_ecdh_kdf_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_ecdh_kdf_outlen
#  define EVP_PKEY_CTX_get_ecdh_kdf_outlen OPENSSL_MANGLER(EVP_PKEY_CTX_get_ecdh_kdf_outlen)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_ecdh_kdf_outlen
#  define _EVP_PKEY_CTX_get_ecdh_kdf_outlen OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_ecdh_kdf_outlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_ecdh_kdf_type
#  define EVP_PKEY_CTX_get_ecdh_kdf_type OPENSSL_MANGLER(EVP_PKEY_CTX_get_ecdh_kdf_type)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_ecdh_kdf_type
#  define _EVP_PKEY_CTX_get_ecdh_kdf_type OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_ecdh_kdf_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_group_name
#  define EVP_PKEY_CTX_get_group_name OPENSSL_MANGLER(EVP_PKEY_CTX_get_group_name)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_group_name
#  define _EVP_PKEY_CTX_get_group_name OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_group_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_keygen_info
#  define EVP_PKEY_CTX_get_keygen_info OPENSSL_MANGLER(EVP_PKEY_CTX_get_keygen_info)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_keygen_info
#  define _EVP_PKEY_CTX_get_keygen_info OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_keygen_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_operation
#  define EVP_PKEY_CTX_get_operation OPENSSL_MANGLER(EVP_PKEY_CTX_get_operation)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_operation
#  define _EVP_PKEY_CTX_get_operation OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_operation)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_params
#  define EVP_PKEY_CTX_get_params OPENSSL_MANGLER(EVP_PKEY_CTX_get_params)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_params
#  define _EVP_PKEY_CTX_get_params OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_rsa_mgf1_md
#  define EVP_PKEY_CTX_get_rsa_mgf1_md OPENSSL_MANGLER(EVP_PKEY_CTX_get_rsa_mgf1_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_rsa_mgf1_md
#  define _EVP_PKEY_CTX_get_rsa_mgf1_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_rsa_mgf1_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_rsa_mgf1_md_name
#  define EVP_PKEY_CTX_get_rsa_mgf1_md_name OPENSSL_MANGLER(EVP_PKEY_CTX_get_rsa_mgf1_md_name)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_rsa_mgf1_md_name
#  define _EVP_PKEY_CTX_get_rsa_mgf1_md_name OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_rsa_mgf1_md_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_rsa_oaep_md
#  define EVP_PKEY_CTX_get_rsa_oaep_md OPENSSL_MANGLER(EVP_PKEY_CTX_get_rsa_oaep_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_rsa_oaep_md
#  define _EVP_PKEY_CTX_get_rsa_oaep_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_rsa_oaep_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_rsa_oaep_md_name
#  define EVP_PKEY_CTX_get_rsa_oaep_md_name OPENSSL_MANGLER(EVP_PKEY_CTX_get_rsa_oaep_md_name)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_rsa_oaep_md_name
#  define _EVP_PKEY_CTX_get_rsa_oaep_md_name OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_rsa_oaep_md_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_rsa_padding
#  define EVP_PKEY_CTX_get_rsa_padding OPENSSL_MANGLER(EVP_PKEY_CTX_get_rsa_padding)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_rsa_padding
#  define _EVP_PKEY_CTX_get_rsa_padding OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_rsa_padding)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_rsa_pss_saltlen
#  define EVP_PKEY_CTX_get_rsa_pss_saltlen OPENSSL_MANGLER(EVP_PKEY_CTX_get_rsa_pss_saltlen)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_rsa_pss_saltlen
#  define _EVP_PKEY_CTX_get_rsa_pss_saltlen OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_rsa_pss_saltlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_get_signature_md
#  define EVP_PKEY_CTX_get_signature_md OPENSSL_MANGLER(EVP_PKEY_CTX_get_signature_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_get_signature_md
#  define _EVP_PKEY_CTX_get_signature_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_get_signature_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_gettable_params
#  define EVP_PKEY_CTX_gettable_params OPENSSL_MANGLER(EVP_PKEY_CTX_gettable_params)
# endif
#else
# ifndef _EVP_PKEY_CTX_gettable_params
#  define _EVP_PKEY_CTX_gettable_params OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_hex2ctrl
#  define EVP_PKEY_CTX_hex2ctrl OPENSSL_MANGLER(EVP_PKEY_CTX_hex2ctrl)
# endif
#else
# ifndef _EVP_PKEY_CTX_hex2ctrl
#  define _EVP_PKEY_CTX_hex2ctrl OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_hex2ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_is_a
#  define EVP_PKEY_CTX_is_a OPENSSL_MANGLER(EVP_PKEY_CTX_is_a)
# endif
#else
# ifndef _EVP_PKEY_CTX_is_a
#  define _EVP_PKEY_CTX_is_a OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_md
#  define EVP_PKEY_CTX_md OPENSSL_MANGLER(EVP_PKEY_CTX_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_md
#  define _EVP_PKEY_CTX_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_new
#  define EVP_PKEY_CTX_new OPENSSL_MANGLER(EVP_PKEY_CTX_new)
# endif
#else
# ifndef _EVP_PKEY_CTX_new
#  define _EVP_PKEY_CTX_new OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_new_from_name
#  define EVP_PKEY_CTX_new_from_name OPENSSL_MANGLER(EVP_PKEY_CTX_new_from_name)
# endif
#else
# ifndef _EVP_PKEY_CTX_new_from_name
#  define _EVP_PKEY_CTX_new_from_name OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_new_from_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_new_from_pkey
#  define EVP_PKEY_CTX_new_from_pkey OPENSSL_MANGLER(EVP_PKEY_CTX_new_from_pkey)
# endif
#else
# ifndef _EVP_PKEY_CTX_new_from_pkey
#  define _EVP_PKEY_CTX_new_from_pkey OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_new_from_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_new_id
#  define EVP_PKEY_CTX_new_id OPENSSL_MANGLER(EVP_PKEY_CTX_new_id)
# endif
#else
# ifndef _EVP_PKEY_CTX_new_id
#  define _EVP_PKEY_CTX_new_id OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_new_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set0_dh_kdf_oid
#  define EVP_PKEY_CTX_set0_dh_kdf_oid OPENSSL_MANGLER(EVP_PKEY_CTX_set0_dh_kdf_oid)
# endif
#else
# ifndef _EVP_PKEY_CTX_set0_dh_kdf_oid
#  define _EVP_PKEY_CTX_set0_dh_kdf_oid OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set0_dh_kdf_oid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set0_dh_kdf_ukm
#  define EVP_PKEY_CTX_set0_dh_kdf_ukm OPENSSL_MANGLER(EVP_PKEY_CTX_set0_dh_kdf_ukm)
# endif
#else
# ifndef _EVP_PKEY_CTX_set0_dh_kdf_ukm
#  define _EVP_PKEY_CTX_set0_dh_kdf_ukm OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set0_dh_kdf_ukm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set0_ecdh_kdf_ukm
#  define EVP_PKEY_CTX_set0_ecdh_kdf_ukm OPENSSL_MANGLER(EVP_PKEY_CTX_set0_ecdh_kdf_ukm)
# endif
#else
# ifndef _EVP_PKEY_CTX_set0_ecdh_kdf_ukm
#  define _EVP_PKEY_CTX_set0_ecdh_kdf_ukm OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set0_ecdh_kdf_ukm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set0_keygen_info
#  define EVP_PKEY_CTX_set0_keygen_info OPENSSL_MANGLER(EVP_PKEY_CTX_set0_keygen_info)
# endif
#else
# ifndef _EVP_PKEY_CTX_set0_keygen_info
#  define _EVP_PKEY_CTX_set0_keygen_info OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set0_keygen_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set0_rsa_oaep_label
#  define EVP_PKEY_CTX_set0_rsa_oaep_label OPENSSL_MANGLER(EVP_PKEY_CTX_set0_rsa_oaep_label)
# endif
#else
# ifndef _EVP_PKEY_CTX_set0_rsa_oaep_label
#  define _EVP_PKEY_CTX_set0_rsa_oaep_label OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set0_rsa_oaep_label)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set1_hkdf_key
#  define EVP_PKEY_CTX_set1_hkdf_key OPENSSL_MANGLER(EVP_PKEY_CTX_set1_hkdf_key)
# endif
#else
# ifndef _EVP_PKEY_CTX_set1_hkdf_key
#  define _EVP_PKEY_CTX_set1_hkdf_key OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set1_hkdf_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set1_hkdf_salt
#  define EVP_PKEY_CTX_set1_hkdf_salt OPENSSL_MANGLER(EVP_PKEY_CTX_set1_hkdf_salt)
# endif
#else
# ifndef _EVP_PKEY_CTX_set1_hkdf_salt
#  define _EVP_PKEY_CTX_set1_hkdf_salt OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set1_hkdf_salt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set1_id
#  define EVP_PKEY_CTX_set1_id OPENSSL_MANGLER(EVP_PKEY_CTX_set1_id)
# endif
#else
# ifndef _EVP_PKEY_CTX_set1_id
#  define _EVP_PKEY_CTX_set1_id OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set1_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set1_pbe_pass
#  define EVP_PKEY_CTX_set1_pbe_pass OPENSSL_MANGLER(EVP_PKEY_CTX_set1_pbe_pass)
# endif
#else
# ifndef _EVP_PKEY_CTX_set1_pbe_pass
#  define _EVP_PKEY_CTX_set1_pbe_pass OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set1_pbe_pass)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set1_rsa_keygen_pubexp
#  define EVP_PKEY_CTX_set1_rsa_keygen_pubexp OPENSSL_MANGLER(EVP_PKEY_CTX_set1_rsa_keygen_pubexp)
# endif
#else
# ifndef _EVP_PKEY_CTX_set1_rsa_keygen_pubexp
#  define _EVP_PKEY_CTX_set1_rsa_keygen_pubexp OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set1_rsa_keygen_pubexp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set1_scrypt_salt
#  define EVP_PKEY_CTX_set1_scrypt_salt OPENSSL_MANGLER(EVP_PKEY_CTX_set1_scrypt_salt)
# endif
#else
# ifndef _EVP_PKEY_CTX_set1_scrypt_salt
#  define _EVP_PKEY_CTX_set1_scrypt_salt OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set1_scrypt_salt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set1_tls1_prf_secret
#  define EVP_PKEY_CTX_set1_tls1_prf_secret OPENSSL_MANGLER(EVP_PKEY_CTX_set1_tls1_prf_secret)
# endif
#else
# ifndef _EVP_PKEY_CTX_set1_tls1_prf_secret
#  define _EVP_PKEY_CTX_set1_tls1_prf_secret OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set1_tls1_prf_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_app_data
#  define EVP_PKEY_CTX_set_app_data OPENSSL_MANGLER(EVP_PKEY_CTX_set_app_data)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_app_data
#  define _EVP_PKEY_CTX_set_app_data OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_cb
#  define EVP_PKEY_CTX_set_cb OPENSSL_MANGLER(EVP_PKEY_CTX_set_cb)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_cb
#  define _EVP_PKEY_CTX_set_cb OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_data
#  define EVP_PKEY_CTX_set_data OPENSSL_MANGLER(EVP_PKEY_CTX_set_data)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_data
#  define _EVP_PKEY_CTX_set_data OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_kdf_md
#  define EVP_PKEY_CTX_set_dh_kdf_md OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_kdf_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_kdf_md
#  define _EVP_PKEY_CTX_set_dh_kdf_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_kdf_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_kdf_outlen
#  define EVP_PKEY_CTX_set_dh_kdf_outlen OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_kdf_outlen)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_kdf_outlen
#  define _EVP_PKEY_CTX_set_dh_kdf_outlen OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_kdf_outlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_kdf_type
#  define EVP_PKEY_CTX_set_dh_kdf_type OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_kdf_type)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_kdf_type
#  define _EVP_PKEY_CTX_set_dh_kdf_type OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_kdf_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_nid
#  define EVP_PKEY_CTX_set_dh_nid OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_nid)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_nid
#  define _EVP_PKEY_CTX_set_dh_nid OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_pad
#  define EVP_PKEY_CTX_set_dh_pad OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_pad)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_pad
#  define _EVP_PKEY_CTX_set_dh_pad OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_pad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_paramgen_generator
#  define EVP_PKEY_CTX_set_dh_paramgen_generator OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_paramgen_generator)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_paramgen_generator
#  define _EVP_PKEY_CTX_set_dh_paramgen_generator OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_paramgen_generator)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_paramgen_gindex
#  define EVP_PKEY_CTX_set_dh_paramgen_gindex OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_paramgen_gindex)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_paramgen_gindex
#  define _EVP_PKEY_CTX_set_dh_paramgen_gindex OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_paramgen_gindex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_paramgen_prime_len
#  define EVP_PKEY_CTX_set_dh_paramgen_prime_len OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_paramgen_prime_len)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_paramgen_prime_len
#  define _EVP_PKEY_CTX_set_dh_paramgen_prime_len OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_paramgen_prime_len)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_paramgen_seed
#  define EVP_PKEY_CTX_set_dh_paramgen_seed OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_paramgen_seed)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_paramgen_seed
#  define _EVP_PKEY_CTX_set_dh_paramgen_seed OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_paramgen_seed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_paramgen_subprime_len
#  define EVP_PKEY_CTX_set_dh_paramgen_subprime_len OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_paramgen_subprime_len)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_paramgen_subprime_len
#  define _EVP_PKEY_CTX_set_dh_paramgen_subprime_len OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_paramgen_subprime_len)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_paramgen_type
#  define EVP_PKEY_CTX_set_dh_paramgen_type OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_paramgen_type)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_paramgen_type
#  define _EVP_PKEY_CTX_set_dh_paramgen_type OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_paramgen_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dh_rfc5114
#  define EVP_PKEY_CTX_set_dh_rfc5114 OPENSSL_MANGLER(EVP_PKEY_CTX_set_dh_rfc5114)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dh_rfc5114
#  define _EVP_PKEY_CTX_set_dh_rfc5114 OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dh_rfc5114)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dhx_rfc5114
#  define EVP_PKEY_CTX_set_dhx_rfc5114 OPENSSL_MANGLER(EVP_PKEY_CTX_set_dhx_rfc5114)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dhx_rfc5114
#  define _EVP_PKEY_CTX_set_dhx_rfc5114 OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dhx_rfc5114)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dsa_paramgen_bits
#  define EVP_PKEY_CTX_set_dsa_paramgen_bits OPENSSL_MANGLER(EVP_PKEY_CTX_set_dsa_paramgen_bits)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dsa_paramgen_bits
#  define _EVP_PKEY_CTX_set_dsa_paramgen_bits OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dsa_paramgen_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dsa_paramgen_gindex
#  define EVP_PKEY_CTX_set_dsa_paramgen_gindex OPENSSL_MANGLER(EVP_PKEY_CTX_set_dsa_paramgen_gindex)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dsa_paramgen_gindex
#  define _EVP_PKEY_CTX_set_dsa_paramgen_gindex OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dsa_paramgen_gindex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dsa_paramgen_md
#  define EVP_PKEY_CTX_set_dsa_paramgen_md OPENSSL_MANGLER(EVP_PKEY_CTX_set_dsa_paramgen_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dsa_paramgen_md
#  define _EVP_PKEY_CTX_set_dsa_paramgen_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dsa_paramgen_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dsa_paramgen_md_props
#  define EVP_PKEY_CTX_set_dsa_paramgen_md_props OPENSSL_MANGLER(EVP_PKEY_CTX_set_dsa_paramgen_md_props)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dsa_paramgen_md_props
#  define _EVP_PKEY_CTX_set_dsa_paramgen_md_props OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dsa_paramgen_md_props)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dsa_paramgen_q_bits
#  define EVP_PKEY_CTX_set_dsa_paramgen_q_bits OPENSSL_MANGLER(EVP_PKEY_CTX_set_dsa_paramgen_q_bits)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dsa_paramgen_q_bits
#  define _EVP_PKEY_CTX_set_dsa_paramgen_q_bits OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dsa_paramgen_q_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dsa_paramgen_seed
#  define EVP_PKEY_CTX_set_dsa_paramgen_seed OPENSSL_MANGLER(EVP_PKEY_CTX_set_dsa_paramgen_seed)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dsa_paramgen_seed
#  define _EVP_PKEY_CTX_set_dsa_paramgen_seed OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dsa_paramgen_seed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_dsa_paramgen_type
#  define EVP_PKEY_CTX_set_dsa_paramgen_type OPENSSL_MANGLER(EVP_PKEY_CTX_set_dsa_paramgen_type)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_dsa_paramgen_type
#  define _EVP_PKEY_CTX_set_dsa_paramgen_type OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_dsa_paramgen_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_ec_param_enc
#  define EVP_PKEY_CTX_set_ec_param_enc OPENSSL_MANGLER(EVP_PKEY_CTX_set_ec_param_enc)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_ec_param_enc
#  define _EVP_PKEY_CTX_set_ec_param_enc OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_ec_param_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_ec_paramgen_curve_nid
#  define EVP_PKEY_CTX_set_ec_paramgen_curve_nid OPENSSL_MANGLER(EVP_PKEY_CTX_set_ec_paramgen_curve_nid)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_ec_paramgen_curve_nid
#  define _EVP_PKEY_CTX_set_ec_paramgen_curve_nid OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_ec_paramgen_curve_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_ecdh_cofactor_mode
#  define EVP_PKEY_CTX_set_ecdh_cofactor_mode OPENSSL_MANGLER(EVP_PKEY_CTX_set_ecdh_cofactor_mode)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_ecdh_cofactor_mode
#  define _EVP_PKEY_CTX_set_ecdh_cofactor_mode OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_ecdh_cofactor_mode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_ecdh_kdf_md
#  define EVP_PKEY_CTX_set_ecdh_kdf_md OPENSSL_MANGLER(EVP_PKEY_CTX_set_ecdh_kdf_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_ecdh_kdf_md
#  define _EVP_PKEY_CTX_set_ecdh_kdf_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_ecdh_kdf_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_ecdh_kdf_outlen
#  define EVP_PKEY_CTX_set_ecdh_kdf_outlen OPENSSL_MANGLER(EVP_PKEY_CTX_set_ecdh_kdf_outlen)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_ecdh_kdf_outlen
#  define _EVP_PKEY_CTX_set_ecdh_kdf_outlen OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_ecdh_kdf_outlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_ecdh_kdf_type
#  define EVP_PKEY_CTX_set_ecdh_kdf_type OPENSSL_MANGLER(EVP_PKEY_CTX_set_ecdh_kdf_type)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_ecdh_kdf_type
#  define _EVP_PKEY_CTX_set_ecdh_kdf_type OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_ecdh_kdf_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_group_name
#  define EVP_PKEY_CTX_set_group_name OPENSSL_MANGLER(EVP_PKEY_CTX_set_group_name)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_group_name
#  define _EVP_PKEY_CTX_set_group_name OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_group_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_hkdf_md
#  define EVP_PKEY_CTX_set_hkdf_md OPENSSL_MANGLER(EVP_PKEY_CTX_set_hkdf_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_hkdf_md
#  define _EVP_PKEY_CTX_set_hkdf_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_hkdf_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_hkdf_mode
#  define EVP_PKEY_CTX_set_hkdf_mode OPENSSL_MANGLER(EVP_PKEY_CTX_set_hkdf_mode)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_hkdf_mode
#  define _EVP_PKEY_CTX_set_hkdf_mode OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_hkdf_mode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_kem_op
#  define EVP_PKEY_CTX_set_kem_op OPENSSL_MANGLER(EVP_PKEY_CTX_set_kem_op)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_kem_op
#  define _EVP_PKEY_CTX_set_kem_op OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_kem_op)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_mac_key
#  define EVP_PKEY_CTX_set_mac_key OPENSSL_MANGLER(EVP_PKEY_CTX_set_mac_key)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_mac_key
#  define _EVP_PKEY_CTX_set_mac_key OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_mac_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_params
#  define EVP_PKEY_CTX_set_params OPENSSL_MANGLER(EVP_PKEY_CTX_set_params)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_params
#  define _EVP_PKEY_CTX_set_params OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_keygen_bits
#  define EVP_PKEY_CTX_set_rsa_keygen_bits OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_keygen_bits)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_keygen_bits
#  define _EVP_PKEY_CTX_set_rsa_keygen_bits OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_keygen_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_keygen_primes
#  define EVP_PKEY_CTX_set_rsa_keygen_primes OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_keygen_primes)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_keygen_primes
#  define _EVP_PKEY_CTX_set_rsa_keygen_primes OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_keygen_primes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_keygen_pubexp
#  define EVP_PKEY_CTX_set_rsa_keygen_pubexp OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_keygen_pubexp)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_keygen_pubexp
#  define _EVP_PKEY_CTX_set_rsa_keygen_pubexp OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_keygen_pubexp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_mgf1_md
#  define EVP_PKEY_CTX_set_rsa_mgf1_md OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_mgf1_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_mgf1_md
#  define _EVP_PKEY_CTX_set_rsa_mgf1_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_mgf1_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_mgf1_md_name
#  define EVP_PKEY_CTX_set_rsa_mgf1_md_name OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_mgf1_md_name)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_mgf1_md_name
#  define _EVP_PKEY_CTX_set_rsa_mgf1_md_name OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_mgf1_md_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_oaep_md
#  define EVP_PKEY_CTX_set_rsa_oaep_md OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_oaep_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_oaep_md
#  define _EVP_PKEY_CTX_set_rsa_oaep_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_oaep_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_oaep_md_name
#  define EVP_PKEY_CTX_set_rsa_oaep_md_name OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_oaep_md_name)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_oaep_md_name
#  define _EVP_PKEY_CTX_set_rsa_oaep_md_name OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_oaep_md_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_padding
#  define EVP_PKEY_CTX_set_rsa_padding OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_padding)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_padding
#  define _EVP_PKEY_CTX_set_rsa_padding OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_padding)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_pss_keygen_md
#  define EVP_PKEY_CTX_set_rsa_pss_keygen_md OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_pss_keygen_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_pss_keygen_md
#  define _EVP_PKEY_CTX_set_rsa_pss_keygen_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_pss_keygen_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_pss_keygen_md_name
#  define EVP_PKEY_CTX_set_rsa_pss_keygen_md_name OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_pss_keygen_md_name)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_pss_keygen_md_name
#  define _EVP_PKEY_CTX_set_rsa_pss_keygen_md_name OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_pss_keygen_md_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md
#  define EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md
#  define _EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md_name
#  define EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md_name OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md_name)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md_name
#  define _EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md_name OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_pss_keygen_saltlen
#  define EVP_PKEY_CTX_set_rsa_pss_keygen_saltlen OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_pss_keygen_saltlen)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_pss_keygen_saltlen
#  define _EVP_PKEY_CTX_set_rsa_pss_keygen_saltlen OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_pss_keygen_saltlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_rsa_pss_saltlen
#  define EVP_PKEY_CTX_set_rsa_pss_saltlen OPENSSL_MANGLER(EVP_PKEY_CTX_set_rsa_pss_saltlen)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_rsa_pss_saltlen
#  define _EVP_PKEY_CTX_set_rsa_pss_saltlen OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_rsa_pss_saltlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_scrypt_N
#  define EVP_PKEY_CTX_set_scrypt_N OPENSSL_MANGLER(EVP_PKEY_CTX_set_scrypt_N)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_scrypt_N
#  define _EVP_PKEY_CTX_set_scrypt_N OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_scrypt_N)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_scrypt_maxmem_bytes
#  define EVP_PKEY_CTX_set_scrypt_maxmem_bytes OPENSSL_MANGLER(EVP_PKEY_CTX_set_scrypt_maxmem_bytes)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_scrypt_maxmem_bytes
#  define _EVP_PKEY_CTX_set_scrypt_maxmem_bytes OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_scrypt_maxmem_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_scrypt_p
#  define EVP_PKEY_CTX_set_scrypt_p OPENSSL_MANGLER(EVP_PKEY_CTX_set_scrypt_p)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_scrypt_p
#  define _EVP_PKEY_CTX_set_scrypt_p OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_scrypt_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_scrypt_r
#  define EVP_PKEY_CTX_set_scrypt_r OPENSSL_MANGLER(EVP_PKEY_CTX_set_scrypt_r)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_scrypt_r
#  define _EVP_PKEY_CTX_set_scrypt_r OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_scrypt_r)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_signature_md
#  define EVP_PKEY_CTX_set_signature_md OPENSSL_MANGLER(EVP_PKEY_CTX_set_signature_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_signature_md
#  define _EVP_PKEY_CTX_set_signature_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_signature_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_set_tls1_prf_md
#  define EVP_PKEY_CTX_set_tls1_prf_md OPENSSL_MANGLER(EVP_PKEY_CTX_set_tls1_prf_md)
# endif
#else
# ifndef _EVP_PKEY_CTX_set_tls1_prf_md
#  define _EVP_PKEY_CTX_set_tls1_prf_md OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_set_tls1_prf_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_settable_params
#  define EVP_PKEY_CTX_settable_params OPENSSL_MANGLER(EVP_PKEY_CTX_settable_params)
# endif
#else
# ifndef _EVP_PKEY_CTX_settable_params
#  define _EVP_PKEY_CTX_settable_params OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_settable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_CTX_str2ctrl
#  define EVP_PKEY_CTX_str2ctrl OPENSSL_MANGLER(EVP_PKEY_CTX_str2ctrl)
# endif
#else
# ifndef _EVP_PKEY_CTX_str2ctrl
#  define _EVP_PKEY_CTX_str2ctrl OPENSSL_MANGLER_ASM(EVP_PKEY_CTX_str2ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_Q_keygen
#  define EVP_PKEY_Q_keygen OPENSSL_MANGLER(EVP_PKEY_Q_keygen)
# endif
#else
# ifndef _EVP_PKEY_Q_keygen
#  define _EVP_PKEY_Q_keygen OPENSSL_MANGLER_ASM(EVP_PKEY_Q_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_add1_attr
#  define EVP_PKEY_add1_attr OPENSSL_MANGLER(EVP_PKEY_add1_attr)
# endif
#else
# ifndef _EVP_PKEY_add1_attr
#  define _EVP_PKEY_add1_attr OPENSSL_MANGLER_ASM(EVP_PKEY_add1_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_add1_attr_by_NID
#  define EVP_PKEY_add1_attr_by_NID OPENSSL_MANGLER(EVP_PKEY_add1_attr_by_NID)
# endif
#else
# ifndef _EVP_PKEY_add1_attr_by_NID
#  define _EVP_PKEY_add1_attr_by_NID OPENSSL_MANGLER_ASM(EVP_PKEY_add1_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_add1_attr_by_OBJ
#  define EVP_PKEY_add1_attr_by_OBJ OPENSSL_MANGLER(EVP_PKEY_add1_attr_by_OBJ)
# endif
#else
# ifndef _EVP_PKEY_add1_attr_by_OBJ
#  define _EVP_PKEY_add1_attr_by_OBJ OPENSSL_MANGLER_ASM(EVP_PKEY_add1_attr_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_add1_attr_by_txt
#  define EVP_PKEY_add1_attr_by_txt OPENSSL_MANGLER(EVP_PKEY_add1_attr_by_txt)
# endif
#else
# ifndef _EVP_PKEY_add1_attr_by_txt
#  define _EVP_PKEY_add1_attr_by_txt OPENSSL_MANGLER_ASM(EVP_PKEY_add1_attr_by_txt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_add0
#  define EVP_PKEY_asn1_add0 OPENSSL_MANGLER(EVP_PKEY_asn1_add0)
# endif
#else
# ifndef _EVP_PKEY_asn1_add0
#  define _EVP_PKEY_asn1_add0 OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_add0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_add_alias
#  define EVP_PKEY_asn1_add_alias OPENSSL_MANGLER(EVP_PKEY_asn1_add_alias)
# endif
#else
# ifndef _EVP_PKEY_asn1_add_alias
#  define _EVP_PKEY_asn1_add_alias OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_add_alias)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_copy
#  define EVP_PKEY_asn1_copy OPENSSL_MANGLER(EVP_PKEY_asn1_copy)
# endif
#else
# ifndef _EVP_PKEY_asn1_copy
#  define _EVP_PKEY_asn1_copy OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_find
#  define EVP_PKEY_asn1_find OPENSSL_MANGLER(EVP_PKEY_asn1_find)
# endif
#else
# ifndef _EVP_PKEY_asn1_find
#  define _EVP_PKEY_asn1_find OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_find_str
#  define EVP_PKEY_asn1_find_str OPENSSL_MANGLER(EVP_PKEY_asn1_find_str)
# endif
#else
# ifndef _EVP_PKEY_asn1_find_str
#  define _EVP_PKEY_asn1_find_str OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_find_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_free
#  define EVP_PKEY_asn1_free OPENSSL_MANGLER(EVP_PKEY_asn1_free)
# endif
#else
# ifndef _EVP_PKEY_asn1_free
#  define _EVP_PKEY_asn1_free OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_get0
#  define EVP_PKEY_asn1_get0 OPENSSL_MANGLER(EVP_PKEY_asn1_get0)
# endif
#else
# ifndef _EVP_PKEY_asn1_get0
#  define _EVP_PKEY_asn1_get0 OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_get0_info
#  define EVP_PKEY_asn1_get0_info OPENSSL_MANGLER(EVP_PKEY_asn1_get0_info)
# endif
#else
# ifndef _EVP_PKEY_asn1_get0_info
#  define _EVP_PKEY_asn1_get0_info OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_get0_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_get_count
#  define EVP_PKEY_asn1_get_count OPENSSL_MANGLER(EVP_PKEY_asn1_get_count)
# endif
#else
# ifndef _EVP_PKEY_asn1_get_count
#  define _EVP_PKEY_asn1_get_count OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_get_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_new
#  define EVP_PKEY_asn1_new OPENSSL_MANGLER(EVP_PKEY_asn1_new)
# endif
#else
# ifndef _EVP_PKEY_asn1_new
#  define _EVP_PKEY_asn1_new OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_check
#  define EVP_PKEY_asn1_set_check OPENSSL_MANGLER(EVP_PKEY_asn1_set_check)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_check
#  define _EVP_PKEY_asn1_set_check OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_ctrl
#  define EVP_PKEY_asn1_set_ctrl OPENSSL_MANGLER(EVP_PKEY_asn1_set_ctrl)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_ctrl
#  define _EVP_PKEY_asn1_set_ctrl OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_free
#  define EVP_PKEY_asn1_set_free OPENSSL_MANGLER(EVP_PKEY_asn1_set_free)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_free
#  define _EVP_PKEY_asn1_set_free OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_get_priv_key
#  define EVP_PKEY_asn1_set_get_priv_key OPENSSL_MANGLER(EVP_PKEY_asn1_set_get_priv_key)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_get_priv_key
#  define _EVP_PKEY_asn1_set_get_priv_key OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_get_priv_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_get_pub_key
#  define EVP_PKEY_asn1_set_get_pub_key OPENSSL_MANGLER(EVP_PKEY_asn1_set_get_pub_key)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_get_pub_key
#  define _EVP_PKEY_asn1_set_get_pub_key OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_get_pub_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_item
#  define EVP_PKEY_asn1_set_item OPENSSL_MANGLER(EVP_PKEY_asn1_set_item)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_item
#  define _EVP_PKEY_asn1_set_item OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_item)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_param
#  define EVP_PKEY_asn1_set_param OPENSSL_MANGLER(EVP_PKEY_asn1_set_param)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_param
#  define _EVP_PKEY_asn1_set_param OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_param_check
#  define EVP_PKEY_asn1_set_param_check OPENSSL_MANGLER(EVP_PKEY_asn1_set_param_check)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_param_check
#  define _EVP_PKEY_asn1_set_param_check OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_param_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_private
#  define EVP_PKEY_asn1_set_private OPENSSL_MANGLER(EVP_PKEY_asn1_set_private)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_private
#  define _EVP_PKEY_asn1_set_private OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_private)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_public
#  define EVP_PKEY_asn1_set_public OPENSSL_MANGLER(EVP_PKEY_asn1_set_public)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_public
#  define _EVP_PKEY_asn1_set_public OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_public)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_public_check
#  define EVP_PKEY_asn1_set_public_check OPENSSL_MANGLER(EVP_PKEY_asn1_set_public_check)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_public_check
#  define _EVP_PKEY_asn1_set_public_check OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_public_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_security_bits
#  define EVP_PKEY_asn1_set_security_bits OPENSSL_MANGLER(EVP_PKEY_asn1_set_security_bits)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_security_bits
#  define _EVP_PKEY_asn1_set_security_bits OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_security_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_set_priv_key
#  define EVP_PKEY_asn1_set_set_priv_key OPENSSL_MANGLER(EVP_PKEY_asn1_set_set_priv_key)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_set_priv_key
#  define _EVP_PKEY_asn1_set_set_priv_key OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_set_priv_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_set_pub_key
#  define EVP_PKEY_asn1_set_set_pub_key OPENSSL_MANGLER(EVP_PKEY_asn1_set_set_pub_key)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_set_pub_key
#  define _EVP_PKEY_asn1_set_set_pub_key OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_set_pub_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_asn1_set_siginf
#  define EVP_PKEY_asn1_set_siginf OPENSSL_MANGLER(EVP_PKEY_asn1_set_siginf)
# endif
#else
# ifndef _EVP_PKEY_asn1_set_siginf
#  define _EVP_PKEY_asn1_set_siginf OPENSSL_MANGLER_ASM(EVP_PKEY_asn1_set_siginf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_assign
#  define EVP_PKEY_assign OPENSSL_MANGLER(EVP_PKEY_assign)
# endif
#else
# ifndef _EVP_PKEY_assign
#  define _EVP_PKEY_assign OPENSSL_MANGLER_ASM(EVP_PKEY_assign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_can_sign
#  define EVP_PKEY_can_sign OPENSSL_MANGLER(EVP_PKEY_can_sign)
# endif
#else
# ifndef _EVP_PKEY_can_sign
#  define _EVP_PKEY_can_sign OPENSSL_MANGLER_ASM(EVP_PKEY_can_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_check
#  define EVP_PKEY_check OPENSSL_MANGLER(EVP_PKEY_check)
# endif
#else
# ifndef _EVP_PKEY_check
#  define _EVP_PKEY_check OPENSSL_MANGLER_ASM(EVP_PKEY_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_cmp
#  define EVP_PKEY_cmp OPENSSL_MANGLER(EVP_PKEY_cmp)
# endif
#else
# ifndef _EVP_PKEY_cmp
#  define _EVP_PKEY_cmp OPENSSL_MANGLER_ASM(EVP_PKEY_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_cmp_parameters
#  define EVP_PKEY_cmp_parameters OPENSSL_MANGLER(EVP_PKEY_cmp_parameters)
# endif
#else
# ifndef _EVP_PKEY_cmp_parameters
#  define _EVP_PKEY_cmp_parameters OPENSSL_MANGLER_ASM(EVP_PKEY_cmp_parameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_copy_parameters
#  define EVP_PKEY_copy_parameters OPENSSL_MANGLER(EVP_PKEY_copy_parameters)
# endif
#else
# ifndef _EVP_PKEY_copy_parameters
#  define _EVP_PKEY_copy_parameters OPENSSL_MANGLER_ASM(EVP_PKEY_copy_parameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_decapsulate
#  define EVP_PKEY_decapsulate OPENSSL_MANGLER(EVP_PKEY_decapsulate)
# endif
#else
# ifndef _EVP_PKEY_decapsulate
#  define _EVP_PKEY_decapsulate OPENSSL_MANGLER_ASM(EVP_PKEY_decapsulate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_decapsulate_init
#  define EVP_PKEY_decapsulate_init OPENSSL_MANGLER(EVP_PKEY_decapsulate_init)
# endif
#else
# ifndef _EVP_PKEY_decapsulate_init
#  define _EVP_PKEY_decapsulate_init OPENSSL_MANGLER_ASM(EVP_PKEY_decapsulate_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_decrypt
#  define EVP_PKEY_decrypt OPENSSL_MANGLER(EVP_PKEY_decrypt)
# endif
#else
# ifndef _EVP_PKEY_decrypt
#  define _EVP_PKEY_decrypt OPENSSL_MANGLER_ASM(EVP_PKEY_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_decrypt_init
#  define EVP_PKEY_decrypt_init OPENSSL_MANGLER(EVP_PKEY_decrypt_init)
# endif
#else
# ifndef _EVP_PKEY_decrypt_init
#  define _EVP_PKEY_decrypt_init OPENSSL_MANGLER_ASM(EVP_PKEY_decrypt_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_decrypt_init_ex
#  define EVP_PKEY_decrypt_init_ex OPENSSL_MANGLER(EVP_PKEY_decrypt_init_ex)
# endif
#else
# ifndef _EVP_PKEY_decrypt_init_ex
#  define _EVP_PKEY_decrypt_init_ex OPENSSL_MANGLER_ASM(EVP_PKEY_decrypt_init_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_decrypt_old
#  define EVP_PKEY_decrypt_old OPENSSL_MANGLER(EVP_PKEY_decrypt_old)
# endif
#else
# ifndef _EVP_PKEY_decrypt_old
#  define _EVP_PKEY_decrypt_old OPENSSL_MANGLER_ASM(EVP_PKEY_decrypt_old)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_delete_attr
#  define EVP_PKEY_delete_attr OPENSSL_MANGLER(EVP_PKEY_delete_attr)
# endif
#else
# ifndef _EVP_PKEY_delete_attr
#  define _EVP_PKEY_delete_attr OPENSSL_MANGLER_ASM(EVP_PKEY_delete_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_derive
#  define EVP_PKEY_derive OPENSSL_MANGLER(EVP_PKEY_derive)
# endif
#else
# ifndef _EVP_PKEY_derive
#  define _EVP_PKEY_derive OPENSSL_MANGLER_ASM(EVP_PKEY_derive)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_derive_init
#  define EVP_PKEY_derive_init OPENSSL_MANGLER(EVP_PKEY_derive_init)
# endif
#else
# ifndef _EVP_PKEY_derive_init
#  define _EVP_PKEY_derive_init OPENSSL_MANGLER_ASM(EVP_PKEY_derive_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_derive_init_ex
#  define EVP_PKEY_derive_init_ex OPENSSL_MANGLER(EVP_PKEY_derive_init_ex)
# endif
#else
# ifndef _EVP_PKEY_derive_init_ex
#  define _EVP_PKEY_derive_init_ex OPENSSL_MANGLER_ASM(EVP_PKEY_derive_init_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_derive_set_peer
#  define EVP_PKEY_derive_set_peer OPENSSL_MANGLER(EVP_PKEY_derive_set_peer)
# endif
#else
# ifndef _EVP_PKEY_derive_set_peer
#  define _EVP_PKEY_derive_set_peer OPENSSL_MANGLER_ASM(EVP_PKEY_derive_set_peer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_derive_set_peer_ex
#  define EVP_PKEY_derive_set_peer_ex OPENSSL_MANGLER(EVP_PKEY_derive_set_peer_ex)
# endif
#else
# ifndef _EVP_PKEY_derive_set_peer_ex
#  define _EVP_PKEY_derive_set_peer_ex OPENSSL_MANGLER_ASM(EVP_PKEY_derive_set_peer_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_digestsign_supports_digest
#  define EVP_PKEY_digestsign_supports_digest OPENSSL_MANGLER(EVP_PKEY_digestsign_supports_digest)
# endif
#else
# ifndef _EVP_PKEY_digestsign_supports_digest
#  define _EVP_PKEY_digestsign_supports_digest OPENSSL_MANGLER_ASM(EVP_PKEY_digestsign_supports_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_dup
#  define EVP_PKEY_dup OPENSSL_MANGLER(EVP_PKEY_dup)
# endif
#else
# ifndef _EVP_PKEY_dup
#  define _EVP_PKEY_dup OPENSSL_MANGLER_ASM(EVP_PKEY_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_encapsulate
#  define EVP_PKEY_encapsulate OPENSSL_MANGLER(EVP_PKEY_encapsulate)
# endif
#else
# ifndef _EVP_PKEY_encapsulate
#  define _EVP_PKEY_encapsulate OPENSSL_MANGLER_ASM(EVP_PKEY_encapsulate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_encapsulate_init
#  define EVP_PKEY_encapsulate_init OPENSSL_MANGLER(EVP_PKEY_encapsulate_init)
# endif
#else
# ifndef _EVP_PKEY_encapsulate_init
#  define _EVP_PKEY_encapsulate_init OPENSSL_MANGLER_ASM(EVP_PKEY_encapsulate_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_encrypt
#  define EVP_PKEY_encrypt OPENSSL_MANGLER(EVP_PKEY_encrypt)
# endif
#else
# ifndef _EVP_PKEY_encrypt
#  define _EVP_PKEY_encrypt OPENSSL_MANGLER_ASM(EVP_PKEY_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_encrypt_init
#  define EVP_PKEY_encrypt_init OPENSSL_MANGLER(EVP_PKEY_encrypt_init)
# endif
#else
# ifndef _EVP_PKEY_encrypt_init
#  define _EVP_PKEY_encrypt_init OPENSSL_MANGLER_ASM(EVP_PKEY_encrypt_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_encrypt_init_ex
#  define EVP_PKEY_encrypt_init_ex OPENSSL_MANGLER(EVP_PKEY_encrypt_init_ex)
# endif
#else
# ifndef _EVP_PKEY_encrypt_init_ex
#  define _EVP_PKEY_encrypt_init_ex OPENSSL_MANGLER_ASM(EVP_PKEY_encrypt_init_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_encrypt_old
#  define EVP_PKEY_encrypt_old OPENSSL_MANGLER(EVP_PKEY_encrypt_old)
# endif
#else
# ifndef _EVP_PKEY_encrypt_old
#  define _EVP_PKEY_encrypt_old OPENSSL_MANGLER_ASM(EVP_PKEY_encrypt_old)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_eq
#  define EVP_PKEY_eq OPENSSL_MANGLER(EVP_PKEY_eq)
# endif
#else
# ifndef _EVP_PKEY_eq
#  define _EVP_PKEY_eq OPENSSL_MANGLER_ASM(EVP_PKEY_eq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_export
#  define EVP_PKEY_export OPENSSL_MANGLER(EVP_PKEY_export)
# endif
#else
# ifndef _EVP_PKEY_export
#  define _EVP_PKEY_export OPENSSL_MANGLER_ASM(EVP_PKEY_export)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_free
#  define EVP_PKEY_free OPENSSL_MANGLER(EVP_PKEY_free)
# endif
#else
# ifndef _EVP_PKEY_free
#  define _EVP_PKEY_free OPENSSL_MANGLER_ASM(EVP_PKEY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_fromdata
#  define EVP_PKEY_fromdata OPENSSL_MANGLER(EVP_PKEY_fromdata)
# endif
#else
# ifndef _EVP_PKEY_fromdata
#  define _EVP_PKEY_fromdata OPENSSL_MANGLER_ASM(EVP_PKEY_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_fromdata_init
#  define EVP_PKEY_fromdata_init OPENSSL_MANGLER(EVP_PKEY_fromdata_init)
# endif
#else
# ifndef _EVP_PKEY_fromdata_init
#  define _EVP_PKEY_fromdata_init OPENSSL_MANGLER_ASM(EVP_PKEY_fromdata_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_fromdata_settable
#  define EVP_PKEY_fromdata_settable OPENSSL_MANGLER(EVP_PKEY_fromdata_settable)
# endif
#else
# ifndef _EVP_PKEY_fromdata_settable
#  define _EVP_PKEY_fromdata_settable OPENSSL_MANGLER_ASM(EVP_PKEY_fromdata_settable)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_generate
#  define EVP_PKEY_generate OPENSSL_MANGLER(EVP_PKEY_generate)
# endif
#else
# ifndef _EVP_PKEY_generate
#  define _EVP_PKEY_generate OPENSSL_MANGLER_ASM(EVP_PKEY_generate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0
#  define EVP_PKEY_get0 OPENSSL_MANGLER(EVP_PKEY_get0)
# endif
#else
# ifndef _EVP_PKEY_get0
#  define _EVP_PKEY_get0 OPENSSL_MANGLER_ASM(EVP_PKEY_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_DH
#  define EVP_PKEY_get0_DH OPENSSL_MANGLER(EVP_PKEY_get0_DH)
# endif
#else
# ifndef _EVP_PKEY_get0_DH
#  define _EVP_PKEY_get0_DH OPENSSL_MANGLER_ASM(EVP_PKEY_get0_DH)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_DSA
#  define EVP_PKEY_get0_DSA OPENSSL_MANGLER(EVP_PKEY_get0_DSA)
# endif
#else
# ifndef _EVP_PKEY_get0_DSA
#  define _EVP_PKEY_get0_DSA OPENSSL_MANGLER_ASM(EVP_PKEY_get0_DSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_EC_KEY
#  define EVP_PKEY_get0_EC_KEY OPENSSL_MANGLER(EVP_PKEY_get0_EC_KEY)
# endif
#else
# ifndef _EVP_PKEY_get0_EC_KEY
#  define _EVP_PKEY_get0_EC_KEY OPENSSL_MANGLER_ASM(EVP_PKEY_get0_EC_KEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_RSA
#  define EVP_PKEY_get0_RSA OPENSSL_MANGLER(EVP_PKEY_get0_RSA)
# endif
#else
# ifndef _EVP_PKEY_get0_RSA
#  define _EVP_PKEY_get0_RSA OPENSSL_MANGLER_ASM(EVP_PKEY_get0_RSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_asn1
#  define EVP_PKEY_get0_asn1 OPENSSL_MANGLER(EVP_PKEY_get0_asn1)
# endif
#else
# ifndef _EVP_PKEY_get0_asn1
#  define _EVP_PKEY_get0_asn1 OPENSSL_MANGLER_ASM(EVP_PKEY_get0_asn1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_description
#  define EVP_PKEY_get0_description OPENSSL_MANGLER(EVP_PKEY_get0_description)
# endif
#else
# ifndef _EVP_PKEY_get0_description
#  define _EVP_PKEY_get0_description OPENSSL_MANGLER_ASM(EVP_PKEY_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_engine
#  define EVP_PKEY_get0_engine OPENSSL_MANGLER(EVP_PKEY_get0_engine)
# endif
#else
# ifndef _EVP_PKEY_get0_engine
#  define _EVP_PKEY_get0_engine OPENSSL_MANGLER_ASM(EVP_PKEY_get0_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_hmac
#  define EVP_PKEY_get0_hmac OPENSSL_MANGLER(EVP_PKEY_get0_hmac)
# endif
#else
# ifndef _EVP_PKEY_get0_hmac
#  define _EVP_PKEY_get0_hmac OPENSSL_MANGLER_ASM(EVP_PKEY_get0_hmac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_poly1305
#  define EVP_PKEY_get0_poly1305 OPENSSL_MANGLER(EVP_PKEY_get0_poly1305)
# endif
#else
# ifndef _EVP_PKEY_get0_poly1305
#  define _EVP_PKEY_get0_poly1305 OPENSSL_MANGLER_ASM(EVP_PKEY_get0_poly1305)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_provider
#  define EVP_PKEY_get0_provider OPENSSL_MANGLER(EVP_PKEY_get0_provider)
# endif
#else
# ifndef _EVP_PKEY_get0_provider
#  define _EVP_PKEY_get0_provider OPENSSL_MANGLER_ASM(EVP_PKEY_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_siphash
#  define EVP_PKEY_get0_siphash OPENSSL_MANGLER(EVP_PKEY_get0_siphash)
# endif
#else
# ifndef _EVP_PKEY_get0_siphash
#  define _EVP_PKEY_get0_siphash OPENSSL_MANGLER_ASM(EVP_PKEY_get0_siphash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get0_type_name
#  define EVP_PKEY_get0_type_name OPENSSL_MANGLER(EVP_PKEY_get0_type_name)
# endif
#else
# ifndef _EVP_PKEY_get0_type_name
#  define _EVP_PKEY_get0_type_name OPENSSL_MANGLER_ASM(EVP_PKEY_get0_type_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get1_DH
#  define EVP_PKEY_get1_DH OPENSSL_MANGLER(EVP_PKEY_get1_DH)
# endif
#else
# ifndef _EVP_PKEY_get1_DH
#  define _EVP_PKEY_get1_DH OPENSSL_MANGLER_ASM(EVP_PKEY_get1_DH)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get1_DSA
#  define EVP_PKEY_get1_DSA OPENSSL_MANGLER(EVP_PKEY_get1_DSA)
# endif
#else
# ifndef _EVP_PKEY_get1_DSA
#  define _EVP_PKEY_get1_DSA OPENSSL_MANGLER_ASM(EVP_PKEY_get1_DSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get1_EC_KEY
#  define EVP_PKEY_get1_EC_KEY OPENSSL_MANGLER(EVP_PKEY_get1_EC_KEY)
# endif
#else
# ifndef _EVP_PKEY_get1_EC_KEY
#  define _EVP_PKEY_get1_EC_KEY OPENSSL_MANGLER_ASM(EVP_PKEY_get1_EC_KEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get1_RSA
#  define EVP_PKEY_get1_RSA OPENSSL_MANGLER(EVP_PKEY_get1_RSA)
# endif
#else
# ifndef _EVP_PKEY_get1_RSA
#  define _EVP_PKEY_get1_RSA OPENSSL_MANGLER_ASM(EVP_PKEY_get1_RSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get1_encoded_public_key
#  define EVP_PKEY_get1_encoded_public_key OPENSSL_MANGLER(EVP_PKEY_get1_encoded_public_key)
# endif
#else
# ifndef _EVP_PKEY_get1_encoded_public_key
#  define _EVP_PKEY_get1_encoded_public_key OPENSSL_MANGLER_ASM(EVP_PKEY_get1_encoded_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_attr
#  define EVP_PKEY_get_attr OPENSSL_MANGLER(EVP_PKEY_get_attr)
# endif
#else
# ifndef _EVP_PKEY_get_attr
#  define _EVP_PKEY_get_attr OPENSSL_MANGLER_ASM(EVP_PKEY_get_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_attr_by_NID
#  define EVP_PKEY_get_attr_by_NID OPENSSL_MANGLER(EVP_PKEY_get_attr_by_NID)
# endif
#else
# ifndef _EVP_PKEY_get_attr_by_NID
#  define _EVP_PKEY_get_attr_by_NID OPENSSL_MANGLER_ASM(EVP_PKEY_get_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_attr_by_OBJ
#  define EVP_PKEY_get_attr_by_OBJ OPENSSL_MANGLER(EVP_PKEY_get_attr_by_OBJ)
# endif
#else
# ifndef _EVP_PKEY_get_attr_by_OBJ
#  define _EVP_PKEY_get_attr_by_OBJ OPENSSL_MANGLER_ASM(EVP_PKEY_get_attr_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_attr_count
#  define EVP_PKEY_get_attr_count OPENSSL_MANGLER(EVP_PKEY_get_attr_count)
# endif
#else
# ifndef _EVP_PKEY_get_attr_count
#  define _EVP_PKEY_get_attr_count OPENSSL_MANGLER_ASM(EVP_PKEY_get_attr_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_base_id
#  define EVP_PKEY_get_base_id OPENSSL_MANGLER(EVP_PKEY_get_base_id)
# endif
#else
# ifndef _EVP_PKEY_get_base_id
#  define _EVP_PKEY_get_base_id OPENSSL_MANGLER_ASM(EVP_PKEY_get_base_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_bits
#  define EVP_PKEY_get_bits OPENSSL_MANGLER(EVP_PKEY_get_bits)
# endif
#else
# ifndef _EVP_PKEY_get_bits
#  define _EVP_PKEY_get_bits OPENSSL_MANGLER_ASM(EVP_PKEY_get_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_bn_param
#  define EVP_PKEY_get_bn_param OPENSSL_MANGLER(EVP_PKEY_get_bn_param)
# endif
#else
# ifndef _EVP_PKEY_get_bn_param
#  define _EVP_PKEY_get_bn_param OPENSSL_MANGLER_ASM(EVP_PKEY_get_bn_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_default_digest_name
#  define EVP_PKEY_get_default_digest_name OPENSSL_MANGLER(EVP_PKEY_get_default_digest_name)
# endif
#else
# ifndef _EVP_PKEY_get_default_digest_name
#  define _EVP_PKEY_get_default_digest_name OPENSSL_MANGLER_ASM(EVP_PKEY_get_default_digest_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_default_digest_nid
#  define EVP_PKEY_get_default_digest_nid OPENSSL_MANGLER(EVP_PKEY_get_default_digest_nid)
# endif
#else
# ifndef _EVP_PKEY_get_default_digest_nid
#  define _EVP_PKEY_get_default_digest_nid OPENSSL_MANGLER_ASM(EVP_PKEY_get_default_digest_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_ec_point_conv_form
#  define EVP_PKEY_get_ec_point_conv_form OPENSSL_MANGLER(EVP_PKEY_get_ec_point_conv_form)
# endif
#else
# ifndef _EVP_PKEY_get_ec_point_conv_form
#  define _EVP_PKEY_get_ec_point_conv_form OPENSSL_MANGLER_ASM(EVP_PKEY_get_ec_point_conv_form)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_ex_data
#  define EVP_PKEY_get_ex_data OPENSSL_MANGLER(EVP_PKEY_get_ex_data)
# endif
#else
# ifndef _EVP_PKEY_get_ex_data
#  define _EVP_PKEY_get_ex_data OPENSSL_MANGLER_ASM(EVP_PKEY_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_field_type
#  define EVP_PKEY_get_field_type OPENSSL_MANGLER(EVP_PKEY_get_field_type)
# endif
#else
# ifndef _EVP_PKEY_get_field_type
#  define _EVP_PKEY_get_field_type OPENSSL_MANGLER_ASM(EVP_PKEY_get_field_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_group_name
#  define EVP_PKEY_get_group_name OPENSSL_MANGLER(EVP_PKEY_get_group_name)
# endif
#else
# ifndef _EVP_PKEY_get_group_name
#  define _EVP_PKEY_get_group_name OPENSSL_MANGLER_ASM(EVP_PKEY_get_group_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_id
#  define EVP_PKEY_get_id OPENSSL_MANGLER(EVP_PKEY_get_id)
# endif
#else
# ifndef _EVP_PKEY_get_id
#  define _EVP_PKEY_get_id OPENSSL_MANGLER_ASM(EVP_PKEY_get_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_int_param
#  define EVP_PKEY_get_int_param OPENSSL_MANGLER(EVP_PKEY_get_int_param)
# endif
#else
# ifndef _EVP_PKEY_get_int_param
#  define _EVP_PKEY_get_int_param OPENSSL_MANGLER_ASM(EVP_PKEY_get_int_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_octet_string_param
#  define EVP_PKEY_get_octet_string_param OPENSSL_MANGLER(EVP_PKEY_get_octet_string_param)
# endif
#else
# ifndef _EVP_PKEY_get_octet_string_param
#  define _EVP_PKEY_get_octet_string_param OPENSSL_MANGLER_ASM(EVP_PKEY_get_octet_string_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_params
#  define EVP_PKEY_get_params OPENSSL_MANGLER(EVP_PKEY_get_params)
# endif
#else
# ifndef _EVP_PKEY_get_params
#  define _EVP_PKEY_get_params OPENSSL_MANGLER_ASM(EVP_PKEY_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_raw_private_key
#  define EVP_PKEY_get_raw_private_key OPENSSL_MANGLER(EVP_PKEY_get_raw_private_key)
# endif
#else
# ifndef _EVP_PKEY_get_raw_private_key
#  define _EVP_PKEY_get_raw_private_key OPENSSL_MANGLER_ASM(EVP_PKEY_get_raw_private_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_raw_public_key
#  define EVP_PKEY_get_raw_public_key OPENSSL_MANGLER(EVP_PKEY_get_raw_public_key)
# endif
#else
# ifndef _EVP_PKEY_get_raw_public_key
#  define _EVP_PKEY_get_raw_public_key OPENSSL_MANGLER_ASM(EVP_PKEY_get_raw_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_security_bits
#  define EVP_PKEY_get_security_bits OPENSSL_MANGLER(EVP_PKEY_get_security_bits)
# endif
#else
# ifndef _EVP_PKEY_get_security_bits
#  define _EVP_PKEY_get_security_bits OPENSSL_MANGLER_ASM(EVP_PKEY_get_security_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_size
#  define EVP_PKEY_get_size OPENSSL_MANGLER(EVP_PKEY_get_size)
# endif
#else
# ifndef _EVP_PKEY_get_size
#  define _EVP_PKEY_get_size OPENSSL_MANGLER_ASM(EVP_PKEY_get_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_size_t_param
#  define EVP_PKEY_get_size_t_param OPENSSL_MANGLER(EVP_PKEY_get_size_t_param)
# endif
#else
# ifndef _EVP_PKEY_get_size_t_param
#  define _EVP_PKEY_get_size_t_param OPENSSL_MANGLER_ASM(EVP_PKEY_get_size_t_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_get_utf8_string_param
#  define EVP_PKEY_get_utf8_string_param OPENSSL_MANGLER(EVP_PKEY_get_utf8_string_param)
# endif
#else
# ifndef _EVP_PKEY_get_utf8_string_param
#  define _EVP_PKEY_get_utf8_string_param OPENSSL_MANGLER_ASM(EVP_PKEY_get_utf8_string_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_gettable_params
#  define EVP_PKEY_gettable_params OPENSSL_MANGLER(EVP_PKEY_gettable_params)
# endif
#else
# ifndef _EVP_PKEY_gettable_params
#  define _EVP_PKEY_gettable_params OPENSSL_MANGLER_ASM(EVP_PKEY_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_is_a
#  define EVP_PKEY_is_a OPENSSL_MANGLER(EVP_PKEY_is_a)
# endif
#else
# ifndef _EVP_PKEY_is_a
#  define _EVP_PKEY_is_a OPENSSL_MANGLER_ASM(EVP_PKEY_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_keygen
#  define EVP_PKEY_keygen OPENSSL_MANGLER(EVP_PKEY_keygen)
# endif
#else
# ifndef _EVP_PKEY_keygen
#  define _EVP_PKEY_keygen OPENSSL_MANGLER_ASM(EVP_PKEY_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_keygen_init
#  define EVP_PKEY_keygen_init OPENSSL_MANGLER(EVP_PKEY_keygen_init)
# endif
#else
# ifndef _EVP_PKEY_keygen_init
#  define _EVP_PKEY_keygen_init OPENSSL_MANGLER_ASM(EVP_PKEY_keygen_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_add0
#  define EVP_PKEY_meth_add0 OPENSSL_MANGLER(EVP_PKEY_meth_add0)
# endif
#else
# ifndef _EVP_PKEY_meth_add0
#  define _EVP_PKEY_meth_add0 OPENSSL_MANGLER_ASM(EVP_PKEY_meth_add0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_copy
#  define EVP_PKEY_meth_copy OPENSSL_MANGLER(EVP_PKEY_meth_copy)
# endif
#else
# ifndef _EVP_PKEY_meth_copy
#  define _EVP_PKEY_meth_copy OPENSSL_MANGLER_ASM(EVP_PKEY_meth_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_find
#  define EVP_PKEY_meth_find OPENSSL_MANGLER(EVP_PKEY_meth_find)
# endif
#else
# ifndef _EVP_PKEY_meth_find
#  define _EVP_PKEY_meth_find OPENSSL_MANGLER_ASM(EVP_PKEY_meth_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_free
#  define EVP_PKEY_meth_free OPENSSL_MANGLER(EVP_PKEY_meth_free)
# endif
#else
# ifndef _EVP_PKEY_meth_free
#  define _EVP_PKEY_meth_free OPENSSL_MANGLER_ASM(EVP_PKEY_meth_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get0
#  define EVP_PKEY_meth_get0 OPENSSL_MANGLER(EVP_PKEY_meth_get0)
# endif
#else
# ifndef _EVP_PKEY_meth_get0
#  define _EVP_PKEY_meth_get0 OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get0_info
#  define EVP_PKEY_meth_get0_info OPENSSL_MANGLER(EVP_PKEY_meth_get0_info)
# endif
#else
# ifndef _EVP_PKEY_meth_get0_info
#  define _EVP_PKEY_meth_get0_info OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get0_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_check
#  define EVP_PKEY_meth_get_check OPENSSL_MANGLER(EVP_PKEY_meth_get_check)
# endif
#else
# ifndef _EVP_PKEY_meth_get_check
#  define _EVP_PKEY_meth_get_check OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_cleanup
#  define EVP_PKEY_meth_get_cleanup OPENSSL_MANGLER(EVP_PKEY_meth_get_cleanup)
# endif
#else
# ifndef _EVP_PKEY_meth_get_cleanup
#  define _EVP_PKEY_meth_get_cleanup OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_copy
#  define EVP_PKEY_meth_get_copy OPENSSL_MANGLER(EVP_PKEY_meth_get_copy)
# endif
#else
# ifndef _EVP_PKEY_meth_get_copy
#  define _EVP_PKEY_meth_get_copy OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_count
#  define EVP_PKEY_meth_get_count OPENSSL_MANGLER(EVP_PKEY_meth_get_count)
# endif
#else
# ifndef _EVP_PKEY_meth_get_count
#  define _EVP_PKEY_meth_get_count OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_ctrl
#  define EVP_PKEY_meth_get_ctrl OPENSSL_MANGLER(EVP_PKEY_meth_get_ctrl)
# endif
#else
# ifndef _EVP_PKEY_meth_get_ctrl
#  define _EVP_PKEY_meth_get_ctrl OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_decrypt
#  define EVP_PKEY_meth_get_decrypt OPENSSL_MANGLER(EVP_PKEY_meth_get_decrypt)
# endif
#else
# ifndef _EVP_PKEY_meth_get_decrypt
#  define _EVP_PKEY_meth_get_decrypt OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_derive
#  define EVP_PKEY_meth_get_derive OPENSSL_MANGLER(EVP_PKEY_meth_get_derive)
# endif
#else
# ifndef _EVP_PKEY_meth_get_derive
#  define _EVP_PKEY_meth_get_derive OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_derive)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_digest_custom
#  define EVP_PKEY_meth_get_digest_custom OPENSSL_MANGLER(EVP_PKEY_meth_get_digest_custom)
# endif
#else
# ifndef _EVP_PKEY_meth_get_digest_custom
#  define _EVP_PKEY_meth_get_digest_custom OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_digest_custom)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_digestsign
#  define EVP_PKEY_meth_get_digestsign OPENSSL_MANGLER(EVP_PKEY_meth_get_digestsign)
# endif
#else
# ifndef _EVP_PKEY_meth_get_digestsign
#  define _EVP_PKEY_meth_get_digestsign OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_digestsign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_digestverify
#  define EVP_PKEY_meth_get_digestverify OPENSSL_MANGLER(EVP_PKEY_meth_get_digestverify)
# endif
#else
# ifndef _EVP_PKEY_meth_get_digestverify
#  define _EVP_PKEY_meth_get_digestverify OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_digestverify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_encrypt
#  define EVP_PKEY_meth_get_encrypt OPENSSL_MANGLER(EVP_PKEY_meth_get_encrypt)
# endif
#else
# ifndef _EVP_PKEY_meth_get_encrypt
#  define _EVP_PKEY_meth_get_encrypt OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_init
#  define EVP_PKEY_meth_get_init OPENSSL_MANGLER(EVP_PKEY_meth_get_init)
# endif
#else
# ifndef _EVP_PKEY_meth_get_init
#  define _EVP_PKEY_meth_get_init OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_keygen
#  define EVP_PKEY_meth_get_keygen OPENSSL_MANGLER(EVP_PKEY_meth_get_keygen)
# endif
#else
# ifndef _EVP_PKEY_meth_get_keygen
#  define _EVP_PKEY_meth_get_keygen OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_param_check
#  define EVP_PKEY_meth_get_param_check OPENSSL_MANGLER(EVP_PKEY_meth_get_param_check)
# endif
#else
# ifndef _EVP_PKEY_meth_get_param_check
#  define _EVP_PKEY_meth_get_param_check OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_param_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_paramgen
#  define EVP_PKEY_meth_get_paramgen OPENSSL_MANGLER(EVP_PKEY_meth_get_paramgen)
# endif
#else
# ifndef _EVP_PKEY_meth_get_paramgen
#  define _EVP_PKEY_meth_get_paramgen OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_paramgen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_public_check
#  define EVP_PKEY_meth_get_public_check OPENSSL_MANGLER(EVP_PKEY_meth_get_public_check)
# endif
#else
# ifndef _EVP_PKEY_meth_get_public_check
#  define _EVP_PKEY_meth_get_public_check OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_public_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_sign
#  define EVP_PKEY_meth_get_sign OPENSSL_MANGLER(EVP_PKEY_meth_get_sign)
# endif
#else
# ifndef _EVP_PKEY_meth_get_sign
#  define _EVP_PKEY_meth_get_sign OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_signctx
#  define EVP_PKEY_meth_get_signctx OPENSSL_MANGLER(EVP_PKEY_meth_get_signctx)
# endif
#else
# ifndef _EVP_PKEY_meth_get_signctx
#  define _EVP_PKEY_meth_get_signctx OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_signctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_verify
#  define EVP_PKEY_meth_get_verify OPENSSL_MANGLER(EVP_PKEY_meth_get_verify)
# endif
#else
# ifndef _EVP_PKEY_meth_get_verify
#  define _EVP_PKEY_meth_get_verify OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_verify_recover
#  define EVP_PKEY_meth_get_verify_recover OPENSSL_MANGLER(EVP_PKEY_meth_get_verify_recover)
# endif
#else
# ifndef _EVP_PKEY_meth_get_verify_recover
#  define _EVP_PKEY_meth_get_verify_recover OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_verify_recover)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_get_verifyctx
#  define EVP_PKEY_meth_get_verifyctx OPENSSL_MANGLER(EVP_PKEY_meth_get_verifyctx)
# endif
#else
# ifndef _EVP_PKEY_meth_get_verifyctx
#  define _EVP_PKEY_meth_get_verifyctx OPENSSL_MANGLER_ASM(EVP_PKEY_meth_get_verifyctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_new
#  define EVP_PKEY_meth_new OPENSSL_MANGLER(EVP_PKEY_meth_new)
# endif
#else
# ifndef _EVP_PKEY_meth_new
#  define _EVP_PKEY_meth_new OPENSSL_MANGLER_ASM(EVP_PKEY_meth_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_remove
#  define EVP_PKEY_meth_remove OPENSSL_MANGLER(EVP_PKEY_meth_remove)
# endif
#else
# ifndef _EVP_PKEY_meth_remove
#  define _EVP_PKEY_meth_remove OPENSSL_MANGLER_ASM(EVP_PKEY_meth_remove)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_check
#  define EVP_PKEY_meth_set_check OPENSSL_MANGLER(EVP_PKEY_meth_set_check)
# endif
#else
# ifndef _EVP_PKEY_meth_set_check
#  define _EVP_PKEY_meth_set_check OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_cleanup
#  define EVP_PKEY_meth_set_cleanup OPENSSL_MANGLER(EVP_PKEY_meth_set_cleanup)
# endif
#else
# ifndef _EVP_PKEY_meth_set_cleanup
#  define _EVP_PKEY_meth_set_cleanup OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_copy
#  define EVP_PKEY_meth_set_copy OPENSSL_MANGLER(EVP_PKEY_meth_set_copy)
# endif
#else
# ifndef _EVP_PKEY_meth_set_copy
#  define _EVP_PKEY_meth_set_copy OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_ctrl
#  define EVP_PKEY_meth_set_ctrl OPENSSL_MANGLER(EVP_PKEY_meth_set_ctrl)
# endif
#else
# ifndef _EVP_PKEY_meth_set_ctrl
#  define _EVP_PKEY_meth_set_ctrl OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_decrypt
#  define EVP_PKEY_meth_set_decrypt OPENSSL_MANGLER(EVP_PKEY_meth_set_decrypt)
# endif
#else
# ifndef _EVP_PKEY_meth_set_decrypt
#  define _EVP_PKEY_meth_set_decrypt OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_derive
#  define EVP_PKEY_meth_set_derive OPENSSL_MANGLER(EVP_PKEY_meth_set_derive)
# endif
#else
# ifndef _EVP_PKEY_meth_set_derive
#  define _EVP_PKEY_meth_set_derive OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_derive)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_digest_custom
#  define EVP_PKEY_meth_set_digest_custom OPENSSL_MANGLER(EVP_PKEY_meth_set_digest_custom)
# endif
#else
# ifndef _EVP_PKEY_meth_set_digest_custom
#  define _EVP_PKEY_meth_set_digest_custom OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_digest_custom)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_digestsign
#  define EVP_PKEY_meth_set_digestsign OPENSSL_MANGLER(EVP_PKEY_meth_set_digestsign)
# endif
#else
# ifndef _EVP_PKEY_meth_set_digestsign
#  define _EVP_PKEY_meth_set_digestsign OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_digestsign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_digestverify
#  define EVP_PKEY_meth_set_digestverify OPENSSL_MANGLER(EVP_PKEY_meth_set_digestverify)
# endif
#else
# ifndef _EVP_PKEY_meth_set_digestverify
#  define _EVP_PKEY_meth_set_digestverify OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_digestverify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_encrypt
#  define EVP_PKEY_meth_set_encrypt OPENSSL_MANGLER(EVP_PKEY_meth_set_encrypt)
# endif
#else
# ifndef _EVP_PKEY_meth_set_encrypt
#  define _EVP_PKEY_meth_set_encrypt OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_init
#  define EVP_PKEY_meth_set_init OPENSSL_MANGLER(EVP_PKEY_meth_set_init)
# endif
#else
# ifndef _EVP_PKEY_meth_set_init
#  define _EVP_PKEY_meth_set_init OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_keygen
#  define EVP_PKEY_meth_set_keygen OPENSSL_MANGLER(EVP_PKEY_meth_set_keygen)
# endif
#else
# ifndef _EVP_PKEY_meth_set_keygen
#  define _EVP_PKEY_meth_set_keygen OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_param_check
#  define EVP_PKEY_meth_set_param_check OPENSSL_MANGLER(EVP_PKEY_meth_set_param_check)
# endif
#else
# ifndef _EVP_PKEY_meth_set_param_check
#  define _EVP_PKEY_meth_set_param_check OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_param_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_paramgen
#  define EVP_PKEY_meth_set_paramgen OPENSSL_MANGLER(EVP_PKEY_meth_set_paramgen)
# endif
#else
# ifndef _EVP_PKEY_meth_set_paramgen
#  define _EVP_PKEY_meth_set_paramgen OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_paramgen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_public_check
#  define EVP_PKEY_meth_set_public_check OPENSSL_MANGLER(EVP_PKEY_meth_set_public_check)
# endif
#else
# ifndef _EVP_PKEY_meth_set_public_check
#  define _EVP_PKEY_meth_set_public_check OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_public_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_sign
#  define EVP_PKEY_meth_set_sign OPENSSL_MANGLER(EVP_PKEY_meth_set_sign)
# endif
#else
# ifndef _EVP_PKEY_meth_set_sign
#  define _EVP_PKEY_meth_set_sign OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_signctx
#  define EVP_PKEY_meth_set_signctx OPENSSL_MANGLER(EVP_PKEY_meth_set_signctx)
# endif
#else
# ifndef _EVP_PKEY_meth_set_signctx
#  define _EVP_PKEY_meth_set_signctx OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_signctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_verify
#  define EVP_PKEY_meth_set_verify OPENSSL_MANGLER(EVP_PKEY_meth_set_verify)
# endif
#else
# ifndef _EVP_PKEY_meth_set_verify
#  define _EVP_PKEY_meth_set_verify OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_verify_recover
#  define EVP_PKEY_meth_set_verify_recover OPENSSL_MANGLER(EVP_PKEY_meth_set_verify_recover)
# endif
#else
# ifndef _EVP_PKEY_meth_set_verify_recover
#  define _EVP_PKEY_meth_set_verify_recover OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_verify_recover)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_meth_set_verifyctx
#  define EVP_PKEY_meth_set_verifyctx OPENSSL_MANGLER(EVP_PKEY_meth_set_verifyctx)
# endif
#else
# ifndef _EVP_PKEY_meth_set_verifyctx
#  define _EVP_PKEY_meth_set_verifyctx OPENSSL_MANGLER_ASM(EVP_PKEY_meth_set_verifyctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_missing_parameters
#  define EVP_PKEY_missing_parameters OPENSSL_MANGLER(EVP_PKEY_missing_parameters)
# endif
#else
# ifndef _EVP_PKEY_missing_parameters
#  define _EVP_PKEY_missing_parameters OPENSSL_MANGLER_ASM(EVP_PKEY_missing_parameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_new
#  define EVP_PKEY_new OPENSSL_MANGLER(EVP_PKEY_new)
# endif
#else
# ifndef _EVP_PKEY_new
#  define _EVP_PKEY_new OPENSSL_MANGLER_ASM(EVP_PKEY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_new_CMAC_key
#  define EVP_PKEY_new_CMAC_key OPENSSL_MANGLER(EVP_PKEY_new_CMAC_key)
# endif
#else
# ifndef _EVP_PKEY_new_CMAC_key
#  define _EVP_PKEY_new_CMAC_key OPENSSL_MANGLER_ASM(EVP_PKEY_new_CMAC_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_new_mac_key
#  define EVP_PKEY_new_mac_key OPENSSL_MANGLER(EVP_PKEY_new_mac_key)
# endif
#else
# ifndef _EVP_PKEY_new_mac_key
#  define _EVP_PKEY_new_mac_key OPENSSL_MANGLER_ASM(EVP_PKEY_new_mac_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_new_raw_private_key
#  define EVP_PKEY_new_raw_private_key OPENSSL_MANGLER(EVP_PKEY_new_raw_private_key)
# endif
#else
# ifndef _EVP_PKEY_new_raw_private_key
#  define _EVP_PKEY_new_raw_private_key OPENSSL_MANGLER_ASM(EVP_PKEY_new_raw_private_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_new_raw_private_key_ex
#  define EVP_PKEY_new_raw_private_key_ex OPENSSL_MANGLER(EVP_PKEY_new_raw_private_key_ex)
# endif
#else
# ifndef _EVP_PKEY_new_raw_private_key_ex
#  define _EVP_PKEY_new_raw_private_key_ex OPENSSL_MANGLER_ASM(EVP_PKEY_new_raw_private_key_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_new_raw_public_key
#  define EVP_PKEY_new_raw_public_key OPENSSL_MANGLER(EVP_PKEY_new_raw_public_key)
# endif
#else
# ifndef _EVP_PKEY_new_raw_public_key
#  define _EVP_PKEY_new_raw_public_key OPENSSL_MANGLER_ASM(EVP_PKEY_new_raw_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_new_raw_public_key_ex
#  define EVP_PKEY_new_raw_public_key_ex OPENSSL_MANGLER(EVP_PKEY_new_raw_public_key_ex)
# endif
#else
# ifndef _EVP_PKEY_new_raw_public_key_ex
#  define _EVP_PKEY_new_raw_public_key_ex OPENSSL_MANGLER_ASM(EVP_PKEY_new_raw_public_key_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_pairwise_check
#  define EVP_PKEY_pairwise_check OPENSSL_MANGLER(EVP_PKEY_pairwise_check)
# endif
#else
# ifndef _EVP_PKEY_pairwise_check
#  define _EVP_PKEY_pairwise_check OPENSSL_MANGLER_ASM(EVP_PKEY_pairwise_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_param_check
#  define EVP_PKEY_param_check OPENSSL_MANGLER(EVP_PKEY_param_check)
# endif
#else
# ifndef _EVP_PKEY_param_check
#  define _EVP_PKEY_param_check OPENSSL_MANGLER_ASM(EVP_PKEY_param_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_param_check_quick
#  define EVP_PKEY_param_check_quick OPENSSL_MANGLER(EVP_PKEY_param_check_quick)
# endif
#else
# ifndef _EVP_PKEY_param_check_quick
#  define _EVP_PKEY_param_check_quick OPENSSL_MANGLER_ASM(EVP_PKEY_param_check_quick)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_parameters_eq
#  define EVP_PKEY_parameters_eq OPENSSL_MANGLER(EVP_PKEY_parameters_eq)
# endif
#else
# ifndef _EVP_PKEY_parameters_eq
#  define _EVP_PKEY_parameters_eq OPENSSL_MANGLER_ASM(EVP_PKEY_parameters_eq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_paramgen
#  define EVP_PKEY_paramgen OPENSSL_MANGLER(EVP_PKEY_paramgen)
# endif
#else
# ifndef _EVP_PKEY_paramgen
#  define _EVP_PKEY_paramgen OPENSSL_MANGLER_ASM(EVP_PKEY_paramgen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_paramgen_init
#  define EVP_PKEY_paramgen_init OPENSSL_MANGLER(EVP_PKEY_paramgen_init)
# endif
#else
# ifndef _EVP_PKEY_paramgen_init
#  define _EVP_PKEY_paramgen_init OPENSSL_MANGLER_ASM(EVP_PKEY_paramgen_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_print_params
#  define EVP_PKEY_print_params OPENSSL_MANGLER(EVP_PKEY_print_params)
# endif
#else
# ifndef _EVP_PKEY_print_params
#  define _EVP_PKEY_print_params OPENSSL_MANGLER_ASM(EVP_PKEY_print_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_print_params_fp
#  define EVP_PKEY_print_params_fp OPENSSL_MANGLER(EVP_PKEY_print_params_fp)
# endif
#else
# ifndef _EVP_PKEY_print_params_fp
#  define _EVP_PKEY_print_params_fp OPENSSL_MANGLER_ASM(EVP_PKEY_print_params_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_print_private
#  define EVP_PKEY_print_private OPENSSL_MANGLER(EVP_PKEY_print_private)
# endif
#else
# ifndef _EVP_PKEY_print_private
#  define _EVP_PKEY_print_private OPENSSL_MANGLER_ASM(EVP_PKEY_print_private)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_print_private_fp
#  define EVP_PKEY_print_private_fp OPENSSL_MANGLER(EVP_PKEY_print_private_fp)
# endif
#else
# ifndef _EVP_PKEY_print_private_fp
#  define _EVP_PKEY_print_private_fp OPENSSL_MANGLER_ASM(EVP_PKEY_print_private_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_print_public
#  define EVP_PKEY_print_public OPENSSL_MANGLER(EVP_PKEY_print_public)
# endif
#else
# ifndef _EVP_PKEY_print_public
#  define _EVP_PKEY_print_public OPENSSL_MANGLER_ASM(EVP_PKEY_print_public)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_print_public_fp
#  define EVP_PKEY_print_public_fp OPENSSL_MANGLER(EVP_PKEY_print_public_fp)
# endif
#else
# ifndef _EVP_PKEY_print_public_fp
#  define _EVP_PKEY_print_public_fp OPENSSL_MANGLER_ASM(EVP_PKEY_print_public_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_private_check
#  define EVP_PKEY_private_check OPENSSL_MANGLER(EVP_PKEY_private_check)
# endif
#else
# ifndef _EVP_PKEY_private_check
#  define _EVP_PKEY_private_check OPENSSL_MANGLER_ASM(EVP_PKEY_private_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_public_check
#  define EVP_PKEY_public_check OPENSSL_MANGLER(EVP_PKEY_public_check)
# endif
#else
# ifndef _EVP_PKEY_public_check
#  define _EVP_PKEY_public_check OPENSSL_MANGLER_ASM(EVP_PKEY_public_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_public_check_quick
#  define EVP_PKEY_public_check_quick OPENSSL_MANGLER(EVP_PKEY_public_check_quick)
# endif
#else
# ifndef _EVP_PKEY_public_check_quick
#  define _EVP_PKEY_public_check_quick OPENSSL_MANGLER_ASM(EVP_PKEY_public_check_quick)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_save_parameters
#  define EVP_PKEY_save_parameters OPENSSL_MANGLER(EVP_PKEY_save_parameters)
# endif
#else
# ifndef _EVP_PKEY_save_parameters
#  define _EVP_PKEY_save_parameters OPENSSL_MANGLER_ASM(EVP_PKEY_save_parameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set1_DH
#  define EVP_PKEY_set1_DH OPENSSL_MANGLER(EVP_PKEY_set1_DH)
# endif
#else
# ifndef _EVP_PKEY_set1_DH
#  define _EVP_PKEY_set1_DH OPENSSL_MANGLER_ASM(EVP_PKEY_set1_DH)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set1_DSA
#  define EVP_PKEY_set1_DSA OPENSSL_MANGLER(EVP_PKEY_set1_DSA)
# endif
#else
# ifndef _EVP_PKEY_set1_DSA
#  define _EVP_PKEY_set1_DSA OPENSSL_MANGLER_ASM(EVP_PKEY_set1_DSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set1_EC_KEY
#  define EVP_PKEY_set1_EC_KEY OPENSSL_MANGLER(EVP_PKEY_set1_EC_KEY)
# endif
#else
# ifndef _EVP_PKEY_set1_EC_KEY
#  define _EVP_PKEY_set1_EC_KEY OPENSSL_MANGLER_ASM(EVP_PKEY_set1_EC_KEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set1_RSA
#  define EVP_PKEY_set1_RSA OPENSSL_MANGLER(EVP_PKEY_set1_RSA)
# endif
#else
# ifndef _EVP_PKEY_set1_RSA
#  define _EVP_PKEY_set1_RSA OPENSSL_MANGLER_ASM(EVP_PKEY_set1_RSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set1_encoded_public_key
#  define EVP_PKEY_set1_encoded_public_key OPENSSL_MANGLER(EVP_PKEY_set1_encoded_public_key)
# endif
#else
# ifndef _EVP_PKEY_set1_encoded_public_key
#  define _EVP_PKEY_set1_encoded_public_key OPENSSL_MANGLER_ASM(EVP_PKEY_set1_encoded_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set1_engine
#  define EVP_PKEY_set1_engine OPENSSL_MANGLER(EVP_PKEY_set1_engine)
# endif
#else
# ifndef _EVP_PKEY_set1_engine
#  define _EVP_PKEY_set1_engine OPENSSL_MANGLER_ASM(EVP_PKEY_set1_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set_bn_param
#  define EVP_PKEY_set_bn_param OPENSSL_MANGLER(EVP_PKEY_set_bn_param)
# endif
#else
# ifndef _EVP_PKEY_set_bn_param
#  define _EVP_PKEY_set_bn_param OPENSSL_MANGLER_ASM(EVP_PKEY_set_bn_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set_ex_data
#  define EVP_PKEY_set_ex_data OPENSSL_MANGLER(EVP_PKEY_set_ex_data)
# endif
#else
# ifndef _EVP_PKEY_set_ex_data
#  define _EVP_PKEY_set_ex_data OPENSSL_MANGLER_ASM(EVP_PKEY_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set_int_param
#  define EVP_PKEY_set_int_param OPENSSL_MANGLER(EVP_PKEY_set_int_param)
# endif
#else
# ifndef _EVP_PKEY_set_int_param
#  define _EVP_PKEY_set_int_param OPENSSL_MANGLER_ASM(EVP_PKEY_set_int_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set_octet_string_param
#  define EVP_PKEY_set_octet_string_param OPENSSL_MANGLER(EVP_PKEY_set_octet_string_param)
# endif
#else
# ifndef _EVP_PKEY_set_octet_string_param
#  define _EVP_PKEY_set_octet_string_param OPENSSL_MANGLER_ASM(EVP_PKEY_set_octet_string_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set_params
#  define EVP_PKEY_set_params OPENSSL_MANGLER(EVP_PKEY_set_params)
# endif
#else
# ifndef _EVP_PKEY_set_params
#  define _EVP_PKEY_set_params OPENSSL_MANGLER_ASM(EVP_PKEY_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set_size_t_param
#  define EVP_PKEY_set_size_t_param OPENSSL_MANGLER(EVP_PKEY_set_size_t_param)
# endif
#else
# ifndef _EVP_PKEY_set_size_t_param
#  define _EVP_PKEY_set_size_t_param OPENSSL_MANGLER_ASM(EVP_PKEY_set_size_t_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set_type
#  define EVP_PKEY_set_type OPENSSL_MANGLER(EVP_PKEY_set_type)
# endif
#else
# ifndef _EVP_PKEY_set_type
#  define _EVP_PKEY_set_type OPENSSL_MANGLER_ASM(EVP_PKEY_set_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set_type_by_keymgmt
#  define EVP_PKEY_set_type_by_keymgmt OPENSSL_MANGLER(EVP_PKEY_set_type_by_keymgmt)
# endif
#else
# ifndef _EVP_PKEY_set_type_by_keymgmt
#  define _EVP_PKEY_set_type_by_keymgmt OPENSSL_MANGLER_ASM(EVP_PKEY_set_type_by_keymgmt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set_type_str
#  define EVP_PKEY_set_type_str OPENSSL_MANGLER(EVP_PKEY_set_type_str)
# endif
#else
# ifndef _EVP_PKEY_set_type_str
#  define _EVP_PKEY_set_type_str OPENSSL_MANGLER_ASM(EVP_PKEY_set_type_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_set_utf8_string_param
#  define EVP_PKEY_set_utf8_string_param OPENSSL_MANGLER(EVP_PKEY_set_utf8_string_param)
# endif
#else
# ifndef _EVP_PKEY_set_utf8_string_param
#  define _EVP_PKEY_set_utf8_string_param OPENSSL_MANGLER_ASM(EVP_PKEY_set_utf8_string_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_settable_params
#  define EVP_PKEY_settable_params OPENSSL_MANGLER(EVP_PKEY_settable_params)
# endif
#else
# ifndef _EVP_PKEY_settable_params
#  define _EVP_PKEY_settable_params OPENSSL_MANGLER_ASM(EVP_PKEY_settable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_sign
#  define EVP_PKEY_sign OPENSSL_MANGLER(EVP_PKEY_sign)
# endif
#else
# ifndef _EVP_PKEY_sign
#  define _EVP_PKEY_sign OPENSSL_MANGLER_ASM(EVP_PKEY_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_sign_init
#  define EVP_PKEY_sign_init OPENSSL_MANGLER(EVP_PKEY_sign_init)
# endif
#else
# ifndef _EVP_PKEY_sign_init
#  define _EVP_PKEY_sign_init OPENSSL_MANGLER_ASM(EVP_PKEY_sign_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_sign_init_ex
#  define EVP_PKEY_sign_init_ex OPENSSL_MANGLER(EVP_PKEY_sign_init_ex)
# endif
#else
# ifndef _EVP_PKEY_sign_init_ex
#  define _EVP_PKEY_sign_init_ex OPENSSL_MANGLER_ASM(EVP_PKEY_sign_init_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_todata
#  define EVP_PKEY_todata OPENSSL_MANGLER(EVP_PKEY_todata)
# endif
#else
# ifndef _EVP_PKEY_todata
#  define _EVP_PKEY_todata OPENSSL_MANGLER_ASM(EVP_PKEY_todata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_type
#  define EVP_PKEY_type OPENSSL_MANGLER(EVP_PKEY_type)
# endif
#else
# ifndef _EVP_PKEY_type
#  define _EVP_PKEY_type OPENSSL_MANGLER_ASM(EVP_PKEY_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_type_names_do_all
#  define EVP_PKEY_type_names_do_all OPENSSL_MANGLER(EVP_PKEY_type_names_do_all)
# endif
#else
# ifndef _EVP_PKEY_type_names_do_all
#  define _EVP_PKEY_type_names_do_all OPENSSL_MANGLER_ASM(EVP_PKEY_type_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_up_ref
#  define EVP_PKEY_up_ref OPENSSL_MANGLER(EVP_PKEY_up_ref)
# endif
#else
# ifndef _EVP_PKEY_up_ref
#  define _EVP_PKEY_up_ref OPENSSL_MANGLER_ASM(EVP_PKEY_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_verify
#  define EVP_PKEY_verify OPENSSL_MANGLER(EVP_PKEY_verify)
# endif
#else
# ifndef _EVP_PKEY_verify
#  define _EVP_PKEY_verify OPENSSL_MANGLER_ASM(EVP_PKEY_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_verify_init
#  define EVP_PKEY_verify_init OPENSSL_MANGLER(EVP_PKEY_verify_init)
# endif
#else
# ifndef _EVP_PKEY_verify_init
#  define _EVP_PKEY_verify_init OPENSSL_MANGLER_ASM(EVP_PKEY_verify_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_verify_init_ex
#  define EVP_PKEY_verify_init_ex OPENSSL_MANGLER(EVP_PKEY_verify_init_ex)
# endif
#else
# ifndef _EVP_PKEY_verify_init_ex
#  define _EVP_PKEY_verify_init_ex OPENSSL_MANGLER_ASM(EVP_PKEY_verify_init_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_verify_recover
#  define EVP_PKEY_verify_recover OPENSSL_MANGLER(EVP_PKEY_verify_recover)
# endif
#else
# ifndef _EVP_PKEY_verify_recover
#  define _EVP_PKEY_verify_recover OPENSSL_MANGLER_ASM(EVP_PKEY_verify_recover)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_verify_recover_init
#  define EVP_PKEY_verify_recover_init OPENSSL_MANGLER(EVP_PKEY_verify_recover_init)
# endif
#else
# ifndef _EVP_PKEY_verify_recover_init
#  define _EVP_PKEY_verify_recover_init OPENSSL_MANGLER_ASM(EVP_PKEY_verify_recover_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_PKEY_verify_recover_init_ex
#  define EVP_PKEY_verify_recover_init_ex OPENSSL_MANGLER(EVP_PKEY_verify_recover_init_ex)
# endif
#else
# ifndef _EVP_PKEY_verify_recover_init_ex
#  define _EVP_PKEY_verify_recover_init_ex OPENSSL_MANGLER_ASM(EVP_PKEY_verify_recover_init_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_Q_digest
#  define EVP_Q_digest OPENSSL_MANGLER(EVP_Q_digest)
# endif
#else
# ifndef _EVP_Q_digest
#  define _EVP_Q_digest OPENSSL_MANGLER_ASM(EVP_Q_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_Q_mac
#  define EVP_Q_mac OPENSSL_MANGLER(EVP_Q_mac)
# endif
#else
# ifndef _EVP_Q_mac
#  define _EVP_Q_mac OPENSSL_MANGLER_ASM(EVP_Q_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_CTX_free
#  define EVP_RAND_CTX_free OPENSSL_MANGLER(EVP_RAND_CTX_free)
# endif
#else
# ifndef _EVP_RAND_CTX_free
#  define _EVP_RAND_CTX_free OPENSSL_MANGLER_ASM(EVP_RAND_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_CTX_get0_rand
#  define EVP_RAND_CTX_get0_rand OPENSSL_MANGLER(EVP_RAND_CTX_get0_rand)
# endif
#else
# ifndef _EVP_RAND_CTX_get0_rand
#  define _EVP_RAND_CTX_get0_rand OPENSSL_MANGLER_ASM(EVP_RAND_CTX_get0_rand)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_CTX_get_params
#  define EVP_RAND_CTX_get_params OPENSSL_MANGLER(EVP_RAND_CTX_get_params)
# endif
#else
# ifndef _EVP_RAND_CTX_get_params
#  define _EVP_RAND_CTX_get_params OPENSSL_MANGLER_ASM(EVP_RAND_CTX_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_CTX_gettable_params
#  define EVP_RAND_CTX_gettable_params OPENSSL_MANGLER(EVP_RAND_CTX_gettable_params)
# endif
#else
# ifndef _EVP_RAND_CTX_gettable_params
#  define _EVP_RAND_CTX_gettable_params OPENSSL_MANGLER_ASM(EVP_RAND_CTX_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_CTX_new
#  define EVP_RAND_CTX_new OPENSSL_MANGLER(EVP_RAND_CTX_new)
# endif
#else
# ifndef _EVP_RAND_CTX_new
#  define _EVP_RAND_CTX_new OPENSSL_MANGLER_ASM(EVP_RAND_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_CTX_set_params
#  define EVP_RAND_CTX_set_params OPENSSL_MANGLER(EVP_RAND_CTX_set_params)
# endif
#else
# ifndef _EVP_RAND_CTX_set_params
#  define _EVP_RAND_CTX_set_params OPENSSL_MANGLER_ASM(EVP_RAND_CTX_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_CTX_settable_params
#  define EVP_RAND_CTX_settable_params OPENSSL_MANGLER(EVP_RAND_CTX_settable_params)
# endif
#else
# ifndef _EVP_RAND_CTX_settable_params
#  define _EVP_RAND_CTX_settable_params OPENSSL_MANGLER_ASM(EVP_RAND_CTX_settable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_do_all_provided
#  define EVP_RAND_do_all_provided OPENSSL_MANGLER(EVP_RAND_do_all_provided)
# endif
#else
# ifndef _EVP_RAND_do_all_provided
#  define _EVP_RAND_do_all_provided OPENSSL_MANGLER_ASM(EVP_RAND_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_enable_locking
#  define EVP_RAND_enable_locking OPENSSL_MANGLER(EVP_RAND_enable_locking)
# endif
#else
# ifndef _EVP_RAND_enable_locking
#  define _EVP_RAND_enable_locking OPENSSL_MANGLER_ASM(EVP_RAND_enable_locking)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_fetch
#  define EVP_RAND_fetch OPENSSL_MANGLER(EVP_RAND_fetch)
# endif
#else
# ifndef _EVP_RAND_fetch
#  define _EVP_RAND_fetch OPENSSL_MANGLER_ASM(EVP_RAND_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_free
#  define EVP_RAND_free OPENSSL_MANGLER(EVP_RAND_free)
# endif
#else
# ifndef _EVP_RAND_free
#  define _EVP_RAND_free OPENSSL_MANGLER_ASM(EVP_RAND_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_generate
#  define EVP_RAND_generate OPENSSL_MANGLER(EVP_RAND_generate)
# endif
#else
# ifndef _EVP_RAND_generate
#  define _EVP_RAND_generate OPENSSL_MANGLER_ASM(EVP_RAND_generate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_get0_description
#  define EVP_RAND_get0_description OPENSSL_MANGLER(EVP_RAND_get0_description)
# endif
#else
# ifndef _EVP_RAND_get0_description
#  define _EVP_RAND_get0_description OPENSSL_MANGLER_ASM(EVP_RAND_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_get0_name
#  define EVP_RAND_get0_name OPENSSL_MANGLER(EVP_RAND_get0_name)
# endif
#else
# ifndef _EVP_RAND_get0_name
#  define _EVP_RAND_get0_name OPENSSL_MANGLER_ASM(EVP_RAND_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_get0_provider
#  define EVP_RAND_get0_provider OPENSSL_MANGLER(EVP_RAND_get0_provider)
# endif
#else
# ifndef _EVP_RAND_get0_provider
#  define _EVP_RAND_get0_provider OPENSSL_MANGLER_ASM(EVP_RAND_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_get_params
#  define EVP_RAND_get_params OPENSSL_MANGLER(EVP_RAND_get_params)
# endif
#else
# ifndef _EVP_RAND_get_params
#  define _EVP_RAND_get_params OPENSSL_MANGLER_ASM(EVP_RAND_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_get_state
#  define EVP_RAND_get_state OPENSSL_MANGLER(EVP_RAND_get_state)
# endif
#else
# ifndef _EVP_RAND_get_state
#  define _EVP_RAND_get_state OPENSSL_MANGLER_ASM(EVP_RAND_get_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_get_strength
#  define EVP_RAND_get_strength OPENSSL_MANGLER(EVP_RAND_get_strength)
# endif
#else
# ifndef _EVP_RAND_get_strength
#  define _EVP_RAND_get_strength OPENSSL_MANGLER_ASM(EVP_RAND_get_strength)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_gettable_ctx_params
#  define EVP_RAND_gettable_ctx_params OPENSSL_MANGLER(EVP_RAND_gettable_ctx_params)
# endif
#else
# ifndef _EVP_RAND_gettable_ctx_params
#  define _EVP_RAND_gettable_ctx_params OPENSSL_MANGLER_ASM(EVP_RAND_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_gettable_params
#  define EVP_RAND_gettable_params OPENSSL_MANGLER(EVP_RAND_gettable_params)
# endif
#else
# ifndef _EVP_RAND_gettable_params
#  define _EVP_RAND_gettable_params OPENSSL_MANGLER_ASM(EVP_RAND_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_instantiate
#  define EVP_RAND_instantiate OPENSSL_MANGLER(EVP_RAND_instantiate)
# endif
#else
# ifndef _EVP_RAND_instantiate
#  define _EVP_RAND_instantiate OPENSSL_MANGLER_ASM(EVP_RAND_instantiate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_is_a
#  define EVP_RAND_is_a OPENSSL_MANGLER(EVP_RAND_is_a)
# endif
#else
# ifndef _EVP_RAND_is_a
#  define _EVP_RAND_is_a OPENSSL_MANGLER_ASM(EVP_RAND_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_names_do_all
#  define EVP_RAND_names_do_all OPENSSL_MANGLER(EVP_RAND_names_do_all)
# endif
#else
# ifndef _EVP_RAND_names_do_all
#  define _EVP_RAND_names_do_all OPENSSL_MANGLER_ASM(EVP_RAND_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_nonce
#  define EVP_RAND_nonce OPENSSL_MANGLER(EVP_RAND_nonce)
# endif
#else
# ifndef _EVP_RAND_nonce
#  define _EVP_RAND_nonce OPENSSL_MANGLER_ASM(EVP_RAND_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_reseed
#  define EVP_RAND_reseed OPENSSL_MANGLER(EVP_RAND_reseed)
# endif
#else
# ifndef _EVP_RAND_reseed
#  define _EVP_RAND_reseed OPENSSL_MANGLER_ASM(EVP_RAND_reseed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_settable_ctx_params
#  define EVP_RAND_settable_ctx_params OPENSSL_MANGLER(EVP_RAND_settable_ctx_params)
# endif
#else
# ifndef _EVP_RAND_settable_ctx_params
#  define _EVP_RAND_settable_ctx_params OPENSSL_MANGLER_ASM(EVP_RAND_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_uninstantiate
#  define EVP_RAND_uninstantiate OPENSSL_MANGLER(EVP_RAND_uninstantiate)
# endif
#else
# ifndef _EVP_RAND_uninstantiate
#  define _EVP_RAND_uninstantiate OPENSSL_MANGLER_ASM(EVP_RAND_uninstantiate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_up_ref
#  define EVP_RAND_up_ref OPENSSL_MANGLER(EVP_RAND_up_ref)
# endif
#else
# ifndef _EVP_RAND_up_ref
#  define _EVP_RAND_up_ref OPENSSL_MANGLER_ASM(EVP_RAND_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_RAND_verify_zeroization
#  define EVP_RAND_verify_zeroization OPENSSL_MANGLER(EVP_RAND_verify_zeroization)
# endif
#else
# ifndef _EVP_RAND_verify_zeroization
#  define _EVP_RAND_verify_zeroization OPENSSL_MANGLER_ASM(EVP_RAND_verify_zeroization)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SIGNATURE_do_all_provided
#  define EVP_SIGNATURE_do_all_provided OPENSSL_MANGLER(EVP_SIGNATURE_do_all_provided)
# endif
#else
# ifndef _EVP_SIGNATURE_do_all_provided
#  define _EVP_SIGNATURE_do_all_provided OPENSSL_MANGLER_ASM(EVP_SIGNATURE_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SIGNATURE_fetch
#  define EVP_SIGNATURE_fetch OPENSSL_MANGLER(EVP_SIGNATURE_fetch)
# endif
#else
# ifndef _EVP_SIGNATURE_fetch
#  define _EVP_SIGNATURE_fetch OPENSSL_MANGLER_ASM(EVP_SIGNATURE_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SIGNATURE_free
#  define EVP_SIGNATURE_free OPENSSL_MANGLER(EVP_SIGNATURE_free)
# endif
#else
# ifndef _EVP_SIGNATURE_free
#  define _EVP_SIGNATURE_free OPENSSL_MANGLER_ASM(EVP_SIGNATURE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SIGNATURE_get0_description
#  define EVP_SIGNATURE_get0_description OPENSSL_MANGLER(EVP_SIGNATURE_get0_description)
# endif
#else
# ifndef _EVP_SIGNATURE_get0_description
#  define _EVP_SIGNATURE_get0_description OPENSSL_MANGLER_ASM(EVP_SIGNATURE_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SIGNATURE_get0_name
#  define EVP_SIGNATURE_get0_name OPENSSL_MANGLER(EVP_SIGNATURE_get0_name)
# endif
#else
# ifndef _EVP_SIGNATURE_get0_name
#  define _EVP_SIGNATURE_get0_name OPENSSL_MANGLER_ASM(EVP_SIGNATURE_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SIGNATURE_get0_provider
#  define EVP_SIGNATURE_get0_provider OPENSSL_MANGLER(EVP_SIGNATURE_get0_provider)
# endif
#else
# ifndef _EVP_SIGNATURE_get0_provider
#  define _EVP_SIGNATURE_get0_provider OPENSSL_MANGLER_ASM(EVP_SIGNATURE_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SIGNATURE_gettable_ctx_params
#  define EVP_SIGNATURE_gettable_ctx_params OPENSSL_MANGLER(EVP_SIGNATURE_gettable_ctx_params)
# endif
#else
# ifndef _EVP_SIGNATURE_gettable_ctx_params
#  define _EVP_SIGNATURE_gettable_ctx_params OPENSSL_MANGLER_ASM(EVP_SIGNATURE_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SIGNATURE_is_a
#  define EVP_SIGNATURE_is_a OPENSSL_MANGLER(EVP_SIGNATURE_is_a)
# endif
#else
# ifndef _EVP_SIGNATURE_is_a
#  define _EVP_SIGNATURE_is_a OPENSSL_MANGLER_ASM(EVP_SIGNATURE_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SIGNATURE_names_do_all
#  define EVP_SIGNATURE_names_do_all OPENSSL_MANGLER(EVP_SIGNATURE_names_do_all)
# endif
#else
# ifndef _EVP_SIGNATURE_names_do_all
#  define _EVP_SIGNATURE_names_do_all OPENSSL_MANGLER_ASM(EVP_SIGNATURE_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SIGNATURE_settable_ctx_params
#  define EVP_SIGNATURE_settable_ctx_params OPENSSL_MANGLER(EVP_SIGNATURE_settable_ctx_params)
# endif
#else
# ifndef _EVP_SIGNATURE_settable_ctx_params
#  define _EVP_SIGNATURE_settable_ctx_params OPENSSL_MANGLER_ASM(EVP_SIGNATURE_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SIGNATURE_up_ref
#  define EVP_SIGNATURE_up_ref OPENSSL_MANGLER(EVP_SIGNATURE_up_ref)
# endif
#else
# ifndef _EVP_SIGNATURE_up_ref
#  define _EVP_SIGNATURE_up_ref OPENSSL_MANGLER_ASM(EVP_SIGNATURE_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SealFinal
#  define EVP_SealFinal OPENSSL_MANGLER(EVP_SealFinal)
# endif
#else
# ifndef _EVP_SealFinal
#  define _EVP_SealFinal OPENSSL_MANGLER_ASM(EVP_SealFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SealInit
#  define EVP_SealInit OPENSSL_MANGLER(EVP_SealInit)
# endif
#else
# ifndef _EVP_SealInit
#  define _EVP_SealInit OPENSSL_MANGLER_ASM(EVP_SealInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SignFinal
#  define EVP_SignFinal OPENSSL_MANGLER(EVP_SignFinal)
# endif
#else
# ifndef _EVP_SignFinal
#  define _EVP_SignFinal OPENSSL_MANGLER_ASM(EVP_SignFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_SignFinal_ex
#  define EVP_SignFinal_ex OPENSSL_MANGLER(EVP_SignFinal_ex)
# endif
#else
# ifndef _EVP_SignFinal_ex
#  define _EVP_SignFinal_ex OPENSSL_MANGLER_ASM(EVP_SignFinal_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_VerifyFinal
#  define EVP_VerifyFinal OPENSSL_MANGLER(EVP_VerifyFinal)
# endif
#else
# ifndef _EVP_VerifyFinal
#  define _EVP_VerifyFinal OPENSSL_MANGLER_ASM(EVP_VerifyFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_VerifyFinal_ex
#  define EVP_VerifyFinal_ex OPENSSL_MANGLER(EVP_VerifyFinal_ex)
# endif
#else
# ifndef _EVP_VerifyFinal_ex
#  define _EVP_VerifyFinal_ex OPENSSL_MANGLER_ASM(EVP_VerifyFinal_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_add_alg_module
#  define EVP_add_alg_module OPENSSL_MANGLER(EVP_add_alg_module)
# endif
#else
# ifndef _EVP_add_alg_module
#  define _EVP_add_alg_module OPENSSL_MANGLER_ASM(EVP_add_alg_module)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_add_cipher
#  define EVP_add_cipher OPENSSL_MANGLER(EVP_add_cipher)
# endif
#else
# ifndef _EVP_add_cipher
#  define _EVP_add_cipher OPENSSL_MANGLER_ASM(EVP_add_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_add_digest
#  define EVP_add_digest OPENSSL_MANGLER(EVP_add_digest)
# endif
#else
# ifndef _EVP_add_digest
#  define _EVP_add_digest OPENSSL_MANGLER_ASM(EVP_add_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_cbc
#  define EVP_aes_128_cbc OPENSSL_MANGLER(EVP_aes_128_cbc)
# endif
#else
# ifndef _EVP_aes_128_cbc
#  define _EVP_aes_128_cbc OPENSSL_MANGLER_ASM(EVP_aes_128_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_cbc_hmac_sha1
#  define EVP_aes_128_cbc_hmac_sha1 OPENSSL_MANGLER(EVP_aes_128_cbc_hmac_sha1)
# endif
#else
# ifndef _EVP_aes_128_cbc_hmac_sha1
#  define _EVP_aes_128_cbc_hmac_sha1 OPENSSL_MANGLER_ASM(EVP_aes_128_cbc_hmac_sha1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_cbc_hmac_sha256
#  define EVP_aes_128_cbc_hmac_sha256 OPENSSL_MANGLER(EVP_aes_128_cbc_hmac_sha256)
# endif
#else
# ifndef _EVP_aes_128_cbc_hmac_sha256
#  define _EVP_aes_128_cbc_hmac_sha256 OPENSSL_MANGLER_ASM(EVP_aes_128_cbc_hmac_sha256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_ccm
#  define EVP_aes_128_ccm OPENSSL_MANGLER(EVP_aes_128_ccm)
# endif
#else
# ifndef _EVP_aes_128_ccm
#  define _EVP_aes_128_ccm OPENSSL_MANGLER_ASM(EVP_aes_128_ccm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_cfb
#  define EVP_aes_128_cfb OPENSSL_MANGLER(EVP_aes_128_cfb)
# endif
#else
# ifndef _EVP_aes_128_cfb
#  define _EVP_aes_128_cfb OPENSSL_MANGLER_ASM(EVP_aes_128_cfb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_cfb1
#  define EVP_aes_128_cfb1 OPENSSL_MANGLER(EVP_aes_128_cfb1)
# endif
#else
# ifndef _EVP_aes_128_cfb1
#  define _EVP_aes_128_cfb1 OPENSSL_MANGLER_ASM(EVP_aes_128_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_cfb128
#  define EVP_aes_128_cfb128 OPENSSL_MANGLER(EVP_aes_128_cfb128)
# endif
#else
# ifndef _EVP_aes_128_cfb128
#  define _EVP_aes_128_cfb128 OPENSSL_MANGLER_ASM(EVP_aes_128_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_cfb8
#  define EVP_aes_128_cfb8 OPENSSL_MANGLER(EVP_aes_128_cfb8)
# endif
#else
# ifndef _EVP_aes_128_cfb8
#  define _EVP_aes_128_cfb8 OPENSSL_MANGLER_ASM(EVP_aes_128_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_ctr
#  define EVP_aes_128_ctr OPENSSL_MANGLER(EVP_aes_128_ctr)
# endif
#else
# ifndef _EVP_aes_128_ctr
#  define _EVP_aes_128_ctr OPENSSL_MANGLER_ASM(EVP_aes_128_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_ecb
#  define EVP_aes_128_ecb OPENSSL_MANGLER(EVP_aes_128_ecb)
# endif
#else
# ifndef _EVP_aes_128_ecb
#  define _EVP_aes_128_ecb OPENSSL_MANGLER_ASM(EVP_aes_128_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_gcm
#  define EVP_aes_128_gcm OPENSSL_MANGLER(EVP_aes_128_gcm)
# endif
#else
# ifndef _EVP_aes_128_gcm
#  define _EVP_aes_128_gcm OPENSSL_MANGLER_ASM(EVP_aes_128_gcm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_ocb
#  define EVP_aes_128_ocb OPENSSL_MANGLER(EVP_aes_128_ocb)
# endif
#else
# ifndef _EVP_aes_128_ocb
#  define _EVP_aes_128_ocb OPENSSL_MANGLER_ASM(EVP_aes_128_ocb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_ofb
#  define EVP_aes_128_ofb OPENSSL_MANGLER(EVP_aes_128_ofb)
# endif
#else
# ifndef _EVP_aes_128_ofb
#  define _EVP_aes_128_ofb OPENSSL_MANGLER_ASM(EVP_aes_128_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_wrap
#  define EVP_aes_128_wrap OPENSSL_MANGLER(EVP_aes_128_wrap)
# endif
#else
# ifndef _EVP_aes_128_wrap
#  define _EVP_aes_128_wrap OPENSSL_MANGLER_ASM(EVP_aes_128_wrap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_wrap_pad
#  define EVP_aes_128_wrap_pad OPENSSL_MANGLER(EVP_aes_128_wrap_pad)
# endif
#else
# ifndef _EVP_aes_128_wrap_pad
#  define _EVP_aes_128_wrap_pad OPENSSL_MANGLER_ASM(EVP_aes_128_wrap_pad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_128_xts
#  define EVP_aes_128_xts OPENSSL_MANGLER(EVP_aes_128_xts)
# endif
#else
# ifndef _EVP_aes_128_xts
#  define _EVP_aes_128_xts OPENSSL_MANGLER_ASM(EVP_aes_128_xts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_cbc
#  define EVP_aes_192_cbc OPENSSL_MANGLER(EVP_aes_192_cbc)
# endif
#else
# ifndef _EVP_aes_192_cbc
#  define _EVP_aes_192_cbc OPENSSL_MANGLER_ASM(EVP_aes_192_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_ccm
#  define EVP_aes_192_ccm OPENSSL_MANGLER(EVP_aes_192_ccm)
# endif
#else
# ifndef _EVP_aes_192_ccm
#  define _EVP_aes_192_ccm OPENSSL_MANGLER_ASM(EVP_aes_192_ccm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_cfb
#  define EVP_aes_192_cfb OPENSSL_MANGLER(EVP_aes_192_cfb)
# endif
#else
# ifndef _EVP_aes_192_cfb
#  define _EVP_aes_192_cfb OPENSSL_MANGLER_ASM(EVP_aes_192_cfb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_cfb1
#  define EVP_aes_192_cfb1 OPENSSL_MANGLER(EVP_aes_192_cfb1)
# endif
#else
# ifndef _EVP_aes_192_cfb1
#  define _EVP_aes_192_cfb1 OPENSSL_MANGLER_ASM(EVP_aes_192_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_cfb128
#  define EVP_aes_192_cfb128 OPENSSL_MANGLER(EVP_aes_192_cfb128)
# endif
#else
# ifndef _EVP_aes_192_cfb128
#  define _EVP_aes_192_cfb128 OPENSSL_MANGLER_ASM(EVP_aes_192_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_cfb8
#  define EVP_aes_192_cfb8 OPENSSL_MANGLER(EVP_aes_192_cfb8)
# endif
#else
# ifndef _EVP_aes_192_cfb8
#  define _EVP_aes_192_cfb8 OPENSSL_MANGLER_ASM(EVP_aes_192_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_ctr
#  define EVP_aes_192_ctr OPENSSL_MANGLER(EVP_aes_192_ctr)
# endif
#else
# ifndef _EVP_aes_192_ctr
#  define _EVP_aes_192_ctr OPENSSL_MANGLER_ASM(EVP_aes_192_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_ecb
#  define EVP_aes_192_ecb OPENSSL_MANGLER(EVP_aes_192_ecb)
# endif
#else
# ifndef _EVP_aes_192_ecb
#  define _EVP_aes_192_ecb OPENSSL_MANGLER_ASM(EVP_aes_192_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_gcm
#  define EVP_aes_192_gcm OPENSSL_MANGLER(EVP_aes_192_gcm)
# endif
#else
# ifndef _EVP_aes_192_gcm
#  define _EVP_aes_192_gcm OPENSSL_MANGLER_ASM(EVP_aes_192_gcm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_ocb
#  define EVP_aes_192_ocb OPENSSL_MANGLER(EVP_aes_192_ocb)
# endif
#else
# ifndef _EVP_aes_192_ocb
#  define _EVP_aes_192_ocb OPENSSL_MANGLER_ASM(EVP_aes_192_ocb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_ofb
#  define EVP_aes_192_ofb OPENSSL_MANGLER(EVP_aes_192_ofb)
# endif
#else
# ifndef _EVP_aes_192_ofb
#  define _EVP_aes_192_ofb OPENSSL_MANGLER_ASM(EVP_aes_192_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_wrap
#  define EVP_aes_192_wrap OPENSSL_MANGLER(EVP_aes_192_wrap)
# endif
#else
# ifndef _EVP_aes_192_wrap
#  define _EVP_aes_192_wrap OPENSSL_MANGLER_ASM(EVP_aes_192_wrap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_192_wrap_pad
#  define EVP_aes_192_wrap_pad OPENSSL_MANGLER(EVP_aes_192_wrap_pad)
# endif
#else
# ifndef _EVP_aes_192_wrap_pad
#  define _EVP_aes_192_wrap_pad OPENSSL_MANGLER_ASM(EVP_aes_192_wrap_pad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_cbc
#  define EVP_aes_256_cbc OPENSSL_MANGLER(EVP_aes_256_cbc)
# endif
#else
# ifndef _EVP_aes_256_cbc
#  define _EVP_aes_256_cbc OPENSSL_MANGLER_ASM(EVP_aes_256_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_cbc_hmac_sha1
#  define EVP_aes_256_cbc_hmac_sha1 OPENSSL_MANGLER(EVP_aes_256_cbc_hmac_sha1)
# endif
#else
# ifndef _EVP_aes_256_cbc_hmac_sha1
#  define _EVP_aes_256_cbc_hmac_sha1 OPENSSL_MANGLER_ASM(EVP_aes_256_cbc_hmac_sha1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_cbc_hmac_sha256
#  define EVP_aes_256_cbc_hmac_sha256 OPENSSL_MANGLER(EVP_aes_256_cbc_hmac_sha256)
# endif
#else
# ifndef _EVP_aes_256_cbc_hmac_sha256
#  define _EVP_aes_256_cbc_hmac_sha256 OPENSSL_MANGLER_ASM(EVP_aes_256_cbc_hmac_sha256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_ccm
#  define EVP_aes_256_ccm OPENSSL_MANGLER(EVP_aes_256_ccm)
# endif
#else
# ifndef _EVP_aes_256_ccm
#  define _EVP_aes_256_ccm OPENSSL_MANGLER_ASM(EVP_aes_256_ccm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_cfb
#  define EVP_aes_256_cfb OPENSSL_MANGLER(EVP_aes_256_cfb)
# endif
#else
# ifndef _EVP_aes_256_cfb
#  define _EVP_aes_256_cfb OPENSSL_MANGLER_ASM(EVP_aes_256_cfb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_cfb1
#  define EVP_aes_256_cfb1 OPENSSL_MANGLER(EVP_aes_256_cfb1)
# endif
#else
# ifndef _EVP_aes_256_cfb1
#  define _EVP_aes_256_cfb1 OPENSSL_MANGLER_ASM(EVP_aes_256_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_cfb128
#  define EVP_aes_256_cfb128 OPENSSL_MANGLER(EVP_aes_256_cfb128)
# endif
#else
# ifndef _EVP_aes_256_cfb128
#  define _EVP_aes_256_cfb128 OPENSSL_MANGLER_ASM(EVP_aes_256_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_cfb8
#  define EVP_aes_256_cfb8 OPENSSL_MANGLER(EVP_aes_256_cfb8)
# endif
#else
# ifndef _EVP_aes_256_cfb8
#  define _EVP_aes_256_cfb8 OPENSSL_MANGLER_ASM(EVP_aes_256_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_ctr
#  define EVP_aes_256_ctr OPENSSL_MANGLER(EVP_aes_256_ctr)
# endif
#else
# ifndef _EVP_aes_256_ctr
#  define _EVP_aes_256_ctr OPENSSL_MANGLER_ASM(EVP_aes_256_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_ecb
#  define EVP_aes_256_ecb OPENSSL_MANGLER(EVP_aes_256_ecb)
# endif
#else
# ifndef _EVP_aes_256_ecb
#  define _EVP_aes_256_ecb OPENSSL_MANGLER_ASM(EVP_aes_256_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_gcm
#  define EVP_aes_256_gcm OPENSSL_MANGLER(EVP_aes_256_gcm)
# endif
#else
# ifndef _EVP_aes_256_gcm
#  define _EVP_aes_256_gcm OPENSSL_MANGLER_ASM(EVP_aes_256_gcm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_ocb
#  define EVP_aes_256_ocb OPENSSL_MANGLER(EVP_aes_256_ocb)
# endif
#else
# ifndef _EVP_aes_256_ocb
#  define _EVP_aes_256_ocb OPENSSL_MANGLER_ASM(EVP_aes_256_ocb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_ofb
#  define EVP_aes_256_ofb OPENSSL_MANGLER(EVP_aes_256_ofb)
# endif
#else
# ifndef _EVP_aes_256_ofb
#  define _EVP_aes_256_ofb OPENSSL_MANGLER_ASM(EVP_aes_256_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_wrap
#  define EVP_aes_256_wrap OPENSSL_MANGLER(EVP_aes_256_wrap)
# endif
#else
# ifndef _EVP_aes_256_wrap
#  define _EVP_aes_256_wrap OPENSSL_MANGLER_ASM(EVP_aes_256_wrap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_wrap_pad
#  define EVP_aes_256_wrap_pad OPENSSL_MANGLER(EVP_aes_256_wrap_pad)
# endif
#else
# ifndef _EVP_aes_256_wrap_pad
#  define _EVP_aes_256_wrap_pad OPENSSL_MANGLER_ASM(EVP_aes_256_wrap_pad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aes_256_xts
#  define EVP_aes_256_xts OPENSSL_MANGLER(EVP_aes_256_xts)
# endif
#else
# ifndef _EVP_aes_256_xts
#  define _EVP_aes_256_xts OPENSSL_MANGLER_ASM(EVP_aes_256_xts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_128_cbc
#  define EVP_aria_128_cbc OPENSSL_MANGLER(EVP_aria_128_cbc)
# endif
#else
# ifndef _EVP_aria_128_cbc
#  define _EVP_aria_128_cbc OPENSSL_MANGLER_ASM(EVP_aria_128_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_128_ccm
#  define EVP_aria_128_ccm OPENSSL_MANGLER(EVP_aria_128_ccm)
# endif
#else
# ifndef _EVP_aria_128_ccm
#  define _EVP_aria_128_ccm OPENSSL_MANGLER_ASM(EVP_aria_128_ccm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_128_cfb1
#  define EVP_aria_128_cfb1 OPENSSL_MANGLER(EVP_aria_128_cfb1)
# endif
#else
# ifndef _EVP_aria_128_cfb1
#  define _EVP_aria_128_cfb1 OPENSSL_MANGLER_ASM(EVP_aria_128_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_128_cfb128
#  define EVP_aria_128_cfb128 OPENSSL_MANGLER(EVP_aria_128_cfb128)
# endif
#else
# ifndef _EVP_aria_128_cfb128
#  define _EVP_aria_128_cfb128 OPENSSL_MANGLER_ASM(EVP_aria_128_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_128_cfb8
#  define EVP_aria_128_cfb8 OPENSSL_MANGLER(EVP_aria_128_cfb8)
# endif
#else
# ifndef _EVP_aria_128_cfb8
#  define _EVP_aria_128_cfb8 OPENSSL_MANGLER_ASM(EVP_aria_128_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_128_ctr
#  define EVP_aria_128_ctr OPENSSL_MANGLER(EVP_aria_128_ctr)
# endif
#else
# ifndef _EVP_aria_128_ctr
#  define _EVP_aria_128_ctr OPENSSL_MANGLER_ASM(EVP_aria_128_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_128_ecb
#  define EVP_aria_128_ecb OPENSSL_MANGLER(EVP_aria_128_ecb)
# endif
#else
# ifndef _EVP_aria_128_ecb
#  define _EVP_aria_128_ecb OPENSSL_MANGLER_ASM(EVP_aria_128_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_128_gcm
#  define EVP_aria_128_gcm OPENSSL_MANGLER(EVP_aria_128_gcm)
# endif
#else
# ifndef _EVP_aria_128_gcm
#  define _EVP_aria_128_gcm OPENSSL_MANGLER_ASM(EVP_aria_128_gcm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_128_ofb
#  define EVP_aria_128_ofb OPENSSL_MANGLER(EVP_aria_128_ofb)
# endif
#else
# ifndef _EVP_aria_128_ofb
#  define _EVP_aria_128_ofb OPENSSL_MANGLER_ASM(EVP_aria_128_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_192_cbc
#  define EVP_aria_192_cbc OPENSSL_MANGLER(EVP_aria_192_cbc)
# endif
#else
# ifndef _EVP_aria_192_cbc
#  define _EVP_aria_192_cbc OPENSSL_MANGLER_ASM(EVP_aria_192_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_192_ccm
#  define EVP_aria_192_ccm OPENSSL_MANGLER(EVP_aria_192_ccm)
# endif
#else
# ifndef _EVP_aria_192_ccm
#  define _EVP_aria_192_ccm OPENSSL_MANGLER_ASM(EVP_aria_192_ccm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_192_cfb1
#  define EVP_aria_192_cfb1 OPENSSL_MANGLER(EVP_aria_192_cfb1)
# endif
#else
# ifndef _EVP_aria_192_cfb1
#  define _EVP_aria_192_cfb1 OPENSSL_MANGLER_ASM(EVP_aria_192_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_192_cfb128
#  define EVP_aria_192_cfb128 OPENSSL_MANGLER(EVP_aria_192_cfb128)
# endif
#else
# ifndef _EVP_aria_192_cfb128
#  define _EVP_aria_192_cfb128 OPENSSL_MANGLER_ASM(EVP_aria_192_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_192_cfb8
#  define EVP_aria_192_cfb8 OPENSSL_MANGLER(EVP_aria_192_cfb8)
# endif
#else
# ifndef _EVP_aria_192_cfb8
#  define _EVP_aria_192_cfb8 OPENSSL_MANGLER_ASM(EVP_aria_192_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_192_ctr
#  define EVP_aria_192_ctr OPENSSL_MANGLER(EVP_aria_192_ctr)
# endif
#else
# ifndef _EVP_aria_192_ctr
#  define _EVP_aria_192_ctr OPENSSL_MANGLER_ASM(EVP_aria_192_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_192_ecb
#  define EVP_aria_192_ecb OPENSSL_MANGLER(EVP_aria_192_ecb)
# endif
#else
# ifndef _EVP_aria_192_ecb
#  define _EVP_aria_192_ecb OPENSSL_MANGLER_ASM(EVP_aria_192_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_192_gcm
#  define EVP_aria_192_gcm OPENSSL_MANGLER(EVP_aria_192_gcm)
# endif
#else
# ifndef _EVP_aria_192_gcm
#  define _EVP_aria_192_gcm OPENSSL_MANGLER_ASM(EVP_aria_192_gcm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_192_ofb
#  define EVP_aria_192_ofb OPENSSL_MANGLER(EVP_aria_192_ofb)
# endif
#else
# ifndef _EVP_aria_192_ofb
#  define _EVP_aria_192_ofb OPENSSL_MANGLER_ASM(EVP_aria_192_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_256_cbc
#  define EVP_aria_256_cbc OPENSSL_MANGLER(EVP_aria_256_cbc)
# endif
#else
# ifndef _EVP_aria_256_cbc
#  define _EVP_aria_256_cbc OPENSSL_MANGLER_ASM(EVP_aria_256_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_256_ccm
#  define EVP_aria_256_ccm OPENSSL_MANGLER(EVP_aria_256_ccm)
# endif
#else
# ifndef _EVP_aria_256_ccm
#  define _EVP_aria_256_ccm OPENSSL_MANGLER_ASM(EVP_aria_256_ccm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_256_cfb1
#  define EVP_aria_256_cfb1 OPENSSL_MANGLER(EVP_aria_256_cfb1)
# endif
#else
# ifndef _EVP_aria_256_cfb1
#  define _EVP_aria_256_cfb1 OPENSSL_MANGLER_ASM(EVP_aria_256_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_256_cfb128
#  define EVP_aria_256_cfb128 OPENSSL_MANGLER(EVP_aria_256_cfb128)
# endif
#else
# ifndef _EVP_aria_256_cfb128
#  define _EVP_aria_256_cfb128 OPENSSL_MANGLER_ASM(EVP_aria_256_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_256_cfb8
#  define EVP_aria_256_cfb8 OPENSSL_MANGLER(EVP_aria_256_cfb8)
# endif
#else
# ifndef _EVP_aria_256_cfb8
#  define _EVP_aria_256_cfb8 OPENSSL_MANGLER_ASM(EVP_aria_256_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_256_ctr
#  define EVP_aria_256_ctr OPENSSL_MANGLER(EVP_aria_256_ctr)
# endif
#else
# ifndef _EVP_aria_256_ctr
#  define _EVP_aria_256_ctr OPENSSL_MANGLER_ASM(EVP_aria_256_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_256_ecb
#  define EVP_aria_256_ecb OPENSSL_MANGLER(EVP_aria_256_ecb)
# endif
#else
# ifndef _EVP_aria_256_ecb
#  define _EVP_aria_256_ecb OPENSSL_MANGLER_ASM(EVP_aria_256_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_256_gcm
#  define EVP_aria_256_gcm OPENSSL_MANGLER(EVP_aria_256_gcm)
# endif
#else
# ifndef _EVP_aria_256_gcm
#  define _EVP_aria_256_gcm OPENSSL_MANGLER_ASM(EVP_aria_256_gcm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_aria_256_ofb
#  define EVP_aria_256_ofb OPENSSL_MANGLER(EVP_aria_256_ofb)
# endif
#else
# ifndef _EVP_aria_256_ofb
#  define _EVP_aria_256_ofb OPENSSL_MANGLER_ASM(EVP_aria_256_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_bf_cbc
#  define EVP_bf_cbc OPENSSL_MANGLER(EVP_bf_cbc)
# endif
#else
# ifndef _EVP_bf_cbc
#  define _EVP_bf_cbc OPENSSL_MANGLER_ASM(EVP_bf_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_bf_cfb
#  define EVP_bf_cfb OPENSSL_MANGLER(EVP_bf_cfb)
# endif
#else
# ifndef _EVP_bf_cfb
#  define _EVP_bf_cfb OPENSSL_MANGLER_ASM(EVP_bf_cfb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_bf_cfb64
#  define EVP_bf_cfb64 OPENSSL_MANGLER(EVP_bf_cfb64)
# endif
#else
# ifndef _EVP_bf_cfb64
#  define _EVP_bf_cfb64 OPENSSL_MANGLER_ASM(EVP_bf_cfb64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_bf_ecb
#  define EVP_bf_ecb OPENSSL_MANGLER(EVP_bf_ecb)
# endif
#else
# ifndef _EVP_bf_ecb
#  define _EVP_bf_ecb OPENSSL_MANGLER_ASM(EVP_bf_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_bf_ofb
#  define EVP_bf_ofb OPENSSL_MANGLER(EVP_bf_ofb)
# endif
#else
# ifndef _EVP_bf_ofb
#  define _EVP_bf_ofb OPENSSL_MANGLER_ASM(EVP_bf_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_blake2b512
#  define EVP_blake2b512 OPENSSL_MANGLER(EVP_blake2b512)
# endif
#else
# ifndef _EVP_blake2b512
#  define _EVP_blake2b512 OPENSSL_MANGLER_ASM(EVP_blake2b512)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_blake2s256
#  define EVP_blake2s256 OPENSSL_MANGLER(EVP_blake2s256)
# endif
#else
# ifndef _EVP_blake2s256
#  define _EVP_blake2s256 OPENSSL_MANGLER_ASM(EVP_blake2s256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_128_cbc
#  define EVP_camellia_128_cbc OPENSSL_MANGLER(EVP_camellia_128_cbc)
# endif
#else
# ifndef _EVP_camellia_128_cbc
#  define _EVP_camellia_128_cbc OPENSSL_MANGLER_ASM(EVP_camellia_128_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_128_cfb1
#  define EVP_camellia_128_cfb1 OPENSSL_MANGLER(EVP_camellia_128_cfb1)
# endif
#else
# ifndef _EVP_camellia_128_cfb1
#  define _EVP_camellia_128_cfb1 OPENSSL_MANGLER_ASM(EVP_camellia_128_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_128_cfb128
#  define EVP_camellia_128_cfb128 OPENSSL_MANGLER(EVP_camellia_128_cfb128)
# endif
#else
# ifndef _EVP_camellia_128_cfb128
#  define _EVP_camellia_128_cfb128 OPENSSL_MANGLER_ASM(EVP_camellia_128_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_128_cfb8
#  define EVP_camellia_128_cfb8 OPENSSL_MANGLER(EVP_camellia_128_cfb8)
# endif
#else
# ifndef _EVP_camellia_128_cfb8
#  define _EVP_camellia_128_cfb8 OPENSSL_MANGLER_ASM(EVP_camellia_128_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_128_ctr
#  define EVP_camellia_128_ctr OPENSSL_MANGLER(EVP_camellia_128_ctr)
# endif
#else
# ifndef _EVP_camellia_128_ctr
#  define _EVP_camellia_128_ctr OPENSSL_MANGLER_ASM(EVP_camellia_128_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_128_ecb
#  define EVP_camellia_128_ecb OPENSSL_MANGLER(EVP_camellia_128_ecb)
# endif
#else
# ifndef _EVP_camellia_128_ecb
#  define _EVP_camellia_128_ecb OPENSSL_MANGLER_ASM(EVP_camellia_128_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_128_ofb
#  define EVP_camellia_128_ofb OPENSSL_MANGLER(EVP_camellia_128_ofb)
# endif
#else
# ifndef _EVP_camellia_128_ofb
#  define _EVP_camellia_128_ofb OPENSSL_MANGLER_ASM(EVP_camellia_128_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_192_cbc
#  define EVP_camellia_192_cbc OPENSSL_MANGLER(EVP_camellia_192_cbc)
# endif
#else
# ifndef _EVP_camellia_192_cbc
#  define _EVP_camellia_192_cbc OPENSSL_MANGLER_ASM(EVP_camellia_192_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_192_cfb1
#  define EVP_camellia_192_cfb1 OPENSSL_MANGLER(EVP_camellia_192_cfb1)
# endif
#else
# ifndef _EVP_camellia_192_cfb1
#  define _EVP_camellia_192_cfb1 OPENSSL_MANGLER_ASM(EVP_camellia_192_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_192_cfb128
#  define EVP_camellia_192_cfb128 OPENSSL_MANGLER(EVP_camellia_192_cfb128)
# endif
#else
# ifndef _EVP_camellia_192_cfb128
#  define _EVP_camellia_192_cfb128 OPENSSL_MANGLER_ASM(EVP_camellia_192_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_192_cfb8
#  define EVP_camellia_192_cfb8 OPENSSL_MANGLER(EVP_camellia_192_cfb8)
# endif
#else
# ifndef _EVP_camellia_192_cfb8
#  define _EVP_camellia_192_cfb8 OPENSSL_MANGLER_ASM(EVP_camellia_192_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_192_ctr
#  define EVP_camellia_192_ctr OPENSSL_MANGLER(EVP_camellia_192_ctr)
# endif
#else
# ifndef _EVP_camellia_192_ctr
#  define _EVP_camellia_192_ctr OPENSSL_MANGLER_ASM(EVP_camellia_192_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_192_ecb
#  define EVP_camellia_192_ecb OPENSSL_MANGLER(EVP_camellia_192_ecb)
# endif
#else
# ifndef _EVP_camellia_192_ecb
#  define _EVP_camellia_192_ecb OPENSSL_MANGLER_ASM(EVP_camellia_192_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_192_ofb
#  define EVP_camellia_192_ofb OPENSSL_MANGLER(EVP_camellia_192_ofb)
# endif
#else
# ifndef _EVP_camellia_192_ofb
#  define _EVP_camellia_192_ofb OPENSSL_MANGLER_ASM(EVP_camellia_192_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_256_cbc
#  define EVP_camellia_256_cbc OPENSSL_MANGLER(EVP_camellia_256_cbc)
# endif
#else
# ifndef _EVP_camellia_256_cbc
#  define _EVP_camellia_256_cbc OPENSSL_MANGLER_ASM(EVP_camellia_256_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_256_cfb1
#  define EVP_camellia_256_cfb1 OPENSSL_MANGLER(EVP_camellia_256_cfb1)
# endif
#else
# ifndef _EVP_camellia_256_cfb1
#  define _EVP_camellia_256_cfb1 OPENSSL_MANGLER_ASM(EVP_camellia_256_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_256_cfb128
#  define EVP_camellia_256_cfb128 OPENSSL_MANGLER(EVP_camellia_256_cfb128)
# endif
#else
# ifndef _EVP_camellia_256_cfb128
#  define _EVP_camellia_256_cfb128 OPENSSL_MANGLER_ASM(EVP_camellia_256_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_256_cfb8
#  define EVP_camellia_256_cfb8 OPENSSL_MANGLER(EVP_camellia_256_cfb8)
# endif
#else
# ifndef _EVP_camellia_256_cfb8
#  define _EVP_camellia_256_cfb8 OPENSSL_MANGLER_ASM(EVP_camellia_256_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_256_ctr
#  define EVP_camellia_256_ctr OPENSSL_MANGLER(EVP_camellia_256_ctr)
# endif
#else
# ifndef _EVP_camellia_256_ctr
#  define _EVP_camellia_256_ctr OPENSSL_MANGLER_ASM(EVP_camellia_256_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_256_ecb
#  define EVP_camellia_256_ecb OPENSSL_MANGLER(EVP_camellia_256_ecb)
# endif
#else
# ifndef _EVP_camellia_256_ecb
#  define _EVP_camellia_256_ecb OPENSSL_MANGLER_ASM(EVP_camellia_256_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_camellia_256_ofb
#  define EVP_camellia_256_ofb OPENSSL_MANGLER(EVP_camellia_256_ofb)
# endif
#else
# ifndef _EVP_camellia_256_ofb
#  define _EVP_camellia_256_ofb OPENSSL_MANGLER_ASM(EVP_camellia_256_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_cast5_cbc
#  define EVP_cast5_cbc OPENSSL_MANGLER(EVP_cast5_cbc)
# endif
#else
# ifndef _EVP_cast5_cbc
#  define _EVP_cast5_cbc OPENSSL_MANGLER_ASM(EVP_cast5_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_cast5_cfb
#  define EVP_cast5_cfb OPENSSL_MANGLER(EVP_cast5_cfb)
# endif
#else
# ifndef _EVP_cast5_cfb
#  define _EVP_cast5_cfb OPENSSL_MANGLER_ASM(EVP_cast5_cfb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_cast5_cfb64
#  define EVP_cast5_cfb64 OPENSSL_MANGLER(EVP_cast5_cfb64)
# endif
#else
# ifndef _EVP_cast5_cfb64
#  define _EVP_cast5_cfb64 OPENSSL_MANGLER_ASM(EVP_cast5_cfb64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_cast5_ecb
#  define EVP_cast5_ecb OPENSSL_MANGLER(EVP_cast5_ecb)
# endif
#else
# ifndef _EVP_cast5_ecb
#  define _EVP_cast5_ecb OPENSSL_MANGLER_ASM(EVP_cast5_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_cast5_ofb
#  define EVP_cast5_ofb OPENSSL_MANGLER(EVP_cast5_ofb)
# endif
#else
# ifndef _EVP_cast5_ofb
#  define _EVP_cast5_ofb OPENSSL_MANGLER_ASM(EVP_cast5_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_chacha20
#  define EVP_chacha20 OPENSSL_MANGLER(EVP_chacha20)
# endif
#else
# ifndef _EVP_chacha20
#  define _EVP_chacha20 OPENSSL_MANGLER_ASM(EVP_chacha20)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_chacha20_poly1305
#  define EVP_chacha20_poly1305 OPENSSL_MANGLER(EVP_chacha20_poly1305)
# endif
#else
# ifndef _EVP_chacha20_poly1305
#  define _EVP_chacha20_poly1305 OPENSSL_MANGLER_ASM(EVP_chacha20_poly1305)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_default_properties_enable_fips
#  define EVP_default_properties_enable_fips OPENSSL_MANGLER(EVP_default_properties_enable_fips)
# endif
#else
# ifndef _EVP_default_properties_enable_fips
#  define _EVP_default_properties_enable_fips OPENSSL_MANGLER_ASM(EVP_default_properties_enable_fips)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_default_properties_is_fips_enabled
#  define EVP_default_properties_is_fips_enabled OPENSSL_MANGLER(EVP_default_properties_is_fips_enabled)
# endif
#else
# ifndef _EVP_default_properties_is_fips_enabled
#  define _EVP_default_properties_is_fips_enabled OPENSSL_MANGLER_ASM(EVP_default_properties_is_fips_enabled)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_cbc
#  define EVP_des_cbc OPENSSL_MANGLER(EVP_des_cbc)
# endif
#else
# ifndef _EVP_des_cbc
#  define _EVP_des_cbc OPENSSL_MANGLER_ASM(EVP_des_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_cfb
#  define EVP_des_cfb OPENSSL_MANGLER(EVP_des_cfb)
# endif
#else
# ifndef _EVP_des_cfb
#  define _EVP_des_cfb OPENSSL_MANGLER_ASM(EVP_des_cfb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_cfb1
#  define EVP_des_cfb1 OPENSSL_MANGLER(EVP_des_cfb1)
# endif
#else
# ifndef _EVP_des_cfb1
#  define _EVP_des_cfb1 OPENSSL_MANGLER_ASM(EVP_des_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_cfb64
#  define EVP_des_cfb64 OPENSSL_MANGLER(EVP_des_cfb64)
# endif
#else
# ifndef _EVP_des_cfb64
#  define _EVP_des_cfb64 OPENSSL_MANGLER_ASM(EVP_des_cfb64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_cfb8
#  define EVP_des_cfb8 OPENSSL_MANGLER(EVP_des_cfb8)
# endif
#else
# ifndef _EVP_des_cfb8
#  define _EVP_des_cfb8 OPENSSL_MANGLER_ASM(EVP_des_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ecb
#  define EVP_des_ecb OPENSSL_MANGLER(EVP_des_ecb)
# endif
#else
# ifndef _EVP_des_ecb
#  define _EVP_des_ecb OPENSSL_MANGLER_ASM(EVP_des_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede
#  define EVP_des_ede OPENSSL_MANGLER(EVP_des_ede)
# endif
#else
# ifndef _EVP_des_ede
#  define _EVP_des_ede OPENSSL_MANGLER_ASM(EVP_des_ede)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede3
#  define EVP_des_ede3 OPENSSL_MANGLER(EVP_des_ede3)
# endif
#else
# ifndef _EVP_des_ede3
#  define _EVP_des_ede3 OPENSSL_MANGLER_ASM(EVP_des_ede3)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede3_cbc
#  define EVP_des_ede3_cbc OPENSSL_MANGLER(EVP_des_ede3_cbc)
# endif
#else
# ifndef _EVP_des_ede3_cbc
#  define _EVP_des_ede3_cbc OPENSSL_MANGLER_ASM(EVP_des_ede3_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede3_cfb
#  define EVP_des_ede3_cfb OPENSSL_MANGLER(EVP_des_ede3_cfb)
# endif
#else
# ifndef _EVP_des_ede3_cfb
#  define _EVP_des_ede3_cfb OPENSSL_MANGLER_ASM(EVP_des_ede3_cfb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede3_cfb1
#  define EVP_des_ede3_cfb1 OPENSSL_MANGLER(EVP_des_ede3_cfb1)
# endif
#else
# ifndef _EVP_des_ede3_cfb1
#  define _EVP_des_ede3_cfb1 OPENSSL_MANGLER_ASM(EVP_des_ede3_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede3_cfb64
#  define EVP_des_ede3_cfb64 OPENSSL_MANGLER(EVP_des_ede3_cfb64)
# endif
#else
# ifndef _EVP_des_ede3_cfb64
#  define _EVP_des_ede3_cfb64 OPENSSL_MANGLER_ASM(EVP_des_ede3_cfb64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede3_cfb8
#  define EVP_des_ede3_cfb8 OPENSSL_MANGLER(EVP_des_ede3_cfb8)
# endif
#else
# ifndef _EVP_des_ede3_cfb8
#  define _EVP_des_ede3_cfb8 OPENSSL_MANGLER_ASM(EVP_des_ede3_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede3_ecb
#  define EVP_des_ede3_ecb OPENSSL_MANGLER(EVP_des_ede3_ecb)
# endif
#else
# ifndef _EVP_des_ede3_ecb
#  define _EVP_des_ede3_ecb OPENSSL_MANGLER_ASM(EVP_des_ede3_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede3_ofb
#  define EVP_des_ede3_ofb OPENSSL_MANGLER(EVP_des_ede3_ofb)
# endif
#else
# ifndef _EVP_des_ede3_ofb
#  define _EVP_des_ede3_ofb OPENSSL_MANGLER_ASM(EVP_des_ede3_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede3_wrap
#  define EVP_des_ede3_wrap OPENSSL_MANGLER(EVP_des_ede3_wrap)
# endif
#else
# ifndef _EVP_des_ede3_wrap
#  define _EVP_des_ede3_wrap OPENSSL_MANGLER_ASM(EVP_des_ede3_wrap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede_cbc
#  define EVP_des_ede_cbc OPENSSL_MANGLER(EVP_des_ede_cbc)
# endif
#else
# ifndef _EVP_des_ede_cbc
#  define _EVP_des_ede_cbc OPENSSL_MANGLER_ASM(EVP_des_ede_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede_cfb
#  define EVP_des_ede_cfb OPENSSL_MANGLER(EVP_des_ede_cfb)
# endif
#else
# ifndef _EVP_des_ede_cfb
#  define _EVP_des_ede_cfb OPENSSL_MANGLER_ASM(EVP_des_ede_cfb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede_cfb64
#  define EVP_des_ede_cfb64 OPENSSL_MANGLER(EVP_des_ede_cfb64)
# endif
#else
# ifndef _EVP_des_ede_cfb64
#  define _EVP_des_ede_cfb64 OPENSSL_MANGLER_ASM(EVP_des_ede_cfb64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede_ecb
#  define EVP_des_ede_ecb OPENSSL_MANGLER(EVP_des_ede_ecb)
# endif
#else
# ifndef _EVP_des_ede_ecb
#  define _EVP_des_ede_ecb OPENSSL_MANGLER_ASM(EVP_des_ede_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ede_ofb
#  define EVP_des_ede_ofb OPENSSL_MANGLER(EVP_des_ede_ofb)
# endif
#else
# ifndef _EVP_des_ede_ofb
#  define _EVP_des_ede_ofb OPENSSL_MANGLER_ASM(EVP_des_ede_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_des_ofb
#  define EVP_des_ofb OPENSSL_MANGLER(EVP_des_ofb)
# endif
#else
# ifndef _EVP_des_ofb
#  define _EVP_des_ofb OPENSSL_MANGLER_ASM(EVP_des_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_desx_cbc
#  define EVP_desx_cbc OPENSSL_MANGLER(EVP_desx_cbc)
# endif
#else
# ifndef _EVP_desx_cbc
#  define _EVP_desx_cbc OPENSSL_MANGLER_ASM(EVP_desx_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_enc_null
#  define EVP_enc_null OPENSSL_MANGLER(EVP_enc_null)
# endif
#else
# ifndef _EVP_enc_null
#  define _EVP_enc_null OPENSSL_MANGLER_ASM(EVP_enc_null)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_get_cipherbyname
#  define EVP_get_cipherbyname OPENSSL_MANGLER(EVP_get_cipherbyname)
# endif
#else
# ifndef _EVP_get_cipherbyname
#  define _EVP_get_cipherbyname OPENSSL_MANGLER_ASM(EVP_get_cipherbyname)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_get_digestbyname
#  define EVP_get_digestbyname OPENSSL_MANGLER(EVP_get_digestbyname)
# endif
#else
# ifndef _EVP_get_digestbyname
#  define _EVP_get_digestbyname OPENSSL_MANGLER_ASM(EVP_get_digestbyname)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_get_pw_prompt
#  define EVP_get_pw_prompt OPENSSL_MANGLER(EVP_get_pw_prompt)
# endif
#else
# ifndef _EVP_get_pw_prompt
#  define _EVP_get_pw_prompt OPENSSL_MANGLER_ASM(EVP_get_pw_prompt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_md2
#  define EVP_md2 OPENSSL_MANGLER(EVP_md2)
# endif
#else
# ifndef _EVP_md2
#  define _EVP_md2 OPENSSL_MANGLER_ASM(EVP_md2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_md5
#  define EVP_md5 OPENSSL_MANGLER(EVP_md5)
# endif
#else
# ifndef _EVP_md5
#  define _EVP_md5 OPENSSL_MANGLER_ASM(EVP_md5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_md5_sha1
#  define EVP_md5_sha1 OPENSSL_MANGLER(EVP_md5_sha1)
# endif
#else
# ifndef _EVP_md5_sha1
#  define _EVP_md5_sha1 OPENSSL_MANGLER_ASM(EVP_md5_sha1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_md_null
#  define EVP_md_null OPENSSL_MANGLER(EVP_md_null)
# endif
#else
# ifndef _EVP_md_null
#  define _EVP_md_null OPENSSL_MANGLER_ASM(EVP_md_null)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_mdc2
#  define EVP_mdc2 OPENSSL_MANGLER(EVP_mdc2)
# endif
#else
# ifndef _EVP_mdc2
#  define _EVP_mdc2 OPENSSL_MANGLER_ASM(EVP_mdc2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_rc4
#  define EVP_rc4 OPENSSL_MANGLER(EVP_rc4)
# endif
#else
# ifndef _EVP_rc4
#  define _EVP_rc4 OPENSSL_MANGLER_ASM(EVP_rc4)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_rc4_40
#  define EVP_rc4_40 OPENSSL_MANGLER(EVP_rc4_40)
# endif
#else
# ifndef _EVP_rc4_40
#  define _EVP_rc4_40 OPENSSL_MANGLER_ASM(EVP_rc4_40)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_rc4_hmac_md5
#  define EVP_rc4_hmac_md5 OPENSSL_MANGLER(EVP_rc4_hmac_md5)
# endif
#else
# ifndef _EVP_rc4_hmac_md5
#  define _EVP_rc4_hmac_md5 OPENSSL_MANGLER_ASM(EVP_rc4_hmac_md5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_read_pw_string
#  define EVP_read_pw_string OPENSSL_MANGLER(EVP_read_pw_string)
# endif
#else
# ifndef _EVP_read_pw_string
#  define _EVP_read_pw_string OPENSSL_MANGLER_ASM(EVP_read_pw_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_read_pw_string_min
#  define EVP_read_pw_string_min OPENSSL_MANGLER(EVP_read_pw_string_min)
# endif
#else
# ifndef _EVP_read_pw_string_min
#  define _EVP_read_pw_string_min OPENSSL_MANGLER_ASM(EVP_read_pw_string_min)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_seed_cbc
#  define EVP_seed_cbc OPENSSL_MANGLER(EVP_seed_cbc)
# endif
#else
# ifndef _EVP_seed_cbc
#  define _EVP_seed_cbc OPENSSL_MANGLER_ASM(EVP_seed_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_seed_cfb128
#  define EVP_seed_cfb128 OPENSSL_MANGLER(EVP_seed_cfb128)
# endif
#else
# ifndef _EVP_seed_cfb128
#  define _EVP_seed_cfb128 OPENSSL_MANGLER_ASM(EVP_seed_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_seed_ecb
#  define EVP_seed_ecb OPENSSL_MANGLER(EVP_seed_ecb)
# endif
#else
# ifndef _EVP_seed_ecb
#  define _EVP_seed_ecb OPENSSL_MANGLER_ASM(EVP_seed_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_seed_ofb
#  define EVP_seed_ofb OPENSSL_MANGLER(EVP_seed_ofb)
# endif
#else
# ifndef _EVP_seed_ofb
#  define _EVP_seed_ofb OPENSSL_MANGLER_ASM(EVP_seed_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_set_default_properties
#  define EVP_set_default_properties OPENSSL_MANGLER(EVP_set_default_properties)
# endif
#else
# ifndef _EVP_set_default_properties
#  define _EVP_set_default_properties OPENSSL_MANGLER_ASM(EVP_set_default_properties)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_set_pw_prompt
#  define EVP_set_pw_prompt OPENSSL_MANGLER(EVP_set_pw_prompt)
# endif
#else
# ifndef _EVP_set_pw_prompt
#  define _EVP_set_pw_prompt OPENSSL_MANGLER_ASM(EVP_set_pw_prompt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sha1
#  define EVP_sha1 OPENSSL_MANGLER(EVP_sha1)
# endif
#else
# ifndef _EVP_sha1
#  define _EVP_sha1 OPENSSL_MANGLER_ASM(EVP_sha1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sha224
#  define EVP_sha224 OPENSSL_MANGLER(EVP_sha224)
# endif
#else
# ifndef _EVP_sha224
#  define _EVP_sha224 OPENSSL_MANGLER_ASM(EVP_sha224)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sha256
#  define EVP_sha256 OPENSSL_MANGLER(EVP_sha256)
# endif
#else
# ifndef _EVP_sha256
#  define _EVP_sha256 OPENSSL_MANGLER_ASM(EVP_sha256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sha384
#  define EVP_sha384 OPENSSL_MANGLER(EVP_sha384)
# endif
#else
# ifndef _EVP_sha384
#  define _EVP_sha384 OPENSSL_MANGLER_ASM(EVP_sha384)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sha3_224
#  define EVP_sha3_224 OPENSSL_MANGLER(EVP_sha3_224)
# endif
#else
# ifndef _EVP_sha3_224
#  define _EVP_sha3_224 OPENSSL_MANGLER_ASM(EVP_sha3_224)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sha3_256
#  define EVP_sha3_256 OPENSSL_MANGLER(EVP_sha3_256)
# endif
#else
# ifndef _EVP_sha3_256
#  define _EVP_sha3_256 OPENSSL_MANGLER_ASM(EVP_sha3_256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sha3_384
#  define EVP_sha3_384 OPENSSL_MANGLER(EVP_sha3_384)
# endif
#else
# ifndef _EVP_sha3_384
#  define _EVP_sha3_384 OPENSSL_MANGLER_ASM(EVP_sha3_384)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sha3_512
#  define EVP_sha3_512 OPENSSL_MANGLER(EVP_sha3_512)
# endif
#else
# ifndef _EVP_sha3_512
#  define _EVP_sha3_512 OPENSSL_MANGLER_ASM(EVP_sha3_512)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sha512
#  define EVP_sha512 OPENSSL_MANGLER(EVP_sha512)
# endif
#else
# ifndef _EVP_sha512
#  define _EVP_sha512 OPENSSL_MANGLER_ASM(EVP_sha512)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sha512_224
#  define EVP_sha512_224 OPENSSL_MANGLER(EVP_sha512_224)
# endif
#else
# ifndef _EVP_sha512_224
#  define _EVP_sha512_224 OPENSSL_MANGLER_ASM(EVP_sha512_224)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sha512_256
#  define EVP_sha512_256 OPENSSL_MANGLER(EVP_sha512_256)
# endif
#else
# ifndef _EVP_sha512_256
#  define _EVP_sha512_256 OPENSSL_MANGLER_ASM(EVP_sha512_256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_shake128
#  define EVP_shake128 OPENSSL_MANGLER(EVP_shake128)
# endif
#else
# ifndef _EVP_shake128
#  define _EVP_shake128 OPENSSL_MANGLER_ASM(EVP_shake128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_shake256
#  define EVP_shake256 OPENSSL_MANGLER(EVP_shake256)
# endif
#else
# ifndef _EVP_shake256
#  define _EVP_shake256 OPENSSL_MANGLER_ASM(EVP_shake256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EVP_sm3
#  define EVP_sm3 OPENSSL_MANGLER(EVP_sm3)
# endif
#else
# ifndef _EVP_sm3
#  define _EVP_sm3 OPENSSL_MANGLER_ASM(EVP_sm3)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EXTENDED_KEY_USAGE_free
#  define EXTENDED_KEY_USAGE_free OPENSSL_MANGLER(EXTENDED_KEY_USAGE_free)
# endif
#else
# ifndef _EXTENDED_KEY_USAGE_free
#  define _EXTENDED_KEY_USAGE_free OPENSSL_MANGLER_ASM(EXTENDED_KEY_USAGE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EXTENDED_KEY_USAGE_it
#  define EXTENDED_KEY_USAGE_it OPENSSL_MANGLER(EXTENDED_KEY_USAGE_it)
# endif
#else
# ifndef _EXTENDED_KEY_USAGE_it
#  define _EXTENDED_KEY_USAGE_it OPENSSL_MANGLER_ASM(EXTENDED_KEY_USAGE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef EXTENDED_KEY_USAGE_new
#  define EXTENDED_KEY_USAGE_new OPENSSL_MANGLER(EXTENDED_KEY_USAGE_new)
# endif
#else
# ifndef _EXTENDED_KEY_USAGE_new
#  define _EXTENDED_KEY_USAGE_new OPENSSL_MANGLER_ASM(EXTENDED_KEY_USAGE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAMES_free
#  define GENERAL_NAMES_free OPENSSL_MANGLER(GENERAL_NAMES_free)
# endif
#else
# ifndef _GENERAL_NAMES_free
#  define _GENERAL_NAMES_free OPENSSL_MANGLER_ASM(GENERAL_NAMES_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAMES_it
#  define GENERAL_NAMES_it OPENSSL_MANGLER(GENERAL_NAMES_it)
# endif
#else
# ifndef _GENERAL_NAMES_it
#  define _GENERAL_NAMES_it OPENSSL_MANGLER_ASM(GENERAL_NAMES_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAMES_new
#  define GENERAL_NAMES_new OPENSSL_MANGLER(GENERAL_NAMES_new)
# endif
#else
# ifndef _GENERAL_NAMES_new
#  define _GENERAL_NAMES_new OPENSSL_MANGLER_ASM(GENERAL_NAMES_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAME_cmp
#  define GENERAL_NAME_cmp OPENSSL_MANGLER(GENERAL_NAME_cmp)
# endif
#else
# ifndef _GENERAL_NAME_cmp
#  define _GENERAL_NAME_cmp OPENSSL_MANGLER_ASM(GENERAL_NAME_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAME_dup
#  define GENERAL_NAME_dup OPENSSL_MANGLER(GENERAL_NAME_dup)
# endif
#else
# ifndef _GENERAL_NAME_dup
#  define _GENERAL_NAME_dup OPENSSL_MANGLER_ASM(GENERAL_NAME_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAME_free
#  define GENERAL_NAME_free OPENSSL_MANGLER(GENERAL_NAME_free)
# endif
#else
# ifndef _GENERAL_NAME_free
#  define _GENERAL_NAME_free OPENSSL_MANGLER_ASM(GENERAL_NAME_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAME_get0_otherName
#  define GENERAL_NAME_get0_otherName OPENSSL_MANGLER(GENERAL_NAME_get0_otherName)
# endif
#else
# ifndef _GENERAL_NAME_get0_otherName
#  define _GENERAL_NAME_get0_otherName OPENSSL_MANGLER_ASM(GENERAL_NAME_get0_otherName)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAME_get0_value
#  define GENERAL_NAME_get0_value OPENSSL_MANGLER(GENERAL_NAME_get0_value)
# endif
#else
# ifndef _GENERAL_NAME_get0_value
#  define _GENERAL_NAME_get0_value OPENSSL_MANGLER_ASM(GENERAL_NAME_get0_value)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAME_it
#  define GENERAL_NAME_it OPENSSL_MANGLER(GENERAL_NAME_it)
# endif
#else
# ifndef _GENERAL_NAME_it
#  define _GENERAL_NAME_it OPENSSL_MANGLER_ASM(GENERAL_NAME_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAME_new
#  define GENERAL_NAME_new OPENSSL_MANGLER(GENERAL_NAME_new)
# endif
#else
# ifndef _GENERAL_NAME_new
#  define _GENERAL_NAME_new OPENSSL_MANGLER_ASM(GENERAL_NAME_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAME_print
#  define GENERAL_NAME_print OPENSSL_MANGLER(GENERAL_NAME_print)
# endif
#else
# ifndef _GENERAL_NAME_print
#  define _GENERAL_NAME_print OPENSSL_MANGLER_ASM(GENERAL_NAME_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAME_set0_othername
#  define GENERAL_NAME_set0_othername OPENSSL_MANGLER(GENERAL_NAME_set0_othername)
# endif
#else
# ifndef _GENERAL_NAME_set0_othername
#  define _GENERAL_NAME_set0_othername OPENSSL_MANGLER_ASM(GENERAL_NAME_set0_othername)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_NAME_set0_value
#  define GENERAL_NAME_set0_value OPENSSL_MANGLER(GENERAL_NAME_set0_value)
# endif
#else
# ifndef _GENERAL_NAME_set0_value
#  define _GENERAL_NAME_set0_value OPENSSL_MANGLER_ASM(GENERAL_NAME_set0_value)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_SUBTREE_free
#  define GENERAL_SUBTREE_free OPENSSL_MANGLER(GENERAL_SUBTREE_free)
# endif
#else
# ifndef _GENERAL_SUBTREE_free
#  define _GENERAL_SUBTREE_free OPENSSL_MANGLER_ASM(GENERAL_SUBTREE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_SUBTREE_it
#  define GENERAL_SUBTREE_it OPENSSL_MANGLER(GENERAL_SUBTREE_it)
# endif
#else
# ifndef _GENERAL_SUBTREE_it
#  define _GENERAL_SUBTREE_it OPENSSL_MANGLER_ASM(GENERAL_SUBTREE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GENERAL_SUBTREE_new
#  define GENERAL_SUBTREE_new OPENSSL_MANGLER(GENERAL_SUBTREE_new)
# endif
#else
# ifndef _GENERAL_SUBTREE_new
#  define _GENERAL_SUBTREE_new OPENSSL_MANGLER_ASM(GENERAL_SUBTREE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GOST_KX_MESSAGE_free
#  define GOST_KX_MESSAGE_free OPENSSL_MANGLER(GOST_KX_MESSAGE_free)
# endif
#else
# ifndef _GOST_KX_MESSAGE_free
#  define _GOST_KX_MESSAGE_free OPENSSL_MANGLER_ASM(GOST_KX_MESSAGE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GOST_KX_MESSAGE_it
#  define GOST_KX_MESSAGE_it OPENSSL_MANGLER(GOST_KX_MESSAGE_it)
# endif
#else
# ifndef _GOST_KX_MESSAGE_it
#  define _GOST_KX_MESSAGE_it OPENSSL_MANGLER_ASM(GOST_KX_MESSAGE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef GOST_KX_MESSAGE_new
#  define GOST_KX_MESSAGE_new OPENSSL_MANGLER(GOST_KX_MESSAGE_new)
# endif
#else
# ifndef _GOST_KX_MESSAGE_new
#  define _GOST_KX_MESSAGE_new OPENSSL_MANGLER_ASM(GOST_KX_MESSAGE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC
#  define HMAC OPENSSL_MANGLER(HMAC)
# endif
#else
# ifndef _HMAC
#  define _HMAC OPENSSL_MANGLER_ASM(HMAC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC_CTX_copy
#  define HMAC_CTX_copy OPENSSL_MANGLER(HMAC_CTX_copy)
# endif
#else
# ifndef _HMAC_CTX_copy
#  define _HMAC_CTX_copy OPENSSL_MANGLER_ASM(HMAC_CTX_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC_CTX_free
#  define HMAC_CTX_free OPENSSL_MANGLER(HMAC_CTX_free)
# endif
#else
# ifndef _HMAC_CTX_free
#  define _HMAC_CTX_free OPENSSL_MANGLER_ASM(HMAC_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC_CTX_get_md
#  define HMAC_CTX_get_md OPENSSL_MANGLER(HMAC_CTX_get_md)
# endif
#else
# ifndef _HMAC_CTX_get_md
#  define _HMAC_CTX_get_md OPENSSL_MANGLER_ASM(HMAC_CTX_get_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC_CTX_new
#  define HMAC_CTX_new OPENSSL_MANGLER(HMAC_CTX_new)
# endif
#else
# ifndef _HMAC_CTX_new
#  define _HMAC_CTX_new OPENSSL_MANGLER_ASM(HMAC_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC_CTX_reset
#  define HMAC_CTX_reset OPENSSL_MANGLER(HMAC_CTX_reset)
# endif
#else
# ifndef _HMAC_CTX_reset
#  define _HMAC_CTX_reset OPENSSL_MANGLER_ASM(HMAC_CTX_reset)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC_CTX_set_flags
#  define HMAC_CTX_set_flags OPENSSL_MANGLER(HMAC_CTX_set_flags)
# endif
#else
# ifndef _HMAC_CTX_set_flags
#  define _HMAC_CTX_set_flags OPENSSL_MANGLER_ASM(HMAC_CTX_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC_Final
#  define HMAC_Final OPENSSL_MANGLER(HMAC_Final)
# endif
#else
# ifndef _HMAC_Final
#  define _HMAC_Final OPENSSL_MANGLER_ASM(HMAC_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC_Init
#  define HMAC_Init OPENSSL_MANGLER(HMAC_Init)
# endif
#else
# ifndef _HMAC_Init
#  define _HMAC_Init OPENSSL_MANGLER_ASM(HMAC_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC_Init_ex
#  define HMAC_Init_ex OPENSSL_MANGLER(HMAC_Init_ex)
# endif
#else
# ifndef _HMAC_Init_ex
#  define _HMAC_Init_ex OPENSSL_MANGLER_ASM(HMAC_Init_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC_Update
#  define HMAC_Update OPENSSL_MANGLER(HMAC_Update)
# endif
#else
# ifndef _HMAC_Update
#  define _HMAC_Update OPENSSL_MANGLER_ASM(HMAC_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef HMAC_size
#  define HMAC_size OPENSSL_MANGLER(HMAC_size)
# endif
#else
# ifndef _HMAC_size
#  define _HMAC_size OPENSSL_MANGLER_ASM(HMAC_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef INT32_it
#  define INT32_it OPENSSL_MANGLER(INT32_it)
# endif
#else
# ifndef _INT32_it
#  define _INT32_it OPENSSL_MANGLER_ASM(INT32_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef INT64_it
#  define INT64_it OPENSSL_MANGLER(INT64_it)
# endif
#else
# ifndef _INT64_it
#  define _INT64_it OPENSSL_MANGLER_ASM(INT64_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressChoice_free
#  define IPAddressChoice_free OPENSSL_MANGLER(IPAddressChoice_free)
# endif
#else
# ifndef _IPAddressChoice_free
#  define _IPAddressChoice_free OPENSSL_MANGLER_ASM(IPAddressChoice_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressChoice_it
#  define IPAddressChoice_it OPENSSL_MANGLER(IPAddressChoice_it)
# endif
#else
# ifndef _IPAddressChoice_it
#  define _IPAddressChoice_it OPENSSL_MANGLER_ASM(IPAddressChoice_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressChoice_new
#  define IPAddressChoice_new OPENSSL_MANGLER(IPAddressChoice_new)
# endif
#else
# ifndef _IPAddressChoice_new
#  define _IPAddressChoice_new OPENSSL_MANGLER_ASM(IPAddressChoice_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressFamily_free
#  define IPAddressFamily_free OPENSSL_MANGLER(IPAddressFamily_free)
# endif
#else
# ifndef _IPAddressFamily_free
#  define _IPAddressFamily_free OPENSSL_MANGLER_ASM(IPAddressFamily_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressFamily_it
#  define IPAddressFamily_it OPENSSL_MANGLER(IPAddressFamily_it)
# endif
#else
# ifndef _IPAddressFamily_it
#  define _IPAddressFamily_it OPENSSL_MANGLER_ASM(IPAddressFamily_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressFamily_new
#  define IPAddressFamily_new OPENSSL_MANGLER(IPAddressFamily_new)
# endif
#else
# ifndef _IPAddressFamily_new
#  define _IPAddressFamily_new OPENSSL_MANGLER_ASM(IPAddressFamily_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressOrRange_free
#  define IPAddressOrRange_free OPENSSL_MANGLER(IPAddressOrRange_free)
# endif
#else
# ifndef _IPAddressOrRange_free
#  define _IPAddressOrRange_free OPENSSL_MANGLER_ASM(IPAddressOrRange_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressOrRange_it
#  define IPAddressOrRange_it OPENSSL_MANGLER(IPAddressOrRange_it)
# endif
#else
# ifndef _IPAddressOrRange_it
#  define _IPAddressOrRange_it OPENSSL_MANGLER_ASM(IPAddressOrRange_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressOrRange_new
#  define IPAddressOrRange_new OPENSSL_MANGLER(IPAddressOrRange_new)
# endif
#else
# ifndef _IPAddressOrRange_new
#  define _IPAddressOrRange_new OPENSSL_MANGLER_ASM(IPAddressOrRange_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressRange_free
#  define IPAddressRange_free OPENSSL_MANGLER(IPAddressRange_free)
# endif
#else
# ifndef _IPAddressRange_free
#  define _IPAddressRange_free OPENSSL_MANGLER_ASM(IPAddressRange_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressRange_it
#  define IPAddressRange_it OPENSSL_MANGLER(IPAddressRange_it)
# endif
#else
# ifndef _IPAddressRange_it
#  define _IPAddressRange_it OPENSSL_MANGLER_ASM(IPAddressRange_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef IPAddressRange_new
#  define IPAddressRange_new OPENSSL_MANGLER(IPAddressRange_new)
# endif
#else
# ifndef _IPAddressRange_new
#  define _IPAddressRange_new OPENSSL_MANGLER_ASM(IPAddressRange_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ISSUER_SIGN_TOOL_free
#  define ISSUER_SIGN_TOOL_free OPENSSL_MANGLER(ISSUER_SIGN_TOOL_free)
# endif
#else
# ifndef _ISSUER_SIGN_TOOL_free
#  define _ISSUER_SIGN_TOOL_free OPENSSL_MANGLER_ASM(ISSUER_SIGN_TOOL_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ISSUER_SIGN_TOOL_it
#  define ISSUER_SIGN_TOOL_it OPENSSL_MANGLER(ISSUER_SIGN_TOOL_it)
# endif
#else
# ifndef _ISSUER_SIGN_TOOL_it
#  define _ISSUER_SIGN_TOOL_it OPENSSL_MANGLER_ASM(ISSUER_SIGN_TOOL_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ISSUER_SIGN_TOOL_new
#  define ISSUER_SIGN_TOOL_new OPENSSL_MANGLER(ISSUER_SIGN_TOOL_new)
# endif
#else
# ifndef _ISSUER_SIGN_TOOL_new
#  define _ISSUER_SIGN_TOOL_new OPENSSL_MANGLER_ASM(ISSUER_SIGN_TOOL_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ISSUING_DIST_POINT_free
#  define ISSUING_DIST_POINT_free OPENSSL_MANGLER(ISSUING_DIST_POINT_free)
# endif
#else
# ifndef _ISSUING_DIST_POINT_free
#  define _ISSUING_DIST_POINT_free OPENSSL_MANGLER_ASM(ISSUING_DIST_POINT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ISSUING_DIST_POINT_it
#  define ISSUING_DIST_POINT_it OPENSSL_MANGLER(ISSUING_DIST_POINT_it)
# endif
#else
# ifndef _ISSUING_DIST_POINT_it
#  define _ISSUING_DIST_POINT_it OPENSSL_MANGLER_ASM(ISSUING_DIST_POINT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ISSUING_DIST_POINT_new
#  define ISSUING_DIST_POINT_new OPENSSL_MANGLER(ISSUING_DIST_POINT_new)
# endif
#else
# ifndef _ISSUING_DIST_POINT_new
#  define _ISSUING_DIST_POINT_new OPENSSL_MANGLER_ASM(ISSUING_DIST_POINT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef LONG_it
#  define LONG_it OPENSSL_MANGLER(LONG_it)
# endif
#else
# ifndef _LONG_it
#  define _LONG_it OPENSSL_MANGLER_ASM(LONG_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MD2
#  define MD2 OPENSSL_MANGLER(MD2)
# endif
#else
# ifndef _MD2
#  define _MD2 OPENSSL_MANGLER_ASM(MD2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MD2_Final
#  define MD2_Final OPENSSL_MANGLER(MD2_Final)
# endif
#else
# ifndef _MD2_Final
#  define _MD2_Final OPENSSL_MANGLER_ASM(MD2_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MD2_Init
#  define MD2_Init OPENSSL_MANGLER(MD2_Init)
# endif
#else
# ifndef _MD2_Init
#  define _MD2_Init OPENSSL_MANGLER_ASM(MD2_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MD2_Update
#  define MD2_Update OPENSSL_MANGLER(MD2_Update)
# endif
#else
# ifndef _MD2_Update
#  define _MD2_Update OPENSSL_MANGLER_ASM(MD2_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MD2_options
#  define MD2_options OPENSSL_MANGLER(MD2_options)
# endif
#else
# ifndef _MD2_options
#  define _MD2_options OPENSSL_MANGLER_ASM(MD2_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MD5
#  define MD5 OPENSSL_MANGLER(MD5)
# endif
#else
# ifndef _MD5
#  define _MD5 OPENSSL_MANGLER_ASM(MD5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MD5_Final
#  define MD5_Final OPENSSL_MANGLER(MD5_Final)
# endif
#else
# ifndef _MD5_Final
#  define _MD5_Final OPENSSL_MANGLER_ASM(MD5_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MD5_Init
#  define MD5_Init OPENSSL_MANGLER(MD5_Init)
# endif
#else
# ifndef _MD5_Init
#  define _MD5_Init OPENSSL_MANGLER_ASM(MD5_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MD5_Transform
#  define MD5_Transform OPENSSL_MANGLER(MD5_Transform)
# endif
#else
# ifndef _MD5_Transform
#  define _MD5_Transform OPENSSL_MANGLER_ASM(MD5_Transform)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MD5_Update
#  define MD5_Update OPENSSL_MANGLER(MD5_Update)
# endif
#else
# ifndef _MD5_Update
#  define _MD5_Update OPENSSL_MANGLER_ASM(MD5_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MDC2
#  define MDC2 OPENSSL_MANGLER(MDC2)
# endif
#else
# ifndef _MDC2
#  define _MDC2 OPENSSL_MANGLER_ASM(MDC2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MDC2_Final
#  define MDC2_Final OPENSSL_MANGLER(MDC2_Final)
# endif
#else
# ifndef _MDC2_Final
#  define _MDC2_Final OPENSSL_MANGLER_ASM(MDC2_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MDC2_Init
#  define MDC2_Init OPENSSL_MANGLER(MDC2_Init)
# endif
#else
# ifndef _MDC2_Init
#  define _MDC2_Init OPENSSL_MANGLER_ASM(MDC2_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef MDC2_Update
#  define MDC2_Update OPENSSL_MANGLER(MDC2_Update)
# endif
#else
# ifndef _MDC2_Update
#  define _MDC2_Update OPENSSL_MANGLER_ASM(MDC2_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAME_CONSTRAINTS_check
#  define NAME_CONSTRAINTS_check OPENSSL_MANGLER(NAME_CONSTRAINTS_check)
# endif
#else
# ifndef _NAME_CONSTRAINTS_check
#  define _NAME_CONSTRAINTS_check OPENSSL_MANGLER_ASM(NAME_CONSTRAINTS_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAME_CONSTRAINTS_check_CN
#  define NAME_CONSTRAINTS_check_CN OPENSSL_MANGLER(NAME_CONSTRAINTS_check_CN)
# endif
#else
# ifndef _NAME_CONSTRAINTS_check_CN
#  define _NAME_CONSTRAINTS_check_CN OPENSSL_MANGLER_ASM(NAME_CONSTRAINTS_check_CN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAME_CONSTRAINTS_free
#  define NAME_CONSTRAINTS_free OPENSSL_MANGLER(NAME_CONSTRAINTS_free)
# endif
#else
# ifndef _NAME_CONSTRAINTS_free
#  define _NAME_CONSTRAINTS_free OPENSSL_MANGLER_ASM(NAME_CONSTRAINTS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAME_CONSTRAINTS_it
#  define NAME_CONSTRAINTS_it OPENSSL_MANGLER(NAME_CONSTRAINTS_it)
# endif
#else
# ifndef _NAME_CONSTRAINTS_it
#  define _NAME_CONSTRAINTS_it OPENSSL_MANGLER_ASM(NAME_CONSTRAINTS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAME_CONSTRAINTS_new
#  define NAME_CONSTRAINTS_new OPENSSL_MANGLER(NAME_CONSTRAINTS_new)
# endif
#else
# ifndef _NAME_CONSTRAINTS_new
#  define _NAME_CONSTRAINTS_new OPENSSL_MANGLER_ASM(NAME_CONSTRAINTS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAMING_AUTHORITY_free
#  define NAMING_AUTHORITY_free OPENSSL_MANGLER(NAMING_AUTHORITY_free)
# endif
#else
# ifndef _NAMING_AUTHORITY_free
#  define _NAMING_AUTHORITY_free OPENSSL_MANGLER_ASM(NAMING_AUTHORITY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAMING_AUTHORITY_get0_authorityId
#  define NAMING_AUTHORITY_get0_authorityId OPENSSL_MANGLER(NAMING_AUTHORITY_get0_authorityId)
# endif
#else
# ifndef _NAMING_AUTHORITY_get0_authorityId
#  define _NAMING_AUTHORITY_get0_authorityId OPENSSL_MANGLER_ASM(NAMING_AUTHORITY_get0_authorityId)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAMING_AUTHORITY_get0_authorityText
#  define NAMING_AUTHORITY_get0_authorityText OPENSSL_MANGLER(NAMING_AUTHORITY_get0_authorityText)
# endif
#else
# ifndef _NAMING_AUTHORITY_get0_authorityText
#  define _NAMING_AUTHORITY_get0_authorityText OPENSSL_MANGLER_ASM(NAMING_AUTHORITY_get0_authorityText)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAMING_AUTHORITY_get0_authorityURL
#  define NAMING_AUTHORITY_get0_authorityURL OPENSSL_MANGLER(NAMING_AUTHORITY_get0_authorityURL)
# endif
#else
# ifndef _NAMING_AUTHORITY_get0_authorityURL
#  define _NAMING_AUTHORITY_get0_authorityURL OPENSSL_MANGLER_ASM(NAMING_AUTHORITY_get0_authorityURL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAMING_AUTHORITY_it
#  define NAMING_AUTHORITY_it OPENSSL_MANGLER(NAMING_AUTHORITY_it)
# endif
#else
# ifndef _NAMING_AUTHORITY_it
#  define _NAMING_AUTHORITY_it OPENSSL_MANGLER_ASM(NAMING_AUTHORITY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAMING_AUTHORITY_new
#  define NAMING_AUTHORITY_new OPENSSL_MANGLER(NAMING_AUTHORITY_new)
# endif
#else
# ifndef _NAMING_AUTHORITY_new
#  define _NAMING_AUTHORITY_new OPENSSL_MANGLER_ASM(NAMING_AUTHORITY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAMING_AUTHORITY_set0_authorityId
#  define NAMING_AUTHORITY_set0_authorityId OPENSSL_MANGLER(NAMING_AUTHORITY_set0_authorityId)
# endif
#else
# ifndef _NAMING_AUTHORITY_set0_authorityId
#  define _NAMING_AUTHORITY_set0_authorityId OPENSSL_MANGLER_ASM(NAMING_AUTHORITY_set0_authorityId)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAMING_AUTHORITY_set0_authorityText
#  define NAMING_AUTHORITY_set0_authorityText OPENSSL_MANGLER(NAMING_AUTHORITY_set0_authorityText)
# endif
#else
# ifndef _NAMING_AUTHORITY_set0_authorityText
#  define _NAMING_AUTHORITY_set0_authorityText OPENSSL_MANGLER_ASM(NAMING_AUTHORITY_set0_authorityText)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NAMING_AUTHORITY_set0_authorityURL
#  define NAMING_AUTHORITY_set0_authorityURL OPENSSL_MANGLER(NAMING_AUTHORITY_set0_authorityURL)
# endif
#else
# ifndef _NAMING_AUTHORITY_set0_authorityURL
#  define _NAMING_AUTHORITY_set0_authorityURL OPENSSL_MANGLER_ASM(NAMING_AUTHORITY_set0_authorityURL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_WIN32
#  define NCONF_WIN32 OPENSSL_MANGLER(NCONF_WIN32)
# endif
#else
# ifndef _NCONF_WIN32
#  define _NCONF_WIN32 OPENSSL_MANGLER_ASM(NCONF_WIN32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_default
#  define NCONF_default OPENSSL_MANGLER(NCONF_default)
# endif
#else
# ifndef _NCONF_default
#  define _NCONF_default OPENSSL_MANGLER_ASM(NCONF_default)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_dump_bio
#  define NCONF_dump_bio OPENSSL_MANGLER(NCONF_dump_bio)
# endif
#else
# ifndef _NCONF_dump_bio
#  define _NCONF_dump_bio OPENSSL_MANGLER_ASM(NCONF_dump_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_dump_fp
#  define NCONF_dump_fp OPENSSL_MANGLER(NCONF_dump_fp)
# endif
#else
# ifndef _NCONF_dump_fp
#  define _NCONF_dump_fp OPENSSL_MANGLER_ASM(NCONF_dump_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_free
#  define NCONF_free OPENSSL_MANGLER(NCONF_free)
# endif
#else
# ifndef _NCONF_free
#  define _NCONF_free OPENSSL_MANGLER_ASM(NCONF_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_free_data
#  define NCONF_free_data OPENSSL_MANGLER(NCONF_free_data)
# endif
#else
# ifndef _NCONF_free_data
#  define _NCONF_free_data OPENSSL_MANGLER_ASM(NCONF_free_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_get0_libctx
#  define NCONF_get0_libctx OPENSSL_MANGLER(NCONF_get0_libctx)
# endif
#else
# ifndef _NCONF_get0_libctx
#  define _NCONF_get0_libctx OPENSSL_MANGLER_ASM(NCONF_get0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_get_number_e
#  define NCONF_get_number_e OPENSSL_MANGLER(NCONF_get_number_e)
# endif
#else
# ifndef _NCONF_get_number_e
#  define _NCONF_get_number_e OPENSSL_MANGLER_ASM(NCONF_get_number_e)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_get_section
#  define NCONF_get_section OPENSSL_MANGLER(NCONF_get_section)
# endif
#else
# ifndef _NCONF_get_section
#  define _NCONF_get_section OPENSSL_MANGLER_ASM(NCONF_get_section)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_get_section_names
#  define NCONF_get_section_names OPENSSL_MANGLER(NCONF_get_section_names)
# endif
#else
# ifndef _NCONF_get_section_names
#  define _NCONF_get_section_names OPENSSL_MANGLER_ASM(NCONF_get_section_names)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_get_string
#  define NCONF_get_string OPENSSL_MANGLER(NCONF_get_string)
# endif
#else
# ifndef _NCONF_get_string
#  define _NCONF_get_string OPENSSL_MANGLER_ASM(NCONF_get_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_load
#  define NCONF_load OPENSSL_MANGLER(NCONF_load)
# endif
#else
# ifndef _NCONF_load
#  define _NCONF_load OPENSSL_MANGLER_ASM(NCONF_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_load_bio
#  define NCONF_load_bio OPENSSL_MANGLER(NCONF_load_bio)
# endif
#else
# ifndef _NCONF_load_bio
#  define _NCONF_load_bio OPENSSL_MANGLER_ASM(NCONF_load_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_load_fp
#  define NCONF_load_fp OPENSSL_MANGLER(NCONF_load_fp)
# endif
#else
# ifndef _NCONF_load_fp
#  define _NCONF_load_fp OPENSSL_MANGLER_ASM(NCONF_load_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_new
#  define NCONF_new OPENSSL_MANGLER(NCONF_new)
# endif
#else
# ifndef _NCONF_new
#  define _NCONF_new OPENSSL_MANGLER_ASM(NCONF_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NCONF_new_ex
#  define NCONF_new_ex OPENSSL_MANGLER(NCONF_new_ex)
# endif
#else
# ifndef _NCONF_new_ex
#  define _NCONF_new_ex OPENSSL_MANGLER_ASM(NCONF_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_CERT_SEQUENCE_free
#  define NETSCAPE_CERT_SEQUENCE_free OPENSSL_MANGLER(NETSCAPE_CERT_SEQUENCE_free)
# endif
#else
# ifndef _NETSCAPE_CERT_SEQUENCE_free
#  define _NETSCAPE_CERT_SEQUENCE_free OPENSSL_MANGLER_ASM(NETSCAPE_CERT_SEQUENCE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_CERT_SEQUENCE_it
#  define NETSCAPE_CERT_SEQUENCE_it OPENSSL_MANGLER(NETSCAPE_CERT_SEQUENCE_it)
# endif
#else
# ifndef _NETSCAPE_CERT_SEQUENCE_it
#  define _NETSCAPE_CERT_SEQUENCE_it OPENSSL_MANGLER_ASM(NETSCAPE_CERT_SEQUENCE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_CERT_SEQUENCE_new
#  define NETSCAPE_CERT_SEQUENCE_new OPENSSL_MANGLER(NETSCAPE_CERT_SEQUENCE_new)
# endif
#else
# ifndef _NETSCAPE_CERT_SEQUENCE_new
#  define _NETSCAPE_CERT_SEQUENCE_new OPENSSL_MANGLER_ASM(NETSCAPE_CERT_SEQUENCE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_ENCRYPTED_PKEY_free
#  define NETSCAPE_ENCRYPTED_PKEY_free OPENSSL_MANGLER(NETSCAPE_ENCRYPTED_PKEY_free)
# endif
#else
# ifndef _NETSCAPE_ENCRYPTED_PKEY_free
#  define _NETSCAPE_ENCRYPTED_PKEY_free OPENSSL_MANGLER_ASM(NETSCAPE_ENCRYPTED_PKEY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_ENCRYPTED_PKEY_new
#  define NETSCAPE_ENCRYPTED_PKEY_new OPENSSL_MANGLER(NETSCAPE_ENCRYPTED_PKEY_new)
# endif
#else
# ifndef _NETSCAPE_ENCRYPTED_PKEY_new
#  define _NETSCAPE_ENCRYPTED_PKEY_new OPENSSL_MANGLER_ASM(NETSCAPE_ENCRYPTED_PKEY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_PKEY_free
#  define NETSCAPE_PKEY_free OPENSSL_MANGLER(NETSCAPE_PKEY_free)
# endif
#else
# ifndef _NETSCAPE_PKEY_free
#  define _NETSCAPE_PKEY_free OPENSSL_MANGLER_ASM(NETSCAPE_PKEY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_PKEY_new
#  define NETSCAPE_PKEY_new OPENSSL_MANGLER(NETSCAPE_PKEY_new)
# endif
#else
# ifndef _NETSCAPE_PKEY_new
#  define _NETSCAPE_PKEY_new OPENSSL_MANGLER_ASM(NETSCAPE_PKEY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKAC_free
#  define NETSCAPE_SPKAC_free OPENSSL_MANGLER(NETSCAPE_SPKAC_free)
# endif
#else
# ifndef _NETSCAPE_SPKAC_free
#  define _NETSCAPE_SPKAC_free OPENSSL_MANGLER_ASM(NETSCAPE_SPKAC_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKAC_it
#  define NETSCAPE_SPKAC_it OPENSSL_MANGLER(NETSCAPE_SPKAC_it)
# endif
#else
# ifndef _NETSCAPE_SPKAC_it
#  define _NETSCAPE_SPKAC_it OPENSSL_MANGLER_ASM(NETSCAPE_SPKAC_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKAC_new
#  define NETSCAPE_SPKAC_new OPENSSL_MANGLER(NETSCAPE_SPKAC_new)
# endif
#else
# ifndef _NETSCAPE_SPKAC_new
#  define _NETSCAPE_SPKAC_new OPENSSL_MANGLER_ASM(NETSCAPE_SPKAC_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKI_b64_decode
#  define NETSCAPE_SPKI_b64_decode OPENSSL_MANGLER(NETSCAPE_SPKI_b64_decode)
# endif
#else
# ifndef _NETSCAPE_SPKI_b64_decode
#  define _NETSCAPE_SPKI_b64_decode OPENSSL_MANGLER_ASM(NETSCAPE_SPKI_b64_decode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKI_b64_encode
#  define NETSCAPE_SPKI_b64_encode OPENSSL_MANGLER(NETSCAPE_SPKI_b64_encode)
# endif
#else
# ifndef _NETSCAPE_SPKI_b64_encode
#  define _NETSCAPE_SPKI_b64_encode OPENSSL_MANGLER_ASM(NETSCAPE_SPKI_b64_encode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKI_free
#  define NETSCAPE_SPKI_free OPENSSL_MANGLER(NETSCAPE_SPKI_free)
# endif
#else
# ifndef _NETSCAPE_SPKI_free
#  define _NETSCAPE_SPKI_free OPENSSL_MANGLER_ASM(NETSCAPE_SPKI_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKI_get_pubkey
#  define NETSCAPE_SPKI_get_pubkey OPENSSL_MANGLER(NETSCAPE_SPKI_get_pubkey)
# endif
#else
# ifndef _NETSCAPE_SPKI_get_pubkey
#  define _NETSCAPE_SPKI_get_pubkey OPENSSL_MANGLER_ASM(NETSCAPE_SPKI_get_pubkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKI_it
#  define NETSCAPE_SPKI_it OPENSSL_MANGLER(NETSCAPE_SPKI_it)
# endif
#else
# ifndef _NETSCAPE_SPKI_it
#  define _NETSCAPE_SPKI_it OPENSSL_MANGLER_ASM(NETSCAPE_SPKI_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKI_new
#  define NETSCAPE_SPKI_new OPENSSL_MANGLER(NETSCAPE_SPKI_new)
# endif
#else
# ifndef _NETSCAPE_SPKI_new
#  define _NETSCAPE_SPKI_new OPENSSL_MANGLER_ASM(NETSCAPE_SPKI_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKI_print
#  define NETSCAPE_SPKI_print OPENSSL_MANGLER(NETSCAPE_SPKI_print)
# endif
#else
# ifndef _NETSCAPE_SPKI_print
#  define _NETSCAPE_SPKI_print OPENSSL_MANGLER_ASM(NETSCAPE_SPKI_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKI_set_pubkey
#  define NETSCAPE_SPKI_set_pubkey OPENSSL_MANGLER(NETSCAPE_SPKI_set_pubkey)
# endif
#else
# ifndef _NETSCAPE_SPKI_set_pubkey
#  define _NETSCAPE_SPKI_set_pubkey OPENSSL_MANGLER_ASM(NETSCAPE_SPKI_set_pubkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKI_sign
#  define NETSCAPE_SPKI_sign OPENSSL_MANGLER(NETSCAPE_SPKI_sign)
# endif
#else
# ifndef _NETSCAPE_SPKI_sign
#  define _NETSCAPE_SPKI_sign OPENSSL_MANGLER_ASM(NETSCAPE_SPKI_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NETSCAPE_SPKI_verify
#  define NETSCAPE_SPKI_verify OPENSSL_MANGLER(NETSCAPE_SPKI_verify)
# endif
#else
# ifndef _NETSCAPE_SPKI_verify
#  define _NETSCAPE_SPKI_verify OPENSSL_MANGLER_ASM(NETSCAPE_SPKI_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NOTICEREF_free
#  define NOTICEREF_free OPENSSL_MANGLER(NOTICEREF_free)
# endif
#else
# ifndef _NOTICEREF_free
#  define _NOTICEREF_free OPENSSL_MANGLER_ASM(NOTICEREF_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NOTICEREF_it
#  define NOTICEREF_it OPENSSL_MANGLER(NOTICEREF_it)
# endif
#else
# ifndef _NOTICEREF_it
#  define _NOTICEREF_it OPENSSL_MANGLER_ASM(NOTICEREF_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef NOTICEREF_new
#  define NOTICEREF_new OPENSSL_MANGLER(NOTICEREF_new)
# endif
#else
# ifndef _NOTICEREF_new
#  define _NOTICEREF_new OPENSSL_MANGLER_ASM(NOTICEREF_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_NAME_add
#  define OBJ_NAME_add OPENSSL_MANGLER(OBJ_NAME_add)
# endif
#else
# ifndef _OBJ_NAME_add
#  define _OBJ_NAME_add OPENSSL_MANGLER_ASM(OBJ_NAME_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_NAME_cleanup
#  define OBJ_NAME_cleanup OPENSSL_MANGLER(OBJ_NAME_cleanup)
# endif
#else
# ifndef _OBJ_NAME_cleanup
#  define _OBJ_NAME_cleanup OPENSSL_MANGLER_ASM(OBJ_NAME_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_NAME_do_all
#  define OBJ_NAME_do_all OPENSSL_MANGLER(OBJ_NAME_do_all)
# endif
#else
# ifndef _OBJ_NAME_do_all
#  define _OBJ_NAME_do_all OPENSSL_MANGLER_ASM(OBJ_NAME_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_NAME_do_all_sorted
#  define OBJ_NAME_do_all_sorted OPENSSL_MANGLER(OBJ_NAME_do_all_sorted)
# endif
#else
# ifndef _OBJ_NAME_do_all_sorted
#  define _OBJ_NAME_do_all_sorted OPENSSL_MANGLER_ASM(OBJ_NAME_do_all_sorted)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_NAME_get
#  define OBJ_NAME_get OPENSSL_MANGLER(OBJ_NAME_get)
# endif
#else
# ifndef _OBJ_NAME_get
#  define _OBJ_NAME_get OPENSSL_MANGLER_ASM(OBJ_NAME_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_NAME_init
#  define OBJ_NAME_init OPENSSL_MANGLER(OBJ_NAME_init)
# endif
#else
# ifndef _OBJ_NAME_init
#  define _OBJ_NAME_init OPENSSL_MANGLER_ASM(OBJ_NAME_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_NAME_new_index
#  define OBJ_NAME_new_index OPENSSL_MANGLER(OBJ_NAME_new_index)
# endif
#else
# ifndef _OBJ_NAME_new_index
#  define _OBJ_NAME_new_index OPENSSL_MANGLER_ASM(OBJ_NAME_new_index)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_NAME_remove
#  define OBJ_NAME_remove OPENSSL_MANGLER(OBJ_NAME_remove)
# endif
#else
# ifndef _OBJ_NAME_remove
#  define _OBJ_NAME_remove OPENSSL_MANGLER_ASM(OBJ_NAME_remove)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_add_object
#  define OBJ_add_object OPENSSL_MANGLER(OBJ_add_object)
# endif
#else
# ifndef _OBJ_add_object
#  define _OBJ_add_object OPENSSL_MANGLER_ASM(OBJ_add_object)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_add_sigid
#  define OBJ_add_sigid OPENSSL_MANGLER(OBJ_add_sigid)
# endif
#else
# ifndef _OBJ_add_sigid
#  define _OBJ_add_sigid OPENSSL_MANGLER_ASM(OBJ_add_sigid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_bsearch_
#  define OBJ_bsearch_ OPENSSL_MANGLER(OBJ_bsearch_)
# endif
#else
# ifndef _OBJ_bsearch_
#  define _OBJ_bsearch_ OPENSSL_MANGLER_ASM(OBJ_bsearch_)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_bsearch_ex_
#  define OBJ_bsearch_ex_ OPENSSL_MANGLER(OBJ_bsearch_ex_)
# endif
#else
# ifndef _OBJ_bsearch_ex_
#  define _OBJ_bsearch_ex_ OPENSSL_MANGLER_ASM(OBJ_bsearch_ex_)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_bsearch_ssl_cipher_id
#  define OBJ_bsearch_ssl_cipher_id OPENSSL_MANGLER(OBJ_bsearch_ssl_cipher_id)
# endif
#else
# ifndef _OBJ_bsearch_ssl_cipher_id
#  define _OBJ_bsearch_ssl_cipher_id OPENSSL_MANGLER_ASM(OBJ_bsearch_ssl_cipher_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_cmp
#  define OBJ_cmp OPENSSL_MANGLER(OBJ_cmp)
# endif
#else
# ifndef _OBJ_cmp
#  define _OBJ_cmp OPENSSL_MANGLER_ASM(OBJ_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_create
#  define OBJ_create OPENSSL_MANGLER(OBJ_create)
# endif
#else
# ifndef _OBJ_create
#  define _OBJ_create OPENSSL_MANGLER_ASM(OBJ_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_create_objects
#  define OBJ_create_objects OPENSSL_MANGLER(OBJ_create_objects)
# endif
#else
# ifndef _OBJ_create_objects
#  define _OBJ_create_objects OPENSSL_MANGLER_ASM(OBJ_create_objects)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_dup
#  define OBJ_dup OPENSSL_MANGLER(OBJ_dup)
# endif
#else
# ifndef _OBJ_dup
#  define _OBJ_dup OPENSSL_MANGLER_ASM(OBJ_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_find_sigid_algs
#  define OBJ_find_sigid_algs OPENSSL_MANGLER(OBJ_find_sigid_algs)
# endif
#else
# ifndef _OBJ_find_sigid_algs
#  define _OBJ_find_sigid_algs OPENSSL_MANGLER_ASM(OBJ_find_sigid_algs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_find_sigid_by_algs
#  define OBJ_find_sigid_by_algs OPENSSL_MANGLER(OBJ_find_sigid_by_algs)
# endif
#else
# ifndef _OBJ_find_sigid_by_algs
#  define _OBJ_find_sigid_by_algs OPENSSL_MANGLER_ASM(OBJ_find_sigid_by_algs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_get0_data
#  define OBJ_get0_data OPENSSL_MANGLER(OBJ_get0_data)
# endif
#else
# ifndef _OBJ_get0_data
#  define _OBJ_get0_data OPENSSL_MANGLER_ASM(OBJ_get0_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_length
#  define OBJ_length OPENSSL_MANGLER(OBJ_length)
# endif
#else
# ifndef _OBJ_length
#  define _OBJ_length OPENSSL_MANGLER_ASM(OBJ_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_ln2nid
#  define OBJ_ln2nid OPENSSL_MANGLER(OBJ_ln2nid)
# endif
#else
# ifndef _OBJ_ln2nid
#  define _OBJ_ln2nid OPENSSL_MANGLER_ASM(OBJ_ln2nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_new_nid
#  define OBJ_new_nid OPENSSL_MANGLER(OBJ_new_nid)
# endif
#else
# ifndef _OBJ_new_nid
#  define _OBJ_new_nid OPENSSL_MANGLER_ASM(OBJ_new_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_nid2ln
#  define OBJ_nid2ln OPENSSL_MANGLER(OBJ_nid2ln)
# endif
#else
# ifndef _OBJ_nid2ln
#  define _OBJ_nid2ln OPENSSL_MANGLER_ASM(OBJ_nid2ln)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_nid2obj
#  define OBJ_nid2obj OPENSSL_MANGLER(OBJ_nid2obj)
# endif
#else
# ifndef _OBJ_nid2obj
#  define _OBJ_nid2obj OPENSSL_MANGLER_ASM(OBJ_nid2obj)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_nid2sn
#  define OBJ_nid2sn OPENSSL_MANGLER(OBJ_nid2sn)
# endif
#else
# ifndef _OBJ_nid2sn
#  define _OBJ_nid2sn OPENSSL_MANGLER_ASM(OBJ_nid2sn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_obj2nid
#  define OBJ_obj2nid OPENSSL_MANGLER(OBJ_obj2nid)
# endif
#else
# ifndef _OBJ_obj2nid
#  define _OBJ_obj2nid OPENSSL_MANGLER_ASM(OBJ_obj2nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_obj2txt
#  define OBJ_obj2txt OPENSSL_MANGLER(OBJ_obj2txt)
# endif
#else
# ifndef _OBJ_obj2txt
#  define _OBJ_obj2txt OPENSSL_MANGLER_ASM(OBJ_obj2txt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_sigid_free
#  define OBJ_sigid_free OPENSSL_MANGLER(OBJ_sigid_free)
# endif
#else
# ifndef _OBJ_sigid_free
#  define _OBJ_sigid_free OPENSSL_MANGLER_ASM(OBJ_sigid_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_sn2nid
#  define OBJ_sn2nid OPENSSL_MANGLER(OBJ_sn2nid)
# endif
#else
# ifndef _OBJ_sn2nid
#  define _OBJ_sn2nid OPENSSL_MANGLER_ASM(OBJ_sn2nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_txt2nid
#  define OBJ_txt2nid OPENSSL_MANGLER(OBJ_txt2nid)
# endif
#else
# ifndef _OBJ_txt2nid
#  define _OBJ_txt2nid OPENSSL_MANGLER_ASM(OBJ_txt2nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OBJ_txt2obj
#  define OBJ_txt2obj OPENSSL_MANGLER(OBJ_txt2obj)
# endif
#else
# ifndef _OBJ_txt2obj
#  define _OBJ_txt2obj OPENSSL_MANGLER_ASM(OBJ_txt2obj)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_add1_ext_i2d
#  define OCSP_BASICRESP_add1_ext_i2d OPENSSL_MANGLER(OCSP_BASICRESP_add1_ext_i2d)
# endif
#else
# ifndef _OCSP_BASICRESP_add1_ext_i2d
#  define _OCSP_BASICRESP_add1_ext_i2d OPENSSL_MANGLER_ASM(OCSP_BASICRESP_add1_ext_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_add_ext
#  define OCSP_BASICRESP_add_ext OPENSSL_MANGLER(OCSP_BASICRESP_add_ext)
# endif
#else
# ifndef _OCSP_BASICRESP_add_ext
#  define _OCSP_BASICRESP_add_ext OPENSSL_MANGLER_ASM(OCSP_BASICRESP_add_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_delete_ext
#  define OCSP_BASICRESP_delete_ext OPENSSL_MANGLER(OCSP_BASICRESP_delete_ext)
# endif
#else
# ifndef _OCSP_BASICRESP_delete_ext
#  define _OCSP_BASICRESP_delete_ext OPENSSL_MANGLER_ASM(OCSP_BASICRESP_delete_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_free
#  define OCSP_BASICRESP_free OPENSSL_MANGLER(OCSP_BASICRESP_free)
# endif
#else
# ifndef _OCSP_BASICRESP_free
#  define _OCSP_BASICRESP_free OPENSSL_MANGLER_ASM(OCSP_BASICRESP_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_get1_ext_d2i
#  define OCSP_BASICRESP_get1_ext_d2i OPENSSL_MANGLER(OCSP_BASICRESP_get1_ext_d2i)
# endif
#else
# ifndef _OCSP_BASICRESP_get1_ext_d2i
#  define _OCSP_BASICRESP_get1_ext_d2i OPENSSL_MANGLER_ASM(OCSP_BASICRESP_get1_ext_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_get_ext
#  define OCSP_BASICRESP_get_ext OPENSSL_MANGLER(OCSP_BASICRESP_get_ext)
# endif
#else
# ifndef _OCSP_BASICRESP_get_ext
#  define _OCSP_BASICRESP_get_ext OPENSSL_MANGLER_ASM(OCSP_BASICRESP_get_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_get_ext_by_NID
#  define OCSP_BASICRESP_get_ext_by_NID OPENSSL_MANGLER(OCSP_BASICRESP_get_ext_by_NID)
# endif
#else
# ifndef _OCSP_BASICRESP_get_ext_by_NID
#  define _OCSP_BASICRESP_get_ext_by_NID OPENSSL_MANGLER_ASM(OCSP_BASICRESP_get_ext_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_get_ext_by_OBJ
#  define OCSP_BASICRESP_get_ext_by_OBJ OPENSSL_MANGLER(OCSP_BASICRESP_get_ext_by_OBJ)
# endif
#else
# ifndef _OCSP_BASICRESP_get_ext_by_OBJ
#  define _OCSP_BASICRESP_get_ext_by_OBJ OPENSSL_MANGLER_ASM(OCSP_BASICRESP_get_ext_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_get_ext_by_critical
#  define OCSP_BASICRESP_get_ext_by_critical OPENSSL_MANGLER(OCSP_BASICRESP_get_ext_by_critical)
# endif
#else
# ifndef _OCSP_BASICRESP_get_ext_by_critical
#  define _OCSP_BASICRESP_get_ext_by_critical OPENSSL_MANGLER_ASM(OCSP_BASICRESP_get_ext_by_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_get_ext_count
#  define OCSP_BASICRESP_get_ext_count OPENSSL_MANGLER(OCSP_BASICRESP_get_ext_count)
# endif
#else
# ifndef _OCSP_BASICRESP_get_ext_count
#  define _OCSP_BASICRESP_get_ext_count OPENSSL_MANGLER_ASM(OCSP_BASICRESP_get_ext_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_it
#  define OCSP_BASICRESP_it OPENSSL_MANGLER(OCSP_BASICRESP_it)
# endif
#else
# ifndef _OCSP_BASICRESP_it
#  define _OCSP_BASICRESP_it OPENSSL_MANGLER_ASM(OCSP_BASICRESP_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_BASICRESP_new
#  define OCSP_BASICRESP_new OPENSSL_MANGLER(OCSP_BASICRESP_new)
# endif
#else
# ifndef _OCSP_BASICRESP_new
#  define _OCSP_BASICRESP_new OPENSSL_MANGLER_ASM(OCSP_BASICRESP_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_CERTID_dup
#  define OCSP_CERTID_dup OPENSSL_MANGLER(OCSP_CERTID_dup)
# endif
#else
# ifndef _OCSP_CERTID_dup
#  define _OCSP_CERTID_dup OPENSSL_MANGLER_ASM(OCSP_CERTID_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_CERTID_free
#  define OCSP_CERTID_free OPENSSL_MANGLER(OCSP_CERTID_free)
# endif
#else
# ifndef _OCSP_CERTID_free
#  define _OCSP_CERTID_free OPENSSL_MANGLER_ASM(OCSP_CERTID_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_CERTID_it
#  define OCSP_CERTID_it OPENSSL_MANGLER(OCSP_CERTID_it)
# endif
#else
# ifndef _OCSP_CERTID_it
#  define _OCSP_CERTID_it OPENSSL_MANGLER_ASM(OCSP_CERTID_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_CERTID_new
#  define OCSP_CERTID_new OPENSSL_MANGLER(OCSP_CERTID_new)
# endif
#else
# ifndef _OCSP_CERTID_new
#  define _OCSP_CERTID_new OPENSSL_MANGLER_ASM(OCSP_CERTID_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_CERTSTATUS_free
#  define OCSP_CERTSTATUS_free OPENSSL_MANGLER(OCSP_CERTSTATUS_free)
# endif
#else
# ifndef _OCSP_CERTSTATUS_free
#  define _OCSP_CERTSTATUS_free OPENSSL_MANGLER_ASM(OCSP_CERTSTATUS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_CERTSTATUS_it
#  define OCSP_CERTSTATUS_it OPENSSL_MANGLER(OCSP_CERTSTATUS_it)
# endif
#else
# ifndef _OCSP_CERTSTATUS_it
#  define _OCSP_CERTSTATUS_it OPENSSL_MANGLER_ASM(OCSP_CERTSTATUS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_CERTSTATUS_new
#  define OCSP_CERTSTATUS_new OPENSSL_MANGLER(OCSP_CERTSTATUS_new)
# endif
#else
# ifndef _OCSP_CERTSTATUS_new
#  define _OCSP_CERTSTATUS_new OPENSSL_MANGLER_ASM(OCSP_CERTSTATUS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_CRLID_free
#  define OCSP_CRLID_free OPENSSL_MANGLER(OCSP_CRLID_free)
# endif
#else
# ifndef _OCSP_CRLID_free
#  define _OCSP_CRLID_free OPENSSL_MANGLER_ASM(OCSP_CRLID_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_CRLID_it
#  define OCSP_CRLID_it OPENSSL_MANGLER(OCSP_CRLID_it)
# endif
#else
# ifndef _OCSP_CRLID_it
#  define _OCSP_CRLID_it OPENSSL_MANGLER_ASM(OCSP_CRLID_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_CRLID_new
#  define OCSP_CRLID_new OPENSSL_MANGLER(OCSP_CRLID_new)
# endif
#else
# ifndef _OCSP_CRLID_new
#  define _OCSP_CRLID_new OPENSSL_MANGLER_ASM(OCSP_CRLID_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_add1_ext_i2d
#  define OCSP_ONEREQ_add1_ext_i2d OPENSSL_MANGLER(OCSP_ONEREQ_add1_ext_i2d)
# endif
#else
# ifndef _OCSP_ONEREQ_add1_ext_i2d
#  define _OCSP_ONEREQ_add1_ext_i2d OPENSSL_MANGLER_ASM(OCSP_ONEREQ_add1_ext_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_add_ext
#  define OCSP_ONEREQ_add_ext OPENSSL_MANGLER(OCSP_ONEREQ_add_ext)
# endif
#else
# ifndef _OCSP_ONEREQ_add_ext
#  define _OCSP_ONEREQ_add_ext OPENSSL_MANGLER_ASM(OCSP_ONEREQ_add_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_delete_ext
#  define OCSP_ONEREQ_delete_ext OPENSSL_MANGLER(OCSP_ONEREQ_delete_ext)
# endif
#else
# ifndef _OCSP_ONEREQ_delete_ext
#  define _OCSP_ONEREQ_delete_ext OPENSSL_MANGLER_ASM(OCSP_ONEREQ_delete_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_free
#  define OCSP_ONEREQ_free OPENSSL_MANGLER(OCSP_ONEREQ_free)
# endif
#else
# ifndef _OCSP_ONEREQ_free
#  define _OCSP_ONEREQ_free OPENSSL_MANGLER_ASM(OCSP_ONEREQ_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_get1_ext_d2i
#  define OCSP_ONEREQ_get1_ext_d2i OPENSSL_MANGLER(OCSP_ONEREQ_get1_ext_d2i)
# endif
#else
# ifndef _OCSP_ONEREQ_get1_ext_d2i
#  define _OCSP_ONEREQ_get1_ext_d2i OPENSSL_MANGLER_ASM(OCSP_ONEREQ_get1_ext_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_get_ext
#  define OCSP_ONEREQ_get_ext OPENSSL_MANGLER(OCSP_ONEREQ_get_ext)
# endif
#else
# ifndef _OCSP_ONEREQ_get_ext
#  define _OCSP_ONEREQ_get_ext OPENSSL_MANGLER_ASM(OCSP_ONEREQ_get_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_get_ext_by_NID
#  define OCSP_ONEREQ_get_ext_by_NID OPENSSL_MANGLER(OCSP_ONEREQ_get_ext_by_NID)
# endif
#else
# ifndef _OCSP_ONEREQ_get_ext_by_NID
#  define _OCSP_ONEREQ_get_ext_by_NID OPENSSL_MANGLER_ASM(OCSP_ONEREQ_get_ext_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_get_ext_by_OBJ
#  define OCSP_ONEREQ_get_ext_by_OBJ OPENSSL_MANGLER(OCSP_ONEREQ_get_ext_by_OBJ)
# endif
#else
# ifndef _OCSP_ONEREQ_get_ext_by_OBJ
#  define _OCSP_ONEREQ_get_ext_by_OBJ OPENSSL_MANGLER_ASM(OCSP_ONEREQ_get_ext_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_get_ext_by_critical
#  define OCSP_ONEREQ_get_ext_by_critical OPENSSL_MANGLER(OCSP_ONEREQ_get_ext_by_critical)
# endif
#else
# ifndef _OCSP_ONEREQ_get_ext_by_critical
#  define _OCSP_ONEREQ_get_ext_by_critical OPENSSL_MANGLER_ASM(OCSP_ONEREQ_get_ext_by_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_get_ext_count
#  define OCSP_ONEREQ_get_ext_count OPENSSL_MANGLER(OCSP_ONEREQ_get_ext_count)
# endif
#else
# ifndef _OCSP_ONEREQ_get_ext_count
#  define _OCSP_ONEREQ_get_ext_count OPENSSL_MANGLER_ASM(OCSP_ONEREQ_get_ext_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_it
#  define OCSP_ONEREQ_it OPENSSL_MANGLER(OCSP_ONEREQ_it)
# endif
#else
# ifndef _OCSP_ONEREQ_it
#  define _OCSP_ONEREQ_it OPENSSL_MANGLER_ASM(OCSP_ONEREQ_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_ONEREQ_new
#  define OCSP_ONEREQ_new OPENSSL_MANGLER(OCSP_ONEREQ_new)
# endif
#else
# ifndef _OCSP_ONEREQ_new
#  define _OCSP_ONEREQ_new OPENSSL_MANGLER_ASM(OCSP_ONEREQ_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQINFO_free
#  define OCSP_REQINFO_free OPENSSL_MANGLER(OCSP_REQINFO_free)
# endif
#else
# ifndef _OCSP_REQINFO_free
#  define _OCSP_REQINFO_free OPENSSL_MANGLER_ASM(OCSP_REQINFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQINFO_it
#  define OCSP_REQINFO_it OPENSSL_MANGLER(OCSP_REQINFO_it)
# endif
#else
# ifndef _OCSP_REQINFO_it
#  define _OCSP_REQINFO_it OPENSSL_MANGLER_ASM(OCSP_REQINFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQINFO_new
#  define OCSP_REQINFO_new OPENSSL_MANGLER(OCSP_REQINFO_new)
# endif
#else
# ifndef _OCSP_REQINFO_new
#  define _OCSP_REQINFO_new OPENSSL_MANGLER_ASM(OCSP_REQINFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_add1_ext_i2d
#  define OCSP_REQUEST_add1_ext_i2d OPENSSL_MANGLER(OCSP_REQUEST_add1_ext_i2d)
# endif
#else
# ifndef _OCSP_REQUEST_add1_ext_i2d
#  define _OCSP_REQUEST_add1_ext_i2d OPENSSL_MANGLER_ASM(OCSP_REQUEST_add1_ext_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_add_ext
#  define OCSP_REQUEST_add_ext OPENSSL_MANGLER(OCSP_REQUEST_add_ext)
# endif
#else
# ifndef _OCSP_REQUEST_add_ext
#  define _OCSP_REQUEST_add_ext OPENSSL_MANGLER_ASM(OCSP_REQUEST_add_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_delete_ext
#  define OCSP_REQUEST_delete_ext OPENSSL_MANGLER(OCSP_REQUEST_delete_ext)
# endif
#else
# ifndef _OCSP_REQUEST_delete_ext
#  define _OCSP_REQUEST_delete_ext OPENSSL_MANGLER_ASM(OCSP_REQUEST_delete_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_free
#  define OCSP_REQUEST_free OPENSSL_MANGLER(OCSP_REQUEST_free)
# endif
#else
# ifndef _OCSP_REQUEST_free
#  define _OCSP_REQUEST_free OPENSSL_MANGLER_ASM(OCSP_REQUEST_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_get1_ext_d2i
#  define OCSP_REQUEST_get1_ext_d2i OPENSSL_MANGLER(OCSP_REQUEST_get1_ext_d2i)
# endif
#else
# ifndef _OCSP_REQUEST_get1_ext_d2i
#  define _OCSP_REQUEST_get1_ext_d2i OPENSSL_MANGLER_ASM(OCSP_REQUEST_get1_ext_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_get_ext
#  define OCSP_REQUEST_get_ext OPENSSL_MANGLER(OCSP_REQUEST_get_ext)
# endif
#else
# ifndef _OCSP_REQUEST_get_ext
#  define _OCSP_REQUEST_get_ext OPENSSL_MANGLER_ASM(OCSP_REQUEST_get_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_get_ext_by_NID
#  define OCSP_REQUEST_get_ext_by_NID OPENSSL_MANGLER(OCSP_REQUEST_get_ext_by_NID)
# endif
#else
# ifndef _OCSP_REQUEST_get_ext_by_NID
#  define _OCSP_REQUEST_get_ext_by_NID OPENSSL_MANGLER_ASM(OCSP_REQUEST_get_ext_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_get_ext_by_OBJ
#  define OCSP_REQUEST_get_ext_by_OBJ OPENSSL_MANGLER(OCSP_REQUEST_get_ext_by_OBJ)
# endif
#else
# ifndef _OCSP_REQUEST_get_ext_by_OBJ
#  define _OCSP_REQUEST_get_ext_by_OBJ OPENSSL_MANGLER_ASM(OCSP_REQUEST_get_ext_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_get_ext_by_critical
#  define OCSP_REQUEST_get_ext_by_critical OPENSSL_MANGLER(OCSP_REQUEST_get_ext_by_critical)
# endif
#else
# ifndef _OCSP_REQUEST_get_ext_by_critical
#  define _OCSP_REQUEST_get_ext_by_critical OPENSSL_MANGLER_ASM(OCSP_REQUEST_get_ext_by_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_get_ext_count
#  define OCSP_REQUEST_get_ext_count OPENSSL_MANGLER(OCSP_REQUEST_get_ext_count)
# endif
#else
# ifndef _OCSP_REQUEST_get_ext_count
#  define _OCSP_REQUEST_get_ext_count OPENSSL_MANGLER_ASM(OCSP_REQUEST_get_ext_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_it
#  define OCSP_REQUEST_it OPENSSL_MANGLER(OCSP_REQUEST_it)
# endif
#else
# ifndef _OCSP_REQUEST_it
#  define _OCSP_REQUEST_it OPENSSL_MANGLER_ASM(OCSP_REQUEST_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_new
#  define OCSP_REQUEST_new OPENSSL_MANGLER(OCSP_REQUEST_new)
# endif
#else
# ifndef _OCSP_REQUEST_new
#  define _OCSP_REQUEST_new OPENSSL_MANGLER_ASM(OCSP_REQUEST_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REQUEST_print
#  define OCSP_REQUEST_print OPENSSL_MANGLER(OCSP_REQUEST_print)
# endif
#else
# ifndef _OCSP_REQUEST_print
#  define _OCSP_REQUEST_print OPENSSL_MANGLER_ASM(OCSP_REQUEST_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPBYTES_free
#  define OCSP_RESPBYTES_free OPENSSL_MANGLER(OCSP_RESPBYTES_free)
# endif
#else
# ifndef _OCSP_RESPBYTES_free
#  define _OCSP_RESPBYTES_free OPENSSL_MANGLER_ASM(OCSP_RESPBYTES_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPBYTES_it
#  define OCSP_RESPBYTES_it OPENSSL_MANGLER(OCSP_RESPBYTES_it)
# endif
#else
# ifndef _OCSP_RESPBYTES_it
#  define _OCSP_RESPBYTES_it OPENSSL_MANGLER_ASM(OCSP_RESPBYTES_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPBYTES_new
#  define OCSP_RESPBYTES_new OPENSSL_MANGLER(OCSP_RESPBYTES_new)
# endif
#else
# ifndef _OCSP_RESPBYTES_new
#  define _OCSP_RESPBYTES_new OPENSSL_MANGLER_ASM(OCSP_RESPBYTES_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPDATA_free
#  define OCSP_RESPDATA_free OPENSSL_MANGLER(OCSP_RESPDATA_free)
# endif
#else
# ifndef _OCSP_RESPDATA_free
#  define _OCSP_RESPDATA_free OPENSSL_MANGLER_ASM(OCSP_RESPDATA_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPDATA_it
#  define OCSP_RESPDATA_it OPENSSL_MANGLER(OCSP_RESPDATA_it)
# endif
#else
# ifndef _OCSP_RESPDATA_it
#  define _OCSP_RESPDATA_it OPENSSL_MANGLER_ASM(OCSP_RESPDATA_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPDATA_new
#  define OCSP_RESPDATA_new OPENSSL_MANGLER(OCSP_RESPDATA_new)
# endif
#else
# ifndef _OCSP_RESPDATA_new
#  define _OCSP_RESPDATA_new OPENSSL_MANGLER_ASM(OCSP_RESPDATA_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPID_free
#  define OCSP_RESPID_free OPENSSL_MANGLER(OCSP_RESPID_free)
# endif
#else
# ifndef _OCSP_RESPID_free
#  define _OCSP_RESPID_free OPENSSL_MANGLER_ASM(OCSP_RESPID_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPID_it
#  define OCSP_RESPID_it OPENSSL_MANGLER(OCSP_RESPID_it)
# endif
#else
# ifndef _OCSP_RESPID_it
#  define _OCSP_RESPID_it OPENSSL_MANGLER_ASM(OCSP_RESPID_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPID_match
#  define OCSP_RESPID_match OPENSSL_MANGLER(OCSP_RESPID_match)
# endif
#else
# ifndef _OCSP_RESPID_match
#  define _OCSP_RESPID_match OPENSSL_MANGLER_ASM(OCSP_RESPID_match)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPID_match_ex
#  define OCSP_RESPID_match_ex OPENSSL_MANGLER(OCSP_RESPID_match_ex)
# endif
#else
# ifndef _OCSP_RESPID_match_ex
#  define _OCSP_RESPID_match_ex OPENSSL_MANGLER_ASM(OCSP_RESPID_match_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPID_new
#  define OCSP_RESPID_new OPENSSL_MANGLER(OCSP_RESPID_new)
# endif
#else
# ifndef _OCSP_RESPID_new
#  define _OCSP_RESPID_new OPENSSL_MANGLER_ASM(OCSP_RESPID_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPID_set_by_key
#  define OCSP_RESPID_set_by_key OPENSSL_MANGLER(OCSP_RESPID_set_by_key)
# endif
#else
# ifndef _OCSP_RESPID_set_by_key
#  define _OCSP_RESPID_set_by_key OPENSSL_MANGLER_ASM(OCSP_RESPID_set_by_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPID_set_by_key_ex
#  define OCSP_RESPID_set_by_key_ex OPENSSL_MANGLER(OCSP_RESPID_set_by_key_ex)
# endif
#else
# ifndef _OCSP_RESPID_set_by_key_ex
#  define _OCSP_RESPID_set_by_key_ex OPENSSL_MANGLER_ASM(OCSP_RESPID_set_by_key_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPID_set_by_name
#  define OCSP_RESPID_set_by_name OPENSSL_MANGLER(OCSP_RESPID_set_by_name)
# endif
#else
# ifndef _OCSP_RESPID_set_by_name
#  define _OCSP_RESPID_set_by_name OPENSSL_MANGLER_ASM(OCSP_RESPID_set_by_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPONSE_free
#  define OCSP_RESPONSE_free OPENSSL_MANGLER(OCSP_RESPONSE_free)
# endif
#else
# ifndef _OCSP_RESPONSE_free
#  define _OCSP_RESPONSE_free OPENSSL_MANGLER_ASM(OCSP_RESPONSE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPONSE_it
#  define OCSP_RESPONSE_it OPENSSL_MANGLER(OCSP_RESPONSE_it)
# endif
#else
# ifndef _OCSP_RESPONSE_it
#  define _OCSP_RESPONSE_it OPENSSL_MANGLER_ASM(OCSP_RESPONSE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPONSE_new
#  define OCSP_RESPONSE_new OPENSSL_MANGLER(OCSP_RESPONSE_new)
# endif
#else
# ifndef _OCSP_RESPONSE_new
#  define _OCSP_RESPONSE_new OPENSSL_MANGLER_ASM(OCSP_RESPONSE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_RESPONSE_print
#  define OCSP_RESPONSE_print OPENSSL_MANGLER(OCSP_RESPONSE_print)
# endif
#else
# ifndef _OCSP_RESPONSE_print
#  define _OCSP_RESPONSE_print OPENSSL_MANGLER_ASM(OCSP_RESPONSE_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REVOKEDINFO_free
#  define OCSP_REVOKEDINFO_free OPENSSL_MANGLER(OCSP_REVOKEDINFO_free)
# endif
#else
# ifndef _OCSP_REVOKEDINFO_free
#  define _OCSP_REVOKEDINFO_free OPENSSL_MANGLER_ASM(OCSP_REVOKEDINFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REVOKEDINFO_it
#  define OCSP_REVOKEDINFO_it OPENSSL_MANGLER(OCSP_REVOKEDINFO_it)
# endif
#else
# ifndef _OCSP_REVOKEDINFO_it
#  define _OCSP_REVOKEDINFO_it OPENSSL_MANGLER_ASM(OCSP_REVOKEDINFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_REVOKEDINFO_new
#  define OCSP_REVOKEDINFO_new OPENSSL_MANGLER(OCSP_REVOKEDINFO_new)
# endif
#else
# ifndef _OCSP_REVOKEDINFO_new
#  define _OCSP_REVOKEDINFO_new OPENSSL_MANGLER_ASM(OCSP_REVOKEDINFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SERVICELOC_free
#  define OCSP_SERVICELOC_free OPENSSL_MANGLER(OCSP_SERVICELOC_free)
# endif
#else
# ifndef _OCSP_SERVICELOC_free
#  define _OCSP_SERVICELOC_free OPENSSL_MANGLER_ASM(OCSP_SERVICELOC_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SERVICELOC_it
#  define OCSP_SERVICELOC_it OPENSSL_MANGLER(OCSP_SERVICELOC_it)
# endif
#else
# ifndef _OCSP_SERVICELOC_it
#  define _OCSP_SERVICELOC_it OPENSSL_MANGLER_ASM(OCSP_SERVICELOC_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SERVICELOC_new
#  define OCSP_SERVICELOC_new OPENSSL_MANGLER(OCSP_SERVICELOC_new)
# endif
#else
# ifndef _OCSP_SERVICELOC_new
#  define _OCSP_SERVICELOC_new OPENSSL_MANGLER_ASM(OCSP_SERVICELOC_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SIGNATURE_free
#  define OCSP_SIGNATURE_free OPENSSL_MANGLER(OCSP_SIGNATURE_free)
# endif
#else
# ifndef _OCSP_SIGNATURE_free
#  define _OCSP_SIGNATURE_free OPENSSL_MANGLER_ASM(OCSP_SIGNATURE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SIGNATURE_it
#  define OCSP_SIGNATURE_it OPENSSL_MANGLER(OCSP_SIGNATURE_it)
# endif
#else
# ifndef _OCSP_SIGNATURE_it
#  define _OCSP_SIGNATURE_it OPENSSL_MANGLER_ASM(OCSP_SIGNATURE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SIGNATURE_new
#  define OCSP_SIGNATURE_new OPENSSL_MANGLER(OCSP_SIGNATURE_new)
# endif
#else
# ifndef _OCSP_SIGNATURE_new
#  define _OCSP_SIGNATURE_new OPENSSL_MANGLER_ASM(OCSP_SIGNATURE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_add1_ext_i2d
#  define OCSP_SINGLERESP_add1_ext_i2d OPENSSL_MANGLER(OCSP_SINGLERESP_add1_ext_i2d)
# endif
#else
# ifndef _OCSP_SINGLERESP_add1_ext_i2d
#  define _OCSP_SINGLERESP_add1_ext_i2d OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_add1_ext_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_add_ext
#  define OCSP_SINGLERESP_add_ext OPENSSL_MANGLER(OCSP_SINGLERESP_add_ext)
# endif
#else
# ifndef _OCSP_SINGLERESP_add_ext
#  define _OCSP_SINGLERESP_add_ext OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_add_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_delete_ext
#  define OCSP_SINGLERESP_delete_ext OPENSSL_MANGLER(OCSP_SINGLERESP_delete_ext)
# endif
#else
# ifndef _OCSP_SINGLERESP_delete_ext
#  define _OCSP_SINGLERESP_delete_ext OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_delete_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_free
#  define OCSP_SINGLERESP_free OPENSSL_MANGLER(OCSP_SINGLERESP_free)
# endif
#else
# ifndef _OCSP_SINGLERESP_free
#  define _OCSP_SINGLERESP_free OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_get0_id
#  define OCSP_SINGLERESP_get0_id OPENSSL_MANGLER(OCSP_SINGLERESP_get0_id)
# endif
#else
# ifndef _OCSP_SINGLERESP_get0_id
#  define _OCSP_SINGLERESP_get0_id OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_get0_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_get1_ext_d2i
#  define OCSP_SINGLERESP_get1_ext_d2i OPENSSL_MANGLER(OCSP_SINGLERESP_get1_ext_d2i)
# endif
#else
# ifndef _OCSP_SINGLERESP_get1_ext_d2i
#  define _OCSP_SINGLERESP_get1_ext_d2i OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_get1_ext_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_get_ext
#  define OCSP_SINGLERESP_get_ext OPENSSL_MANGLER(OCSP_SINGLERESP_get_ext)
# endif
#else
# ifndef _OCSP_SINGLERESP_get_ext
#  define _OCSP_SINGLERESP_get_ext OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_get_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_get_ext_by_NID
#  define OCSP_SINGLERESP_get_ext_by_NID OPENSSL_MANGLER(OCSP_SINGLERESP_get_ext_by_NID)
# endif
#else
# ifndef _OCSP_SINGLERESP_get_ext_by_NID
#  define _OCSP_SINGLERESP_get_ext_by_NID OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_get_ext_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_get_ext_by_OBJ
#  define OCSP_SINGLERESP_get_ext_by_OBJ OPENSSL_MANGLER(OCSP_SINGLERESP_get_ext_by_OBJ)
# endif
#else
# ifndef _OCSP_SINGLERESP_get_ext_by_OBJ
#  define _OCSP_SINGLERESP_get_ext_by_OBJ OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_get_ext_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_get_ext_by_critical
#  define OCSP_SINGLERESP_get_ext_by_critical OPENSSL_MANGLER(OCSP_SINGLERESP_get_ext_by_critical)
# endif
#else
# ifndef _OCSP_SINGLERESP_get_ext_by_critical
#  define _OCSP_SINGLERESP_get_ext_by_critical OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_get_ext_by_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_get_ext_count
#  define OCSP_SINGLERESP_get_ext_count OPENSSL_MANGLER(OCSP_SINGLERESP_get_ext_count)
# endif
#else
# ifndef _OCSP_SINGLERESP_get_ext_count
#  define _OCSP_SINGLERESP_get_ext_count OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_get_ext_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_it
#  define OCSP_SINGLERESP_it OPENSSL_MANGLER(OCSP_SINGLERESP_it)
# endif
#else
# ifndef _OCSP_SINGLERESP_it
#  define _OCSP_SINGLERESP_it OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_SINGLERESP_new
#  define OCSP_SINGLERESP_new OPENSSL_MANGLER(OCSP_SINGLERESP_new)
# endif
#else
# ifndef _OCSP_SINGLERESP_new
#  define _OCSP_SINGLERESP_new OPENSSL_MANGLER_ASM(OCSP_SINGLERESP_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_accept_responses_new
#  define OCSP_accept_responses_new OPENSSL_MANGLER(OCSP_accept_responses_new)
# endif
#else
# ifndef _OCSP_accept_responses_new
#  define _OCSP_accept_responses_new OPENSSL_MANGLER_ASM(OCSP_accept_responses_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_archive_cutoff_new
#  define OCSP_archive_cutoff_new OPENSSL_MANGLER(OCSP_archive_cutoff_new)
# endif
#else
# ifndef _OCSP_archive_cutoff_new
#  define _OCSP_archive_cutoff_new OPENSSL_MANGLER_ASM(OCSP_archive_cutoff_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_basic_add1_cert
#  define OCSP_basic_add1_cert OPENSSL_MANGLER(OCSP_basic_add1_cert)
# endif
#else
# ifndef _OCSP_basic_add1_cert
#  define _OCSP_basic_add1_cert OPENSSL_MANGLER_ASM(OCSP_basic_add1_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_basic_add1_nonce
#  define OCSP_basic_add1_nonce OPENSSL_MANGLER(OCSP_basic_add1_nonce)
# endif
#else
# ifndef _OCSP_basic_add1_nonce
#  define _OCSP_basic_add1_nonce OPENSSL_MANGLER_ASM(OCSP_basic_add1_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_basic_add1_status
#  define OCSP_basic_add1_status OPENSSL_MANGLER(OCSP_basic_add1_status)
# endif
#else
# ifndef _OCSP_basic_add1_status
#  define _OCSP_basic_add1_status OPENSSL_MANGLER_ASM(OCSP_basic_add1_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_basic_sign
#  define OCSP_basic_sign OPENSSL_MANGLER(OCSP_basic_sign)
# endif
#else
# ifndef _OCSP_basic_sign
#  define _OCSP_basic_sign OPENSSL_MANGLER_ASM(OCSP_basic_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_basic_sign_ctx
#  define OCSP_basic_sign_ctx OPENSSL_MANGLER(OCSP_basic_sign_ctx)
# endif
#else
# ifndef _OCSP_basic_sign_ctx
#  define _OCSP_basic_sign_ctx OPENSSL_MANGLER_ASM(OCSP_basic_sign_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_basic_verify
#  define OCSP_basic_verify OPENSSL_MANGLER(OCSP_basic_verify)
# endif
#else
# ifndef _OCSP_basic_verify
#  define _OCSP_basic_verify OPENSSL_MANGLER_ASM(OCSP_basic_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_cert_id_new
#  define OCSP_cert_id_new OPENSSL_MANGLER(OCSP_cert_id_new)
# endif
#else
# ifndef _OCSP_cert_id_new
#  define _OCSP_cert_id_new OPENSSL_MANGLER_ASM(OCSP_cert_id_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_cert_status_str
#  define OCSP_cert_status_str OPENSSL_MANGLER(OCSP_cert_status_str)
# endif
#else
# ifndef _OCSP_cert_status_str
#  define _OCSP_cert_status_str OPENSSL_MANGLER_ASM(OCSP_cert_status_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_cert_to_id
#  define OCSP_cert_to_id OPENSSL_MANGLER(OCSP_cert_to_id)
# endif
#else
# ifndef _OCSP_cert_to_id
#  define _OCSP_cert_to_id OPENSSL_MANGLER_ASM(OCSP_cert_to_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_check_nonce
#  define OCSP_check_nonce OPENSSL_MANGLER(OCSP_check_nonce)
# endif
#else
# ifndef _OCSP_check_nonce
#  define _OCSP_check_nonce OPENSSL_MANGLER_ASM(OCSP_check_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_check_validity
#  define OCSP_check_validity OPENSSL_MANGLER(OCSP_check_validity)
# endif
#else
# ifndef _OCSP_check_validity
#  define _OCSP_check_validity OPENSSL_MANGLER_ASM(OCSP_check_validity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_copy_nonce
#  define OCSP_copy_nonce OPENSSL_MANGLER(OCSP_copy_nonce)
# endif
#else
# ifndef _OCSP_copy_nonce
#  define _OCSP_copy_nonce OPENSSL_MANGLER_ASM(OCSP_copy_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_crlID_new
#  define OCSP_crlID_new OPENSSL_MANGLER(OCSP_crlID_new)
# endif
#else
# ifndef _OCSP_crlID_new
#  define _OCSP_crlID_new OPENSSL_MANGLER_ASM(OCSP_crlID_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_crl_reason_str
#  define OCSP_crl_reason_str OPENSSL_MANGLER(OCSP_crl_reason_str)
# endif
#else
# ifndef _OCSP_crl_reason_str
#  define _OCSP_crl_reason_str OPENSSL_MANGLER_ASM(OCSP_crl_reason_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_id_cmp
#  define OCSP_id_cmp OPENSSL_MANGLER(OCSP_id_cmp)
# endif
#else
# ifndef _OCSP_id_cmp
#  define _OCSP_id_cmp OPENSSL_MANGLER_ASM(OCSP_id_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_id_get0_info
#  define OCSP_id_get0_info OPENSSL_MANGLER(OCSP_id_get0_info)
# endif
#else
# ifndef _OCSP_id_get0_info
#  define _OCSP_id_get0_info OPENSSL_MANGLER_ASM(OCSP_id_get0_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_id_issuer_cmp
#  define OCSP_id_issuer_cmp OPENSSL_MANGLER(OCSP_id_issuer_cmp)
# endif
#else
# ifndef _OCSP_id_issuer_cmp
#  define _OCSP_id_issuer_cmp OPENSSL_MANGLER_ASM(OCSP_id_issuer_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_onereq_get0_id
#  define OCSP_onereq_get0_id OPENSSL_MANGLER(OCSP_onereq_get0_id)
# endif
#else
# ifndef _OCSP_onereq_get0_id
#  define _OCSP_onereq_get0_id OPENSSL_MANGLER_ASM(OCSP_onereq_get0_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_request_add0_id
#  define OCSP_request_add0_id OPENSSL_MANGLER(OCSP_request_add0_id)
# endif
#else
# ifndef _OCSP_request_add0_id
#  define _OCSP_request_add0_id OPENSSL_MANGLER_ASM(OCSP_request_add0_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_request_add1_cert
#  define OCSP_request_add1_cert OPENSSL_MANGLER(OCSP_request_add1_cert)
# endif
#else
# ifndef _OCSP_request_add1_cert
#  define _OCSP_request_add1_cert OPENSSL_MANGLER_ASM(OCSP_request_add1_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_request_add1_nonce
#  define OCSP_request_add1_nonce OPENSSL_MANGLER(OCSP_request_add1_nonce)
# endif
#else
# ifndef _OCSP_request_add1_nonce
#  define _OCSP_request_add1_nonce OPENSSL_MANGLER_ASM(OCSP_request_add1_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_request_is_signed
#  define OCSP_request_is_signed OPENSSL_MANGLER(OCSP_request_is_signed)
# endif
#else
# ifndef _OCSP_request_is_signed
#  define _OCSP_request_is_signed OPENSSL_MANGLER_ASM(OCSP_request_is_signed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_request_onereq_count
#  define OCSP_request_onereq_count OPENSSL_MANGLER(OCSP_request_onereq_count)
# endif
#else
# ifndef _OCSP_request_onereq_count
#  define _OCSP_request_onereq_count OPENSSL_MANGLER_ASM(OCSP_request_onereq_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_request_onereq_get0
#  define OCSP_request_onereq_get0 OPENSSL_MANGLER(OCSP_request_onereq_get0)
# endif
#else
# ifndef _OCSP_request_onereq_get0
#  define _OCSP_request_onereq_get0 OPENSSL_MANGLER_ASM(OCSP_request_onereq_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_request_set1_name
#  define OCSP_request_set1_name OPENSSL_MANGLER(OCSP_request_set1_name)
# endif
#else
# ifndef _OCSP_request_set1_name
#  define _OCSP_request_set1_name OPENSSL_MANGLER_ASM(OCSP_request_set1_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_request_sign
#  define OCSP_request_sign OPENSSL_MANGLER(OCSP_request_sign)
# endif
#else
# ifndef _OCSP_request_sign
#  define _OCSP_request_sign OPENSSL_MANGLER_ASM(OCSP_request_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_request_verify
#  define OCSP_request_verify OPENSSL_MANGLER(OCSP_request_verify)
# endif
#else
# ifndef _OCSP_request_verify
#  define _OCSP_request_verify OPENSSL_MANGLER_ASM(OCSP_request_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_count
#  define OCSP_resp_count OPENSSL_MANGLER(OCSP_resp_count)
# endif
#else
# ifndef _OCSP_resp_count
#  define _OCSP_resp_count OPENSSL_MANGLER_ASM(OCSP_resp_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_find
#  define OCSP_resp_find OPENSSL_MANGLER(OCSP_resp_find)
# endif
#else
# ifndef _OCSP_resp_find
#  define _OCSP_resp_find OPENSSL_MANGLER_ASM(OCSP_resp_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_find_status
#  define OCSP_resp_find_status OPENSSL_MANGLER(OCSP_resp_find_status)
# endif
#else
# ifndef _OCSP_resp_find_status
#  define _OCSP_resp_find_status OPENSSL_MANGLER_ASM(OCSP_resp_find_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_get0
#  define OCSP_resp_get0 OPENSSL_MANGLER(OCSP_resp_get0)
# endif
#else
# ifndef _OCSP_resp_get0
#  define _OCSP_resp_get0 OPENSSL_MANGLER_ASM(OCSP_resp_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_get0_certs
#  define OCSP_resp_get0_certs OPENSSL_MANGLER(OCSP_resp_get0_certs)
# endif
#else
# ifndef _OCSP_resp_get0_certs
#  define _OCSP_resp_get0_certs OPENSSL_MANGLER_ASM(OCSP_resp_get0_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_get0_id
#  define OCSP_resp_get0_id OPENSSL_MANGLER(OCSP_resp_get0_id)
# endif
#else
# ifndef _OCSP_resp_get0_id
#  define _OCSP_resp_get0_id OPENSSL_MANGLER_ASM(OCSP_resp_get0_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_get0_produced_at
#  define OCSP_resp_get0_produced_at OPENSSL_MANGLER(OCSP_resp_get0_produced_at)
# endif
#else
# ifndef _OCSP_resp_get0_produced_at
#  define _OCSP_resp_get0_produced_at OPENSSL_MANGLER_ASM(OCSP_resp_get0_produced_at)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_get0_respdata
#  define OCSP_resp_get0_respdata OPENSSL_MANGLER(OCSP_resp_get0_respdata)
# endif
#else
# ifndef _OCSP_resp_get0_respdata
#  define _OCSP_resp_get0_respdata OPENSSL_MANGLER_ASM(OCSP_resp_get0_respdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_get0_signature
#  define OCSP_resp_get0_signature OPENSSL_MANGLER(OCSP_resp_get0_signature)
# endif
#else
# ifndef _OCSP_resp_get0_signature
#  define _OCSP_resp_get0_signature OPENSSL_MANGLER_ASM(OCSP_resp_get0_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_get0_signer
#  define OCSP_resp_get0_signer OPENSSL_MANGLER(OCSP_resp_get0_signer)
# endif
#else
# ifndef _OCSP_resp_get0_signer
#  define _OCSP_resp_get0_signer OPENSSL_MANGLER_ASM(OCSP_resp_get0_signer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_get0_tbs_sigalg
#  define OCSP_resp_get0_tbs_sigalg OPENSSL_MANGLER(OCSP_resp_get0_tbs_sigalg)
# endif
#else
# ifndef _OCSP_resp_get0_tbs_sigalg
#  define _OCSP_resp_get0_tbs_sigalg OPENSSL_MANGLER_ASM(OCSP_resp_get0_tbs_sigalg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_resp_get1_id
#  define OCSP_resp_get1_id OPENSSL_MANGLER(OCSP_resp_get1_id)
# endif
#else
# ifndef _OCSP_resp_get1_id
#  define _OCSP_resp_get1_id OPENSSL_MANGLER_ASM(OCSP_resp_get1_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_response_create
#  define OCSP_response_create OPENSSL_MANGLER(OCSP_response_create)
# endif
#else
# ifndef _OCSP_response_create
#  define _OCSP_response_create OPENSSL_MANGLER_ASM(OCSP_response_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_response_get1_basic
#  define OCSP_response_get1_basic OPENSSL_MANGLER(OCSP_response_get1_basic)
# endif
#else
# ifndef _OCSP_response_get1_basic
#  define _OCSP_response_get1_basic OPENSSL_MANGLER_ASM(OCSP_response_get1_basic)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_response_status
#  define OCSP_response_status OPENSSL_MANGLER(OCSP_response_status)
# endif
#else
# ifndef _OCSP_response_status
#  define _OCSP_response_status OPENSSL_MANGLER_ASM(OCSP_response_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_response_status_str
#  define OCSP_response_status_str OPENSSL_MANGLER(OCSP_response_status_str)
# endif
#else
# ifndef _OCSP_response_status_str
#  define _OCSP_response_status_str OPENSSL_MANGLER_ASM(OCSP_response_status_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_sendreq_bio
#  define OCSP_sendreq_bio OPENSSL_MANGLER(OCSP_sendreq_bio)
# endif
#else
# ifndef _OCSP_sendreq_bio
#  define _OCSP_sendreq_bio OPENSSL_MANGLER_ASM(OCSP_sendreq_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_sendreq_new
#  define OCSP_sendreq_new OPENSSL_MANGLER(OCSP_sendreq_new)
# endif
#else
# ifndef _OCSP_sendreq_new
#  define _OCSP_sendreq_new OPENSSL_MANGLER_ASM(OCSP_sendreq_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_single_get0_status
#  define OCSP_single_get0_status OPENSSL_MANGLER(OCSP_single_get0_status)
# endif
#else
# ifndef _OCSP_single_get0_status
#  define _OCSP_single_get0_status OPENSSL_MANGLER_ASM(OCSP_single_get0_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OCSP_url_svcloc_new
#  define OCSP_url_svcloc_new OPENSSL_MANGLER(OCSP_url_svcloc_new)
# endif
#else
# ifndef _OCSP_url_svcloc_new
#  define _OCSP_url_svcloc_new OPENSSL_MANGLER_ASM(OCSP_url_svcloc_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_DIR_end
#  define OPENSSL_DIR_end OPENSSL_MANGLER(OPENSSL_DIR_end)
# endif
#else
# ifndef _OPENSSL_DIR_end
#  define _OPENSSL_DIR_end OPENSSL_MANGLER_ASM(OPENSSL_DIR_end)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_DIR_read
#  define OPENSSL_DIR_read OPENSSL_MANGLER(OPENSSL_DIR_read)
# endif
#else
# ifndef _OPENSSL_DIR_read
#  define _OPENSSL_DIR_read OPENSSL_MANGLER_ASM(OPENSSL_DIR_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_INIT_free
#  define OPENSSL_INIT_free OPENSSL_MANGLER(OPENSSL_INIT_free)
# endif
#else
# ifndef _OPENSSL_INIT_free
#  define _OPENSSL_INIT_free OPENSSL_MANGLER_ASM(OPENSSL_INIT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_INIT_new
#  define OPENSSL_INIT_new OPENSSL_MANGLER(OPENSSL_INIT_new)
# endif
#else
# ifndef _OPENSSL_INIT_new
#  define _OPENSSL_INIT_new OPENSSL_MANGLER_ASM(OPENSSL_INIT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_INIT_set_config_appname
#  define OPENSSL_INIT_set_config_appname OPENSSL_MANGLER(OPENSSL_INIT_set_config_appname)
# endif
#else
# ifndef _OPENSSL_INIT_set_config_appname
#  define _OPENSSL_INIT_set_config_appname OPENSSL_MANGLER_ASM(OPENSSL_INIT_set_config_appname)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_INIT_set_config_file_flags
#  define OPENSSL_INIT_set_config_file_flags OPENSSL_MANGLER(OPENSSL_INIT_set_config_file_flags)
# endif
#else
# ifndef _OPENSSL_INIT_set_config_file_flags
#  define _OPENSSL_INIT_set_config_file_flags OPENSSL_MANGLER_ASM(OPENSSL_INIT_set_config_file_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_INIT_set_config_filename
#  define OPENSSL_INIT_set_config_filename OPENSSL_MANGLER(OPENSSL_INIT_set_config_filename)
# endif
#else
# ifndef _OPENSSL_INIT_set_config_filename
#  define _OPENSSL_INIT_set_config_filename OPENSSL_MANGLER_ASM(OPENSSL_INIT_set_config_filename)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_delete
#  define OPENSSL_LH_delete OPENSSL_MANGLER(OPENSSL_LH_delete)
# endif
#else
# ifndef _OPENSSL_LH_delete
#  define _OPENSSL_LH_delete OPENSSL_MANGLER_ASM(OPENSSL_LH_delete)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_doall
#  define OPENSSL_LH_doall OPENSSL_MANGLER(OPENSSL_LH_doall)
# endif
#else
# ifndef _OPENSSL_LH_doall
#  define _OPENSSL_LH_doall OPENSSL_MANGLER_ASM(OPENSSL_LH_doall)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_doall_arg
#  define OPENSSL_LH_doall_arg OPENSSL_MANGLER(OPENSSL_LH_doall_arg)
# endif
#else
# ifndef _OPENSSL_LH_doall_arg
#  define _OPENSSL_LH_doall_arg OPENSSL_MANGLER_ASM(OPENSSL_LH_doall_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_error
#  define OPENSSL_LH_error OPENSSL_MANGLER(OPENSSL_LH_error)
# endif
#else
# ifndef _OPENSSL_LH_error
#  define _OPENSSL_LH_error OPENSSL_MANGLER_ASM(OPENSSL_LH_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_flush
#  define OPENSSL_LH_flush OPENSSL_MANGLER(OPENSSL_LH_flush)
# endif
#else
# ifndef _OPENSSL_LH_flush
#  define _OPENSSL_LH_flush OPENSSL_MANGLER_ASM(OPENSSL_LH_flush)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_free
#  define OPENSSL_LH_free OPENSSL_MANGLER(OPENSSL_LH_free)
# endif
#else
# ifndef _OPENSSL_LH_free
#  define _OPENSSL_LH_free OPENSSL_MANGLER_ASM(OPENSSL_LH_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_get_down_load
#  define OPENSSL_LH_get_down_load OPENSSL_MANGLER(OPENSSL_LH_get_down_load)
# endif
#else
# ifndef _OPENSSL_LH_get_down_load
#  define _OPENSSL_LH_get_down_load OPENSSL_MANGLER_ASM(OPENSSL_LH_get_down_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_insert
#  define OPENSSL_LH_insert OPENSSL_MANGLER(OPENSSL_LH_insert)
# endif
#else
# ifndef _OPENSSL_LH_insert
#  define _OPENSSL_LH_insert OPENSSL_MANGLER_ASM(OPENSSL_LH_insert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_new
#  define OPENSSL_LH_new OPENSSL_MANGLER(OPENSSL_LH_new)
# endif
#else
# ifndef _OPENSSL_LH_new
#  define _OPENSSL_LH_new OPENSSL_MANGLER_ASM(OPENSSL_LH_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_node_stats
#  define OPENSSL_LH_node_stats OPENSSL_MANGLER(OPENSSL_LH_node_stats)
# endif
#else
# ifndef _OPENSSL_LH_node_stats
#  define _OPENSSL_LH_node_stats OPENSSL_MANGLER_ASM(OPENSSL_LH_node_stats)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_node_stats_bio
#  define OPENSSL_LH_node_stats_bio OPENSSL_MANGLER(OPENSSL_LH_node_stats_bio)
# endif
#else
# ifndef _OPENSSL_LH_node_stats_bio
#  define _OPENSSL_LH_node_stats_bio OPENSSL_MANGLER_ASM(OPENSSL_LH_node_stats_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_node_usage_stats
#  define OPENSSL_LH_node_usage_stats OPENSSL_MANGLER(OPENSSL_LH_node_usage_stats)
# endif
#else
# ifndef _OPENSSL_LH_node_usage_stats
#  define _OPENSSL_LH_node_usage_stats OPENSSL_MANGLER_ASM(OPENSSL_LH_node_usage_stats)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_node_usage_stats_bio
#  define OPENSSL_LH_node_usage_stats_bio OPENSSL_MANGLER(OPENSSL_LH_node_usage_stats_bio)
# endif
#else
# ifndef _OPENSSL_LH_node_usage_stats_bio
#  define _OPENSSL_LH_node_usage_stats_bio OPENSSL_MANGLER_ASM(OPENSSL_LH_node_usage_stats_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_num_items
#  define OPENSSL_LH_num_items OPENSSL_MANGLER(OPENSSL_LH_num_items)
# endif
#else
# ifndef _OPENSSL_LH_num_items
#  define _OPENSSL_LH_num_items OPENSSL_MANGLER_ASM(OPENSSL_LH_num_items)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_retrieve
#  define OPENSSL_LH_retrieve OPENSSL_MANGLER(OPENSSL_LH_retrieve)
# endif
#else
# ifndef _OPENSSL_LH_retrieve
#  define _OPENSSL_LH_retrieve OPENSSL_MANGLER_ASM(OPENSSL_LH_retrieve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_set_down_load
#  define OPENSSL_LH_set_down_load OPENSSL_MANGLER(OPENSSL_LH_set_down_load)
# endif
#else
# ifndef _OPENSSL_LH_set_down_load
#  define _OPENSSL_LH_set_down_load OPENSSL_MANGLER_ASM(OPENSSL_LH_set_down_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_stats
#  define OPENSSL_LH_stats OPENSSL_MANGLER(OPENSSL_LH_stats)
# endif
#else
# ifndef _OPENSSL_LH_stats
#  define _OPENSSL_LH_stats OPENSSL_MANGLER_ASM(OPENSSL_LH_stats)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_stats_bio
#  define OPENSSL_LH_stats_bio OPENSSL_MANGLER(OPENSSL_LH_stats_bio)
# endif
#else
# ifndef _OPENSSL_LH_stats_bio
#  define _OPENSSL_LH_stats_bio OPENSSL_MANGLER_ASM(OPENSSL_LH_stats_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_LH_strhash
#  define OPENSSL_LH_strhash OPENSSL_MANGLER(OPENSSL_LH_strhash)
# endif
#else
# ifndef _OPENSSL_LH_strhash
#  define _OPENSSL_LH_strhash OPENSSL_MANGLER_ASM(OPENSSL_LH_strhash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_asc2uni
#  define OPENSSL_asc2uni OPENSSL_MANGLER(OPENSSL_asc2uni)
# endif
#else
# ifndef _OPENSSL_asc2uni
#  define _OPENSSL_asc2uni OPENSSL_MANGLER_ASM(OPENSSL_asc2uni)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_atexit
#  define OPENSSL_atexit OPENSSL_MANGLER(OPENSSL_atexit)
# endif
#else
# ifndef _OPENSSL_atexit
#  define _OPENSSL_atexit OPENSSL_MANGLER_ASM(OPENSSL_atexit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_atomic_add
#  define OPENSSL_atomic_add OPENSSL_MANGLER(OPENSSL_atomic_add)
# endif
#else
# ifndef _OPENSSL_atomic_add
#  define _OPENSSL_atomic_add OPENSSL_MANGLER_ASM(OPENSSL_atomic_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_buf2hexstr
#  define OPENSSL_buf2hexstr OPENSSL_MANGLER(OPENSSL_buf2hexstr)
# endif
#else
# ifndef _OPENSSL_buf2hexstr
#  define _OPENSSL_buf2hexstr OPENSSL_MANGLER_ASM(OPENSSL_buf2hexstr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_buf2hexstr_ex
#  define OPENSSL_buf2hexstr_ex OPENSSL_MANGLER(OPENSSL_buf2hexstr_ex)
# endif
#else
# ifndef _OPENSSL_buf2hexstr_ex
#  define _OPENSSL_buf2hexstr_ex OPENSSL_MANGLER_ASM(OPENSSL_buf2hexstr_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_cipher_name
#  define OPENSSL_cipher_name OPENSSL_MANGLER(OPENSSL_cipher_name)
# endif
#else
# ifndef _OPENSSL_cipher_name
#  define _OPENSSL_cipher_name OPENSSL_MANGLER_ASM(OPENSSL_cipher_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_cleanse
#  define OPENSSL_cleanse OPENSSL_MANGLER(OPENSSL_cleanse)
# endif
#else
# ifndef _OPENSSL_cleanse
#  define _OPENSSL_cleanse OPENSSL_MANGLER_ASM(OPENSSL_cleanse)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_cleanup
#  define OPENSSL_cleanup OPENSSL_MANGLER(OPENSSL_cleanup)
# endif
#else
# ifndef _OPENSSL_cleanup
#  define _OPENSSL_cleanup OPENSSL_MANGLER_ASM(OPENSSL_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_cpuid_setup
#  define OPENSSL_cpuid_setup OPENSSL_MANGLER(OPENSSL_cpuid_setup)
# endif
#else
# ifndef _OPENSSL_cpuid_setup
#  define _OPENSSL_cpuid_setup OPENSSL_MANGLER_ASM(OPENSSL_cpuid_setup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_die
#  define OPENSSL_die OPENSSL_MANGLER(OPENSSL_die)
# endif
#else
# ifndef _OPENSSL_die
#  define _OPENSSL_die OPENSSL_MANGLER_ASM(OPENSSL_die)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_gmtime
#  define OPENSSL_gmtime OPENSSL_MANGLER(OPENSSL_gmtime)
# endif
#else
# ifndef _OPENSSL_gmtime
#  define _OPENSSL_gmtime OPENSSL_MANGLER_ASM(OPENSSL_gmtime)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_gmtime_adj
#  define OPENSSL_gmtime_adj OPENSSL_MANGLER(OPENSSL_gmtime_adj)
# endif
#else
# ifndef _OPENSSL_gmtime_adj
#  define _OPENSSL_gmtime_adj OPENSSL_MANGLER_ASM(OPENSSL_gmtime_adj)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_gmtime_diff
#  define OPENSSL_gmtime_diff OPENSSL_MANGLER(OPENSSL_gmtime_diff)
# endif
#else
# ifndef _OPENSSL_gmtime_diff
#  define _OPENSSL_gmtime_diff OPENSSL_MANGLER_ASM(OPENSSL_gmtime_diff)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_hexchar2int
#  define OPENSSL_hexchar2int OPENSSL_MANGLER(OPENSSL_hexchar2int)
# endif
#else
# ifndef _OPENSSL_hexchar2int
#  define _OPENSSL_hexchar2int OPENSSL_MANGLER_ASM(OPENSSL_hexchar2int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_hexstr2buf
#  define OPENSSL_hexstr2buf OPENSSL_MANGLER(OPENSSL_hexstr2buf)
# endif
#else
# ifndef _OPENSSL_hexstr2buf
#  define _OPENSSL_hexstr2buf OPENSSL_MANGLER_ASM(OPENSSL_hexstr2buf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_hexstr2buf_ex
#  define OPENSSL_hexstr2buf_ex OPENSSL_MANGLER(OPENSSL_hexstr2buf_ex)
# endif
#else
# ifndef _OPENSSL_hexstr2buf_ex
#  define _OPENSSL_hexstr2buf_ex OPENSSL_MANGLER_ASM(OPENSSL_hexstr2buf_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_ia32_cpuid
#  define OPENSSL_ia32_cpuid OPENSSL_MANGLER(OPENSSL_ia32_cpuid)
# endif
#else
# ifndef _OPENSSL_ia32_cpuid
#  define _OPENSSL_ia32_cpuid OPENSSL_MANGLER_ASM(OPENSSL_ia32_cpuid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_ia32_rdrand_bytes
#  define OPENSSL_ia32_rdrand_bytes OPENSSL_MANGLER(OPENSSL_ia32_rdrand_bytes)
# endif
#else
# ifndef _OPENSSL_ia32_rdrand_bytes
#  define _OPENSSL_ia32_rdrand_bytes OPENSSL_MANGLER_ASM(OPENSSL_ia32_rdrand_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_ia32_rdseed_bytes
#  define OPENSSL_ia32_rdseed_bytes OPENSSL_MANGLER(OPENSSL_ia32_rdseed_bytes)
# endif
#else
# ifndef _OPENSSL_ia32_rdseed_bytes
#  define _OPENSSL_ia32_rdseed_bytes OPENSSL_MANGLER_ASM(OPENSSL_ia32_rdseed_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_ia32cap_P
#  define OPENSSL_ia32cap_P OPENSSL_MANGLER(OPENSSL_ia32cap_P)
# endif
#else
# ifndef _OPENSSL_ia32cap_P
#  define _OPENSSL_ia32cap_P OPENSSL_MANGLER_ASM(OPENSSL_ia32cap_P)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_info
#  define OPENSSL_info OPENSSL_MANGLER(OPENSSL_info)
# endif
#else
# ifndef _OPENSSL_info
#  define _OPENSSL_info OPENSSL_MANGLER_ASM(OPENSSL_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_init
#  define OPENSSL_init OPENSSL_MANGLER(OPENSSL_init)
# endif
#else
# ifndef _OPENSSL_init
#  define _OPENSSL_init OPENSSL_MANGLER_ASM(OPENSSL_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_init_crypto
#  define OPENSSL_init_crypto OPENSSL_MANGLER(OPENSSL_init_crypto)
# endif
#else
# ifndef _OPENSSL_init_crypto
#  define _OPENSSL_init_crypto OPENSSL_MANGLER_ASM(OPENSSL_init_crypto)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_init_ssl
#  define OPENSSL_init_ssl OPENSSL_MANGLER(OPENSSL_init_ssl)
# endif
#else
# ifndef _OPENSSL_init_ssl
#  define _OPENSSL_init_ssl OPENSSL_MANGLER_ASM(OPENSSL_init_ssl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_instrument_bus
#  define OPENSSL_instrument_bus OPENSSL_MANGLER(OPENSSL_instrument_bus)
# endif
#else
# ifndef _OPENSSL_instrument_bus
#  define _OPENSSL_instrument_bus OPENSSL_MANGLER_ASM(OPENSSL_instrument_bus)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_instrument_bus2
#  define OPENSSL_instrument_bus2 OPENSSL_MANGLER(OPENSSL_instrument_bus2)
# endif
#else
# ifndef _OPENSSL_instrument_bus2
#  define _OPENSSL_instrument_bus2 OPENSSL_MANGLER_ASM(OPENSSL_instrument_bus2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_isservice
#  define OPENSSL_isservice OPENSSL_MANGLER(OPENSSL_isservice)
# endif
#else
# ifndef _OPENSSL_isservice
#  define _OPENSSL_isservice OPENSSL_MANGLER_ASM(OPENSSL_isservice)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_issetugid
#  define OPENSSL_issetugid OPENSSL_MANGLER(OPENSSL_issetugid)
# endif
#else
# ifndef _OPENSSL_issetugid
#  define _OPENSSL_issetugid OPENSSL_MANGLER_ASM(OPENSSL_issetugid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_load_builtin_modules
#  define OPENSSL_load_builtin_modules OPENSSL_MANGLER(OPENSSL_load_builtin_modules)
# endif
#else
# ifndef _OPENSSL_load_builtin_modules
#  define _OPENSSL_load_builtin_modules OPENSSL_MANGLER_ASM(OPENSSL_load_builtin_modules)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_rdtsc
#  define OPENSSL_rdtsc OPENSSL_MANGLER(OPENSSL_rdtsc)
# endif
#else
# ifndef _OPENSSL_rdtsc
#  define _OPENSSL_rdtsc OPENSSL_MANGLER_ASM(OPENSSL_rdtsc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_showfatal
#  define OPENSSL_showfatal OPENSSL_MANGLER(OPENSSL_showfatal)
# endif
#else
# ifndef _OPENSSL_showfatal
#  define _OPENSSL_showfatal OPENSSL_MANGLER_ASM(OPENSSL_showfatal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_deep_copy
#  define OPENSSL_sk_deep_copy OPENSSL_MANGLER(OPENSSL_sk_deep_copy)
# endif
#else
# ifndef _OPENSSL_sk_deep_copy
#  define _OPENSSL_sk_deep_copy OPENSSL_MANGLER_ASM(OPENSSL_sk_deep_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_delete
#  define OPENSSL_sk_delete OPENSSL_MANGLER(OPENSSL_sk_delete)
# endif
#else
# ifndef _OPENSSL_sk_delete
#  define _OPENSSL_sk_delete OPENSSL_MANGLER_ASM(OPENSSL_sk_delete)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_delete_ptr
#  define OPENSSL_sk_delete_ptr OPENSSL_MANGLER(OPENSSL_sk_delete_ptr)
# endif
#else
# ifndef _OPENSSL_sk_delete_ptr
#  define _OPENSSL_sk_delete_ptr OPENSSL_MANGLER_ASM(OPENSSL_sk_delete_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_dup
#  define OPENSSL_sk_dup OPENSSL_MANGLER(OPENSSL_sk_dup)
# endif
#else
# ifndef _OPENSSL_sk_dup
#  define _OPENSSL_sk_dup OPENSSL_MANGLER_ASM(OPENSSL_sk_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_find
#  define OPENSSL_sk_find OPENSSL_MANGLER(OPENSSL_sk_find)
# endif
#else
# ifndef _OPENSSL_sk_find
#  define _OPENSSL_sk_find OPENSSL_MANGLER_ASM(OPENSSL_sk_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_find_all
#  define OPENSSL_sk_find_all OPENSSL_MANGLER(OPENSSL_sk_find_all)
# endif
#else
# ifndef _OPENSSL_sk_find_all
#  define _OPENSSL_sk_find_all OPENSSL_MANGLER_ASM(OPENSSL_sk_find_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_find_ex
#  define OPENSSL_sk_find_ex OPENSSL_MANGLER(OPENSSL_sk_find_ex)
# endif
#else
# ifndef _OPENSSL_sk_find_ex
#  define _OPENSSL_sk_find_ex OPENSSL_MANGLER_ASM(OPENSSL_sk_find_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_free
#  define OPENSSL_sk_free OPENSSL_MANGLER(OPENSSL_sk_free)
# endif
#else
# ifndef _OPENSSL_sk_free
#  define _OPENSSL_sk_free OPENSSL_MANGLER_ASM(OPENSSL_sk_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_insert
#  define OPENSSL_sk_insert OPENSSL_MANGLER(OPENSSL_sk_insert)
# endif
#else
# ifndef _OPENSSL_sk_insert
#  define _OPENSSL_sk_insert OPENSSL_MANGLER_ASM(OPENSSL_sk_insert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_is_sorted
#  define OPENSSL_sk_is_sorted OPENSSL_MANGLER(OPENSSL_sk_is_sorted)
# endif
#else
# ifndef _OPENSSL_sk_is_sorted
#  define _OPENSSL_sk_is_sorted OPENSSL_MANGLER_ASM(OPENSSL_sk_is_sorted)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_new
#  define OPENSSL_sk_new OPENSSL_MANGLER(OPENSSL_sk_new)
# endif
#else
# ifndef _OPENSSL_sk_new
#  define _OPENSSL_sk_new OPENSSL_MANGLER_ASM(OPENSSL_sk_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_new_null
#  define OPENSSL_sk_new_null OPENSSL_MANGLER(OPENSSL_sk_new_null)
# endif
#else
# ifndef _OPENSSL_sk_new_null
#  define _OPENSSL_sk_new_null OPENSSL_MANGLER_ASM(OPENSSL_sk_new_null)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_new_reserve
#  define OPENSSL_sk_new_reserve OPENSSL_MANGLER(OPENSSL_sk_new_reserve)
# endif
#else
# ifndef _OPENSSL_sk_new_reserve
#  define _OPENSSL_sk_new_reserve OPENSSL_MANGLER_ASM(OPENSSL_sk_new_reserve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_num
#  define OPENSSL_sk_num OPENSSL_MANGLER(OPENSSL_sk_num)
# endif
#else
# ifndef _OPENSSL_sk_num
#  define _OPENSSL_sk_num OPENSSL_MANGLER_ASM(OPENSSL_sk_num)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_pop
#  define OPENSSL_sk_pop OPENSSL_MANGLER(OPENSSL_sk_pop)
# endif
#else
# ifndef _OPENSSL_sk_pop
#  define _OPENSSL_sk_pop OPENSSL_MANGLER_ASM(OPENSSL_sk_pop)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_pop_free
#  define OPENSSL_sk_pop_free OPENSSL_MANGLER(OPENSSL_sk_pop_free)
# endif
#else
# ifndef _OPENSSL_sk_pop_free
#  define _OPENSSL_sk_pop_free OPENSSL_MANGLER_ASM(OPENSSL_sk_pop_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_push
#  define OPENSSL_sk_push OPENSSL_MANGLER(OPENSSL_sk_push)
# endif
#else
# ifndef _OPENSSL_sk_push
#  define _OPENSSL_sk_push OPENSSL_MANGLER_ASM(OPENSSL_sk_push)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_reserve
#  define OPENSSL_sk_reserve OPENSSL_MANGLER(OPENSSL_sk_reserve)
# endif
#else
# ifndef _OPENSSL_sk_reserve
#  define _OPENSSL_sk_reserve OPENSSL_MANGLER_ASM(OPENSSL_sk_reserve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_set
#  define OPENSSL_sk_set OPENSSL_MANGLER(OPENSSL_sk_set)
# endif
#else
# ifndef _OPENSSL_sk_set
#  define _OPENSSL_sk_set OPENSSL_MANGLER_ASM(OPENSSL_sk_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_set_cmp_func
#  define OPENSSL_sk_set_cmp_func OPENSSL_MANGLER(OPENSSL_sk_set_cmp_func)
# endif
#else
# ifndef _OPENSSL_sk_set_cmp_func
#  define _OPENSSL_sk_set_cmp_func OPENSSL_MANGLER_ASM(OPENSSL_sk_set_cmp_func)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_shift
#  define OPENSSL_sk_shift OPENSSL_MANGLER(OPENSSL_sk_shift)
# endif
#else
# ifndef _OPENSSL_sk_shift
#  define _OPENSSL_sk_shift OPENSSL_MANGLER_ASM(OPENSSL_sk_shift)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_sort
#  define OPENSSL_sk_sort OPENSSL_MANGLER(OPENSSL_sk_sort)
# endif
#else
# ifndef _OPENSSL_sk_sort
#  define _OPENSSL_sk_sort OPENSSL_MANGLER_ASM(OPENSSL_sk_sort)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_unshift
#  define OPENSSL_sk_unshift OPENSSL_MANGLER(OPENSSL_sk_unshift)
# endif
#else
# ifndef _OPENSSL_sk_unshift
#  define _OPENSSL_sk_unshift OPENSSL_MANGLER_ASM(OPENSSL_sk_unshift)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_value
#  define OPENSSL_sk_value OPENSSL_MANGLER(OPENSSL_sk_value)
# endif
#else
# ifndef _OPENSSL_sk_value
#  define _OPENSSL_sk_value OPENSSL_MANGLER_ASM(OPENSSL_sk_value)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_sk_zero
#  define OPENSSL_sk_zero OPENSSL_MANGLER(OPENSSL_sk_zero)
# endif
#else
# ifndef _OPENSSL_sk_zero
#  define _OPENSSL_sk_zero OPENSSL_MANGLER_ASM(OPENSSL_sk_zero)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_strcasecmp
#  define OPENSSL_strcasecmp OPENSSL_MANGLER(OPENSSL_strcasecmp)
# endif
#else
# ifndef _OPENSSL_strcasecmp
#  define _OPENSSL_strcasecmp OPENSSL_MANGLER_ASM(OPENSSL_strcasecmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_strlcat
#  define OPENSSL_strlcat OPENSSL_MANGLER(OPENSSL_strlcat)
# endif
#else
# ifndef _OPENSSL_strlcat
#  define _OPENSSL_strlcat OPENSSL_MANGLER_ASM(OPENSSL_strlcat)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_strlcpy
#  define OPENSSL_strlcpy OPENSSL_MANGLER(OPENSSL_strlcpy)
# endif
#else
# ifndef _OPENSSL_strlcpy
#  define _OPENSSL_strlcpy OPENSSL_MANGLER_ASM(OPENSSL_strlcpy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_strncasecmp
#  define OPENSSL_strncasecmp OPENSSL_MANGLER(OPENSSL_strncasecmp)
# endif
#else
# ifndef _OPENSSL_strncasecmp
#  define _OPENSSL_strncasecmp OPENSSL_MANGLER_ASM(OPENSSL_strncasecmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_strnlen
#  define OPENSSL_strnlen OPENSSL_MANGLER(OPENSSL_strnlen)
# endif
#else
# ifndef _OPENSSL_strnlen
#  define _OPENSSL_strnlen OPENSSL_MANGLER_ASM(OPENSSL_strnlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_thread_stop
#  define OPENSSL_thread_stop OPENSSL_MANGLER(OPENSSL_thread_stop)
# endif
#else
# ifndef _OPENSSL_thread_stop
#  define _OPENSSL_thread_stop OPENSSL_MANGLER_ASM(OPENSSL_thread_stop)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_thread_stop_ex
#  define OPENSSL_thread_stop_ex OPENSSL_MANGLER(OPENSSL_thread_stop_ex)
# endif
#else
# ifndef _OPENSSL_thread_stop_ex
#  define _OPENSSL_thread_stop_ex OPENSSL_MANGLER_ASM(OPENSSL_thread_stop_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_uni2asc
#  define OPENSSL_uni2asc OPENSSL_MANGLER(OPENSSL_uni2asc)
# endif
#else
# ifndef _OPENSSL_uni2asc
#  define _OPENSSL_uni2asc OPENSSL_MANGLER_ASM(OPENSSL_uni2asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_uni2utf8
#  define OPENSSL_uni2utf8 OPENSSL_MANGLER(OPENSSL_uni2utf8)
# endif
#else
# ifndef _OPENSSL_uni2utf8
#  define _OPENSSL_uni2utf8 OPENSSL_MANGLER_ASM(OPENSSL_uni2utf8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_utf82uni
#  define OPENSSL_utf82uni OPENSSL_MANGLER(OPENSSL_utf82uni)
# endif
#else
# ifndef _OPENSSL_utf82uni
#  define _OPENSSL_utf82uni OPENSSL_MANGLER_ASM(OPENSSL_utf82uni)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_version_build_metadata
#  define OPENSSL_version_build_metadata OPENSSL_MANGLER(OPENSSL_version_build_metadata)
# endif
#else
# ifndef _OPENSSL_version_build_metadata
#  define _OPENSSL_version_build_metadata OPENSSL_MANGLER_ASM(OPENSSL_version_build_metadata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_version_major
#  define OPENSSL_version_major OPENSSL_MANGLER(OPENSSL_version_major)
# endif
#else
# ifndef _OPENSSL_version_major
#  define _OPENSSL_version_major OPENSSL_MANGLER_ASM(OPENSSL_version_major)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_version_minor
#  define OPENSSL_version_minor OPENSSL_MANGLER(OPENSSL_version_minor)
# endif
#else
# ifndef _OPENSSL_version_minor
#  define _OPENSSL_version_minor OPENSSL_MANGLER_ASM(OPENSSL_version_minor)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_version_patch
#  define OPENSSL_version_patch OPENSSL_MANGLER(OPENSSL_version_patch)
# endif
#else
# ifndef _OPENSSL_version_patch
#  define _OPENSSL_version_patch OPENSSL_MANGLER_ASM(OPENSSL_version_patch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_version_pre_release
#  define OPENSSL_version_pre_release OPENSSL_MANGLER(OPENSSL_version_pre_release)
# endif
#else
# ifndef _OPENSSL_version_pre_release
#  define _OPENSSL_version_pre_release OPENSSL_MANGLER_ASM(OPENSSL_version_pre_release)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OPENSSL_wipe_cpu
#  define OPENSSL_wipe_cpu OPENSSL_MANGLER(OPENSSL_wipe_cpu)
# endif
#else
# ifndef _OPENSSL_wipe_cpu
#  define _OPENSSL_wipe_cpu OPENSSL_MANGLER_ASM(OPENSSL_wipe_cpu)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CAKEYUPDANNCONTENT_free
#  define OSSL_CMP_CAKEYUPDANNCONTENT_free OPENSSL_MANGLER(OSSL_CMP_CAKEYUPDANNCONTENT_free)
# endif
#else
# ifndef _OSSL_CMP_CAKEYUPDANNCONTENT_free
#  define _OSSL_CMP_CAKEYUPDANNCONTENT_free OPENSSL_MANGLER_ASM(OSSL_CMP_CAKEYUPDANNCONTENT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CAKEYUPDANNCONTENT_it
#  define OSSL_CMP_CAKEYUPDANNCONTENT_it OPENSSL_MANGLER(OSSL_CMP_CAKEYUPDANNCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_CAKEYUPDANNCONTENT_it
#  define _OSSL_CMP_CAKEYUPDANNCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_CAKEYUPDANNCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CAKEYUPDANNCONTENT_new
#  define OSSL_CMP_CAKEYUPDANNCONTENT_new OPENSSL_MANGLER(OSSL_CMP_CAKEYUPDANNCONTENT_new)
# endif
#else
# ifndef _OSSL_CMP_CAKEYUPDANNCONTENT_new
#  define _OSSL_CMP_CAKEYUPDANNCONTENT_new OPENSSL_MANGLER_ASM(OSSL_CMP_CAKEYUPDANNCONTENT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTCONFIRMCONTENT_it
#  define OSSL_CMP_CERTCONFIRMCONTENT_it OPENSSL_MANGLER(OSSL_CMP_CERTCONFIRMCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_CERTCONFIRMCONTENT_it
#  define _OSSL_CMP_CERTCONFIRMCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_CERTCONFIRMCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTIFIEDKEYPAIR_free
#  define OSSL_CMP_CERTIFIEDKEYPAIR_free OPENSSL_MANGLER(OSSL_CMP_CERTIFIEDKEYPAIR_free)
# endif
#else
# ifndef _OSSL_CMP_CERTIFIEDKEYPAIR_free
#  define _OSSL_CMP_CERTIFIEDKEYPAIR_free OPENSSL_MANGLER_ASM(OSSL_CMP_CERTIFIEDKEYPAIR_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTIFIEDKEYPAIR_it
#  define OSSL_CMP_CERTIFIEDKEYPAIR_it OPENSSL_MANGLER(OSSL_CMP_CERTIFIEDKEYPAIR_it)
# endif
#else
# ifndef _OSSL_CMP_CERTIFIEDKEYPAIR_it
#  define _OSSL_CMP_CERTIFIEDKEYPAIR_it OPENSSL_MANGLER_ASM(OSSL_CMP_CERTIFIEDKEYPAIR_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTIFIEDKEYPAIR_new
#  define OSSL_CMP_CERTIFIEDKEYPAIR_new OPENSSL_MANGLER(OSSL_CMP_CERTIFIEDKEYPAIR_new)
# endif
#else
# ifndef _OSSL_CMP_CERTIFIEDKEYPAIR_new
#  define _OSSL_CMP_CERTIFIEDKEYPAIR_new OPENSSL_MANGLER_ASM(OSSL_CMP_CERTIFIEDKEYPAIR_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTORENCCERT_free
#  define OSSL_CMP_CERTORENCCERT_free OPENSSL_MANGLER(OSSL_CMP_CERTORENCCERT_free)
# endif
#else
# ifndef _OSSL_CMP_CERTORENCCERT_free
#  define _OSSL_CMP_CERTORENCCERT_free OPENSSL_MANGLER_ASM(OSSL_CMP_CERTORENCCERT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTORENCCERT_it
#  define OSSL_CMP_CERTORENCCERT_it OPENSSL_MANGLER(OSSL_CMP_CERTORENCCERT_it)
# endif
#else
# ifndef _OSSL_CMP_CERTORENCCERT_it
#  define _OSSL_CMP_CERTORENCCERT_it OPENSSL_MANGLER_ASM(OSSL_CMP_CERTORENCCERT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTORENCCERT_new
#  define OSSL_CMP_CERTORENCCERT_new OPENSSL_MANGLER(OSSL_CMP_CERTORENCCERT_new)
# endif
#else
# ifndef _OSSL_CMP_CERTORENCCERT_new
#  define _OSSL_CMP_CERTORENCCERT_new OPENSSL_MANGLER_ASM(OSSL_CMP_CERTORENCCERT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTREPMESSAGE_free
#  define OSSL_CMP_CERTREPMESSAGE_free OPENSSL_MANGLER(OSSL_CMP_CERTREPMESSAGE_free)
# endif
#else
# ifndef _OSSL_CMP_CERTREPMESSAGE_free
#  define _OSSL_CMP_CERTREPMESSAGE_free OPENSSL_MANGLER_ASM(OSSL_CMP_CERTREPMESSAGE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTREPMESSAGE_it
#  define OSSL_CMP_CERTREPMESSAGE_it OPENSSL_MANGLER(OSSL_CMP_CERTREPMESSAGE_it)
# endif
#else
# ifndef _OSSL_CMP_CERTREPMESSAGE_it
#  define _OSSL_CMP_CERTREPMESSAGE_it OPENSSL_MANGLER_ASM(OSSL_CMP_CERTREPMESSAGE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTREPMESSAGE_new
#  define OSSL_CMP_CERTREPMESSAGE_new OPENSSL_MANGLER(OSSL_CMP_CERTREPMESSAGE_new)
# endif
#else
# ifndef _OSSL_CMP_CERTREPMESSAGE_new
#  define _OSSL_CMP_CERTREPMESSAGE_new OPENSSL_MANGLER_ASM(OSSL_CMP_CERTREPMESSAGE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTRESPONSE_free
#  define OSSL_CMP_CERTRESPONSE_free OPENSSL_MANGLER(OSSL_CMP_CERTRESPONSE_free)
# endif
#else
# ifndef _OSSL_CMP_CERTRESPONSE_free
#  define _OSSL_CMP_CERTRESPONSE_free OPENSSL_MANGLER_ASM(OSSL_CMP_CERTRESPONSE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTRESPONSE_it
#  define OSSL_CMP_CERTRESPONSE_it OPENSSL_MANGLER(OSSL_CMP_CERTRESPONSE_it)
# endif
#else
# ifndef _OSSL_CMP_CERTRESPONSE_it
#  define _OSSL_CMP_CERTRESPONSE_it OPENSSL_MANGLER_ASM(OSSL_CMP_CERTRESPONSE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTRESPONSE_new
#  define OSSL_CMP_CERTRESPONSE_new OPENSSL_MANGLER(OSSL_CMP_CERTRESPONSE_new)
# endif
#else
# ifndef _OSSL_CMP_CERTRESPONSE_new
#  define _OSSL_CMP_CERTRESPONSE_new OPENSSL_MANGLER_ASM(OSSL_CMP_CERTRESPONSE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTSTATUS_free
#  define OSSL_CMP_CERTSTATUS_free OPENSSL_MANGLER(OSSL_CMP_CERTSTATUS_free)
# endif
#else
# ifndef _OSSL_CMP_CERTSTATUS_free
#  define _OSSL_CMP_CERTSTATUS_free OPENSSL_MANGLER_ASM(OSSL_CMP_CERTSTATUS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTSTATUS_it
#  define OSSL_CMP_CERTSTATUS_it OPENSSL_MANGLER(OSSL_CMP_CERTSTATUS_it)
# endif
#else
# ifndef _OSSL_CMP_CERTSTATUS_it
#  define _OSSL_CMP_CERTSTATUS_it OPENSSL_MANGLER_ASM(OSSL_CMP_CERTSTATUS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CERTSTATUS_new
#  define OSSL_CMP_CERTSTATUS_new OPENSSL_MANGLER(OSSL_CMP_CERTSTATUS_new)
# endif
#else
# ifndef _OSSL_CMP_CERTSTATUS_new
#  define _OSSL_CMP_CERTSTATUS_new OPENSSL_MANGLER_ASM(OSSL_CMP_CERTSTATUS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CHALLENGE_free
#  define OSSL_CMP_CHALLENGE_free OPENSSL_MANGLER(OSSL_CMP_CHALLENGE_free)
# endif
#else
# ifndef _OSSL_CMP_CHALLENGE_free
#  define _OSSL_CMP_CHALLENGE_free OPENSSL_MANGLER_ASM(OSSL_CMP_CHALLENGE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CHALLENGE_it
#  define OSSL_CMP_CHALLENGE_it OPENSSL_MANGLER(OSSL_CMP_CHALLENGE_it)
# endif
#else
# ifndef _OSSL_CMP_CHALLENGE_it
#  define _OSSL_CMP_CHALLENGE_it OPENSSL_MANGLER_ASM(OSSL_CMP_CHALLENGE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CHALLENGE_new
#  define OSSL_CMP_CHALLENGE_new OPENSSL_MANGLER(OSSL_CMP_CHALLENGE_new)
# endif
#else
# ifndef _OSSL_CMP_CHALLENGE_new
#  define _OSSL_CMP_CHALLENGE_new OPENSSL_MANGLER_ASM(OSSL_CMP_CHALLENGE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CRLANNCONTENT_it
#  define OSSL_CMP_CRLANNCONTENT_it OPENSSL_MANGLER(OSSL_CMP_CRLANNCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_CRLANNCONTENT_it
#  define _OSSL_CMP_CRLANNCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_CRLANNCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_build_cert_chain
#  define OSSL_CMP_CTX_build_cert_chain OPENSSL_MANGLER(OSSL_CMP_CTX_build_cert_chain)
# endif
#else
# ifndef _OSSL_CMP_CTX_build_cert_chain
#  define _OSSL_CMP_CTX_build_cert_chain OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_build_cert_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_free
#  define OSSL_CMP_CTX_free OPENSSL_MANGLER(OSSL_CMP_CTX_free)
# endif
#else
# ifndef _OSSL_CMP_CTX_free
#  define _OSSL_CMP_CTX_free OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get0_newCert
#  define OSSL_CMP_CTX_get0_newCert OPENSSL_MANGLER(OSSL_CMP_CTX_get0_newCert)
# endif
#else
# ifndef _OSSL_CMP_CTX_get0_newCert
#  define _OSSL_CMP_CTX_get0_newCert OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get0_newCert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get0_newPkey
#  define OSSL_CMP_CTX_get0_newPkey OPENSSL_MANGLER(OSSL_CMP_CTX_get0_newPkey)
# endif
#else
# ifndef _OSSL_CMP_CTX_get0_newPkey
#  define _OSSL_CMP_CTX_get0_newPkey OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get0_newPkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get0_statusString
#  define OSSL_CMP_CTX_get0_statusString OPENSSL_MANGLER(OSSL_CMP_CTX_get0_statusString)
# endif
#else
# ifndef _OSSL_CMP_CTX_get0_statusString
#  define _OSSL_CMP_CTX_get0_statusString OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get0_statusString)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get0_trustedStore
#  define OSSL_CMP_CTX_get0_trustedStore OPENSSL_MANGLER(OSSL_CMP_CTX_get0_trustedStore)
# endif
#else
# ifndef _OSSL_CMP_CTX_get0_trustedStore
#  define _OSSL_CMP_CTX_get0_trustedStore OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get0_trustedStore)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get0_untrusted
#  define OSSL_CMP_CTX_get0_untrusted OPENSSL_MANGLER(OSSL_CMP_CTX_get0_untrusted)
# endif
#else
# ifndef _OSSL_CMP_CTX_get0_untrusted
#  define _OSSL_CMP_CTX_get0_untrusted OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get0_untrusted)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get1_caPubs
#  define OSSL_CMP_CTX_get1_caPubs OPENSSL_MANGLER(OSSL_CMP_CTX_get1_caPubs)
# endif
#else
# ifndef _OSSL_CMP_CTX_get1_caPubs
#  define _OSSL_CMP_CTX_get1_caPubs OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get1_caPubs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get1_extraCertsIn
#  define OSSL_CMP_CTX_get1_extraCertsIn OPENSSL_MANGLER(OSSL_CMP_CTX_get1_extraCertsIn)
# endif
#else
# ifndef _OSSL_CMP_CTX_get1_extraCertsIn
#  define _OSSL_CMP_CTX_get1_extraCertsIn OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get1_extraCertsIn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get1_newChain
#  define OSSL_CMP_CTX_get1_newChain OPENSSL_MANGLER(OSSL_CMP_CTX_get1_newChain)
# endif
#else
# ifndef _OSSL_CMP_CTX_get1_newChain
#  define _OSSL_CMP_CTX_get1_newChain OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get1_newChain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get_certConf_cb_arg
#  define OSSL_CMP_CTX_get_certConf_cb_arg OPENSSL_MANGLER(OSSL_CMP_CTX_get_certConf_cb_arg)
# endif
#else
# ifndef _OSSL_CMP_CTX_get_certConf_cb_arg
#  define _OSSL_CMP_CTX_get_certConf_cb_arg OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get_certConf_cb_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get_failInfoCode
#  define OSSL_CMP_CTX_get_failInfoCode OPENSSL_MANGLER(OSSL_CMP_CTX_get_failInfoCode)
# endif
#else
# ifndef _OSSL_CMP_CTX_get_failInfoCode
#  define _OSSL_CMP_CTX_get_failInfoCode OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get_failInfoCode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get_http_cb_arg
#  define OSSL_CMP_CTX_get_http_cb_arg OPENSSL_MANGLER(OSSL_CMP_CTX_get_http_cb_arg)
# endif
#else
# ifndef _OSSL_CMP_CTX_get_http_cb_arg
#  define _OSSL_CMP_CTX_get_http_cb_arg OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get_http_cb_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get_option
#  define OSSL_CMP_CTX_get_option OPENSSL_MANGLER(OSSL_CMP_CTX_get_option)
# endif
#else
# ifndef _OSSL_CMP_CTX_get_option
#  define _OSSL_CMP_CTX_get_option OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get_option)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get_status
#  define OSSL_CMP_CTX_get_status OPENSSL_MANGLER(OSSL_CMP_CTX_get_status)
# endif
#else
# ifndef _OSSL_CMP_CTX_get_status
#  define _OSSL_CMP_CTX_get_status OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_get_transfer_cb_arg
#  define OSSL_CMP_CTX_get_transfer_cb_arg OPENSSL_MANGLER(OSSL_CMP_CTX_get_transfer_cb_arg)
# endif
#else
# ifndef _OSSL_CMP_CTX_get_transfer_cb_arg
#  define _OSSL_CMP_CTX_get_transfer_cb_arg OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_get_transfer_cb_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_new
#  define OSSL_CMP_CTX_new OPENSSL_MANGLER(OSSL_CMP_CTX_new)
# endif
#else
# ifndef _OSSL_CMP_CTX_new
#  define _OSSL_CMP_CTX_new OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_print_errors
#  define OSSL_CMP_CTX_print_errors OPENSSL_MANGLER(OSSL_CMP_CTX_print_errors)
# endif
#else
# ifndef _OSSL_CMP_CTX_print_errors
#  define _OSSL_CMP_CTX_print_errors OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_print_errors)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_push0_geninfo_ITAV
#  define OSSL_CMP_CTX_push0_geninfo_ITAV OPENSSL_MANGLER(OSSL_CMP_CTX_push0_geninfo_ITAV)
# endif
#else
# ifndef _OSSL_CMP_CTX_push0_geninfo_ITAV
#  define _OSSL_CMP_CTX_push0_geninfo_ITAV OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_push0_geninfo_ITAV)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_push0_genm_ITAV
#  define OSSL_CMP_CTX_push0_genm_ITAV OPENSSL_MANGLER(OSSL_CMP_CTX_push0_genm_ITAV)
# endif
#else
# ifndef _OSSL_CMP_CTX_push0_genm_ITAV
#  define _OSSL_CMP_CTX_push0_genm_ITAV OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_push0_genm_ITAV)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_push0_policy
#  define OSSL_CMP_CTX_push0_policy OPENSSL_MANGLER(OSSL_CMP_CTX_push0_policy)
# endif
#else
# ifndef _OSSL_CMP_CTX_push0_policy
#  define _OSSL_CMP_CTX_push0_policy OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_push0_policy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_push1_subjectAltName
#  define OSSL_CMP_CTX_push1_subjectAltName OPENSSL_MANGLER(OSSL_CMP_CTX_push1_subjectAltName)
# endif
#else
# ifndef _OSSL_CMP_CTX_push1_subjectAltName
#  define _OSSL_CMP_CTX_push1_subjectAltName OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_push1_subjectAltName)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_reinit
#  define OSSL_CMP_CTX_reinit OPENSSL_MANGLER(OSSL_CMP_CTX_reinit)
# endif
#else
# ifndef _OSSL_CMP_CTX_reinit
#  define _OSSL_CMP_CTX_reinit OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_reinit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_reqExtensions_have_SAN
#  define OSSL_CMP_CTX_reqExtensions_have_SAN OPENSSL_MANGLER(OSSL_CMP_CTX_reqExtensions_have_SAN)
# endif
#else
# ifndef _OSSL_CMP_CTX_reqExtensions_have_SAN
#  define _OSSL_CMP_CTX_reqExtensions_have_SAN OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_reqExtensions_have_SAN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_server_perform
#  define OSSL_CMP_CTX_server_perform OPENSSL_MANGLER(OSSL_CMP_CTX_server_perform)
# endif
#else
# ifndef _OSSL_CMP_CTX_server_perform
#  define _OSSL_CMP_CTX_server_perform OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_server_perform)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set0_newPkey
#  define OSSL_CMP_CTX_set0_newPkey OPENSSL_MANGLER(OSSL_CMP_CTX_set0_newPkey)
# endif
#else
# ifndef _OSSL_CMP_CTX_set0_newPkey
#  define _OSSL_CMP_CTX_set0_newPkey OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set0_newPkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set0_reqExtensions
#  define OSSL_CMP_CTX_set0_reqExtensions OPENSSL_MANGLER(OSSL_CMP_CTX_set0_reqExtensions)
# endif
#else
# ifndef _OSSL_CMP_CTX_set0_reqExtensions
#  define _OSSL_CMP_CTX_set0_reqExtensions OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set0_reqExtensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set0_trustedStore
#  define OSSL_CMP_CTX_set0_trustedStore OPENSSL_MANGLER(OSSL_CMP_CTX_set0_trustedStore)
# endif
#else
# ifndef _OSSL_CMP_CTX_set0_trustedStore
#  define _OSSL_CMP_CTX_set0_trustedStore OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set0_trustedStore)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_cert
#  define OSSL_CMP_CTX_set1_cert OPENSSL_MANGLER(OSSL_CMP_CTX_set1_cert)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_cert
#  define _OSSL_CMP_CTX_set1_cert OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_expected_sender
#  define OSSL_CMP_CTX_set1_expected_sender OPENSSL_MANGLER(OSSL_CMP_CTX_set1_expected_sender)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_expected_sender
#  define _OSSL_CMP_CTX_set1_expected_sender OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_expected_sender)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_extraCertsOut
#  define OSSL_CMP_CTX_set1_extraCertsOut OPENSSL_MANGLER(OSSL_CMP_CTX_set1_extraCertsOut)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_extraCertsOut
#  define _OSSL_CMP_CTX_set1_extraCertsOut OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_extraCertsOut)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_issuer
#  define OSSL_CMP_CTX_set1_issuer OPENSSL_MANGLER(OSSL_CMP_CTX_set1_issuer)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_issuer
#  define _OSSL_CMP_CTX_set1_issuer OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_no_proxy
#  define OSSL_CMP_CTX_set1_no_proxy OPENSSL_MANGLER(OSSL_CMP_CTX_set1_no_proxy)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_no_proxy
#  define _OSSL_CMP_CTX_set1_no_proxy OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_no_proxy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_oldCert
#  define OSSL_CMP_CTX_set1_oldCert OPENSSL_MANGLER(OSSL_CMP_CTX_set1_oldCert)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_oldCert
#  define _OSSL_CMP_CTX_set1_oldCert OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_oldCert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_p10CSR
#  define OSSL_CMP_CTX_set1_p10CSR OPENSSL_MANGLER(OSSL_CMP_CTX_set1_p10CSR)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_p10CSR
#  define _OSSL_CMP_CTX_set1_p10CSR OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_p10CSR)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_pkey
#  define OSSL_CMP_CTX_set1_pkey OPENSSL_MANGLER(OSSL_CMP_CTX_set1_pkey)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_pkey
#  define _OSSL_CMP_CTX_set1_pkey OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_proxy
#  define OSSL_CMP_CTX_set1_proxy OPENSSL_MANGLER(OSSL_CMP_CTX_set1_proxy)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_proxy
#  define _OSSL_CMP_CTX_set1_proxy OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_proxy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_recipient
#  define OSSL_CMP_CTX_set1_recipient OPENSSL_MANGLER(OSSL_CMP_CTX_set1_recipient)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_recipient
#  define _OSSL_CMP_CTX_set1_recipient OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_recipient)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_referenceValue
#  define OSSL_CMP_CTX_set1_referenceValue OPENSSL_MANGLER(OSSL_CMP_CTX_set1_referenceValue)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_referenceValue
#  define _OSSL_CMP_CTX_set1_referenceValue OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_referenceValue)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_secretValue
#  define OSSL_CMP_CTX_set1_secretValue OPENSSL_MANGLER(OSSL_CMP_CTX_set1_secretValue)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_secretValue
#  define _OSSL_CMP_CTX_set1_secretValue OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_secretValue)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_senderNonce
#  define OSSL_CMP_CTX_set1_senderNonce OPENSSL_MANGLER(OSSL_CMP_CTX_set1_senderNonce)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_senderNonce
#  define _OSSL_CMP_CTX_set1_senderNonce OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_senderNonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_server
#  define OSSL_CMP_CTX_set1_server OPENSSL_MANGLER(OSSL_CMP_CTX_set1_server)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_server
#  define _OSSL_CMP_CTX_set1_server OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_server)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_serverPath
#  define OSSL_CMP_CTX_set1_serverPath OPENSSL_MANGLER(OSSL_CMP_CTX_set1_serverPath)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_serverPath
#  define _OSSL_CMP_CTX_set1_serverPath OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_serverPath)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_srvCert
#  define OSSL_CMP_CTX_set1_srvCert OPENSSL_MANGLER(OSSL_CMP_CTX_set1_srvCert)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_srvCert
#  define _OSSL_CMP_CTX_set1_srvCert OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_srvCert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_subjectName
#  define OSSL_CMP_CTX_set1_subjectName OPENSSL_MANGLER(OSSL_CMP_CTX_set1_subjectName)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_subjectName
#  define _OSSL_CMP_CTX_set1_subjectName OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_subjectName)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_transactionID
#  define OSSL_CMP_CTX_set1_transactionID OPENSSL_MANGLER(OSSL_CMP_CTX_set1_transactionID)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_transactionID
#  define _OSSL_CMP_CTX_set1_transactionID OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_transactionID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set1_untrusted
#  define OSSL_CMP_CTX_set1_untrusted OPENSSL_MANGLER(OSSL_CMP_CTX_set1_untrusted)
# endif
#else
# ifndef _OSSL_CMP_CTX_set1_untrusted
#  define _OSSL_CMP_CTX_set1_untrusted OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set1_untrusted)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set_certConf_cb
#  define OSSL_CMP_CTX_set_certConf_cb OPENSSL_MANGLER(OSSL_CMP_CTX_set_certConf_cb)
# endif
#else
# ifndef _OSSL_CMP_CTX_set_certConf_cb
#  define _OSSL_CMP_CTX_set_certConf_cb OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set_certConf_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set_certConf_cb_arg
#  define OSSL_CMP_CTX_set_certConf_cb_arg OPENSSL_MANGLER(OSSL_CMP_CTX_set_certConf_cb_arg)
# endif
#else
# ifndef _OSSL_CMP_CTX_set_certConf_cb_arg
#  define _OSSL_CMP_CTX_set_certConf_cb_arg OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set_certConf_cb_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set_http_cb
#  define OSSL_CMP_CTX_set_http_cb OPENSSL_MANGLER(OSSL_CMP_CTX_set_http_cb)
# endif
#else
# ifndef _OSSL_CMP_CTX_set_http_cb
#  define _OSSL_CMP_CTX_set_http_cb OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set_http_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set_http_cb_arg
#  define OSSL_CMP_CTX_set_http_cb_arg OPENSSL_MANGLER(OSSL_CMP_CTX_set_http_cb_arg)
# endif
#else
# ifndef _OSSL_CMP_CTX_set_http_cb_arg
#  define _OSSL_CMP_CTX_set_http_cb_arg OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set_http_cb_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set_log_cb
#  define OSSL_CMP_CTX_set_log_cb OPENSSL_MANGLER(OSSL_CMP_CTX_set_log_cb)
# endif
#else
# ifndef _OSSL_CMP_CTX_set_log_cb
#  define _OSSL_CMP_CTX_set_log_cb OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set_log_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set_option
#  define OSSL_CMP_CTX_set_option OPENSSL_MANGLER(OSSL_CMP_CTX_set_option)
# endif
#else
# ifndef _OSSL_CMP_CTX_set_option
#  define _OSSL_CMP_CTX_set_option OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set_option)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set_serverPort
#  define OSSL_CMP_CTX_set_serverPort OPENSSL_MANGLER(OSSL_CMP_CTX_set_serverPort)
# endif
#else
# ifndef _OSSL_CMP_CTX_set_serverPort
#  define _OSSL_CMP_CTX_set_serverPort OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set_serverPort)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set_transfer_cb
#  define OSSL_CMP_CTX_set_transfer_cb OPENSSL_MANGLER(OSSL_CMP_CTX_set_transfer_cb)
# endif
#else
# ifndef _OSSL_CMP_CTX_set_transfer_cb
#  define _OSSL_CMP_CTX_set_transfer_cb OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set_transfer_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_set_transfer_cb_arg
#  define OSSL_CMP_CTX_set_transfer_cb_arg OPENSSL_MANGLER(OSSL_CMP_CTX_set_transfer_cb_arg)
# endif
#else
# ifndef _OSSL_CMP_CTX_set_transfer_cb_arg
#  define _OSSL_CMP_CTX_set_transfer_cb_arg OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_set_transfer_cb_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_setup_CRM
#  define OSSL_CMP_CTX_setup_CRM OPENSSL_MANGLER(OSSL_CMP_CTX_setup_CRM)
# endif
#else
# ifndef _OSSL_CMP_CTX_setup_CRM
#  define _OSSL_CMP_CTX_setup_CRM OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_setup_CRM)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_CTX_snprint_PKIStatus
#  define OSSL_CMP_CTX_snprint_PKIStatus OPENSSL_MANGLER(OSSL_CMP_CTX_snprint_PKIStatus)
# endif
#else
# ifndef _OSSL_CMP_CTX_snprint_PKIStatus
#  define _OSSL_CMP_CTX_snprint_PKIStatus OPENSSL_MANGLER_ASM(OSSL_CMP_CTX_snprint_PKIStatus)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ERRORMSGCONTENT_free
#  define OSSL_CMP_ERRORMSGCONTENT_free OPENSSL_MANGLER(OSSL_CMP_ERRORMSGCONTENT_free)
# endif
#else
# ifndef _OSSL_CMP_ERRORMSGCONTENT_free
#  define _OSSL_CMP_ERRORMSGCONTENT_free OPENSSL_MANGLER_ASM(OSSL_CMP_ERRORMSGCONTENT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ERRORMSGCONTENT_it
#  define OSSL_CMP_ERRORMSGCONTENT_it OPENSSL_MANGLER(OSSL_CMP_ERRORMSGCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_ERRORMSGCONTENT_it
#  define _OSSL_CMP_ERRORMSGCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_ERRORMSGCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ERRORMSGCONTENT_new
#  define OSSL_CMP_ERRORMSGCONTENT_new OPENSSL_MANGLER(OSSL_CMP_ERRORMSGCONTENT_new)
# endif
#else
# ifndef _OSSL_CMP_ERRORMSGCONTENT_new
#  define _OSSL_CMP_ERRORMSGCONTENT_new OPENSSL_MANGLER_ASM(OSSL_CMP_ERRORMSGCONTENT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_GENMSGCONTENT_it
#  define OSSL_CMP_GENMSGCONTENT_it OPENSSL_MANGLER(OSSL_CMP_GENMSGCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_GENMSGCONTENT_it
#  define _OSSL_CMP_GENMSGCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_GENMSGCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_GENREPCONTENT_it
#  define OSSL_CMP_GENREPCONTENT_it OPENSSL_MANGLER(OSSL_CMP_GENREPCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_GENREPCONTENT_it
#  define _OSSL_CMP_GENREPCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_GENREPCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_HDR_get0_recipNonce
#  define OSSL_CMP_HDR_get0_recipNonce OPENSSL_MANGLER(OSSL_CMP_HDR_get0_recipNonce)
# endif
#else
# ifndef _OSSL_CMP_HDR_get0_recipNonce
#  define _OSSL_CMP_HDR_get0_recipNonce OPENSSL_MANGLER_ASM(OSSL_CMP_HDR_get0_recipNonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_HDR_get0_transactionID
#  define OSSL_CMP_HDR_get0_transactionID OPENSSL_MANGLER(OSSL_CMP_HDR_get0_transactionID)
# endif
#else
# ifndef _OSSL_CMP_HDR_get0_transactionID
#  define _OSSL_CMP_HDR_get0_transactionID OPENSSL_MANGLER_ASM(OSSL_CMP_HDR_get0_transactionID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ITAV_create
#  define OSSL_CMP_ITAV_create OPENSSL_MANGLER(OSSL_CMP_ITAV_create)
# endif
#else
# ifndef _OSSL_CMP_ITAV_create
#  define _OSSL_CMP_ITAV_create OPENSSL_MANGLER_ASM(OSSL_CMP_ITAV_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ITAV_dup
#  define OSSL_CMP_ITAV_dup OPENSSL_MANGLER(OSSL_CMP_ITAV_dup)
# endif
#else
# ifndef _OSSL_CMP_ITAV_dup
#  define _OSSL_CMP_ITAV_dup OPENSSL_MANGLER_ASM(OSSL_CMP_ITAV_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ITAV_free
#  define OSSL_CMP_ITAV_free OPENSSL_MANGLER(OSSL_CMP_ITAV_free)
# endif
#else
# ifndef _OSSL_CMP_ITAV_free
#  define _OSSL_CMP_ITAV_free OPENSSL_MANGLER_ASM(OSSL_CMP_ITAV_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ITAV_get0_type
#  define OSSL_CMP_ITAV_get0_type OPENSSL_MANGLER(OSSL_CMP_ITAV_get0_type)
# endif
#else
# ifndef _OSSL_CMP_ITAV_get0_type
#  define _OSSL_CMP_ITAV_get0_type OPENSSL_MANGLER_ASM(OSSL_CMP_ITAV_get0_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ITAV_get0_value
#  define OSSL_CMP_ITAV_get0_value OPENSSL_MANGLER(OSSL_CMP_ITAV_get0_value)
# endif
#else
# ifndef _OSSL_CMP_ITAV_get0_value
#  define _OSSL_CMP_ITAV_get0_value OPENSSL_MANGLER_ASM(OSSL_CMP_ITAV_get0_value)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ITAV_it
#  define OSSL_CMP_ITAV_it OPENSSL_MANGLER(OSSL_CMP_ITAV_it)
# endif
#else
# ifndef _OSSL_CMP_ITAV_it
#  define _OSSL_CMP_ITAV_it OPENSSL_MANGLER_ASM(OSSL_CMP_ITAV_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ITAV_new
#  define OSSL_CMP_ITAV_new OPENSSL_MANGLER(OSSL_CMP_ITAV_new)
# endif
#else
# ifndef _OSSL_CMP_ITAV_new
#  define _OSSL_CMP_ITAV_new OPENSSL_MANGLER_ASM(OSSL_CMP_ITAV_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ITAV_push0_stack_item
#  define OSSL_CMP_ITAV_push0_stack_item OPENSSL_MANGLER(OSSL_CMP_ITAV_push0_stack_item)
# endif
#else
# ifndef _OSSL_CMP_ITAV_push0_stack_item
#  define _OSSL_CMP_ITAV_push0_stack_item OPENSSL_MANGLER_ASM(OSSL_CMP_ITAV_push0_stack_item)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_ITAV_set0
#  define OSSL_CMP_ITAV_set0 OPENSSL_MANGLER(OSSL_CMP_ITAV_set0)
# endif
#else
# ifndef _OSSL_CMP_ITAV_set0
#  define _OSSL_CMP_ITAV_set0 OPENSSL_MANGLER_ASM(OSSL_CMP_ITAV_set0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_KEYRECREPCONTENT_free
#  define OSSL_CMP_KEYRECREPCONTENT_free OPENSSL_MANGLER(OSSL_CMP_KEYRECREPCONTENT_free)
# endif
#else
# ifndef _OSSL_CMP_KEYRECREPCONTENT_free
#  define _OSSL_CMP_KEYRECREPCONTENT_free OPENSSL_MANGLER_ASM(OSSL_CMP_KEYRECREPCONTENT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_KEYRECREPCONTENT_it
#  define OSSL_CMP_KEYRECREPCONTENT_it OPENSSL_MANGLER(OSSL_CMP_KEYRECREPCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_KEYRECREPCONTENT_it
#  define _OSSL_CMP_KEYRECREPCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_KEYRECREPCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_KEYRECREPCONTENT_new
#  define OSSL_CMP_KEYRECREPCONTENT_new OPENSSL_MANGLER(OSSL_CMP_KEYRECREPCONTENT_new)
# endif
#else
# ifndef _OSSL_CMP_KEYRECREPCONTENT_new
#  define _OSSL_CMP_KEYRECREPCONTENT_new OPENSSL_MANGLER_ASM(OSSL_CMP_KEYRECREPCONTENT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_MSGS_it
#  define OSSL_CMP_MSGS_it OPENSSL_MANGLER(OSSL_CMP_MSGS_it)
# endif
#else
# ifndef _OSSL_CMP_MSGS_it
#  define _OSSL_CMP_MSGS_it OPENSSL_MANGLER_ASM(OSSL_CMP_MSGS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_MSG_dup
#  define OSSL_CMP_MSG_dup OPENSSL_MANGLER(OSSL_CMP_MSG_dup)
# endif
#else
# ifndef _OSSL_CMP_MSG_dup
#  define _OSSL_CMP_MSG_dup OPENSSL_MANGLER_ASM(OSSL_CMP_MSG_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_MSG_free
#  define OSSL_CMP_MSG_free OPENSSL_MANGLER(OSSL_CMP_MSG_free)
# endif
#else
# ifndef _OSSL_CMP_MSG_free
#  define _OSSL_CMP_MSG_free OPENSSL_MANGLER_ASM(OSSL_CMP_MSG_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_MSG_get0_header
#  define OSSL_CMP_MSG_get0_header OPENSSL_MANGLER(OSSL_CMP_MSG_get0_header)
# endif
#else
# ifndef _OSSL_CMP_MSG_get0_header
#  define _OSSL_CMP_MSG_get0_header OPENSSL_MANGLER_ASM(OSSL_CMP_MSG_get0_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_MSG_get_bodytype
#  define OSSL_CMP_MSG_get_bodytype OPENSSL_MANGLER(OSSL_CMP_MSG_get_bodytype)
# endif
#else
# ifndef _OSSL_CMP_MSG_get_bodytype
#  define _OSSL_CMP_MSG_get_bodytype OPENSSL_MANGLER_ASM(OSSL_CMP_MSG_get_bodytype)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_MSG_http_perform
#  define OSSL_CMP_MSG_http_perform OPENSSL_MANGLER(OSSL_CMP_MSG_http_perform)
# endif
#else
# ifndef _OSSL_CMP_MSG_http_perform
#  define _OSSL_CMP_MSG_http_perform OPENSSL_MANGLER_ASM(OSSL_CMP_MSG_http_perform)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_MSG_it
#  define OSSL_CMP_MSG_it OPENSSL_MANGLER(OSSL_CMP_MSG_it)
# endif
#else
# ifndef _OSSL_CMP_MSG_it
#  define _OSSL_CMP_MSG_it OPENSSL_MANGLER_ASM(OSSL_CMP_MSG_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_MSG_new
#  define OSSL_CMP_MSG_new OPENSSL_MANGLER(OSSL_CMP_MSG_new)
# endif
#else
# ifndef _OSSL_CMP_MSG_new
#  define _OSSL_CMP_MSG_new OPENSSL_MANGLER_ASM(OSSL_CMP_MSG_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_MSG_read
#  define OSSL_CMP_MSG_read OPENSSL_MANGLER(OSSL_CMP_MSG_read)
# endif
#else
# ifndef _OSSL_CMP_MSG_read
#  define _OSSL_CMP_MSG_read OPENSSL_MANGLER_ASM(OSSL_CMP_MSG_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_MSG_update_transactionID
#  define OSSL_CMP_MSG_update_transactionID OPENSSL_MANGLER(OSSL_CMP_MSG_update_transactionID)
# endif
#else
# ifndef _OSSL_CMP_MSG_update_transactionID
#  define _OSSL_CMP_MSG_update_transactionID OPENSSL_MANGLER_ASM(OSSL_CMP_MSG_update_transactionID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_MSG_write
#  define OSSL_CMP_MSG_write OPENSSL_MANGLER(OSSL_CMP_MSG_write)
# endif
#else
# ifndef _OSSL_CMP_MSG_write
#  define _OSSL_CMP_MSG_write OPENSSL_MANGLER_ASM(OSSL_CMP_MSG_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PKIBODY_free
#  define OSSL_CMP_PKIBODY_free OPENSSL_MANGLER(OSSL_CMP_PKIBODY_free)
# endif
#else
# ifndef _OSSL_CMP_PKIBODY_free
#  define _OSSL_CMP_PKIBODY_free OPENSSL_MANGLER_ASM(OSSL_CMP_PKIBODY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PKIBODY_it
#  define OSSL_CMP_PKIBODY_it OPENSSL_MANGLER(OSSL_CMP_PKIBODY_it)
# endif
#else
# ifndef _OSSL_CMP_PKIBODY_it
#  define _OSSL_CMP_PKIBODY_it OPENSSL_MANGLER_ASM(OSSL_CMP_PKIBODY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PKIBODY_new
#  define OSSL_CMP_PKIBODY_new OPENSSL_MANGLER(OSSL_CMP_PKIBODY_new)
# endif
#else
# ifndef _OSSL_CMP_PKIBODY_new
#  define _OSSL_CMP_PKIBODY_new OPENSSL_MANGLER_ASM(OSSL_CMP_PKIBODY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PKIHEADER_free
#  define OSSL_CMP_PKIHEADER_free OPENSSL_MANGLER(OSSL_CMP_PKIHEADER_free)
# endif
#else
# ifndef _OSSL_CMP_PKIHEADER_free
#  define _OSSL_CMP_PKIHEADER_free OPENSSL_MANGLER_ASM(OSSL_CMP_PKIHEADER_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PKIHEADER_it
#  define OSSL_CMP_PKIHEADER_it OPENSSL_MANGLER(OSSL_CMP_PKIHEADER_it)
# endif
#else
# ifndef _OSSL_CMP_PKIHEADER_it
#  define _OSSL_CMP_PKIHEADER_it OPENSSL_MANGLER_ASM(OSSL_CMP_PKIHEADER_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PKIHEADER_new
#  define OSSL_CMP_PKIHEADER_new OPENSSL_MANGLER(OSSL_CMP_PKIHEADER_new)
# endif
#else
# ifndef _OSSL_CMP_PKIHEADER_new
#  define _OSSL_CMP_PKIHEADER_new OPENSSL_MANGLER_ASM(OSSL_CMP_PKIHEADER_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PKISI_dup
#  define OSSL_CMP_PKISI_dup OPENSSL_MANGLER(OSSL_CMP_PKISI_dup)
# endif
#else
# ifndef _OSSL_CMP_PKISI_dup
#  define _OSSL_CMP_PKISI_dup OPENSSL_MANGLER_ASM(OSSL_CMP_PKISI_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PKISI_free
#  define OSSL_CMP_PKISI_free OPENSSL_MANGLER(OSSL_CMP_PKISI_free)
# endif
#else
# ifndef _OSSL_CMP_PKISI_free
#  define _OSSL_CMP_PKISI_free OPENSSL_MANGLER_ASM(OSSL_CMP_PKISI_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PKISI_it
#  define OSSL_CMP_PKISI_it OPENSSL_MANGLER(OSSL_CMP_PKISI_it)
# endif
#else
# ifndef _OSSL_CMP_PKISI_it
#  define _OSSL_CMP_PKISI_it OPENSSL_MANGLER_ASM(OSSL_CMP_PKISI_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PKISI_new
#  define OSSL_CMP_PKISI_new OPENSSL_MANGLER(OSSL_CMP_PKISI_new)
# endif
#else
# ifndef _OSSL_CMP_PKISI_new
#  define _OSSL_CMP_PKISI_new OPENSSL_MANGLER_ASM(OSSL_CMP_PKISI_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PKISTATUS_it
#  define OSSL_CMP_PKISTATUS_it OPENSSL_MANGLER(OSSL_CMP_PKISTATUS_it)
# endif
#else
# ifndef _OSSL_CMP_PKISTATUS_it
#  define _OSSL_CMP_PKISTATUS_it OPENSSL_MANGLER_ASM(OSSL_CMP_PKISTATUS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_POLLREPCONTENT_it
#  define OSSL_CMP_POLLREPCONTENT_it OPENSSL_MANGLER(OSSL_CMP_POLLREPCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_POLLREPCONTENT_it
#  define _OSSL_CMP_POLLREPCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_POLLREPCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_POLLREP_free
#  define OSSL_CMP_POLLREP_free OPENSSL_MANGLER(OSSL_CMP_POLLREP_free)
# endif
#else
# ifndef _OSSL_CMP_POLLREP_free
#  define _OSSL_CMP_POLLREP_free OPENSSL_MANGLER_ASM(OSSL_CMP_POLLREP_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_POLLREP_it
#  define OSSL_CMP_POLLREP_it OPENSSL_MANGLER(OSSL_CMP_POLLREP_it)
# endif
#else
# ifndef _OSSL_CMP_POLLREP_it
#  define _OSSL_CMP_POLLREP_it OPENSSL_MANGLER_ASM(OSSL_CMP_POLLREP_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_POLLREP_new
#  define OSSL_CMP_POLLREP_new OPENSSL_MANGLER(OSSL_CMP_POLLREP_new)
# endif
#else
# ifndef _OSSL_CMP_POLLREP_new
#  define _OSSL_CMP_POLLREP_new OPENSSL_MANGLER_ASM(OSSL_CMP_POLLREP_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_POLLREQCONTENT_it
#  define OSSL_CMP_POLLREQCONTENT_it OPENSSL_MANGLER(OSSL_CMP_POLLREQCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_POLLREQCONTENT_it
#  define _OSSL_CMP_POLLREQCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_POLLREQCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_POLLREQ_free
#  define OSSL_CMP_POLLREQ_free OPENSSL_MANGLER(OSSL_CMP_POLLREQ_free)
# endif
#else
# ifndef _OSSL_CMP_POLLREQ_free
#  define _OSSL_CMP_POLLREQ_free OPENSSL_MANGLER_ASM(OSSL_CMP_POLLREQ_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_POLLREQ_it
#  define OSSL_CMP_POLLREQ_it OPENSSL_MANGLER(OSSL_CMP_POLLREQ_it)
# endif
#else
# ifndef _OSSL_CMP_POLLREQ_it
#  define _OSSL_CMP_POLLREQ_it OPENSSL_MANGLER_ASM(OSSL_CMP_POLLREQ_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_POLLREQ_new
#  define OSSL_CMP_POLLREQ_new OPENSSL_MANGLER(OSSL_CMP_POLLREQ_new)
# endif
#else
# ifndef _OSSL_CMP_POLLREQ_new
#  define _OSSL_CMP_POLLREQ_new OPENSSL_MANGLER_ASM(OSSL_CMP_POLLREQ_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_POPODECKEYCHALLCONTENT_it
#  define OSSL_CMP_POPODECKEYCHALLCONTENT_it OPENSSL_MANGLER(OSSL_CMP_POPODECKEYCHALLCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_POPODECKEYCHALLCONTENT_it
#  define _OSSL_CMP_POPODECKEYCHALLCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_POPODECKEYCHALLCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_POPODECKEYRESPCONTENT_it
#  define OSSL_CMP_POPODECKEYRESPCONTENT_it OPENSSL_MANGLER(OSSL_CMP_POPODECKEYRESPCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_POPODECKEYRESPCONTENT_it
#  define _OSSL_CMP_POPODECKEYRESPCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_POPODECKEYRESPCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PROTECTEDPART_free
#  define OSSL_CMP_PROTECTEDPART_free OPENSSL_MANGLER(OSSL_CMP_PROTECTEDPART_free)
# endif
#else
# ifndef _OSSL_CMP_PROTECTEDPART_free
#  define _OSSL_CMP_PROTECTEDPART_free OPENSSL_MANGLER_ASM(OSSL_CMP_PROTECTEDPART_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PROTECTEDPART_it
#  define OSSL_CMP_PROTECTEDPART_it OPENSSL_MANGLER(OSSL_CMP_PROTECTEDPART_it)
# endif
#else
# ifndef _OSSL_CMP_PROTECTEDPART_it
#  define _OSSL_CMP_PROTECTEDPART_it OPENSSL_MANGLER_ASM(OSSL_CMP_PROTECTEDPART_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_PROTECTEDPART_new
#  define OSSL_CMP_PROTECTEDPART_new OPENSSL_MANGLER(OSSL_CMP_PROTECTEDPART_new)
# endif
#else
# ifndef _OSSL_CMP_PROTECTEDPART_new
#  define _OSSL_CMP_PROTECTEDPART_new OPENSSL_MANGLER_ASM(OSSL_CMP_PROTECTEDPART_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_REVANNCONTENT_free
#  define OSSL_CMP_REVANNCONTENT_free OPENSSL_MANGLER(OSSL_CMP_REVANNCONTENT_free)
# endif
#else
# ifndef _OSSL_CMP_REVANNCONTENT_free
#  define _OSSL_CMP_REVANNCONTENT_free OPENSSL_MANGLER_ASM(OSSL_CMP_REVANNCONTENT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_REVANNCONTENT_it
#  define OSSL_CMP_REVANNCONTENT_it OPENSSL_MANGLER(OSSL_CMP_REVANNCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_REVANNCONTENT_it
#  define _OSSL_CMP_REVANNCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_REVANNCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_REVANNCONTENT_new
#  define OSSL_CMP_REVANNCONTENT_new OPENSSL_MANGLER(OSSL_CMP_REVANNCONTENT_new)
# endif
#else
# ifndef _OSSL_CMP_REVANNCONTENT_new
#  define _OSSL_CMP_REVANNCONTENT_new OPENSSL_MANGLER_ASM(OSSL_CMP_REVANNCONTENT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_REVDETAILS_free
#  define OSSL_CMP_REVDETAILS_free OPENSSL_MANGLER(OSSL_CMP_REVDETAILS_free)
# endif
#else
# ifndef _OSSL_CMP_REVDETAILS_free
#  define _OSSL_CMP_REVDETAILS_free OPENSSL_MANGLER_ASM(OSSL_CMP_REVDETAILS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_REVDETAILS_it
#  define OSSL_CMP_REVDETAILS_it OPENSSL_MANGLER(OSSL_CMP_REVDETAILS_it)
# endif
#else
# ifndef _OSSL_CMP_REVDETAILS_it
#  define _OSSL_CMP_REVDETAILS_it OPENSSL_MANGLER_ASM(OSSL_CMP_REVDETAILS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_REVDETAILS_new
#  define OSSL_CMP_REVDETAILS_new OPENSSL_MANGLER(OSSL_CMP_REVDETAILS_new)
# endif
#else
# ifndef _OSSL_CMP_REVDETAILS_new
#  define _OSSL_CMP_REVDETAILS_new OPENSSL_MANGLER_ASM(OSSL_CMP_REVDETAILS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_REVREPCONTENT_free
#  define OSSL_CMP_REVREPCONTENT_free OPENSSL_MANGLER(OSSL_CMP_REVREPCONTENT_free)
# endif
#else
# ifndef _OSSL_CMP_REVREPCONTENT_free
#  define _OSSL_CMP_REVREPCONTENT_free OPENSSL_MANGLER_ASM(OSSL_CMP_REVREPCONTENT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_REVREPCONTENT_it
#  define OSSL_CMP_REVREPCONTENT_it OPENSSL_MANGLER(OSSL_CMP_REVREPCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_REVREPCONTENT_it
#  define _OSSL_CMP_REVREPCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_REVREPCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_REVREPCONTENT_new
#  define OSSL_CMP_REVREPCONTENT_new OPENSSL_MANGLER(OSSL_CMP_REVREPCONTENT_new)
# endif
#else
# ifndef _OSSL_CMP_REVREPCONTENT_new
#  define _OSSL_CMP_REVREPCONTENT_new OPENSSL_MANGLER_ASM(OSSL_CMP_REVREPCONTENT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_REVREQCONTENT_it
#  define OSSL_CMP_REVREQCONTENT_it OPENSSL_MANGLER(OSSL_CMP_REVREQCONTENT_it)
# endif
#else
# ifndef _OSSL_CMP_REVREQCONTENT_it
#  define _OSSL_CMP_REVREQCONTENT_it OPENSSL_MANGLER_ASM(OSSL_CMP_REVREQCONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_SRV_CTX_free
#  define OSSL_CMP_SRV_CTX_free OPENSSL_MANGLER(OSSL_CMP_SRV_CTX_free)
# endif
#else
# ifndef _OSSL_CMP_SRV_CTX_free
#  define _OSSL_CMP_SRV_CTX_free OPENSSL_MANGLER_ASM(OSSL_CMP_SRV_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_SRV_CTX_get0_cmp_ctx
#  define OSSL_CMP_SRV_CTX_get0_cmp_ctx OPENSSL_MANGLER(OSSL_CMP_SRV_CTX_get0_cmp_ctx)
# endif
#else
# ifndef _OSSL_CMP_SRV_CTX_get0_cmp_ctx
#  define _OSSL_CMP_SRV_CTX_get0_cmp_ctx OPENSSL_MANGLER_ASM(OSSL_CMP_SRV_CTX_get0_cmp_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_SRV_CTX_get0_custom_ctx
#  define OSSL_CMP_SRV_CTX_get0_custom_ctx OPENSSL_MANGLER(OSSL_CMP_SRV_CTX_get0_custom_ctx)
# endif
#else
# ifndef _OSSL_CMP_SRV_CTX_get0_custom_ctx
#  define _OSSL_CMP_SRV_CTX_get0_custom_ctx OPENSSL_MANGLER_ASM(OSSL_CMP_SRV_CTX_get0_custom_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_SRV_CTX_init
#  define OSSL_CMP_SRV_CTX_init OPENSSL_MANGLER(OSSL_CMP_SRV_CTX_init)
# endif
#else
# ifndef _OSSL_CMP_SRV_CTX_init
#  define _OSSL_CMP_SRV_CTX_init OPENSSL_MANGLER_ASM(OSSL_CMP_SRV_CTX_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_SRV_CTX_new
#  define OSSL_CMP_SRV_CTX_new OPENSSL_MANGLER(OSSL_CMP_SRV_CTX_new)
# endif
#else
# ifndef _OSSL_CMP_SRV_CTX_new
#  define _OSSL_CMP_SRV_CTX_new OPENSSL_MANGLER_ASM(OSSL_CMP_SRV_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_SRV_CTX_set_accept_raverified
#  define OSSL_CMP_SRV_CTX_set_accept_raverified OPENSSL_MANGLER(OSSL_CMP_SRV_CTX_set_accept_raverified)
# endif
#else
# ifndef _OSSL_CMP_SRV_CTX_set_accept_raverified
#  define _OSSL_CMP_SRV_CTX_set_accept_raverified OPENSSL_MANGLER_ASM(OSSL_CMP_SRV_CTX_set_accept_raverified)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_SRV_CTX_set_accept_unprotected
#  define OSSL_CMP_SRV_CTX_set_accept_unprotected OPENSSL_MANGLER(OSSL_CMP_SRV_CTX_set_accept_unprotected)
# endif
#else
# ifndef _OSSL_CMP_SRV_CTX_set_accept_unprotected
#  define _OSSL_CMP_SRV_CTX_set_accept_unprotected OPENSSL_MANGLER_ASM(OSSL_CMP_SRV_CTX_set_accept_unprotected)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_SRV_CTX_set_grant_implicit_confirm
#  define OSSL_CMP_SRV_CTX_set_grant_implicit_confirm OPENSSL_MANGLER(OSSL_CMP_SRV_CTX_set_grant_implicit_confirm)
# endif
#else
# ifndef _OSSL_CMP_SRV_CTX_set_grant_implicit_confirm
#  define _OSSL_CMP_SRV_CTX_set_grant_implicit_confirm OPENSSL_MANGLER_ASM(OSSL_CMP_SRV_CTX_set_grant_implicit_confirm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_SRV_CTX_set_send_unprotected_errors
#  define OSSL_CMP_SRV_CTX_set_send_unprotected_errors OPENSSL_MANGLER(OSSL_CMP_SRV_CTX_set_send_unprotected_errors)
# endif
#else
# ifndef _OSSL_CMP_SRV_CTX_set_send_unprotected_errors
#  define _OSSL_CMP_SRV_CTX_set_send_unprotected_errors OPENSSL_MANGLER_ASM(OSSL_CMP_SRV_CTX_set_send_unprotected_errors)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_SRV_process_request
#  define OSSL_CMP_SRV_process_request OPENSSL_MANGLER(OSSL_CMP_SRV_process_request)
# endif
#else
# ifndef _OSSL_CMP_SRV_process_request
#  define _OSSL_CMP_SRV_process_request OPENSSL_MANGLER_ASM(OSSL_CMP_SRV_process_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_STATUSINFO_new
#  define OSSL_CMP_STATUSINFO_new OPENSSL_MANGLER(OSSL_CMP_STATUSINFO_new)
# endif
#else
# ifndef _OSSL_CMP_STATUSINFO_new
#  define _OSSL_CMP_STATUSINFO_new OPENSSL_MANGLER_ASM(OSSL_CMP_STATUSINFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_certConf_cb
#  define OSSL_CMP_certConf_cb OPENSSL_MANGLER(OSSL_CMP_certConf_cb)
# endif
#else
# ifndef _OSSL_CMP_certConf_cb
#  define _OSSL_CMP_certConf_cb OPENSSL_MANGLER_ASM(OSSL_CMP_certConf_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_exec_GENM_ses
#  define OSSL_CMP_exec_GENM_ses OPENSSL_MANGLER(OSSL_CMP_exec_GENM_ses)
# endif
#else
# ifndef _OSSL_CMP_exec_GENM_ses
#  define _OSSL_CMP_exec_GENM_ses OPENSSL_MANGLER_ASM(OSSL_CMP_exec_GENM_ses)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_exec_RR_ses
#  define OSSL_CMP_exec_RR_ses OPENSSL_MANGLER(OSSL_CMP_exec_RR_ses)
# endif
#else
# ifndef _OSSL_CMP_exec_RR_ses
#  define _OSSL_CMP_exec_RR_ses OPENSSL_MANGLER_ASM(OSSL_CMP_exec_RR_ses)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_exec_certreq
#  define OSSL_CMP_exec_certreq OPENSSL_MANGLER(OSSL_CMP_exec_certreq)
# endif
#else
# ifndef _OSSL_CMP_exec_certreq
#  define _OSSL_CMP_exec_certreq OPENSSL_MANGLER_ASM(OSSL_CMP_exec_certreq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_log_close
#  define OSSL_CMP_log_close OPENSSL_MANGLER(OSSL_CMP_log_close)
# endif
#else
# ifndef _OSSL_CMP_log_close
#  define _OSSL_CMP_log_close OPENSSL_MANGLER_ASM(OSSL_CMP_log_close)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_log_open
#  define OSSL_CMP_log_open OPENSSL_MANGLER(OSSL_CMP_log_open)
# endif
#else
# ifndef _OSSL_CMP_log_open
#  define _OSSL_CMP_log_open OPENSSL_MANGLER_ASM(OSSL_CMP_log_open)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_print_errors_cb
#  define OSSL_CMP_print_errors_cb OPENSSL_MANGLER(OSSL_CMP_print_errors_cb)
# endif
#else
# ifndef _OSSL_CMP_print_errors_cb
#  define _OSSL_CMP_print_errors_cb OPENSSL_MANGLER_ASM(OSSL_CMP_print_errors_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_print_to_bio
#  define OSSL_CMP_print_to_bio OPENSSL_MANGLER(OSSL_CMP_print_to_bio)
# endif
#else
# ifndef _OSSL_CMP_print_to_bio
#  define _OSSL_CMP_print_to_bio OPENSSL_MANGLER_ASM(OSSL_CMP_print_to_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_snprint_PKIStatusInfo
#  define OSSL_CMP_snprint_PKIStatusInfo OPENSSL_MANGLER(OSSL_CMP_snprint_PKIStatusInfo)
# endif
#else
# ifndef _OSSL_CMP_snprint_PKIStatusInfo
#  define _OSSL_CMP_snprint_PKIStatusInfo OPENSSL_MANGLER_ASM(OSSL_CMP_snprint_PKIStatusInfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_try_certreq
#  define OSSL_CMP_try_certreq OPENSSL_MANGLER(OSSL_CMP_try_certreq)
# endif
#else
# ifndef _OSSL_CMP_try_certreq
#  define _OSSL_CMP_try_certreq OPENSSL_MANGLER_ASM(OSSL_CMP_try_certreq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_validate_cert_path
#  define OSSL_CMP_validate_cert_path OPENSSL_MANGLER(OSSL_CMP_validate_cert_path)
# endif
#else
# ifndef _OSSL_CMP_validate_cert_path
#  define _OSSL_CMP_validate_cert_path OPENSSL_MANGLER_ASM(OSSL_CMP_validate_cert_path)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CMP_validate_msg
#  define OSSL_CMP_validate_msg OPENSSL_MANGLER(OSSL_CMP_validate_msg)
# endif
#else
# ifndef _OSSL_CMP_validate_msg
#  define _OSSL_CMP_validate_msg OPENSSL_MANGLER_ASM(OSSL_CMP_validate_msg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ATTRIBUTETYPEANDVALUE_dup
#  define OSSL_CRMF_ATTRIBUTETYPEANDVALUE_dup OPENSSL_MANGLER(OSSL_CRMF_ATTRIBUTETYPEANDVALUE_dup)
# endif
#else
# ifndef _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_dup
#  define _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_dup OPENSSL_MANGLER_ASM(OSSL_CRMF_ATTRIBUTETYPEANDVALUE_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ATTRIBUTETYPEANDVALUE_free
#  define OSSL_CRMF_ATTRIBUTETYPEANDVALUE_free OPENSSL_MANGLER(OSSL_CRMF_ATTRIBUTETYPEANDVALUE_free)
# endif
#else
# ifndef _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_free
#  define _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_free OPENSSL_MANGLER_ASM(OSSL_CRMF_ATTRIBUTETYPEANDVALUE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ATTRIBUTETYPEANDVALUE_it
#  define OSSL_CRMF_ATTRIBUTETYPEANDVALUE_it OPENSSL_MANGLER(OSSL_CRMF_ATTRIBUTETYPEANDVALUE_it)
# endif
#else
# ifndef _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_it
#  define _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_it OPENSSL_MANGLER_ASM(OSSL_CRMF_ATTRIBUTETYPEANDVALUE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ATTRIBUTETYPEANDVALUE_new
#  define OSSL_CRMF_ATTRIBUTETYPEANDVALUE_new OPENSSL_MANGLER(OSSL_CRMF_ATTRIBUTETYPEANDVALUE_new)
# endif
#else
# ifndef _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_new
#  define _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_new OPENSSL_MANGLER_ASM(OSSL_CRMF_ATTRIBUTETYPEANDVALUE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTID_dup
#  define OSSL_CRMF_CERTID_dup OPENSSL_MANGLER(OSSL_CRMF_CERTID_dup)
# endif
#else
# ifndef _OSSL_CRMF_CERTID_dup
#  define _OSSL_CRMF_CERTID_dup OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTID_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTID_free
#  define OSSL_CRMF_CERTID_free OPENSSL_MANGLER(OSSL_CRMF_CERTID_free)
# endif
#else
# ifndef _OSSL_CRMF_CERTID_free
#  define _OSSL_CRMF_CERTID_free OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTID_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTID_gen
#  define OSSL_CRMF_CERTID_gen OPENSSL_MANGLER(OSSL_CRMF_CERTID_gen)
# endif
#else
# ifndef _OSSL_CRMF_CERTID_gen
#  define _OSSL_CRMF_CERTID_gen OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTID_gen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTID_get0_issuer
#  define OSSL_CRMF_CERTID_get0_issuer OPENSSL_MANGLER(OSSL_CRMF_CERTID_get0_issuer)
# endif
#else
# ifndef _OSSL_CRMF_CERTID_get0_issuer
#  define _OSSL_CRMF_CERTID_get0_issuer OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTID_get0_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTID_get0_serialNumber
#  define OSSL_CRMF_CERTID_get0_serialNumber OPENSSL_MANGLER(OSSL_CRMF_CERTID_get0_serialNumber)
# endif
#else
# ifndef _OSSL_CRMF_CERTID_get0_serialNumber
#  define _OSSL_CRMF_CERTID_get0_serialNumber OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTID_get0_serialNumber)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTID_it
#  define OSSL_CRMF_CERTID_it OPENSSL_MANGLER(OSSL_CRMF_CERTID_it)
# endif
#else
# ifndef _OSSL_CRMF_CERTID_it
#  define _OSSL_CRMF_CERTID_it OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTID_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTID_new
#  define OSSL_CRMF_CERTID_new OPENSSL_MANGLER(OSSL_CRMF_CERTID_new)
# endif
#else
# ifndef _OSSL_CRMF_CERTID_new
#  define _OSSL_CRMF_CERTID_new OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTID_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTREQUEST_dup
#  define OSSL_CRMF_CERTREQUEST_dup OPENSSL_MANGLER(OSSL_CRMF_CERTREQUEST_dup)
# endif
#else
# ifndef _OSSL_CRMF_CERTREQUEST_dup
#  define _OSSL_CRMF_CERTREQUEST_dup OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTREQUEST_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTREQUEST_free
#  define OSSL_CRMF_CERTREQUEST_free OPENSSL_MANGLER(OSSL_CRMF_CERTREQUEST_free)
# endif
#else
# ifndef _OSSL_CRMF_CERTREQUEST_free
#  define _OSSL_CRMF_CERTREQUEST_free OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTREQUEST_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTREQUEST_it
#  define OSSL_CRMF_CERTREQUEST_it OPENSSL_MANGLER(OSSL_CRMF_CERTREQUEST_it)
# endif
#else
# ifndef _OSSL_CRMF_CERTREQUEST_it
#  define _OSSL_CRMF_CERTREQUEST_it OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTREQUEST_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTREQUEST_new
#  define OSSL_CRMF_CERTREQUEST_new OPENSSL_MANGLER(OSSL_CRMF_CERTREQUEST_new)
# endif
#else
# ifndef _OSSL_CRMF_CERTREQUEST_new
#  define _OSSL_CRMF_CERTREQUEST_new OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTREQUEST_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTTEMPLATE_fill
#  define OSSL_CRMF_CERTTEMPLATE_fill OPENSSL_MANGLER(OSSL_CRMF_CERTTEMPLATE_fill)
# endif
#else
# ifndef _OSSL_CRMF_CERTTEMPLATE_fill
#  define _OSSL_CRMF_CERTTEMPLATE_fill OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTTEMPLATE_fill)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTTEMPLATE_free
#  define OSSL_CRMF_CERTTEMPLATE_free OPENSSL_MANGLER(OSSL_CRMF_CERTTEMPLATE_free)
# endif
#else
# ifndef _OSSL_CRMF_CERTTEMPLATE_free
#  define _OSSL_CRMF_CERTTEMPLATE_free OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTTEMPLATE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTTEMPLATE_get0_extensions
#  define OSSL_CRMF_CERTTEMPLATE_get0_extensions OPENSSL_MANGLER(OSSL_CRMF_CERTTEMPLATE_get0_extensions)
# endif
#else
# ifndef _OSSL_CRMF_CERTTEMPLATE_get0_extensions
#  define _OSSL_CRMF_CERTTEMPLATE_get0_extensions OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTTEMPLATE_get0_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTTEMPLATE_get0_issuer
#  define OSSL_CRMF_CERTTEMPLATE_get0_issuer OPENSSL_MANGLER(OSSL_CRMF_CERTTEMPLATE_get0_issuer)
# endif
#else
# ifndef _OSSL_CRMF_CERTTEMPLATE_get0_issuer
#  define _OSSL_CRMF_CERTTEMPLATE_get0_issuer OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTTEMPLATE_get0_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTTEMPLATE_get0_serialNumber
#  define OSSL_CRMF_CERTTEMPLATE_get0_serialNumber OPENSSL_MANGLER(OSSL_CRMF_CERTTEMPLATE_get0_serialNumber)
# endif
#else
# ifndef _OSSL_CRMF_CERTTEMPLATE_get0_serialNumber
#  define _OSSL_CRMF_CERTTEMPLATE_get0_serialNumber OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTTEMPLATE_get0_serialNumber)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTTEMPLATE_get0_subject
#  define OSSL_CRMF_CERTTEMPLATE_get0_subject OPENSSL_MANGLER(OSSL_CRMF_CERTTEMPLATE_get0_subject)
# endif
#else
# ifndef _OSSL_CRMF_CERTTEMPLATE_get0_subject
#  define _OSSL_CRMF_CERTTEMPLATE_get0_subject OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTTEMPLATE_get0_subject)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTTEMPLATE_it
#  define OSSL_CRMF_CERTTEMPLATE_it OPENSSL_MANGLER(OSSL_CRMF_CERTTEMPLATE_it)
# endif
#else
# ifndef _OSSL_CRMF_CERTTEMPLATE_it
#  define _OSSL_CRMF_CERTTEMPLATE_it OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTTEMPLATE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_CERTTEMPLATE_new
#  define OSSL_CRMF_CERTTEMPLATE_new OPENSSL_MANGLER(OSSL_CRMF_CERTTEMPLATE_new)
# endif
#else
# ifndef _OSSL_CRMF_CERTTEMPLATE_new
#  define _OSSL_CRMF_CERTTEMPLATE_new OPENSSL_MANGLER_ASM(OSSL_CRMF_CERTTEMPLATE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_free
#  define OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_free OPENSSL_MANGLER(OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_free)
# endif
#else
# ifndef _OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_free
#  define _OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_free OPENSSL_MANGLER_ASM(OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_it
#  define OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_it OPENSSL_MANGLER(OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_it)
# endif
#else
# ifndef _OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_it
#  define _OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_it OPENSSL_MANGLER_ASM(OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_new
#  define OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_new OPENSSL_MANGLER(OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_new)
# endif
#else
# ifndef _OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_new
#  define _OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_new OPENSSL_MANGLER_ASM(OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ENCKEYWITHID_free
#  define OSSL_CRMF_ENCKEYWITHID_free OPENSSL_MANGLER(OSSL_CRMF_ENCKEYWITHID_free)
# endif
#else
# ifndef _OSSL_CRMF_ENCKEYWITHID_free
#  define _OSSL_CRMF_ENCKEYWITHID_free OPENSSL_MANGLER_ASM(OSSL_CRMF_ENCKEYWITHID_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ENCKEYWITHID_it
#  define OSSL_CRMF_ENCKEYWITHID_it OPENSSL_MANGLER(OSSL_CRMF_ENCKEYWITHID_it)
# endif
#else
# ifndef _OSSL_CRMF_ENCKEYWITHID_it
#  define _OSSL_CRMF_ENCKEYWITHID_it OPENSSL_MANGLER_ASM(OSSL_CRMF_ENCKEYWITHID_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ENCKEYWITHID_new
#  define OSSL_CRMF_ENCKEYWITHID_new OPENSSL_MANGLER(OSSL_CRMF_ENCKEYWITHID_new)
# endif
#else
# ifndef _OSSL_CRMF_ENCKEYWITHID_new
#  define _OSSL_CRMF_ENCKEYWITHID_new OPENSSL_MANGLER_ASM(OSSL_CRMF_ENCKEYWITHID_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ENCRYPTEDVALUE_free
#  define OSSL_CRMF_ENCRYPTEDVALUE_free OPENSSL_MANGLER(OSSL_CRMF_ENCRYPTEDVALUE_free)
# endif
#else
# ifndef _OSSL_CRMF_ENCRYPTEDVALUE_free
#  define _OSSL_CRMF_ENCRYPTEDVALUE_free OPENSSL_MANGLER_ASM(OSSL_CRMF_ENCRYPTEDVALUE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert
#  define OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert OPENSSL_MANGLER(OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert)
# endif
#else
# ifndef _OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert
#  define _OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert OPENSSL_MANGLER_ASM(OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ENCRYPTEDVALUE_it
#  define OSSL_CRMF_ENCRYPTEDVALUE_it OPENSSL_MANGLER(OSSL_CRMF_ENCRYPTEDVALUE_it)
# endif
#else
# ifndef _OSSL_CRMF_ENCRYPTEDVALUE_it
#  define _OSSL_CRMF_ENCRYPTEDVALUE_it OPENSSL_MANGLER_ASM(OSSL_CRMF_ENCRYPTEDVALUE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_ENCRYPTEDVALUE_new
#  define OSSL_CRMF_ENCRYPTEDVALUE_new OPENSSL_MANGLER(OSSL_CRMF_ENCRYPTEDVALUE_new)
# endif
#else
# ifndef _OSSL_CRMF_ENCRYPTEDVALUE_new
#  define _OSSL_CRMF_ENCRYPTEDVALUE_new OPENSSL_MANGLER_ASM(OSSL_CRMF_ENCRYPTEDVALUE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSGS_free
#  define OSSL_CRMF_MSGS_free OPENSSL_MANGLER(OSSL_CRMF_MSGS_free)
# endif
#else
# ifndef _OSSL_CRMF_MSGS_free
#  define _OSSL_CRMF_MSGS_free OPENSSL_MANGLER_ASM(OSSL_CRMF_MSGS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSGS_it
#  define OSSL_CRMF_MSGS_it OPENSSL_MANGLER(OSSL_CRMF_MSGS_it)
# endif
#else
# ifndef _OSSL_CRMF_MSGS_it
#  define _OSSL_CRMF_MSGS_it OPENSSL_MANGLER_ASM(OSSL_CRMF_MSGS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSGS_new
#  define OSSL_CRMF_MSGS_new OPENSSL_MANGLER(OSSL_CRMF_MSGS_new)
# endif
#else
# ifndef _OSSL_CRMF_MSGS_new
#  define _OSSL_CRMF_MSGS_new OPENSSL_MANGLER_ASM(OSSL_CRMF_MSGS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSGS_verify_popo
#  define OSSL_CRMF_MSGS_verify_popo OPENSSL_MANGLER(OSSL_CRMF_MSGS_verify_popo)
# endif
#else
# ifndef _OSSL_CRMF_MSGS_verify_popo
#  define _OSSL_CRMF_MSGS_verify_popo OPENSSL_MANGLER_ASM(OSSL_CRMF_MSGS_verify_popo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_PKIPublicationInfo_push0_SinglePubInfo
#  define OSSL_CRMF_MSG_PKIPublicationInfo_push0_SinglePubInfo OPENSSL_MANGLER(OSSL_CRMF_MSG_PKIPublicationInfo_push0_SinglePubInfo)
# endif
#else
# ifndef _OSSL_CRMF_MSG_PKIPublicationInfo_push0_SinglePubInfo
#  define _OSSL_CRMF_MSG_PKIPublicationInfo_push0_SinglePubInfo OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_PKIPublicationInfo_push0_SinglePubInfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_create_popo
#  define OSSL_CRMF_MSG_create_popo OPENSSL_MANGLER(OSSL_CRMF_MSG_create_popo)
# endif
#else
# ifndef _OSSL_CRMF_MSG_create_popo
#  define _OSSL_CRMF_MSG_create_popo OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_create_popo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_dup
#  define OSSL_CRMF_MSG_dup OPENSSL_MANGLER(OSSL_CRMF_MSG_dup)
# endif
#else
# ifndef _OSSL_CRMF_MSG_dup
#  define _OSSL_CRMF_MSG_dup OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_free
#  define OSSL_CRMF_MSG_free OPENSSL_MANGLER(OSSL_CRMF_MSG_free)
# endif
#else
# ifndef _OSSL_CRMF_MSG_free
#  define _OSSL_CRMF_MSG_free OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_get0_regCtrl_authenticator
#  define OSSL_CRMF_MSG_get0_regCtrl_authenticator OPENSSL_MANGLER(OSSL_CRMF_MSG_get0_regCtrl_authenticator)
# endif
#else
# ifndef _OSSL_CRMF_MSG_get0_regCtrl_authenticator
#  define _OSSL_CRMF_MSG_get0_regCtrl_authenticator OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_get0_regCtrl_authenticator)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_get0_regCtrl_oldCertID
#  define OSSL_CRMF_MSG_get0_regCtrl_oldCertID OPENSSL_MANGLER(OSSL_CRMF_MSG_get0_regCtrl_oldCertID)
# endif
#else
# ifndef _OSSL_CRMF_MSG_get0_regCtrl_oldCertID
#  define _OSSL_CRMF_MSG_get0_regCtrl_oldCertID OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_get0_regCtrl_oldCertID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_get0_regCtrl_pkiPublicationInfo
#  define OSSL_CRMF_MSG_get0_regCtrl_pkiPublicationInfo OPENSSL_MANGLER(OSSL_CRMF_MSG_get0_regCtrl_pkiPublicationInfo)
# endif
#else
# ifndef _OSSL_CRMF_MSG_get0_regCtrl_pkiPublicationInfo
#  define _OSSL_CRMF_MSG_get0_regCtrl_pkiPublicationInfo OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_get0_regCtrl_pkiPublicationInfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_get0_regCtrl_protocolEncrKey
#  define OSSL_CRMF_MSG_get0_regCtrl_protocolEncrKey OPENSSL_MANGLER(OSSL_CRMF_MSG_get0_regCtrl_protocolEncrKey)
# endif
#else
# ifndef _OSSL_CRMF_MSG_get0_regCtrl_protocolEncrKey
#  define _OSSL_CRMF_MSG_get0_regCtrl_protocolEncrKey OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_get0_regCtrl_protocolEncrKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_get0_regCtrl_regToken
#  define OSSL_CRMF_MSG_get0_regCtrl_regToken OPENSSL_MANGLER(OSSL_CRMF_MSG_get0_regCtrl_regToken)
# endif
#else
# ifndef _OSSL_CRMF_MSG_get0_regCtrl_regToken
#  define _OSSL_CRMF_MSG_get0_regCtrl_regToken OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_get0_regCtrl_regToken)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_get0_regInfo_certReq
#  define OSSL_CRMF_MSG_get0_regInfo_certReq OPENSSL_MANGLER(OSSL_CRMF_MSG_get0_regInfo_certReq)
# endif
#else
# ifndef _OSSL_CRMF_MSG_get0_regInfo_certReq
#  define _OSSL_CRMF_MSG_get0_regInfo_certReq OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_get0_regInfo_certReq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_get0_regInfo_utf8Pairs
#  define OSSL_CRMF_MSG_get0_regInfo_utf8Pairs OPENSSL_MANGLER(OSSL_CRMF_MSG_get0_regInfo_utf8Pairs)
# endif
#else
# ifndef _OSSL_CRMF_MSG_get0_regInfo_utf8Pairs
#  define _OSSL_CRMF_MSG_get0_regInfo_utf8Pairs OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_get0_regInfo_utf8Pairs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_get0_tmpl
#  define OSSL_CRMF_MSG_get0_tmpl OPENSSL_MANGLER(OSSL_CRMF_MSG_get0_tmpl)
# endif
#else
# ifndef _OSSL_CRMF_MSG_get0_tmpl
#  define _OSSL_CRMF_MSG_get0_tmpl OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_get0_tmpl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_get_certReqId
#  define OSSL_CRMF_MSG_get_certReqId OPENSSL_MANGLER(OSSL_CRMF_MSG_get_certReqId)
# endif
#else
# ifndef _OSSL_CRMF_MSG_get_certReqId
#  define _OSSL_CRMF_MSG_get_certReqId OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_get_certReqId)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_it
#  define OSSL_CRMF_MSG_it OPENSSL_MANGLER(OSSL_CRMF_MSG_it)
# endif
#else
# ifndef _OSSL_CRMF_MSG_it
#  define _OSSL_CRMF_MSG_it OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_new
#  define OSSL_CRMF_MSG_new OPENSSL_MANGLER(OSSL_CRMF_MSG_new)
# endif
#else
# ifndef _OSSL_CRMF_MSG_new
#  define _OSSL_CRMF_MSG_new OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_push0_extension
#  define OSSL_CRMF_MSG_push0_extension OPENSSL_MANGLER(OSSL_CRMF_MSG_push0_extension)
# endif
#else
# ifndef _OSSL_CRMF_MSG_push0_extension
#  define _OSSL_CRMF_MSG_push0_extension OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_push0_extension)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set0_SinglePubInfo
#  define OSSL_CRMF_MSG_set0_SinglePubInfo OPENSSL_MANGLER(OSSL_CRMF_MSG_set0_SinglePubInfo)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set0_SinglePubInfo
#  define _OSSL_CRMF_MSG_set0_SinglePubInfo OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set0_SinglePubInfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set0_extensions
#  define OSSL_CRMF_MSG_set0_extensions OPENSSL_MANGLER(OSSL_CRMF_MSG_set0_extensions)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set0_extensions
#  define _OSSL_CRMF_MSG_set0_extensions OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set0_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set0_validity
#  define OSSL_CRMF_MSG_set0_validity OPENSSL_MANGLER(OSSL_CRMF_MSG_set0_validity)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set0_validity
#  define _OSSL_CRMF_MSG_set0_validity OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set0_validity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set1_regCtrl_authenticator
#  define OSSL_CRMF_MSG_set1_regCtrl_authenticator OPENSSL_MANGLER(OSSL_CRMF_MSG_set1_regCtrl_authenticator)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set1_regCtrl_authenticator
#  define _OSSL_CRMF_MSG_set1_regCtrl_authenticator OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set1_regCtrl_authenticator)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set1_regCtrl_oldCertID
#  define OSSL_CRMF_MSG_set1_regCtrl_oldCertID OPENSSL_MANGLER(OSSL_CRMF_MSG_set1_regCtrl_oldCertID)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set1_regCtrl_oldCertID
#  define _OSSL_CRMF_MSG_set1_regCtrl_oldCertID OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set1_regCtrl_oldCertID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set1_regCtrl_pkiPublicationInfo
#  define OSSL_CRMF_MSG_set1_regCtrl_pkiPublicationInfo OPENSSL_MANGLER(OSSL_CRMF_MSG_set1_regCtrl_pkiPublicationInfo)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set1_regCtrl_pkiPublicationInfo
#  define _OSSL_CRMF_MSG_set1_regCtrl_pkiPublicationInfo OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set1_regCtrl_pkiPublicationInfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set1_regCtrl_protocolEncrKey
#  define OSSL_CRMF_MSG_set1_regCtrl_protocolEncrKey OPENSSL_MANGLER(OSSL_CRMF_MSG_set1_regCtrl_protocolEncrKey)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set1_regCtrl_protocolEncrKey
#  define _OSSL_CRMF_MSG_set1_regCtrl_protocolEncrKey OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set1_regCtrl_protocolEncrKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set1_regCtrl_regToken
#  define OSSL_CRMF_MSG_set1_regCtrl_regToken OPENSSL_MANGLER(OSSL_CRMF_MSG_set1_regCtrl_regToken)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set1_regCtrl_regToken
#  define _OSSL_CRMF_MSG_set1_regCtrl_regToken OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set1_regCtrl_regToken)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set1_regInfo_certReq
#  define OSSL_CRMF_MSG_set1_regInfo_certReq OPENSSL_MANGLER(OSSL_CRMF_MSG_set1_regInfo_certReq)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set1_regInfo_certReq
#  define _OSSL_CRMF_MSG_set1_regInfo_certReq OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set1_regInfo_certReq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set1_regInfo_utf8Pairs
#  define OSSL_CRMF_MSG_set1_regInfo_utf8Pairs OPENSSL_MANGLER(OSSL_CRMF_MSG_set1_regInfo_utf8Pairs)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set1_regInfo_utf8Pairs
#  define _OSSL_CRMF_MSG_set1_regInfo_utf8Pairs OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set1_regInfo_utf8Pairs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set_PKIPublicationInfo_action
#  define OSSL_CRMF_MSG_set_PKIPublicationInfo_action OPENSSL_MANGLER(OSSL_CRMF_MSG_set_PKIPublicationInfo_action)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set_PKIPublicationInfo_action
#  define _OSSL_CRMF_MSG_set_PKIPublicationInfo_action OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set_PKIPublicationInfo_action)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_MSG_set_certReqId
#  define OSSL_CRMF_MSG_set_certReqId OPENSSL_MANGLER(OSSL_CRMF_MSG_set_certReqId)
# endif
#else
# ifndef _OSSL_CRMF_MSG_set_certReqId
#  define _OSSL_CRMF_MSG_set_certReqId OPENSSL_MANGLER_ASM(OSSL_CRMF_MSG_set_certReqId)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_OPTIONALVALIDITY_free
#  define OSSL_CRMF_OPTIONALVALIDITY_free OPENSSL_MANGLER(OSSL_CRMF_OPTIONALVALIDITY_free)
# endif
#else
# ifndef _OSSL_CRMF_OPTIONALVALIDITY_free
#  define _OSSL_CRMF_OPTIONALVALIDITY_free OPENSSL_MANGLER_ASM(OSSL_CRMF_OPTIONALVALIDITY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_OPTIONALVALIDITY_it
#  define OSSL_CRMF_OPTIONALVALIDITY_it OPENSSL_MANGLER(OSSL_CRMF_OPTIONALVALIDITY_it)
# endif
#else
# ifndef _OSSL_CRMF_OPTIONALVALIDITY_it
#  define _OSSL_CRMF_OPTIONALVALIDITY_it OPENSSL_MANGLER_ASM(OSSL_CRMF_OPTIONALVALIDITY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_OPTIONALVALIDITY_new
#  define OSSL_CRMF_OPTIONALVALIDITY_new OPENSSL_MANGLER(OSSL_CRMF_OPTIONALVALIDITY_new)
# endif
#else
# ifndef _OSSL_CRMF_OPTIONALVALIDITY_new
#  define _OSSL_CRMF_OPTIONALVALIDITY_new OPENSSL_MANGLER_ASM(OSSL_CRMF_OPTIONALVALIDITY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PBMPARAMETER_free
#  define OSSL_CRMF_PBMPARAMETER_free OPENSSL_MANGLER(OSSL_CRMF_PBMPARAMETER_free)
# endif
#else
# ifndef _OSSL_CRMF_PBMPARAMETER_free
#  define _OSSL_CRMF_PBMPARAMETER_free OPENSSL_MANGLER_ASM(OSSL_CRMF_PBMPARAMETER_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PBMPARAMETER_it
#  define OSSL_CRMF_PBMPARAMETER_it OPENSSL_MANGLER(OSSL_CRMF_PBMPARAMETER_it)
# endif
#else
# ifndef _OSSL_CRMF_PBMPARAMETER_it
#  define _OSSL_CRMF_PBMPARAMETER_it OPENSSL_MANGLER_ASM(OSSL_CRMF_PBMPARAMETER_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PBMPARAMETER_new
#  define OSSL_CRMF_PBMPARAMETER_new OPENSSL_MANGLER(OSSL_CRMF_PBMPARAMETER_new)
# endif
#else
# ifndef _OSSL_CRMF_PBMPARAMETER_new
#  define _OSSL_CRMF_PBMPARAMETER_new OPENSSL_MANGLER_ASM(OSSL_CRMF_PBMPARAMETER_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PKIPUBLICATIONINFO_dup
#  define OSSL_CRMF_PKIPUBLICATIONINFO_dup OPENSSL_MANGLER(OSSL_CRMF_PKIPUBLICATIONINFO_dup)
# endif
#else
# ifndef _OSSL_CRMF_PKIPUBLICATIONINFO_dup
#  define _OSSL_CRMF_PKIPUBLICATIONINFO_dup OPENSSL_MANGLER_ASM(OSSL_CRMF_PKIPUBLICATIONINFO_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PKIPUBLICATIONINFO_free
#  define OSSL_CRMF_PKIPUBLICATIONINFO_free OPENSSL_MANGLER(OSSL_CRMF_PKIPUBLICATIONINFO_free)
# endif
#else
# ifndef _OSSL_CRMF_PKIPUBLICATIONINFO_free
#  define _OSSL_CRMF_PKIPUBLICATIONINFO_free OPENSSL_MANGLER_ASM(OSSL_CRMF_PKIPUBLICATIONINFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PKIPUBLICATIONINFO_it
#  define OSSL_CRMF_PKIPUBLICATIONINFO_it OPENSSL_MANGLER(OSSL_CRMF_PKIPUBLICATIONINFO_it)
# endif
#else
# ifndef _OSSL_CRMF_PKIPUBLICATIONINFO_it
#  define _OSSL_CRMF_PKIPUBLICATIONINFO_it OPENSSL_MANGLER_ASM(OSSL_CRMF_PKIPUBLICATIONINFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PKIPUBLICATIONINFO_new
#  define OSSL_CRMF_PKIPUBLICATIONINFO_new OPENSSL_MANGLER(OSSL_CRMF_PKIPUBLICATIONINFO_new)
# endif
#else
# ifndef _OSSL_CRMF_PKIPUBLICATIONINFO_new
#  define _OSSL_CRMF_PKIPUBLICATIONINFO_new OPENSSL_MANGLER_ASM(OSSL_CRMF_PKIPUBLICATIONINFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PKMACVALUE_free
#  define OSSL_CRMF_PKMACVALUE_free OPENSSL_MANGLER(OSSL_CRMF_PKMACVALUE_free)
# endif
#else
# ifndef _OSSL_CRMF_PKMACVALUE_free
#  define _OSSL_CRMF_PKMACVALUE_free OPENSSL_MANGLER_ASM(OSSL_CRMF_PKMACVALUE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PKMACVALUE_it
#  define OSSL_CRMF_PKMACVALUE_it OPENSSL_MANGLER(OSSL_CRMF_PKMACVALUE_it)
# endif
#else
# ifndef _OSSL_CRMF_PKMACVALUE_it
#  define _OSSL_CRMF_PKMACVALUE_it OPENSSL_MANGLER_ASM(OSSL_CRMF_PKMACVALUE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PKMACVALUE_new
#  define OSSL_CRMF_PKMACVALUE_new OPENSSL_MANGLER(OSSL_CRMF_PKMACVALUE_new)
# endif
#else
# ifndef _OSSL_CRMF_PKMACVALUE_new
#  define _OSSL_CRMF_PKMACVALUE_new OPENSSL_MANGLER_ASM(OSSL_CRMF_PKMACVALUE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOPRIVKEY_free
#  define OSSL_CRMF_POPOPRIVKEY_free OPENSSL_MANGLER(OSSL_CRMF_POPOPRIVKEY_free)
# endif
#else
# ifndef _OSSL_CRMF_POPOPRIVKEY_free
#  define _OSSL_CRMF_POPOPRIVKEY_free OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOPRIVKEY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOPRIVKEY_it
#  define OSSL_CRMF_POPOPRIVKEY_it OPENSSL_MANGLER(OSSL_CRMF_POPOPRIVKEY_it)
# endif
#else
# ifndef _OSSL_CRMF_POPOPRIVKEY_it
#  define _OSSL_CRMF_POPOPRIVKEY_it OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOPRIVKEY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOPRIVKEY_new
#  define OSSL_CRMF_POPOPRIVKEY_new OPENSSL_MANGLER(OSSL_CRMF_POPOPRIVKEY_new)
# endif
#else
# ifndef _OSSL_CRMF_POPOPRIVKEY_new
#  define _OSSL_CRMF_POPOPRIVKEY_new OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOPRIVKEY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_free
#  define OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_free OPENSSL_MANGLER(OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_free)
# endif
#else
# ifndef _OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_free
#  define _OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_free OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_it
#  define OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_it OPENSSL_MANGLER(OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_it)
# endif
#else
# ifndef _OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_it
#  define _OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_it OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_new
#  define OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_new OPENSSL_MANGLER(OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_new)
# endif
#else
# ifndef _OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_new
#  define _OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_new OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOSIGNINGKEYINPUT_free
#  define OSSL_CRMF_POPOSIGNINGKEYINPUT_free OPENSSL_MANGLER(OSSL_CRMF_POPOSIGNINGKEYINPUT_free)
# endif
#else
# ifndef _OSSL_CRMF_POPOSIGNINGKEYINPUT_free
#  define _OSSL_CRMF_POPOSIGNINGKEYINPUT_free OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOSIGNINGKEYINPUT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOSIGNINGKEYINPUT_it
#  define OSSL_CRMF_POPOSIGNINGKEYINPUT_it OPENSSL_MANGLER(OSSL_CRMF_POPOSIGNINGKEYINPUT_it)
# endif
#else
# ifndef _OSSL_CRMF_POPOSIGNINGKEYINPUT_it
#  define _OSSL_CRMF_POPOSIGNINGKEYINPUT_it OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOSIGNINGKEYINPUT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOSIGNINGKEYINPUT_new
#  define OSSL_CRMF_POPOSIGNINGKEYINPUT_new OPENSSL_MANGLER(OSSL_CRMF_POPOSIGNINGKEYINPUT_new)
# endif
#else
# ifndef _OSSL_CRMF_POPOSIGNINGKEYINPUT_new
#  define _OSSL_CRMF_POPOSIGNINGKEYINPUT_new OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOSIGNINGKEYINPUT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOSIGNINGKEY_free
#  define OSSL_CRMF_POPOSIGNINGKEY_free OPENSSL_MANGLER(OSSL_CRMF_POPOSIGNINGKEY_free)
# endif
#else
# ifndef _OSSL_CRMF_POPOSIGNINGKEY_free
#  define _OSSL_CRMF_POPOSIGNINGKEY_free OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOSIGNINGKEY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOSIGNINGKEY_it
#  define OSSL_CRMF_POPOSIGNINGKEY_it OPENSSL_MANGLER(OSSL_CRMF_POPOSIGNINGKEY_it)
# endif
#else
# ifndef _OSSL_CRMF_POPOSIGNINGKEY_it
#  define _OSSL_CRMF_POPOSIGNINGKEY_it OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOSIGNINGKEY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPOSIGNINGKEY_new
#  define OSSL_CRMF_POPOSIGNINGKEY_new OPENSSL_MANGLER(OSSL_CRMF_POPOSIGNINGKEY_new)
# endif
#else
# ifndef _OSSL_CRMF_POPOSIGNINGKEY_new
#  define _OSSL_CRMF_POPOSIGNINGKEY_new OPENSSL_MANGLER_ASM(OSSL_CRMF_POPOSIGNINGKEY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPO_free
#  define OSSL_CRMF_POPO_free OPENSSL_MANGLER(OSSL_CRMF_POPO_free)
# endif
#else
# ifndef _OSSL_CRMF_POPO_free
#  define _OSSL_CRMF_POPO_free OPENSSL_MANGLER_ASM(OSSL_CRMF_POPO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPO_it
#  define OSSL_CRMF_POPO_it OPENSSL_MANGLER(OSSL_CRMF_POPO_it)
# endif
#else
# ifndef _OSSL_CRMF_POPO_it
#  define _OSSL_CRMF_POPO_it OPENSSL_MANGLER_ASM(OSSL_CRMF_POPO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_POPO_new
#  define OSSL_CRMF_POPO_new OPENSSL_MANGLER(OSSL_CRMF_POPO_new)
# endif
#else
# ifndef _OSSL_CRMF_POPO_new
#  define _OSSL_CRMF_POPO_new OPENSSL_MANGLER_ASM(OSSL_CRMF_POPO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PRIVATEKEYINFO_free
#  define OSSL_CRMF_PRIVATEKEYINFO_free OPENSSL_MANGLER(OSSL_CRMF_PRIVATEKEYINFO_free)
# endif
#else
# ifndef _OSSL_CRMF_PRIVATEKEYINFO_free
#  define _OSSL_CRMF_PRIVATEKEYINFO_free OPENSSL_MANGLER_ASM(OSSL_CRMF_PRIVATEKEYINFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PRIVATEKEYINFO_it
#  define OSSL_CRMF_PRIVATEKEYINFO_it OPENSSL_MANGLER(OSSL_CRMF_PRIVATEKEYINFO_it)
# endif
#else
# ifndef _OSSL_CRMF_PRIVATEKEYINFO_it
#  define _OSSL_CRMF_PRIVATEKEYINFO_it OPENSSL_MANGLER_ASM(OSSL_CRMF_PRIVATEKEYINFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_PRIVATEKEYINFO_new
#  define OSSL_CRMF_PRIVATEKEYINFO_new OPENSSL_MANGLER(OSSL_CRMF_PRIVATEKEYINFO_new)
# endif
#else
# ifndef _OSSL_CRMF_PRIVATEKEYINFO_new
#  define _OSSL_CRMF_PRIVATEKEYINFO_new OPENSSL_MANGLER_ASM(OSSL_CRMF_PRIVATEKEYINFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_SINGLEPUBINFO_free
#  define OSSL_CRMF_SINGLEPUBINFO_free OPENSSL_MANGLER(OSSL_CRMF_SINGLEPUBINFO_free)
# endif
#else
# ifndef _OSSL_CRMF_SINGLEPUBINFO_free
#  define _OSSL_CRMF_SINGLEPUBINFO_free OPENSSL_MANGLER_ASM(OSSL_CRMF_SINGLEPUBINFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_SINGLEPUBINFO_it
#  define OSSL_CRMF_SINGLEPUBINFO_it OPENSSL_MANGLER(OSSL_CRMF_SINGLEPUBINFO_it)
# endif
#else
# ifndef _OSSL_CRMF_SINGLEPUBINFO_it
#  define _OSSL_CRMF_SINGLEPUBINFO_it OPENSSL_MANGLER_ASM(OSSL_CRMF_SINGLEPUBINFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_SINGLEPUBINFO_new
#  define OSSL_CRMF_SINGLEPUBINFO_new OPENSSL_MANGLER(OSSL_CRMF_SINGLEPUBINFO_new)
# endif
#else
# ifndef _OSSL_CRMF_SINGLEPUBINFO_new
#  define _OSSL_CRMF_SINGLEPUBINFO_new OPENSSL_MANGLER_ASM(OSSL_CRMF_SINGLEPUBINFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_pbm_new
#  define OSSL_CRMF_pbm_new OPENSSL_MANGLER(OSSL_CRMF_pbm_new)
# endif
#else
# ifndef _OSSL_CRMF_pbm_new
#  define _OSSL_CRMF_pbm_new OPENSSL_MANGLER_ASM(OSSL_CRMF_pbm_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_CRMF_pbmp_new
#  define OSSL_CRMF_pbmp_new OPENSSL_MANGLER(OSSL_CRMF_pbmp_new)
# endif
#else
# ifndef _OSSL_CRMF_pbmp_new
#  define _OSSL_CRMF_pbmp_new OPENSSL_MANGLER_ASM(OSSL_CRMF_pbmp_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_add_decoder
#  define OSSL_DECODER_CTX_add_decoder OPENSSL_MANGLER(OSSL_DECODER_CTX_add_decoder)
# endif
#else
# ifndef _OSSL_DECODER_CTX_add_decoder
#  define _OSSL_DECODER_CTX_add_decoder OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_add_decoder)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_add_extra
#  define OSSL_DECODER_CTX_add_extra OPENSSL_MANGLER(OSSL_DECODER_CTX_add_extra)
# endif
#else
# ifndef _OSSL_DECODER_CTX_add_extra
#  define _OSSL_DECODER_CTX_add_extra OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_add_extra)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_free
#  define OSSL_DECODER_CTX_free OPENSSL_MANGLER(OSSL_DECODER_CTX_free)
# endif
#else
# ifndef _OSSL_DECODER_CTX_free
#  define _OSSL_DECODER_CTX_free OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_get_cleanup
#  define OSSL_DECODER_CTX_get_cleanup OPENSSL_MANGLER(OSSL_DECODER_CTX_get_cleanup)
# endif
#else
# ifndef _OSSL_DECODER_CTX_get_cleanup
#  define _OSSL_DECODER_CTX_get_cleanup OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_get_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_get_construct
#  define OSSL_DECODER_CTX_get_construct OPENSSL_MANGLER(OSSL_DECODER_CTX_get_construct)
# endif
#else
# ifndef _OSSL_DECODER_CTX_get_construct
#  define _OSSL_DECODER_CTX_get_construct OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_get_construct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_get_construct_data
#  define OSSL_DECODER_CTX_get_construct_data OPENSSL_MANGLER(OSSL_DECODER_CTX_get_construct_data)
# endif
#else
# ifndef _OSSL_DECODER_CTX_get_construct_data
#  define _OSSL_DECODER_CTX_get_construct_data OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_get_construct_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_get_num_decoders
#  define OSSL_DECODER_CTX_get_num_decoders OPENSSL_MANGLER(OSSL_DECODER_CTX_get_num_decoders)
# endif
#else
# ifndef _OSSL_DECODER_CTX_get_num_decoders
#  define _OSSL_DECODER_CTX_get_num_decoders OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_get_num_decoders)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_new
#  define OSSL_DECODER_CTX_new OPENSSL_MANGLER(OSSL_DECODER_CTX_new)
# endif
#else
# ifndef _OSSL_DECODER_CTX_new
#  define _OSSL_DECODER_CTX_new OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_new_for_pkey
#  define OSSL_DECODER_CTX_new_for_pkey OPENSSL_MANGLER(OSSL_DECODER_CTX_new_for_pkey)
# endif
#else
# ifndef _OSSL_DECODER_CTX_new_for_pkey
#  define _OSSL_DECODER_CTX_new_for_pkey OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_new_for_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_set_cleanup
#  define OSSL_DECODER_CTX_set_cleanup OPENSSL_MANGLER(OSSL_DECODER_CTX_set_cleanup)
# endif
#else
# ifndef _OSSL_DECODER_CTX_set_cleanup
#  define _OSSL_DECODER_CTX_set_cleanup OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_set_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_set_construct
#  define OSSL_DECODER_CTX_set_construct OPENSSL_MANGLER(OSSL_DECODER_CTX_set_construct)
# endif
#else
# ifndef _OSSL_DECODER_CTX_set_construct
#  define _OSSL_DECODER_CTX_set_construct OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_set_construct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_set_construct_data
#  define OSSL_DECODER_CTX_set_construct_data OPENSSL_MANGLER(OSSL_DECODER_CTX_set_construct_data)
# endif
#else
# ifndef _OSSL_DECODER_CTX_set_construct_data
#  define _OSSL_DECODER_CTX_set_construct_data OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_set_construct_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_set_input_structure
#  define OSSL_DECODER_CTX_set_input_structure OPENSSL_MANGLER(OSSL_DECODER_CTX_set_input_structure)
# endif
#else
# ifndef _OSSL_DECODER_CTX_set_input_structure
#  define _OSSL_DECODER_CTX_set_input_structure OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_set_input_structure)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_set_input_type
#  define OSSL_DECODER_CTX_set_input_type OPENSSL_MANGLER(OSSL_DECODER_CTX_set_input_type)
# endif
#else
# ifndef _OSSL_DECODER_CTX_set_input_type
#  define _OSSL_DECODER_CTX_set_input_type OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_set_input_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_set_params
#  define OSSL_DECODER_CTX_set_params OPENSSL_MANGLER(OSSL_DECODER_CTX_set_params)
# endif
#else
# ifndef _OSSL_DECODER_CTX_set_params
#  define _OSSL_DECODER_CTX_set_params OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_set_passphrase
#  define OSSL_DECODER_CTX_set_passphrase OPENSSL_MANGLER(OSSL_DECODER_CTX_set_passphrase)
# endif
#else
# ifndef _OSSL_DECODER_CTX_set_passphrase
#  define _OSSL_DECODER_CTX_set_passphrase OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_set_passphrase)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_set_passphrase_cb
#  define OSSL_DECODER_CTX_set_passphrase_cb OPENSSL_MANGLER(OSSL_DECODER_CTX_set_passphrase_cb)
# endif
#else
# ifndef _OSSL_DECODER_CTX_set_passphrase_cb
#  define _OSSL_DECODER_CTX_set_passphrase_cb OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_set_passphrase_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_set_passphrase_ui
#  define OSSL_DECODER_CTX_set_passphrase_ui OPENSSL_MANGLER(OSSL_DECODER_CTX_set_passphrase_ui)
# endif
#else
# ifndef _OSSL_DECODER_CTX_set_passphrase_ui
#  define _OSSL_DECODER_CTX_set_passphrase_ui OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_set_passphrase_ui)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_set_pem_password_cb
#  define OSSL_DECODER_CTX_set_pem_password_cb OPENSSL_MANGLER(OSSL_DECODER_CTX_set_pem_password_cb)
# endif
#else
# ifndef _OSSL_DECODER_CTX_set_pem_password_cb
#  define _OSSL_DECODER_CTX_set_pem_password_cb OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_set_pem_password_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_CTX_set_selection
#  define OSSL_DECODER_CTX_set_selection OPENSSL_MANGLER(OSSL_DECODER_CTX_set_selection)
# endif
#else
# ifndef _OSSL_DECODER_CTX_set_selection
#  define _OSSL_DECODER_CTX_set_selection OPENSSL_MANGLER_ASM(OSSL_DECODER_CTX_set_selection)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_INSTANCE_get_decoder
#  define OSSL_DECODER_INSTANCE_get_decoder OPENSSL_MANGLER(OSSL_DECODER_INSTANCE_get_decoder)
# endif
#else
# ifndef _OSSL_DECODER_INSTANCE_get_decoder
#  define _OSSL_DECODER_INSTANCE_get_decoder OPENSSL_MANGLER_ASM(OSSL_DECODER_INSTANCE_get_decoder)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_INSTANCE_get_decoder_ctx
#  define OSSL_DECODER_INSTANCE_get_decoder_ctx OPENSSL_MANGLER(OSSL_DECODER_INSTANCE_get_decoder_ctx)
# endif
#else
# ifndef _OSSL_DECODER_INSTANCE_get_decoder_ctx
#  define _OSSL_DECODER_INSTANCE_get_decoder_ctx OPENSSL_MANGLER_ASM(OSSL_DECODER_INSTANCE_get_decoder_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_INSTANCE_get_input_structure
#  define OSSL_DECODER_INSTANCE_get_input_structure OPENSSL_MANGLER(OSSL_DECODER_INSTANCE_get_input_structure)
# endif
#else
# ifndef _OSSL_DECODER_INSTANCE_get_input_structure
#  define _OSSL_DECODER_INSTANCE_get_input_structure OPENSSL_MANGLER_ASM(OSSL_DECODER_INSTANCE_get_input_structure)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_INSTANCE_get_input_type
#  define OSSL_DECODER_INSTANCE_get_input_type OPENSSL_MANGLER(OSSL_DECODER_INSTANCE_get_input_type)
# endif
#else
# ifndef _OSSL_DECODER_INSTANCE_get_input_type
#  define _OSSL_DECODER_INSTANCE_get_input_type OPENSSL_MANGLER_ASM(OSSL_DECODER_INSTANCE_get_input_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_do_all_provided
#  define OSSL_DECODER_do_all_provided OPENSSL_MANGLER(OSSL_DECODER_do_all_provided)
# endif
#else
# ifndef _OSSL_DECODER_do_all_provided
#  define _OSSL_DECODER_do_all_provided OPENSSL_MANGLER_ASM(OSSL_DECODER_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_export
#  define OSSL_DECODER_export OPENSSL_MANGLER(OSSL_DECODER_export)
# endif
#else
# ifndef _OSSL_DECODER_export
#  define _OSSL_DECODER_export OPENSSL_MANGLER_ASM(OSSL_DECODER_export)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_fetch
#  define OSSL_DECODER_fetch OPENSSL_MANGLER(OSSL_DECODER_fetch)
# endif
#else
# ifndef _OSSL_DECODER_fetch
#  define _OSSL_DECODER_fetch OPENSSL_MANGLER_ASM(OSSL_DECODER_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_free
#  define OSSL_DECODER_free OPENSSL_MANGLER(OSSL_DECODER_free)
# endif
#else
# ifndef _OSSL_DECODER_free
#  define _OSSL_DECODER_free OPENSSL_MANGLER_ASM(OSSL_DECODER_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_from_bio
#  define OSSL_DECODER_from_bio OPENSSL_MANGLER(OSSL_DECODER_from_bio)
# endif
#else
# ifndef _OSSL_DECODER_from_bio
#  define _OSSL_DECODER_from_bio OPENSSL_MANGLER_ASM(OSSL_DECODER_from_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_from_data
#  define OSSL_DECODER_from_data OPENSSL_MANGLER(OSSL_DECODER_from_data)
# endif
#else
# ifndef _OSSL_DECODER_from_data
#  define _OSSL_DECODER_from_data OPENSSL_MANGLER_ASM(OSSL_DECODER_from_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_from_fp
#  define OSSL_DECODER_from_fp OPENSSL_MANGLER(OSSL_DECODER_from_fp)
# endif
#else
# ifndef _OSSL_DECODER_from_fp
#  define _OSSL_DECODER_from_fp OPENSSL_MANGLER_ASM(OSSL_DECODER_from_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_get0_description
#  define OSSL_DECODER_get0_description OPENSSL_MANGLER(OSSL_DECODER_get0_description)
# endif
#else
# ifndef _OSSL_DECODER_get0_description
#  define _OSSL_DECODER_get0_description OPENSSL_MANGLER_ASM(OSSL_DECODER_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_get0_name
#  define OSSL_DECODER_get0_name OPENSSL_MANGLER(OSSL_DECODER_get0_name)
# endif
#else
# ifndef _OSSL_DECODER_get0_name
#  define _OSSL_DECODER_get0_name OPENSSL_MANGLER_ASM(OSSL_DECODER_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_get0_properties
#  define OSSL_DECODER_get0_properties OPENSSL_MANGLER(OSSL_DECODER_get0_properties)
# endif
#else
# ifndef _OSSL_DECODER_get0_properties
#  define _OSSL_DECODER_get0_properties OPENSSL_MANGLER_ASM(OSSL_DECODER_get0_properties)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_get0_provider
#  define OSSL_DECODER_get0_provider OPENSSL_MANGLER(OSSL_DECODER_get0_provider)
# endif
#else
# ifndef _OSSL_DECODER_get0_provider
#  define _OSSL_DECODER_get0_provider OPENSSL_MANGLER_ASM(OSSL_DECODER_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_get_params
#  define OSSL_DECODER_get_params OPENSSL_MANGLER(OSSL_DECODER_get_params)
# endif
#else
# ifndef _OSSL_DECODER_get_params
#  define _OSSL_DECODER_get_params OPENSSL_MANGLER_ASM(OSSL_DECODER_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_gettable_params
#  define OSSL_DECODER_gettable_params OPENSSL_MANGLER(OSSL_DECODER_gettable_params)
# endif
#else
# ifndef _OSSL_DECODER_gettable_params
#  define _OSSL_DECODER_gettable_params OPENSSL_MANGLER_ASM(OSSL_DECODER_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_is_a
#  define OSSL_DECODER_is_a OPENSSL_MANGLER(OSSL_DECODER_is_a)
# endif
#else
# ifndef _OSSL_DECODER_is_a
#  define _OSSL_DECODER_is_a OPENSSL_MANGLER_ASM(OSSL_DECODER_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_names_do_all
#  define OSSL_DECODER_names_do_all OPENSSL_MANGLER(OSSL_DECODER_names_do_all)
# endif
#else
# ifndef _OSSL_DECODER_names_do_all
#  define _OSSL_DECODER_names_do_all OPENSSL_MANGLER_ASM(OSSL_DECODER_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_settable_ctx_params
#  define OSSL_DECODER_settable_ctx_params OPENSSL_MANGLER(OSSL_DECODER_settable_ctx_params)
# endif
#else
# ifndef _OSSL_DECODER_settable_ctx_params
#  define _OSSL_DECODER_settable_ctx_params OPENSSL_MANGLER_ASM(OSSL_DECODER_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_DECODER_up_ref
#  define OSSL_DECODER_up_ref OPENSSL_MANGLER(OSSL_DECODER_up_ref)
# endif
#else
# ifndef _OSSL_DECODER_up_ref
#  define _OSSL_DECODER_up_ref OPENSSL_MANGLER_ASM(OSSL_DECODER_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_EC_curve_nid2name
#  define OSSL_EC_curve_nid2name OPENSSL_MANGLER(OSSL_EC_curve_nid2name)
# endif
#else
# ifndef _OSSL_EC_curve_nid2name
#  define _OSSL_EC_curve_nid2name OPENSSL_MANGLER_ASM(OSSL_EC_curve_nid2name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_add_encoder
#  define OSSL_ENCODER_CTX_add_encoder OPENSSL_MANGLER(OSSL_ENCODER_CTX_add_encoder)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_add_encoder
#  define _OSSL_ENCODER_CTX_add_encoder OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_add_encoder)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_add_extra
#  define OSSL_ENCODER_CTX_add_extra OPENSSL_MANGLER(OSSL_ENCODER_CTX_add_extra)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_add_extra
#  define _OSSL_ENCODER_CTX_add_extra OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_add_extra)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_free
#  define OSSL_ENCODER_CTX_free OPENSSL_MANGLER(OSSL_ENCODER_CTX_free)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_free
#  define _OSSL_ENCODER_CTX_free OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_get_num_encoders
#  define OSSL_ENCODER_CTX_get_num_encoders OPENSSL_MANGLER(OSSL_ENCODER_CTX_get_num_encoders)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_get_num_encoders
#  define _OSSL_ENCODER_CTX_get_num_encoders OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_get_num_encoders)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_new
#  define OSSL_ENCODER_CTX_new OPENSSL_MANGLER(OSSL_ENCODER_CTX_new)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_new
#  define _OSSL_ENCODER_CTX_new OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_new_for_pkey
#  define OSSL_ENCODER_CTX_new_for_pkey OPENSSL_MANGLER(OSSL_ENCODER_CTX_new_for_pkey)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_new_for_pkey
#  define _OSSL_ENCODER_CTX_new_for_pkey OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_new_for_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_cipher
#  define OSSL_ENCODER_CTX_set_cipher OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_cipher)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_cipher
#  define _OSSL_ENCODER_CTX_set_cipher OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_cleanup
#  define OSSL_ENCODER_CTX_set_cleanup OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_cleanup)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_cleanup
#  define _OSSL_ENCODER_CTX_set_cleanup OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_construct
#  define OSSL_ENCODER_CTX_set_construct OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_construct)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_construct
#  define _OSSL_ENCODER_CTX_set_construct OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_construct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_construct_data
#  define OSSL_ENCODER_CTX_set_construct_data OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_construct_data)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_construct_data
#  define _OSSL_ENCODER_CTX_set_construct_data OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_construct_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_output_structure
#  define OSSL_ENCODER_CTX_set_output_structure OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_output_structure)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_output_structure
#  define _OSSL_ENCODER_CTX_set_output_structure OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_output_structure)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_output_type
#  define OSSL_ENCODER_CTX_set_output_type OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_output_type)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_output_type
#  define _OSSL_ENCODER_CTX_set_output_type OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_output_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_params
#  define OSSL_ENCODER_CTX_set_params OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_params)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_params
#  define _OSSL_ENCODER_CTX_set_params OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_passphrase
#  define OSSL_ENCODER_CTX_set_passphrase OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_passphrase)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_passphrase
#  define _OSSL_ENCODER_CTX_set_passphrase OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_passphrase)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_passphrase_cb
#  define OSSL_ENCODER_CTX_set_passphrase_cb OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_passphrase_cb)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_passphrase_cb
#  define _OSSL_ENCODER_CTX_set_passphrase_cb OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_passphrase_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_passphrase_ui
#  define OSSL_ENCODER_CTX_set_passphrase_ui OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_passphrase_ui)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_passphrase_ui
#  define _OSSL_ENCODER_CTX_set_passphrase_ui OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_passphrase_ui)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_pem_password_cb
#  define OSSL_ENCODER_CTX_set_pem_password_cb OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_pem_password_cb)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_pem_password_cb
#  define _OSSL_ENCODER_CTX_set_pem_password_cb OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_pem_password_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_CTX_set_selection
#  define OSSL_ENCODER_CTX_set_selection OPENSSL_MANGLER(OSSL_ENCODER_CTX_set_selection)
# endif
#else
# ifndef _OSSL_ENCODER_CTX_set_selection
#  define _OSSL_ENCODER_CTX_set_selection OPENSSL_MANGLER_ASM(OSSL_ENCODER_CTX_set_selection)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_INSTANCE_get_encoder
#  define OSSL_ENCODER_INSTANCE_get_encoder OPENSSL_MANGLER(OSSL_ENCODER_INSTANCE_get_encoder)
# endif
#else
# ifndef _OSSL_ENCODER_INSTANCE_get_encoder
#  define _OSSL_ENCODER_INSTANCE_get_encoder OPENSSL_MANGLER_ASM(OSSL_ENCODER_INSTANCE_get_encoder)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_INSTANCE_get_encoder_ctx
#  define OSSL_ENCODER_INSTANCE_get_encoder_ctx OPENSSL_MANGLER(OSSL_ENCODER_INSTANCE_get_encoder_ctx)
# endif
#else
# ifndef _OSSL_ENCODER_INSTANCE_get_encoder_ctx
#  define _OSSL_ENCODER_INSTANCE_get_encoder_ctx OPENSSL_MANGLER_ASM(OSSL_ENCODER_INSTANCE_get_encoder_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_INSTANCE_get_output_structure
#  define OSSL_ENCODER_INSTANCE_get_output_structure OPENSSL_MANGLER(OSSL_ENCODER_INSTANCE_get_output_structure)
# endif
#else
# ifndef _OSSL_ENCODER_INSTANCE_get_output_structure
#  define _OSSL_ENCODER_INSTANCE_get_output_structure OPENSSL_MANGLER_ASM(OSSL_ENCODER_INSTANCE_get_output_structure)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_INSTANCE_get_output_type
#  define OSSL_ENCODER_INSTANCE_get_output_type OPENSSL_MANGLER(OSSL_ENCODER_INSTANCE_get_output_type)
# endif
#else
# ifndef _OSSL_ENCODER_INSTANCE_get_output_type
#  define _OSSL_ENCODER_INSTANCE_get_output_type OPENSSL_MANGLER_ASM(OSSL_ENCODER_INSTANCE_get_output_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_do_all_provided
#  define OSSL_ENCODER_do_all_provided OPENSSL_MANGLER(OSSL_ENCODER_do_all_provided)
# endif
#else
# ifndef _OSSL_ENCODER_do_all_provided
#  define _OSSL_ENCODER_do_all_provided OPENSSL_MANGLER_ASM(OSSL_ENCODER_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_fetch
#  define OSSL_ENCODER_fetch OPENSSL_MANGLER(OSSL_ENCODER_fetch)
# endif
#else
# ifndef _OSSL_ENCODER_fetch
#  define _OSSL_ENCODER_fetch OPENSSL_MANGLER_ASM(OSSL_ENCODER_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_free
#  define OSSL_ENCODER_free OPENSSL_MANGLER(OSSL_ENCODER_free)
# endif
#else
# ifndef _OSSL_ENCODER_free
#  define _OSSL_ENCODER_free OPENSSL_MANGLER_ASM(OSSL_ENCODER_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_get0_description
#  define OSSL_ENCODER_get0_description OPENSSL_MANGLER(OSSL_ENCODER_get0_description)
# endif
#else
# ifndef _OSSL_ENCODER_get0_description
#  define _OSSL_ENCODER_get0_description OPENSSL_MANGLER_ASM(OSSL_ENCODER_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_get0_name
#  define OSSL_ENCODER_get0_name OPENSSL_MANGLER(OSSL_ENCODER_get0_name)
# endif
#else
# ifndef _OSSL_ENCODER_get0_name
#  define _OSSL_ENCODER_get0_name OPENSSL_MANGLER_ASM(OSSL_ENCODER_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_get0_properties
#  define OSSL_ENCODER_get0_properties OPENSSL_MANGLER(OSSL_ENCODER_get0_properties)
# endif
#else
# ifndef _OSSL_ENCODER_get0_properties
#  define _OSSL_ENCODER_get0_properties OPENSSL_MANGLER_ASM(OSSL_ENCODER_get0_properties)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_get0_provider
#  define OSSL_ENCODER_get0_provider OPENSSL_MANGLER(OSSL_ENCODER_get0_provider)
# endif
#else
# ifndef _OSSL_ENCODER_get0_provider
#  define _OSSL_ENCODER_get0_provider OPENSSL_MANGLER_ASM(OSSL_ENCODER_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_get_params
#  define OSSL_ENCODER_get_params OPENSSL_MANGLER(OSSL_ENCODER_get_params)
# endif
#else
# ifndef _OSSL_ENCODER_get_params
#  define _OSSL_ENCODER_get_params OPENSSL_MANGLER_ASM(OSSL_ENCODER_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_gettable_params
#  define OSSL_ENCODER_gettable_params OPENSSL_MANGLER(OSSL_ENCODER_gettable_params)
# endif
#else
# ifndef _OSSL_ENCODER_gettable_params
#  define _OSSL_ENCODER_gettable_params OPENSSL_MANGLER_ASM(OSSL_ENCODER_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_is_a
#  define OSSL_ENCODER_is_a OPENSSL_MANGLER(OSSL_ENCODER_is_a)
# endif
#else
# ifndef _OSSL_ENCODER_is_a
#  define _OSSL_ENCODER_is_a OPENSSL_MANGLER_ASM(OSSL_ENCODER_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_names_do_all
#  define OSSL_ENCODER_names_do_all OPENSSL_MANGLER(OSSL_ENCODER_names_do_all)
# endif
#else
# ifndef _OSSL_ENCODER_names_do_all
#  define _OSSL_ENCODER_names_do_all OPENSSL_MANGLER_ASM(OSSL_ENCODER_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_settable_ctx_params
#  define OSSL_ENCODER_settable_ctx_params OPENSSL_MANGLER(OSSL_ENCODER_settable_ctx_params)
# endif
#else
# ifndef _OSSL_ENCODER_settable_ctx_params
#  define _OSSL_ENCODER_settable_ctx_params OPENSSL_MANGLER_ASM(OSSL_ENCODER_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_to_bio
#  define OSSL_ENCODER_to_bio OPENSSL_MANGLER(OSSL_ENCODER_to_bio)
# endif
#else
# ifndef _OSSL_ENCODER_to_bio
#  define _OSSL_ENCODER_to_bio OPENSSL_MANGLER_ASM(OSSL_ENCODER_to_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_to_data
#  define OSSL_ENCODER_to_data OPENSSL_MANGLER(OSSL_ENCODER_to_data)
# endif
#else
# ifndef _OSSL_ENCODER_to_data
#  define _OSSL_ENCODER_to_data OPENSSL_MANGLER_ASM(OSSL_ENCODER_to_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_to_fp
#  define OSSL_ENCODER_to_fp OPENSSL_MANGLER(OSSL_ENCODER_to_fp)
# endif
#else
# ifndef _OSSL_ENCODER_to_fp
#  define _OSSL_ENCODER_to_fp OPENSSL_MANGLER_ASM(OSSL_ENCODER_to_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ENCODER_up_ref
#  define OSSL_ENCODER_up_ref OPENSSL_MANGLER(OSSL_ENCODER_up_ref)
# endif
#else
# ifndef _OSSL_ENCODER_up_ref
#  define _OSSL_ENCODER_up_ref OPENSSL_MANGLER_ASM(OSSL_ENCODER_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ESS_check_signing_certs
#  define OSSL_ESS_check_signing_certs OPENSSL_MANGLER(OSSL_ESS_check_signing_certs)
# endif
#else
# ifndef _OSSL_ESS_check_signing_certs
#  define _OSSL_ESS_check_signing_certs OPENSSL_MANGLER_ASM(OSSL_ESS_check_signing_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ESS_signing_cert_new_init
#  define OSSL_ESS_signing_cert_new_init OPENSSL_MANGLER(OSSL_ESS_signing_cert_new_init)
# endif
#else
# ifndef _OSSL_ESS_signing_cert_new_init
#  define _OSSL_ESS_signing_cert_new_init OPENSSL_MANGLER_ASM(OSSL_ESS_signing_cert_new_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_ESS_signing_cert_v2_new_init
#  define OSSL_ESS_signing_cert_v2_new_init OPENSSL_MANGLER(OSSL_ESS_signing_cert_v2_new_init)
# endif
#else
# ifndef _OSSL_ESS_signing_cert_v2_new_init
#  define _OSSL_ESS_signing_cert_v2_new_init OPENSSL_MANGLER_ASM(OSSL_ESS_signing_cert_v2_new_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_add1_header
#  define OSSL_HTTP_REQ_CTX_add1_header OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_add1_header)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_add1_header
#  define _OSSL_HTTP_REQ_CTX_add1_header OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_add1_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_exchange
#  define OSSL_HTTP_REQ_CTX_exchange OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_exchange)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_exchange
#  define _OSSL_HTTP_REQ_CTX_exchange OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_exchange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_free
#  define OSSL_HTTP_REQ_CTX_free OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_free)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_free
#  define _OSSL_HTTP_REQ_CTX_free OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_get0_mem_bio
#  define OSSL_HTTP_REQ_CTX_get0_mem_bio OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_get0_mem_bio)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_get0_mem_bio
#  define _OSSL_HTTP_REQ_CTX_get0_mem_bio OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_get0_mem_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_get_resp_len
#  define OSSL_HTTP_REQ_CTX_get_resp_len OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_get_resp_len)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_get_resp_len
#  define _OSSL_HTTP_REQ_CTX_get_resp_len OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_get_resp_len)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_nbio
#  define OSSL_HTTP_REQ_CTX_nbio OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_nbio)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_nbio
#  define _OSSL_HTTP_REQ_CTX_nbio OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_nbio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_nbio_d2i
#  define OSSL_HTTP_REQ_CTX_nbio_d2i OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_nbio_d2i)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_nbio_d2i
#  define _OSSL_HTTP_REQ_CTX_nbio_d2i OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_nbio_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_new
#  define OSSL_HTTP_REQ_CTX_new OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_new)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_new
#  define _OSSL_HTTP_REQ_CTX_new OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_set1_req
#  define OSSL_HTTP_REQ_CTX_set1_req OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_set1_req)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_set1_req
#  define _OSSL_HTTP_REQ_CTX_set1_req OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_set1_req)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_set_expected
#  define OSSL_HTTP_REQ_CTX_set_expected OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_set_expected)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_set_expected
#  define _OSSL_HTTP_REQ_CTX_set_expected OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_set_expected)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_set_max_response_length
#  define OSSL_HTTP_REQ_CTX_set_max_response_length OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_set_max_response_length)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_set_max_response_length
#  define _OSSL_HTTP_REQ_CTX_set_max_response_length OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_set_max_response_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_REQ_CTX_set_request_line
#  define OSSL_HTTP_REQ_CTX_set_request_line OPENSSL_MANGLER(OSSL_HTTP_REQ_CTX_set_request_line)
# endif
#else
# ifndef _OSSL_HTTP_REQ_CTX_set_request_line
#  define _OSSL_HTTP_REQ_CTX_set_request_line OPENSSL_MANGLER_ASM(OSSL_HTTP_REQ_CTX_set_request_line)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_adapt_proxy
#  define OSSL_HTTP_adapt_proxy OPENSSL_MANGLER(OSSL_HTTP_adapt_proxy)
# endif
#else
# ifndef _OSSL_HTTP_adapt_proxy
#  define _OSSL_HTTP_adapt_proxy OPENSSL_MANGLER_ASM(OSSL_HTTP_adapt_proxy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_close
#  define OSSL_HTTP_close OPENSSL_MANGLER(OSSL_HTTP_close)
# endif
#else
# ifndef _OSSL_HTTP_close
#  define _OSSL_HTTP_close OPENSSL_MANGLER_ASM(OSSL_HTTP_close)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_exchange
#  define OSSL_HTTP_exchange OPENSSL_MANGLER(OSSL_HTTP_exchange)
# endif
#else
# ifndef _OSSL_HTTP_exchange
#  define _OSSL_HTTP_exchange OPENSSL_MANGLER_ASM(OSSL_HTTP_exchange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_get
#  define OSSL_HTTP_get OPENSSL_MANGLER(OSSL_HTTP_get)
# endif
#else
# ifndef _OSSL_HTTP_get
#  define _OSSL_HTTP_get OPENSSL_MANGLER_ASM(OSSL_HTTP_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_is_alive
#  define OSSL_HTTP_is_alive OPENSSL_MANGLER(OSSL_HTTP_is_alive)
# endif
#else
# ifndef _OSSL_HTTP_is_alive
#  define _OSSL_HTTP_is_alive OPENSSL_MANGLER_ASM(OSSL_HTTP_is_alive)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_open
#  define OSSL_HTTP_open OPENSSL_MANGLER(OSSL_HTTP_open)
# endif
#else
# ifndef _OSSL_HTTP_open
#  define _OSSL_HTTP_open OPENSSL_MANGLER_ASM(OSSL_HTTP_open)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_parse_url
#  define OSSL_HTTP_parse_url OPENSSL_MANGLER(OSSL_HTTP_parse_url)
# endif
#else
# ifndef _OSSL_HTTP_parse_url
#  define _OSSL_HTTP_parse_url OPENSSL_MANGLER_ASM(OSSL_HTTP_parse_url)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_proxy_connect
#  define OSSL_HTTP_proxy_connect OPENSSL_MANGLER(OSSL_HTTP_proxy_connect)
# endif
#else
# ifndef _OSSL_HTTP_proxy_connect
#  define _OSSL_HTTP_proxy_connect OPENSSL_MANGLER_ASM(OSSL_HTTP_proxy_connect)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_set1_request
#  define OSSL_HTTP_set1_request OPENSSL_MANGLER(OSSL_HTTP_set1_request)
# endif
#else
# ifndef _OSSL_HTTP_set1_request
#  define _OSSL_HTTP_set1_request OPENSSL_MANGLER_ASM(OSSL_HTTP_set1_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_HTTP_transfer
#  define OSSL_HTTP_transfer OPENSSL_MANGLER(OSSL_HTTP_transfer)
# endif
#else
# ifndef _OSSL_HTTP_transfer
#  define _OSSL_HTTP_transfer OPENSSL_MANGLER_ASM(OSSL_HTTP_transfer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_LIB_CTX_free
#  define OSSL_LIB_CTX_free OPENSSL_MANGLER(OSSL_LIB_CTX_free)
# endif
#else
# ifndef _OSSL_LIB_CTX_free
#  define _OSSL_LIB_CTX_free OPENSSL_MANGLER_ASM(OSSL_LIB_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_LIB_CTX_get0_global_default
#  define OSSL_LIB_CTX_get0_global_default OPENSSL_MANGLER(OSSL_LIB_CTX_get0_global_default)
# endif
#else
# ifndef _OSSL_LIB_CTX_get0_global_default
#  define _OSSL_LIB_CTX_get0_global_default OPENSSL_MANGLER_ASM(OSSL_LIB_CTX_get0_global_default)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_LIB_CTX_load_config
#  define OSSL_LIB_CTX_load_config OPENSSL_MANGLER(OSSL_LIB_CTX_load_config)
# endif
#else
# ifndef _OSSL_LIB_CTX_load_config
#  define _OSSL_LIB_CTX_load_config OPENSSL_MANGLER_ASM(OSSL_LIB_CTX_load_config)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_LIB_CTX_new
#  define OSSL_LIB_CTX_new OPENSSL_MANGLER(OSSL_LIB_CTX_new)
# endif
#else
# ifndef _OSSL_LIB_CTX_new
#  define _OSSL_LIB_CTX_new OPENSSL_MANGLER_ASM(OSSL_LIB_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_LIB_CTX_new_child
#  define OSSL_LIB_CTX_new_child OPENSSL_MANGLER(OSSL_LIB_CTX_new_child)
# endif
#else
# ifndef _OSSL_LIB_CTX_new_child
#  define _OSSL_LIB_CTX_new_child OPENSSL_MANGLER_ASM(OSSL_LIB_CTX_new_child)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_LIB_CTX_new_from_dispatch
#  define OSSL_LIB_CTX_new_from_dispatch OPENSSL_MANGLER(OSSL_LIB_CTX_new_from_dispatch)
# endif
#else
# ifndef _OSSL_LIB_CTX_new_from_dispatch
#  define _OSSL_LIB_CTX_new_from_dispatch OPENSSL_MANGLER_ASM(OSSL_LIB_CTX_new_from_dispatch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_LIB_CTX_set0_default
#  define OSSL_LIB_CTX_set0_default OPENSSL_MANGLER(OSSL_LIB_CTX_set0_default)
# endif
#else
# ifndef _OSSL_LIB_CTX_set0_default
#  define _OSSL_LIB_CTX_set0_default OPENSSL_MANGLER_ASM(OSSL_LIB_CTX_set0_default)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_free
#  define OSSL_PARAM_BLD_free OPENSSL_MANGLER(OSSL_PARAM_BLD_free)
# endif
#else
# ifndef _OSSL_PARAM_BLD_free
#  define _OSSL_PARAM_BLD_free OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_new
#  define OSSL_PARAM_BLD_new OPENSSL_MANGLER(OSSL_PARAM_BLD_new)
# endif
#else
# ifndef _OSSL_PARAM_BLD_new
#  define _OSSL_PARAM_BLD_new OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_BN
#  define OSSL_PARAM_BLD_push_BN OPENSSL_MANGLER(OSSL_PARAM_BLD_push_BN)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_BN
#  define _OSSL_PARAM_BLD_push_BN OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_BN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_BN_pad
#  define OSSL_PARAM_BLD_push_BN_pad OPENSSL_MANGLER(OSSL_PARAM_BLD_push_BN_pad)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_BN_pad
#  define _OSSL_PARAM_BLD_push_BN_pad OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_BN_pad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_double
#  define OSSL_PARAM_BLD_push_double OPENSSL_MANGLER(OSSL_PARAM_BLD_push_double)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_double
#  define _OSSL_PARAM_BLD_push_double OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_double)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_int
#  define OSSL_PARAM_BLD_push_int OPENSSL_MANGLER(OSSL_PARAM_BLD_push_int)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_int
#  define _OSSL_PARAM_BLD_push_int OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_int32
#  define OSSL_PARAM_BLD_push_int32 OPENSSL_MANGLER(OSSL_PARAM_BLD_push_int32)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_int32
#  define _OSSL_PARAM_BLD_push_int32 OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_int32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_int64
#  define OSSL_PARAM_BLD_push_int64 OPENSSL_MANGLER(OSSL_PARAM_BLD_push_int64)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_int64
#  define _OSSL_PARAM_BLD_push_int64 OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_int64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_long
#  define OSSL_PARAM_BLD_push_long OPENSSL_MANGLER(OSSL_PARAM_BLD_push_long)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_long
#  define _OSSL_PARAM_BLD_push_long OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_long)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_octet_ptr
#  define OSSL_PARAM_BLD_push_octet_ptr OPENSSL_MANGLER(OSSL_PARAM_BLD_push_octet_ptr)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_octet_ptr
#  define _OSSL_PARAM_BLD_push_octet_ptr OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_octet_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_octet_string
#  define OSSL_PARAM_BLD_push_octet_string OPENSSL_MANGLER(OSSL_PARAM_BLD_push_octet_string)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_octet_string
#  define _OSSL_PARAM_BLD_push_octet_string OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_octet_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_size_t
#  define OSSL_PARAM_BLD_push_size_t OPENSSL_MANGLER(OSSL_PARAM_BLD_push_size_t)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_size_t
#  define _OSSL_PARAM_BLD_push_size_t OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_size_t)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_time_t
#  define OSSL_PARAM_BLD_push_time_t OPENSSL_MANGLER(OSSL_PARAM_BLD_push_time_t)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_time_t
#  define _OSSL_PARAM_BLD_push_time_t OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_time_t)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_uint
#  define OSSL_PARAM_BLD_push_uint OPENSSL_MANGLER(OSSL_PARAM_BLD_push_uint)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_uint
#  define _OSSL_PARAM_BLD_push_uint OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_uint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_uint32
#  define OSSL_PARAM_BLD_push_uint32 OPENSSL_MANGLER(OSSL_PARAM_BLD_push_uint32)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_uint32
#  define _OSSL_PARAM_BLD_push_uint32 OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_uint32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_uint64
#  define OSSL_PARAM_BLD_push_uint64 OPENSSL_MANGLER(OSSL_PARAM_BLD_push_uint64)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_uint64
#  define _OSSL_PARAM_BLD_push_uint64 OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_uint64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_ulong
#  define OSSL_PARAM_BLD_push_ulong OPENSSL_MANGLER(OSSL_PARAM_BLD_push_ulong)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_ulong
#  define _OSSL_PARAM_BLD_push_ulong OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_ulong)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_utf8_ptr
#  define OSSL_PARAM_BLD_push_utf8_ptr OPENSSL_MANGLER(OSSL_PARAM_BLD_push_utf8_ptr)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_utf8_ptr
#  define _OSSL_PARAM_BLD_push_utf8_ptr OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_utf8_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_push_utf8_string
#  define OSSL_PARAM_BLD_push_utf8_string OPENSSL_MANGLER(OSSL_PARAM_BLD_push_utf8_string)
# endif
#else
# ifndef _OSSL_PARAM_BLD_push_utf8_string
#  define _OSSL_PARAM_BLD_push_utf8_string OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_push_utf8_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_BLD_to_param
#  define OSSL_PARAM_BLD_to_param OPENSSL_MANGLER(OSSL_PARAM_BLD_to_param)
# endif
#else
# ifndef _OSSL_PARAM_BLD_to_param
#  define _OSSL_PARAM_BLD_to_param OPENSSL_MANGLER_ASM(OSSL_PARAM_BLD_to_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_allocate_from_text
#  define OSSL_PARAM_allocate_from_text OPENSSL_MANGLER(OSSL_PARAM_allocate_from_text)
# endif
#else
# ifndef _OSSL_PARAM_allocate_from_text
#  define _OSSL_PARAM_allocate_from_text OPENSSL_MANGLER_ASM(OSSL_PARAM_allocate_from_text)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_BN
#  define OSSL_PARAM_construct_BN OPENSSL_MANGLER(OSSL_PARAM_construct_BN)
# endif
#else
# ifndef _OSSL_PARAM_construct_BN
#  define _OSSL_PARAM_construct_BN OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_BN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_double
#  define OSSL_PARAM_construct_double OPENSSL_MANGLER(OSSL_PARAM_construct_double)
# endif
#else
# ifndef _OSSL_PARAM_construct_double
#  define _OSSL_PARAM_construct_double OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_double)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_end
#  define OSSL_PARAM_construct_end OPENSSL_MANGLER(OSSL_PARAM_construct_end)
# endif
#else
# ifndef _OSSL_PARAM_construct_end
#  define _OSSL_PARAM_construct_end OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_end)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_int
#  define OSSL_PARAM_construct_int OPENSSL_MANGLER(OSSL_PARAM_construct_int)
# endif
#else
# ifndef _OSSL_PARAM_construct_int
#  define _OSSL_PARAM_construct_int OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_int32
#  define OSSL_PARAM_construct_int32 OPENSSL_MANGLER(OSSL_PARAM_construct_int32)
# endif
#else
# ifndef _OSSL_PARAM_construct_int32
#  define _OSSL_PARAM_construct_int32 OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_int32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_int64
#  define OSSL_PARAM_construct_int64 OPENSSL_MANGLER(OSSL_PARAM_construct_int64)
# endif
#else
# ifndef _OSSL_PARAM_construct_int64
#  define _OSSL_PARAM_construct_int64 OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_int64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_long
#  define OSSL_PARAM_construct_long OPENSSL_MANGLER(OSSL_PARAM_construct_long)
# endif
#else
# ifndef _OSSL_PARAM_construct_long
#  define _OSSL_PARAM_construct_long OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_long)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_octet_ptr
#  define OSSL_PARAM_construct_octet_ptr OPENSSL_MANGLER(OSSL_PARAM_construct_octet_ptr)
# endif
#else
# ifndef _OSSL_PARAM_construct_octet_ptr
#  define _OSSL_PARAM_construct_octet_ptr OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_octet_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_octet_string
#  define OSSL_PARAM_construct_octet_string OPENSSL_MANGLER(OSSL_PARAM_construct_octet_string)
# endif
#else
# ifndef _OSSL_PARAM_construct_octet_string
#  define _OSSL_PARAM_construct_octet_string OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_octet_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_size_t
#  define OSSL_PARAM_construct_size_t OPENSSL_MANGLER(OSSL_PARAM_construct_size_t)
# endif
#else
# ifndef _OSSL_PARAM_construct_size_t
#  define _OSSL_PARAM_construct_size_t OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_size_t)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_time_t
#  define OSSL_PARAM_construct_time_t OPENSSL_MANGLER(OSSL_PARAM_construct_time_t)
# endif
#else
# ifndef _OSSL_PARAM_construct_time_t
#  define _OSSL_PARAM_construct_time_t OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_time_t)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_uint
#  define OSSL_PARAM_construct_uint OPENSSL_MANGLER(OSSL_PARAM_construct_uint)
# endif
#else
# ifndef _OSSL_PARAM_construct_uint
#  define _OSSL_PARAM_construct_uint OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_uint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_uint32
#  define OSSL_PARAM_construct_uint32 OPENSSL_MANGLER(OSSL_PARAM_construct_uint32)
# endif
#else
# ifndef _OSSL_PARAM_construct_uint32
#  define _OSSL_PARAM_construct_uint32 OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_uint32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_uint64
#  define OSSL_PARAM_construct_uint64 OPENSSL_MANGLER(OSSL_PARAM_construct_uint64)
# endif
#else
# ifndef _OSSL_PARAM_construct_uint64
#  define _OSSL_PARAM_construct_uint64 OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_uint64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_ulong
#  define OSSL_PARAM_construct_ulong OPENSSL_MANGLER(OSSL_PARAM_construct_ulong)
# endif
#else
# ifndef _OSSL_PARAM_construct_ulong
#  define _OSSL_PARAM_construct_ulong OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_ulong)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_utf8_ptr
#  define OSSL_PARAM_construct_utf8_ptr OPENSSL_MANGLER(OSSL_PARAM_construct_utf8_ptr)
# endif
#else
# ifndef _OSSL_PARAM_construct_utf8_ptr
#  define _OSSL_PARAM_construct_utf8_ptr OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_utf8_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_construct_utf8_string
#  define OSSL_PARAM_construct_utf8_string OPENSSL_MANGLER(OSSL_PARAM_construct_utf8_string)
# endif
#else
# ifndef _OSSL_PARAM_construct_utf8_string
#  define _OSSL_PARAM_construct_utf8_string OPENSSL_MANGLER_ASM(OSSL_PARAM_construct_utf8_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_dup
#  define OSSL_PARAM_dup OPENSSL_MANGLER(OSSL_PARAM_dup)
# endif
#else
# ifndef _OSSL_PARAM_dup
#  define _OSSL_PARAM_dup OPENSSL_MANGLER_ASM(OSSL_PARAM_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_free
#  define OSSL_PARAM_free OPENSSL_MANGLER(OSSL_PARAM_free)
# endif
#else
# ifndef _OSSL_PARAM_free
#  define _OSSL_PARAM_free OPENSSL_MANGLER_ASM(OSSL_PARAM_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_BN
#  define OSSL_PARAM_get_BN OPENSSL_MANGLER(OSSL_PARAM_get_BN)
# endif
#else
# ifndef _OSSL_PARAM_get_BN
#  define _OSSL_PARAM_get_BN OPENSSL_MANGLER_ASM(OSSL_PARAM_get_BN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_double
#  define OSSL_PARAM_get_double OPENSSL_MANGLER(OSSL_PARAM_get_double)
# endif
#else
# ifndef _OSSL_PARAM_get_double
#  define _OSSL_PARAM_get_double OPENSSL_MANGLER_ASM(OSSL_PARAM_get_double)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_int
#  define OSSL_PARAM_get_int OPENSSL_MANGLER(OSSL_PARAM_get_int)
# endif
#else
# ifndef _OSSL_PARAM_get_int
#  define _OSSL_PARAM_get_int OPENSSL_MANGLER_ASM(OSSL_PARAM_get_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_int32
#  define OSSL_PARAM_get_int32 OPENSSL_MANGLER(OSSL_PARAM_get_int32)
# endif
#else
# ifndef _OSSL_PARAM_get_int32
#  define _OSSL_PARAM_get_int32 OPENSSL_MANGLER_ASM(OSSL_PARAM_get_int32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_int64
#  define OSSL_PARAM_get_int64 OPENSSL_MANGLER(OSSL_PARAM_get_int64)
# endif
#else
# ifndef _OSSL_PARAM_get_int64
#  define _OSSL_PARAM_get_int64 OPENSSL_MANGLER_ASM(OSSL_PARAM_get_int64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_long
#  define OSSL_PARAM_get_long OPENSSL_MANGLER(OSSL_PARAM_get_long)
# endif
#else
# ifndef _OSSL_PARAM_get_long
#  define _OSSL_PARAM_get_long OPENSSL_MANGLER_ASM(OSSL_PARAM_get_long)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_octet_ptr
#  define OSSL_PARAM_get_octet_ptr OPENSSL_MANGLER(OSSL_PARAM_get_octet_ptr)
# endif
#else
# ifndef _OSSL_PARAM_get_octet_ptr
#  define _OSSL_PARAM_get_octet_ptr OPENSSL_MANGLER_ASM(OSSL_PARAM_get_octet_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_octet_string
#  define OSSL_PARAM_get_octet_string OPENSSL_MANGLER(OSSL_PARAM_get_octet_string)
# endif
#else
# ifndef _OSSL_PARAM_get_octet_string
#  define _OSSL_PARAM_get_octet_string OPENSSL_MANGLER_ASM(OSSL_PARAM_get_octet_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_octet_string_ptr
#  define OSSL_PARAM_get_octet_string_ptr OPENSSL_MANGLER(OSSL_PARAM_get_octet_string_ptr)
# endif
#else
# ifndef _OSSL_PARAM_get_octet_string_ptr
#  define _OSSL_PARAM_get_octet_string_ptr OPENSSL_MANGLER_ASM(OSSL_PARAM_get_octet_string_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_size_t
#  define OSSL_PARAM_get_size_t OPENSSL_MANGLER(OSSL_PARAM_get_size_t)
# endif
#else
# ifndef _OSSL_PARAM_get_size_t
#  define _OSSL_PARAM_get_size_t OPENSSL_MANGLER_ASM(OSSL_PARAM_get_size_t)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_time_t
#  define OSSL_PARAM_get_time_t OPENSSL_MANGLER(OSSL_PARAM_get_time_t)
# endif
#else
# ifndef _OSSL_PARAM_get_time_t
#  define _OSSL_PARAM_get_time_t OPENSSL_MANGLER_ASM(OSSL_PARAM_get_time_t)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_uint
#  define OSSL_PARAM_get_uint OPENSSL_MANGLER(OSSL_PARAM_get_uint)
# endif
#else
# ifndef _OSSL_PARAM_get_uint
#  define _OSSL_PARAM_get_uint OPENSSL_MANGLER_ASM(OSSL_PARAM_get_uint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_uint32
#  define OSSL_PARAM_get_uint32 OPENSSL_MANGLER(OSSL_PARAM_get_uint32)
# endif
#else
# ifndef _OSSL_PARAM_get_uint32
#  define _OSSL_PARAM_get_uint32 OPENSSL_MANGLER_ASM(OSSL_PARAM_get_uint32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_uint64
#  define OSSL_PARAM_get_uint64 OPENSSL_MANGLER(OSSL_PARAM_get_uint64)
# endif
#else
# ifndef _OSSL_PARAM_get_uint64
#  define _OSSL_PARAM_get_uint64 OPENSSL_MANGLER_ASM(OSSL_PARAM_get_uint64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_ulong
#  define OSSL_PARAM_get_ulong OPENSSL_MANGLER(OSSL_PARAM_get_ulong)
# endif
#else
# ifndef _OSSL_PARAM_get_ulong
#  define _OSSL_PARAM_get_ulong OPENSSL_MANGLER_ASM(OSSL_PARAM_get_ulong)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_utf8_ptr
#  define OSSL_PARAM_get_utf8_ptr OPENSSL_MANGLER(OSSL_PARAM_get_utf8_ptr)
# endif
#else
# ifndef _OSSL_PARAM_get_utf8_ptr
#  define _OSSL_PARAM_get_utf8_ptr OPENSSL_MANGLER_ASM(OSSL_PARAM_get_utf8_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_utf8_string
#  define OSSL_PARAM_get_utf8_string OPENSSL_MANGLER(OSSL_PARAM_get_utf8_string)
# endif
#else
# ifndef _OSSL_PARAM_get_utf8_string
#  define _OSSL_PARAM_get_utf8_string OPENSSL_MANGLER_ASM(OSSL_PARAM_get_utf8_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_get_utf8_string_ptr
#  define OSSL_PARAM_get_utf8_string_ptr OPENSSL_MANGLER(OSSL_PARAM_get_utf8_string_ptr)
# endif
#else
# ifndef _OSSL_PARAM_get_utf8_string_ptr
#  define _OSSL_PARAM_get_utf8_string_ptr OPENSSL_MANGLER_ASM(OSSL_PARAM_get_utf8_string_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_locate
#  define OSSL_PARAM_locate OPENSSL_MANGLER(OSSL_PARAM_locate)
# endif
#else
# ifndef _OSSL_PARAM_locate
#  define _OSSL_PARAM_locate OPENSSL_MANGLER_ASM(OSSL_PARAM_locate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_locate_const
#  define OSSL_PARAM_locate_const OPENSSL_MANGLER(OSSL_PARAM_locate_const)
# endif
#else
# ifndef _OSSL_PARAM_locate_const
#  define _OSSL_PARAM_locate_const OPENSSL_MANGLER_ASM(OSSL_PARAM_locate_const)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_merge
#  define OSSL_PARAM_merge OPENSSL_MANGLER(OSSL_PARAM_merge)
# endif
#else
# ifndef _OSSL_PARAM_merge
#  define _OSSL_PARAM_merge OPENSSL_MANGLER_ASM(OSSL_PARAM_merge)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_modified
#  define OSSL_PARAM_modified OPENSSL_MANGLER(OSSL_PARAM_modified)
# endif
#else
# ifndef _OSSL_PARAM_modified
#  define _OSSL_PARAM_modified OPENSSL_MANGLER_ASM(OSSL_PARAM_modified)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_BN
#  define OSSL_PARAM_set_BN OPENSSL_MANGLER(OSSL_PARAM_set_BN)
# endif
#else
# ifndef _OSSL_PARAM_set_BN
#  define _OSSL_PARAM_set_BN OPENSSL_MANGLER_ASM(OSSL_PARAM_set_BN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_all_unmodified
#  define OSSL_PARAM_set_all_unmodified OPENSSL_MANGLER(OSSL_PARAM_set_all_unmodified)
# endif
#else
# ifndef _OSSL_PARAM_set_all_unmodified
#  define _OSSL_PARAM_set_all_unmodified OPENSSL_MANGLER_ASM(OSSL_PARAM_set_all_unmodified)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_double
#  define OSSL_PARAM_set_double OPENSSL_MANGLER(OSSL_PARAM_set_double)
# endif
#else
# ifndef _OSSL_PARAM_set_double
#  define _OSSL_PARAM_set_double OPENSSL_MANGLER_ASM(OSSL_PARAM_set_double)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_int
#  define OSSL_PARAM_set_int OPENSSL_MANGLER(OSSL_PARAM_set_int)
# endif
#else
# ifndef _OSSL_PARAM_set_int
#  define _OSSL_PARAM_set_int OPENSSL_MANGLER_ASM(OSSL_PARAM_set_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_int32
#  define OSSL_PARAM_set_int32 OPENSSL_MANGLER(OSSL_PARAM_set_int32)
# endif
#else
# ifndef _OSSL_PARAM_set_int32
#  define _OSSL_PARAM_set_int32 OPENSSL_MANGLER_ASM(OSSL_PARAM_set_int32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_int64
#  define OSSL_PARAM_set_int64 OPENSSL_MANGLER(OSSL_PARAM_set_int64)
# endif
#else
# ifndef _OSSL_PARAM_set_int64
#  define _OSSL_PARAM_set_int64 OPENSSL_MANGLER_ASM(OSSL_PARAM_set_int64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_long
#  define OSSL_PARAM_set_long OPENSSL_MANGLER(OSSL_PARAM_set_long)
# endif
#else
# ifndef _OSSL_PARAM_set_long
#  define _OSSL_PARAM_set_long OPENSSL_MANGLER_ASM(OSSL_PARAM_set_long)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_octet_ptr
#  define OSSL_PARAM_set_octet_ptr OPENSSL_MANGLER(OSSL_PARAM_set_octet_ptr)
# endif
#else
# ifndef _OSSL_PARAM_set_octet_ptr
#  define _OSSL_PARAM_set_octet_ptr OPENSSL_MANGLER_ASM(OSSL_PARAM_set_octet_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_octet_string
#  define OSSL_PARAM_set_octet_string OPENSSL_MANGLER(OSSL_PARAM_set_octet_string)
# endif
#else
# ifndef _OSSL_PARAM_set_octet_string
#  define _OSSL_PARAM_set_octet_string OPENSSL_MANGLER_ASM(OSSL_PARAM_set_octet_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_size_t
#  define OSSL_PARAM_set_size_t OPENSSL_MANGLER(OSSL_PARAM_set_size_t)
# endif
#else
# ifndef _OSSL_PARAM_set_size_t
#  define _OSSL_PARAM_set_size_t OPENSSL_MANGLER_ASM(OSSL_PARAM_set_size_t)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_time_t
#  define OSSL_PARAM_set_time_t OPENSSL_MANGLER(OSSL_PARAM_set_time_t)
# endif
#else
# ifndef _OSSL_PARAM_set_time_t
#  define _OSSL_PARAM_set_time_t OPENSSL_MANGLER_ASM(OSSL_PARAM_set_time_t)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_uint
#  define OSSL_PARAM_set_uint OPENSSL_MANGLER(OSSL_PARAM_set_uint)
# endif
#else
# ifndef _OSSL_PARAM_set_uint
#  define _OSSL_PARAM_set_uint OPENSSL_MANGLER_ASM(OSSL_PARAM_set_uint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_uint32
#  define OSSL_PARAM_set_uint32 OPENSSL_MANGLER(OSSL_PARAM_set_uint32)
# endif
#else
# ifndef _OSSL_PARAM_set_uint32
#  define _OSSL_PARAM_set_uint32 OPENSSL_MANGLER_ASM(OSSL_PARAM_set_uint32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_uint64
#  define OSSL_PARAM_set_uint64 OPENSSL_MANGLER(OSSL_PARAM_set_uint64)
# endif
#else
# ifndef _OSSL_PARAM_set_uint64
#  define _OSSL_PARAM_set_uint64 OPENSSL_MANGLER_ASM(OSSL_PARAM_set_uint64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_ulong
#  define OSSL_PARAM_set_ulong OPENSSL_MANGLER(OSSL_PARAM_set_ulong)
# endif
#else
# ifndef _OSSL_PARAM_set_ulong
#  define _OSSL_PARAM_set_ulong OPENSSL_MANGLER_ASM(OSSL_PARAM_set_ulong)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_utf8_ptr
#  define OSSL_PARAM_set_utf8_ptr OPENSSL_MANGLER(OSSL_PARAM_set_utf8_ptr)
# endif
#else
# ifndef _OSSL_PARAM_set_utf8_ptr
#  define _OSSL_PARAM_set_utf8_ptr OPENSSL_MANGLER_ASM(OSSL_PARAM_set_utf8_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PARAM_set_utf8_string
#  define OSSL_PARAM_set_utf8_string OPENSSL_MANGLER(OSSL_PARAM_set_utf8_string)
# endif
#else
# ifndef _OSSL_PARAM_set_utf8_string
#  define _OSSL_PARAM_set_utf8_string OPENSSL_MANGLER_ASM(OSSL_PARAM_set_utf8_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_add_builtin
#  define OSSL_PROVIDER_add_builtin OPENSSL_MANGLER(OSSL_PROVIDER_add_builtin)
# endif
#else
# ifndef _OSSL_PROVIDER_add_builtin
#  define _OSSL_PROVIDER_add_builtin OPENSSL_MANGLER_ASM(OSSL_PROVIDER_add_builtin)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_available
#  define OSSL_PROVIDER_available OPENSSL_MANGLER(OSSL_PROVIDER_available)
# endif
#else
# ifndef _OSSL_PROVIDER_available
#  define _OSSL_PROVIDER_available OPENSSL_MANGLER_ASM(OSSL_PROVIDER_available)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_do_all
#  define OSSL_PROVIDER_do_all OPENSSL_MANGLER(OSSL_PROVIDER_do_all)
# endif
#else
# ifndef _OSSL_PROVIDER_do_all
#  define _OSSL_PROVIDER_do_all OPENSSL_MANGLER_ASM(OSSL_PROVIDER_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_get0_dispatch
#  define OSSL_PROVIDER_get0_dispatch OPENSSL_MANGLER(OSSL_PROVIDER_get0_dispatch)
# endif
#else
# ifndef _OSSL_PROVIDER_get0_dispatch
#  define _OSSL_PROVIDER_get0_dispatch OPENSSL_MANGLER_ASM(OSSL_PROVIDER_get0_dispatch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_get0_name
#  define OSSL_PROVIDER_get0_name OPENSSL_MANGLER(OSSL_PROVIDER_get0_name)
# endif
#else
# ifndef _OSSL_PROVIDER_get0_name
#  define _OSSL_PROVIDER_get0_name OPENSSL_MANGLER_ASM(OSSL_PROVIDER_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_get0_provider_ctx
#  define OSSL_PROVIDER_get0_provider_ctx OPENSSL_MANGLER(OSSL_PROVIDER_get0_provider_ctx)
# endif
#else
# ifndef _OSSL_PROVIDER_get0_provider_ctx
#  define _OSSL_PROVIDER_get0_provider_ctx OPENSSL_MANGLER_ASM(OSSL_PROVIDER_get0_provider_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_get_capabilities
#  define OSSL_PROVIDER_get_capabilities OPENSSL_MANGLER(OSSL_PROVIDER_get_capabilities)
# endif
#else
# ifndef _OSSL_PROVIDER_get_capabilities
#  define _OSSL_PROVIDER_get_capabilities OPENSSL_MANGLER_ASM(OSSL_PROVIDER_get_capabilities)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_get_params
#  define OSSL_PROVIDER_get_params OPENSSL_MANGLER(OSSL_PROVIDER_get_params)
# endif
#else
# ifndef _OSSL_PROVIDER_get_params
#  define _OSSL_PROVIDER_get_params OPENSSL_MANGLER_ASM(OSSL_PROVIDER_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_gettable_params
#  define OSSL_PROVIDER_gettable_params OPENSSL_MANGLER(OSSL_PROVIDER_gettable_params)
# endif
#else
# ifndef _OSSL_PROVIDER_gettable_params
#  define _OSSL_PROVIDER_gettable_params OPENSSL_MANGLER_ASM(OSSL_PROVIDER_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_load
#  define OSSL_PROVIDER_load OPENSSL_MANGLER(OSSL_PROVIDER_load)
# endif
#else
# ifndef _OSSL_PROVIDER_load
#  define _OSSL_PROVIDER_load OPENSSL_MANGLER_ASM(OSSL_PROVIDER_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_query_operation
#  define OSSL_PROVIDER_query_operation OPENSSL_MANGLER(OSSL_PROVIDER_query_operation)
# endif
#else
# ifndef _OSSL_PROVIDER_query_operation
#  define _OSSL_PROVIDER_query_operation OPENSSL_MANGLER_ASM(OSSL_PROVIDER_query_operation)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_self_test
#  define OSSL_PROVIDER_self_test OPENSSL_MANGLER(OSSL_PROVIDER_self_test)
# endif
#else
# ifndef _OSSL_PROVIDER_self_test
#  define _OSSL_PROVIDER_self_test OPENSSL_MANGLER_ASM(OSSL_PROVIDER_self_test)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_set_default_search_path
#  define OSSL_PROVIDER_set_default_search_path OPENSSL_MANGLER(OSSL_PROVIDER_set_default_search_path)
# endif
#else
# ifndef _OSSL_PROVIDER_set_default_search_path
#  define _OSSL_PROVIDER_set_default_search_path OPENSSL_MANGLER_ASM(OSSL_PROVIDER_set_default_search_path)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_try_load
#  define OSSL_PROVIDER_try_load OPENSSL_MANGLER(OSSL_PROVIDER_try_load)
# endif
#else
# ifndef _OSSL_PROVIDER_try_load
#  define _OSSL_PROVIDER_try_load OPENSSL_MANGLER_ASM(OSSL_PROVIDER_try_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_unload
#  define OSSL_PROVIDER_unload OPENSSL_MANGLER(OSSL_PROVIDER_unload)
# endif
#else
# ifndef _OSSL_PROVIDER_unload
#  define _OSSL_PROVIDER_unload OPENSSL_MANGLER_ASM(OSSL_PROVIDER_unload)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_PROVIDER_unquery_operation
#  define OSSL_PROVIDER_unquery_operation OPENSSL_MANGLER(OSSL_PROVIDER_unquery_operation)
# endif
#else
# ifndef _OSSL_PROVIDER_unquery_operation
#  define _OSSL_PROVIDER_unquery_operation OPENSSL_MANGLER_ASM(OSSL_PROVIDER_unquery_operation)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_SELF_TEST_free
#  define OSSL_SELF_TEST_free OPENSSL_MANGLER(OSSL_SELF_TEST_free)
# endif
#else
# ifndef _OSSL_SELF_TEST_free
#  define _OSSL_SELF_TEST_free OPENSSL_MANGLER_ASM(OSSL_SELF_TEST_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_SELF_TEST_get_callback
#  define OSSL_SELF_TEST_get_callback OPENSSL_MANGLER(OSSL_SELF_TEST_get_callback)
# endif
#else
# ifndef _OSSL_SELF_TEST_get_callback
#  define _OSSL_SELF_TEST_get_callback OPENSSL_MANGLER_ASM(OSSL_SELF_TEST_get_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_SELF_TEST_new
#  define OSSL_SELF_TEST_new OPENSSL_MANGLER(OSSL_SELF_TEST_new)
# endif
#else
# ifndef _OSSL_SELF_TEST_new
#  define _OSSL_SELF_TEST_new OPENSSL_MANGLER_ASM(OSSL_SELF_TEST_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_SELF_TEST_onbegin
#  define OSSL_SELF_TEST_onbegin OPENSSL_MANGLER(OSSL_SELF_TEST_onbegin)
# endif
#else
# ifndef _OSSL_SELF_TEST_onbegin
#  define _OSSL_SELF_TEST_onbegin OPENSSL_MANGLER_ASM(OSSL_SELF_TEST_onbegin)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_SELF_TEST_oncorrupt_byte
#  define OSSL_SELF_TEST_oncorrupt_byte OPENSSL_MANGLER(OSSL_SELF_TEST_oncorrupt_byte)
# endif
#else
# ifndef _OSSL_SELF_TEST_oncorrupt_byte
#  define _OSSL_SELF_TEST_oncorrupt_byte OPENSSL_MANGLER_ASM(OSSL_SELF_TEST_oncorrupt_byte)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_SELF_TEST_onend
#  define OSSL_SELF_TEST_onend OPENSSL_MANGLER(OSSL_SELF_TEST_onend)
# endif
#else
# ifndef _OSSL_SELF_TEST_onend
#  define _OSSL_SELF_TEST_onend OPENSSL_MANGLER_ASM(OSSL_SELF_TEST_onend)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_SELF_TEST_set_callback
#  define OSSL_SELF_TEST_set_callback OPENSSL_MANGLER(OSSL_SELF_TEST_set_callback)
# endif
#else
# ifndef _OSSL_SELF_TEST_set_callback
#  define _OSSL_SELF_TEST_set_callback OPENSSL_MANGLER_ASM(OSSL_SELF_TEST_set_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_free
#  define OSSL_STORE_INFO_free OPENSSL_MANGLER(OSSL_STORE_INFO_free)
# endif
#else
# ifndef _OSSL_STORE_INFO_free
#  define _OSSL_STORE_INFO_free OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get0_CERT
#  define OSSL_STORE_INFO_get0_CERT OPENSSL_MANGLER(OSSL_STORE_INFO_get0_CERT)
# endif
#else
# ifndef _OSSL_STORE_INFO_get0_CERT
#  define _OSSL_STORE_INFO_get0_CERT OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get0_CERT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get0_CRL
#  define OSSL_STORE_INFO_get0_CRL OPENSSL_MANGLER(OSSL_STORE_INFO_get0_CRL)
# endif
#else
# ifndef _OSSL_STORE_INFO_get0_CRL
#  define _OSSL_STORE_INFO_get0_CRL OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get0_CRL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get0_NAME
#  define OSSL_STORE_INFO_get0_NAME OPENSSL_MANGLER(OSSL_STORE_INFO_get0_NAME)
# endif
#else
# ifndef _OSSL_STORE_INFO_get0_NAME
#  define _OSSL_STORE_INFO_get0_NAME OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get0_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get0_NAME_description
#  define OSSL_STORE_INFO_get0_NAME_description OPENSSL_MANGLER(OSSL_STORE_INFO_get0_NAME_description)
# endif
#else
# ifndef _OSSL_STORE_INFO_get0_NAME_description
#  define _OSSL_STORE_INFO_get0_NAME_description OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get0_NAME_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get0_PARAMS
#  define OSSL_STORE_INFO_get0_PARAMS OPENSSL_MANGLER(OSSL_STORE_INFO_get0_PARAMS)
# endif
#else
# ifndef _OSSL_STORE_INFO_get0_PARAMS
#  define _OSSL_STORE_INFO_get0_PARAMS OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get0_PARAMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get0_PKEY
#  define OSSL_STORE_INFO_get0_PKEY OPENSSL_MANGLER(OSSL_STORE_INFO_get0_PKEY)
# endif
#else
# ifndef _OSSL_STORE_INFO_get0_PKEY
#  define _OSSL_STORE_INFO_get0_PKEY OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get0_PKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get0_PUBKEY
#  define OSSL_STORE_INFO_get0_PUBKEY OPENSSL_MANGLER(OSSL_STORE_INFO_get0_PUBKEY)
# endif
#else
# ifndef _OSSL_STORE_INFO_get0_PUBKEY
#  define _OSSL_STORE_INFO_get0_PUBKEY OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get0_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get0_data
#  define OSSL_STORE_INFO_get0_data OPENSSL_MANGLER(OSSL_STORE_INFO_get0_data)
# endif
#else
# ifndef _OSSL_STORE_INFO_get0_data
#  define _OSSL_STORE_INFO_get0_data OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get0_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get1_CERT
#  define OSSL_STORE_INFO_get1_CERT OPENSSL_MANGLER(OSSL_STORE_INFO_get1_CERT)
# endif
#else
# ifndef _OSSL_STORE_INFO_get1_CERT
#  define _OSSL_STORE_INFO_get1_CERT OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get1_CERT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get1_CRL
#  define OSSL_STORE_INFO_get1_CRL OPENSSL_MANGLER(OSSL_STORE_INFO_get1_CRL)
# endif
#else
# ifndef _OSSL_STORE_INFO_get1_CRL
#  define _OSSL_STORE_INFO_get1_CRL OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get1_CRL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get1_NAME
#  define OSSL_STORE_INFO_get1_NAME OPENSSL_MANGLER(OSSL_STORE_INFO_get1_NAME)
# endif
#else
# ifndef _OSSL_STORE_INFO_get1_NAME
#  define _OSSL_STORE_INFO_get1_NAME OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get1_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get1_NAME_description
#  define OSSL_STORE_INFO_get1_NAME_description OPENSSL_MANGLER(OSSL_STORE_INFO_get1_NAME_description)
# endif
#else
# ifndef _OSSL_STORE_INFO_get1_NAME_description
#  define _OSSL_STORE_INFO_get1_NAME_description OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get1_NAME_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get1_PARAMS
#  define OSSL_STORE_INFO_get1_PARAMS OPENSSL_MANGLER(OSSL_STORE_INFO_get1_PARAMS)
# endif
#else
# ifndef _OSSL_STORE_INFO_get1_PARAMS
#  define _OSSL_STORE_INFO_get1_PARAMS OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get1_PARAMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get1_PKEY
#  define OSSL_STORE_INFO_get1_PKEY OPENSSL_MANGLER(OSSL_STORE_INFO_get1_PKEY)
# endif
#else
# ifndef _OSSL_STORE_INFO_get1_PKEY
#  define _OSSL_STORE_INFO_get1_PKEY OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get1_PKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get1_PUBKEY
#  define OSSL_STORE_INFO_get1_PUBKEY OPENSSL_MANGLER(OSSL_STORE_INFO_get1_PUBKEY)
# endif
#else
# ifndef _OSSL_STORE_INFO_get1_PUBKEY
#  define _OSSL_STORE_INFO_get1_PUBKEY OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get1_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_get_type
#  define OSSL_STORE_INFO_get_type OPENSSL_MANGLER(OSSL_STORE_INFO_get_type)
# endif
#else
# ifndef _OSSL_STORE_INFO_get_type
#  define _OSSL_STORE_INFO_get_type OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_get_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_new
#  define OSSL_STORE_INFO_new OPENSSL_MANGLER(OSSL_STORE_INFO_new)
# endif
#else
# ifndef _OSSL_STORE_INFO_new
#  define _OSSL_STORE_INFO_new OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_new_CERT
#  define OSSL_STORE_INFO_new_CERT OPENSSL_MANGLER(OSSL_STORE_INFO_new_CERT)
# endif
#else
# ifndef _OSSL_STORE_INFO_new_CERT
#  define _OSSL_STORE_INFO_new_CERT OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_new_CERT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_new_CRL
#  define OSSL_STORE_INFO_new_CRL OPENSSL_MANGLER(OSSL_STORE_INFO_new_CRL)
# endif
#else
# ifndef _OSSL_STORE_INFO_new_CRL
#  define _OSSL_STORE_INFO_new_CRL OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_new_CRL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_new_NAME
#  define OSSL_STORE_INFO_new_NAME OPENSSL_MANGLER(OSSL_STORE_INFO_new_NAME)
# endif
#else
# ifndef _OSSL_STORE_INFO_new_NAME
#  define _OSSL_STORE_INFO_new_NAME OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_new_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_new_PARAMS
#  define OSSL_STORE_INFO_new_PARAMS OPENSSL_MANGLER(OSSL_STORE_INFO_new_PARAMS)
# endif
#else
# ifndef _OSSL_STORE_INFO_new_PARAMS
#  define _OSSL_STORE_INFO_new_PARAMS OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_new_PARAMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_new_PKEY
#  define OSSL_STORE_INFO_new_PKEY OPENSSL_MANGLER(OSSL_STORE_INFO_new_PKEY)
# endif
#else
# ifndef _OSSL_STORE_INFO_new_PKEY
#  define _OSSL_STORE_INFO_new_PKEY OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_new_PKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_new_PUBKEY
#  define OSSL_STORE_INFO_new_PUBKEY OPENSSL_MANGLER(OSSL_STORE_INFO_new_PUBKEY)
# endif
#else
# ifndef _OSSL_STORE_INFO_new_PUBKEY
#  define _OSSL_STORE_INFO_new_PUBKEY OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_new_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_set0_NAME_description
#  define OSSL_STORE_INFO_set0_NAME_description OPENSSL_MANGLER(OSSL_STORE_INFO_set0_NAME_description)
# endif
#else
# ifndef _OSSL_STORE_INFO_set0_NAME_description
#  define _OSSL_STORE_INFO_set0_NAME_description OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_set0_NAME_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_INFO_type_string
#  define OSSL_STORE_INFO_type_string OPENSSL_MANGLER(OSSL_STORE_INFO_type_string)
# endif
#else
# ifndef _OSSL_STORE_INFO_type_string
#  define _OSSL_STORE_INFO_type_string OPENSSL_MANGLER_ASM(OSSL_STORE_INFO_type_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_do_all_provided
#  define OSSL_STORE_LOADER_do_all_provided OPENSSL_MANGLER(OSSL_STORE_LOADER_do_all_provided)
# endif
#else
# ifndef _OSSL_STORE_LOADER_do_all_provided
#  define _OSSL_STORE_LOADER_do_all_provided OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_do_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_fetch
#  define OSSL_STORE_LOADER_fetch OPENSSL_MANGLER(OSSL_STORE_LOADER_fetch)
# endif
#else
# ifndef _OSSL_STORE_LOADER_fetch
#  define _OSSL_STORE_LOADER_fetch OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_free
#  define OSSL_STORE_LOADER_free OPENSSL_MANGLER(OSSL_STORE_LOADER_free)
# endif
#else
# ifndef _OSSL_STORE_LOADER_free
#  define _OSSL_STORE_LOADER_free OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_get0_description
#  define OSSL_STORE_LOADER_get0_description OPENSSL_MANGLER(OSSL_STORE_LOADER_get0_description)
# endif
#else
# ifndef _OSSL_STORE_LOADER_get0_description
#  define _OSSL_STORE_LOADER_get0_description OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_get0_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_get0_engine
#  define OSSL_STORE_LOADER_get0_engine OPENSSL_MANGLER(OSSL_STORE_LOADER_get0_engine)
# endif
#else
# ifndef _OSSL_STORE_LOADER_get0_engine
#  define _OSSL_STORE_LOADER_get0_engine OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_get0_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_get0_properties
#  define OSSL_STORE_LOADER_get0_properties OPENSSL_MANGLER(OSSL_STORE_LOADER_get0_properties)
# endif
#else
# ifndef _OSSL_STORE_LOADER_get0_properties
#  define _OSSL_STORE_LOADER_get0_properties OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_get0_properties)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_get0_provider
#  define OSSL_STORE_LOADER_get0_provider OPENSSL_MANGLER(OSSL_STORE_LOADER_get0_provider)
# endif
#else
# ifndef _OSSL_STORE_LOADER_get0_provider
#  define _OSSL_STORE_LOADER_get0_provider OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_get0_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_get0_scheme
#  define OSSL_STORE_LOADER_get0_scheme OPENSSL_MANGLER(OSSL_STORE_LOADER_get0_scheme)
# endif
#else
# ifndef _OSSL_STORE_LOADER_get0_scheme
#  define _OSSL_STORE_LOADER_get0_scheme OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_get0_scheme)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_is_a
#  define OSSL_STORE_LOADER_is_a OPENSSL_MANGLER(OSSL_STORE_LOADER_is_a)
# endif
#else
# ifndef _OSSL_STORE_LOADER_is_a
#  define _OSSL_STORE_LOADER_is_a OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_names_do_all
#  define OSSL_STORE_LOADER_names_do_all OPENSSL_MANGLER(OSSL_STORE_LOADER_names_do_all)
# endif
#else
# ifndef _OSSL_STORE_LOADER_names_do_all
#  define _OSSL_STORE_LOADER_names_do_all OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_new
#  define OSSL_STORE_LOADER_new OPENSSL_MANGLER(OSSL_STORE_LOADER_new)
# endif
#else
# ifndef _OSSL_STORE_LOADER_new
#  define _OSSL_STORE_LOADER_new OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_set_attach
#  define OSSL_STORE_LOADER_set_attach OPENSSL_MANGLER(OSSL_STORE_LOADER_set_attach)
# endif
#else
# ifndef _OSSL_STORE_LOADER_set_attach
#  define _OSSL_STORE_LOADER_set_attach OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_set_attach)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_set_close
#  define OSSL_STORE_LOADER_set_close OPENSSL_MANGLER(OSSL_STORE_LOADER_set_close)
# endif
#else
# ifndef _OSSL_STORE_LOADER_set_close
#  define _OSSL_STORE_LOADER_set_close OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_set_close)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_set_ctrl
#  define OSSL_STORE_LOADER_set_ctrl OPENSSL_MANGLER(OSSL_STORE_LOADER_set_ctrl)
# endif
#else
# ifndef _OSSL_STORE_LOADER_set_ctrl
#  define _OSSL_STORE_LOADER_set_ctrl OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_set_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_set_eof
#  define OSSL_STORE_LOADER_set_eof OPENSSL_MANGLER(OSSL_STORE_LOADER_set_eof)
# endif
#else
# ifndef _OSSL_STORE_LOADER_set_eof
#  define _OSSL_STORE_LOADER_set_eof OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_set_eof)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_set_error
#  define OSSL_STORE_LOADER_set_error OPENSSL_MANGLER(OSSL_STORE_LOADER_set_error)
# endif
#else
# ifndef _OSSL_STORE_LOADER_set_error
#  define _OSSL_STORE_LOADER_set_error OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_set_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_set_expect
#  define OSSL_STORE_LOADER_set_expect OPENSSL_MANGLER(OSSL_STORE_LOADER_set_expect)
# endif
#else
# ifndef _OSSL_STORE_LOADER_set_expect
#  define _OSSL_STORE_LOADER_set_expect OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_set_expect)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_set_find
#  define OSSL_STORE_LOADER_set_find OPENSSL_MANGLER(OSSL_STORE_LOADER_set_find)
# endif
#else
# ifndef _OSSL_STORE_LOADER_set_find
#  define _OSSL_STORE_LOADER_set_find OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_set_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_set_load
#  define OSSL_STORE_LOADER_set_load OPENSSL_MANGLER(OSSL_STORE_LOADER_set_load)
# endif
#else
# ifndef _OSSL_STORE_LOADER_set_load
#  define _OSSL_STORE_LOADER_set_load OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_set_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_set_open
#  define OSSL_STORE_LOADER_set_open OPENSSL_MANGLER(OSSL_STORE_LOADER_set_open)
# endif
#else
# ifndef _OSSL_STORE_LOADER_set_open
#  define _OSSL_STORE_LOADER_set_open OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_set_open)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_set_open_ex
#  define OSSL_STORE_LOADER_set_open_ex OPENSSL_MANGLER(OSSL_STORE_LOADER_set_open_ex)
# endif
#else
# ifndef _OSSL_STORE_LOADER_set_open_ex
#  define _OSSL_STORE_LOADER_set_open_ex OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_set_open_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_LOADER_up_ref
#  define OSSL_STORE_LOADER_up_ref OPENSSL_MANGLER(OSSL_STORE_LOADER_up_ref)
# endif
#else
# ifndef _OSSL_STORE_LOADER_up_ref
#  define _OSSL_STORE_LOADER_up_ref OPENSSL_MANGLER_ASM(OSSL_STORE_LOADER_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_SEARCH_by_alias
#  define OSSL_STORE_SEARCH_by_alias OPENSSL_MANGLER(OSSL_STORE_SEARCH_by_alias)
# endif
#else
# ifndef _OSSL_STORE_SEARCH_by_alias
#  define _OSSL_STORE_SEARCH_by_alias OPENSSL_MANGLER_ASM(OSSL_STORE_SEARCH_by_alias)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_SEARCH_by_issuer_serial
#  define OSSL_STORE_SEARCH_by_issuer_serial OPENSSL_MANGLER(OSSL_STORE_SEARCH_by_issuer_serial)
# endif
#else
# ifndef _OSSL_STORE_SEARCH_by_issuer_serial
#  define _OSSL_STORE_SEARCH_by_issuer_serial OPENSSL_MANGLER_ASM(OSSL_STORE_SEARCH_by_issuer_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_SEARCH_by_key_fingerprint
#  define OSSL_STORE_SEARCH_by_key_fingerprint OPENSSL_MANGLER(OSSL_STORE_SEARCH_by_key_fingerprint)
# endif
#else
# ifndef _OSSL_STORE_SEARCH_by_key_fingerprint
#  define _OSSL_STORE_SEARCH_by_key_fingerprint OPENSSL_MANGLER_ASM(OSSL_STORE_SEARCH_by_key_fingerprint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_SEARCH_by_name
#  define OSSL_STORE_SEARCH_by_name OPENSSL_MANGLER(OSSL_STORE_SEARCH_by_name)
# endif
#else
# ifndef _OSSL_STORE_SEARCH_by_name
#  define _OSSL_STORE_SEARCH_by_name OPENSSL_MANGLER_ASM(OSSL_STORE_SEARCH_by_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_SEARCH_free
#  define OSSL_STORE_SEARCH_free OPENSSL_MANGLER(OSSL_STORE_SEARCH_free)
# endif
#else
# ifndef _OSSL_STORE_SEARCH_free
#  define _OSSL_STORE_SEARCH_free OPENSSL_MANGLER_ASM(OSSL_STORE_SEARCH_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_SEARCH_get0_bytes
#  define OSSL_STORE_SEARCH_get0_bytes OPENSSL_MANGLER(OSSL_STORE_SEARCH_get0_bytes)
# endif
#else
# ifndef _OSSL_STORE_SEARCH_get0_bytes
#  define _OSSL_STORE_SEARCH_get0_bytes OPENSSL_MANGLER_ASM(OSSL_STORE_SEARCH_get0_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_SEARCH_get0_digest
#  define OSSL_STORE_SEARCH_get0_digest OPENSSL_MANGLER(OSSL_STORE_SEARCH_get0_digest)
# endif
#else
# ifndef _OSSL_STORE_SEARCH_get0_digest
#  define _OSSL_STORE_SEARCH_get0_digest OPENSSL_MANGLER_ASM(OSSL_STORE_SEARCH_get0_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_SEARCH_get0_name
#  define OSSL_STORE_SEARCH_get0_name OPENSSL_MANGLER(OSSL_STORE_SEARCH_get0_name)
# endif
#else
# ifndef _OSSL_STORE_SEARCH_get0_name
#  define _OSSL_STORE_SEARCH_get0_name OPENSSL_MANGLER_ASM(OSSL_STORE_SEARCH_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_SEARCH_get0_serial
#  define OSSL_STORE_SEARCH_get0_serial OPENSSL_MANGLER(OSSL_STORE_SEARCH_get0_serial)
# endif
#else
# ifndef _OSSL_STORE_SEARCH_get0_serial
#  define _OSSL_STORE_SEARCH_get0_serial OPENSSL_MANGLER_ASM(OSSL_STORE_SEARCH_get0_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_SEARCH_get0_string
#  define OSSL_STORE_SEARCH_get0_string OPENSSL_MANGLER(OSSL_STORE_SEARCH_get0_string)
# endif
#else
# ifndef _OSSL_STORE_SEARCH_get0_string
#  define _OSSL_STORE_SEARCH_get0_string OPENSSL_MANGLER_ASM(OSSL_STORE_SEARCH_get0_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_SEARCH_get_type
#  define OSSL_STORE_SEARCH_get_type OPENSSL_MANGLER(OSSL_STORE_SEARCH_get_type)
# endif
#else
# ifndef _OSSL_STORE_SEARCH_get_type
#  define _OSSL_STORE_SEARCH_get_type OPENSSL_MANGLER_ASM(OSSL_STORE_SEARCH_get_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_attach
#  define OSSL_STORE_attach OPENSSL_MANGLER(OSSL_STORE_attach)
# endif
#else
# ifndef _OSSL_STORE_attach
#  define _OSSL_STORE_attach OPENSSL_MANGLER_ASM(OSSL_STORE_attach)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_close
#  define OSSL_STORE_close OPENSSL_MANGLER(OSSL_STORE_close)
# endif
#else
# ifndef _OSSL_STORE_close
#  define _OSSL_STORE_close OPENSSL_MANGLER_ASM(OSSL_STORE_close)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_ctrl
#  define OSSL_STORE_ctrl OPENSSL_MANGLER(OSSL_STORE_ctrl)
# endif
#else
# ifndef _OSSL_STORE_ctrl
#  define _OSSL_STORE_ctrl OPENSSL_MANGLER_ASM(OSSL_STORE_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_do_all_loaders
#  define OSSL_STORE_do_all_loaders OPENSSL_MANGLER(OSSL_STORE_do_all_loaders)
# endif
#else
# ifndef _OSSL_STORE_do_all_loaders
#  define _OSSL_STORE_do_all_loaders OPENSSL_MANGLER_ASM(OSSL_STORE_do_all_loaders)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_eof
#  define OSSL_STORE_eof OPENSSL_MANGLER(OSSL_STORE_eof)
# endif
#else
# ifndef _OSSL_STORE_eof
#  define _OSSL_STORE_eof OPENSSL_MANGLER_ASM(OSSL_STORE_eof)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_error
#  define OSSL_STORE_error OPENSSL_MANGLER(OSSL_STORE_error)
# endif
#else
# ifndef _OSSL_STORE_error
#  define _OSSL_STORE_error OPENSSL_MANGLER_ASM(OSSL_STORE_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_expect
#  define OSSL_STORE_expect OPENSSL_MANGLER(OSSL_STORE_expect)
# endif
#else
# ifndef _OSSL_STORE_expect
#  define _OSSL_STORE_expect OPENSSL_MANGLER_ASM(OSSL_STORE_expect)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_find
#  define OSSL_STORE_find OPENSSL_MANGLER(OSSL_STORE_find)
# endif
#else
# ifndef _OSSL_STORE_find
#  define _OSSL_STORE_find OPENSSL_MANGLER_ASM(OSSL_STORE_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_load
#  define OSSL_STORE_load OPENSSL_MANGLER(OSSL_STORE_load)
# endif
#else
# ifndef _OSSL_STORE_load
#  define _OSSL_STORE_load OPENSSL_MANGLER_ASM(OSSL_STORE_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_open
#  define OSSL_STORE_open OPENSSL_MANGLER(OSSL_STORE_open)
# endif
#else
# ifndef _OSSL_STORE_open
#  define _OSSL_STORE_open OPENSSL_MANGLER_ASM(OSSL_STORE_open)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_open_ex
#  define OSSL_STORE_open_ex OPENSSL_MANGLER(OSSL_STORE_open_ex)
# endif
#else
# ifndef _OSSL_STORE_open_ex
#  define _OSSL_STORE_open_ex OPENSSL_MANGLER_ASM(OSSL_STORE_open_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_register_loader
#  define OSSL_STORE_register_loader OPENSSL_MANGLER(OSSL_STORE_register_loader)
# endif
#else
# ifndef _OSSL_STORE_register_loader
#  define _OSSL_STORE_register_loader OPENSSL_MANGLER_ASM(OSSL_STORE_register_loader)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_supports_search
#  define OSSL_STORE_supports_search OPENSSL_MANGLER(OSSL_STORE_supports_search)
# endif
#else
# ifndef _OSSL_STORE_supports_search
#  define _OSSL_STORE_supports_search OPENSSL_MANGLER_ASM(OSSL_STORE_supports_search)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_unregister_loader
#  define OSSL_STORE_unregister_loader OPENSSL_MANGLER(OSSL_STORE_unregister_loader)
# endif
#else
# ifndef _OSSL_STORE_unregister_loader
#  define _OSSL_STORE_unregister_loader OPENSSL_MANGLER_ASM(OSSL_STORE_unregister_loader)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_STORE_vctrl
#  define OSSL_STORE_vctrl OPENSSL_MANGLER(OSSL_STORE_vctrl)
# endif
#else
# ifndef _OSSL_STORE_vctrl
#  define _OSSL_STORE_vctrl OPENSSL_MANGLER_ASM(OSSL_STORE_vctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_default_cipher_list
#  define OSSL_default_cipher_list OPENSSL_MANGLER(OSSL_default_cipher_list)
# endif
#else
# ifndef _OSSL_default_cipher_list
#  define _OSSL_default_cipher_list OPENSSL_MANGLER_ASM(OSSL_default_cipher_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_default_ciphersuites
#  define OSSL_default_ciphersuites OPENSSL_MANGLER(OSSL_default_ciphersuites)
# endif
#else
# ifndef _OSSL_default_ciphersuites
#  define _OSSL_default_ciphersuites OPENSSL_MANGLER_ASM(OSSL_default_ciphersuites)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_parse_url
#  define OSSL_parse_url OPENSSL_MANGLER(OSSL_parse_url)
# endif
#else
# ifndef _OSSL_parse_url
#  define _OSSL_parse_url OPENSSL_MANGLER_ASM(OSSL_parse_url)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_provider_init
#  define OSSL_provider_init OPENSSL_MANGLER(OSSL_provider_init)
# endif
#else
# ifndef _OSSL_provider_init
#  define _OSSL_provider_init OPENSSL_MANGLER_ASM(OSSL_provider_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_trace_begin
#  define OSSL_trace_begin OPENSSL_MANGLER(OSSL_trace_begin)
# endif
#else
# ifndef _OSSL_trace_begin
#  define _OSSL_trace_begin OPENSSL_MANGLER_ASM(OSSL_trace_begin)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_trace_enabled
#  define OSSL_trace_enabled OPENSSL_MANGLER(OSSL_trace_enabled)
# endif
#else
# ifndef _OSSL_trace_enabled
#  define _OSSL_trace_enabled OPENSSL_MANGLER_ASM(OSSL_trace_enabled)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_trace_end
#  define OSSL_trace_end OPENSSL_MANGLER(OSSL_trace_end)
# endif
#else
# ifndef _OSSL_trace_end
#  define _OSSL_trace_end OPENSSL_MANGLER_ASM(OSSL_trace_end)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_trace_get_category_name
#  define OSSL_trace_get_category_name OPENSSL_MANGLER(OSSL_trace_get_category_name)
# endif
#else
# ifndef _OSSL_trace_get_category_name
#  define _OSSL_trace_get_category_name OPENSSL_MANGLER_ASM(OSSL_trace_get_category_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_trace_get_category_num
#  define OSSL_trace_get_category_num OPENSSL_MANGLER(OSSL_trace_get_category_num)
# endif
#else
# ifndef _OSSL_trace_get_category_num
#  define _OSSL_trace_get_category_num OPENSSL_MANGLER_ASM(OSSL_trace_get_category_num)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_trace_set_callback
#  define OSSL_trace_set_callback OPENSSL_MANGLER(OSSL_trace_set_callback)
# endif
#else
# ifndef _OSSL_trace_set_callback
#  define _OSSL_trace_set_callback OPENSSL_MANGLER_ASM(OSSL_trace_set_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_trace_set_channel
#  define OSSL_trace_set_channel OPENSSL_MANGLER(OSSL_trace_set_channel)
# endif
#else
# ifndef _OSSL_trace_set_channel
#  define _OSSL_trace_set_channel OPENSSL_MANGLER_ASM(OSSL_trace_set_channel)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_trace_set_prefix
#  define OSSL_trace_set_prefix OPENSSL_MANGLER(OSSL_trace_set_prefix)
# endif
#else
# ifndef _OSSL_trace_set_prefix
#  define _OSSL_trace_set_prefix OPENSSL_MANGLER_ASM(OSSL_trace_set_prefix)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OSSL_trace_set_suffix
#  define OSSL_trace_set_suffix OPENSSL_MANGLER(OSSL_trace_set_suffix)
# endif
#else
# ifndef _OSSL_trace_set_suffix
#  define _OSSL_trace_set_suffix OPENSSL_MANGLER_ASM(OSSL_trace_set_suffix)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OTHERNAME_cmp
#  define OTHERNAME_cmp OPENSSL_MANGLER(OTHERNAME_cmp)
# endif
#else
# ifndef _OTHERNAME_cmp
#  define _OTHERNAME_cmp OPENSSL_MANGLER_ASM(OTHERNAME_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OTHERNAME_free
#  define OTHERNAME_free OPENSSL_MANGLER(OTHERNAME_free)
# endif
#else
# ifndef _OTHERNAME_free
#  define _OTHERNAME_free OPENSSL_MANGLER_ASM(OTHERNAME_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OTHERNAME_it
#  define OTHERNAME_it OPENSSL_MANGLER(OTHERNAME_it)
# endif
#else
# ifndef _OTHERNAME_it
#  define _OTHERNAME_it OPENSSL_MANGLER_ASM(OTHERNAME_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OTHERNAME_new
#  define OTHERNAME_new OPENSSL_MANGLER(OTHERNAME_new)
# endif
#else
# ifndef _OTHERNAME_new
#  define _OTHERNAME_new OPENSSL_MANGLER_ASM(OTHERNAME_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OpenSSL_version
#  define OpenSSL_version OPENSSL_MANGLER(OpenSSL_version)
# endif
#else
# ifndef _OpenSSL_version
#  define _OpenSSL_version OPENSSL_MANGLER_ASM(OpenSSL_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef OpenSSL_version_num
#  define OpenSSL_version_num OPENSSL_MANGLER(OpenSSL_version_num)
# endif
#else
# ifndef _OpenSSL_version_num
#  define _OpenSSL_version_num OPENSSL_MANGLER_ASM(OpenSSL_version_num)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PBE2PARAM_free
#  define PBE2PARAM_free OPENSSL_MANGLER(PBE2PARAM_free)
# endif
#else
# ifndef _PBE2PARAM_free
#  define _PBE2PARAM_free OPENSSL_MANGLER_ASM(PBE2PARAM_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PBE2PARAM_it
#  define PBE2PARAM_it OPENSSL_MANGLER(PBE2PARAM_it)
# endif
#else
# ifndef _PBE2PARAM_it
#  define _PBE2PARAM_it OPENSSL_MANGLER_ASM(PBE2PARAM_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PBE2PARAM_new
#  define PBE2PARAM_new OPENSSL_MANGLER(PBE2PARAM_new)
# endif
#else
# ifndef _PBE2PARAM_new
#  define _PBE2PARAM_new OPENSSL_MANGLER_ASM(PBE2PARAM_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PBEPARAM_free
#  define PBEPARAM_free OPENSSL_MANGLER(PBEPARAM_free)
# endif
#else
# ifndef _PBEPARAM_free
#  define _PBEPARAM_free OPENSSL_MANGLER_ASM(PBEPARAM_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PBEPARAM_it
#  define PBEPARAM_it OPENSSL_MANGLER(PBEPARAM_it)
# endif
#else
# ifndef _PBEPARAM_it
#  define _PBEPARAM_it OPENSSL_MANGLER_ASM(PBEPARAM_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PBEPARAM_new
#  define PBEPARAM_new OPENSSL_MANGLER(PBEPARAM_new)
# endif
#else
# ifndef _PBEPARAM_new
#  define _PBEPARAM_new OPENSSL_MANGLER_ASM(PBEPARAM_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PBKDF2PARAM_free
#  define PBKDF2PARAM_free OPENSSL_MANGLER(PBKDF2PARAM_free)
# endif
#else
# ifndef _PBKDF2PARAM_free
#  define _PBKDF2PARAM_free OPENSSL_MANGLER_ASM(PBKDF2PARAM_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PBKDF2PARAM_it
#  define PBKDF2PARAM_it OPENSSL_MANGLER(PBKDF2PARAM_it)
# endif
#else
# ifndef _PBKDF2PARAM_it
#  define _PBKDF2PARAM_it OPENSSL_MANGLER_ASM(PBKDF2PARAM_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PBKDF2PARAM_new
#  define PBKDF2PARAM_new OPENSSL_MANGLER(PBKDF2PARAM_new)
# endif
#else
# ifndef _PBKDF2PARAM_new
#  define _PBKDF2PARAM_new OPENSSL_MANGLER_ASM(PBKDF2PARAM_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_ASN1_read
#  define PEM_ASN1_read OPENSSL_MANGLER(PEM_ASN1_read)
# endif
#else
# ifndef _PEM_ASN1_read
#  define _PEM_ASN1_read OPENSSL_MANGLER_ASM(PEM_ASN1_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_ASN1_read_bio
#  define PEM_ASN1_read_bio OPENSSL_MANGLER(PEM_ASN1_read_bio)
# endif
#else
# ifndef _PEM_ASN1_read_bio
#  define _PEM_ASN1_read_bio OPENSSL_MANGLER_ASM(PEM_ASN1_read_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_ASN1_write
#  define PEM_ASN1_write OPENSSL_MANGLER(PEM_ASN1_write)
# endif
#else
# ifndef _PEM_ASN1_write
#  define _PEM_ASN1_write OPENSSL_MANGLER_ASM(PEM_ASN1_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_ASN1_write_bio
#  define PEM_ASN1_write_bio OPENSSL_MANGLER(PEM_ASN1_write_bio)
# endif
#else
# ifndef _PEM_ASN1_write_bio
#  define _PEM_ASN1_write_bio OPENSSL_MANGLER_ASM(PEM_ASN1_write_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_SignFinal
#  define PEM_SignFinal OPENSSL_MANGLER(PEM_SignFinal)
# endif
#else
# ifndef _PEM_SignFinal
#  define _PEM_SignFinal OPENSSL_MANGLER_ASM(PEM_SignFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_SignInit
#  define PEM_SignInit OPENSSL_MANGLER(PEM_SignInit)
# endif
#else
# ifndef _PEM_SignInit
#  define _PEM_SignInit OPENSSL_MANGLER_ASM(PEM_SignInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_SignUpdate
#  define PEM_SignUpdate OPENSSL_MANGLER(PEM_SignUpdate)
# endif
#else
# ifndef _PEM_SignUpdate
#  define _PEM_SignUpdate OPENSSL_MANGLER_ASM(PEM_SignUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_X509_INFO_read
#  define PEM_X509_INFO_read OPENSSL_MANGLER(PEM_X509_INFO_read)
# endif
#else
# ifndef _PEM_X509_INFO_read
#  define _PEM_X509_INFO_read OPENSSL_MANGLER_ASM(PEM_X509_INFO_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_X509_INFO_read_bio
#  define PEM_X509_INFO_read_bio OPENSSL_MANGLER(PEM_X509_INFO_read_bio)
# endif
#else
# ifndef _PEM_X509_INFO_read_bio
#  define _PEM_X509_INFO_read_bio OPENSSL_MANGLER_ASM(PEM_X509_INFO_read_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_X509_INFO_read_bio_ex
#  define PEM_X509_INFO_read_bio_ex OPENSSL_MANGLER(PEM_X509_INFO_read_bio_ex)
# endif
#else
# ifndef _PEM_X509_INFO_read_bio_ex
#  define _PEM_X509_INFO_read_bio_ex OPENSSL_MANGLER_ASM(PEM_X509_INFO_read_bio_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_X509_INFO_read_ex
#  define PEM_X509_INFO_read_ex OPENSSL_MANGLER(PEM_X509_INFO_read_ex)
# endif
#else
# ifndef _PEM_X509_INFO_read_ex
#  define _PEM_X509_INFO_read_ex OPENSSL_MANGLER_ASM(PEM_X509_INFO_read_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_X509_INFO_write_bio
#  define PEM_X509_INFO_write_bio OPENSSL_MANGLER(PEM_X509_INFO_write_bio)
# endif
#else
# ifndef _PEM_X509_INFO_write_bio
#  define _PEM_X509_INFO_write_bio OPENSSL_MANGLER_ASM(PEM_X509_INFO_write_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_bytes_read_bio
#  define PEM_bytes_read_bio OPENSSL_MANGLER(PEM_bytes_read_bio)
# endif
#else
# ifndef _PEM_bytes_read_bio
#  define _PEM_bytes_read_bio OPENSSL_MANGLER_ASM(PEM_bytes_read_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_bytes_read_bio_secmem
#  define PEM_bytes_read_bio_secmem OPENSSL_MANGLER(PEM_bytes_read_bio_secmem)
# endif
#else
# ifndef _PEM_bytes_read_bio_secmem
#  define _PEM_bytes_read_bio_secmem OPENSSL_MANGLER_ASM(PEM_bytes_read_bio_secmem)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_def_callback
#  define PEM_def_callback OPENSSL_MANGLER(PEM_def_callback)
# endif
#else
# ifndef _PEM_def_callback
#  define _PEM_def_callback OPENSSL_MANGLER_ASM(PEM_def_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_dek_info
#  define PEM_dek_info OPENSSL_MANGLER(PEM_dek_info)
# endif
#else
# ifndef _PEM_dek_info
#  define _PEM_dek_info OPENSSL_MANGLER_ASM(PEM_dek_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_do_header
#  define PEM_do_header OPENSSL_MANGLER(PEM_do_header)
# endif
#else
# ifndef _PEM_do_header
#  define _PEM_do_header OPENSSL_MANGLER_ASM(PEM_do_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_get_EVP_CIPHER_INFO
#  define PEM_get_EVP_CIPHER_INFO OPENSSL_MANGLER(PEM_get_EVP_CIPHER_INFO)
# endif
#else
# ifndef _PEM_get_EVP_CIPHER_INFO
#  define _PEM_get_EVP_CIPHER_INFO OPENSSL_MANGLER_ASM(PEM_get_EVP_CIPHER_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_proc_type
#  define PEM_proc_type OPENSSL_MANGLER(PEM_proc_type)
# endif
#else
# ifndef _PEM_proc_type
#  define _PEM_proc_type OPENSSL_MANGLER_ASM(PEM_proc_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read
#  define PEM_read OPENSSL_MANGLER(PEM_read)
# endif
#else
# ifndef _PEM_read
#  define _PEM_read OPENSSL_MANGLER_ASM(PEM_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_CMS
#  define PEM_read_CMS OPENSSL_MANGLER(PEM_read_CMS)
# endif
#else
# ifndef _PEM_read_CMS
#  define _PEM_read_CMS OPENSSL_MANGLER_ASM(PEM_read_CMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_DHparams
#  define PEM_read_DHparams OPENSSL_MANGLER(PEM_read_DHparams)
# endif
#else
# ifndef _PEM_read_DHparams
#  define _PEM_read_DHparams OPENSSL_MANGLER_ASM(PEM_read_DHparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_DSAPrivateKey
#  define PEM_read_DSAPrivateKey OPENSSL_MANGLER(PEM_read_DSAPrivateKey)
# endif
#else
# ifndef _PEM_read_DSAPrivateKey
#  define _PEM_read_DSAPrivateKey OPENSSL_MANGLER_ASM(PEM_read_DSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_DSA_PUBKEY
#  define PEM_read_DSA_PUBKEY OPENSSL_MANGLER(PEM_read_DSA_PUBKEY)
# endif
#else
# ifndef _PEM_read_DSA_PUBKEY
#  define _PEM_read_DSA_PUBKEY OPENSSL_MANGLER_ASM(PEM_read_DSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_DSAparams
#  define PEM_read_DSAparams OPENSSL_MANGLER(PEM_read_DSAparams)
# endif
#else
# ifndef _PEM_read_DSAparams
#  define _PEM_read_DSAparams OPENSSL_MANGLER_ASM(PEM_read_DSAparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_ECPKParameters
#  define PEM_read_ECPKParameters OPENSSL_MANGLER(PEM_read_ECPKParameters)
# endif
#else
# ifndef _PEM_read_ECPKParameters
#  define _PEM_read_ECPKParameters OPENSSL_MANGLER_ASM(PEM_read_ECPKParameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_ECPrivateKey
#  define PEM_read_ECPrivateKey OPENSSL_MANGLER(PEM_read_ECPrivateKey)
# endif
#else
# ifndef _PEM_read_ECPrivateKey
#  define _PEM_read_ECPrivateKey OPENSSL_MANGLER_ASM(PEM_read_ECPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_EC_PUBKEY
#  define PEM_read_EC_PUBKEY OPENSSL_MANGLER(PEM_read_EC_PUBKEY)
# endif
#else
# ifndef _PEM_read_EC_PUBKEY
#  define _PEM_read_EC_PUBKEY OPENSSL_MANGLER_ASM(PEM_read_EC_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_NETSCAPE_CERT_SEQUENCE
#  define PEM_read_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER(PEM_read_NETSCAPE_CERT_SEQUENCE)
# endif
#else
# ifndef _PEM_read_NETSCAPE_CERT_SEQUENCE
#  define _PEM_read_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER_ASM(PEM_read_NETSCAPE_CERT_SEQUENCE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_PKCS7
#  define PEM_read_PKCS7 OPENSSL_MANGLER(PEM_read_PKCS7)
# endif
#else
# ifndef _PEM_read_PKCS7
#  define _PEM_read_PKCS7 OPENSSL_MANGLER_ASM(PEM_read_PKCS7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_PKCS8
#  define PEM_read_PKCS8 OPENSSL_MANGLER(PEM_read_PKCS8)
# endif
#else
# ifndef _PEM_read_PKCS8
#  define _PEM_read_PKCS8 OPENSSL_MANGLER_ASM(PEM_read_PKCS8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_PKCS8_PRIV_KEY_INFO
#  define PEM_read_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER(PEM_read_PKCS8_PRIV_KEY_INFO)
# endif
#else
# ifndef _PEM_read_PKCS8_PRIV_KEY_INFO
#  define _PEM_read_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER_ASM(PEM_read_PKCS8_PRIV_KEY_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_PUBKEY
#  define PEM_read_PUBKEY OPENSSL_MANGLER(PEM_read_PUBKEY)
# endif
#else
# ifndef _PEM_read_PUBKEY
#  define _PEM_read_PUBKEY OPENSSL_MANGLER_ASM(PEM_read_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_PUBKEY_ex
#  define PEM_read_PUBKEY_ex OPENSSL_MANGLER(PEM_read_PUBKEY_ex)
# endif
#else
# ifndef _PEM_read_PUBKEY_ex
#  define _PEM_read_PUBKEY_ex OPENSSL_MANGLER_ASM(PEM_read_PUBKEY_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_PrivateKey
#  define PEM_read_PrivateKey OPENSSL_MANGLER(PEM_read_PrivateKey)
# endif
#else
# ifndef _PEM_read_PrivateKey
#  define _PEM_read_PrivateKey OPENSSL_MANGLER_ASM(PEM_read_PrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_PrivateKey_ex
#  define PEM_read_PrivateKey_ex OPENSSL_MANGLER(PEM_read_PrivateKey_ex)
# endif
#else
# ifndef _PEM_read_PrivateKey_ex
#  define _PEM_read_PrivateKey_ex OPENSSL_MANGLER_ASM(PEM_read_PrivateKey_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_RSAPrivateKey
#  define PEM_read_RSAPrivateKey OPENSSL_MANGLER(PEM_read_RSAPrivateKey)
# endif
#else
# ifndef _PEM_read_RSAPrivateKey
#  define _PEM_read_RSAPrivateKey OPENSSL_MANGLER_ASM(PEM_read_RSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_RSAPublicKey
#  define PEM_read_RSAPublicKey OPENSSL_MANGLER(PEM_read_RSAPublicKey)
# endif
#else
# ifndef _PEM_read_RSAPublicKey
#  define _PEM_read_RSAPublicKey OPENSSL_MANGLER_ASM(PEM_read_RSAPublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_RSA_PUBKEY
#  define PEM_read_RSA_PUBKEY OPENSSL_MANGLER(PEM_read_RSA_PUBKEY)
# endif
#else
# ifndef _PEM_read_RSA_PUBKEY
#  define _PEM_read_RSA_PUBKEY OPENSSL_MANGLER_ASM(PEM_read_RSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_SSL_SESSION
#  define PEM_read_SSL_SESSION OPENSSL_MANGLER(PEM_read_SSL_SESSION)
# endif
#else
# ifndef _PEM_read_SSL_SESSION
#  define _PEM_read_SSL_SESSION OPENSSL_MANGLER_ASM(PEM_read_SSL_SESSION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_X509
#  define PEM_read_X509 OPENSSL_MANGLER(PEM_read_X509)
# endif
#else
# ifndef _PEM_read_X509
#  define _PEM_read_X509 OPENSSL_MANGLER_ASM(PEM_read_X509)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_X509_AUX
#  define PEM_read_X509_AUX OPENSSL_MANGLER(PEM_read_X509_AUX)
# endif
#else
# ifndef _PEM_read_X509_AUX
#  define _PEM_read_X509_AUX OPENSSL_MANGLER_ASM(PEM_read_X509_AUX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_X509_CRL
#  define PEM_read_X509_CRL OPENSSL_MANGLER(PEM_read_X509_CRL)
# endif
#else
# ifndef _PEM_read_X509_CRL
#  define _PEM_read_X509_CRL OPENSSL_MANGLER_ASM(PEM_read_X509_CRL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_X509_PUBKEY
#  define PEM_read_X509_PUBKEY OPENSSL_MANGLER(PEM_read_X509_PUBKEY)
# endif
#else
# ifndef _PEM_read_X509_PUBKEY
#  define _PEM_read_X509_PUBKEY OPENSSL_MANGLER_ASM(PEM_read_X509_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_X509_REQ
#  define PEM_read_X509_REQ OPENSSL_MANGLER(PEM_read_X509_REQ)
# endif
#else
# ifndef _PEM_read_X509_REQ
#  define _PEM_read_X509_REQ OPENSSL_MANGLER_ASM(PEM_read_X509_REQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio
#  define PEM_read_bio OPENSSL_MANGLER(PEM_read_bio)
# endif
#else
# ifndef _PEM_read_bio
#  define _PEM_read_bio OPENSSL_MANGLER_ASM(PEM_read_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_CMS
#  define PEM_read_bio_CMS OPENSSL_MANGLER(PEM_read_bio_CMS)
# endif
#else
# ifndef _PEM_read_bio_CMS
#  define _PEM_read_bio_CMS OPENSSL_MANGLER_ASM(PEM_read_bio_CMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_DHparams
#  define PEM_read_bio_DHparams OPENSSL_MANGLER(PEM_read_bio_DHparams)
# endif
#else
# ifndef _PEM_read_bio_DHparams
#  define _PEM_read_bio_DHparams OPENSSL_MANGLER_ASM(PEM_read_bio_DHparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_DSAPrivateKey
#  define PEM_read_bio_DSAPrivateKey OPENSSL_MANGLER(PEM_read_bio_DSAPrivateKey)
# endif
#else
# ifndef _PEM_read_bio_DSAPrivateKey
#  define _PEM_read_bio_DSAPrivateKey OPENSSL_MANGLER_ASM(PEM_read_bio_DSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_DSA_PUBKEY
#  define PEM_read_bio_DSA_PUBKEY OPENSSL_MANGLER(PEM_read_bio_DSA_PUBKEY)
# endif
#else
# ifndef _PEM_read_bio_DSA_PUBKEY
#  define _PEM_read_bio_DSA_PUBKEY OPENSSL_MANGLER_ASM(PEM_read_bio_DSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_DSAparams
#  define PEM_read_bio_DSAparams OPENSSL_MANGLER(PEM_read_bio_DSAparams)
# endif
#else
# ifndef _PEM_read_bio_DSAparams
#  define _PEM_read_bio_DSAparams OPENSSL_MANGLER_ASM(PEM_read_bio_DSAparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_ECPKParameters
#  define PEM_read_bio_ECPKParameters OPENSSL_MANGLER(PEM_read_bio_ECPKParameters)
# endif
#else
# ifndef _PEM_read_bio_ECPKParameters
#  define _PEM_read_bio_ECPKParameters OPENSSL_MANGLER_ASM(PEM_read_bio_ECPKParameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_ECPrivateKey
#  define PEM_read_bio_ECPrivateKey OPENSSL_MANGLER(PEM_read_bio_ECPrivateKey)
# endif
#else
# ifndef _PEM_read_bio_ECPrivateKey
#  define _PEM_read_bio_ECPrivateKey OPENSSL_MANGLER_ASM(PEM_read_bio_ECPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_EC_PUBKEY
#  define PEM_read_bio_EC_PUBKEY OPENSSL_MANGLER(PEM_read_bio_EC_PUBKEY)
# endif
#else
# ifndef _PEM_read_bio_EC_PUBKEY
#  define _PEM_read_bio_EC_PUBKEY OPENSSL_MANGLER_ASM(PEM_read_bio_EC_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_NETSCAPE_CERT_SEQUENCE
#  define PEM_read_bio_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER(PEM_read_bio_NETSCAPE_CERT_SEQUENCE)
# endif
#else
# ifndef _PEM_read_bio_NETSCAPE_CERT_SEQUENCE
#  define _PEM_read_bio_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER_ASM(PEM_read_bio_NETSCAPE_CERT_SEQUENCE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_PKCS7
#  define PEM_read_bio_PKCS7 OPENSSL_MANGLER(PEM_read_bio_PKCS7)
# endif
#else
# ifndef _PEM_read_bio_PKCS7
#  define _PEM_read_bio_PKCS7 OPENSSL_MANGLER_ASM(PEM_read_bio_PKCS7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_PKCS8
#  define PEM_read_bio_PKCS8 OPENSSL_MANGLER(PEM_read_bio_PKCS8)
# endif
#else
# ifndef _PEM_read_bio_PKCS8
#  define _PEM_read_bio_PKCS8 OPENSSL_MANGLER_ASM(PEM_read_bio_PKCS8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_PKCS8_PRIV_KEY_INFO
#  define PEM_read_bio_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER(PEM_read_bio_PKCS8_PRIV_KEY_INFO)
# endif
#else
# ifndef _PEM_read_bio_PKCS8_PRIV_KEY_INFO
#  define _PEM_read_bio_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER_ASM(PEM_read_bio_PKCS8_PRIV_KEY_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_PUBKEY
#  define PEM_read_bio_PUBKEY OPENSSL_MANGLER(PEM_read_bio_PUBKEY)
# endif
#else
# ifndef _PEM_read_bio_PUBKEY
#  define _PEM_read_bio_PUBKEY OPENSSL_MANGLER_ASM(PEM_read_bio_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_PUBKEY_ex
#  define PEM_read_bio_PUBKEY_ex OPENSSL_MANGLER(PEM_read_bio_PUBKEY_ex)
# endif
#else
# ifndef _PEM_read_bio_PUBKEY_ex
#  define _PEM_read_bio_PUBKEY_ex OPENSSL_MANGLER_ASM(PEM_read_bio_PUBKEY_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_Parameters
#  define PEM_read_bio_Parameters OPENSSL_MANGLER(PEM_read_bio_Parameters)
# endif
#else
# ifndef _PEM_read_bio_Parameters
#  define _PEM_read_bio_Parameters OPENSSL_MANGLER_ASM(PEM_read_bio_Parameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_Parameters_ex
#  define PEM_read_bio_Parameters_ex OPENSSL_MANGLER(PEM_read_bio_Parameters_ex)
# endif
#else
# ifndef _PEM_read_bio_Parameters_ex
#  define _PEM_read_bio_Parameters_ex OPENSSL_MANGLER_ASM(PEM_read_bio_Parameters_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_PrivateKey
#  define PEM_read_bio_PrivateKey OPENSSL_MANGLER(PEM_read_bio_PrivateKey)
# endif
#else
# ifndef _PEM_read_bio_PrivateKey
#  define _PEM_read_bio_PrivateKey OPENSSL_MANGLER_ASM(PEM_read_bio_PrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_PrivateKey_ex
#  define PEM_read_bio_PrivateKey_ex OPENSSL_MANGLER(PEM_read_bio_PrivateKey_ex)
# endif
#else
# ifndef _PEM_read_bio_PrivateKey_ex
#  define _PEM_read_bio_PrivateKey_ex OPENSSL_MANGLER_ASM(PEM_read_bio_PrivateKey_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_RSAPrivateKey
#  define PEM_read_bio_RSAPrivateKey OPENSSL_MANGLER(PEM_read_bio_RSAPrivateKey)
# endif
#else
# ifndef _PEM_read_bio_RSAPrivateKey
#  define _PEM_read_bio_RSAPrivateKey OPENSSL_MANGLER_ASM(PEM_read_bio_RSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_RSAPublicKey
#  define PEM_read_bio_RSAPublicKey OPENSSL_MANGLER(PEM_read_bio_RSAPublicKey)
# endif
#else
# ifndef _PEM_read_bio_RSAPublicKey
#  define _PEM_read_bio_RSAPublicKey OPENSSL_MANGLER_ASM(PEM_read_bio_RSAPublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_RSA_PUBKEY
#  define PEM_read_bio_RSA_PUBKEY OPENSSL_MANGLER(PEM_read_bio_RSA_PUBKEY)
# endif
#else
# ifndef _PEM_read_bio_RSA_PUBKEY
#  define _PEM_read_bio_RSA_PUBKEY OPENSSL_MANGLER_ASM(PEM_read_bio_RSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_SSL_SESSION
#  define PEM_read_bio_SSL_SESSION OPENSSL_MANGLER(PEM_read_bio_SSL_SESSION)
# endif
#else
# ifndef _PEM_read_bio_SSL_SESSION
#  define _PEM_read_bio_SSL_SESSION OPENSSL_MANGLER_ASM(PEM_read_bio_SSL_SESSION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_X509
#  define PEM_read_bio_X509 OPENSSL_MANGLER(PEM_read_bio_X509)
# endif
#else
# ifndef _PEM_read_bio_X509
#  define _PEM_read_bio_X509 OPENSSL_MANGLER_ASM(PEM_read_bio_X509)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_X509_AUX
#  define PEM_read_bio_X509_AUX OPENSSL_MANGLER(PEM_read_bio_X509_AUX)
# endif
#else
# ifndef _PEM_read_bio_X509_AUX
#  define _PEM_read_bio_X509_AUX OPENSSL_MANGLER_ASM(PEM_read_bio_X509_AUX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_X509_CRL
#  define PEM_read_bio_X509_CRL OPENSSL_MANGLER(PEM_read_bio_X509_CRL)
# endif
#else
# ifndef _PEM_read_bio_X509_CRL
#  define _PEM_read_bio_X509_CRL OPENSSL_MANGLER_ASM(PEM_read_bio_X509_CRL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_X509_PUBKEY
#  define PEM_read_bio_X509_PUBKEY OPENSSL_MANGLER(PEM_read_bio_X509_PUBKEY)
# endif
#else
# ifndef _PEM_read_bio_X509_PUBKEY
#  define _PEM_read_bio_X509_PUBKEY OPENSSL_MANGLER_ASM(PEM_read_bio_X509_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_X509_REQ
#  define PEM_read_bio_X509_REQ OPENSSL_MANGLER(PEM_read_bio_X509_REQ)
# endif
#else
# ifndef _PEM_read_bio_X509_REQ
#  define _PEM_read_bio_X509_REQ OPENSSL_MANGLER_ASM(PEM_read_bio_X509_REQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_read_bio_ex
#  define PEM_read_bio_ex OPENSSL_MANGLER(PEM_read_bio_ex)
# endif
#else
# ifndef _PEM_read_bio_ex
#  define _PEM_read_bio_ex OPENSSL_MANGLER_ASM(PEM_read_bio_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write
#  define PEM_write OPENSSL_MANGLER(PEM_write)
# endif
#else
# ifndef _PEM_write
#  define _PEM_write OPENSSL_MANGLER_ASM(PEM_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_CMS
#  define PEM_write_CMS OPENSSL_MANGLER(PEM_write_CMS)
# endif
#else
# ifndef _PEM_write_CMS
#  define _PEM_write_CMS OPENSSL_MANGLER_ASM(PEM_write_CMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_DHparams
#  define PEM_write_DHparams OPENSSL_MANGLER(PEM_write_DHparams)
# endif
#else
# ifndef _PEM_write_DHparams
#  define _PEM_write_DHparams OPENSSL_MANGLER_ASM(PEM_write_DHparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_DHxparams
#  define PEM_write_DHxparams OPENSSL_MANGLER(PEM_write_DHxparams)
# endif
#else
# ifndef _PEM_write_DHxparams
#  define _PEM_write_DHxparams OPENSSL_MANGLER_ASM(PEM_write_DHxparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_DSAPrivateKey
#  define PEM_write_DSAPrivateKey OPENSSL_MANGLER(PEM_write_DSAPrivateKey)
# endif
#else
# ifndef _PEM_write_DSAPrivateKey
#  define _PEM_write_DSAPrivateKey OPENSSL_MANGLER_ASM(PEM_write_DSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_DSA_PUBKEY
#  define PEM_write_DSA_PUBKEY OPENSSL_MANGLER(PEM_write_DSA_PUBKEY)
# endif
#else
# ifndef _PEM_write_DSA_PUBKEY
#  define _PEM_write_DSA_PUBKEY OPENSSL_MANGLER_ASM(PEM_write_DSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_DSAparams
#  define PEM_write_DSAparams OPENSSL_MANGLER(PEM_write_DSAparams)
# endif
#else
# ifndef _PEM_write_DSAparams
#  define _PEM_write_DSAparams OPENSSL_MANGLER_ASM(PEM_write_DSAparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_ECPKParameters
#  define PEM_write_ECPKParameters OPENSSL_MANGLER(PEM_write_ECPKParameters)
# endif
#else
# ifndef _PEM_write_ECPKParameters
#  define _PEM_write_ECPKParameters OPENSSL_MANGLER_ASM(PEM_write_ECPKParameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_ECPrivateKey
#  define PEM_write_ECPrivateKey OPENSSL_MANGLER(PEM_write_ECPrivateKey)
# endif
#else
# ifndef _PEM_write_ECPrivateKey
#  define _PEM_write_ECPrivateKey OPENSSL_MANGLER_ASM(PEM_write_ECPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_EC_PUBKEY
#  define PEM_write_EC_PUBKEY OPENSSL_MANGLER(PEM_write_EC_PUBKEY)
# endif
#else
# ifndef _PEM_write_EC_PUBKEY
#  define _PEM_write_EC_PUBKEY OPENSSL_MANGLER_ASM(PEM_write_EC_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_NETSCAPE_CERT_SEQUENCE
#  define PEM_write_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER(PEM_write_NETSCAPE_CERT_SEQUENCE)
# endif
#else
# ifndef _PEM_write_NETSCAPE_CERT_SEQUENCE
#  define _PEM_write_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER_ASM(PEM_write_NETSCAPE_CERT_SEQUENCE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_PKCS7
#  define PEM_write_PKCS7 OPENSSL_MANGLER(PEM_write_PKCS7)
# endif
#else
# ifndef _PEM_write_PKCS7
#  define _PEM_write_PKCS7 OPENSSL_MANGLER_ASM(PEM_write_PKCS7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_PKCS8
#  define PEM_write_PKCS8 OPENSSL_MANGLER(PEM_write_PKCS8)
# endif
#else
# ifndef _PEM_write_PKCS8
#  define _PEM_write_PKCS8 OPENSSL_MANGLER_ASM(PEM_write_PKCS8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_PKCS8PrivateKey
#  define PEM_write_PKCS8PrivateKey OPENSSL_MANGLER(PEM_write_PKCS8PrivateKey)
# endif
#else
# ifndef _PEM_write_PKCS8PrivateKey
#  define _PEM_write_PKCS8PrivateKey OPENSSL_MANGLER_ASM(PEM_write_PKCS8PrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_PKCS8PrivateKey_nid
#  define PEM_write_PKCS8PrivateKey_nid OPENSSL_MANGLER(PEM_write_PKCS8PrivateKey_nid)
# endif
#else
# ifndef _PEM_write_PKCS8PrivateKey_nid
#  define _PEM_write_PKCS8PrivateKey_nid OPENSSL_MANGLER_ASM(PEM_write_PKCS8PrivateKey_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_PKCS8_PRIV_KEY_INFO
#  define PEM_write_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER(PEM_write_PKCS8_PRIV_KEY_INFO)
# endif
#else
# ifndef _PEM_write_PKCS8_PRIV_KEY_INFO
#  define _PEM_write_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER_ASM(PEM_write_PKCS8_PRIV_KEY_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_PUBKEY
#  define PEM_write_PUBKEY OPENSSL_MANGLER(PEM_write_PUBKEY)
# endif
#else
# ifndef _PEM_write_PUBKEY
#  define _PEM_write_PUBKEY OPENSSL_MANGLER_ASM(PEM_write_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_PUBKEY_ex
#  define PEM_write_PUBKEY_ex OPENSSL_MANGLER(PEM_write_PUBKEY_ex)
# endif
#else
# ifndef _PEM_write_PUBKEY_ex
#  define _PEM_write_PUBKEY_ex OPENSSL_MANGLER_ASM(PEM_write_PUBKEY_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_PrivateKey
#  define PEM_write_PrivateKey OPENSSL_MANGLER(PEM_write_PrivateKey)
# endif
#else
# ifndef _PEM_write_PrivateKey
#  define _PEM_write_PrivateKey OPENSSL_MANGLER_ASM(PEM_write_PrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_PrivateKey_ex
#  define PEM_write_PrivateKey_ex OPENSSL_MANGLER(PEM_write_PrivateKey_ex)
# endif
#else
# ifndef _PEM_write_PrivateKey_ex
#  define _PEM_write_PrivateKey_ex OPENSSL_MANGLER_ASM(PEM_write_PrivateKey_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_RSAPrivateKey
#  define PEM_write_RSAPrivateKey OPENSSL_MANGLER(PEM_write_RSAPrivateKey)
# endif
#else
# ifndef _PEM_write_RSAPrivateKey
#  define _PEM_write_RSAPrivateKey OPENSSL_MANGLER_ASM(PEM_write_RSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_RSAPublicKey
#  define PEM_write_RSAPublicKey OPENSSL_MANGLER(PEM_write_RSAPublicKey)
# endif
#else
# ifndef _PEM_write_RSAPublicKey
#  define _PEM_write_RSAPublicKey OPENSSL_MANGLER_ASM(PEM_write_RSAPublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_RSA_PUBKEY
#  define PEM_write_RSA_PUBKEY OPENSSL_MANGLER(PEM_write_RSA_PUBKEY)
# endif
#else
# ifndef _PEM_write_RSA_PUBKEY
#  define _PEM_write_RSA_PUBKEY OPENSSL_MANGLER_ASM(PEM_write_RSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_SSL_SESSION
#  define PEM_write_SSL_SESSION OPENSSL_MANGLER(PEM_write_SSL_SESSION)
# endif
#else
# ifndef _PEM_write_SSL_SESSION
#  define _PEM_write_SSL_SESSION OPENSSL_MANGLER_ASM(PEM_write_SSL_SESSION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_X509
#  define PEM_write_X509 OPENSSL_MANGLER(PEM_write_X509)
# endif
#else
# ifndef _PEM_write_X509
#  define _PEM_write_X509 OPENSSL_MANGLER_ASM(PEM_write_X509)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_X509_AUX
#  define PEM_write_X509_AUX OPENSSL_MANGLER(PEM_write_X509_AUX)
# endif
#else
# ifndef _PEM_write_X509_AUX
#  define _PEM_write_X509_AUX OPENSSL_MANGLER_ASM(PEM_write_X509_AUX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_X509_CRL
#  define PEM_write_X509_CRL OPENSSL_MANGLER(PEM_write_X509_CRL)
# endif
#else
# ifndef _PEM_write_X509_CRL
#  define _PEM_write_X509_CRL OPENSSL_MANGLER_ASM(PEM_write_X509_CRL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_X509_PUBKEY
#  define PEM_write_X509_PUBKEY OPENSSL_MANGLER(PEM_write_X509_PUBKEY)
# endif
#else
# ifndef _PEM_write_X509_PUBKEY
#  define _PEM_write_X509_PUBKEY OPENSSL_MANGLER_ASM(PEM_write_X509_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_X509_REQ
#  define PEM_write_X509_REQ OPENSSL_MANGLER(PEM_write_X509_REQ)
# endif
#else
# ifndef _PEM_write_X509_REQ
#  define _PEM_write_X509_REQ OPENSSL_MANGLER_ASM(PEM_write_X509_REQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_X509_REQ_NEW
#  define PEM_write_X509_REQ_NEW OPENSSL_MANGLER(PEM_write_X509_REQ_NEW)
# endif
#else
# ifndef _PEM_write_X509_REQ_NEW
#  define _PEM_write_X509_REQ_NEW OPENSSL_MANGLER_ASM(PEM_write_X509_REQ_NEW)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio
#  define PEM_write_bio OPENSSL_MANGLER(PEM_write_bio)
# endif
#else
# ifndef _PEM_write_bio
#  define _PEM_write_bio OPENSSL_MANGLER_ASM(PEM_write_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_ASN1_stream
#  define PEM_write_bio_ASN1_stream OPENSSL_MANGLER(PEM_write_bio_ASN1_stream)
# endif
#else
# ifndef _PEM_write_bio_ASN1_stream
#  define _PEM_write_bio_ASN1_stream OPENSSL_MANGLER_ASM(PEM_write_bio_ASN1_stream)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_CMS
#  define PEM_write_bio_CMS OPENSSL_MANGLER(PEM_write_bio_CMS)
# endif
#else
# ifndef _PEM_write_bio_CMS
#  define _PEM_write_bio_CMS OPENSSL_MANGLER_ASM(PEM_write_bio_CMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_CMS_stream
#  define PEM_write_bio_CMS_stream OPENSSL_MANGLER(PEM_write_bio_CMS_stream)
# endif
#else
# ifndef _PEM_write_bio_CMS_stream
#  define _PEM_write_bio_CMS_stream OPENSSL_MANGLER_ASM(PEM_write_bio_CMS_stream)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_DHparams
#  define PEM_write_bio_DHparams OPENSSL_MANGLER(PEM_write_bio_DHparams)
# endif
#else
# ifndef _PEM_write_bio_DHparams
#  define _PEM_write_bio_DHparams OPENSSL_MANGLER_ASM(PEM_write_bio_DHparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_DHxparams
#  define PEM_write_bio_DHxparams OPENSSL_MANGLER(PEM_write_bio_DHxparams)
# endif
#else
# ifndef _PEM_write_bio_DHxparams
#  define _PEM_write_bio_DHxparams OPENSSL_MANGLER_ASM(PEM_write_bio_DHxparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_DSAPrivateKey
#  define PEM_write_bio_DSAPrivateKey OPENSSL_MANGLER(PEM_write_bio_DSAPrivateKey)
# endif
#else
# ifndef _PEM_write_bio_DSAPrivateKey
#  define _PEM_write_bio_DSAPrivateKey OPENSSL_MANGLER_ASM(PEM_write_bio_DSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_DSA_PUBKEY
#  define PEM_write_bio_DSA_PUBKEY OPENSSL_MANGLER(PEM_write_bio_DSA_PUBKEY)
# endif
#else
# ifndef _PEM_write_bio_DSA_PUBKEY
#  define _PEM_write_bio_DSA_PUBKEY OPENSSL_MANGLER_ASM(PEM_write_bio_DSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_DSAparams
#  define PEM_write_bio_DSAparams OPENSSL_MANGLER(PEM_write_bio_DSAparams)
# endif
#else
# ifndef _PEM_write_bio_DSAparams
#  define _PEM_write_bio_DSAparams OPENSSL_MANGLER_ASM(PEM_write_bio_DSAparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_ECPKParameters
#  define PEM_write_bio_ECPKParameters OPENSSL_MANGLER(PEM_write_bio_ECPKParameters)
# endif
#else
# ifndef _PEM_write_bio_ECPKParameters
#  define _PEM_write_bio_ECPKParameters OPENSSL_MANGLER_ASM(PEM_write_bio_ECPKParameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_ECPrivateKey
#  define PEM_write_bio_ECPrivateKey OPENSSL_MANGLER(PEM_write_bio_ECPrivateKey)
# endif
#else
# ifndef _PEM_write_bio_ECPrivateKey
#  define _PEM_write_bio_ECPrivateKey OPENSSL_MANGLER_ASM(PEM_write_bio_ECPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_EC_PUBKEY
#  define PEM_write_bio_EC_PUBKEY OPENSSL_MANGLER(PEM_write_bio_EC_PUBKEY)
# endif
#else
# ifndef _PEM_write_bio_EC_PUBKEY
#  define _PEM_write_bio_EC_PUBKEY OPENSSL_MANGLER_ASM(PEM_write_bio_EC_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_NETSCAPE_CERT_SEQUENCE
#  define PEM_write_bio_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER(PEM_write_bio_NETSCAPE_CERT_SEQUENCE)
# endif
#else
# ifndef _PEM_write_bio_NETSCAPE_CERT_SEQUENCE
#  define _PEM_write_bio_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER_ASM(PEM_write_bio_NETSCAPE_CERT_SEQUENCE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_PKCS7
#  define PEM_write_bio_PKCS7 OPENSSL_MANGLER(PEM_write_bio_PKCS7)
# endif
#else
# ifndef _PEM_write_bio_PKCS7
#  define _PEM_write_bio_PKCS7 OPENSSL_MANGLER_ASM(PEM_write_bio_PKCS7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_PKCS7_stream
#  define PEM_write_bio_PKCS7_stream OPENSSL_MANGLER(PEM_write_bio_PKCS7_stream)
# endif
#else
# ifndef _PEM_write_bio_PKCS7_stream
#  define _PEM_write_bio_PKCS7_stream OPENSSL_MANGLER_ASM(PEM_write_bio_PKCS7_stream)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_PKCS8
#  define PEM_write_bio_PKCS8 OPENSSL_MANGLER(PEM_write_bio_PKCS8)
# endif
#else
# ifndef _PEM_write_bio_PKCS8
#  define _PEM_write_bio_PKCS8 OPENSSL_MANGLER_ASM(PEM_write_bio_PKCS8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_PKCS8PrivateKey
#  define PEM_write_bio_PKCS8PrivateKey OPENSSL_MANGLER(PEM_write_bio_PKCS8PrivateKey)
# endif
#else
# ifndef _PEM_write_bio_PKCS8PrivateKey
#  define _PEM_write_bio_PKCS8PrivateKey OPENSSL_MANGLER_ASM(PEM_write_bio_PKCS8PrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_PKCS8PrivateKey_nid
#  define PEM_write_bio_PKCS8PrivateKey_nid OPENSSL_MANGLER(PEM_write_bio_PKCS8PrivateKey_nid)
# endif
#else
# ifndef _PEM_write_bio_PKCS8PrivateKey_nid
#  define _PEM_write_bio_PKCS8PrivateKey_nid OPENSSL_MANGLER_ASM(PEM_write_bio_PKCS8PrivateKey_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_PKCS8_PRIV_KEY_INFO
#  define PEM_write_bio_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER(PEM_write_bio_PKCS8_PRIV_KEY_INFO)
# endif
#else
# ifndef _PEM_write_bio_PKCS8_PRIV_KEY_INFO
#  define _PEM_write_bio_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER_ASM(PEM_write_bio_PKCS8_PRIV_KEY_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_PUBKEY
#  define PEM_write_bio_PUBKEY OPENSSL_MANGLER(PEM_write_bio_PUBKEY)
# endif
#else
# ifndef _PEM_write_bio_PUBKEY
#  define _PEM_write_bio_PUBKEY OPENSSL_MANGLER_ASM(PEM_write_bio_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_PUBKEY_ex
#  define PEM_write_bio_PUBKEY_ex OPENSSL_MANGLER(PEM_write_bio_PUBKEY_ex)
# endif
#else
# ifndef _PEM_write_bio_PUBKEY_ex
#  define _PEM_write_bio_PUBKEY_ex OPENSSL_MANGLER_ASM(PEM_write_bio_PUBKEY_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_Parameters
#  define PEM_write_bio_Parameters OPENSSL_MANGLER(PEM_write_bio_Parameters)
# endif
#else
# ifndef _PEM_write_bio_Parameters
#  define _PEM_write_bio_Parameters OPENSSL_MANGLER_ASM(PEM_write_bio_Parameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_PrivateKey
#  define PEM_write_bio_PrivateKey OPENSSL_MANGLER(PEM_write_bio_PrivateKey)
# endif
#else
# ifndef _PEM_write_bio_PrivateKey
#  define _PEM_write_bio_PrivateKey OPENSSL_MANGLER_ASM(PEM_write_bio_PrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_PrivateKey_ex
#  define PEM_write_bio_PrivateKey_ex OPENSSL_MANGLER(PEM_write_bio_PrivateKey_ex)
# endif
#else
# ifndef _PEM_write_bio_PrivateKey_ex
#  define _PEM_write_bio_PrivateKey_ex OPENSSL_MANGLER_ASM(PEM_write_bio_PrivateKey_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_PrivateKey_traditional
#  define PEM_write_bio_PrivateKey_traditional OPENSSL_MANGLER(PEM_write_bio_PrivateKey_traditional)
# endif
#else
# ifndef _PEM_write_bio_PrivateKey_traditional
#  define _PEM_write_bio_PrivateKey_traditional OPENSSL_MANGLER_ASM(PEM_write_bio_PrivateKey_traditional)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_RSAPrivateKey
#  define PEM_write_bio_RSAPrivateKey OPENSSL_MANGLER(PEM_write_bio_RSAPrivateKey)
# endif
#else
# ifndef _PEM_write_bio_RSAPrivateKey
#  define _PEM_write_bio_RSAPrivateKey OPENSSL_MANGLER_ASM(PEM_write_bio_RSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_RSAPublicKey
#  define PEM_write_bio_RSAPublicKey OPENSSL_MANGLER(PEM_write_bio_RSAPublicKey)
# endif
#else
# ifndef _PEM_write_bio_RSAPublicKey
#  define _PEM_write_bio_RSAPublicKey OPENSSL_MANGLER_ASM(PEM_write_bio_RSAPublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_RSA_PUBKEY
#  define PEM_write_bio_RSA_PUBKEY OPENSSL_MANGLER(PEM_write_bio_RSA_PUBKEY)
# endif
#else
# ifndef _PEM_write_bio_RSA_PUBKEY
#  define _PEM_write_bio_RSA_PUBKEY OPENSSL_MANGLER_ASM(PEM_write_bio_RSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_SSL_SESSION
#  define PEM_write_bio_SSL_SESSION OPENSSL_MANGLER(PEM_write_bio_SSL_SESSION)
# endif
#else
# ifndef _PEM_write_bio_SSL_SESSION
#  define _PEM_write_bio_SSL_SESSION OPENSSL_MANGLER_ASM(PEM_write_bio_SSL_SESSION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_X509
#  define PEM_write_bio_X509 OPENSSL_MANGLER(PEM_write_bio_X509)
# endif
#else
# ifndef _PEM_write_bio_X509
#  define _PEM_write_bio_X509 OPENSSL_MANGLER_ASM(PEM_write_bio_X509)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_X509_AUX
#  define PEM_write_bio_X509_AUX OPENSSL_MANGLER(PEM_write_bio_X509_AUX)
# endif
#else
# ifndef _PEM_write_bio_X509_AUX
#  define _PEM_write_bio_X509_AUX OPENSSL_MANGLER_ASM(PEM_write_bio_X509_AUX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_X509_CRL
#  define PEM_write_bio_X509_CRL OPENSSL_MANGLER(PEM_write_bio_X509_CRL)
# endif
#else
# ifndef _PEM_write_bio_X509_CRL
#  define _PEM_write_bio_X509_CRL OPENSSL_MANGLER_ASM(PEM_write_bio_X509_CRL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_X509_PUBKEY
#  define PEM_write_bio_X509_PUBKEY OPENSSL_MANGLER(PEM_write_bio_X509_PUBKEY)
# endif
#else
# ifndef _PEM_write_bio_X509_PUBKEY
#  define _PEM_write_bio_X509_PUBKEY OPENSSL_MANGLER_ASM(PEM_write_bio_X509_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_X509_REQ
#  define PEM_write_bio_X509_REQ OPENSSL_MANGLER(PEM_write_bio_X509_REQ)
# endif
#else
# ifndef _PEM_write_bio_X509_REQ
#  define _PEM_write_bio_X509_REQ OPENSSL_MANGLER_ASM(PEM_write_bio_X509_REQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PEM_write_bio_X509_REQ_NEW
#  define PEM_write_bio_X509_REQ_NEW OPENSSL_MANGLER(PEM_write_bio_X509_REQ_NEW)
# endif
#else
# ifndef _PEM_write_bio_X509_REQ_NEW
#  define _PEM_write_bio_X509_REQ_NEW OPENSSL_MANGLER_ASM(PEM_write_bio_X509_REQ_NEW)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_AUTHSAFES_it
#  define PKCS12_AUTHSAFES_it OPENSSL_MANGLER(PKCS12_AUTHSAFES_it)
# endif
#else
# ifndef _PKCS12_AUTHSAFES_it
#  define _PKCS12_AUTHSAFES_it OPENSSL_MANGLER_ASM(PKCS12_AUTHSAFES_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_BAGS_free
#  define PKCS12_BAGS_free OPENSSL_MANGLER(PKCS12_BAGS_free)
# endif
#else
# ifndef _PKCS12_BAGS_free
#  define _PKCS12_BAGS_free OPENSSL_MANGLER_ASM(PKCS12_BAGS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_BAGS_it
#  define PKCS12_BAGS_it OPENSSL_MANGLER(PKCS12_BAGS_it)
# endif
#else
# ifndef _PKCS12_BAGS_it
#  define _PKCS12_BAGS_it OPENSSL_MANGLER_ASM(PKCS12_BAGS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_BAGS_new
#  define PKCS12_BAGS_new OPENSSL_MANGLER(PKCS12_BAGS_new)
# endif
#else
# ifndef _PKCS12_BAGS_new
#  define _PKCS12_BAGS_new OPENSSL_MANGLER_ASM(PKCS12_BAGS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_MAC_DATA_free
#  define PKCS12_MAC_DATA_free OPENSSL_MANGLER(PKCS12_MAC_DATA_free)
# endif
#else
# ifndef _PKCS12_MAC_DATA_free
#  define _PKCS12_MAC_DATA_free OPENSSL_MANGLER_ASM(PKCS12_MAC_DATA_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_MAC_DATA_it
#  define PKCS12_MAC_DATA_it OPENSSL_MANGLER(PKCS12_MAC_DATA_it)
# endif
#else
# ifndef _PKCS12_MAC_DATA_it
#  define _PKCS12_MAC_DATA_it OPENSSL_MANGLER_ASM(PKCS12_MAC_DATA_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_MAC_DATA_new
#  define PKCS12_MAC_DATA_new OPENSSL_MANGLER(PKCS12_MAC_DATA_new)
# endif
#else
# ifndef _PKCS12_MAC_DATA_new
#  define _PKCS12_MAC_DATA_new OPENSSL_MANGLER_ASM(PKCS12_MAC_DATA_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_PBE_add
#  define PKCS12_PBE_add OPENSSL_MANGLER(PKCS12_PBE_add)
# endif
#else
# ifndef _PKCS12_PBE_add
#  define _PKCS12_PBE_add OPENSSL_MANGLER_ASM(PKCS12_PBE_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_PBE_keyivgen
#  define PKCS12_PBE_keyivgen OPENSSL_MANGLER(PKCS12_PBE_keyivgen)
# endif
#else
# ifndef _PKCS12_PBE_keyivgen
#  define _PKCS12_PBE_keyivgen OPENSSL_MANGLER_ASM(PKCS12_PBE_keyivgen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_PBE_keyivgen_ex
#  define PKCS12_PBE_keyivgen_ex OPENSSL_MANGLER(PKCS12_PBE_keyivgen_ex)
# endif
#else
# ifndef _PKCS12_PBE_keyivgen_ex
#  define _PKCS12_PBE_keyivgen_ex OPENSSL_MANGLER_ASM(PKCS12_PBE_keyivgen_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAGS_it
#  define PKCS12_SAFEBAGS_it OPENSSL_MANGLER(PKCS12_SAFEBAGS_it)
# endif
#else
# ifndef _PKCS12_SAFEBAGS_it
#  define _PKCS12_SAFEBAGS_it OPENSSL_MANGLER_ASM(PKCS12_SAFEBAGS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_create0_p8inf
#  define PKCS12_SAFEBAG_create0_p8inf OPENSSL_MANGLER(PKCS12_SAFEBAG_create0_p8inf)
# endif
#else
# ifndef _PKCS12_SAFEBAG_create0_p8inf
#  define _PKCS12_SAFEBAG_create0_p8inf OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_create0_p8inf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_create0_pkcs8
#  define PKCS12_SAFEBAG_create0_pkcs8 OPENSSL_MANGLER(PKCS12_SAFEBAG_create0_pkcs8)
# endif
#else
# ifndef _PKCS12_SAFEBAG_create0_pkcs8
#  define _PKCS12_SAFEBAG_create0_pkcs8 OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_create0_pkcs8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_create_cert
#  define PKCS12_SAFEBAG_create_cert OPENSSL_MANGLER(PKCS12_SAFEBAG_create_cert)
# endif
#else
# ifndef _PKCS12_SAFEBAG_create_cert
#  define _PKCS12_SAFEBAG_create_cert OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_create_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_create_crl
#  define PKCS12_SAFEBAG_create_crl OPENSSL_MANGLER(PKCS12_SAFEBAG_create_crl)
# endif
#else
# ifndef _PKCS12_SAFEBAG_create_crl
#  define _PKCS12_SAFEBAG_create_crl OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_create_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_create_pkcs8_encrypt
#  define PKCS12_SAFEBAG_create_pkcs8_encrypt OPENSSL_MANGLER(PKCS12_SAFEBAG_create_pkcs8_encrypt)
# endif
#else
# ifndef _PKCS12_SAFEBAG_create_pkcs8_encrypt
#  define _PKCS12_SAFEBAG_create_pkcs8_encrypt OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_create_pkcs8_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_create_pkcs8_encrypt_ex
#  define PKCS12_SAFEBAG_create_pkcs8_encrypt_ex OPENSSL_MANGLER(PKCS12_SAFEBAG_create_pkcs8_encrypt_ex)
# endif
#else
# ifndef _PKCS12_SAFEBAG_create_pkcs8_encrypt_ex
#  define _PKCS12_SAFEBAG_create_pkcs8_encrypt_ex OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_create_pkcs8_encrypt_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_create_secret
#  define PKCS12_SAFEBAG_create_secret OPENSSL_MANGLER(PKCS12_SAFEBAG_create_secret)
# endif
#else
# ifndef _PKCS12_SAFEBAG_create_secret
#  define _PKCS12_SAFEBAG_create_secret OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_create_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_free
#  define PKCS12_SAFEBAG_free OPENSSL_MANGLER(PKCS12_SAFEBAG_free)
# endif
#else
# ifndef _PKCS12_SAFEBAG_free
#  define _PKCS12_SAFEBAG_free OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get0_attr
#  define PKCS12_SAFEBAG_get0_attr OPENSSL_MANGLER(PKCS12_SAFEBAG_get0_attr)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get0_attr
#  define _PKCS12_SAFEBAG_get0_attr OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get0_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get0_attrs
#  define PKCS12_SAFEBAG_get0_attrs OPENSSL_MANGLER(PKCS12_SAFEBAG_get0_attrs)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get0_attrs
#  define _PKCS12_SAFEBAG_get0_attrs OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get0_attrs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get0_bag_obj
#  define PKCS12_SAFEBAG_get0_bag_obj OPENSSL_MANGLER(PKCS12_SAFEBAG_get0_bag_obj)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get0_bag_obj
#  define _PKCS12_SAFEBAG_get0_bag_obj OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get0_bag_obj)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get0_bag_type
#  define PKCS12_SAFEBAG_get0_bag_type OPENSSL_MANGLER(PKCS12_SAFEBAG_get0_bag_type)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get0_bag_type
#  define _PKCS12_SAFEBAG_get0_bag_type OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get0_bag_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get0_p8inf
#  define PKCS12_SAFEBAG_get0_p8inf OPENSSL_MANGLER(PKCS12_SAFEBAG_get0_p8inf)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get0_p8inf
#  define _PKCS12_SAFEBAG_get0_p8inf OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get0_p8inf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get0_pkcs8
#  define PKCS12_SAFEBAG_get0_pkcs8 OPENSSL_MANGLER(PKCS12_SAFEBAG_get0_pkcs8)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get0_pkcs8
#  define _PKCS12_SAFEBAG_get0_pkcs8 OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get0_pkcs8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get0_safes
#  define PKCS12_SAFEBAG_get0_safes OPENSSL_MANGLER(PKCS12_SAFEBAG_get0_safes)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get0_safes
#  define _PKCS12_SAFEBAG_get0_safes OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get0_safes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get0_type
#  define PKCS12_SAFEBAG_get0_type OPENSSL_MANGLER(PKCS12_SAFEBAG_get0_type)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get0_type
#  define _PKCS12_SAFEBAG_get0_type OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get0_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get1_cert
#  define PKCS12_SAFEBAG_get1_cert OPENSSL_MANGLER(PKCS12_SAFEBAG_get1_cert)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get1_cert
#  define _PKCS12_SAFEBAG_get1_cert OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get1_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get1_crl
#  define PKCS12_SAFEBAG_get1_crl OPENSSL_MANGLER(PKCS12_SAFEBAG_get1_crl)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get1_crl
#  define _PKCS12_SAFEBAG_get1_crl OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get1_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get_bag_nid
#  define PKCS12_SAFEBAG_get_bag_nid OPENSSL_MANGLER(PKCS12_SAFEBAG_get_bag_nid)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get_bag_nid
#  define _PKCS12_SAFEBAG_get_bag_nid OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get_bag_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_get_nid
#  define PKCS12_SAFEBAG_get_nid OPENSSL_MANGLER(PKCS12_SAFEBAG_get_nid)
# endif
#else
# ifndef _PKCS12_SAFEBAG_get_nid
#  define _PKCS12_SAFEBAG_get_nid OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_get_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_it
#  define PKCS12_SAFEBAG_it OPENSSL_MANGLER(PKCS12_SAFEBAG_it)
# endif
#else
# ifndef _PKCS12_SAFEBAG_it
#  define _PKCS12_SAFEBAG_it OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_SAFEBAG_new
#  define PKCS12_SAFEBAG_new OPENSSL_MANGLER(PKCS12_SAFEBAG_new)
# endif
#else
# ifndef _PKCS12_SAFEBAG_new
#  define _PKCS12_SAFEBAG_new OPENSSL_MANGLER_ASM(PKCS12_SAFEBAG_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add1_attr_by_NID
#  define PKCS12_add1_attr_by_NID OPENSSL_MANGLER(PKCS12_add1_attr_by_NID)
# endif
#else
# ifndef _PKCS12_add1_attr_by_NID
#  define _PKCS12_add1_attr_by_NID OPENSSL_MANGLER_ASM(PKCS12_add1_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add1_attr_by_txt
#  define PKCS12_add1_attr_by_txt OPENSSL_MANGLER(PKCS12_add1_attr_by_txt)
# endif
#else
# ifndef _PKCS12_add1_attr_by_txt
#  define _PKCS12_add1_attr_by_txt OPENSSL_MANGLER_ASM(PKCS12_add1_attr_by_txt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_CSPName_asc
#  define PKCS12_add_CSPName_asc OPENSSL_MANGLER(PKCS12_add_CSPName_asc)
# endif
#else
# ifndef _PKCS12_add_CSPName_asc
#  define _PKCS12_add_CSPName_asc OPENSSL_MANGLER_ASM(PKCS12_add_CSPName_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_cert
#  define PKCS12_add_cert OPENSSL_MANGLER(PKCS12_add_cert)
# endif
#else
# ifndef _PKCS12_add_cert
#  define _PKCS12_add_cert OPENSSL_MANGLER_ASM(PKCS12_add_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_friendlyname_asc
#  define PKCS12_add_friendlyname_asc OPENSSL_MANGLER(PKCS12_add_friendlyname_asc)
# endif
#else
# ifndef _PKCS12_add_friendlyname_asc
#  define _PKCS12_add_friendlyname_asc OPENSSL_MANGLER_ASM(PKCS12_add_friendlyname_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_friendlyname_uni
#  define PKCS12_add_friendlyname_uni OPENSSL_MANGLER(PKCS12_add_friendlyname_uni)
# endif
#else
# ifndef _PKCS12_add_friendlyname_uni
#  define _PKCS12_add_friendlyname_uni OPENSSL_MANGLER_ASM(PKCS12_add_friendlyname_uni)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_friendlyname_utf8
#  define PKCS12_add_friendlyname_utf8 OPENSSL_MANGLER(PKCS12_add_friendlyname_utf8)
# endif
#else
# ifndef _PKCS12_add_friendlyname_utf8
#  define _PKCS12_add_friendlyname_utf8 OPENSSL_MANGLER_ASM(PKCS12_add_friendlyname_utf8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_key
#  define PKCS12_add_key OPENSSL_MANGLER(PKCS12_add_key)
# endif
#else
# ifndef _PKCS12_add_key
#  define _PKCS12_add_key OPENSSL_MANGLER_ASM(PKCS12_add_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_key_ex
#  define PKCS12_add_key_ex OPENSSL_MANGLER(PKCS12_add_key_ex)
# endif
#else
# ifndef _PKCS12_add_key_ex
#  define _PKCS12_add_key_ex OPENSSL_MANGLER_ASM(PKCS12_add_key_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_localkeyid
#  define PKCS12_add_localkeyid OPENSSL_MANGLER(PKCS12_add_localkeyid)
# endif
#else
# ifndef _PKCS12_add_localkeyid
#  define _PKCS12_add_localkeyid OPENSSL_MANGLER_ASM(PKCS12_add_localkeyid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_safe
#  define PKCS12_add_safe OPENSSL_MANGLER(PKCS12_add_safe)
# endif
#else
# ifndef _PKCS12_add_safe
#  define _PKCS12_add_safe OPENSSL_MANGLER_ASM(PKCS12_add_safe)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_safe_ex
#  define PKCS12_add_safe_ex OPENSSL_MANGLER(PKCS12_add_safe_ex)
# endif
#else
# ifndef _PKCS12_add_safe_ex
#  define _PKCS12_add_safe_ex OPENSSL_MANGLER_ASM(PKCS12_add_safe_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_safes
#  define PKCS12_add_safes OPENSSL_MANGLER(PKCS12_add_safes)
# endif
#else
# ifndef _PKCS12_add_safes
#  define _PKCS12_add_safes OPENSSL_MANGLER_ASM(PKCS12_add_safes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_safes_ex
#  define PKCS12_add_safes_ex OPENSSL_MANGLER(PKCS12_add_safes_ex)
# endif
#else
# ifndef _PKCS12_add_safes_ex
#  define _PKCS12_add_safes_ex OPENSSL_MANGLER_ASM(PKCS12_add_safes_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_add_secret
#  define PKCS12_add_secret OPENSSL_MANGLER(PKCS12_add_secret)
# endif
#else
# ifndef _PKCS12_add_secret
#  define _PKCS12_add_secret OPENSSL_MANGLER_ASM(PKCS12_add_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_create
#  define PKCS12_create OPENSSL_MANGLER(PKCS12_create)
# endif
#else
# ifndef _PKCS12_create
#  define _PKCS12_create OPENSSL_MANGLER_ASM(PKCS12_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_create_ex
#  define PKCS12_create_ex OPENSSL_MANGLER(PKCS12_create_ex)
# endif
#else
# ifndef _PKCS12_create_ex
#  define _PKCS12_create_ex OPENSSL_MANGLER_ASM(PKCS12_create_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_decrypt_skey
#  define PKCS12_decrypt_skey OPENSSL_MANGLER(PKCS12_decrypt_skey)
# endif
#else
# ifndef _PKCS12_decrypt_skey
#  define _PKCS12_decrypt_skey OPENSSL_MANGLER_ASM(PKCS12_decrypt_skey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_decrypt_skey_ex
#  define PKCS12_decrypt_skey_ex OPENSSL_MANGLER(PKCS12_decrypt_skey_ex)
# endif
#else
# ifndef _PKCS12_decrypt_skey_ex
#  define _PKCS12_decrypt_skey_ex OPENSSL_MANGLER_ASM(PKCS12_decrypt_skey_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_free
#  define PKCS12_free OPENSSL_MANGLER(PKCS12_free)
# endif
#else
# ifndef _PKCS12_free
#  define _PKCS12_free OPENSSL_MANGLER_ASM(PKCS12_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_gen_mac
#  define PKCS12_gen_mac OPENSSL_MANGLER(PKCS12_gen_mac)
# endif
#else
# ifndef _PKCS12_gen_mac
#  define _PKCS12_gen_mac OPENSSL_MANGLER_ASM(PKCS12_gen_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_get0_mac
#  define PKCS12_get0_mac OPENSSL_MANGLER(PKCS12_get0_mac)
# endif
#else
# ifndef _PKCS12_get0_mac
#  define _PKCS12_get0_mac OPENSSL_MANGLER_ASM(PKCS12_get0_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_get_attr_gen
#  define PKCS12_get_attr_gen OPENSSL_MANGLER(PKCS12_get_attr_gen)
# endif
#else
# ifndef _PKCS12_get_attr_gen
#  define _PKCS12_get_attr_gen OPENSSL_MANGLER_ASM(PKCS12_get_attr_gen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_get_friendlyname
#  define PKCS12_get_friendlyname OPENSSL_MANGLER(PKCS12_get_friendlyname)
# endif
#else
# ifndef _PKCS12_get_friendlyname
#  define _PKCS12_get_friendlyname OPENSSL_MANGLER_ASM(PKCS12_get_friendlyname)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_init
#  define PKCS12_init OPENSSL_MANGLER(PKCS12_init)
# endif
#else
# ifndef _PKCS12_init
#  define _PKCS12_init OPENSSL_MANGLER_ASM(PKCS12_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_init_ex
#  define PKCS12_init_ex OPENSSL_MANGLER(PKCS12_init_ex)
# endif
#else
# ifndef _PKCS12_init_ex
#  define _PKCS12_init_ex OPENSSL_MANGLER_ASM(PKCS12_init_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_it
#  define PKCS12_it OPENSSL_MANGLER(PKCS12_it)
# endif
#else
# ifndef _PKCS12_it
#  define _PKCS12_it OPENSSL_MANGLER_ASM(PKCS12_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_item_decrypt_d2i
#  define PKCS12_item_decrypt_d2i OPENSSL_MANGLER(PKCS12_item_decrypt_d2i)
# endif
#else
# ifndef _PKCS12_item_decrypt_d2i
#  define _PKCS12_item_decrypt_d2i OPENSSL_MANGLER_ASM(PKCS12_item_decrypt_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_item_decrypt_d2i_ex
#  define PKCS12_item_decrypt_d2i_ex OPENSSL_MANGLER(PKCS12_item_decrypt_d2i_ex)
# endif
#else
# ifndef _PKCS12_item_decrypt_d2i_ex
#  define _PKCS12_item_decrypt_d2i_ex OPENSSL_MANGLER_ASM(PKCS12_item_decrypt_d2i_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_item_i2d_encrypt
#  define PKCS12_item_i2d_encrypt OPENSSL_MANGLER(PKCS12_item_i2d_encrypt)
# endif
#else
# ifndef _PKCS12_item_i2d_encrypt
#  define _PKCS12_item_i2d_encrypt OPENSSL_MANGLER_ASM(PKCS12_item_i2d_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_item_i2d_encrypt_ex
#  define PKCS12_item_i2d_encrypt_ex OPENSSL_MANGLER(PKCS12_item_i2d_encrypt_ex)
# endif
#else
# ifndef _PKCS12_item_i2d_encrypt_ex
#  define _PKCS12_item_i2d_encrypt_ex OPENSSL_MANGLER_ASM(PKCS12_item_i2d_encrypt_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_item_pack_safebag
#  define PKCS12_item_pack_safebag OPENSSL_MANGLER(PKCS12_item_pack_safebag)
# endif
#else
# ifndef _PKCS12_item_pack_safebag
#  define _PKCS12_item_pack_safebag OPENSSL_MANGLER_ASM(PKCS12_item_pack_safebag)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_key_gen_asc
#  define PKCS12_key_gen_asc OPENSSL_MANGLER(PKCS12_key_gen_asc)
# endif
#else
# ifndef _PKCS12_key_gen_asc
#  define _PKCS12_key_gen_asc OPENSSL_MANGLER_ASM(PKCS12_key_gen_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_key_gen_asc_ex
#  define PKCS12_key_gen_asc_ex OPENSSL_MANGLER(PKCS12_key_gen_asc_ex)
# endif
#else
# ifndef _PKCS12_key_gen_asc_ex
#  define _PKCS12_key_gen_asc_ex OPENSSL_MANGLER_ASM(PKCS12_key_gen_asc_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_key_gen_uni
#  define PKCS12_key_gen_uni OPENSSL_MANGLER(PKCS12_key_gen_uni)
# endif
#else
# ifndef _PKCS12_key_gen_uni
#  define _PKCS12_key_gen_uni OPENSSL_MANGLER_ASM(PKCS12_key_gen_uni)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_key_gen_uni_ex
#  define PKCS12_key_gen_uni_ex OPENSSL_MANGLER(PKCS12_key_gen_uni_ex)
# endif
#else
# ifndef _PKCS12_key_gen_uni_ex
#  define _PKCS12_key_gen_uni_ex OPENSSL_MANGLER_ASM(PKCS12_key_gen_uni_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_key_gen_utf8
#  define PKCS12_key_gen_utf8 OPENSSL_MANGLER(PKCS12_key_gen_utf8)
# endif
#else
# ifndef _PKCS12_key_gen_utf8
#  define _PKCS12_key_gen_utf8 OPENSSL_MANGLER_ASM(PKCS12_key_gen_utf8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_key_gen_utf8_ex
#  define PKCS12_key_gen_utf8_ex OPENSSL_MANGLER(PKCS12_key_gen_utf8_ex)
# endif
#else
# ifndef _PKCS12_key_gen_utf8_ex
#  define _PKCS12_key_gen_utf8_ex OPENSSL_MANGLER_ASM(PKCS12_key_gen_utf8_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_mac_present
#  define PKCS12_mac_present OPENSSL_MANGLER(PKCS12_mac_present)
# endif
#else
# ifndef _PKCS12_mac_present
#  define _PKCS12_mac_present OPENSSL_MANGLER_ASM(PKCS12_mac_present)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_new
#  define PKCS12_new OPENSSL_MANGLER(PKCS12_new)
# endif
#else
# ifndef _PKCS12_new
#  define _PKCS12_new OPENSSL_MANGLER_ASM(PKCS12_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_newpass
#  define PKCS12_newpass OPENSSL_MANGLER(PKCS12_newpass)
# endif
#else
# ifndef _PKCS12_newpass
#  define _PKCS12_newpass OPENSSL_MANGLER_ASM(PKCS12_newpass)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_pack_authsafes
#  define PKCS12_pack_authsafes OPENSSL_MANGLER(PKCS12_pack_authsafes)
# endif
#else
# ifndef _PKCS12_pack_authsafes
#  define _PKCS12_pack_authsafes OPENSSL_MANGLER_ASM(PKCS12_pack_authsafes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_pack_p7data
#  define PKCS12_pack_p7data OPENSSL_MANGLER(PKCS12_pack_p7data)
# endif
#else
# ifndef _PKCS12_pack_p7data
#  define _PKCS12_pack_p7data OPENSSL_MANGLER_ASM(PKCS12_pack_p7data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_pack_p7encdata
#  define PKCS12_pack_p7encdata OPENSSL_MANGLER(PKCS12_pack_p7encdata)
# endif
#else
# ifndef _PKCS12_pack_p7encdata
#  define _PKCS12_pack_p7encdata OPENSSL_MANGLER_ASM(PKCS12_pack_p7encdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_pack_p7encdata_ex
#  define PKCS12_pack_p7encdata_ex OPENSSL_MANGLER(PKCS12_pack_p7encdata_ex)
# endif
#else
# ifndef _PKCS12_pack_p7encdata_ex
#  define _PKCS12_pack_p7encdata_ex OPENSSL_MANGLER_ASM(PKCS12_pack_p7encdata_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_parse
#  define PKCS12_parse OPENSSL_MANGLER(PKCS12_parse)
# endif
#else
# ifndef _PKCS12_parse
#  define _PKCS12_parse OPENSSL_MANGLER_ASM(PKCS12_parse)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_pbe_crypt
#  define PKCS12_pbe_crypt OPENSSL_MANGLER(PKCS12_pbe_crypt)
# endif
#else
# ifndef _PKCS12_pbe_crypt
#  define _PKCS12_pbe_crypt OPENSSL_MANGLER_ASM(PKCS12_pbe_crypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_pbe_crypt_ex
#  define PKCS12_pbe_crypt_ex OPENSSL_MANGLER(PKCS12_pbe_crypt_ex)
# endif
#else
# ifndef _PKCS12_pbe_crypt_ex
#  define _PKCS12_pbe_crypt_ex OPENSSL_MANGLER_ASM(PKCS12_pbe_crypt_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_set_mac
#  define PKCS12_set_mac OPENSSL_MANGLER(PKCS12_set_mac)
# endif
#else
# ifndef _PKCS12_set_mac
#  define _PKCS12_set_mac OPENSSL_MANGLER_ASM(PKCS12_set_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_setup_mac
#  define PKCS12_setup_mac OPENSSL_MANGLER(PKCS12_setup_mac)
# endif
#else
# ifndef _PKCS12_setup_mac
#  define _PKCS12_setup_mac OPENSSL_MANGLER_ASM(PKCS12_setup_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_unpack_authsafes
#  define PKCS12_unpack_authsafes OPENSSL_MANGLER(PKCS12_unpack_authsafes)
# endif
#else
# ifndef _PKCS12_unpack_authsafes
#  define _PKCS12_unpack_authsafes OPENSSL_MANGLER_ASM(PKCS12_unpack_authsafes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_unpack_p7data
#  define PKCS12_unpack_p7data OPENSSL_MANGLER(PKCS12_unpack_p7data)
# endif
#else
# ifndef _PKCS12_unpack_p7data
#  define _PKCS12_unpack_p7data OPENSSL_MANGLER_ASM(PKCS12_unpack_p7data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_unpack_p7encdata
#  define PKCS12_unpack_p7encdata OPENSSL_MANGLER(PKCS12_unpack_p7encdata)
# endif
#else
# ifndef _PKCS12_unpack_p7encdata
#  define _PKCS12_unpack_p7encdata OPENSSL_MANGLER_ASM(PKCS12_unpack_p7encdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS12_verify_mac
#  define PKCS12_verify_mac OPENSSL_MANGLER(PKCS12_verify_mac)
# endif
#else
# ifndef _PKCS12_verify_mac
#  define _PKCS12_verify_mac OPENSSL_MANGLER_ASM(PKCS12_verify_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS1_MGF1
#  define PKCS1_MGF1 OPENSSL_MANGLER(PKCS1_MGF1)
# endif
#else
# ifndef _PKCS1_MGF1
#  define _PKCS1_MGF1 OPENSSL_MANGLER_ASM(PKCS1_MGF1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_PBE_add
#  define PKCS5_PBE_add OPENSSL_MANGLER(PKCS5_PBE_add)
# endif
#else
# ifndef _PKCS5_PBE_add
#  define _PKCS5_PBE_add OPENSSL_MANGLER_ASM(PKCS5_PBE_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_PBE_keyivgen
#  define PKCS5_PBE_keyivgen OPENSSL_MANGLER(PKCS5_PBE_keyivgen)
# endif
#else
# ifndef _PKCS5_PBE_keyivgen
#  define _PKCS5_PBE_keyivgen OPENSSL_MANGLER_ASM(PKCS5_PBE_keyivgen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_PBE_keyivgen_ex
#  define PKCS5_PBE_keyivgen_ex OPENSSL_MANGLER(PKCS5_PBE_keyivgen_ex)
# endif
#else
# ifndef _PKCS5_PBE_keyivgen_ex
#  define _PKCS5_PBE_keyivgen_ex OPENSSL_MANGLER_ASM(PKCS5_PBE_keyivgen_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_PBKDF2_HMAC
#  define PKCS5_PBKDF2_HMAC OPENSSL_MANGLER(PKCS5_PBKDF2_HMAC)
# endif
#else
# ifndef _PKCS5_PBKDF2_HMAC
#  define _PKCS5_PBKDF2_HMAC OPENSSL_MANGLER_ASM(PKCS5_PBKDF2_HMAC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_PBKDF2_HMAC_SHA1
#  define PKCS5_PBKDF2_HMAC_SHA1 OPENSSL_MANGLER(PKCS5_PBKDF2_HMAC_SHA1)
# endif
#else
# ifndef _PKCS5_PBKDF2_HMAC_SHA1
#  define _PKCS5_PBKDF2_HMAC_SHA1 OPENSSL_MANGLER_ASM(PKCS5_PBKDF2_HMAC_SHA1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_pbe2_set
#  define PKCS5_pbe2_set OPENSSL_MANGLER(PKCS5_pbe2_set)
# endif
#else
# ifndef _PKCS5_pbe2_set
#  define _PKCS5_pbe2_set OPENSSL_MANGLER_ASM(PKCS5_pbe2_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_pbe2_set_iv
#  define PKCS5_pbe2_set_iv OPENSSL_MANGLER(PKCS5_pbe2_set_iv)
# endif
#else
# ifndef _PKCS5_pbe2_set_iv
#  define _PKCS5_pbe2_set_iv OPENSSL_MANGLER_ASM(PKCS5_pbe2_set_iv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_pbe2_set_iv_ex
#  define PKCS5_pbe2_set_iv_ex OPENSSL_MANGLER(PKCS5_pbe2_set_iv_ex)
# endif
#else
# ifndef _PKCS5_pbe2_set_iv_ex
#  define _PKCS5_pbe2_set_iv_ex OPENSSL_MANGLER_ASM(PKCS5_pbe2_set_iv_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_pbe2_set_scrypt
#  define PKCS5_pbe2_set_scrypt OPENSSL_MANGLER(PKCS5_pbe2_set_scrypt)
# endif
#else
# ifndef _PKCS5_pbe2_set_scrypt
#  define _PKCS5_pbe2_set_scrypt OPENSSL_MANGLER_ASM(PKCS5_pbe2_set_scrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_pbe_set
#  define PKCS5_pbe_set OPENSSL_MANGLER(PKCS5_pbe_set)
# endif
#else
# ifndef _PKCS5_pbe_set
#  define _PKCS5_pbe_set OPENSSL_MANGLER_ASM(PKCS5_pbe_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_pbe_set0_algor
#  define PKCS5_pbe_set0_algor OPENSSL_MANGLER(PKCS5_pbe_set0_algor)
# endif
#else
# ifndef _PKCS5_pbe_set0_algor
#  define _PKCS5_pbe_set0_algor OPENSSL_MANGLER_ASM(PKCS5_pbe_set0_algor)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_pbe_set0_algor_ex
#  define PKCS5_pbe_set0_algor_ex OPENSSL_MANGLER(PKCS5_pbe_set0_algor_ex)
# endif
#else
# ifndef _PKCS5_pbe_set0_algor_ex
#  define _PKCS5_pbe_set0_algor_ex OPENSSL_MANGLER_ASM(PKCS5_pbe_set0_algor_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_pbe_set_ex
#  define PKCS5_pbe_set_ex OPENSSL_MANGLER(PKCS5_pbe_set_ex)
# endif
#else
# ifndef _PKCS5_pbe_set_ex
#  define _PKCS5_pbe_set_ex OPENSSL_MANGLER_ASM(PKCS5_pbe_set_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_pbkdf2_set
#  define PKCS5_pbkdf2_set OPENSSL_MANGLER(PKCS5_pbkdf2_set)
# endif
#else
# ifndef _PKCS5_pbkdf2_set
#  define _PKCS5_pbkdf2_set OPENSSL_MANGLER_ASM(PKCS5_pbkdf2_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_pbkdf2_set_ex
#  define PKCS5_pbkdf2_set_ex OPENSSL_MANGLER(PKCS5_pbkdf2_set_ex)
# endif
#else
# ifndef _PKCS5_pbkdf2_set_ex
#  define _PKCS5_pbkdf2_set_ex OPENSSL_MANGLER_ASM(PKCS5_pbkdf2_set_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_v2_PBE_keyivgen
#  define PKCS5_v2_PBE_keyivgen OPENSSL_MANGLER(PKCS5_v2_PBE_keyivgen)
# endif
#else
# ifndef _PKCS5_v2_PBE_keyivgen
#  define _PKCS5_v2_PBE_keyivgen OPENSSL_MANGLER_ASM(PKCS5_v2_PBE_keyivgen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_v2_PBE_keyivgen_ex
#  define PKCS5_v2_PBE_keyivgen_ex OPENSSL_MANGLER(PKCS5_v2_PBE_keyivgen_ex)
# endif
#else
# ifndef _PKCS5_v2_PBE_keyivgen_ex
#  define _PKCS5_v2_PBE_keyivgen_ex OPENSSL_MANGLER_ASM(PKCS5_v2_PBE_keyivgen_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_v2_PBKDF2_keyivgen
#  define PKCS5_v2_PBKDF2_keyivgen OPENSSL_MANGLER(PKCS5_v2_PBKDF2_keyivgen)
# endif
#else
# ifndef _PKCS5_v2_PBKDF2_keyivgen
#  define _PKCS5_v2_PBKDF2_keyivgen OPENSSL_MANGLER_ASM(PKCS5_v2_PBKDF2_keyivgen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_v2_PBKDF2_keyivgen_ex
#  define PKCS5_v2_PBKDF2_keyivgen_ex OPENSSL_MANGLER(PKCS5_v2_PBKDF2_keyivgen_ex)
# endif
#else
# ifndef _PKCS5_v2_PBKDF2_keyivgen_ex
#  define _PKCS5_v2_PBKDF2_keyivgen_ex OPENSSL_MANGLER_ASM(PKCS5_v2_PBKDF2_keyivgen_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_v2_scrypt_keyivgen
#  define PKCS5_v2_scrypt_keyivgen OPENSSL_MANGLER(PKCS5_v2_scrypt_keyivgen)
# endif
#else
# ifndef _PKCS5_v2_scrypt_keyivgen
#  define _PKCS5_v2_scrypt_keyivgen OPENSSL_MANGLER_ASM(PKCS5_v2_scrypt_keyivgen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS5_v2_scrypt_keyivgen_ex
#  define PKCS5_v2_scrypt_keyivgen_ex OPENSSL_MANGLER(PKCS5_v2_scrypt_keyivgen_ex)
# endif
#else
# ifndef _PKCS5_v2_scrypt_keyivgen_ex
#  define _PKCS5_v2_scrypt_keyivgen_ex OPENSSL_MANGLER_ASM(PKCS5_v2_scrypt_keyivgen_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ATTR_SIGN_it
#  define PKCS7_ATTR_SIGN_it OPENSSL_MANGLER(PKCS7_ATTR_SIGN_it)
# endif
#else
# ifndef _PKCS7_ATTR_SIGN_it
#  define _PKCS7_ATTR_SIGN_it OPENSSL_MANGLER_ASM(PKCS7_ATTR_SIGN_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ATTR_VERIFY_it
#  define PKCS7_ATTR_VERIFY_it OPENSSL_MANGLER(PKCS7_ATTR_VERIFY_it)
# endif
#else
# ifndef _PKCS7_ATTR_VERIFY_it
#  define _PKCS7_ATTR_VERIFY_it OPENSSL_MANGLER_ASM(PKCS7_ATTR_VERIFY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_DIGEST_free
#  define PKCS7_DIGEST_free OPENSSL_MANGLER(PKCS7_DIGEST_free)
# endif
#else
# ifndef _PKCS7_DIGEST_free
#  define _PKCS7_DIGEST_free OPENSSL_MANGLER_ASM(PKCS7_DIGEST_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_DIGEST_it
#  define PKCS7_DIGEST_it OPENSSL_MANGLER(PKCS7_DIGEST_it)
# endif
#else
# ifndef _PKCS7_DIGEST_it
#  define _PKCS7_DIGEST_it OPENSSL_MANGLER_ASM(PKCS7_DIGEST_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_DIGEST_new
#  define PKCS7_DIGEST_new OPENSSL_MANGLER(PKCS7_DIGEST_new)
# endif
#else
# ifndef _PKCS7_DIGEST_new
#  define _PKCS7_DIGEST_new OPENSSL_MANGLER_ASM(PKCS7_DIGEST_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ENCRYPT_free
#  define PKCS7_ENCRYPT_free OPENSSL_MANGLER(PKCS7_ENCRYPT_free)
# endif
#else
# ifndef _PKCS7_ENCRYPT_free
#  define _PKCS7_ENCRYPT_free OPENSSL_MANGLER_ASM(PKCS7_ENCRYPT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ENCRYPT_it
#  define PKCS7_ENCRYPT_it OPENSSL_MANGLER(PKCS7_ENCRYPT_it)
# endif
#else
# ifndef _PKCS7_ENCRYPT_it
#  define _PKCS7_ENCRYPT_it OPENSSL_MANGLER_ASM(PKCS7_ENCRYPT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ENCRYPT_new
#  define PKCS7_ENCRYPT_new OPENSSL_MANGLER(PKCS7_ENCRYPT_new)
# endif
#else
# ifndef _PKCS7_ENCRYPT_new
#  define _PKCS7_ENCRYPT_new OPENSSL_MANGLER_ASM(PKCS7_ENCRYPT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ENC_CONTENT_free
#  define PKCS7_ENC_CONTENT_free OPENSSL_MANGLER(PKCS7_ENC_CONTENT_free)
# endif
#else
# ifndef _PKCS7_ENC_CONTENT_free
#  define _PKCS7_ENC_CONTENT_free OPENSSL_MANGLER_ASM(PKCS7_ENC_CONTENT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ENC_CONTENT_it
#  define PKCS7_ENC_CONTENT_it OPENSSL_MANGLER(PKCS7_ENC_CONTENT_it)
# endif
#else
# ifndef _PKCS7_ENC_CONTENT_it
#  define _PKCS7_ENC_CONTENT_it OPENSSL_MANGLER_ASM(PKCS7_ENC_CONTENT_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ENC_CONTENT_new
#  define PKCS7_ENC_CONTENT_new OPENSSL_MANGLER(PKCS7_ENC_CONTENT_new)
# endif
#else
# ifndef _PKCS7_ENC_CONTENT_new
#  define _PKCS7_ENC_CONTENT_new OPENSSL_MANGLER_ASM(PKCS7_ENC_CONTENT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ENVELOPE_free
#  define PKCS7_ENVELOPE_free OPENSSL_MANGLER(PKCS7_ENVELOPE_free)
# endif
#else
# ifndef _PKCS7_ENVELOPE_free
#  define _PKCS7_ENVELOPE_free OPENSSL_MANGLER_ASM(PKCS7_ENVELOPE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ENVELOPE_it
#  define PKCS7_ENVELOPE_it OPENSSL_MANGLER(PKCS7_ENVELOPE_it)
# endif
#else
# ifndef _PKCS7_ENVELOPE_it
#  define _PKCS7_ENVELOPE_it OPENSSL_MANGLER_ASM(PKCS7_ENVELOPE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ENVELOPE_new
#  define PKCS7_ENVELOPE_new OPENSSL_MANGLER(PKCS7_ENVELOPE_new)
# endif
#else
# ifndef _PKCS7_ENVELOPE_new
#  define _PKCS7_ENVELOPE_new OPENSSL_MANGLER_ASM(PKCS7_ENVELOPE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ISSUER_AND_SERIAL_digest
#  define PKCS7_ISSUER_AND_SERIAL_digest OPENSSL_MANGLER(PKCS7_ISSUER_AND_SERIAL_digest)
# endif
#else
# ifndef _PKCS7_ISSUER_AND_SERIAL_digest
#  define _PKCS7_ISSUER_AND_SERIAL_digest OPENSSL_MANGLER_ASM(PKCS7_ISSUER_AND_SERIAL_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ISSUER_AND_SERIAL_free
#  define PKCS7_ISSUER_AND_SERIAL_free OPENSSL_MANGLER(PKCS7_ISSUER_AND_SERIAL_free)
# endif
#else
# ifndef _PKCS7_ISSUER_AND_SERIAL_free
#  define _PKCS7_ISSUER_AND_SERIAL_free OPENSSL_MANGLER_ASM(PKCS7_ISSUER_AND_SERIAL_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ISSUER_AND_SERIAL_it
#  define PKCS7_ISSUER_AND_SERIAL_it OPENSSL_MANGLER(PKCS7_ISSUER_AND_SERIAL_it)
# endif
#else
# ifndef _PKCS7_ISSUER_AND_SERIAL_it
#  define _PKCS7_ISSUER_AND_SERIAL_it OPENSSL_MANGLER_ASM(PKCS7_ISSUER_AND_SERIAL_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ISSUER_AND_SERIAL_new
#  define PKCS7_ISSUER_AND_SERIAL_new OPENSSL_MANGLER(PKCS7_ISSUER_AND_SERIAL_new)
# endif
#else
# ifndef _PKCS7_ISSUER_AND_SERIAL_new
#  define _PKCS7_ISSUER_AND_SERIAL_new OPENSSL_MANGLER_ASM(PKCS7_ISSUER_AND_SERIAL_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_RECIP_INFO_free
#  define PKCS7_RECIP_INFO_free OPENSSL_MANGLER(PKCS7_RECIP_INFO_free)
# endif
#else
# ifndef _PKCS7_RECIP_INFO_free
#  define _PKCS7_RECIP_INFO_free OPENSSL_MANGLER_ASM(PKCS7_RECIP_INFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_RECIP_INFO_get0_alg
#  define PKCS7_RECIP_INFO_get0_alg OPENSSL_MANGLER(PKCS7_RECIP_INFO_get0_alg)
# endif
#else
# ifndef _PKCS7_RECIP_INFO_get0_alg
#  define _PKCS7_RECIP_INFO_get0_alg OPENSSL_MANGLER_ASM(PKCS7_RECIP_INFO_get0_alg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_RECIP_INFO_it
#  define PKCS7_RECIP_INFO_it OPENSSL_MANGLER(PKCS7_RECIP_INFO_it)
# endif
#else
# ifndef _PKCS7_RECIP_INFO_it
#  define _PKCS7_RECIP_INFO_it OPENSSL_MANGLER_ASM(PKCS7_RECIP_INFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_RECIP_INFO_new
#  define PKCS7_RECIP_INFO_new OPENSSL_MANGLER(PKCS7_RECIP_INFO_new)
# endif
#else
# ifndef _PKCS7_RECIP_INFO_new
#  define _PKCS7_RECIP_INFO_new OPENSSL_MANGLER_ASM(PKCS7_RECIP_INFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_RECIP_INFO_set
#  define PKCS7_RECIP_INFO_set OPENSSL_MANGLER(PKCS7_RECIP_INFO_set)
# endif
#else
# ifndef _PKCS7_RECIP_INFO_set
#  define _PKCS7_RECIP_INFO_set OPENSSL_MANGLER_ASM(PKCS7_RECIP_INFO_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGNED_free
#  define PKCS7_SIGNED_free OPENSSL_MANGLER(PKCS7_SIGNED_free)
# endif
#else
# ifndef _PKCS7_SIGNED_free
#  define _PKCS7_SIGNED_free OPENSSL_MANGLER_ASM(PKCS7_SIGNED_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGNED_it
#  define PKCS7_SIGNED_it OPENSSL_MANGLER(PKCS7_SIGNED_it)
# endif
#else
# ifndef _PKCS7_SIGNED_it
#  define _PKCS7_SIGNED_it OPENSSL_MANGLER_ASM(PKCS7_SIGNED_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGNED_new
#  define PKCS7_SIGNED_new OPENSSL_MANGLER(PKCS7_SIGNED_new)
# endif
#else
# ifndef _PKCS7_SIGNED_new
#  define _PKCS7_SIGNED_new OPENSSL_MANGLER_ASM(PKCS7_SIGNED_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGNER_INFO_free
#  define PKCS7_SIGNER_INFO_free OPENSSL_MANGLER(PKCS7_SIGNER_INFO_free)
# endif
#else
# ifndef _PKCS7_SIGNER_INFO_free
#  define _PKCS7_SIGNER_INFO_free OPENSSL_MANGLER_ASM(PKCS7_SIGNER_INFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGNER_INFO_get0_algs
#  define PKCS7_SIGNER_INFO_get0_algs OPENSSL_MANGLER(PKCS7_SIGNER_INFO_get0_algs)
# endif
#else
# ifndef _PKCS7_SIGNER_INFO_get0_algs
#  define _PKCS7_SIGNER_INFO_get0_algs OPENSSL_MANGLER_ASM(PKCS7_SIGNER_INFO_get0_algs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGNER_INFO_it
#  define PKCS7_SIGNER_INFO_it OPENSSL_MANGLER(PKCS7_SIGNER_INFO_it)
# endif
#else
# ifndef _PKCS7_SIGNER_INFO_it
#  define _PKCS7_SIGNER_INFO_it OPENSSL_MANGLER_ASM(PKCS7_SIGNER_INFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGNER_INFO_new
#  define PKCS7_SIGNER_INFO_new OPENSSL_MANGLER(PKCS7_SIGNER_INFO_new)
# endif
#else
# ifndef _PKCS7_SIGNER_INFO_new
#  define _PKCS7_SIGNER_INFO_new OPENSSL_MANGLER_ASM(PKCS7_SIGNER_INFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGNER_INFO_set
#  define PKCS7_SIGNER_INFO_set OPENSSL_MANGLER(PKCS7_SIGNER_INFO_set)
# endif
#else
# ifndef _PKCS7_SIGNER_INFO_set
#  define _PKCS7_SIGNER_INFO_set OPENSSL_MANGLER_ASM(PKCS7_SIGNER_INFO_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGNER_INFO_sign
#  define PKCS7_SIGNER_INFO_sign OPENSSL_MANGLER(PKCS7_SIGNER_INFO_sign)
# endif
#else
# ifndef _PKCS7_SIGNER_INFO_sign
#  define _PKCS7_SIGNER_INFO_sign OPENSSL_MANGLER_ASM(PKCS7_SIGNER_INFO_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGN_ENVELOPE_free
#  define PKCS7_SIGN_ENVELOPE_free OPENSSL_MANGLER(PKCS7_SIGN_ENVELOPE_free)
# endif
#else
# ifndef _PKCS7_SIGN_ENVELOPE_free
#  define _PKCS7_SIGN_ENVELOPE_free OPENSSL_MANGLER_ASM(PKCS7_SIGN_ENVELOPE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGN_ENVELOPE_it
#  define PKCS7_SIGN_ENVELOPE_it OPENSSL_MANGLER(PKCS7_SIGN_ENVELOPE_it)
# endif
#else
# ifndef _PKCS7_SIGN_ENVELOPE_it
#  define _PKCS7_SIGN_ENVELOPE_it OPENSSL_MANGLER_ASM(PKCS7_SIGN_ENVELOPE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_SIGN_ENVELOPE_new
#  define PKCS7_SIGN_ENVELOPE_new OPENSSL_MANGLER(PKCS7_SIGN_ENVELOPE_new)
# endif
#else
# ifndef _PKCS7_SIGN_ENVELOPE_new
#  define _PKCS7_SIGN_ENVELOPE_new OPENSSL_MANGLER_ASM(PKCS7_SIGN_ENVELOPE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add0_attrib_signing_time
#  define PKCS7_add0_attrib_signing_time OPENSSL_MANGLER(PKCS7_add0_attrib_signing_time)
# endif
#else
# ifndef _PKCS7_add0_attrib_signing_time
#  define _PKCS7_add0_attrib_signing_time OPENSSL_MANGLER_ASM(PKCS7_add0_attrib_signing_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add1_attrib_digest
#  define PKCS7_add1_attrib_digest OPENSSL_MANGLER(PKCS7_add1_attrib_digest)
# endif
#else
# ifndef _PKCS7_add1_attrib_digest
#  define _PKCS7_add1_attrib_digest OPENSSL_MANGLER_ASM(PKCS7_add1_attrib_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add_attrib_content_type
#  define PKCS7_add_attrib_content_type OPENSSL_MANGLER(PKCS7_add_attrib_content_type)
# endif
#else
# ifndef _PKCS7_add_attrib_content_type
#  define _PKCS7_add_attrib_content_type OPENSSL_MANGLER_ASM(PKCS7_add_attrib_content_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add_attrib_smimecap
#  define PKCS7_add_attrib_smimecap OPENSSL_MANGLER(PKCS7_add_attrib_smimecap)
# endif
#else
# ifndef _PKCS7_add_attrib_smimecap
#  define _PKCS7_add_attrib_smimecap OPENSSL_MANGLER_ASM(PKCS7_add_attrib_smimecap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add_attribute
#  define PKCS7_add_attribute OPENSSL_MANGLER(PKCS7_add_attribute)
# endif
#else
# ifndef _PKCS7_add_attribute
#  define _PKCS7_add_attribute OPENSSL_MANGLER_ASM(PKCS7_add_attribute)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add_certificate
#  define PKCS7_add_certificate OPENSSL_MANGLER(PKCS7_add_certificate)
# endif
#else
# ifndef _PKCS7_add_certificate
#  define _PKCS7_add_certificate OPENSSL_MANGLER_ASM(PKCS7_add_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add_crl
#  define PKCS7_add_crl OPENSSL_MANGLER(PKCS7_add_crl)
# endif
#else
# ifndef _PKCS7_add_crl
#  define _PKCS7_add_crl OPENSSL_MANGLER_ASM(PKCS7_add_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add_recipient
#  define PKCS7_add_recipient OPENSSL_MANGLER(PKCS7_add_recipient)
# endif
#else
# ifndef _PKCS7_add_recipient
#  define _PKCS7_add_recipient OPENSSL_MANGLER_ASM(PKCS7_add_recipient)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add_recipient_info
#  define PKCS7_add_recipient_info OPENSSL_MANGLER(PKCS7_add_recipient_info)
# endif
#else
# ifndef _PKCS7_add_recipient_info
#  define _PKCS7_add_recipient_info OPENSSL_MANGLER_ASM(PKCS7_add_recipient_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add_signature
#  define PKCS7_add_signature OPENSSL_MANGLER(PKCS7_add_signature)
# endif
#else
# ifndef _PKCS7_add_signature
#  define _PKCS7_add_signature OPENSSL_MANGLER_ASM(PKCS7_add_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add_signed_attribute
#  define PKCS7_add_signed_attribute OPENSSL_MANGLER(PKCS7_add_signed_attribute)
# endif
#else
# ifndef _PKCS7_add_signed_attribute
#  define _PKCS7_add_signed_attribute OPENSSL_MANGLER_ASM(PKCS7_add_signed_attribute)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_add_signer
#  define PKCS7_add_signer OPENSSL_MANGLER(PKCS7_add_signer)
# endif
#else
# ifndef _PKCS7_add_signer
#  define _PKCS7_add_signer OPENSSL_MANGLER_ASM(PKCS7_add_signer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_cert_from_signer_info
#  define PKCS7_cert_from_signer_info OPENSSL_MANGLER(PKCS7_cert_from_signer_info)
# endif
#else
# ifndef _PKCS7_cert_from_signer_info
#  define _PKCS7_cert_from_signer_info OPENSSL_MANGLER_ASM(PKCS7_cert_from_signer_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_content_new
#  define PKCS7_content_new OPENSSL_MANGLER(PKCS7_content_new)
# endif
#else
# ifndef _PKCS7_content_new
#  define _PKCS7_content_new OPENSSL_MANGLER_ASM(PKCS7_content_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_ctrl
#  define PKCS7_ctrl OPENSSL_MANGLER(PKCS7_ctrl)
# endif
#else
# ifndef _PKCS7_ctrl
#  define _PKCS7_ctrl OPENSSL_MANGLER_ASM(PKCS7_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_dataDecode
#  define PKCS7_dataDecode OPENSSL_MANGLER(PKCS7_dataDecode)
# endif
#else
# ifndef _PKCS7_dataDecode
#  define _PKCS7_dataDecode OPENSSL_MANGLER_ASM(PKCS7_dataDecode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_dataFinal
#  define PKCS7_dataFinal OPENSSL_MANGLER(PKCS7_dataFinal)
# endif
#else
# ifndef _PKCS7_dataFinal
#  define _PKCS7_dataFinal OPENSSL_MANGLER_ASM(PKCS7_dataFinal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_dataInit
#  define PKCS7_dataInit OPENSSL_MANGLER(PKCS7_dataInit)
# endif
#else
# ifndef _PKCS7_dataInit
#  define _PKCS7_dataInit OPENSSL_MANGLER_ASM(PKCS7_dataInit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_dataVerify
#  define PKCS7_dataVerify OPENSSL_MANGLER(PKCS7_dataVerify)
# endif
#else
# ifndef _PKCS7_dataVerify
#  define _PKCS7_dataVerify OPENSSL_MANGLER_ASM(PKCS7_dataVerify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_decrypt
#  define PKCS7_decrypt OPENSSL_MANGLER(PKCS7_decrypt)
# endif
#else
# ifndef _PKCS7_decrypt
#  define _PKCS7_decrypt OPENSSL_MANGLER_ASM(PKCS7_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_digest_from_attributes
#  define PKCS7_digest_from_attributes OPENSSL_MANGLER(PKCS7_digest_from_attributes)
# endif
#else
# ifndef _PKCS7_digest_from_attributes
#  define _PKCS7_digest_from_attributes OPENSSL_MANGLER_ASM(PKCS7_digest_from_attributes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_dup
#  define PKCS7_dup OPENSSL_MANGLER(PKCS7_dup)
# endif
#else
# ifndef _PKCS7_dup
#  define _PKCS7_dup OPENSSL_MANGLER_ASM(PKCS7_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_encrypt
#  define PKCS7_encrypt OPENSSL_MANGLER(PKCS7_encrypt)
# endif
#else
# ifndef _PKCS7_encrypt
#  define _PKCS7_encrypt OPENSSL_MANGLER_ASM(PKCS7_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_encrypt_ex
#  define PKCS7_encrypt_ex OPENSSL_MANGLER(PKCS7_encrypt_ex)
# endif
#else
# ifndef _PKCS7_encrypt_ex
#  define _PKCS7_encrypt_ex OPENSSL_MANGLER_ASM(PKCS7_encrypt_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_final
#  define PKCS7_final OPENSSL_MANGLER(PKCS7_final)
# endif
#else
# ifndef _PKCS7_final
#  define _PKCS7_final OPENSSL_MANGLER_ASM(PKCS7_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_free
#  define PKCS7_free OPENSSL_MANGLER(PKCS7_free)
# endif
#else
# ifndef _PKCS7_free
#  define _PKCS7_free OPENSSL_MANGLER_ASM(PKCS7_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_get0_signers
#  define PKCS7_get0_signers OPENSSL_MANGLER(PKCS7_get0_signers)
# endif
#else
# ifndef _PKCS7_get0_signers
#  define _PKCS7_get0_signers OPENSSL_MANGLER_ASM(PKCS7_get0_signers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_get_attribute
#  define PKCS7_get_attribute OPENSSL_MANGLER(PKCS7_get_attribute)
# endif
#else
# ifndef _PKCS7_get_attribute
#  define _PKCS7_get_attribute OPENSSL_MANGLER_ASM(PKCS7_get_attribute)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_get_issuer_and_serial
#  define PKCS7_get_issuer_and_serial OPENSSL_MANGLER(PKCS7_get_issuer_and_serial)
# endif
#else
# ifndef _PKCS7_get_issuer_and_serial
#  define _PKCS7_get_issuer_and_serial OPENSSL_MANGLER_ASM(PKCS7_get_issuer_and_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_get_octet_string
#  define PKCS7_get_octet_string OPENSSL_MANGLER(PKCS7_get_octet_string)
# endif
#else
# ifndef _PKCS7_get_octet_string
#  define _PKCS7_get_octet_string OPENSSL_MANGLER_ASM(PKCS7_get_octet_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_get_signed_attribute
#  define PKCS7_get_signed_attribute OPENSSL_MANGLER(PKCS7_get_signed_attribute)
# endif
#else
# ifndef _PKCS7_get_signed_attribute
#  define _PKCS7_get_signed_attribute OPENSSL_MANGLER_ASM(PKCS7_get_signed_attribute)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_get_signer_info
#  define PKCS7_get_signer_info OPENSSL_MANGLER(PKCS7_get_signer_info)
# endif
#else
# ifndef _PKCS7_get_signer_info
#  define _PKCS7_get_signer_info OPENSSL_MANGLER_ASM(PKCS7_get_signer_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_get_smimecap
#  define PKCS7_get_smimecap OPENSSL_MANGLER(PKCS7_get_smimecap)
# endif
#else
# ifndef _PKCS7_get_smimecap
#  define _PKCS7_get_smimecap OPENSSL_MANGLER_ASM(PKCS7_get_smimecap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_it
#  define PKCS7_it OPENSSL_MANGLER(PKCS7_it)
# endif
#else
# ifndef _PKCS7_it
#  define _PKCS7_it OPENSSL_MANGLER_ASM(PKCS7_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_new
#  define PKCS7_new OPENSSL_MANGLER(PKCS7_new)
# endif
#else
# ifndef _PKCS7_new
#  define _PKCS7_new OPENSSL_MANGLER_ASM(PKCS7_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_new_ex
#  define PKCS7_new_ex OPENSSL_MANGLER(PKCS7_new_ex)
# endif
#else
# ifndef _PKCS7_new_ex
#  define _PKCS7_new_ex OPENSSL_MANGLER_ASM(PKCS7_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_print_ctx
#  define PKCS7_print_ctx OPENSSL_MANGLER(PKCS7_print_ctx)
# endif
#else
# ifndef _PKCS7_print_ctx
#  define _PKCS7_print_ctx OPENSSL_MANGLER_ASM(PKCS7_print_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_set0_type_other
#  define PKCS7_set0_type_other OPENSSL_MANGLER(PKCS7_set0_type_other)
# endif
#else
# ifndef _PKCS7_set0_type_other
#  define _PKCS7_set0_type_other OPENSSL_MANGLER_ASM(PKCS7_set0_type_other)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_set_attributes
#  define PKCS7_set_attributes OPENSSL_MANGLER(PKCS7_set_attributes)
# endif
#else
# ifndef _PKCS7_set_attributes
#  define _PKCS7_set_attributes OPENSSL_MANGLER_ASM(PKCS7_set_attributes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_set_cipher
#  define PKCS7_set_cipher OPENSSL_MANGLER(PKCS7_set_cipher)
# endif
#else
# ifndef _PKCS7_set_cipher
#  define _PKCS7_set_cipher OPENSSL_MANGLER_ASM(PKCS7_set_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_set_content
#  define PKCS7_set_content OPENSSL_MANGLER(PKCS7_set_content)
# endif
#else
# ifndef _PKCS7_set_content
#  define _PKCS7_set_content OPENSSL_MANGLER_ASM(PKCS7_set_content)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_set_digest
#  define PKCS7_set_digest OPENSSL_MANGLER(PKCS7_set_digest)
# endif
#else
# ifndef _PKCS7_set_digest
#  define _PKCS7_set_digest OPENSSL_MANGLER_ASM(PKCS7_set_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_set_signed_attributes
#  define PKCS7_set_signed_attributes OPENSSL_MANGLER(PKCS7_set_signed_attributes)
# endif
#else
# ifndef _PKCS7_set_signed_attributes
#  define _PKCS7_set_signed_attributes OPENSSL_MANGLER_ASM(PKCS7_set_signed_attributes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_set_type
#  define PKCS7_set_type OPENSSL_MANGLER(PKCS7_set_type)
# endif
#else
# ifndef _PKCS7_set_type
#  define _PKCS7_set_type OPENSSL_MANGLER_ASM(PKCS7_set_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_sign
#  define PKCS7_sign OPENSSL_MANGLER(PKCS7_sign)
# endif
#else
# ifndef _PKCS7_sign
#  define _PKCS7_sign OPENSSL_MANGLER_ASM(PKCS7_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_sign_add_signer
#  define PKCS7_sign_add_signer OPENSSL_MANGLER(PKCS7_sign_add_signer)
# endif
#else
# ifndef _PKCS7_sign_add_signer
#  define _PKCS7_sign_add_signer OPENSSL_MANGLER_ASM(PKCS7_sign_add_signer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_sign_ex
#  define PKCS7_sign_ex OPENSSL_MANGLER(PKCS7_sign_ex)
# endif
#else
# ifndef _PKCS7_sign_ex
#  define _PKCS7_sign_ex OPENSSL_MANGLER_ASM(PKCS7_sign_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_signatureVerify
#  define PKCS7_signatureVerify OPENSSL_MANGLER(PKCS7_signatureVerify)
# endif
#else
# ifndef _PKCS7_signatureVerify
#  define _PKCS7_signatureVerify OPENSSL_MANGLER_ASM(PKCS7_signatureVerify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_simple_smimecap
#  define PKCS7_simple_smimecap OPENSSL_MANGLER(PKCS7_simple_smimecap)
# endif
#else
# ifndef _PKCS7_simple_smimecap
#  define _PKCS7_simple_smimecap OPENSSL_MANGLER_ASM(PKCS7_simple_smimecap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_stream
#  define PKCS7_stream OPENSSL_MANGLER(PKCS7_stream)
# endif
#else
# ifndef _PKCS7_stream
#  define _PKCS7_stream OPENSSL_MANGLER_ASM(PKCS7_stream)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_to_TS_TST_INFO
#  define PKCS7_to_TS_TST_INFO OPENSSL_MANGLER(PKCS7_to_TS_TST_INFO)
# endif
#else
# ifndef _PKCS7_to_TS_TST_INFO
#  define _PKCS7_to_TS_TST_INFO OPENSSL_MANGLER_ASM(PKCS7_to_TS_TST_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_type_is_other
#  define PKCS7_type_is_other OPENSSL_MANGLER(PKCS7_type_is_other)
# endif
#else
# ifndef _PKCS7_type_is_other
#  define _PKCS7_type_is_other OPENSSL_MANGLER_ASM(PKCS7_type_is_other)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS7_verify
#  define PKCS7_verify OPENSSL_MANGLER(PKCS7_verify)
# endif
#else
# ifndef _PKCS7_verify
#  define _PKCS7_verify OPENSSL_MANGLER_ASM(PKCS7_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_PRIV_KEY_INFO_free
#  define PKCS8_PRIV_KEY_INFO_free OPENSSL_MANGLER(PKCS8_PRIV_KEY_INFO_free)
# endif
#else
# ifndef _PKCS8_PRIV_KEY_INFO_free
#  define _PKCS8_PRIV_KEY_INFO_free OPENSSL_MANGLER_ASM(PKCS8_PRIV_KEY_INFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_PRIV_KEY_INFO_it
#  define PKCS8_PRIV_KEY_INFO_it OPENSSL_MANGLER(PKCS8_PRIV_KEY_INFO_it)
# endif
#else
# ifndef _PKCS8_PRIV_KEY_INFO_it
#  define _PKCS8_PRIV_KEY_INFO_it OPENSSL_MANGLER_ASM(PKCS8_PRIV_KEY_INFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_PRIV_KEY_INFO_new
#  define PKCS8_PRIV_KEY_INFO_new OPENSSL_MANGLER(PKCS8_PRIV_KEY_INFO_new)
# endif
#else
# ifndef _PKCS8_PRIV_KEY_INFO_new
#  define _PKCS8_PRIV_KEY_INFO_new OPENSSL_MANGLER_ASM(PKCS8_PRIV_KEY_INFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_add_keyusage
#  define PKCS8_add_keyusage OPENSSL_MANGLER(PKCS8_add_keyusage)
# endif
#else
# ifndef _PKCS8_add_keyusage
#  define _PKCS8_add_keyusage OPENSSL_MANGLER_ASM(PKCS8_add_keyusage)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_decrypt
#  define PKCS8_decrypt OPENSSL_MANGLER(PKCS8_decrypt)
# endif
#else
# ifndef _PKCS8_decrypt
#  define _PKCS8_decrypt OPENSSL_MANGLER_ASM(PKCS8_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_decrypt_ex
#  define PKCS8_decrypt_ex OPENSSL_MANGLER(PKCS8_decrypt_ex)
# endif
#else
# ifndef _PKCS8_decrypt_ex
#  define _PKCS8_decrypt_ex OPENSSL_MANGLER_ASM(PKCS8_decrypt_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_encrypt
#  define PKCS8_encrypt OPENSSL_MANGLER(PKCS8_encrypt)
# endif
#else
# ifndef _PKCS8_encrypt
#  define _PKCS8_encrypt OPENSSL_MANGLER_ASM(PKCS8_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_encrypt_ex
#  define PKCS8_encrypt_ex OPENSSL_MANGLER(PKCS8_encrypt_ex)
# endif
#else
# ifndef _PKCS8_encrypt_ex
#  define _PKCS8_encrypt_ex OPENSSL_MANGLER_ASM(PKCS8_encrypt_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_get_attr
#  define PKCS8_get_attr OPENSSL_MANGLER(PKCS8_get_attr)
# endif
#else
# ifndef _PKCS8_get_attr
#  define _PKCS8_get_attr OPENSSL_MANGLER_ASM(PKCS8_get_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_pkey_add1_attr
#  define PKCS8_pkey_add1_attr OPENSSL_MANGLER(PKCS8_pkey_add1_attr)
# endif
#else
# ifndef _PKCS8_pkey_add1_attr
#  define _PKCS8_pkey_add1_attr OPENSSL_MANGLER_ASM(PKCS8_pkey_add1_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_pkey_add1_attr_by_NID
#  define PKCS8_pkey_add1_attr_by_NID OPENSSL_MANGLER(PKCS8_pkey_add1_attr_by_NID)
# endif
#else
# ifndef _PKCS8_pkey_add1_attr_by_NID
#  define _PKCS8_pkey_add1_attr_by_NID OPENSSL_MANGLER_ASM(PKCS8_pkey_add1_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_pkey_add1_attr_by_OBJ
#  define PKCS8_pkey_add1_attr_by_OBJ OPENSSL_MANGLER(PKCS8_pkey_add1_attr_by_OBJ)
# endif
#else
# ifndef _PKCS8_pkey_add1_attr_by_OBJ
#  define _PKCS8_pkey_add1_attr_by_OBJ OPENSSL_MANGLER_ASM(PKCS8_pkey_add1_attr_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_pkey_get0
#  define PKCS8_pkey_get0 OPENSSL_MANGLER(PKCS8_pkey_get0)
# endif
#else
# ifndef _PKCS8_pkey_get0
#  define _PKCS8_pkey_get0 OPENSSL_MANGLER_ASM(PKCS8_pkey_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_pkey_get0_attrs
#  define PKCS8_pkey_get0_attrs OPENSSL_MANGLER(PKCS8_pkey_get0_attrs)
# endif
#else
# ifndef _PKCS8_pkey_get0_attrs
#  define _PKCS8_pkey_get0_attrs OPENSSL_MANGLER_ASM(PKCS8_pkey_get0_attrs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_pkey_set0
#  define PKCS8_pkey_set0 OPENSSL_MANGLER(PKCS8_pkey_set0)
# endif
#else
# ifndef _PKCS8_pkey_set0
#  define _PKCS8_pkey_set0 OPENSSL_MANGLER_ASM(PKCS8_pkey_set0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_set0_pbe
#  define PKCS8_set0_pbe OPENSSL_MANGLER(PKCS8_set0_pbe)
# endif
#else
# ifndef _PKCS8_set0_pbe
#  define _PKCS8_set0_pbe OPENSSL_MANGLER_ASM(PKCS8_set0_pbe)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKCS8_set0_pbe_ex
#  define PKCS8_set0_pbe_ex OPENSSL_MANGLER(PKCS8_set0_pbe_ex)
# endif
#else
# ifndef _PKCS8_set0_pbe_ex
#  define _PKCS8_set0_pbe_ex OPENSSL_MANGLER_ASM(PKCS8_set0_pbe_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKEY_USAGE_PERIOD_free
#  define PKEY_USAGE_PERIOD_free OPENSSL_MANGLER(PKEY_USAGE_PERIOD_free)
# endif
#else
# ifndef _PKEY_USAGE_PERIOD_free
#  define _PKEY_USAGE_PERIOD_free OPENSSL_MANGLER_ASM(PKEY_USAGE_PERIOD_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKEY_USAGE_PERIOD_it
#  define PKEY_USAGE_PERIOD_it OPENSSL_MANGLER(PKEY_USAGE_PERIOD_it)
# endif
#else
# ifndef _PKEY_USAGE_PERIOD_it
#  define _PKEY_USAGE_PERIOD_it OPENSSL_MANGLER_ASM(PKEY_USAGE_PERIOD_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PKEY_USAGE_PERIOD_new
#  define PKEY_USAGE_PERIOD_new OPENSSL_MANGLER(PKEY_USAGE_PERIOD_new)
# endif
#else
# ifndef _PKEY_USAGE_PERIOD_new
#  define _PKEY_USAGE_PERIOD_new OPENSSL_MANGLER_ASM(PKEY_USAGE_PERIOD_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICYINFO_free
#  define POLICYINFO_free OPENSSL_MANGLER(POLICYINFO_free)
# endif
#else
# ifndef _POLICYINFO_free
#  define _POLICYINFO_free OPENSSL_MANGLER_ASM(POLICYINFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICYINFO_it
#  define POLICYINFO_it OPENSSL_MANGLER(POLICYINFO_it)
# endif
#else
# ifndef _POLICYINFO_it
#  define _POLICYINFO_it OPENSSL_MANGLER_ASM(POLICYINFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICYINFO_new
#  define POLICYINFO_new OPENSSL_MANGLER(POLICYINFO_new)
# endif
#else
# ifndef _POLICYINFO_new
#  define _POLICYINFO_new OPENSSL_MANGLER_ASM(POLICYINFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICYQUALINFO_free
#  define POLICYQUALINFO_free OPENSSL_MANGLER(POLICYQUALINFO_free)
# endif
#else
# ifndef _POLICYQUALINFO_free
#  define _POLICYQUALINFO_free OPENSSL_MANGLER_ASM(POLICYQUALINFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICYQUALINFO_it
#  define POLICYQUALINFO_it OPENSSL_MANGLER(POLICYQUALINFO_it)
# endif
#else
# ifndef _POLICYQUALINFO_it
#  define _POLICYQUALINFO_it OPENSSL_MANGLER_ASM(POLICYQUALINFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICYQUALINFO_new
#  define POLICYQUALINFO_new OPENSSL_MANGLER(POLICYQUALINFO_new)
# endif
#else
# ifndef _POLICYQUALINFO_new
#  define _POLICYQUALINFO_new OPENSSL_MANGLER_ASM(POLICYQUALINFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICY_CONSTRAINTS_free
#  define POLICY_CONSTRAINTS_free OPENSSL_MANGLER(POLICY_CONSTRAINTS_free)
# endif
#else
# ifndef _POLICY_CONSTRAINTS_free
#  define _POLICY_CONSTRAINTS_free OPENSSL_MANGLER_ASM(POLICY_CONSTRAINTS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICY_CONSTRAINTS_it
#  define POLICY_CONSTRAINTS_it OPENSSL_MANGLER(POLICY_CONSTRAINTS_it)
# endif
#else
# ifndef _POLICY_CONSTRAINTS_it
#  define _POLICY_CONSTRAINTS_it OPENSSL_MANGLER_ASM(POLICY_CONSTRAINTS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICY_CONSTRAINTS_new
#  define POLICY_CONSTRAINTS_new OPENSSL_MANGLER(POLICY_CONSTRAINTS_new)
# endif
#else
# ifndef _POLICY_CONSTRAINTS_new
#  define _POLICY_CONSTRAINTS_new OPENSSL_MANGLER_ASM(POLICY_CONSTRAINTS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICY_MAPPINGS_it
#  define POLICY_MAPPINGS_it OPENSSL_MANGLER(POLICY_MAPPINGS_it)
# endif
#else
# ifndef _POLICY_MAPPINGS_it
#  define _POLICY_MAPPINGS_it OPENSSL_MANGLER_ASM(POLICY_MAPPINGS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICY_MAPPING_free
#  define POLICY_MAPPING_free OPENSSL_MANGLER(POLICY_MAPPING_free)
# endif
#else
# ifndef _POLICY_MAPPING_free
#  define _POLICY_MAPPING_free OPENSSL_MANGLER_ASM(POLICY_MAPPING_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICY_MAPPING_it
#  define POLICY_MAPPING_it OPENSSL_MANGLER(POLICY_MAPPING_it)
# endif
#else
# ifndef _POLICY_MAPPING_it
#  define _POLICY_MAPPING_it OPENSSL_MANGLER_ASM(POLICY_MAPPING_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef POLICY_MAPPING_new
#  define POLICY_MAPPING_new OPENSSL_MANGLER(POLICY_MAPPING_new)
# endif
#else
# ifndef _POLICY_MAPPING_new
#  define _POLICY_MAPPING_new OPENSSL_MANGLER_ASM(POLICY_MAPPING_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_free
#  define PROFESSION_INFO_free OPENSSL_MANGLER(PROFESSION_INFO_free)
# endif
#else
# ifndef _PROFESSION_INFO_free
#  define _PROFESSION_INFO_free OPENSSL_MANGLER_ASM(PROFESSION_INFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_get0_addProfessionInfo
#  define PROFESSION_INFO_get0_addProfessionInfo OPENSSL_MANGLER(PROFESSION_INFO_get0_addProfessionInfo)
# endif
#else
# ifndef _PROFESSION_INFO_get0_addProfessionInfo
#  define _PROFESSION_INFO_get0_addProfessionInfo OPENSSL_MANGLER_ASM(PROFESSION_INFO_get0_addProfessionInfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_get0_namingAuthority
#  define PROFESSION_INFO_get0_namingAuthority OPENSSL_MANGLER(PROFESSION_INFO_get0_namingAuthority)
# endif
#else
# ifndef _PROFESSION_INFO_get0_namingAuthority
#  define _PROFESSION_INFO_get0_namingAuthority OPENSSL_MANGLER_ASM(PROFESSION_INFO_get0_namingAuthority)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_get0_professionItems
#  define PROFESSION_INFO_get0_professionItems OPENSSL_MANGLER(PROFESSION_INFO_get0_professionItems)
# endif
#else
# ifndef _PROFESSION_INFO_get0_professionItems
#  define _PROFESSION_INFO_get0_professionItems OPENSSL_MANGLER_ASM(PROFESSION_INFO_get0_professionItems)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_get0_professionOIDs
#  define PROFESSION_INFO_get0_professionOIDs OPENSSL_MANGLER(PROFESSION_INFO_get0_professionOIDs)
# endif
#else
# ifndef _PROFESSION_INFO_get0_professionOIDs
#  define _PROFESSION_INFO_get0_professionOIDs OPENSSL_MANGLER_ASM(PROFESSION_INFO_get0_professionOIDs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_get0_registrationNumber
#  define PROFESSION_INFO_get0_registrationNumber OPENSSL_MANGLER(PROFESSION_INFO_get0_registrationNumber)
# endif
#else
# ifndef _PROFESSION_INFO_get0_registrationNumber
#  define _PROFESSION_INFO_get0_registrationNumber OPENSSL_MANGLER_ASM(PROFESSION_INFO_get0_registrationNumber)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_it
#  define PROFESSION_INFO_it OPENSSL_MANGLER(PROFESSION_INFO_it)
# endif
#else
# ifndef _PROFESSION_INFO_it
#  define _PROFESSION_INFO_it OPENSSL_MANGLER_ASM(PROFESSION_INFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_new
#  define PROFESSION_INFO_new OPENSSL_MANGLER(PROFESSION_INFO_new)
# endif
#else
# ifndef _PROFESSION_INFO_new
#  define _PROFESSION_INFO_new OPENSSL_MANGLER_ASM(PROFESSION_INFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_set0_addProfessionInfo
#  define PROFESSION_INFO_set0_addProfessionInfo OPENSSL_MANGLER(PROFESSION_INFO_set0_addProfessionInfo)
# endif
#else
# ifndef _PROFESSION_INFO_set0_addProfessionInfo
#  define _PROFESSION_INFO_set0_addProfessionInfo OPENSSL_MANGLER_ASM(PROFESSION_INFO_set0_addProfessionInfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_set0_namingAuthority
#  define PROFESSION_INFO_set0_namingAuthority OPENSSL_MANGLER(PROFESSION_INFO_set0_namingAuthority)
# endif
#else
# ifndef _PROFESSION_INFO_set0_namingAuthority
#  define _PROFESSION_INFO_set0_namingAuthority OPENSSL_MANGLER_ASM(PROFESSION_INFO_set0_namingAuthority)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_set0_professionItems
#  define PROFESSION_INFO_set0_professionItems OPENSSL_MANGLER(PROFESSION_INFO_set0_professionItems)
# endif
#else
# ifndef _PROFESSION_INFO_set0_professionItems
#  define _PROFESSION_INFO_set0_professionItems OPENSSL_MANGLER_ASM(PROFESSION_INFO_set0_professionItems)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_set0_professionOIDs
#  define PROFESSION_INFO_set0_professionOIDs OPENSSL_MANGLER(PROFESSION_INFO_set0_professionOIDs)
# endif
#else
# ifndef _PROFESSION_INFO_set0_professionOIDs
#  define _PROFESSION_INFO_set0_professionOIDs OPENSSL_MANGLER_ASM(PROFESSION_INFO_set0_professionOIDs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROFESSION_INFO_set0_registrationNumber
#  define PROFESSION_INFO_set0_registrationNumber OPENSSL_MANGLER(PROFESSION_INFO_set0_registrationNumber)
# endif
#else
# ifndef _PROFESSION_INFO_set0_registrationNumber
#  define _PROFESSION_INFO_set0_registrationNumber OPENSSL_MANGLER_ASM(PROFESSION_INFO_set0_registrationNumber)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROXY_CERT_INFO_EXTENSION_free
#  define PROXY_CERT_INFO_EXTENSION_free OPENSSL_MANGLER(PROXY_CERT_INFO_EXTENSION_free)
# endif
#else
# ifndef _PROXY_CERT_INFO_EXTENSION_free
#  define _PROXY_CERT_INFO_EXTENSION_free OPENSSL_MANGLER_ASM(PROXY_CERT_INFO_EXTENSION_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROXY_CERT_INFO_EXTENSION_it
#  define PROXY_CERT_INFO_EXTENSION_it OPENSSL_MANGLER(PROXY_CERT_INFO_EXTENSION_it)
# endif
#else
# ifndef _PROXY_CERT_INFO_EXTENSION_it
#  define _PROXY_CERT_INFO_EXTENSION_it OPENSSL_MANGLER_ASM(PROXY_CERT_INFO_EXTENSION_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROXY_CERT_INFO_EXTENSION_new
#  define PROXY_CERT_INFO_EXTENSION_new OPENSSL_MANGLER(PROXY_CERT_INFO_EXTENSION_new)
# endif
#else
# ifndef _PROXY_CERT_INFO_EXTENSION_new
#  define _PROXY_CERT_INFO_EXTENSION_new OPENSSL_MANGLER_ASM(PROXY_CERT_INFO_EXTENSION_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROXY_POLICY_free
#  define PROXY_POLICY_free OPENSSL_MANGLER(PROXY_POLICY_free)
# endif
#else
# ifndef _PROXY_POLICY_free
#  define _PROXY_POLICY_free OPENSSL_MANGLER_ASM(PROXY_POLICY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROXY_POLICY_it
#  define PROXY_POLICY_it OPENSSL_MANGLER(PROXY_POLICY_it)
# endif
#else
# ifndef _PROXY_POLICY_it
#  define _PROXY_POLICY_it OPENSSL_MANGLER_ASM(PROXY_POLICY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef PROXY_POLICY_new
#  define PROXY_POLICY_new OPENSSL_MANGLER(PROXY_POLICY_new)
# endif
#else
# ifndef _PROXY_POLICY_new
#  define _PROXY_POLICY_new OPENSSL_MANGLER_ASM(PROXY_POLICY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Poly1305_Final
#  define Poly1305_Final OPENSSL_MANGLER(Poly1305_Final)
# endif
#else
# ifndef _Poly1305_Final
#  define _Poly1305_Final OPENSSL_MANGLER_ASM(Poly1305_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Poly1305_Init
#  define Poly1305_Init OPENSSL_MANGLER(Poly1305_Init)
# endif
#else
# ifndef _Poly1305_Init
#  define _Poly1305_Init OPENSSL_MANGLER_ASM(Poly1305_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Poly1305_Update
#  define Poly1305_Update OPENSSL_MANGLER(Poly1305_Update)
# endif
#else
# ifndef _Poly1305_Update
#  define _Poly1305_Update OPENSSL_MANGLER_ASM(Poly1305_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef Poly1305_ctx_size
#  define Poly1305_ctx_size OPENSSL_MANGLER(Poly1305_ctx_size)
# endif
#else
# ifndef _Poly1305_ctx_size
#  define _Poly1305_ctx_size OPENSSL_MANGLER_ASM(Poly1305_ctx_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_OpenSSL
#  define RAND_OpenSSL OPENSSL_MANGLER(RAND_OpenSSL)
# endif
#else
# ifndef _RAND_OpenSSL
#  define _RAND_OpenSSL OPENSSL_MANGLER_ASM(RAND_OpenSSL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_add
#  define RAND_add OPENSSL_MANGLER(RAND_add)
# endif
#else
# ifndef _RAND_add
#  define _RAND_add OPENSSL_MANGLER_ASM(RAND_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_bytes
#  define RAND_bytes OPENSSL_MANGLER(RAND_bytes)
# endif
#else
# ifndef _RAND_bytes
#  define _RAND_bytes OPENSSL_MANGLER_ASM(RAND_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_bytes_ex
#  define RAND_bytes_ex OPENSSL_MANGLER(RAND_bytes_ex)
# endif
#else
# ifndef _RAND_bytes_ex
#  define _RAND_bytes_ex OPENSSL_MANGLER_ASM(RAND_bytes_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_egd
#  define RAND_egd OPENSSL_MANGLER(RAND_egd)
# endif
#else
# ifndef _RAND_egd
#  define _RAND_egd OPENSSL_MANGLER_ASM(RAND_egd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_egd_bytes
#  define RAND_egd_bytes OPENSSL_MANGLER(RAND_egd_bytes)
# endif
#else
# ifndef _RAND_egd_bytes
#  define _RAND_egd_bytes OPENSSL_MANGLER_ASM(RAND_egd_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_file_name
#  define RAND_file_name OPENSSL_MANGLER(RAND_file_name)
# endif
#else
# ifndef _RAND_file_name
#  define _RAND_file_name OPENSSL_MANGLER_ASM(RAND_file_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_get0_primary
#  define RAND_get0_primary OPENSSL_MANGLER(RAND_get0_primary)
# endif
#else
# ifndef _RAND_get0_primary
#  define _RAND_get0_primary OPENSSL_MANGLER_ASM(RAND_get0_primary)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_get0_private
#  define RAND_get0_private OPENSSL_MANGLER(RAND_get0_private)
# endif
#else
# ifndef _RAND_get0_private
#  define _RAND_get0_private OPENSSL_MANGLER_ASM(RAND_get0_private)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_get0_public
#  define RAND_get0_public OPENSSL_MANGLER(RAND_get0_public)
# endif
#else
# ifndef _RAND_get0_public
#  define _RAND_get0_public OPENSSL_MANGLER_ASM(RAND_get0_public)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_get_rand_method
#  define RAND_get_rand_method OPENSSL_MANGLER(RAND_get_rand_method)
# endif
#else
# ifndef _RAND_get_rand_method
#  define _RAND_get_rand_method OPENSSL_MANGLER_ASM(RAND_get_rand_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_keep_random_devices_open
#  define RAND_keep_random_devices_open OPENSSL_MANGLER(RAND_keep_random_devices_open)
# endif
#else
# ifndef _RAND_keep_random_devices_open
#  define _RAND_keep_random_devices_open OPENSSL_MANGLER_ASM(RAND_keep_random_devices_open)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_load_file
#  define RAND_load_file OPENSSL_MANGLER(RAND_load_file)
# endif
#else
# ifndef _RAND_load_file
#  define _RAND_load_file OPENSSL_MANGLER_ASM(RAND_load_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_poll
#  define RAND_poll OPENSSL_MANGLER(RAND_poll)
# endif
#else
# ifndef _RAND_poll
#  define _RAND_poll OPENSSL_MANGLER_ASM(RAND_poll)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_priv_bytes
#  define RAND_priv_bytes OPENSSL_MANGLER(RAND_priv_bytes)
# endif
#else
# ifndef _RAND_priv_bytes
#  define _RAND_priv_bytes OPENSSL_MANGLER_ASM(RAND_priv_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_priv_bytes_ex
#  define RAND_priv_bytes_ex OPENSSL_MANGLER(RAND_priv_bytes_ex)
# endif
#else
# ifndef _RAND_priv_bytes_ex
#  define _RAND_priv_bytes_ex OPENSSL_MANGLER_ASM(RAND_priv_bytes_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_query_egd_bytes
#  define RAND_query_egd_bytes OPENSSL_MANGLER(RAND_query_egd_bytes)
# endif
#else
# ifndef _RAND_query_egd_bytes
#  define _RAND_query_egd_bytes OPENSSL_MANGLER_ASM(RAND_query_egd_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_seed
#  define RAND_seed OPENSSL_MANGLER(RAND_seed)
# endif
#else
# ifndef _RAND_seed
#  define _RAND_seed OPENSSL_MANGLER_ASM(RAND_seed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_set_DRBG_type
#  define RAND_set_DRBG_type OPENSSL_MANGLER(RAND_set_DRBG_type)
# endif
#else
# ifndef _RAND_set_DRBG_type
#  define _RAND_set_DRBG_type OPENSSL_MANGLER_ASM(RAND_set_DRBG_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_set_rand_engine
#  define RAND_set_rand_engine OPENSSL_MANGLER(RAND_set_rand_engine)
# endif
#else
# ifndef _RAND_set_rand_engine
#  define _RAND_set_rand_engine OPENSSL_MANGLER_ASM(RAND_set_rand_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_set_rand_method
#  define RAND_set_rand_method OPENSSL_MANGLER(RAND_set_rand_method)
# endif
#else
# ifndef _RAND_set_rand_method
#  define _RAND_set_rand_method OPENSSL_MANGLER_ASM(RAND_set_rand_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_set_seed_source_type
#  define RAND_set_seed_source_type OPENSSL_MANGLER(RAND_set_seed_source_type)
# endif
#else
# ifndef _RAND_set_seed_source_type
#  define _RAND_set_seed_source_type OPENSSL_MANGLER_ASM(RAND_set_seed_source_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_status
#  define RAND_status OPENSSL_MANGLER(RAND_status)
# endif
#else
# ifndef _RAND_status
#  define _RAND_status OPENSSL_MANGLER_ASM(RAND_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RAND_write_file
#  define RAND_write_file OPENSSL_MANGLER(RAND_write_file)
# endif
#else
# ifndef _RAND_write_file
#  define _RAND_write_file OPENSSL_MANGLER_ASM(RAND_write_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RC4
#  define RC4 OPENSSL_MANGLER(RC4)
# endif
#else
# ifndef _RC4
#  define _RC4 OPENSSL_MANGLER_ASM(RC4)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RC4_options
#  define RC4_options OPENSSL_MANGLER(RC4_options)
# endif
#else
# ifndef _RC4_options
#  define _RC4_options OPENSSL_MANGLER_ASM(RC4_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RC4_set_key
#  define RC4_set_key OPENSSL_MANGLER(RC4_set_key)
# endif
#else
# ifndef _RC4_set_key
#  define _RC4_set_key OPENSSL_MANGLER_ASM(RC4_set_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RECORD_LAYER_clear
#  define RECORD_LAYER_clear OPENSSL_MANGLER(RECORD_LAYER_clear)
# endif
#else
# ifndef _RECORD_LAYER_clear
#  define _RECORD_LAYER_clear OPENSSL_MANGLER_ASM(RECORD_LAYER_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RECORD_LAYER_get_rrec_length
#  define RECORD_LAYER_get_rrec_length OPENSSL_MANGLER(RECORD_LAYER_get_rrec_length)
# endif
#else
# ifndef _RECORD_LAYER_get_rrec_length
#  define _RECORD_LAYER_get_rrec_length OPENSSL_MANGLER_ASM(RECORD_LAYER_get_rrec_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RECORD_LAYER_init
#  define RECORD_LAYER_init OPENSSL_MANGLER(RECORD_LAYER_init)
# endif
#else
# ifndef _RECORD_LAYER_init
#  define _RECORD_LAYER_init OPENSSL_MANGLER_ASM(RECORD_LAYER_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RECORD_LAYER_is_sslv2_record
#  define RECORD_LAYER_is_sslv2_record OPENSSL_MANGLER(RECORD_LAYER_is_sslv2_record)
# endif
#else
# ifndef _RECORD_LAYER_is_sslv2_record
#  define _RECORD_LAYER_is_sslv2_record OPENSSL_MANGLER_ASM(RECORD_LAYER_is_sslv2_record)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RECORD_LAYER_processed_read_pending
#  define RECORD_LAYER_processed_read_pending OPENSSL_MANGLER(RECORD_LAYER_processed_read_pending)
# endif
#else
# ifndef _RECORD_LAYER_processed_read_pending
#  define _RECORD_LAYER_processed_read_pending OPENSSL_MANGLER_ASM(RECORD_LAYER_processed_read_pending)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RECORD_LAYER_read_pending
#  define RECORD_LAYER_read_pending OPENSSL_MANGLER(RECORD_LAYER_read_pending)
# endif
#else
# ifndef _RECORD_LAYER_read_pending
#  define _RECORD_LAYER_read_pending OPENSSL_MANGLER_ASM(RECORD_LAYER_read_pending)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RECORD_LAYER_release
#  define RECORD_LAYER_release OPENSSL_MANGLER(RECORD_LAYER_release)
# endif
#else
# ifndef _RECORD_LAYER_release
#  define _RECORD_LAYER_release OPENSSL_MANGLER_ASM(RECORD_LAYER_release)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RECORD_LAYER_reset_read_sequence
#  define RECORD_LAYER_reset_read_sequence OPENSSL_MANGLER(RECORD_LAYER_reset_read_sequence)
# endif
#else
# ifndef _RECORD_LAYER_reset_read_sequence
#  define _RECORD_LAYER_reset_read_sequence OPENSSL_MANGLER_ASM(RECORD_LAYER_reset_read_sequence)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RECORD_LAYER_reset_write_sequence
#  define RECORD_LAYER_reset_write_sequence OPENSSL_MANGLER(RECORD_LAYER_reset_write_sequence)
# endif
#else
# ifndef _RECORD_LAYER_reset_write_sequence
#  define _RECORD_LAYER_reset_write_sequence OPENSSL_MANGLER_ASM(RECORD_LAYER_reset_write_sequence)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RECORD_LAYER_write_pending
#  define RECORD_LAYER_write_pending OPENSSL_MANGLER(RECORD_LAYER_write_pending)
# endif
#else
# ifndef _RECORD_LAYER_write_pending
#  define _RECORD_LAYER_write_pending OPENSSL_MANGLER_ASM(RECORD_LAYER_write_pending)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSAPrivateKey_dup
#  define RSAPrivateKey_dup OPENSSL_MANGLER(RSAPrivateKey_dup)
# endif
#else
# ifndef _RSAPrivateKey_dup
#  define _RSAPrivateKey_dup OPENSSL_MANGLER_ASM(RSAPrivateKey_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSAPrivateKey_it
#  define RSAPrivateKey_it OPENSSL_MANGLER(RSAPrivateKey_it)
# endif
#else
# ifndef _RSAPrivateKey_it
#  define _RSAPrivateKey_it OPENSSL_MANGLER_ASM(RSAPrivateKey_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSAPublicKey_dup
#  define RSAPublicKey_dup OPENSSL_MANGLER(RSAPublicKey_dup)
# endif
#else
# ifndef _RSAPublicKey_dup
#  define _RSAPublicKey_dup OPENSSL_MANGLER_ASM(RSAPublicKey_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSAPublicKey_it
#  define RSAPublicKey_it OPENSSL_MANGLER(RSAPublicKey_it)
# endif
#else
# ifndef _RSAPublicKey_it
#  define _RSAPublicKey_it OPENSSL_MANGLER_ASM(RSAPublicKey_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSAZ_1024_mod_exp_avx2
#  define RSAZ_1024_mod_exp_avx2 OPENSSL_MANGLER(RSAZ_1024_mod_exp_avx2)
# endif
#else
# ifndef _RSAZ_1024_mod_exp_avx2
#  define _RSAZ_1024_mod_exp_avx2 OPENSSL_MANGLER_ASM(RSAZ_1024_mod_exp_avx2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSAZ_512_mod_exp
#  define RSAZ_512_mod_exp OPENSSL_MANGLER(RSAZ_512_mod_exp)
# endif
#else
# ifndef _RSAZ_512_mod_exp
#  define _RSAZ_512_mod_exp OPENSSL_MANGLER_ASM(RSAZ_512_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_OAEP_PARAMS_free
#  define RSA_OAEP_PARAMS_free OPENSSL_MANGLER(RSA_OAEP_PARAMS_free)
# endif
#else
# ifndef _RSA_OAEP_PARAMS_free
#  define _RSA_OAEP_PARAMS_free OPENSSL_MANGLER_ASM(RSA_OAEP_PARAMS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_OAEP_PARAMS_it
#  define RSA_OAEP_PARAMS_it OPENSSL_MANGLER(RSA_OAEP_PARAMS_it)
# endif
#else
# ifndef _RSA_OAEP_PARAMS_it
#  define _RSA_OAEP_PARAMS_it OPENSSL_MANGLER_ASM(RSA_OAEP_PARAMS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_OAEP_PARAMS_new
#  define RSA_OAEP_PARAMS_new OPENSSL_MANGLER(RSA_OAEP_PARAMS_new)
# endif
#else
# ifndef _RSA_OAEP_PARAMS_new
#  define _RSA_OAEP_PARAMS_new OPENSSL_MANGLER_ASM(RSA_OAEP_PARAMS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_PKCS1_OpenSSL
#  define RSA_PKCS1_OpenSSL OPENSSL_MANGLER(RSA_PKCS1_OpenSSL)
# endif
#else
# ifndef _RSA_PKCS1_OpenSSL
#  define _RSA_PKCS1_OpenSSL OPENSSL_MANGLER_ASM(RSA_PKCS1_OpenSSL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_PRIME_INFO_it
#  define RSA_PRIME_INFO_it OPENSSL_MANGLER(RSA_PRIME_INFO_it)
# endif
#else
# ifndef _RSA_PRIME_INFO_it
#  define _RSA_PRIME_INFO_it OPENSSL_MANGLER_ASM(RSA_PRIME_INFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_PSS_PARAMS_dup
#  define RSA_PSS_PARAMS_dup OPENSSL_MANGLER(RSA_PSS_PARAMS_dup)
# endif
#else
# ifndef _RSA_PSS_PARAMS_dup
#  define _RSA_PSS_PARAMS_dup OPENSSL_MANGLER_ASM(RSA_PSS_PARAMS_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_PSS_PARAMS_free
#  define RSA_PSS_PARAMS_free OPENSSL_MANGLER(RSA_PSS_PARAMS_free)
# endif
#else
# ifndef _RSA_PSS_PARAMS_free
#  define _RSA_PSS_PARAMS_free OPENSSL_MANGLER_ASM(RSA_PSS_PARAMS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_PSS_PARAMS_it
#  define RSA_PSS_PARAMS_it OPENSSL_MANGLER(RSA_PSS_PARAMS_it)
# endif
#else
# ifndef _RSA_PSS_PARAMS_it
#  define _RSA_PSS_PARAMS_it OPENSSL_MANGLER_ASM(RSA_PSS_PARAMS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_PSS_PARAMS_new
#  define RSA_PSS_PARAMS_new OPENSSL_MANGLER(RSA_PSS_PARAMS_new)
# endif
#else
# ifndef _RSA_PSS_PARAMS_new
#  define _RSA_PSS_PARAMS_new OPENSSL_MANGLER_ASM(RSA_PSS_PARAMS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_X931_derive_ex
#  define RSA_X931_derive_ex OPENSSL_MANGLER(RSA_X931_derive_ex)
# endif
#else
# ifndef _RSA_X931_derive_ex
#  define _RSA_X931_derive_ex OPENSSL_MANGLER_ASM(RSA_X931_derive_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_X931_generate_key_ex
#  define RSA_X931_generate_key_ex OPENSSL_MANGLER(RSA_X931_generate_key_ex)
# endif
#else
# ifndef _RSA_X931_generate_key_ex
#  define _RSA_X931_generate_key_ex OPENSSL_MANGLER_ASM(RSA_X931_generate_key_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_X931_hash_id
#  define RSA_X931_hash_id OPENSSL_MANGLER(RSA_X931_hash_id)
# endif
#else
# ifndef _RSA_X931_hash_id
#  define _RSA_X931_hash_id OPENSSL_MANGLER_ASM(RSA_X931_hash_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_bits
#  define RSA_bits OPENSSL_MANGLER(RSA_bits)
# endif
#else
# ifndef _RSA_bits
#  define _RSA_bits OPENSSL_MANGLER_ASM(RSA_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_blinding_off
#  define RSA_blinding_off OPENSSL_MANGLER(RSA_blinding_off)
# endif
#else
# ifndef _RSA_blinding_off
#  define _RSA_blinding_off OPENSSL_MANGLER_ASM(RSA_blinding_off)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_blinding_on
#  define RSA_blinding_on OPENSSL_MANGLER(RSA_blinding_on)
# endif
#else
# ifndef _RSA_blinding_on
#  define _RSA_blinding_on OPENSSL_MANGLER_ASM(RSA_blinding_on)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_check_key
#  define RSA_check_key OPENSSL_MANGLER(RSA_check_key)
# endif
#else
# ifndef _RSA_check_key
#  define _RSA_check_key OPENSSL_MANGLER_ASM(RSA_check_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_check_key_ex
#  define RSA_check_key_ex OPENSSL_MANGLER(RSA_check_key_ex)
# endif
#else
# ifndef _RSA_check_key_ex
#  define _RSA_check_key_ex OPENSSL_MANGLER_ASM(RSA_check_key_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_clear_flags
#  define RSA_clear_flags OPENSSL_MANGLER(RSA_clear_flags)
# endif
#else
# ifndef _RSA_clear_flags
#  define _RSA_clear_flags OPENSSL_MANGLER_ASM(RSA_clear_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_flags
#  define RSA_flags OPENSSL_MANGLER(RSA_flags)
# endif
#else
# ifndef _RSA_flags
#  define _RSA_flags OPENSSL_MANGLER_ASM(RSA_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_free
#  define RSA_free OPENSSL_MANGLER(RSA_free)
# endif
#else
# ifndef _RSA_free
#  define _RSA_free OPENSSL_MANGLER_ASM(RSA_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_generate_key
#  define RSA_generate_key OPENSSL_MANGLER(RSA_generate_key)
# endif
#else
# ifndef _RSA_generate_key
#  define _RSA_generate_key OPENSSL_MANGLER_ASM(RSA_generate_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_generate_key_ex
#  define RSA_generate_key_ex OPENSSL_MANGLER(RSA_generate_key_ex)
# endif
#else
# ifndef _RSA_generate_key_ex
#  define _RSA_generate_key_ex OPENSSL_MANGLER_ASM(RSA_generate_key_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_generate_multi_prime_key
#  define RSA_generate_multi_prime_key OPENSSL_MANGLER(RSA_generate_multi_prime_key)
# endif
#else
# ifndef _RSA_generate_multi_prime_key
#  define _RSA_generate_multi_prime_key OPENSSL_MANGLER_ASM(RSA_generate_multi_prime_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_crt_params
#  define RSA_get0_crt_params OPENSSL_MANGLER(RSA_get0_crt_params)
# endif
#else
# ifndef _RSA_get0_crt_params
#  define _RSA_get0_crt_params OPENSSL_MANGLER_ASM(RSA_get0_crt_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_d
#  define RSA_get0_d OPENSSL_MANGLER(RSA_get0_d)
# endif
#else
# ifndef _RSA_get0_d
#  define _RSA_get0_d OPENSSL_MANGLER_ASM(RSA_get0_d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_dmp1
#  define RSA_get0_dmp1 OPENSSL_MANGLER(RSA_get0_dmp1)
# endif
#else
# ifndef _RSA_get0_dmp1
#  define _RSA_get0_dmp1 OPENSSL_MANGLER_ASM(RSA_get0_dmp1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_dmq1
#  define RSA_get0_dmq1 OPENSSL_MANGLER(RSA_get0_dmq1)
# endif
#else
# ifndef _RSA_get0_dmq1
#  define _RSA_get0_dmq1 OPENSSL_MANGLER_ASM(RSA_get0_dmq1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_e
#  define RSA_get0_e OPENSSL_MANGLER(RSA_get0_e)
# endif
#else
# ifndef _RSA_get0_e
#  define _RSA_get0_e OPENSSL_MANGLER_ASM(RSA_get0_e)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_engine
#  define RSA_get0_engine OPENSSL_MANGLER(RSA_get0_engine)
# endif
#else
# ifndef _RSA_get0_engine
#  define _RSA_get0_engine OPENSSL_MANGLER_ASM(RSA_get0_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_factors
#  define RSA_get0_factors OPENSSL_MANGLER(RSA_get0_factors)
# endif
#else
# ifndef _RSA_get0_factors
#  define _RSA_get0_factors OPENSSL_MANGLER_ASM(RSA_get0_factors)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_iqmp
#  define RSA_get0_iqmp OPENSSL_MANGLER(RSA_get0_iqmp)
# endif
#else
# ifndef _RSA_get0_iqmp
#  define _RSA_get0_iqmp OPENSSL_MANGLER_ASM(RSA_get0_iqmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_key
#  define RSA_get0_key OPENSSL_MANGLER(RSA_get0_key)
# endif
#else
# ifndef _RSA_get0_key
#  define _RSA_get0_key OPENSSL_MANGLER_ASM(RSA_get0_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_multi_prime_crt_params
#  define RSA_get0_multi_prime_crt_params OPENSSL_MANGLER(RSA_get0_multi_prime_crt_params)
# endif
#else
# ifndef _RSA_get0_multi_prime_crt_params
#  define _RSA_get0_multi_prime_crt_params OPENSSL_MANGLER_ASM(RSA_get0_multi_prime_crt_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_multi_prime_factors
#  define RSA_get0_multi_prime_factors OPENSSL_MANGLER(RSA_get0_multi_prime_factors)
# endif
#else
# ifndef _RSA_get0_multi_prime_factors
#  define _RSA_get0_multi_prime_factors OPENSSL_MANGLER_ASM(RSA_get0_multi_prime_factors)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_n
#  define RSA_get0_n OPENSSL_MANGLER(RSA_get0_n)
# endif
#else
# ifndef _RSA_get0_n
#  define _RSA_get0_n OPENSSL_MANGLER_ASM(RSA_get0_n)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_p
#  define RSA_get0_p OPENSSL_MANGLER(RSA_get0_p)
# endif
#else
# ifndef _RSA_get0_p
#  define _RSA_get0_p OPENSSL_MANGLER_ASM(RSA_get0_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_pss_params
#  define RSA_get0_pss_params OPENSSL_MANGLER(RSA_get0_pss_params)
# endif
#else
# ifndef _RSA_get0_pss_params
#  define _RSA_get0_pss_params OPENSSL_MANGLER_ASM(RSA_get0_pss_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get0_q
#  define RSA_get0_q OPENSSL_MANGLER(RSA_get0_q)
# endif
#else
# ifndef _RSA_get0_q
#  define _RSA_get0_q OPENSSL_MANGLER_ASM(RSA_get0_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get_default_method
#  define RSA_get_default_method OPENSSL_MANGLER(RSA_get_default_method)
# endif
#else
# ifndef _RSA_get_default_method
#  define _RSA_get_default_method OPENSSL_MANGLER_ASM(RSA_get_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get_ex_data
#  define RSA_get_ex_data OPENSSL_MANGLER(RSA_get_ex_data)
# endif
#else
# ifndef _RSA_get_ex_data
#  define _RSA_get_ex_data OPENSSL_MANGLER_ASM(RSA_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get_method
#  define RSA_get_method OPENSSL_MANGLER(RSA_get_method)
# endif
#else
# ifndef _RSA_get_method
#  define _RSA_get_method OPENSSL_MANGLER_ASM(RSA_get_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get_multi_prime_extra_count
#  define RSA_get_multi_prime_extra_count OPENSSL_MANGLER(RSA_get_multi_prime_extra_count)
# endif
#else
# ifndef _RSA_get_multi_prime_extra_count
#  define _RSA_get_multi_prime_extra_count OPENSSL_MANGLER_ASM(RSA_get_multi_prime_extra_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_get_version
#  define RSA_get_version OPENSSL_MANGLER(RSA_get_version)
# endif
#else
# ifndef _RSA_get_version
#  define _RSA_get_version OPENSSL_MANGLER_ASM(RSA_get_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_dup
#  define RSA_meth_dup OPENSSL_MANGLER(RSA_meth_dup)
# endif
#else
# ifndef _RSA_meth_dup
#  define _RSA_meth_dup OPENSSL_MANGLER_ASM(RSA_meth_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_free
#  define RSA_meth_free OPENSSL_MANGLER(RSA_meth_free)
# endif
#else
# ifndef _RSA_meth_free
#  define _RSA_meth_free OPENSSL_MANGLER_ASM(RSA_meth_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get0_app_data
#  define RSA_meth_get0_app_data OPENSSL_MANGLER(RSA_meth_get0_app_data)
# endif
#else
# ifndef _RSA_meth_get0_app_data
#  define _RSA_meth_get0_app_data OPENSSL_MANGLER_ASM(RSA_meth_get0_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get0_name
#  define RSA_meth_get0_name OPENSSL_MANGLER(RSA_meth_get0_name)
# endif
#else
# ifndef _RSA_meth_get0_name
#  define _RSA_meth_get0_name OPENSSL_MANGLER_ASM(RSA_meth_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_bn_mod_exp
#  define RSA_meth_get_bn_mod_exp OPENSSL_MANGLER(RSA_meth_get_bn_mod_exp)
# endif
#else
# ifndef _RSA_meth_get_bn_mod_exp
#  define _RSA_meth_get_bn_mod_exp OPENSSL_MANGLER_ASM(RSA_meth_get_bn_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_finish
#  define RSA_meth_get_finish OPENSSL_MANGLER(RSA_meth_get_finish)
# endif
#else
# ifndef _RSA_meth_get_finish
#  define _RSA_meth_get_finish OPENSSL_MANGLER_ASM(RSA_meth_get_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_flags
#  define RSA_meth_get_flags OPENSSL_MANGLER(RSA_meth_get_flags)
# endif
#else
# ifndef _RSA_meth_get_flags
#  define _RSA_meth_get_flags OPENSSL_MANGLER_ASM(RSA_meth_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_init
#  define RSA_meth_get_init OPENSSL_MANGLER(RSA_meth_get_init)
# endif
#else
# ifndef _RSA_meth_get_init
#  define _RSA_meth_get_init OPENSSL_MANGLER_ASM(RSA_meth_get_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_keygen
#  define RSA_meth_get_keygen OPENSSL_MANGLER(RSA_meth_get_keygen)
# endif
#else
# ifndef _RSA_meth_get_keygen
#  define _RSA_meth_get_keygen OPENSSL_MANGLER_ASM(RSA_meth_get_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_mod_exp
#  define RSA_meth_get_mod_exp OPENSSL_MANGLER(RSA_meth_get_mod_exp)
# endif
#else
# ifndef _RSA_meth_get_mod_exp
#  define _RSA_meth_get_mod_exp OPENSSL_MANGLER_ASM(RSA_meth_get_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_multi_prime_keygen
#  define RSA_meth_get_multi_prime_keygen OPENSSL_MANGLER(RSA_meth_get_multi_prime_keygen)
# endif
#else
# ifndef _RSA_meth_get_multi_prime_keygen
#  define _RSA_meth_get_multi_prime_keygen OPENSSL_MANGLER_ASM(RSA_meth_get_multi_prime_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_priv_dec
#  define RSA_meth_get_priv_dec OPENSSL_MANGLER(RSA_meth_get_priv_dec)
# endif
#else
# ifndef _RSA_meth_get_priv_dec
#  define _RSA_meth_get_priv_dec OPENSSL_MANGLER_ASM(RSA_meth_get_priv_dec)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_priv_enc
#  define RSA_meth_get_priv_enc OPENSSL_MANGLER(RSA_meth_get_priv_enc)
# endif
#else
# ifndef _RSA_meth_get_priv_enc
#  define _RSA_meth_get_priv_enc OPENSSL_MANGLER_ASM(RSA_meth_get_priv_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_pub_dec
#  define RSA_meth_get_pub_dec OPENSSL_MANGLER(RSA_meth_get_pub_dec)
# endif
#else
# ifndef _RSA_meth_get_pub_dec
#  define _RSA_meth_get_pub_dec OPENSSL_MANGLER_ASM(RSA_meth_get_pub_dec)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_pub_enc
#  define RSA_meth_get_pub_enc OPENSSL_MANGLER(RSA_meth_get_pub_enc)
# endif
#else
# ifndef _RSA_meth_get_pub_enc
#  define _RSA_meth_get_pub_enc OPENSSL_MANGLER_ASM(RSA_meth_get_pub_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_sign
#  define RSA_meth_get_sign OPENSSL_MANGLER(RSA_meth_get_sign)
# endif
#else
# ifndef _RSA_meth_get_sign
#  define _RSA_meth_get_sign OPENSSL_MANGLER_ASM(RSA_meth_get_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_get_verify
#  define RSA_meth_get_verify OPENSSL_MANGLER(RSA_meth_get_verify)
# endif
#else
# ifndef _RSA_meth_get_verify
#  define _RSA_meth_get_verify OPENSSL_MANGLER_ASM(RSA_meth_get_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_new
#  define RSA_meth_new OPENSSL_MANGLER(RSA_meth_new)
# endif
#else
# ifndef _RSA_meth_new
#  define _RSA_meth_new OPENSSL_MANGLER_ASM(RSA_meth_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set0_app_data
#  define RSA_meth_set0_app_data OPENSSL_MANGLER(RSA_meth_set0_app_data)
# endif
#else
# ifndef _RSA_meth_set0_app_data
#  define _RSA_meth_set0_app_data OPENSSL_MANGLER_ASM(RSA_meth_set0_app_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set1_name
#  define RSA_meth_set1_name OPENSSL_MANGLER(RSA_meth_set1_name)
# endif
#else
# ifndef _RSA_meth_set1_name
#  define _RSA_meth_set1_name OPENSSL_MANGLER_ASM(RSA_meth_set1_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_bn_mod_exp
#  define RSA_meth_set_bn_mod_exp OPENSSL_MANGLER(RSA_meth_set_bn_mod_exp)
# endif
#else
# ifndef _RSA_meth_set_bn_mod_exp
#  define _RSA_meth_set_bn_mod_exp OPENSSL_MANGLER_ASM(RSA_meth_set_bn_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_finish
#  define RSA_meth_set_finish OPENSSL_MANGLER(RSA_meth_set_finish)
# endif
#else
# ifndef _RSA_meth_set_finish
#  define _RSA_meth_set_finish OPENSSL_MANGLER_ASM(RSA_meth_set_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_flags
#  define RSA_meth_set_flags OPENSSL_MANGLER(RSA_meth_set_flags)
# endif
#else
# ifndef _RSA_meth_set_flags
#  define _RSA_meth_set_flags OPENSSL_MANGLER_ASM(RSA_meth_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_init
#  define RSA_meth_set_init OPENSSL_MANGLER(RSA_meth_set_init)
# endif
#else
# ifndef _RSA_meth_set_init
#  define _RSA_meth_set_init OPENSSL_MANGLER_ASM(RSA_meth_set_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_keygen
#  define RSA_meth_set_keygen OPENSSL_MANGLER(RSA_meth_set_keygen)
# endif
#else
# ifndef _RSA_meth_set_keygen
#  define _RSA_meth_set_keygen OPENSSL_MANGLER_ASM(RSA_meth_set_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_mod_exp
#  define RSA_meth_set_mod_exp OPENSSL_MANGLER(RSA_meth_set_mod_exp)
# endif
#else
# ifndef _RSA_meth_set_mod_exp
#  define _RSA_meth_set_mod_exp OPENSSL_MANGLER_ASM(RSA_meth_set_mod_exp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_multi_prime_keygen
#  define RSA_meth_set_multi_prime_keygen OPENSSL_MANGLER(RSA_meth_set_multi_prime_keygen)
# endif
#else
# ifndef _RSA_meth_set_multi_prime_keygen
#  define _RSA_meth_set_multi_prime_keygen OPENSSL_MANGLER_ASM(RSA_meth_set_multi_prime_keygen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_priv_dec
#  define RSA_meth_set_priv_dec OPENSSL_MANGLER(RSA_meth_set_priv_dec)
# endif
#else
# ifndef _RSA_meth_set_priv_dec
#  define _RSA_meth_set_priv_dec OPENSSL_MANGLER_ASM(RSA_meth_set_priv_dec)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_priv_enc
#  define RSA_meth_set_priv_enc OPENSSL_MANGLER(RSA_meth_set_priv_enc)
# endif
#else
# ifndef _RSA_meth_set_priv_enc
#  define _RSA_meth_set_priv_enc OPENSSL_MANGLER_ASM(RSA_meth_set_priv_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_pub_dec
#  define RSA_meth_set_pub_dec OPENSSL_MANGLER(RSA_meth_set_pub_dec)
# endif
#else
# ifndef _RSA_meth_set_pub_dec
#  define _RSA_meth_set_pub_dec OPENSSL_MANGLER_ASM(RSA_meth_set_pub_dec)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_pub_enc
#  define RSA_meth_set_pub_enc OPENSSL_MANGLER(RSA_meth_set_pub_enc)
# endif
#else
# ifndef _RSA_meth_set_pub_enc
#  define _RSA_meth_set_pub_enc OPENSSL_MANGLER_ASM(RSA_meth_set_pub_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_sign
#  define RSA_meth_set_sign OPENSSL_MANGLER(RSA_meth_set_sign)
# endif
#else
# ifndef _RSA_meth_set_sign
#  define _RSA_meth_set_sign OPENSSL_MANGLER_ASM(RSA_meth_set_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_meth_set_verify
#  define RSA_meth_set_verify OPENSSL_MANGLER(RSA_meth_set_verify)
# endif
#else
# ifndef _RSA_meth_set_verify
#  define _RSA_meth_set_verify OPENSSL_MANGLER_ASM(RSA_meth_set_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_new
#  define RSA_new OPENSSL_MANGLER(RSA_new)
# endif
#else
# ifndef _RSA_new
#  define _RSA_new OPENSSL_MANGLER_ASM(RSA_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_new_method
#  define RSA_new_method OPENSSL_MANGLER(RSA_new_method)
# endif
#else
# ifndef _RSA_new_method
#  define _RSA_new_method OPENSSL_MANGLER_ASM(RSA_new_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_null_method
#  define RSA_null_method OPENSSL_MANGLER(RSA_null_method)
# endif
#else
# ifndef _RSA_null_method
#  define _RSA_null_method OPENSSL_MANGLER_ASM(RSA_null_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_add_PKCS1_OAEP
#  define RSA_padding_add_PKCS1_OAEP OPENSSL_MANGLER(RSA_padding_add_PKCS1_OAEP)
# endif
#else
# ifndef _RSA_padding_add_PKCS1_OAEP
#  define _RSA_padding_add_PKCS1_OAEP OPENSSL_MANGLER_ASM(RSA_padding_add_PKCS1_OAEP)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_add_PKCS1_OAEP_mgf1
#  define RSA_padding_add_PKCS1_OAEP_mgf1 OPENSSL_MANGLER(RSA_padding_add_PKCS1_OAEP_mgf1)
# endif
#else
# ifndef _RSA_padding_add_PKCS1_OAEP_mgf1
#  define _RSA_padding_add_PKCS1_OAEP_mgf1 OPENSSL_MANGLER_ASM(RSA_padding_add_PKCS1_OAEP_mgf1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_add_PKCS1_PSS
#  define RSA_padding_add_PKCS1_PSS OPENSSL_MANGLER(RSA_padding_add_PKCS1_PSS)
# endif
#else
# ifndef _RSA_padding_add_PKCS1_PSS
#  define _RSA_padding_add_PKCS1_PSS OPENSSL_MANGLER_ASM(RSA_padding_add_PKCS1_PSS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_add_PKCS1_PSS_mgf1
#  define RSA_padding_add_PKCS1_PSS_mgf1 OPENSSL_MANGLER(RSA_padding_add_PKCS1_PSS_mgf1)
# endif
#else
# ifndef _RSA_padding_add_PKCS1_PSS_mgf1
#  define _RSA_padding_add_PKCS1_PSS_mgf1 OPENSSL_MANGLER_ASM(RSA_padding_add_PKCS1_PSS_mgf1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_add_PKCS1_type_1
#  define RSA_padding_add_PKCS1_type_1 OPENSSL_MANGLER(RSA_padding_add_PKCS1_type_1)
# endif
#else
# ifndef _RSA_padding_add_PKCS1_type_1
#  define _RSA_padding_add_PKCS1_type_1 OPENSSL_MANGLER_ASM(RSA_padding_add_PKCS1_type_1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_add_PKCS1_type_2
#  define RSA_padding_add_PKCS1_type_2 OPENSSL_MANGLER(RSA_padding_add_PKCS1_type_2)
# endif
#else
# ifndef _RSA_padding_add_PKCS1_type_2
#  define _RSA_padding_add_PKCS1_type_2 OPENSSL_MANGLER_ASM(RSA_padding_add_PKCS1_type_2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_add_X931
#  define RSA_padding_add_X931 OPENSSL_MANGLER(RSA_padding_add_X931)
# endif
#else
# ifndef _RSA_padding_add_X931
#  define _RSA_padding_add_X931 OPENSSL_MANGLER_ASM(RSA_padding_add_X931)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_add_none
#  define RSA_padding_add_none OPENSSL_MANGLER(RSA_padding_add_none)
# endif
#else
# ifndef _RSA_padding_add_none
#  define _RSA_padding_add_none OPENSSL_MANGLER_ASM(RSA_padding_add_none)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_check_PKCS1_OAEP
#  define RSA_padding_check_PKCS1_OAEP OPENSSL_MANGLER(RSA_padding_check_PKCS1_OAEP)
# endif
#else
# ifndef _RSA_padding_check_PKCS1_OAEP
#  define _RSA_padding_check_PKCS1_OAEP OPENSSL_MANGLER_ASM(RSA_padding_check_PKCS1_OAEP)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_check_PKCS1_OAEP_mgf1
#  define RSA_padding_check_PKCS1_OAEP_mgf1 OPENSSL_MANGLER(RSA_padding_check_PKCS1_OAEP_mgf1)
# endif
#else
# ifndef _RSA_padding_check_PKCS1_OAEP_mgf1
#  define _RSA_padding_check_PKCS1_OAEP_mgf1 OPENSSL_MANGLER_ASM(RSA_padding_check_PKCS1_OAEP_mgf1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_check_PKCS1_type_1
#  define RSA_padding_check_PKCS1_type_1 OPENSSL_MANGLER(RSA_padding_check_PKCS1_type_1)
# endif
#else
# ifndef _RSA_padding_check_PKCS1_type_1
#  define _RSA_padding_check_PKCS1_type_1 OPENSSL_MANGLER_ASM(RSA_padding_check_PKCS1_type_1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_check_PKCS1_type_2
#  define RSA_padding_check_PKCS1_type_2 OPENSSL_MANGLER(RSA_padding_check_PKCS1_type_2)
# endif
#else
# ifndef _RSA_padding_check_PKCS1_type_2
#  define _RSA_padding_check_PKCS1_type_2 OPENSSL_MANGLER_ASM(RSA_padding_check_PKCS1_type_2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_check_X931
#  define RSA_padding_check_X931 OPENSSL_MANGLER(RSA_padding_check_X931)
# endif
#else
# ifndef _RSA_padding_check_X931
#  define _RSA_padding_check_X931 OPENSSL_MANGLER_ASM(RSA_padding_check_X931)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_padding_check_none
#  define RSA_padding_check_none OPENSSL_MANGLER(RSA_padding_check_none)
# endif
#else
# ifndef _RSA_padding_check_none
#  define _RSA_padding_check_none OPENSSL_MANGLER_ASM(RSA_padding_check_none)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_pkey_ctx_ctrl
#  define RSA_pkey_ctx_ctrl OPENSSL_MANGLER(RSA_pkey_ctx_ctrl)
# endif
#else
# ifndef _RSA_pkey_ctx_ctrl
#  define _RSA_pkey_ctx_ctrl OPENSSL_MANGLER_ASM(RSA_pkey_ctx_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_print
#  define RSA_print OPENSSL_MANGLER(RSA_print)
# endif
#else
# ifndef _RSA_print
#  define _RSA_print OPENSSL_MANGLER_ASM(RSA_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_print_fp
#  define RSA_print_fp OPENSSL_MANGLER(RSA_print_fp)
# endif
#else
# ifndef _RSA_print_fp
#  define _RSA_print_fp OPENSSL_MANGLER_ASM(RSA_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_private_decrypt
#  define RSA_private_decrypt OPENSSL_MANGLER(RSA_private_decrypt)
# endif
#else
# ifndef _RSA_private_decrypt
#  define _RSA_private_decrypt OPENSSL_MANGLER_ASM(RSA_private_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_private_encrypt
#  define RSA_private_encrypt OPENSSL_MANGLER(RSA_private_encrypt)
# endif
#else
# ifndef _RSA_private_encrypt
#  define _RSA_private_encrypt OPENSSL_MANGLER_ASM(RSA_private_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_public_decrypt
#  define RSA_public_decrypt OPENSSL_MANGLER(RSA_public_decrypt)
# endif
#else
# ifndef _RSA_public_decrypt
#  define _RSA_public_decrypt OPENSSL_MANGLER_ASM(RSA_public_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_public_encrypt
#  define RSA_public_encrypt OPENSSL_MANGLER(RSA_public_encrypt)
# endif
#else
# ifndef _RSA_public_encrypt
#  define _RSA_public_encrypt OPENSSL_MANGLER_ASM(RSA_public_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_security_bits
#  define RSA_security_bits OPENSSL_MANGLER(RSA_security_bits)
# endif
#else
# ifndef _RSA_security_bits
#  define _RSA_security_bits OPENSSL_MANGLER_ASM(RSA_security_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_set0_crt_params
#  define RSA_set0_crt_params OPENSSL_MANGLER(RSA_set0_crt_params)
# endif
#else
# ifndef _RSA_set0_crt_params
#  define _RSA_set0_crt_params OPENSSL_MANGLER_ASM(RSA_set0_crt_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_set0_factors
#  define RSA_set0_factors OPENSSL_MANGLER(RSA_set0_factors)
# endif
#else
# ifndef _RSA_set0_factors
#  define _RSA_set0_factors OPENSSL_MANGLER_ASM(RSA_set0_factors)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_set0_key
#  define RSA_set0_key OPENSSL_MANGLER(RSA_set0_key)
# endif
#else
# ifndef _RSA_set0_key
#  define _RSA_set0_key OPENSSL_MANGLER_ASM(RSA_set0_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_set0_multi_prime_params
#  define RSA_set0_multi_prime_params OPENSSL_MANGLER(RSA_set0_multi_prime_params)
# endif
#else
# ifndef _RSA_set0_multi_prime_params
#  define _RSA_set0_multi_prime_params OPENSSL_MANGLER_ASM(RSA_set0_multi_prime_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_set_default_method
#  define RSA_set_default_method OPENSSL_MANGLER(RSA_set_default_method)
# endif
#else
# ifndef _RSA_set_default_method
#  define _RSA_set_default_method OPENSSL_MANGLER_ASM(RSA_set_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_set_ex_data
#  define RSA_set_ex_data OPENSSL_MANGLER(RSA_set_ex_data)
# endif
#else
# ifndef _RSA_set_ex_data
#  define _RSA_set_ex_data OPENSSL_MANGLER_ASM(RSA_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_set_flags
#  define RSA_set_flags OPENSSL_MANGLER(RSA_set_flags)
# endif
#else
# ifndef _RSA_set_flags
#  define _RSA_set_flags OPENSSL_MANGLER_ASM(RSA_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_set_method
#  define RSA_set_method OPENSSL_MANGLER(RSA_set_method)
# endif
#else
# ifndef _RSA_set_method
#  define _RSA_set_method OPENSSL_MANGLER_ASM(RSA_set_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_setup_blinding
#  define RSA_setup_blinding OPENSSL_MANGLER(RSA_setup_blinding)
# endif
#else
# ifndef _RSA_setup_blinding
#  define _RSA_setup_blinding OPENSSL_MANGLER_ASM(RSA_setup_blinding)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_sign
#  define RSA_sign OPENSSL_MANGLER(RSA_sign)
# endif
#else
# ifndef _RSA_sign
#  define _RSA_sign OPENSSL_MANGLER_ASM(RSA_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_sign_ASN1_OCTET_STRING
#  define RSA_sign_ASN1_OCTET_STRING OPENSSL_MANGLER(RSA_sign_ASN1_OCTET_STRING)
# endif
#else
# ifndef _RSA_sign_ASN1_OCTET_STRING
#  define _RSA_sign_ASN1_OCTET_STRING OPENSSL_MANGLER_ASM(RSA_sign_ASN1_OCTET_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_size
#  define RSA_size OPENSSL_MANGLER(RSA_size)
# endif
#else
# ifndef _RSA_size
#  define _RSA_size OPENSSL_MANGLER_ASM(RSA_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_test_flags
#  define RSA_test_flags OPENSSL_MANGLER(RSA_test_flags)
# endif
#else
# ifndef _RSA_test_flags
#  define _RSA_test_flags OPENSSL_MANGLER_ASM(RSA_test_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_up_ref
#  define RSA_up_ref OPENSSL_MANGLER(RSA_up_ref)
# endif
#else
# ifndef _RSA_up_ref
#  define _RSA_up_ref OPENSSL_MANGLER_ASM(RSA_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_verify
#  define RSA_verify OPENSSL_MANGLER(RSA_verify)
# endif
#else
# ifndef _RSA_verify
#  define _RSA_verify OPENSSL_MANGLER_ASM(RSA_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_verify_ASN1_OCTET_STRING
#  define RSA_verify_ASN1_OCTET_STRING OPENSSL_MANGLER(RSA_verify_ASN1_OCTET_STRING)
# endif
#else
# ifndef _RSA_verify_ASN1_OCTET_STRING
#  define _RSA_verify_ASN1_OCTET_STRING OPENSSL_MANGLER_ASM(RSA_verify_ASN1_OCTET_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_verify_PKCS1_PSS
#  define RSA_verify_PKCS1_PSS OPENSSL_MANGLER(RSA_verify_PKCS1_PSS)
# endif
#else
# ifndef _RSA_verify_PKCS1_PSS
#  define _RSA_verify_PKCS1_PSS OPENSSL_MANGLER_ASM(RSA_verify_PKCS1_PSS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef RSA_verify_PKCS1_PSS_mgf1
#  define RSA_verify_PKCS1_PSS_mgf1 OPENSSL_MANGLER(RSA_verify_PKCS1_PSS_mgf1)
# endif
#else
# ifndef _RSA_verify_PKCS1_PSS_mgf1
#  define _RSA_verify_PKCS1_PSS_mgf1 OPENSSL_MANGLER_ASM(RSA_verify_PKCS1_PSS_mgf1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCRYPT_PARAMS_free
#  define SCRYPT_PARAMS_free OPENSSL_MANGLER(SCRYPT_PARAMS_free)
# endif
#else
# ifndef _SCRYPT_PARAMS_free
#  define _SCRYPT_PARAMS_free OPENSSL_MANGLER_ASM(SCRYPT_PARAMS_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCRYPT_PARAMS_it
#  define SCRYPT_PARAMS_it OPENSSL_MANGLER(SCRYPT_PARAMS_it)
# endif
#else
# ifndef _SCRYPT_PARAMS_it
#  define _SCRYPT_PARAMS_it OPENSSL_MANGLER_ASM(SCRYPT_PARAMS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCRYPT_PARAMS_new
#  define SCRYPT_PARAMS_new OPENSSL_MANGLER(SCRYPT_PARAMS_new)
# endif
#else
# ifndef _SCRYPT_PARAMS_new
#  define _SCRYPT_PARAMS_new OPENSSL_MANGLER_ASM(SCRYPT_PARAMS_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_CTX_free
#  define SCT_CTX_free OPENSSL_MANGLER(SCT_CTX_free)
# endif
#else
# ifndef _SCT_CTX_free
#  define _SCT_CTX_free OPENSSL_MANGLER_ASM(SCT_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_CTX_new
#  define SCT_CTX_new OPENSSL_MANGLER(SCT_CTX_new)
# endif
#else
# ifndef _SCT_CTX_new
#  define _SCT_CTX_new OPENSSL_MANGLER_ASM(SCT_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_CTX_set1_cert
#  define SCT_CTX_set1_cert OPENSSL_MANGLER(SCT_CTX_set1_cert)
# endif
#else
# ifndef _SCT_CTX_set1_cert
#  define _SCT_CTX_set1_cert OPENSSL_MANGLER_ASM(SCT_CTX_set1_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_CTX_set1_issuer
#  define SCT_CTX_set1_issuer OPENSSL_MANGLER(SCT_CTX_set1_issuer)
# endif
#else
# ifndef _SCT_CTX_set1_issuer
#  define _SCT_CTX_set1_issuer OPENSSL_MANGLER_ASM(SCT_CTX_set1_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_CTX_set1_issuer_pubkey
#  define SCT_CTX_set1_issuer_pubkey OPENSSL_MANGLER(SCT_CTX_set1_issuer_pubkey)
# endif
#else
# ifndef _SCT_CTX_set1_issuer_pubkey
#  define _SCT_CTX_set1_issuer_pubkey OPENSSL_MANGLER_ASM(SCT_CTX_set1_issuer_pubkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_CTX_set1_pubkey
#  define SCT_CTX_set1_pubkey OPENSSL_MANGLER(SCT_CTX_set1_pubkey)
# endif
#else
# ifndef _SCT_CTX_set1_pubkey
#  define _SCT_CTX_set1_pubkey OPENSSL_MANGLER_ASM(SCT_CTX_set1_pubkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_CTX_set_time
#  define SCT_CTX_set_time OPENSSL_MANGLER(SCT_CTX_set_time)
# endif
#else
# ifndef _SCT_CTX_set_time
#  define _SCT_CTX_set_time OPENSSL_MANGLER_ASM(SCT_CTX_set_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_CTX_verify
#  define SCT_CTX_verify OPENSSL_MANGLER(SCT_CTX_verify)
# endif
#else
# ifndef _SCT_CTX_verify
#  define _SCT_CTX_verify OPENSSL_MANGLER_ASM(SCT_CTX_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_LIST_free
#  define SCT_LIST_free OPENSSL_MANGLER(SCT_LIST_free)
# endif
#else
# ifndef _SCT_LIST_free
#  define _SCT_LIST_free OPENSSL_MANGLER_ASM(SCT_LIST_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_LIST_print
#  define SCT_LIST_print OPENSSL_MANGLER(SCT_LIST_print)
# endif
#else
# ifndef _SCT_LIST_print
#  define _SCT_LIST_print OPENSSL_MANGLER_ASM(SCT_LIST_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_LIST_validate
#  define SCT_LIST_validate OPENSSL_MANGLER(SCT_LIST_validate)
# endif
#else
# ifndef _SCT_LIST_validate
#  define _SCT_LIST_validate OPENSSL_MANGLER_ASM(SCT_LIST_validate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_free
#  define SCT_free OPENSSL_MANGLER(SCT_free)
# endif
#else
# ifndef _SCT_free
#  define _SCT_free OPENSSL_MANGLER_ASM(SCT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_get0_extensions
#  define SCT_get0_extensions OPENSSL_MANGLER(SCT_get0_extensions)
# endif
#else
# ifndef _SCT_get0_extensions
#  define _SCT_get0_extensions OPENSSL_MANGLER_ASM(SCT_get0_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_get0_log_id
#  define SCT_get0_log_id OPENSSL_MANGLER(SCT_get0_log_id)
# endif
#else
# ifndef _SCT_get0_log_id
#  define _SCT_get0_log_id OPENSSL_MANGLER_ASM(SCT_get0_log_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_get0_signature
#  define SCT_get0_signature OPENSSL_MANGLER(SCT_get0_signature)
# endif
#else
# ifndef _SCT_get0_signature
#  define _SCT_get0_signature OPENSSL_MANGLER_ASM(SCT_get0_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_get_log_entry_type
#  define SCT_get_log_entry_type OPENSSL_MANGLER(SCT_get_log_entry_type)
# endif
#else
# ifndef _SCT_get_log_entry_type
#  define _SCT_get_log_entry_type OPENSSL_MANGLER_ASM(SCT_get_log_entry_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_get_signature_nid
#  define SCT_get_signature_nid OPENSSL_MANGLER(SCT_get_signature_nid)
# endif
#else
# ifndef _SCT_get_signature_nid
#  define _SCT_get_signature_nid OPENSSL_MANGLER_ASM(SCT_get_signature_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_get_source
#  define SCT_get_source OPENSSL_MANGLER(SCT_get_source)
# endif
#else
# ifndef _SCT_get_source
#  define _SCT_get_source OPENSSL_MANGLER_ASM(SCT_get_source)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_get_timestamp
#  define SCT_get_timestamp OPENSSL_MANGLER(SCT_get_timestamp)
# endif
#else
# ifndef _SCT_get_timestamp
#  define _SCT_get_timestamp OPENSSL_MANGLER_ASM(SCT_get_timestamp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_get_validation_status
#  define SCT_get_validation_status OPENSSL_MANGLER(SCT_get_validation_status)
# endif
#else
# ifndef _SCT_get_validation_status
#  define _SCT_get_validation_status OPENSSL_MANGLER_ASM(SCT_get_validation_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_get_version
#  define SCT_get_version OPENSSL_MANGLER(SCT_get_version)
# endif
#else
# ifndef _SCT_get_version
#  define _SCT_get_version OPENSSL_MANGLER_ASM(SCT_get_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_is_complete
#  define SCT_is_complete OPENSSL_MANGLER(SCT_is_complete)
# endif
#else
# ifndef _SCT_is_complete
#  define _SCT_is_complete OPENSSL_MANGLER_ASM(SCT_is_complete)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_new
#  define SCT_new OPENSSL_MANGLER(SCT_new)
# endif
#else
# ifndef _SCT_new
#  define _SCT_new OPENSSL_MANGLER_ASM(SCT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_new_from_base64
#  define SCT_new_from_base64 OPENSSL_MANGLER(SCT_new_from_base64)
# endif
#else
# ifndef _SCT_new_from_base64
#  define _SCT_new_from_base64 OPENSSL_MANGLER_ASM(SCT_new_from_base64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_print
#  define SCT_print OPENSSL_MANGLER(SCT_print)
# endif
#else
# ifndef _SCT_print
#  define _SCT_print OPENSSL_MANGLER_ASM(SCT_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_set0_extensions
#  define SCT_set0_extensions OPENSSL_MANGLER(SCT_set0_extensions)
# endif
#else
# ifndef _SCT_set0_extensions
#  define _SCT_set0_extensions OPENSSL_MANGLER_ASM(SCT_set0_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_set0_log_id
#  define SCT_set0_log_id OPENSSL_MANGLER(SCT_set0_log_id)
# endif
#else
# ifndef _SCT_set0_log_id
#  define _SCT_set0_log_id OPENSSL_MANGLER_ASM(SCT_set0_log_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_set0_signature
#  define SCT_set0_signature OPENSSL_MANGLER(SCT_set0_signature)
# endif
#else
# ifndef _SCT_set0_signature
#  define _SCT_set0_signature OPENSSL_MANGLER_ASM(SCT_set0_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_set1_extensions
#  define SCT_set1_extensions OPENSSL_MANGLER(SCT_set1_extensions)
# endif
#else
# ifndef _SCT_set1_extensions
#  define _SCT_set1_extensions OPENSSL_MANGLER_ASM(SCT_set1_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_set1_log_id
#  define SCT_set1_log_id OPENSSL_MANGLER(SCT_set1_log_id)
# endif
#else
# ifndef _SCT_set1_log_id
#  define _SCT_set1_log_id OPENSSL_MANGLER_ASM(SCT_set1_log_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_set1_signature
#  define SCT_set1_signature OPENSSL_MANGLER(SCT_set1_signature)
# endif
#else
# ifndef _SCT_set1_signature
#  define _SCT_set1_signature OPENSSL_MANGLER_ASM(SCT_set1_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_set_log_entry_type
#  define SCT_set_log_entry_type OPENSSL_MANGLER(SCT_set_log_entry_type)
# endif
#else
# ifndef _SCT_set_log_entry_type
#  define _SCT_set_log_entry_type OPENSSL_MANGLER_ASM(SCT_set_log_entry_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_set_signature_nid
#  define SCT_set_signature_nid OPENSSL_MANGLER(SCT_set_signature_nid)
# endif
#else
# ifndef _SCT_set_signature_nid
#  define _SCT_set_signature_nid OPENSSL_MANGLER_ASM(SCT_set_signature_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_set_source
#  define SCT_set_source OPENSSL_MANGLER(SCT_set_source)
# endif
#else
# ifndef _SCT_set_source
#  define _SCT_set_source OPENSSL_MANGLER_ASM(SCT_set_source)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_set_timestamp
#  define SCT_set_timestamp OPENSSL_MANGLER(SCT_set_timestamp)
# endif
#else
# ifndef _SCT_set_timestamp
#  define _SCT_set_timestamp OPENSSL_MANGLER_ASM(SCT_set_timestamp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_set_version
#  define SCT_set_version OPENSSL_MANGLER(SCT_set_version)
# endif
#else
# ifndef _SCT_set_version
#  define _SCT_set_version OPENSSL_MANGLER_ASM(SCT_set_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_signature_is_complete
#  define SCT_signature_is_complete OPENSSL_MANGLER(SCT_signature_is_complete)
# endif
#else
# ifndef _SCT_signature_is_complete
#  define _SCT_signature_is_complete OPENSSL_MANGLER_ASM(SCT_signature_is_complete)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_validate
#  define SCT_validate OPENSSL_MANGLER(SCT_validate)
# endif
#else
# ifndef _SCT_validate
#  define _SCT_validate OPENSSL_MANGLER_ASM(SCT_validate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SCT_validation_status_string
#  define SCT_validation_status_string OPENSSL_MANGLER(SCT_validation_status_string)
# endif
#else
# ifndef _SCT_validation_status_string
#  define _SCT_validation_status_string OPENSSL_MANGLER_ASM(SCT_validation_status_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SEED_cbc_encrypt
#  define SEED_cbc_encrypt OPENSSL_MANGLER(SEED_cbc_encrypt)
# endif
#else
# ifndef _SEED_cbc_encrypt
#  define _SEED_cbc_encrypt OPENSSL_MANGLER_ASM(SEED_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SEED_cfb128_encrypt
#  define SEED_cfb128_encrypt OPENSSL_MANGLER(SEED_cfb128_encrypt)
# endif
#else
# ifndef _SEED_cfb128_encrypt
#  define _SEED_cfb128_encrypt OPENSSL_MANGLER_ASM(SEED_cfb128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SEED_decrypt
#  define SEED_decrypt OPENSSL_MANGLER(SEED_decrypt)
# endif
#else
# ifndef _SEED_decrypt
#  define _SEED_decrypt OPENSSL_MANGLER_ASM(SEED_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SEED_ecb_encrypt
#  define SEED_ecb_encrypt OPENSSL_MANGLER(SEED_ecb_encrypt)
# endif
#else
# ifndef _SEED_ecb_encrypt
#  define _SEED_ecb_encrypt OPENSSL_MANGLER_ASM(SEED_ecb_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SEED_encrypt
#  define SEED_encrypt OPENSSL_MANGLER(SEED_encrypt)
# endif
#else
# ifndef _SEED_encrypt
#  define _SEED_encrypt OPENSSL_MANGLER_ASM(SEED_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SEED_ofb128_encrypt
#  define SEED_ofb128_encrypt OPENSSL_MANGLER(SEED_ofb128_encrypt)
# endif
#else
# ifndef _SEED_ofb128_encrypt
#  define _SEED_ofb128_encrypt OPENSSL_MANGLER_ASM(SEED_ofb128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SEED_set_key
#  define SEED_set_key OPENSSL_MANGLER(SEED_set_key)
# endif
#else
# ifndef _SEED_set_key
#  define _SEED_set_key OPENSSL_MANGLER_ASM(SEED_set_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA1
#  define SHA1 OPENSSL_MANGLER(SHA1)
# endif
#else
# ifndef _SHA1
#  define _SHA1 OPENSSL_MANGLER_ASM(SHA1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA1_Final
#  define SHA1_Final OPENSSL_MANGLER(SHA1_Final)
# endif
#else
# ifndef _SHA1_Final
#  define _SHA1_Final OPENSSL_MANGLER_ASM(SHA1_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA1_Init
#  define SHA1_Init OPENSSL_MANGLER(SHA1_Init)
# endif
#else
# ifndef _SHA1_Init
#  define _SHA1_Init OPENSSL_MANGLER_ASM(SHA1_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA1_Transform
#  define SHA1_Transform OPENSSL_MANGLER(SHA1_Transform)
# endif
#else
# ifndef _SHA1_Transform
#  define _SHA1_Transform OPENSSL_MANGLER_ASM(SHA1_Transform)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA1_Update
#  define SHA1_Update OPENSSL_MANGLER(SHA1_Update)
# endif
#else
# ifndef _SHA1_Update
#  define _SHA1_Update OPENSSL_MANGLER_ASM(SHA1_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA224
#  define SHA224 OPENSSL_MANGLER(SHA224)
# endif
#else
# ifndef _SHA224
#  define _SHA224 OPENSSL_MANGLER_ASM(SHA224)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA224_Final
#  define SHA224_Final OPENSSL_MANGLER(SHA224_Final)
# endif
#else
# ifndef _SHA224_Final
#  define _SHA224_Final OPENSSL_MANGLER_ASM(SHA224_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA224_Init
#  define SHA224_Init OPENSSL_MANGLER(SHA224_Init)
# endif
#else
# ifndef _SHA224_Init
#  define _SHA224_Init OPENSSL_MANGLER_ASM(SHA224_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA224_Update
#  define SHA224_Update OPENSSL_MANGLER(SHA224_Update)
# endif
#else
# ifndef _SHA224_Update
#  define _SHA224_Update OPENSSL_MANGLER_ASM(SHA224_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA256
#  define SHA256 OPENSSL_MANGLER(SHA256)
# endif
#else
# ifndef _SHA256
#  define _SHA256 OPENSSL_MANGLER_ASM(SHA256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA256_Final
#  define SHA256_Final OPENSSL_MANGLER(SHA256_Final)
# endif
#else
# ifndef _SHA256_Final
#  define _SHA256_Final OPENSSL_MANGLER_ASM(SHA256_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA256_Init
#  define SHA256_Init OPENSSL_MANGLER(SHA256_Init)
# endif
#else
# ifndef _SHA256_Init
#  define _SHA256_Init OPENSSL_MANGLER_ASM(SHA256_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA256_Transform
#  define SHA256_Transform OPENSSL_MANGLER(SHA256_Transform)
# endif
#else
# ifndef _SHA256_Transform
#  define _SHA256_Transform OPENSSL_MANGLER_ASM(SHA256_Transform)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA256_Update
#  define SHA256_Update OPENSSL_MANGLER(SHA256_Update)
# endif
#else
# ifndef _SHA256_Update
#  define _SHA256_Update OPENSSL_MANGLER_ASM(SHA256_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA384
#  define SHA384 OPENSSL_MANGLER(SHA384)
# endif
#else
# ifndef _SHA384
#  define _SHA384 OPENSSL_MANGLER_ASM(SHA384)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA384_Final
#  define SHA384_Final OPENSSL_MANGLER(SHA384_Final)
# endif
#else
# ifndef _SHA384_Final
#  define _SHA384_Final OPENSSL_MANGLER_ASM(SHA384_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA384_Init
#  define SHA384_Init OPENSSL_MANGLER(SHA384_Init)
# endif
#else
# ifndef _SHA384_Init
#  define _SHA384_Init OPENSSL_MANGLER_ASM(SHA384_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA384_Update
#  define SHA384_Update OPENSSL_MANGLER(SHA384_Update)
# endif
#else
# ifndef _SHA384_Update
#  define _SHA384_Update OPENSSL_MANGLER_ASM(SHA384_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA3_absorb
#  define SHA3_absorb OPENSSL_MANGLER(SHA3_absorb)
# endif
#else
# ifndef _SHA3_absorb
#  define _SHA3_absorb OPENSSL_MANGLER_ASM(SHA3_absorb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA3_squeeze
#  define SHA3_squeeze OPENSSL_MANGLER(SHA3_squeeze)
# endif
#else
# ifndef _SHA3_squeeze
#  define _SHA3_squeeze OPENSSL_MANGLER_ASM(SHA3_squeeze)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA512
#  define SHA512 OPENSSL_MANGLER(SHA512)
# endif
#else
# ifndef _SHA512
#  define _SHA512 OPENSSL_MANGLER_ASM(SHA512)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA512_Final
#  define SHA512_Final OPENSSL_MANGLER(SHA512_Final)
# endif
#else
# ifndef _SHA512_Final
#  define _SHA512_Final OPENSSL_MANGLER_ASM(SHA512_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA512_Init
#  define SHA512_Init OPENSSL_MANGLER(SHA512_Init)
# endif
#else
# ifndef _SHA512_Init
#  define _SHA512_Init OPENSSL_MANGLER_ASM(SHA512_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA512_Transform
#  define SHA512_Transform OPENSSL_MANGLER(SHA512_Transform)
# endif
#else
# ifndef _SHA512_Transform
#  define _SHA512_Transform OPENSSL_MANGLER_ASM(SHA512_Transform)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SHA512_Update
#  define SHA512_Update OPENSSL_MANGLER(SHA512_Update)
# endif
#else
# ifndef _SHA512_Update
#  define _SHA512_Update OPENSSL_MANGLER_ASM(SHA512_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_crlf_copy
#  define SMIME_crlf_copy OPENSSL_MANGLER(SMIME_crlf_copy)
# endif
#else
# ifndef _SMIME_crlf_copy
#  define _SMIME_crlf_copy OPENSSL_MANGLER_ASM(SMIME_crlf_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_read_ASN1
#  define SMIME_read_ASN1 OPENSSL_MANGLER(SMIME_read_ASN1)
# endif
#else
# ifndef _SMIME_read_ASN1
#  define _SMIME_read_ASN1 OPENSSL_MANGLER_ASM(SMIME_read_ASN1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_read_ASN1_ex
#  define SMIME_read_ASN1_ex OPENSSL_MANGLER(SMIME_read_ASN1_ex)
# endif
#else
# ifndef _SMIME_read_ASN1_ex
#  define _SMIME_read_ASN1_ex OPENSSL_MANGLER_ASM(SMIME_read_ASN1_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_read_CMS
#  define SMIME_read_CMS OPENSSL_MANGLER(SMIME_read_CMS)
# endif
#else
# ifndef _SMIME_read_CMS
#  define _SMIME_read_CMS OPENSSL_MANGLER_ASM(SMIME_read_CMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_read_CMS_ex
#  define SMIME_read_CMS_ex OPENSSL_MANGLER(SMIME_read_CMS_ex)
# endif
#else
# ifndef _SMIME_read_CMS_ex
#  define _SMIME_read_CMS_ex OPENSSL_MANGLER_ASM(SMIME_read_CMS_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_read_PKCS7
#  define SMIME_read_PKCS7 OPENSSL_MANGLER(SMIME_read_PKCS7)
# endif
#else
# ifndef _SMIME_read_PKCS7
#  define _SMIME_read_PKCS7 OPENSSL_MANGLER_ASM(SMIME_read_PKCS7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_read_PKCS7_ex
#  define SMIME_read_PKCS7_ex OPENSSL_MANGLER(SMIME_read_PKCS7_ex)
# endif
#else
# ifndef _SMIME_read_PKCS7_ex
#  define _SMIME_read_PKCS7_ex OPENSSL_MANGLER_ASM(SMIME_read_PKCS7_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_text
#  define SMIME_text OPENSSL_MANGLER(SMIME_text)
# endif
#else
# ifndef _SMIME_text
#  define _SMIME_text OPENSSL_MANGLER_ASM(SMIME_text)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_write_ASN1
#  define SMIME_write_ASN1 OPENSSL_MANGLER(SMIME_write_ASN1)
# endif
#else
# ifndef _SMIME_write_ASN1
#  define _SMIME_write_ASN1 OPENSSL_MANGLER_ASM(SMIME_write_ASN1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_write_ASN1_ex
#  define SMIME_write_ASN1_ex OPENSSL_MANGLER(SMIME_write_ASN1_ex)
# endif
#else
# ifndef _SMIME_write_ASN1_ex
#  define _SMIME_write_ASN1_ex OPENSSL_MANGLER_ASM(SMIME_write_ASN1_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_write_CMS
#  define SMIME_write_CMS OPENSSL_MANGLER(SMIME_write_CMS)
# endif
#else
# ifndef _SMIME_write_CMS
#  define _SMIME_write_CMS OPENSSL_MANGLER_ASM(SMIME_write_CMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SMIME_write_PKCS7
#  define SMIME_write_PKCS7 OPENSSL_MANGLER(SMIME_write_PKCS7)
# endif
#else
# ifndef _SMIME_write_PKCS7
#  define _SMIME_write_PKCS7 OPENSSL_MANGLER_ASM(SMIME_write_PKCS7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Calc_A
#  define SRP_Calc_A OPENSSL_MANGLER(SRP_Calc_A)
# endif
#else
# ifndef _SRP_Calc_A
#  define _SRP_Calc_A OPENSSL_MANGLER_ASM(SRP_Calc_A)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Calc_A_param
#  define SRP_Calc_A_param OPENSSL_MANGLER(SRP_Calc_A_param)
# endif
#else
# ifndef _SRP_Calc_A_param
#  define _SRP_Calc_A_param OPENSSL_MANGLER_ASM(SRP_Calc_A_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Calc_B
#  define SRP_Calc_B OPENSSL_MANGLER(SRP_Calc_B)
# endif
#else
# ifndef _SRP_Calc_B
#  define _SRP_Calc_B OPENSSL_MANGLER_ASM(SRP_Calc_B)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Calc_B_ex
#  define SRP_Calc_B_ex OPENSSL_MANGLER(SRP_Calc_B_ex)
# endif
#else
# ifndef _SRP_Calc_B_ex
#  define _SRP_Calc_B_ex OPENSSL_MANGLER_ASM(SRP_Calc_B_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Calc_client_key
#  define SRP_Calc_client_key OPENSSL_MANGLER(SRP_Calc_client_key)
# endif
#else
# ifndef _SRP_Calc_client_key
#  define _SRP_Calc_client_key OPENSSL_MANGLER_ASM(SRP_Calc_client_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Calc_client_key_ex
#  define SRP_Calc_client_key_ex OPENSSL_MANGLER(SRP_Calc_client_key_ex)
# endif
#else
# ifndef _SRP_Calc_client_key_ex
#  define _SRP_Calc_client_key_ex OPENSSL_MANGLER_ASM(SRP_Calc_client_key_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Calc_server_key
#  define SRP_Calc_server_key OPENSSL_MANGLER(SRP_Calc_server_key)
# endif
#else
# ifndef _SRP_Calc_server_key
#  define _SRP_Calc_server_key OPENSSL_MANGLER_ASM(SRP_Calc_server_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Calc_u
#  define SRP_Calc_u OPENSSL_MANGLER(SRP_Calc_u)
# endif
#else
# ifndef _SRP_Calc_u
#  define _SRP_Calc_u OPENSSL_MANGLER_ASM(SRP_Calc_u)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Calc_u_ex
#  define SRP_Calc_u_ex OPENSSL_MANGLER(SRP_Calc_u_ex)
# endif
#else
# ifndef _SRP_Calc_u_ex
#  define _SRP_Calc_u_ex OPENSSL_MANGLER_ASM(SRP_Calc_u_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Calc_x
#  define SRP_Calc_x OPENSSL_MANGLER(SRP_Calc_x)
# endif
#else
# ifndef _SRP_Calc_x
#  define _SRP_Calc_x OPENSSL_MANGLER_ASM(SRP_Calc_x)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Calc_x_ex
#  define SRP_Calc_x_ex OPENSSL_MANGLER(SRP_Calc_x_ex)
# endif
#else
# ifndef _SRP_Calc_x_ex
#  define _SRP_Calc_x_ex OPENSSL_MANGLER_ASM(SRP_Calc_x_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_VBASE_add0_user
#  define SRP_VBASE_add0_user OPENSSL_MANGLER(SRP_VBASE_add0_user)
# endif
#else
# ifndef _SRP_VBASE_add0_user
#  define _SRP_VBASE_add0_user OPENSSL_MANGLER_ASM(SRP_VBASE_add0_user)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_VBASE_free
#  define SRP_VBASE_free OPENSSL_MANGLER(SRP_VBASE_free)
# endif
#else
# ifndef _SRP_VBASE_free
#  define _SRP_VBASE_free OPENSSL_MANGLER_ASM(SRP_VBASE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_VBASE_get1_by_user
#  define SRP_VBASE_get1_by_user OPENSSL_MANGLER(SRP_VBASE_get1_by_user)
# endif
#else
# ifndef _SRP_VBASE_get1_by_user
#  define _SRP_VBASE_get1_by_user OPENSSL_MANGLER_ASM(SRP_VBASE_get1_by_user)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_VBASE_init
#  define SRP_VBASE_init OPENSSL_MANGLER(SRP_VBASE_init)
# endif
#else
# ifndef _SRP_VBASE_init
#  define _SRP_VBASE_init OPENSSL_MANGLER_ASM(SRP_VBASE_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_VBASE_new
#  define SRP_VBASE_new OPENSSL_MANGLER(SRP_VBASE_new)
# endif
#else
# ifndef _SRP_VBASE_new
#  define _SRP_VBASE_new OPENSSL_MANGLER_ASM(SRP_VBASE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Verify_A_mod_N
#  define SRP_Verify_A_mod_N OPENSSL_MANGLER(SRP_Verify_A_mod_N)
# endif
#else
# ifndef _SRP_Verify_A_mod_N
#  define _SRP_Verify_A_mod_N OPENSSL_MANGLER_ASM(SRP_Verify_A_mod_N)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_Verify_B_mod_N
#  define SRP_Verify_B_mod_N OPENSSL_MANGLER(SRP_Verify_B_mod_N)
# endif
#else
# ifndef _SRP_Verify_B_mod_N
#  define _SRP_Verify_B_mod_N OPENSSL_MANGLER_ASM(SRP_Verify_B_mod_N)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_check_known_gN_param
#  define SRP_check_known_gN_param OPENSSL_MANGLER(SRP_check_known_gN_param)
# endif
#else
# ifndef _SRP_check_known_gN_param
#  define _SRP_check_known_gN_param OPENSSL_MANGLER_ASM(SRP_check_known_gN_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_create_verifier
#  define SRP_create_verifier OPENSSL_MANGLER(SRP_create_verifier)
# endif
#else
# ifndef _SRP_create_verifier
#  define _SRP_create_verifier OPENSSL_MANGLER_ASM(SRP_create_verifier)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_create_verifier_BN
#  define SRP_create_verifier_BN OPENSSL_MANGLER(SRP_create_verifier_BN)
# endif
#else
# ifndef _SRP_create_verifier_BN
#  define _SRP_create_verifier_BN OPENSSL_MANGLER_ASM(SRP_create_verifier_BN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_create_verifier_BN_ex
#  define SRP_create_verifier_BN_ex OPENSSL_MANGLER(SRP_create_verifier_BN_ex)
# endif
#else
# ifndef _SRP_create_verifier_BN_ex
#  define _SRP_create_verifier_BN_ex OPENSSL_MANGLER_ASM(SRP_create_verifier_BN_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_create_verifier_ex
#  define SRP_create_verifier_ex OPENSSL_MANGLER(SRP_create_verifier_ex)
# endif
#else
# ifndef _SRP_create_verifier_ex
#  define _SRP_create_verifier_ex OPENSSL_MANGLER_ASM(SRP_create_verifier_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_get_default_gN
#  define SRP_get_default_gN OPENSSL_MANGLER(SRP_get_default_gN)
# endif
#else
# ifndef _SRP_get_default_gN
#  define _SRP_get_default_gN OPENSSL_MANGLER_ASM(SRP_get_default_gN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_user_pwd_free
#  define SRP_user_pwd_free OPENSSL_MANGLER(SRP_user_pwd_free)
# endif
#else
# ifndef _SRP_user_pwd_free
#  define _SRP_user_pwd_free OPENSSL_MANGLER_ASM(SRP_user_pwd_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_user_pwd_new
#  define SRP_user_pwd_new OPENSSL_MANGLER(SRP_user_pwd_new)
# endif
#else
# ifndef _SRP_user_pwd_new
#  define _SRP_user_pwd_new OPENSSL_MANGLER_ASM(SRP_user_pwd_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_user_pwd_set0_sv
#  define SRP_user_pwd_set0_sv OPENSSL_MANGLER(SRP_user_pwd_set0_sv)
# endif
#else
# ifndef _SRP_user_pwd_set0_sv
#  define _SRP_user_pwd_set0_sv OPENSSL_MANGLER_ASM(SRP_user_pwd_set0_sv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_user_pwd_set1_ids
#  define SRP_user_pwd_set1_ids OPENSSL_MANGLER(SRP_user_pwd_set1_ids)
# endif
#else
# ifndef _SRP_user_pwd_set1_ids
#  define _SRP_user_pwd_set1_ids OPENSSL_MANGLER_ASM(SRP_user_pwd_set1_ids)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SRP_user_pwd_set_gN
#  define SRP_user_pwd_set_gN OPENSSL_MANGLER(SRP_user_pwd_set_gN)
# endif
#else
# ifndef _SRP_user_pwd_set_gN
#  define _SRP_user_pwd_set_gN OPENSSL_MANGLER_ASM(SRP_user_pwd_set_gN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL3_BUFFER_clear
#  define SSL3_BUFFER_clear OPENSSL_MANGLER(SSL3_BUFFER_clear)
# endif
#else
# ifndef _SSL3_BUFFER_clear
#  define _SSL3_BUFFER_clear OPENSSL_MANGLER_ASM(SSL3_BUFFER_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL3_BUFFER_release
#  define SSL3_BUFFER_release OPENSSL_MANGLER(SSL3_BUFFER_release)
# endif
#else
# ifndef _SSL3_BUFFER_release
#  define _SSL3_BUFFER_release OPENSSL_MANGLER_ASM(SSL3_BUFFER_release)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL3_BUFFER_set_data
#  define SSL3_BUFFER_set_data OPENSSL_MANGLER(SSL3_BUFFER_set_data)
# endif
#else
# ifndef _SSL3_BUFFER_set_data
#  define _SSL3_BUFFER_set_data OPENSSL_MANGLER_ASM(SSL3_BUFFER_set_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL3_RECORD_clear
#  define SSL3_RECORD_clear OPENSSL_MANGLER(SSL3_RECORD_clear)
# endif
#else
# ifndef _SSL3_RECORD_clear
#  define _SSL3_RECORD_clear OPENSSL_MANGLER_ASM(SSL3_RECORD_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL3_RECORD_release
#  define SSL3_RECORD_release OPENSSL_MANGLER(SSL3_RECORD_release)
# endif
#else
# ifndef _SSL3_RECORD_release
#  define _SSL3_RECORD_release OPENSSL_MANGLER_ASM(SSL3_RECORD_release)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL3_RECORD_set_seq_num
#  define SSL3_RECORD_set_seq_num OPENSSL_MANGLER(SSL3_RECORD_set_seq_num)
# endif
#else
# ifndef _SSL3_RECORD_set_seq_num
#  define _SSL3_RECORD_set_seq_num OPENSSL_MANGLER_ASM(SSL3_RECORD_set_seq_num)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_description
#  define SSL_CIPHER_description OPENSSL_MANGLER(SSL_CIPHER_description)
# endif
#else
# ifndef _SSL_CIPHER_description
#  define _SSL_CIPHER_description OPENSSL_MANGLER_ASM(SSL_CIPHER_description)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_find
#  define SSL_CIPHER_find OPENSSL_MANGLER(SSL_CIPHER_find)
# endif
#else
# ifndef _SSL_CIPHER_find
#  define _SSL_CIPHER_find OPENSSL_MANGLER_ASM(SSL_CIPHER_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_get_auth_nid
#  define SSL_CIPHER_get_auth_nid OPENSSL_MANGLER(SSL_CIPHER_get_auth_nid)
# endif
#else
# ifndef _SSL_CIPHER_get_auth_nid
#  define _SSL_CIPHER_get_auth_nid OPENSSL_MANGLER_ASM(SSL_CIPHER_get_auth_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_get_bits
#  define SSL_CIPHER_get_bits OPENSSL_MANGLER(SSL_CIPHER_get_bits)
# endif
#else
# ifndef _SSL_CIPHER_get_bits
#  define _SSL_CIPHER_get_bits OPENSSL_MANGLER_ASM(SSL_CIPHER_get_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_get_cipher_nid
#  define SSL_CIPHER_get_cipher_nid OPENSSL_MANGLER(SSL_CIPHER_get_cipher_nid)
# endif
#else
# ifndef _SSL_CIPHER_get_cipher_nid
#  define _SSL_CIPHER_get_cipher_nid OPENSSL_MANGLER_ASM(SSL_CIPHER_get_cipher_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_get_digest_nid
#  define SSL_CIPHER_get_digest_nid OPENSSL_MANGLER(SSL_CIPHER_get_digest_nid)
# endif
#else
# ifndef _SSL_CIPHER_get_digest_nid
#  define _SSL_CIPHER_get_digest_nid OPENSSL_MANGLER_ASM(SSL_CIPHER_get_digest_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_get_handshake_digest
#  define SSL_CIPHER_get_handshake_digest OPENSSL_MANGLER(SSL_CIPHER_get_handshake_digest)
# endif
#else
# ifndef _SSL_CIPHER_get_handshake_digest
#  define _SSL_CIPHER_get_handshake_digest OPENSSL_MANGLER_ASM(SSL_CIPHER_get_handshake_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_get_id
#  define SSL_CIPHER_get_id OPENSSL_MANGLER(SSL_CIPHER_get_id)
# endif
#else
# ifndef _SSL_CIPHER_get_id
#  define _SSL_CIPHER_get_id OPENSSL_MANGLER_ASM(SSL_CIPHER_get_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_get_kx_nid
#  define SSL_CIPHER_get_kx_nid OPENSSL_MANGLER(SSL_CIPHER_get_kx_nid)
# endif
#else
# ifndef _SSL_CIPHER_get_kx_nid
#  define _SSL_CIPHER_get_kx_nid OPENSSL_MANGLER_ASM(SSL_CIPHER_get_kx_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_get_name
#  define SSL_CIPHER_get_name OPENSSL_MANGLER(SSL_CIPHER_get_name)
# endif
#else
# ifndef _SSL_CIPHER_get_name
#  define _SSL_CIPHER_get_name OPENSSL_MANGLER_ASM(SSL_CIPHER_get_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_get_protocol_id
#  define SSL_CIPHER_get_protocol_id OPENSSL_MANGLER(SSL_CIPHER_get_protocol_id)
# endif
#else
# ifndef _SSL_CIPHER_get_protocol_id
#  define _SSL_CIPHER_get_protocol_id OPENSSL_MANGLER_ASM(SSL_CIPHER_get_protocol_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_get_version
#  define SSL_CIPHER_get_version OPENSSL_MANGLER(SSL_CIPHER_get_version)
# endif
#else
# ifndef _SSL_CIPHER_get_version
#  define _SSL_CIPHER_get_version OPENSSL_MANGLER_ASM(SSL_CIPHER_get_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_is_aead
#  define SSL_CIPHER_is_aead OPENSSL_MANGLER(SSL_CIPHER_is_aead)
# endif
#else
# ifndef _SSL_CIPHER_is_aead
#  define _SSL_CIPHER_is_aead OPENSSL_MANGLER_ASM(SSL_CIPHER_is_aead)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CIPHER_standard_name
#  define SSL_CIPHER_standard_name OPENSSL_MANGLER(SSL_CIPHER_standard_name)
# endif
#else
# ifndef _SSL_CIPHER_standard_name
#  define _SSL_CIPHER_standard_name OPENSSL_MANGLER_ASM(SSL_CIPHER_standard_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_COMP_add_compression_method
#  define SSL_COMP_add_compression_method OPENSSL_MANGLER(SSL_COMP_add_compression_method)
# endif
#else
# ifndef _SSL_COMP_add_compression_method
#  define _SSL_COMP_add_compression_method OPENSSL_MANGLER_ASM(SSL_COMP_add_compression_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_COMP_get0_name
#  define SSL_COMP_get0_name OPENSSL_MANGLER(SSL_COMP_get0_name)
# endif
#else
# ifndef _SSL_COMP_get0_name
#  define _SSL_COMP_get0_name OPENSSL_MANGLER_ASM(SSL_COMP_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_COMP_get_compression_methods
#  define SSL_COMP_get_compression_methods OPENSSL_MANGLER(SSL_COMP_get_compression_methods)
# endif
#else
# ifndef _SSL_COMP_get_compression_methods
#  define _SSL_COMP_get_compression_methods OPENSSL_MANGLER_ASM(SSL_COMP_get_compression_methods)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_COMP_get_id
#  define SSL_COMP_get_id OPENSSL_MANGLER(SSL_COMP_get_id)
# endif
#else
# ifndef _SSL_COMP_get_id
#  define _SSL_COMP_get_id OPENSSL_MANGLER_ASM(SSL_COMP_get_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_COMP_get_name
#  define SSL_COMP_get_name OPENSSL_MANGLER(SSL_COMP_get_name)
# endif
#else
# ifndef _SSL_COMP_get_name
#  define _SSL_COMP_get_name OPENSSL_MANGLER_ASM(SSL_COMP_get_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_COMP_set0_compression_methods
#  define SSL_COMP_set0_compression_methods OPENSSL_MANGLER(SSL_COMP_set0_compression_methods)
# endif
#else
# ifndef _SSL_COMP_set0_compression_methods
#  define _SSL_COMP_set0_compression_methods OPENSSL_MANGLER_ASM(SSL_COMP_set0_compression_methods)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CONF_CTX_clear_flags
#  define SSL_CONF_CTX_clear_flags OPENSSL_MANGLER(SSL_CONF_CTX_clear_flags)
# endif
#else
# ifndef _SSL_CONF_CTX_clear_flags
#  define _SSL_CONF_CTX_clear_flags OPENSSL_MANGLER_ASM(SSL_CONF_CTX_clear_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CONF_CTX_finish
#  define SSL_CONF_CTX_finish OPENSSL_MANGLER(SSL_CONF_CTX_finish)
# endif
#else
# ifndef _SSL_CONF_CTX_finish
#  define _SSL_CONF_CTX_finish OPENSSL_MANGLER_ASM(SSL_CONF_CTX_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CONF_CTX_free
#  define SSL_CONF_CTX_free OPENSSL_MANGLER(SSL_CONF_CTX_free)
# endif
#else
# ifndef _SSL_CONF_CTX_free
#  define _SSL_CONF_CTX_free OPENSSL_MANGLER_ASM(SSL_CONF_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CONF_CTX_new
#  define SSL_CONF_CTX_new OPENSSL_MANGLER(SSL_CONF_CTX_new)
# endif
#else
# ifndef _SSL_CONF_CTX_new
#  define _SSL_CONF_CTX_new OPENSSL_MANGLER_ASM(SSL_CONF_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CONF_CTX_set1_prefix
#  define SSL_CONF_CTX_set1_prefix OPENSSL_MANGLER(SSL_CONF_CTX_set1_prefix)
# endif
#else
# ifndef _SSL_CONF_CTX_set1_prefix
#  define _SSL_CONF_CTX_set1_prefix OPENSSL_MANGLER_ASM(SSL_CONF_CTX_set1_prefix)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CONF_CTX_set_flags
#  define SSL_CONF_CTX_set_flags OPENSSL_MANGLER(SSL_CONF_CTX_set_flags)
# endif
#else
# ifndef _SSL_CONF_CTX_set_flags
#  define _SSL_CONF_CTX_set_flags OPENSSL_MANGLER_ASM(SSL_CONF_CTX_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CONF_CTX_set_ssl
#  define SSL_CONF_CTX_set_ssl OPENSSL_MANGLER(SSL_CONF_CTX_set_ssl)
# endif
#else
# ifndef _SSL_CONF_CTX_set_ssl
#  define _SSL_CONF_CTX_set_ssl OPENSSL_MANGLER_ASM(SSL_CONF_CTX_set_ssl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CONF_CTX_set_ssl_ctx
#  define SSL_CONF_CTX_set_ssl_ctx OPENSSL_MANGLER(SSL_CONF_CTX_set_ssl_ctx)
# endif
#else
# ifndef _SSL_CONF_CTX_set_ssl_ctx
#  define _SSL_CONF_CTX_set_ssl_ctx OPENSSL_MANGLER_ASM(SSL_CONF_CTX_set_ssl_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CONF_cmd
#  define SSL_CONF_cmd OPENSSL_MANGLER(SSL_CONF_cmd)
# endif
#else
# ifndef _SSL_CONF_cmd
#  define _SSL_CONF_cmd OPENSSL_MANGLER_ASM(SSL_CONF_cmd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CONF_cmd_argv
#  define SSL_CONF_cmd_argv OPENSSL_MANGLER(SSL_CONF_cmd_argv)
# endif
#else
# ifndef _SSL_CONF_cmd_argv
#  define _SSL_CONF_cmd_argv OPENSSL_MANGLER_ASM(SSL_CONF_cmd_argv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CONF_cmd_value_type
#  define SSL_CONF_cmd_value_type OPENSSL_MANGLER(SSL_CONF_cmd_value_type)
# endif
#else
# ifndef _SSL_CONF_cmd_value_type
#  define _SSL_CONF_cmd_value_type OPENSSL_MANGLER_ASM(SSL_CONF_cmd_value_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_SRP_CTX_free
#  define SSL_CTX_SRP_CTX_free OPENSSL_MANGLER(SSL_CTX_SRP_CTX_free)
# endif
#else
# ifndef _SSL_CTX_SRP_CTX_free
#  define _SSL_CTX_SRP_CTX_free OPENSSL_MANGLER_ASM(SSL_CTX_SRP_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_SRP_CTX_init
#  define SSL_CTX_SRP_CTX_init OPENSSL_MANGLER(SSL_CTX_SRP_CTX_init)
# endif
#else
# ifndef _SSL_CTX_SRP_CTX_init
#  define _SSL_CTX_SRP_CTX_init OPENSSL_MANGLER_ASM(SSL_CTX_SRP_CTX_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_add1_to_CA_list
#  define SSL_CTX_add1_to_CA_list OPENSSL_MANGLER(SSL_CTX_add1_to_CA_list)
# endif
#else
# ifndef _SSL_CTX_add1_to_CA_list
#  define _SSL_CTX_add1_to_CA_list OPENSSL_MANGLER_ASM(SSL_CTX_add1_to_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_add_client_CA
#  define SSL_CTX_add_client_CA OPENSSL_MANGLER(SSL_CTX_add_client_CA)
# endif
#else
# ifndef _SSL_CTX_add_client_CA
#  define _SSL_CTX_add_client_CA OPENSSL_MANGLER_ASM(SSL_CTX_add_client_CA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_add_client_custom_ext
#  define SSL_CTX_add_client_custom_ext OPENSSL_MANGLER(SSL_CTX_add_client_custom_ext)
# endif
#else
# ifndef _SSL_CTX_add_client_custom_ext
#  define _SSL_CTX_add_client_custom_ext OPENSSL_MANGLER_ASM(SSL_CTX_add_client_custom_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_add_custom_ext
#  define SSL_CTX_add_custom_ext OPENSSL_MANGLER(SSL_CTX_add_custom_ext)
# endif
#else
# ifndef _SSL_CTX_add_custom_ext
#  define _SSL_CTX_add_custom_ext OPENSSL_MANGLER_ASM(SSL_CTX_add_custom_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_add_server_custom_ext
#  define SSL_CTX_add_server_custom_ext OPENSSL_MANGLER(SSL_CTX_add_server_custom_ext)
# endif
#else
# ifndef _SSL_CTX_add_server_custom_ext
#  define _SSL_CTX_add_server_custom_ext OPENSSL_MANGLER_ASM(SSL_CTX_add_server_custom_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_add_session
#  define SSL_CTX_add_session OPENSSL_MANGLER(SSL_CTX_add_session)
# endif
#else
# ifndef _SSL_CTX_add_session
#  define _SSL_CTX_add_session OPENSSL_MANGLER_ASM(SSL_CTX_add_session)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_callback_ctrl
#  define SSL_CTX_callback_ctrl OPENSSL_MANGLER(SSL_CTX_callback_ctrl)
# endif
#else
# ifndef _SSL_CTX_callback_ctrl
#  define _SSL_CTX_callback_ctrl OPENSSL_MANGLER_ASM(SSL_CTX_callback_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_check_private_key
#  define SSL_CTX_check_private_key OPENSSL_MANGLER(SSL_CTX_check_private_key)
# endif
#else
# ifndef _SSL_CTX_check_private_key
#  define _SSL_CTX_check_private_key OPENSSL_MANGLER_ASM(SSL_CTX_check_private_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_clear_options
#  define SSL_CTX_clear_options OPENSSL_MANGLER(SSL_CTX_clear_options)
# endif
#else
# ifndef _SSL_CTX_clear_options
#  define _SSL_CTX_clear_options OPENSSL_MANGLER_ASM(SSL_CTX_clear_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_config
#  define SSL_CTX_config OPENSSL_MANGLER(SSL_CTX_config)
# endif
#else
# ifndef _SSL_CTX_config
#  define _SSL_CTX_config OPENSSL_MANGLER_ASM(SSL_CTX_config)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_ct_is_enabled
#  define SSL_CTX_ct_is_enabled OPENSSL_MANGLER(SSL_CTX_ct_is_enabled)
# endif
#else
# ifndef _SSL_CTX_ct_is_enabled
#  define _SSL_CTX_ct_is_enabled OPENSSL_MANGLER_ASM(SSL_CTX_ct_is_enabled)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_ctrl
#  define SSL_CTX_ctrl OPENSSL_MANGLER(SSL_CTX_ctrl)
# endif
#else
# ifndef _SSL_CTX_ctrl
#  define _SSL_CTX_ctrl OPENSSL_MANGLER_ASM(SSL_CTX_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_dane_clear_flags
#  define SSL_CTX_dane_clear_flags OPENSSL_MANGLER(SSL_CTX_dane_clear_flags)
# endif
#else
# ifndef _SSL_CTX_dane_clear_flags
#  define _SSL_CTX_dane_clear_flags OPENSSL_MANGLER_ASM(SSL_CTX_dane_clear_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_dane_enable
#  define SSL_CTX_dane_enable OPENSSL_MANGLER(SSL_CTX_dane_enable)
# endif
#else
# ifndef _SSL_CTX_dane_enable
#  define _SSL_CTX_dane_enable OPENSSL_MANGLER_ASM(SSL_CTX_dane_enable)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_dane_mtype_set
#  define SSL_CTX_dane_mtype_set OPENSSL_MANGLER(SSL_CTX_dane_mtype_set)
# endif
#else
# ifndef _SSL_CTX_dane_mtype_set
#  define _SSL_CTX_dane_mtype_set OPENSSL_MANGLER_ASM(SSL_CTX_dane_mtype_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_dane_set_flags
#  define SSL_CTX_dane_set_flags OPENSSL_MANGLER(SSL_CTX_dane_set_flags)
# endif
#else
# ifndef _SSL_CTX_dane_set_flags
#  define _SSL_CTX_dane_set_flags OPENSSL_MANGLER_ASM(SSL_CTX_dane_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_enable_ct
#  define SSL_CTX_enable_ct OPENSSL_MANGLER(SSL_CTX_enable_ct)
# endif
#else
# ifndef _SSL_CTX_enable_ct
#  define _SSL_CTX_enable_ct OPENSSL_MANGLER_ASM(SSL_CTX_enable_ct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_flush_sessions
#  define SSL_CTX_flush_sessions OPENSSL_MANGLER(SSL_CTX_flush_sessions)
# endif
#else
# ifndef _SSL_CTX_flush_sessions
#  define _SSL_CTX_flush_sessions OPENSSL_MANGLER_ASM(SSL_CTX_flush_sessions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_free
#  define SSL_CTX_free OPENSSL_MANGLER(SSL_CTX_free)
# endif
#else
# ifndef _SSL_CTX_free
#  define _SSL_CTX_free OPENSSL_MANGLER_ASM(SSL_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get0_CA_list
#  define SSL_CTX_get0_CA_list OPENSSL_MANGLER(SSL_CTX_get0_CA_list)
# endif
#else
# ifndef _SSL_CTX_get0_CA_list
#  define _SSL_CTX_get0_CA_list OPENSSL_MANGLER_ASM(SSL_CTX_get0_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get0_certificate
#  define SSL_CTX_get0_certificate OPENSSL_MANGLER(SSL_CTX_get0_certificate)
# endif
#else
# ifndef _SSL_CTX_get0_certificate
#  define _SSL_CTX_get0_certificate OPENSSL_MANGLER_ASM(SSL_CTX_get0_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get0_ctlog_store
#  define SSL_CTX_get0_ctlog_store OPENSSL_MANGLER(SSL_CTX_get0_ctlog_store)
# endif
#else
# ifndef _SSL_CTX_get0_ctlog_store
#  define _SSL_CTX_get0_ctlog_store OPENSSL_MANGLER_ASM(SSL_CTX_get0_ctlog_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get0_param
#  define SSL_CTX_get0_param OPENSSL_MANGLER(SSL_CTX_get0_param)
# endif
#else
# ifndef _SSL_CTX_get0_param
#  define _SSL_CTX_get0_param OPENSSL_MANGLER_ASM(SSL_CTX_get0_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get0_privatekey
#  define SSL_CTX_get0_privatekey OPENSSL_MANGLER(SSL_CTX_get0_privatekey)
# endif
#else
# ifndef _SSL_CTX_get0_privatekey
#  define _SSL_CTX_get0_privatekey OPENSSL_MANGLER_ASM(SSL_CTX_get0_privatekey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get0_security_ex_data
#  define SSL_CTX_get0_security_ex_data OPENSSL_MANGLER(SSL_CTX_get0_security_ex_data)
# endif
#else
# ifndef _SSL_CTX_get0_security_ex_data
#  define _SSL_CTX_get0_security_ex_data OPENSSL_MANGLER_ASM(SSL_CTX_get0_security_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_cert_store
#  define SSL_CTX_get_cert_store OPENSSL_MANGLER(SSL_CTX_get_cert_store)
# endif
#else
# ifndef _SSL_CTX_get_cert_store
#  define _SSL_CTX_get_cert_store OPENSSL_MANGLER_ASM(SSL_CTX_get_cert_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_ciphers
#  define SSL_CTX_get_ciphers OPENSSL_MANGLER(SSL_CTX_get_ciphers)
# endif
#else
# ifndef _SSL_CTX_get_ciphers
#  define _SSL_CTX_get_ciphers OPENSSL_MANGLER_ASM(SSL_CTX_get_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_client_CA_list
#  define SSL_CTX_get_client_CA_list OPENSSL_MANGLER(SSL_CTX_get_client_CA_list)
# endif
#else
# ifndef _SSL_CTX_get_client_CA_list
#  define _SSL_CTX_get_client_CA_list OPENSSL_MANGLER_ASM(SSL_CTX_get_client_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_client_cert_cb
#  define SSL_CTX_get_client_cert_cb OPENSSL_MANGLER(SSL_CTX_get_client_cert_cb)
# endif
#else
# ifndef _SSL_CTX_get_client_cert_cb
#  define _SSL_CTX_get_client_cert_cb OPENSSL_MANGLER_ASM(SSL_CTX_get_client_cert_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_default_passwd_cb
#  define SSL_CTX_get_default_passwd_cb OPENSSL_MANGLER(SSL_CTX_get_default_passwd_cb)
# endif
#else
# ifndef _SSL_CTX_get_default_passwd_cb
#  define _SSL_CTX_get_default_passwd_cb OPENSSL_MANGLER_ASM(SSL_CTX_get_default_passwd_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_default_passwd_cb_userdata
#  define SSL_CTX_get_default_passwd_cb_userdata OPENSSL_MANGLER(SSL_CTX_get_default_passwd_cb_userdata)
# endif
#else
# ifndef _SSL_CTX_get_default_passwd_cb_userdata
#  define _SSL_CTX_get_default_passwd_cb_userdata OPENSSL_MANGLER_ASM(SSL_CTX_get_default_passwd_cb_userdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_ex_data
#  define SSL_CTX_get_ex_data OPENSSL_MANGLER(SSL_CTX_get_ex_data)
# endif
#else
# ifndef _SSL_CTX_get_ex_data
#  define _SSL_CTX_get_ex_data OPENSSL_MANGLER_ASM(SSL_CTX_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_info_callback
#  define SSL_CTX_get_info_callback OPENSSL_MANGLER(SSL_CTX_get_info_callback)
# endif
#else
# ifndef _SSL_CTX_get_info_callback
#  define _SSL_CTX_get_info_callback OPENSSL_MANGLER_ASM(SSL_CTX_get_info_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_keylog_callback
#  define SSL_CTX_get_keylog_callback OPENSSL_MANGLER(SSL_CTX_get_keylog_callback)
# endif
#else
# ifndef _SSL_CTX_get_keylog_callback
#  define _SSL_CTX_get_keylog_callback OPENSSL_MANGLER_ASM(SSL_CTX_get_keylog_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_max_early_data
#  define SSL_CTX_get_max_early_data OPENSSL_MANGLER(SSL_CTX_get_max_early_data)
# endif
#else
# ifndef _SSL_CTX_get_max_early_data
#  define _SSL_CTX_get_max_early_data OPENSSL_MANGLER_ASM(SSL_CTX_get_max_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_num_tickets
#  define SSL_CTX_get_num_tickets OPENSSL_MANGLER(SSL_CTX_get_num_tickets)
# endif
#else
# ifndef _SSL_CTX_get_num_tickets
#  define _SSL_CTX_get_num_tickets OPENSSL_MANGLER_ASM(SSL_CTX_get_num_tickets)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_options
#  define SSL_CTX_get_options OPENSSL_MANGLER(SSL_CTX_get_options)
# endif
#else
# ifndef _SSL_CTX_get_options
#  define _SSL_CTX_get_options OPENSSL_MANGLER_ASM(SSL_CTX_get_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_quiet_shutdown
#  define SSL_CTX_get_quiet_shutdown OPENSSL_MANGLER(SSL_CTX_get_quiet_shutdown)
# endif
#else
# ifndef _SSL_CTX_get_quiet_shutdown
#  define _SSL_CTX_get_quiet_shutdown OPENSSL_MANGLER_ASM(SSL_CTX_get_quiet_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_record_padding_callback_arg
#  define SSL_CTX_get_record_padding_callback_arg OPENSSL_MANGLER(SSL_CTX_get_record_padding_callback_arg)
# endif
#else
# ifndef _SSL_CTX_get_record_padding_callback_arg
#  define _SSL_CTX_get_record_padding_callback_arg OPENSSL_MANGLER_ASM(SSL_CTX_get_record_padding_callback_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_recv_max_early_data
#  define SSL_CTX_get_recv_max_early_data OPENSSL_MANGLER(SSL_CTX_get_recv_max_early_data)
# endif
#else
# ifndef _SSL_CTX_get_recv_max_early_data
#  define _SSL_CTX_get_recv_max_early_data OPENSSL_MANGLER_ASM(SSL_CTX_get_recv_max_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_security_callback
#  define SSL_CTX_get_security_callback OPENSSL_MANGLER(SSL_CTX_get_security_callback)
# endif
#else
# ifndef _SSL_CTX_get_security_callback
#  define _SSL_CTX_get_security_callback OPENSSL_MANGLER_ASM(SSL_CTX_get_security_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_security_level
#  define SSL_CTX_get_security_level OPENSSL_MANGLER(SSL_CTX_get_security_level)
# endif
#else
# ifndef _SSL_CTX_get_security_level
#  define _SSL_CTX_get_security_level OPENSSL_MANGLER_ASM(SSL_CTX_get_security_level)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_ssl_method
#  define SSL_CTX_get_ssl_method OPENSSL_MANGLER(SSL_CTX_get_ssl_method)
# endif
#else
# ifndef _SSL_CTX_get_ssl_method
#  define _SSL_CTX_get_ssl_method OPENSSL_MANGLER_ASM(SSL_CTX_get_ssl_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_timeout
#  define SSL_CTX_get_timeout OPENSSL_MANGLER(SSL_CTX_get_timeout)
# endif
#else
# ifndef _SSL_CTX_get_timeout
#  define _SSL_CTX_get_timeout OPENSSL_MANGLER_ASM(SSL_CTX_get_timeout)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_verify_callback
#  define SSL_CTX_get_verify_callback OPENSSL_MANGLER(SSL_CTX_get_verify_callback)
# endif
#else
# ifndef _SSL_CTX_get_verify_callback
#  define _SSL_CTX_get_verify_callback OPENSSL_MANGLER_ASM(SSL_CTX_get_verify_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_verify_depth
#  define SSL_CTX_get_verify_depth OPENSSL_MANGLER(SSL_CTX_get_verify_depth)
# endif
#else
# ifndef _SSL_CTX_get_verify_depth
#  define _SSL_CTX_get_verify_depth OPENSSL_MANGLER_ASM(SSL_CTX_get_verify_depth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_get_verify_mode
#  define SSL_CTX_get_verify_mode OPENSSL_MANGLER(SSL_CTX_get_verify_mode)
# endif
#else
# ifndef _SSL_CTX_get_verify_mode
#  define _SSL_CTX_get_verify_mode OPENSSL_MANGLER_ASM(SSL_CTX_get_verify_mode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_has_client_custom_ext
#  define SSL_CTX_has_client_custom_ext OPENSSL_MANGLER(SSL_CTX_has_client_custom_ext)
# endif
#else
# ifndef _SSL_CTX_has_client_custom_ext
#  define _SSL_CTX_has_client_custom_ext OPENSSL_MANGLER_ASM(SSL_CTX_has_client_custom_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_load_verify_dir
#  define SSL_CTX_load_verify_dir OPENSSL_MANGLER(SSL_CTX_load_verify_dir)
# endif
#else
# ifndef _SSL_CTX_load_verify_dir
#  define _SSL_CTX_load_verify_dir OPENSSL_MANGLER_ASM(SSL_CTX_load_verify_dir)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_load_verify_file
#  define SSL_CTX_load_verify_file OPENSSL_MANGLER(SSL_CTX_load_verify_file)
# endif
#else
# ifndef _SSL_CTX_load_verify_file
#  define _SSL_CTX_load_verify_file OPENSSL_MANGLER_ASM(SSL_CTX_load_verify_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_load_verify_locations
#  define SSL_CTX_load_verify_locations OPENSSL_MANGLER(SSL_CTX_load_verify_locations)
# endif
#else
# ifndef _SSL_CTX_load_verify_locations
#  define _SSL_CTX_load_verify_locations OPENSSL_MANGLER_ASM(SSL_CTX_load_verify_locations)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_load_verify_store
#  define SSL_CTX_load_verify_store OPENSSL_MANGLER(SSL_CTX_load_verify_store)
# endif
#else
# ifndef _SSL_CTX_load_verify_store
#  define _SSL_CTX_load_verify_store OPENSSL_MANGLER_ASM(SSL_CTX_load_verify_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_new
#  define SSL_CTX_new OPENSSL_MANGLER(SSL_CTX_new)
# endif
#else
# ifndef _SSL_CTX_new
#  define _SSL_CTX_new OPENSSL_MANGLER_ASM(SSL_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_new_ex
#  define SSL_CTX_new_ex OPENSSL_MANGLER(SSL_CTX_new_ex)
# endif
#else
# ifndef _SSL_CTX_new_ex
#  define _SSL_CTX_new_ex OPENSSL_MANGLER_ASM(SSL_CTX_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_remove_session
#  define SSL_CTX_remove_session OPENSSL_MANGLER(SSL_CTX_remove_session)
# endif
#else
# ifndef _SSL_CTX_remove_session
#  define _SSL_CTX_remove_session OPENSSL_MANGLER_ASM(SSL_CTX_remove_session)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_sess_get_get_cb
#  define SSL_CTX_sess_get_get_cb OPENSSL_MANGLER(SSL_CTX_sess_get_get_cb)
# endif
#else
# ifndef _SSL_CTX_sess_get_get_cb
#  define _SSL_CTX_sess_get_get_cb OPENSSL_MANGLER_ASM(SSL_CTX_sess_get_get_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_sess_get_new_cb
#  define SSL_CTX_sess_get_new_cb OPENSSL_MANGLER(SSL_CTX_sess_get_new_cb)
# endif
#else
# ifndef _SSL_CTX_sess_get_new_cb
#  define _SSL_CTX_sess_get_new_cb OPENSSL_MANGLER_ASM(SSL_CTX_sess_get_new_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_sess_get_remove_cb
#  define SSL_CTX_sess_get_remove_cb OPENSSL_MANGLER(SSL_CTX_sess_get_remove_cb)
# endif
#else
# ifndef _SSL_CTX_sess_get_remove_cb
#  define _SSL_CTX_sess_get_remove_cb OPENSSL_MANGLER_ASM(SSL_CTX_sess_get_remove_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_sess_set_get_cb
#  define SSL_CTX_sess_set_get_cb OPENSSL_MANGLER(SSL_CTX_sess_set_get_cb)
# endif
#else
# ifndef _SSL_CTX_sess_set_get_cb
#  define _SSL_CTX_sess_set_get_cb OPENSSL_MANGLER_ASM(SSL_CTX_sess_set_get_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_sess_set_new_cb
#  define SSL_CTX_sess_set_new_cb OPENSSL_MANGLER(SSL_CTX_sess_set_new_cb)
# endif
#else
# ifndef _SSL_CTX_sess_set_new_cb
#  define _SSL_CTX_sess_set_new_cb OPENSSL_MANGLER_ASM(SSL_CTX_sess_set_new_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_sess_set_remove_cb
#  define SSL_CTX_sess_set_remove_cb OPENSSL_MANGLER(SSL_CTX_sess_set_remove_cb)
# endif
#else
# ifndef _SSL_CTX_sess_set_remove_cb
#  define _SSL_CTX_sess_set_remove_cb OPENSSL_MANGLER_ASM(SSL_CTX_sess_set_remove_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_sessions
#  define SSL_CTX_sessions OPENSSL_MANGLER(SSL_CTX_sessions)
# endif
#else
# ifndef _SSL_CTX_sessions
#  define _SSL_CTX_sessions OPENSSL_MANGLER_ASM(SSL_CTX_sessions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set0_CA_list
#  define SSL_CTX_set0_CA_list OPENSSL_MANGLER(SSL_CTX_set0_CA_list)
# endif
#else
# ifndef _SSL_CTX_set0_CA_list
#  define _SSL_CTX_set0_CA_list OPENSSL_MANGLER_ASM(SSL_CTX_set0_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set0_ctlog_store
#  define SSL_CTX_set0_ctlog_store OPENSSL_MANGLER(SSL_CTX_set0_ctlog_store)
# endif
#else
# ifndef _SSL_CTX_set0_ctlog_store
#  define _SSL_CTX_set0_ctlog_store OPENSSL_MANGLER_ASM(SSL_CTX_set0_ctlog_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set0_security_ex_data
#  define SSL_CTX_set0_security_ex_data OPENSSL_MANGLER(SSL_CTX_set0_security_ex_data)
# endif
#else
# ifndef _SSL_CTX_set0_security_ex_data
#  define _SSL_CTX_set0_security_ex_data OPENSSL_MANGLER_ASM(SSL_CTX_set0_security_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set0_tmp_dh_pkey
#  define SSL_CTX_set0_tmp_dh_pkey OPENSSL_MANGLER(SSL_CTX_set0_tmp_dh_pkey)
# endif
#else
# ifndef _SSL_CTX_set0_tmp_dh_pkey
#  define _SSL_CTX_set0_tmp_dh_pkey OPENSSL_MANGLER_ASM(SSL_CTX_set0_tmp_dh_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set1_cert_store
#  define SSL_CTX_set1_cert_store OPENSSL_MANGLER(SSL_CTX_set1_cert_store)
# endif
#else
# ifndef _SSL_CTX_set1_cert_store
#  define _SSL_CTX_set1_cert_store OPENSSL_MANGLER_ASM(SSL_CTX_set1_cert_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set1_param
#  define SSL_CTX_set1_param OPENSSL_MANGLER(SSL_CTX_set1_param)
# endif
#else
# ifndef _SSL_CTX_set1_param
#  define _SSL_CTX_set1_param OPENSSL_MANGLER_ASM(SSL_CTX_set1_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_allow_early_data_cb
#  define SSL_CTX_set_allow_early_data_cb OPENSSL_MANGLER(SSL_CTX_set_allow_early_data_cb)
# endif
#else
# ifndef _SSL_CTX_set_allow_early_data_cb
#  define _SSL_CTX_set_allow_early_data_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_allow_early_data_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_alpn_protos
#  define SSL_CTX_set_alpn_protos OPENSSL_MANGLER(SSL_CTX_set_alpn_protos)
# endif
#else
# ifndef _SSL_CTX_set_alpn_protos
#  define _SSL_CTX_set_alpn_protos OPENSSL_MANGLER_ASM(SSL_CTX_set_alpn_protos)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_alpn_select_cb
#  define SSL_CTX_set_alpn_select_cb OPENSSL_MANGLER(SSL_CTX_set_alpn_select_cb)
# endif
#else
# ifndef _SSL_CTX_set_alpn_select_cb
#  define _SSL_CTX_set_alpn_select_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_alpn_select_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_async_callback
#  define SSL_CTX_set_async_callback OPENSSL_MANGLER(SSL_CTX_set_async_callback)
# endif
#else
# ifndef _SSL_CTX_set_async_callback
#  define _SSL_CTX_set_async_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_async_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_async_callback_arg
#  define SSL_CTX_set_async_callback_arg OPENSSL_MANGLER(SSL_CTX_set_async_callback_arg)
# endif
#else
# ifndef _SSL_CTX_set_async_callback_arg
#  define _SSL_CTX_set_async_callback_arg OPENSSL_MANGLER_ASM(SSL_CTX_set_async_callback_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_block_padding
#  define SSL_CTX_set_block_padding OPENSSL_MANGLER(SSL_CTX_set_block_padding)
# endif
#else
# ifndef _SSL_CTX_set_block_padding
#  define _SSL_CTX_set_block_padding OPENSSL_MANGLER_ASM(SSL_CTX_set_block_padding)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_cert_cb
#  define SSL_CTX_set_cert_cb OPENSSL_MANGLER(SSL_CTX_set_cert_cb)
# endif
#else
# ifndef _SSL_CTX_set_cert_cb
#  define _SSL_CTX_set_cert_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_cert_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_cert_store
#  define SSL_CTX_set_cert_store OPENSSL_MANGLER(SSL_CTX_set_cert_store)
# endif
#else
# ifndef _SSL_CTX_set_cert_store
#  define _SSL_CTX_set_cert_store OPENSSL_MANGLER_ASM(SSL_CTX_set_cert_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_cert_verify_callback
#  define SSL_CTX_set_cert_verify_callback OPENSSL_MANGLER(SSL_CTX_set_cert_verify_callback)
# endif
#else
# ifndef _SSL_CTX_set_cert_verify_callback
#  define _SSL_CTX_set_cert_verify_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_cert_verify_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_cipher_list
#  define SSL_CTX_set_cipher_list OPENSSL_MANGLER(SSL_CTX_set_cipher_list)
# endif
#else
# ifndef _SSL_CTX_set_cipher_list
#  define _SSL_CTX_set_cipher_list OPENSSL_MANGLER_ASM(SSL_CTX_set_cipher_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_ciphersuites
#  define SSL_CTX_set_ciphersuites OPENSSL_MANGLER(SSL_CTX_set_ciphersuites)
# endif
#else
# ifndef _SSL_CTX_set_ciphersuites
#  define _SSL_CTX_set_ciphersuites OPENSSL_MANGLER_ASM(SSL_CTX_set_ciphersuites)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_client_CA_list
#  define SSL_CTX_set_client_CA_list OPENSSL_MANGLER(SSL_CTX_set_client_CA_list)
# endif
#else
# ifndef _SSL_CTX_set_client_CA_list
#  define _SSL_CTX_set_client_CA_list OPENSSL_MANGLER_ASM(SSL_CTX_set_client_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_client_cert_cb
#  define SSL_CTX_set_client_cert_cb OPENSSL_MANGLER(SSL_CTX_set_client_cert_cb)
# endif
#else
# ifndef _SSL_CTX_set_client_cert_cb
#  define _SSL_CTX_set_client_cert_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_client_cert_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_client_cert_engine
#  define SSL_CTX_set_client_cert_engine OPENSSL_MANGLER(SSL_CTX_set_client_cert_engine)
# endif
#else
# ifndef _SSL_CTX_set_client_cert_engine
#  define _SSL_CTX_set_client_cert_engine OPENSSL_MANGLER_ASM(SSL_CTX_set_client_cert_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_client_hello_cb
#  define SSL_CTX_set_client_hello_cb OPENSSL_MANGLER(SSL_CTX_set_client_hello_cb)
# endif
#else
# ifndef _SSL_CTX_set_client_hello_cb
#  define _SSL_CTX_set_client_hello_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_client_hello_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_cookie_generate_cb
#  define SSL_CTX_set_cookie_generate_cb OPENSSL_MANGLER(SSL_CTX_set_cookie_generate_cb)
# endif
#else
# ifndef _SSL_CTX_set_cookie_generate_cb
#  define _SSL_CTX_set_cookie_generate_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_cookie_generate_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_cookie_verify_cb
#  define SSL_CTX_set_cookie_verify_cb OPENSSL_MANGLER(SSL_CTX_set_cookie_verify_cb)
# endif
#else
# ifndef _SSL_CTX_set_cookie_verify_cb
#  define _SSL_CTX_set_cookie_verify_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_cookie_verify_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_ct_validation_callback
#  define SSL_CTX_set_ct_validation_callback OPENSSL_MANGLER(SSL_CTX_set_ct_validation_callback)
# endif
#else
# ifndef _SSL_CTX_set_ct_validation_callback
#  define _SSL_CTX_set_ct_validation_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_ct_validation_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_ctlog_list_file
#  define SSL_CTX_set_ctlog_list_file OPENSSL_MANGLER(SSL_CTX_set_ctlog_list_file)
# endif
#else
# ifndef _SSL_CTX_set_ctlog_list_file
#  define _SSL_CTX_set_ctlog_list_file OPENSSL_MANGLER_ASM(SSL_CTX_set_ctlog_list_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_default_ctlog_list_file
#  define SSL_CTX_set_default_ctlog_list_file OPENSSL_MANGLER(SSL_CTX_set_default_ctlog_list_file)
# endif
#else
# ifndef _SSL_CTX_set_default_ctlog_list_file
#  define _SSL_CTX_set_default_ctlog_list_file OPENSSL_MANGLER_ASM(SSL_CTX_set_default_ctlog_list_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_default_passwd_cb
#  define SSL_CTX_set_default_passwd_cb OPENSSL_MANGLER(SSL_CTX_set_default_passwd_cb)
# endif
#else
# ifndef _SSL_CTX_set_default_passwd_cb
#  define _SSL_CTX_set_default_passwd_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_default_passwd_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_default_passwd_cb_userdata
#  define SSL_CTX_set_default_passwd_cb_userdata OPENSSL_MANGLER(SSL_CTX_set_default_passwd_cb_userdata)
# endif
#else
# ifndef _SSL_CTX_set_default_passwd_cb_userdata
#  define _SSL_CTX_set_default_passwd_cb_userdata OPENSSL_MANGLER_ASM(SSL_CTX_set_default_passwd_cb_userdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_default_read_buffer_len
#  define SSL_CTX_set_default_read_buffer_len OPENSSL_MANGLER(SSL_CTX_set_default_read_buffer_len)
# endif
#else
# ifndef _SSL_CTX_set_default_read_buffer_len
#  define _SSL_CTX_set_default_read_buffer_len OPENSSL_MANGLER_ASM(SSL_CTX_set_default_read_buffer_len)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_default_verify_dir
#  define SSL_CTX_set_default_verify_dir OPENSSL_MANGLER(SSL_CTX_set_default_verify_dir)
# endif
#else
# ifndef _SSL_CTX_set_default_verify_dir
#  define _SSL_CTX_set_default_verify_dir OPENSSL_MANGLER_ASM(SSL_CTX_set_default_verify_dir)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_default_verify_file
#  define SSL_CTX_set_default_verify_file OPENSSL_MANGLER(SSL_CTX_set_default_verify_file)
# endif
#else
# ifndef _SSL_CTX_set_default_verify_file
#  define _SSL_CTX_set_default_verify_file OPENSSL_MANGLER_ASM(SSL_CTX_set_default_verify_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_default_verify_paths
#  define SSL_CTX_set_default_verify_paths OPENSSL_MANGLER(SSL_CTX_set_default_verify_paths)
# endif
#else
# ifndef _SSL_CTX_set_default_verify_paths
#  define _SSL_CTX_set_default_verify_paths OPENSSL_MANGLER_ASM(SSL_CTX_set_default_verify_paths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_default_verify_store
#  define SSL_CTX_set_default_verify_store OPENSSL_MANGLER(SSL_CTX_set_default_verify_store)
# endif
#else
# ifndef _SSL_CTX_set_default_verify_store
#  define _SSL_CTX_set_default_verify_store OPENSSL_MANGLER_ASM(SSL_CTX_set_default_verify_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_ex_data
#  define SSL_CTX_set_ex_data OPENSSL_MANGLER(SSL_CTX_set_ex_data)
# endif
#else
# ifndef _SSL_CTX_set_ex_data
#  define _SSL_CTX_set_ex_data OPENSSL_MANGLER_ASM(SSL_CTX_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_generate_session_id
#  define SSL_CTX_set_generate_session_id OPENSSL_MANGLER(SSL_CTX_set_generate_session_id)
# endif
#else
# ifndef _SSL_CTX_set_generate_session_id
#  define _SSL_CTX_set_generate_session_id OPENSSL_MANGLER_ASM(SSL_CTX_set_generate_session_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_info_callback
#  define SSL_CTX_set_info_callback OPENSSL_MANGLER(SSL_CTX_set_info_callback)
# endif
#else
# ifndef _SSL_CTX_set_info_callback
#  define _SSL_CTX_set_info_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_info_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_keylog_callback
#  define SSL_CTX_set_keylog_callback OPENSSL_MANGLER(SSL_CTX_set_keylog_callback)
# endif
#else
# ifndef _SSL_CTX_set_keylog_callback
#  define _SSL_CTX_set_keylog_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_keylog_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_max_early_data
#  define SSL_CTX_set_max_early_data OPENSSL_MANGLER(SSL_CTX_set_max_early_data)
# endif
#else
# ifndef _SSL_CTX_set_max_early_data
#  define _SSL_CTX_set_max_early_data OPENSSL_MANGLER_ASM(SSL_CTX_set_max_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_msg_callback
#  define SSL_CTX_set_msg_callback OPENSSL_MANGLER(SSL_CTX_set_msg_callback)
# endif
#else
# ifndef _SSL_CTX_set_msg_callback
#  define _SSL_CTX_set_msg_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_msg_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_next_proto_select_cb
#  define SSL_CTX_set_next_proto_select_cb OPENSSL_MANGLER(SSL_CTX_set_next_proto_select_cb)
# endif
#else
# ifndef _SSL_CTX_set_next_proto_select_cb
#  define _SSL_CTX_set_next_proto_select_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_next_proto_select_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_next_protos_advertised_cb
#  define SSL_CTX_set_next_protos_advertised_cb OPENSSL_MANGLER(SSL_CTX_set_next_protos_advertised_cb)
# endif
#else
# ifndef _SSL_CTX_set_next_protos_advertised_cb
#  define _SSL_CTX_set_next_protos_advertised_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_next_protos_advertised_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_not_resumable_session_callback
#  define SSL_CTX_set_not_resumable_session_callback OPENSSL_MANGLER(SSL_CTX_set_not_resumable_session_callback)
# endif
#else
# ifndef _SSL_CTX_set_not_resumable_session_callback
#  define _SSL_CTX_set_not_resumable_session_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_not_resumable_session_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_num_tickets
#  define SSL_CTX_set_num_tickets OPENSSL_MANGLER(SSL_CTX_set_num_tickets)
# endif
#else
# ifndef _SSL_CTX_set_num_tickets
#  define _SSL_CTX_set_num_tickets OPENSSL_MANGLER_ASM(SSL_CTX_set_num_tickets)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_options
#  define SSL_CTX_set_options OPENSSL_MANGLER(SSL_CTX_set_options)
# endif
#else
# ifndef _SSL_CTX_set_options
#  define _SSL_CTX_set_options OPENSSL_MANGLER_ASM(SSL_CTX_set_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_post_handshake_auth
#  define SSL_CTX_set_post_handshake_auth OPENSSL_MANGLER(SSL_CTX_set_post_handshake_auth)
# endif
#else
# ifndef _SSL_CTX_set_post_handshake_auth
#  define _SSL_CTX_set_post_handshake_auth OPENSSL_MANGLER_ASM(SSL_CTX_set_post_handshake_auth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_psk_client_callback
#  define SSL_CTX_set_psk_client_callback OPENSSL_MANGLER(SSL_CTX_set_psk_client_callback)
# endif
#else
# ifndef _SSL_CTX_set_psk_client_callback
#  define _SSL_CTX_set_psk_client_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_psk_client_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_psk_find_session_callback
#  define SSL_CTX_set_psk_find_session_callback OPENSSL_MANGLER(SSL_CTX_set_psk_find_session_callback)
# endif
#else
# ifndef _SSL_CTX_set_psk_find_session_callback
#  define _SSL_CTX_set_psk_find_session_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_psk_find_session_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_psk_server_callback
#  define SSL_CTX_set_psk_server_callback OPENSSL_MANGLER(SSL_CTX_set_psk_server_callback)
# endif
#else
# ifndef _SSL_CTX_set_psk_server_callback
#  define _SSL_CTX_set_psk_server_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_psk_server_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_psk_use_session_callback
#  define SSL_CTX_set_psk_use_session_callback OPENSSL_MANGLER(SSL_CTX_set_psk_use_session_callback)
# endif
#else
# ifndef _SSL_CTX_set_psk_use_session_callback
#  define _SSL_CTX_set_psk_use_session_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_psk_use_session_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_purpose
#  define SSL_CTX_set_purpose OPENSSL_MANGLER(SSL_CTX_set_purpose)
# endif
#else
# ifndef _SSL_CTX_set_purpose
#  define _SSL_CTX_set_purpose OPENSSL_MANGLER_ASM(SSL_CTX_set_purpose)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_quiet_shutdown
#  define SSL_CTX_set_quiet_shutdown OPENSSL_MANGLER(SSL_CTX_set_quiet_shutdown)
# endif
#else
# ifndef _SSL_CTX_set_quiet_shutdown
#  define _SSL_CTX_set_quiet_shutdown OPENSSL_MANGLER_ASM(SSL_CTX_set_quiet_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_record_padding_callback
#  define SSL_CTX_set_record_padding_callback OPENSSL_MANGLER(SSL_CTX_set_record_padding_callback)
# endif
#else
# ifndef _SSL_CTX_set_record_padding_callback
#  define _SSL_CTX_set_record_padding_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_record_padding_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_record_padding_callback_arg
#  define SSL_CTX_set_record_padding_callback_arg OPENSSL_MANGLER(SSL_CTX_set_record_padding_callback_arg)
# endif
#else
# ifndef _SSL_CTX_set_record_padding_callback_arg
#  define _SSL_CTX_set_record_padding_callback_arg OPENSSL_MANGLER_ASM(SSL_CTX_set_record_padding_callback_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_recv_max_early_data
#  define SSL_CTX_set_recv_max_early_data OPENSSL_MANGLER(SSL_CTX_set_recv_max_early_data)
# endif
#else
# ifndef _SSL_CTX_set_recv_max_early_data
#  define _SSL_CTX_set_recv_max_early_data OPENSSL_MANGLER_ASM(SSL_CTX_set_recv_max_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_security_callback
#  define SSL_CTX_set_security_callback OPENSSL_MANGLER(SSL_CTX_set_security_callback)
# endif
#else
# ifndef _SSL_CTX_set_security_callback
#  define _SSL_CTX_set_security_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_security_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_security_level
#  define SSL_CTX_set_security_level OPENSSL_MANGLER(SSL_CTX_set_security_level)
# endif
#else
# ifndef _SSL_CTX_set_security_level
#  define _SSL_CTX_set_security_level OPENSSL_MANGLER_ASM(SSL_CTX_set_security_level)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_session_id_context
#  define SSL_CTX_set_session_id_context OPENSSL_MANGLER(SSL_CTX_set_session_id_context)
# endif
#else
# ifndef _SSL_CTX_set_session_id_context
#  define _SSL_CTX_set_session_id_context OPENSSL_MANGLER_ASM(SSL_CTX_set_session_id_context)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_session_ticket_cb
#  define SSL_CTX_set_session_ticket_cb OPENSSL_MANGLER(SSL_CTX_set_session_ticket_cb)
# endif
#else
# ifndef _SSL_CTX_set_session_ticket_cb
#  define _SSL_CTX_set_session_ticket_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_session_ticket_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_srp_cb_arg
#  define SSL_CTX_set_srp_cb_arg OPENSSL_MANGLER(SSL_CTX_set_srp_cb_arg)
# endif
#else
# ifndef _SSL_CTX_set_srp_cb_arg
#  define _SSL_CTX_set_srp_cb_arg OPENSSL_MANGLER_ASM(SSL_CTX_set_srp_cb_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_srp_client_pwd_callback
#  define SSL_CTX_set_srp_client_pwd_callback OPENSSL_MANGLER(SSL_CTX_set_srp_client_pwd_callback)
# endif
#else
# ifndef _SSL_CTX_set_srp_client_pwd_callback
#  define _SSL_CTX_set_srp_client_pwd_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_srp_client_pwd_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_srp_password
#  define SSL_CTX_set_srp_password OPENSSL_MANGLER(SSL_CTX_set_srp_password)
# endif
#else
# ifndef _SSL_CTX_set_srp_password
#  define _SSL_CTX_set_srp_password OPENSSL_MANGLER_ASM(SSL_CTX_set_srp_password)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_srp_strength
#  define SSL_CTX_set_srp_strength OPENSSL_MANGLER(SSL_CTX_set_srp_strength)
# endif
#else
# ifndef _SSL_CTX_set_srp_strength
#  define _SSL_CTX_set_srp_strength OPENSSL_MANGLER_ASM(SSL_CTX_set_srp_strength)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_srp_username
#  define SSL_CTX_set_srp_username OPENSSL_MANGLER(SSL_CTX_set_srp_username)
# endif
#else
# ifndef _SSL_CTX_set_srp_username
#  define _SSL_CTX_set_srp_username OPENSSL_MANGLER_ASM(SSL_CTX_set_srp_username)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_srp_username_callback
#  define SSL_CTX_set_srp_username_callback OPENSSL_MANGLER(SSL_CTX_set_srp_username_callback)
# endif
#else
# ifndef _SSL_CTX_set_srp_username_callback
#  define _SSL_CTX_set_srp_username_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_srp_username_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_srp_verify_param_callback
#  define SSL_CTX_set_srp_verify_param_callback OPENSSL_MANGLER(SSL_CTX_set_srp_verify_param_callback)
# endif
#else
# ifndef _SSL_CTX_set_srp_verify_param_callback
#  define _SSL_CTX_set_srp_verify_param_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_srp_verify_param_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_ssl_version
#  define SSL_CTX_set_ssl_version OPENSSL_MANGLER(SSL_CTX_set_ssl_version)
# endif
#else
# ifndef _SSL_CTX_set_ssl_version
#  define _SSL_CTX_set_ssl_version OPENSSL_MANGLER_ASM(SSL_CTX_set_ssl_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_stateless_cookie_generate_cb
#  define SSL_CTX_set_stateless_cookie_generate_cb OPENSSL_MANGLER(SSL_CTX_set_stateless_cookie_generate_cb)
# endif
#else
# ifndef _SSL_CTX_set_stateless_cookie_generate_cb
#  define _SSL_CTX_set_stateless_cookie_generate_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_stateless_cookie_generate_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_stateless_cookie_verify_cb
#  define SSL_CTX_set_stateless_cookie_verify_cb OPENSSL_MANGLER(SSL_CTX_set_stateless_cookie_verify_cb)
# endif
#else
# ifndef _SSL_CTX_set_stateless_cookie_verify_cb
#  define _SSL_CTX_set_stateless_cookie_verify_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_stateless_cookie_verify_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_timeout
#  define SSL_CTX_set_timeout OPENSSL_MANGLER(SSL_CTX_set_timeout)
# endif
#else
# ifndef _SSL_CTX_set_timeout
#  define _SSL_CTX_set_timeout OPENSSL_MANGLER_ASM(SSL_CTX_set_timeout)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_tlsext_max_fragment_length
#  define SSL_CTX_set_tlsext_max_fragment_length OPENSSL_MANGLER(SSL_CTX_set_tlsext_max_fragment_length)
# endif
#else
# ifndef _SSL_CTX_set_tlsext_max_fragment_length
#  define _SSL_CTX_set_tlsext_max_fragment_length OPENSSL_MANGLER_ASM(SSL_CTX_set_tlsext_max_fragment_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_tlsext_ticket_key_evp_cb
#  define SSL_CTX_set_tlsext_ticket_key_evp_cb OPENSSL_MANGLER(SSL_CTX_set_tlsext_ticket_key_evp_cb)
# endif
#else
# ifndef _SSL_CTX_set_tlsext_ticket_key_evp_cb
#  define _SSL_CTX_set_tlsext_ticket_key_evp_cb OPENSSL_MANGLER_ASM(SSL_CTX_set_tlsext_ticket_key_evp_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_tlsext_use_srtp
#  define SSL_CTX_set_tlsext_use_srtp OPENSSL_MANGLER(SSL_CTX_set_tlsext_use_srtp)
# endif
#else
# ifndef _SSL_CTX_set_tlsext_use_srtp
#  define _SSL_CTX_set_tlsext_use_srtp OPENSSL_MANGLER_ASM(SSL_CTX_set_tlsext_use_srtp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_tmp_dh_callback
#  define SSL_CTX_set_tmp_dh_callback OPENSSL_MANGLER(SSL_CTX_set_tmp_dh_callback)
# endif
#else
# ifndef _SSL_CTX_set_tmp_dh_callback
#  define _SSL_CTX_set_tmp_dh_callback OPENSSL_MANGLER_ASM(SSL_CTX_set_tmp_dh_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_trust
#  define SSL_CTX_set_trust OPENSSL_MANGLER(SSL_CTX_set_trust)
# endif
#else
# ifndef _SSL_CTX_set_trust
#  define _SSL_CTX_set_trust OPENSSL_MANGLER_ASM(SSL_CTX_set_trust)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_verify
#  define SSL_CTX_set_verify OPENSSL_MANGLER(SSL_CTX_set_verify)
# endif
#else
# ifndef _SSL_CTX_set_verify
#  define _SSL_CTX_set_verify OPENSSL_MANGLER_ASM(SSL_CTX_set_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_set_verify_depth
#  define SSL_CTX_set_verify_depth OPENSSL_MANGLER(SSL_CTX_set_verify_depth)
# endif
#else
# ifndef _SSL_CTX_set_verify_depth
#  define _SSL_CTX_set_verify_depth OPENSSL_MANGLER_ASM(SSL_CTX_set_verify_depth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_up_ref
#  define SSL_CTX_up_ref OPENSSL_MANGLER(SSL_CTX_up_ref)
# endif
#else
# ifndef _SSL_CTX_up_ref
#  define _SSL_CTX_up_ref OPENSSL_MANGLER_ASM(SSL_CTX_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_PrivateKey
#  define SSL_CTX_use_PrivateKey OPENSSL_MANGLER(SSL_CTX_use_PrivateKey)
# endif
#else
# ifndef _SSL_CTX_use_PrivateKey
#  define _SSL_CTX_use_PrivateKey OPENSSL_MANGLER_ASM(SSL_CTX_use_PrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_PrivateKey_ASN1
#  define SSL_CTX_use_PrivateKey_ASN1 OPENSSL_MANGLER(SSL_CTX_use_PrivateKey_ASN1)
# endif
#else
# ifndef _SSL_CTX_use_PrivateKey_ASN1
#  define _SSL_CTX_use_PrivateKey_ASN1 OPENSSL_MANGLER_ASM(SSL_CTX_use_PrivateKey_ASN1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_PrivateKey_file
#  define SSL_CTX_use_PrivateKey_file OPENSSL_MANGLER(SSL_CTX_use_PrivateKey_file)
# endif
#else
# ifndef _SSL_CTX_use_PrivateKey_file
#  define _SSL_CTX_use_PrivateKey_file OPENSSL_MANGLER_ASM(SSL_CTX_use_PrivateKey_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_cert_and_key
#  define SSL_CTX_use_cert_and_key OPENSSL_MANGLER(SSL_CTX_use_cert_and_key)
# endif
#else
# ifndef _SSL_CTX_use_cert_and_key
#  define _SSL_CTX_use_cert_and_key OPENSSL_MANGLER_ASM(SSL_CTX_use_cert_and_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_certificate
#  define SSL_CTX_use_certificate OPENSSL_MANGLER(SSL_CTX_use_certificate)
# endif
#else
# ifndef _SSL_CTX_use_certificate
#  define _SSL_CTX_use_certificate OPENSSL_MANGLER_ASM(SSL_CTX_use_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_certificate_ASN1
#  define SSL_CTX_use_certificate_ASN1 OPENSSL_MANGLER(SSL_CTX_use_certificate_ASN1)
# endif
#else
# ifndef _SSL_CTX_use_certificate_ASN1
#  define _SSL_CTX_use_certificate_ASN1 OPENSSL_MANGLER_ASM(SSL_CTX_use_certificate_ASN1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_certificate_chain_file
#  define SSL_CTX_use_certificate_chain_file OPENSSL_MANGLER(SSL_CTX_use_certificate_chain_file)
# endif
#else
# ifndef _SSL_CTX_use_certificate_chain_file
#  define _SSL_CTX_use_certificate_chain_file OPENSSL_MANGLER_ASM(SSL_CTX_use_certificate_chain_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_certificate_file
#  define SSL_CTX_use_certificate_file OPENSSL_MANGLER(SSL_CTX_use_certificate_file)
# endif
#else
# ifndef _SSL_CTX_use_certificate_file
#  define _SSL_CTX_use_certificate_file OPENSSL_MANGLER_ASM(SSL_CTX_use_certificate_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_psk_identity_hint
#  define SSL_CTX_use_psk_identity_hint OPENSSL_MANGLER(SSL_CTX_use_psk_identity_hint)
# endif
#else
# ifndef _SSL_CTX_use_psk_identity_hint
#  define _SSL_CTX_use_psk_identity_hint OPENSSL_MANGLER_ASM(SSL_CTX_use_psk_identity_hint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_serverinfo
#  define SSL_CTX_use_serverinfo OPENSSL_MANGLER(SSL_CTX_use_serverinfo)
# endif
#else
# ifndef _SSL_CTX_use_serverinfo
#  define _SSL_CTX_use_serverinfo OPENSSL_MANGLER_ASM(SSL_CTX_use_serverinfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_serverinfo_ex
#  define SSL_CTX_use_serverinfo_ex OPENSSL_MANGLER(SSL_CTX_use_serverinfo_ex)
# endif
#else
# ifndef _SSL_CTX_use_serverinfo_ex
#  define _SSL_CTX_use_serverinfo_ex OPENSSL_MANGLER_ASM(SSL_CTX_use_serverinfo_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_CTX_use_serverinfo_file
#  define SSL_CTX_use_serverinfo_file OPENSSL_MANGLER(SSL_CTX_use_serverinfo_file)
# endif
#else
# ifndef _SSL_CTX_use_serverinfo_file
#  define _SSL_CTX_use_serverinfo_file OPENSSL_MANGLER_ASM(SSL_CTX_use_serverinfo_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_dup
#  define SSL_SESSION_dup OPENSSL_MANGLER(SSL_SESSION_dup)
# endif
#else
# ifndef _SSL_SESSION_dup
#  define _SSL_SESSION_dup OPENSSL_MANGLER_ASM(SSL_SESSION_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_free
#  define SSL_SESSION_free OPENSSL_MANGLER(SSL_SESSION_free)
# endif
#else
# ifndef _SSL_SESSION_free
#  define _SSL_SESSION_free OPENSSL_MANGLER_ASM(SSL_SESSION_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get0_alpn_selected
#  define SSL_SESSION_get0_alpn_selected OPENSSL_MANGLER(SSL_SESSION_get0_alpn_selected)
# endif
#else
# ifndef _SSL_SESSION_get0_alpn_selected
#  define _SSL_SESSION_get0_alpn_selected OPENSSL_MANGLER_ASM(SSL_SESSION_get0_alpn_selected)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get0_cipher
#  define SSL_SESSION_get0_cipher OPENSSL_MANGLER(SSL_SESSION_get0_cipher)
# endif
#else
# ifndef _SSL_SESSION_get0_cipher
#  define _SSL_SESSION_get0_cipher OPENSSL_MANGLER_ASM(SSL_SESSION_get0_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get0_hostname
#  define SSL_SESSION_get0_hostname OPENSSL_MANGLER(SSL_SESSION_get0_hostname)
# endif
#else
# ifndef _SSL_SESSION_get0_hostname
#  define _SSL_SESSION_get0_hostname OPENSSL_MANGLER_ASM(SSL_SESSION_get0_hostname)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get0_id_context
#  define SSL_SESSION_get0_id_context OPENSSL_MANGLER(SSL_SESSION_get0_id_context)
# endif
#else
# ifndef _SSL_SESSION_get0_id_context
#  define _SSL_SESSION_get0_id_context OPENSSL_MANGLER_ASM(SSL_SESSION_get0_id_context)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get0_peer
#  define SSL_SESSION_get0_peer OPENSSL_MANGLER(SSL_SESSION_get0_peer)
# endif
#else
# ifndef _SSL_SESSION_get0_peer
#  define _SSL_SESSION_get0_peer OPENSSL_MANGLER_ASM(SSL_SESSION_get0_peer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get0_ticket
#  define SSL_SESSION_get0_ticket OPENSSL_MANGLER(SSL_SESSION_get0_ticket)
# endif
#else
# ifndef _SSL_SESSION_get0_ticket
#  define _SSL_SESSION_get0_ticket OPENSSL_MANGLER_ASM(SSL_SESSION_get0_ticket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get0_ticket_appdata
#  define SSL_SESSION_get0_ticket_appdata OPENSSL_MANGLER(SSL_SESSION_get0_ticket_appdata)
# endif
#else
# ifndef _SSL_SESSION_get0_ticket_appdata
#  define _SSL_SESSION_get0_ticket_appdata OPENSSL_MANGLER_ASM(SSL_SESSION_get0_ticket_appdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get_compress_id
#  define SSL_SESSION_get_compress_id OPENSSL_MANGLER(SSL_SESSION_get_compress_id)
# endif
#else
# ifndef _SSL_SESSION_get_compress_id
#  define _SSL_SESSION_get_compress_id OPENSSL_MANGLER_ASM(SSL_SESSION_get_compress_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get_ex_data
#  define SSL_SESSION_get_ex_data OPENSSL_MANGLER(SSL_SESSION_get_ex_data)
# endif
#else
# ifndef _SSL_SESSION_get_ex_data
#  define _SSL_SESSION_get_ex_data OPENSSL_MANGLER_ASM(SSL_SESSION_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get_id
#  define SSL_SESSION_get_id OPENSSL_MANGLER(SSL_SESSION_get_id)
# endif
#else
# ifndef _SSL_SESSION_get_id
#  define _SSL_SESSION_get_id OPENSSL_MANGLER_ASM(SSL_SESSION_get_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get_master_key
#  define SSL_SESSION_get_master_key OPENSSL_MANGLER(SSL_SESSION_get_master_key)
# endif
#else
# ifndef _SSL_SESSION_get_master_key
#  define _SSL_SESSION_get_master_key OPENSSL_MANGLER_ASM(SSL_SESSION_get_master_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get_max_early_data
#  define SSL_SESSION_get_max_early_data OPENSSL_MANGLER(SSL_SESSION_get_max_early_data)
# endif
#else
# ifndef _SSL_SESSION_get_max_early_data
#  define _SSL_SESSION_get_max_early_data OPENSSL_MANGLER_ASM(SSL_SESSION_get_max_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get_max_fragment_length
#  define SSL_SESSION_get_max_fragment_length OPENSSL_MANGLER(SSL_SESSION_get_max_fragment_length)
# endif
#else
# ifndef _SSL_SESSION_get_max_fragment_length
#  define _SSL_SESSION_get_max_fragment_length OPENSSL_MANGLER_ASM(SSL_SESSION_get_max_fragment_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get_protocol_version
#  define SSL_SESSION_get_protocol_version OPENSSL_MANGLER(SSL_SESSION_get_protocol_version)
# endif
#else
# ifndef _SSL_SESSION_get_protocol_version
#  define _SSL_SESSION_get_protocol_version OPENSSL_MANGLER_ASM(SSL_SESSION_get_protocol_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get_ticket_lifetime_hint
#  define SSL_SESSION_get_ticket_lifetime_hint OPENSSL_MANGLER(SSL_SESSION_get_ticket_lifetime_hint)
# endif
#else
# ifndef _SSL_SESSION_get_ticket_lifetime_hint
#  define _SSL_SESSION_get_ticket_lifetime_hint OPENSSL_MANGLER_ASM(SSL_SESSION_get_ticket_lifetime_hint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get_time
#  define SSL_SESSION_get_time OPENSSL_MANGLER(SSL_SESSION_get_time)
# endif
#else
# ifndef _SSL_SESSION_get_time
#  define _SSL_SESSION_get_time OPENSSL_MANGLER_ASM(SSL_SESSION_get_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_get_timeout
#  define SSL_SESSION_get_timeout OPENSSL_MANGLER(SSL_SESSION_get_timeout)
# endif
#else
# ifndef _SSL_SESSION_get_timeout
#  define _SSL_SESSION_get_timeout OPENSSL_MANGLER_ASM(SSL_SESSION_get_timeout)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_has_ticket
#  define SSL_SESSION_has_ticket OPENSSL_MANGLER(SSL_SESSION_has_ticket)
# endif
#else
# ifndef _SSL_SESSION_has_ticket
#  define _SSL_SESSION_has_ticket OPENSSL_MANGLER_ASM(SSL_SESSION_has_ticket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_is_resumable
#  define SSL_SESSION_is_resumable OPENSSL_MANGLER(SSL_SESSION_is_resumable)
# endif
#else
# ifndef _SSL_SESSION_is_resumable
#  define _SSL_SESSION_is_resumable OPENSSL_MANGLER_ASM(SSL_SESSION_is_resumable)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_new
#  define SSL_SESSION_new OPENSSL_MANGLER(SSL_SESSION_new)
# endif
#else
# ifndef _SSL_SESSION_new
#  define _SSL_SESSION_new OPENSSL_MANGLER_ASM(SSL_SESSION_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_print
#  define SSL_SESSION_print OPENSSL_MANGLER(SSL_SESSION_print)
# endif
#else
# ifndef _SSL_SESSION_print
#  define _SSL_SESSION_print OPENSSL_MANGLER_ASM(SSL_SESSION_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_print_fp
#  define SSL_SESSION_print_fp OPENSSL_MANGLER(SSL_SESSION_print_fp)
# endif
#else
# ifndef _SSL_SESSION_print_fp
#  define _SSL_SESSION_print_fp OPENSSL_MANGLER_ASM(SSL_SESSION_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_print_keylog
#  define SSL_SESSION_print_keylog OPENSSL_MANGLER(SSL_SESSION_print_keylog)
# endif
#else
# ifndef _SSL_SESSION_print_keylog
#  define _SSL_SESSION_print_keylog OPENSSL_MANGLER_ASM(SSL_SESSION_print_keylog)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set1_alpn_selected
#  define SSL_SESSION_set1_alpn_selected OPENSSL_MANGLER(SSL_SESSION_set1_alpn_selected)
# endif
#else
# ifndef _SSL_SESSION_set1_alpn_selected
#  define _SSL_SESSION_set1_alpn_selected OPENSSL_MANGLER_ASM(SSL_SESSION_set1_alpn_selected)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set1_hostname
#  define SSL_SESSION_set1_hostname OPENSSL_MANGLER(SSL_SESSION_set1_hostname)
# endif
#else
# ifndef _SSL_SESSION_set1_hostname
#  define _SSL_SESSION_set1_hostname OPENSSL_MANGLER_ASM(SSL_SESSION_set1_hostname)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set1_id
#  define SSL_SESSION_set1_id OPENSSL_MANGLER(SSL_SESSION_set1_id)
# endif
#else
# ifndef _SSL_SESSION_set1_id
#  define _SSL_SESSION_set1_id OPENSSL_MANGLER_ASM(SSL_SESSION_set1_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set1_id_context
#  define SSL_SESSION_set1_id_context OPENSSL_MANGLER(SSL_SESSION_set1_id_context)
# endif
#else
# ifndef _SSL_SESSION_set1_id_context
#  define _SSL_SESSION_set1_id_context OPENSSL_MANGLER_ASM(SSL_SESSION_set1_id_context)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set1_master_key
#  define SSL_SESSION_set1_master_key OPENSSL_MANGLER(SSL_SESSION_set1_master_key)
# endif
#else
# ifndef _SSL_SESSION_set1_master_key
#  define _SSL_SESSION_set1_master_key OPENSSL_MANGLER_ASM(SSL_SESSION_set1_master_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set1_ticket_appdata
#  define SSL_SESSION_set1_ticket_appdata OPENSSL_MANGLER(SSL_SESSION_set1_ticket_appdata)
# endif
#else
# ifndef _SSL_SESSION_set1_ticket_appdata
#  define _SSL_SESSION_set1_ticket_appdata OPENSSL_MANGLER_ASM(SSL_SESSION_set1_ticket_appdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set_cipher
#  define SSL_SESSION_set_cipher OPENSSL_MANGLER(SSL_SESSION_set_cipher)
# endif
#else
# ifndef _SSL_SESSION_set_cipher
#  define _SSL_SESSION_set_cipher OPENSSL_MANGLER_ASM(SSL_SESSION_set_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set_ex_data
#  define SSL_SESSION_set_ex_data OPENSSL_MANGLER(SSL_SESSION_set_ex_data)
# endif
#else
# ifndef _SSL_SESSION_set_ex_data
#  define _SSL_SESSION_set_ex_data OPENSSL_MANGLER_ASM(SSL_SESSION_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set_max_early_data
#  define SSL_SESSION_set_max_early_data OPENSSL_MANGLER(SSL_SESSION_set_max_early_data)
# endif
#else
# ifndef _SSL_SESSION_set_max_early_data
#  define _SSL_SESSION_set_max_early_data OPENSSL_MANGLER_ASM(SSL_SESSION_set_max_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set_protocol_version
#  define SSL_SESSION_set_protocol_version OPENSSL_MANGLER(SSL_SESSION_set_protocol_version)
# endif
#else
# ifndef _SSL_SESSION_set_protocol_version
#  define _SSL_SESSION_set_protocol_version OPENSSL_MANGLER_ASM(SSL_SESSION_set_protocol_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set_time
#  define SSL_SESSION_set_time OPENSSL_MANGLER(SSL_SESSION_set_time)
# endif
#else
# ifndef _SSL_SESSION_set_time
#  define _SSL_SESSION_set_time OPENSSL_MANGLER_ASM(SSL_SESSION_set_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_set_timeout
#  define SSL_SESSION_set_timeout OPENSSL_MANGLER(SSL_SESSION_set_timeout)
# endif
#else
# ifndef _SSL_SESSION_set_timeout
#  define _SSL_SESSION_set_timeout OPENSSL_MANGLER_ASM(SSL_SESSION_set_timeout)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SESSION_up_ref
#  define SSL_SESSION_up_ref OPENSSL_MANGLER(SSL_SESSION_up_ref)
# endif
#else
# ifndef _SSL_SESSION_up_ref
#  define _SSL_SESSION_up_ref OPENSSL_MANGLER_ASM(SSL_SESSION_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SRP_CTX_free
#  define SSL_SRP_CTX_free OPENSSL_MANGLER(SSL_SRP_CTX_free)
# endif
#else
# ifndef _SSL_SRP_CTX_free
#  define _SSL_SRP_CTX_free OPENSSL_MANGLER_ASM(SSL_SRP_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_SRP_CTX_init
#  define SSL_SRP_CTX_init OPENSSL_MANGLER(SSL_SRP_CTX_init)
# endif
#else
# ifndef _SSL_SRP_CTX_init
#  define _SSL_SRP_CTX_init OPENSSL_MANGLER_ASM(SSL_SRP_CTX_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_accept
#  define SSL_accept OPENSSL_MANGLER(SSL_accept)
# endif
#else
# ifndef _SSL_accept
#  define _SSL_accept OPENSSL_MANGLER_ASM(SSL_accept)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_add1_host
#  define SSL_add1_host OPENSSL_MANGLER(SSL_add1_host)
# endif
#else
# ifndef _SSL_add1_host
#  define _SSL_add1_host OPENSSL_MANGLER_ASM(SSL_add1_host)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_add1_to_CA_list
#  define SSL_add1_to_CA_list OPENSSL_MANGLER(SSL_add1_to_CA_list)
# endif
#else
# ifndef _SSL_add1_to_CA_list
#  define _SSL_add1_to_CA_list OPENSSL_MANGLER_ASM(SSL_add1_to_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_add_client_CA
#  define SSL_add_client_CA OPENSSL_MANGLER(SSL_add_client_CA)
# endif
#else
# ifndef _SSL_add_client_CA
#  define _SSL_add_client_CA OPENSSL_MANGLER_ASM(SSL_add_client_CA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_add_dir_cert_subjects_to_stack
#  define SSL_add_dir_cert_subjects_to_stack OPENSSL_MANGLER(SSL_add_dir_cert_subjects_to_stack)
# endif
#else
# ifndef _SSL_add_dir_cert_subjects_to_stack
#  define _SSL_add_dir_cert_subjects_to_stack OPENSSL_MANGLER_ASM(SSL_add_dir_cert_subjects_to_stack)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_add_file_cert_subjects_to_stack
#  define SSL_add_file_cert_subjects_to_stack OPENSSL_MANGLER(SSL_add_file_cert_subjects_to_stack)
# endif
#else
# ifndef _SSL_add_file_cert_subjects_to_stack
#  define _SSL_add_file_cert_subjects_to_stack OPENSSL_MANGLER_ASM(SSL_add_file_cert_subjects_to_stack)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_add_ssl_module
#  define SSL_add_ssl_module OPENSSL_MANGLER(SSL_add_ssl_module)
# endif
#else
# ifndef _SSL_add_ssl_module
#  define _SSL_add_ssl_module OPENSSL_MANGLER_ASM(SSL_add_ssl_module)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_add_store_cert_subjects_to_stack
#  define SSL_add_store_cert_subjects_to_stack OPENSSL_MANGLER(SSL_add_store_cert_subjects_to_stack)
# endif
#else
# ifndef _SSL_add_store_cert_subjects_to_stack
#  define _SSL_add_store_cert_subjects_to_stack OPENSSL_MANGLER_ASM(SSL_add_store_cert_subjects_to_stack)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_alert_desc_string
#  define SSL_alert_desc_string OPENSSL_MANGLER(SSL_alert_desc_string)
# endif
#else
# ifndef _SSL_alert_desc_string
#  define _SSL_alert_desc_string OPENSSL_MANGLER_ASM(SSL_alert_desc_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_alert_desc_string_long
#  define SSL_alert_desc_string_long OPENSSL_MANGLER(SSL_alert_desc_string_long)
# endif
#else
# ifndef _SSL_alert_desc_string_long
#  define _SSL_alert_desc_string_long OPENSSL_MANGLER_ASM(SSL_alert_desc_string_long)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_alert_type_string
#  define SSL_alert_type_string OPENSSL_MANGLER(SSL_alert_type_string)
# endif
#else
# ifndef _SSL_alert_type_string
#  define _SSL_alert_type_string OPENSSL_MANGLER_ASM(SSL_alert_type_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_alert_type_string_long
#  define SSL_alert_type_string_long OPENSSL_MANGLER(SSL_alert_type_string_long)
# endif
#else
# ifndef _SSL_alert_type_string_long
#  define _SSL_alert_type_string_long OPENSSL_MANGLER_ASM(SSL_alert_type_string_long)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_alloc_buffers
#  define SSL_alloc_buffers OPENSSL_MANGLER(SSL_alloc_buffers)
# endif
#else
# ifndef _SSL_alloc_buffers
#  define _SSL_alloc_buffers OPENSSL_MANGLER_ASM(SSL_alloc_buffers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_bytes_to_cipher_list
#  define SSL_bytes_to_cipher_list OPENSSL_MANGLER(SSL_bytes_to_cipher_list)
# endif
#else
# ifndef _SSL_bytes_to_cipher_list
#  define _SSL_bytes_to_cipher_list OPENSSL_MANGLER_ASM(SSL_bytes_to_cipher_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_callback_ctrl
#  define SSL_callback_ctrl OPENSSL_MANGLER(SSL_callback_ctrl)
# endif
#else
# ifndef _SSL_callback_ctrl
#  define _SSL_callback_ctrl OPENSSL_MANGLER_ASM(SSL_callback_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_certs_clear
#  define SSL_certs_clear OPENSSL_MANGLER(SSL_certs_clear)
# endif
#else
# ifndef _SSL_certs_clear
#  define _SSL_certs_clear OPENSSL_MANGLER_ASM(SSL_certs_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_check_chain
#  define SSL_check_chain OPENSSL_MANGLER(SSL_check_chain)
# endif
#else
# ifndef _SSL_check_chain
#  define _SSL_check_chain OPENSSL_MANGLER_ASM(SSL_check_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_check_private_key
#  define SSL_check_private_key OPENSSL_MANGLER(SSL_check_private_key)
# endif
#else
# ifndef _SSL_check_private_key
#  define _SSL_check_private_key OPENSSL_MANGLER_ASM(SSL_check_private_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_clear
#  define SSL_clear OPENSSL_MANGLER(SSL_clear)
# endif
#else
# ifndef _SSL_clear
#  define _SSL_clear OPENSSL_MANGLER_ASM(SSL_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_clear_options
#  define SSL_clear_options OPENSSL_MANGLER(SSL_clear_options)
# endif
#else
# ifndef _SSL_clear_options
#  define _SSL_clear_options OPENSSL_MANGLER_ASM(SSL_clear_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_client_hello_get0_ciphers
#  define SSL_client_hello_get0_ciphers OPENSSL_MANGLER(SSL_client_hello_get0_ciphers)
# endif
#else
# ifndef _SSL_client_hello_get0_ciphers
#  define _SSL_client_hello_get0_ciphers OPENSSL_MANGLER_ASM(SSL_client_hello_get0_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_client_hello_get0_compression_methods
#  define SSL_client_hello_get0_compression_methods OPENSSL_MANGLER(SSL_client_hello_get0_compression_methods)
# endif
#else
# ifndef _SSL_client_hello_get0_compression_methods
#  define _SSL_client_hello_get0_compression_methods OPENSSL_MANGLER_ASM(SSL_client_hello_get0_compression_methods)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_client_hello_get0_ext
#  define SSL_client_hello_get0_ext OPENSSL_MANGLER(SSL_client_hello_get0_ext)
# endif
#else
# ifndef _SSL_client_hello_get0_ext
#  define _SSL_client_hello_get0_ext OPENSSL_MANGLER_ASM(SSL_client_hello_get0_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_client_hello_get0_legacy_version
#  define SSL_client_hello_get0_legacy_version OPENSSL_MANGLER(SSL_client_hello_get0_legacy_version)
# endif
#else
# ifndef _SSL_client_hello_get0_legacy_version
#  define _SSL_client_hello_get0_legacy_version OPENSSL_MANGLER_ASM(SSL_client_hello_get0_legacy_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_client_hello_get0_random
#  define SSL_client_hello_get0_random OPENSSL_MANGLER(SSL_client_hello_get0_random)
# endif
#else
# ifndef _SSL_client_hello_get0_random
#  define _SSL_client_hello_get0_random OPENSSL_MANGLER_ASM(SSL_client_hello_get0_random)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_client_hello_get0_session_id
#  define SSL_client_hello_get0_session_id OPENSSL_MANGLER(SSL_client_hello_get0_session_id)
# endif
#else
# ifndef _SSL_client_hello_get0_session_id
#  define _SSL_client_hello_get0_session_id OPENSSL_MANGLER_ASM(SSL_client_hello_get0_session_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_client_hello_get1_extensions_present
#  define SSL_client_hello_get1_extensions_present OPENSSL_MANGLER(SSL_client_hello_get1_extensions_present)
# endif
#else
# ifndef _SSL_client_hello_get1_extensions_present
#  define _SSL_client_hello_get1_extensions_present OPENSSL_MANGLER_ASM(SSL_client_hello_get1_extensions_present)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_client_hello_isv2
#  define SSL_client_hello_isv2 OPENSSL_MANGLER(SSL_client_hello_isv2)
# endif
#else
# ifndef _SSL_client_hello_isv2
#  define _SSL_client_hello_isv2 OPENSSL_MANGLER_ASM(SSL_client_hello_isv2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_client_version
#  define SSL_client_version OPENSSL_MANGLER(SSL_client_version)
# endif
#else
# ifndef _SSL_client_version
#  define _SSL_client_version OPENSSL_MANGLER_ASM(SSL_client_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_config
#  define SSL_config OPENSSL_MANGLER(SSL_config)
# endif
#else
# ifndef _SSL_config
#  define _SSL_config OPENSSL_MANGLER_ASM(SSL_config)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_connect
#  define SSL_connect OPENSSL_MANGLER(SSL_connect)
# endif
#else
# ifndef _SSL_connect
#  define _SSL_connect OPENSSL_MANGLER_ASM(SSL_connect)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_copy_session_id
#  define SSL_copy_session_id OPENSSL_MANGLER(SSL_copy_session_id)
# endif
#else
# ifndef _SSL_copy_session_id
#  define _SSL_copy_session_id OPENSSL_MANGLER_ASM(SSL_copy_session_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_ct_is_enabled
#  define SSL_ct_is_enabled OPENSSL_MANGLER(SSL_ct_is_enabled)
# endif
#else
# ifndef _SSL_ct_is_enabled
#  define _SSL_ct_is_enabled OPENSSL_MANGLER_ASM(SSL_ct_is_enabled)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_ctrl
#  define SSL_ctrl OPENSSL_MANGLER(SSL_ctrl)
# endif
#else
# ifndef _SSL_ctrl
#  define _SSL_ctrl OPENSSL_MANGLER_ASM(SSL_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_dane_clear_flags
#  define SSL_dane_clear_flags OPENSSL_MANGLER(SSL_dane_clear_flags)
# endif
#else
# ifndef _SSL_dane_clear_flags
#  define _SSL_dane_clear_flags OPENSSL_MANGLER_ASM(SSL_dane_clear_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_dane_enable
#  define SSL_dane_enable OPENSSL_MANGLER(SSL_dane_enable)
# endif
#else
# ifndef _SSL_dane_enable
#  define _SSL_dane_enable OPENSSL_MANGLER_ASM(SSL_dane_enable)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_dane_set_flags
#  define SSL_dane_set_flags OPENSSL_MANGLER(SSL_dane_set_flags)
# endif
#else
# ifndef _SSL_dane_set_flags
#  define _SSL_dane_set_flags OPENSSL_MANGLER_ASM(SSL_dane_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_dane_tlsa_add
#  define SSL_dane_tlsa_add OPENSSL_MANGLER(SSL_dane_tlsa_add)
# endif
#else
# ifndef _SSL_dane_tlsa_add
#  define _SSL_dane_tlsa_add OPENSSL_MANGLER_ASM(SSL_dane_tlsa_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_do_handshake
#  define SSL_do_handshake OPENSSL_MANGLER(SSL_do_handshake)
# endif
#else
# ifndef _SSL_do_handshake
#  define _SSL_do_handshake OPENSSL_MANGLER_ASM(SSL_do_handshake)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_dup
#  define SSL_dup OPENSSL_MANGLER(SSL_dup)
# endif
#else
# ifndef _SSL_dup
#  define _SSL_dup OPENSSL_MANGLER_ASM(SSL_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_dup_CA_list
#  define SSL_dup_CA_list OPENSSL_MANGLER(SSL_dup_CA_list)
# endif
#else
# ifndef _SSL_dup_CA_list
#  define _SSL_dup_CA_list OPENSSL_MANGLER_ASM(SSL_dup_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_enable_ct
#  define SSL_enable_ct OPENSSL_MANGLER(SSL_enable_ct)
# endif
#else
# ifndef _SSL_enable_ct
#  define _SSL_enable_ct OPENSSL_MANGLER_ASM(SSL_enable_ct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_export_keying_material
#  define SSL_export_keying_material OPENSSL_MANGLER(SSL_export_keying_material)
# endif
#else
# ifndef _SSL_export_keying_material
#  define _SSL_export_keying_material OPENSSL_MANGLER_ASM(SSL_export_keying_material)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_export_keying_material_early
#  define SSL_export_keying_material_early OPENSSL_MANGLER(SSL_export_keying_material_early)
# endif
#else
# ifndef _SSL_export_keying_material_early
#  define _SSL_export_keying_material_early OPENSSL_MANGLER_ASM(SSL_export_keying_material_early)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_extension_supported
#  define SSL_extension_supported OPENSSL_MANGLER(SSL_extension_supported)
# endif
#else
# ifndef _SSL_extension_supported
#  define _SSL_extension_supported OPENSSL_MANGLER_ASM(SSL_extension_supported)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_free
#  define SSL_free OPENSSL_MANGLER(SSL_free)
# endif
#else
# ifndef _SSL_free
#  define _SSL_free OPENSSL_MANGLER_ASM(SSL_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_free_buffers
#  define SSL_free_buffers OPENSSL_MANGLER(SSL_free_buffers)
# endif
#else
# ifndef _SSL_free_buffers
#  define _SSL_free_buffers OPENSSL_MANGLER_ASM(SSL_free_buffers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_CA_list
#  define SSL_get0_CA_list OPENSSL_MANGLER(SSL_get0_CA_list)
# endif
#else
# ifndef _SSL_get0_CA_list
#  define _SSL_get0_CA_list OPENSSL_MANGLER_ASM(SSL_get0_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_alpn_selected
#  define SSL_get0_alpn_selected OPENSSL_MANGLER(SSL_get0_alpn_selected)
# endif
#else
# ifndef _SSL_get0_alpn_selected
#  define _SSL_get0_alpn_selected OPENSSL_MANGLER_ASM(SSL_get0_alpn_selected)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_dane
#  define SSL_get0_dane OPENSSL_MANGLER(SSL_get0_dane)
# endif
#else
# ifndef _SSL_get0_dane
#  define _SSL_get0_dane OPENSSL_MANGLER_ASM(SSL_get0_dane)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_dane_authority
#  define SSL_get0_dane_authority OPENSSL_MANGLER(SSL_get0_dane_authority)
# endif
#else
# ifndef _SSL_get0_dane_authority
#  define _SSL_get0_dane_authority OPENSSL_MANGLER_ASM(SSL_get0_dane_authority)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_dane_tlsa
#  define SSL_get0_dane_tlsa OPENSSL_MANGLER(SSL_get0_dane_tlsa)
# endif
#else
# ifndef _SSL_get0_dane_tlsa
#  define _SSL_get0_dane_tlsa OPENSSL_MANGLER_ASM(SSL_get0_dane_tlsa)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_next_proto_negotiated
#  define SSL_get0_next_proto_negotiated OPENSSL_MANGLER(SSL_get0_next_proto_negotiated)
# endif
#else
# ifndef _SSL_get0_next_proto_negotiated
#  define _SSL_get0_next_proto_negotiated OPENSSL_MANGLER_ASM(SSL_get0_next_proto_negotiated)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_param
#  define SSL_get0_param OPENSSL_MANGLER(SSL_get0_param)
# endif
#else
# ifndef _SSL_get0_param
#  define _SSL_get0_param OPENSSL_MANGLER_ASM(SSL_get0_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_peer_CA_list
#  define SSL_get0_peer_CA_list OPENSSL_MANGLER(SSL_get0_peer_CA_list)
# endif
#else
# ifndef _SSL_get0_peer_CA_list
#  define _SSL_get0_peer_CA_list OPENSSL_MANGLER_ASM(SSL_get0_peer_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_peer_certificate
#  define SSL_get0_peer_certificate OPENSSL_MANGLER(SSL_get0_peer_certificate)
# endif
#else
# ifndef _SSL_get0_peer_certificate
#  define _SSL_get0_peer_certificate OPENSSL_MANGLER_ASM(SSL_get0_peer_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_peer_scts
#  define SSL_get0_peer_scts OPENSSL_MANGLER(SSL_get0_peer_scts)
# endif
#else
# ifndef _SSL_get0_peer_scts
#  define _SSL_get0_peer_scts OPENSSL_MANGLER_ASM(SSL_get0_peer_scts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_peername
#  define SSL_get0_peername OPENSSL_MANGLER(SSL_get0_peername)
# endif
#else
# ifndef _SSL_get0_peername
#  define _SSL_get0_peername OPENSSL_MANGLER_ASM(SSL_get0_peername)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_security_ex_data
#  define SSL_get0_security_ex_data OPENSSL_MANGLER(SSL_get0_security_ex_data)
# endif
#else
# ifndef _SSL_get0_security_ex_data
#  define _SSL_get0_security_ex_data OPENSSL_MANGLER_ASM(SSL_get0_security_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get0_verified_chain
#  define SSL_get0_verified_chain OPENSSL_MANGLER(SSL_get0_verified_chain)
# endif
#else
# ifndef _SSL_get0_verified_chain
#  define _SSL_get0_verified_chain OPENSSL_MANGLER_ASM(SSL_get0_verified_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get1_peer_certificate
#  define SSL_get1_peer_certificate OPENSSL_MANGLER(SSL_get1_peer_certificate)
# endif
#else
# ifndef _SSL_get1_peer_certificate
#  define _SSL_get1_peer_certificate OPENSSL_MANGLER_ASM(SSL_get1_peer_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get1_session
#  define SSL_get1_session OPENSSL_MANGLER(SSL_get1_session)
# endif
#else
# ifndef _SSL_get1_session
#  define _SSL_get1_session OPENSSL_MANGLER_ASM(SSL_get1_session)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get1_supported_ciphers
#  define SSL_get1_supported_ciphers OPENSSL_MANGLER(SSL_get1_supported_ciphers)
# endif
#else
# ifndef _SSL_get1_supported_ciphers
#  define _SSL_get1_supported_ciphers OPENSSL_MANGLER_ASM(SSL_get1_supported_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_SSL_CTX
#  define SSL_get_SSL_CTX OPENSSL_MANGLER(SSL_get_SSL_CTX)
# endif
#else
# ifndef _SSL_get_SSL_CTX
#  define _SSL_get_SSL_CTX OPENSSL_MANGLER_ASM(SSL_get_SSL_CTX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_all_async_fds
#  define SSL_get_all_async_fds OPENSSL_MANGLER(SSL_get_all_async_fds)
# endif
#else
# ifndef _SSL_get_all_async_fds
#  define _SSL_get_all_async_fds OPENSSL_MANGLER_ASM(SSL_get_all_async_fds)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_async_status
#  define SSL_get_async_status OPENSSL_MANGLER(SSL_get_async_status)
# endif
#else
# ifndef _SSL_get_async_status
#  define _SSL_get_async_status OPENSSL_MANGLER_ASM(SSL_get_async_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_certificate
#  define SSL_get_certificate OPENSSL_MANGLER(SSL_get_certificate)
# endif
#else
# ifndef _SSL_get_certificate
#  define _SSL_get_certificate OPENSSL_MANGLER_ASM(SSL_get_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_changed_async_fds
#  define SSL_get_changed_async_fds OPENSSL_MANGLER(SSL_get_changed_async_fds)
# endif
#else
# ifndef _SSL_get_changed_async_fds
#  define _SSL_get_changed_async_fds OPENSSL_MANGLER_ASM(SSL_get_changed_async_fds)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_cipher_list
#  define SSL_get_cipher_list OPENSSL_MANGLER(SSL_get_cipher_list)
# endif
#else
# ifndef _SSL_get_cipher_list
#  define _SSL_get_cipher_list OPENSSL_MANGLER_ASM(SSL_get_cipher_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_ciphers
#  define SSL_get_ciphers OPENSSL_MANGLER(SSL_get_ciphers)
# endif
#else
# ifndef _SSL_get_ciphers
#  define _SSL_get_ciphers OPENSSL_MANGLER_ASM(SSL_get_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_client_CA_list
#  define SSL_get_client_CA_list OPENSSL_MANGLER(SSL_get_client_CA_list)
# endif
#else
# ifndef _SSL_get_client_CA_list
#  define _SSL_get_client_CA_list OPENSSL_MANGLER_ASM(SSL_get_client_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_client_ciphers
#  define SSL_get_client_ciphers OPENSSL_MANGLER(SSL_get_client_ciphers)
# endif
#else
# ifndef _SSL_get_client_ciphers
#  define _SSL_get_client_ciphers OPENSSL_MANGLER_ASM(SSL_get_client_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_client_random
#  define SSL_get_client_random OPENSSL_MANGLER(SSL_get_client_random)
# endif
#else
# ifndef _SSL_get_client_random
#  define _SSL_get_client_random OPENSSL_MANGLER_ASM(SSL_get_client_random)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_current_cipher
#  define SSL_get_current_cipher OPENSSL_MANGLER(SSL_get_current_cipher)
# endif
#else
# ifndef _SSL_get_current_cipher
#  define _SSL_get_current_cipher OPENSSL_MANGLER_ASM(SSL_get_current_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_current_compression
#  define SSL_get_current_compression OPENSSL_MANGLER(SSL_get_current_compression)
# endif
#else
# ifndef _SSL_get_current_compression
#  define _SSL_get_current_compression OPENSSL_MANGLER_ASM(SSL_get_current_compression)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_current_expansion
#  define SSL_get_current_expansion OPENSSL_MANGLER(SSL_get_current_expansion)
# endif
#else
# ifndef _SSL_get_current_expansion
#  define _SSL_get_current_expansion OPENSSL_MANGLER_ASM(SSL_get_current_expansion)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_default_passwd_cb
#  define SSL_get_default_passwd_cb OPENSSL_MANGLER(SSL_get_default_passwd_cb)
# endif
#else
# ifndef _SSL_get_default_passwd_cb
#  define _SSL_get_default_passwd_cb OPENSSL_MANGLER_ASM(SSL_get_default_passwd_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_default_passwd_cb_userdata
#  define SSL_get_default_passwd_cb_userdata OPENSSL_MANGLER(SSL_get_default_passwd_cb_userdata)
# endif
#else
# ifndef _SSL_get_default_passwd_cb_userdata
#  define _SSL_get_default_passwd_cb_userdata OPENSSL_MANGLER_ASM(SSL_get_default_passwd_cb_userdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_default_timeout
#  define SSL_get_default_timeout OPENSSL_MANGLER(SSL_get_default_timeout)
# endif
#else
# ifndef _SSL_get_default_timeout
#  define _SSL_get_default_timeout OPENSSL_MANGLER_ASM(SSL_get_default_timeout)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_early_data_status
#  define SSL_get_early_data_status OPENSSL_MANGLER(SSL_get_early_data_status)
# endif
#else
# ifndef _SSL_get_early_data_status
#  define _SSL_get_early_data_status OPENSSL_MANGLER_ASM(SSL_get_early_data_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_error
#  define SSL_get_error OPENSSL_MANGLER(SSL_get_error)
# endif
#else
# ifndef _SSL_get_error
#  define _SSL_get_error OPENSSL_MANGLER_ASM(SSL_get_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_ex_data
#  define SSL_get_ex_data OPENSSL_MANGLER(SSL_get_ex_data)
# endif
#else
# ifndef _SSL_get_ex_data
#  define _SSL_get_ex_data OPENSSL_MANGLER_ASM(SSL_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_ex_data_X509_STORE_CTX_idx
#  define SSL_get_ex_data_X509_STORE_CTX_idx OPENSSL_MANGLER(SSL_get_ex_data_X509_STORE_CTX_idx)
# endif
#else
# ifndef _SSL_get_ex_data_X509_STORE_CTX_idx
#  define _SSL_get_ex_data_X509_STORE_CTX_idx OPENSSL_MANGLER_ASM(SSL_get_ex_data_X509_STORE_CTX_idx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_fd
#  define SSL_get_fd OPENSSL_MANGLER(SSL_get_fd)
# endif
#else
# ifndef _SSL_get_fd
#  define _SSL_get_fd OPENSSL_MANGLER_ASM(SSL_get_fd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_finished
#  define SSL_get_finished OPENSSL_MANGLER(SSL_get_finished)
# endif
#else
# ifndef _SSL_get_finished
#  define _SSL_get_finished OPENSSL_MANGLER_ASM(SSL_get_finished)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_info_callback
#  define SSL_get_info_callback OPENSSL_MANGLER(SSL_get_info_callback)
# endif
#else
# ifndef _SSL_get_info_callback
#  define _SSL_get_info_callback OPENSSL_MANGLER_ASM(SSL_get_info_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_key_update_type
#  define SSL_get_key_update_type OPENSSL_MANGLER(SSL_get_key_update_type)
# endif
#else
# ifndef _SSL_get_key_update_type
#  define _SSL_get_key_update_type OPENSSL_MANGLER_ASM(SSL_get_key_update_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_max_early_data
#  define SSL_get_max_early_data OPENSSL_MANGLER(SSL_get_max_early_data)
# endif
#else
# ifndef _SSL_get_max_early_data
#  define _SSL_get_max_early_data OPENSSL_MANGLER_ASM(SSL_get_max_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_num_tickets
#  define SSL_get_num_tickets OPENSSL_MANGLER(SSL_get_num_tickets)
# endif
#else
# ifndef _SSL_get_num_tickets
#  define _SSL_get_num_tickets OPENSSL_MANGLER_ASM(SSL_get_num_tickets)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_options
#  define SSL_get_options OPENSSL_MANGLER(SSL_get_options)
# endif
#else
# ifndef _SSL_get_options
#  define _SSL_get_options OPENSSL_MANGLER_ASM(SSL_get_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_peer_cert_chain
#  define SSL_get_peer_cert_chain OPENSSL_MANGLER(SSL_get_peer_cert_chain)
# endif
#else
# ifndef _SSL_get_peer_cert_chain
#  define _SSL_get_peer_cert_chain OPENSSL_MANGLER_ASM(SSL_get_peer_cert_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_peer_finished
#  define SSL_get_peer_finished OPENSSL_MANGLER(SSL_get_peer_finished)
# endif
#else
# ifndef _SSL_get_peer_finished
#  define _SSL_get_peer_finished OPENSSL_MANGLER_ASM(SSL_get_peer_finished)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_peer_signature_type_nid
#  define SSL_get_peer_signature_type_nid OPENSSL_MANGLER(SSL_get_peer_signature_type_nid)
# endif
#else
# ifndef _SSL_get_peer_signature_type_nid
#  define _SSL_get_peer_signature_type_nid OPENSSL_MANGLER_ASM(SSL_get_peer_signature_type_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_pending_cipher
#  define SSL_get_pending_cipher OPENSSL_MANGLER(SSL_get_pending_cipher)
# endif
#else
# ifndef _SSL_get_pending_cipher
#  define _SSL_get_pending_cipher OPENSSL_MANGLER_ASM(SSL_get_pending_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_privatekey
#  define SSL_get_privatekey OPENSSL_MANGLER(SSL_get_privatekey)
# endif
#else
# ifndef _SSL_get_privatekey
#  define _SSL_get_privatekey OPENSSL_MANGLER_ASM(SSL_get_privatekey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_psk_identity
#  define SSL_get_psk_identity OPENSSL_MANGLER(SSL_get_psk_identity)
# endif
#else
# ifndef _SSL_get_psk_identity
#  define _SSL_get_psk_identity OPENSSL_MANGLER_ASM(SSL_get_psk_identity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_psk_identity_hint
#  define SSL_get_psk_identity_hint OPENSSL_MANGLER(SSL_get_psk_identity_hint)
# endif
#else
# ifndef _SSL_get_psk_identity_hint
#  define _SSL_get_psk_identity_hint OPENSSL_MANGLER_ASM(SSL_get_psk_identity_hint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_quiet_shutdown
#  define SSL_get_quiet_shutdown OPENSSL_MANGLER(SSL_get_quiet_shutdown)
# endif
#else
# ifndef _SSL_get_quiet_shutdown
#  define _SSL_get_quiet_shutdown OPENSSL_MANGLER_ASM(SSL_get_quiet_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_rbio
#  define SSL_get_rbio OPENSSL_MANGLER(SSL_get_rbio)
# endif
#else
# ifndef _SSL_get_rbio
#  define _SSL_get_rbio OPENSSL_MANGLER_ASM(SSL_get_rbio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_read_ahead
#  define SSL_get_read_ahead OPENSSL_MANGLER(SSL_get_read_ahead)
# endif
#else
# ifndef _SSL_get_read_ahead
#  define _SSL_get_read_ahead OPENSSL_MANGLER_ASM(SSL_get_read_ahead)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_record_padding_callback_arg
#  define SSL_get_record_padding_callback_arg OPENSSL_MANGLER(SSL_get_record_padding_callback_arg)
# endif
#else
# ifndef _SSL_get_record_padding_callback_arg
#  define _SSL_get_record_padding_callback_arg OPENSSL_MANGLER_ASM(SSL_get_record_padding_callback_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_recv_max_early_data
#  define SSL_get_recv_max_early_data OPENSSL_MANGLER(SSL_get_recv_max_early_data)
# endif
#else
# ifndef _SSL_get_recv_max_early_data
#  define _SSL_get_recv_max_early_data OPENSSL_MANGLER_ASM(SSL_get_recv_max_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_rfd
#  define SSL_get_rfd OPENSSL_MANGLER(SSL_get_rfd)
# endif
#else
# ifndef _SSL_get_rfd
#  define _SSL_get_rfd OPENSSL_MANGLER_ASM(SSL_get_rfd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_security_callback
#  define SSL_get_security_callback OPENSSL_MANGLER(SSL_get_security_callback)
# endif
#else
# ifndef _SSL_get_security_callback
#  define _SSL_get_security_callback OPENSSL_MANGLER_ASM(SSL_get_security_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_security_level
#  define SSL_get_security_level OPENSSL_MANGLER(SSL_get_security_level)
# endif
#else
# ifndef _SSL_get_security_level
#  define _SSL_get_security_level OPENSSL_MANGLER_ASM(SSL_get_security_level)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_selected_srtp_profile
#  define SSL_get_selected_srtp_profile OPENSSL_MANGLER(SSL_get_selected_srtp_profile)
# endif
#else
# ifndef _SSL_get_selected_srtp_profile
#  define _SSL_get_selected_srtp_profile OPENSSL_MANGLER_ASM(SSL_get_selected_srtp_profile)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_server_random
#  define SSL_get_server_random OPENSSL_MANGLER(SSL_get_server_random)
# endif
#else
# ifndef _SSL_get_server_random
#  define _SSL_get_server_random OPENSSL_MANGLER_ASM(SSL_get_server_random)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_servername
#  define SSL_get_servername OPENSSL_MANGLER(SSL_get_servername)
# endif
#else
# ifndef _SSL_get_servername
#  define _SSL_get_servername OPENSSL_MANGLER_ASM(SSL_get_servername)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_servername_type
#  define SSL_get_servername_type OPENSSL_MANGLER(SSL_get_servername_type)
# endif
#else
# ifndef _SSL_get_servername_type
#  define _SSL_get_servername_type OPENSSL_MANGLER_ASM(SSL_get_servername_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_session
#  define SSL_get_session OPENSSL_MANGLER(SSL_get_session)
# endif
#else
# ifndef _SSL_get_session
#  define _SSL_get_session OPENSSL_MANGLER_ASM(SSL_get_session)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_shared_ciphers
#  define SSL_get_shared_ciphers OPENSSL_MANGLER(SSL_get_shared_ciphers)
# endif
#else
# ifndef _SSL_get_shared_ciphers
#  define _SSL_get_shared_ciphers OPENSSL_MANGLER_ASM(SSL_get_shared_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_shared_sigalgs
#  define SSL_get_shared_sigalgs OPENSSL_MANGLER(SSL_get_shared_sigalgs)
# endif
#else
# ifndef _SSL_get_shared_sigalgs
#  define _SSL_get_shared_sigalgs OPENSSL_MANGLER_ASM(SSL_get_shared_sigalgs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_shutdown
#  define SSL_get_shutdown OPENSSL_MANGLER(SSL_get_shutdown)
# endif
#else
# ifndef _SSL_get_shutdown
#  define _SSL_get_shutdown OPENSSL_MANGLER_ASM(SSL_get_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_sigalgs
#  define SSL_get_sigalgs OPENSSL_MANGLER(SSL_get_sigalgs)
# endif
#else
# ifndef _SSL_get_sigalgs
#  define _SSL_get_sigalgs OPENSSL_MANGLER_ASM(SSL_get_sigalgs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_signature_type_nid
#  define SSL_get_signature_type_nid OPENSSL_MANGLER(SSL_get_signature_type_nid)
# endif
#else
# ifndef _SSL_get_signature_type_nid
#  define _SSL_get_signature_type_nid OPENSSL_MANGLER_ASM(SSL_get_signature_type_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_srp_N
#  define SSL_get_srp_N OPENSSL_MANGLER(SSL_get_srp_N)
# endif
#else
# ifndef _SSL_get_srp_N
#  define _SSL_get_srp_N OPENSSL_MANGLER_ASM(SSL_get_srp_N)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_srp_g
#  define SSL_get_srp_g OPENSSL_MANGLER(SSL_get_srp_g)
# endif
#else
# ifndef _SSL_get_srp_g
#  define _SSL_get_srp_g OPENSSL_MANGLER_ASM(SSL_get_srp_g)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_srp_userinfo
#  define SSL_get_srp_userinfo OPENSSL_MANGLER(SSL_get_srp_userinfo)
# endif
#else
# ifndef _SSL_get_srp_userinfo
#  define _SSL_get_srp_userinfo OPENSSL_MANGLER_ASM(SSL_get_srp_userinfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_srp_username
#  define SSL_get_srp_username OPENSSL_MANGLER(SSL_get_srp_username)
# endif
#else
# ifndef _SSL_get_srp_username
#  define _SSL_get_srp_username OPENSSL_MANGLER_ASM(SSL_get_srp_username)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_srtp_profiles
#  define SSL_get_srtp_profiles OPENSSL_MANGLER(SSL_get_srtp_profiles)
# endif
#else
# ifndef _SSL_get_srtp_profiles
#  define _SSL_get_srtp_profiles OPENSSL_MANGLER_ASM(SSL_get_srtp_profiles)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_ssl_method
#  define SSL_get_ssl_method OPENSSL_MANGLER(SSL_get_ssl_method)
# endif
#else
# ifndef _SSL_get_ssl_method
#  define _SSL_get_ssl_method OPENSSL_MANGLER_ASM(SSL_get_ssl_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_state
#  define SSL_get_state OPENSSL_MANGLER(SSL_get_state)
# endif
#else
# ifndef _SSL_get_state
#  define _SSL_get_state OPENSSL_MANGLER_ASM(SSL_get_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_verify_callback
#  define SSL_get_verify_callback OPENSSL_MANGLER(SSL_get_verify_callback)
# endif
#else
# ifndef _SSL_get_verify_callback
#  define _SSL_get_verify_callback OPENSSL_MANGLER_ASM(SSL_get_verify_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_verify_depth
#  define SSL_get_verify_depth OPENSSL_MANGLER(SSL_get_verify_depth)
# endif
#else
# ifndef _SSL_get_verify_depth
#  define _SSL_get_verify_depth OPENSSL_MANGLER_ASM(SSL_get_verify_depth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_verify_mode
#  define SSL_get_verify_mode OPENSSL_MANGLER(SSL_get_verify_mode)
# endif
#else
# ifndef _SSL_get_verify_mode
#  define _SSL_get_verify_mode OPENSSL_MANGLER_ASM(SSL_get_verify_mode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_verify_result
#  define SSL_get_verify_result OPENSSL_MANGLER(SSL_get_verify_result)
# endif
#else
# ifndef _SSL_get_verify_result
#  define _SSL_get_verify_result OPENSSL_MANGLER_ASM(SSL_get_verify_result)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_version
#  define SSL_get_version OPENSSL_MANGLER(SSL_get_version)
# endif
#else
# ifndef _SSL_get_version
#  define _SSL_get_version OPENSSL_MANGLER_ASM(SSL_get_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_wbio
#  define SSL_get_wbio OPENSSL_MANGLER(SSL_get_wbio)
# endif
#else
# ifndef _SSL_get_wbio
#  define _SSL_get_wbio OPENSSL_MANGLER_ASM(SSL_get_wbio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_get_wfd
#  define SSL_get_wfd OPENSSL_MANGLER(SSL_get_wfd)
# endif
#else
# ifndef _SSL_get_wfd
#  define _SSL_get_wfd OPENSSL_MANGLER_ASM(SSL_get_wfd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_group_to_name
#  define SSL_group_to_name OPENSSL_MANGLER(SSL_group_to_name)
# endif
#else
# ifndef _SSL_group_to_name
#  define _SSL_group_to_name OPENSSL_MANGLER_ASM(SSL_group_to_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_has_matching_session_id
#  define SSL_has_matching_session_id OPENSSL_MANGLER(SSL_has_matching_session_id)
# endif
#else
# ifndef _SSL_has_matching_session_id
#  define _SSL_has_matching_session_id OPENSSL_MANGLER_ASM(SSL_has_matching_session_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_has_pending
#  define SSL_has_pending OPENSSL_MANGLER(SSL_has_pending)
# endif
#else
# ifndef _SSL_has_pending
#  define _SSL_has_pending OPENSSL_MANGLER_ASM(SSL_has_pending)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_in_before
#  define SSL_in_before OPENSSL_MANGLER(SSL_in_before)
# endif
#else
# ifndef _SSL_in_before
#  define _SSL_in_before OPENSSL_MANGLER_ASM(SSL_in_before)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_in_init
#  define SSL_in_init OPENSSL_MANGLER(SSL_in_init)
# endif
#else
# ifndef _SSL_in_init
#  define _SSL_in_init OPENSSL_MANGLER_ASM(SSL_in_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_is_dtls
#  define SSL_is_dtls OPENSSL_MANGLER(SSL_is_dtls)
# endif
#else
# ifndef _SSL_is_dtls
#  define _SSL_is_dtls OPENSSL_MANGLER_ASM(SSL_is_dtls)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_is_init_finished
#  define SSL_is_init_finished OPENSSL_MANGLER(SSL_is_init_finished)
# endif
#else
# ifndef _SSL_is_init_finished
#  define _SSL_is_init_finished OPENSSL_MANGLER_ASM(SSL_is_init_finished)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_is_server
#  define SSL_is_server OPENSSL_MANGLER(SSL_is_server)
# endif
#else
# ifndef _SSL_is_server
#  define _SSL_is_server OPENSSL_MANGLER_ASM(SSL_is_server)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_key_update
#  define SSL_key_update OPENSSL_MANGLER(SSL_key_update)
# endif
#else
# ifndef _SSL_key_update
#  define _SSL_key_update OPENSSL_MANGLER_ASM(SSL_key_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_load_client_CA_file
#  define SSL_load_client_CA_file OPENSSL_MANGLER(SSL_load_client_CA_file)
# endif
#else
# ifndef _SSL_load_client_CA_file
#  define _SSL_load_client_CA_file OPENSSL_MANGLER_ASM(SSL_load_client_CA_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_load_client_CA_file_ex
#  define SSL_load_client_CA_file_ex OPENSSL_MANGLER(SSL_load_client_CA_file_ex)
# endif
#else
# ifndef _SSL_load_client_CA_file_ex
#  define _SSL_load_client_CA_file_ex OPENSSL_MANGLER_ASM(SSL_load_client_CA_file_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_new
#  define SSL_new OPENSSL_MANGLER(SSL_new)
# endif
#else
# ifndef _SSL_new
#  define _SSL_new OPENSSL_MANGLER_ASM(SSL_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_new_session_ticket
#  define SSL_new_session_ticket OPENSSL_MANGLER(SSL_new_session_ticket)
# endif
#else
# ifndef _SSL_new_session_ticket
#  define _SSL_new_session_ticket OPENSSL_MANGLER_ASM(SSL_new_session_ticket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_peek
#  define SSL_peek OPENSSL_MANGLER(SSL_peek)
# endif
#else
# ifndef _SSL_peek
#  define _SSL_peek OPENSSL_MANGLER_ASM(SSL_peek)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_peek_ex
#  define SSL_peek_ex OPENSSL_MANGLER(SSL_peek_ex)
# endif
#else
# ifndef _SSL_peek_ex
#  define _SSL_peek_ex OPENSSL_MANGLER_ASM(SSL_peek_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_pending
#  define SSL_pending OPENSSL_MANGLER(SSL_pending)
# endif
#else
# ifndef _SSL_pending
#  define _SSL_pending OPENSSL_MANGLER_ASM(SSL_pending)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_read
#  define SSL_read OPENSSL_MANGLER(SSL_read)
# endif
#else
# ifndef _SSL_read
#  define _SSL_read OPENSSL_MANGLER_ASM(SSL_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_read_early_data
#  define SSL_read_early_data OPENSSL_MANGLER(SSL_read_early_data)
# endif
#else
# ifndef _SSL_read_early_data
#  define _SSL_read_early_data OPENSSL_MANGLER_ASM(SSL_read_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_read_ex
#  define SSL_read_ex OPENSSL_MANGLER(SSL_read_ex)
# endif
#else
# ifndef _SSL_read_ex
#  define _SSL_read_ex OPENSSL_MANGLER_ASM(SSL_read_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_renegotiate
#  define SSL_renegotiate OPENSSL_MANGLER(SSL_renegotiate)
# endif
#else
# ifndef _SSL_renegotiate
#  define _SSL_renegotiate OPENSSL_MANGLER_ASM(SSL_renegotiate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_renegotiate_abbreviated
#  define SSL_renegotiate_abbreviated OPENSSL_MANGLER(SSL_renegotiate_abbreviated)
# endif
#else
# ifndef _SSL_renegotiate_abbreviated
#  define _SSL_renegotiate_abbreviated OPENSSL_MANGLER_ASM(SSL_renegotiate_abbreviated)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_renegotiate_pending
#  define SSL_renegotiate_pending OPENSSL_MANGLER(SSL_renegotiate_pending)
# endif
#else
# ifndef _SSL_renegotiate_pending
#  define _SSL_renegotiate_pending OPENSSL_MANGLER_ASM(SSL_renegotiate_pending)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_rstate_string
#  define SSL_rstate_string OPENSSL_MANGLER(SSL_rstate_string)
# endif
#else
# ifndef _SSL_rstate_string
#  define _SSL_rstate_string OPENSSL_MANGLER_ASM(SSL_rstate_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_rstate_string_long
#  define SSL_rstate_string_long OPENSSL_MANGLER(SSL_rstate_string_long)
# endif
#else
# ifndef _SSL_rstate_string_long
#  define _SSL_rstate_string_long OPENSSL_MANGLER_ASM(SSL_rstate_string_long)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_select_next_proto
#  define SSL_select_next_proto OPENSSL_MANGLER(SSL_select_next_proto)
# endif
#else
# ifndef _SSL_select_next_proto
#  define _SSL_select_next_proto OPENSSL_MANGLER_ASM(SSL_select_next_proto)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_sendfile
#  define SSL_sendfile OPENSSL_MANGLER(SSL_sendfile)
# endif
#else
# ifndef _SSL_sendfile
#  define _SSL_sendfile OPENSSL_MANGLER_ASM(SSL_sendfile)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_session_reused
#  define SSL_session_reused OPENSSL_MANGLER(SSL_session_reused)
# endif
#else
# ifndef _SSL_session_reused
#  define _SSL_session_reused OPENSSL_MANGLER_ASM(SSL_session_reused)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set0_CA_list
#  define SSL_set0_CA_list OPENSSL_MANGLER(SSL_set0_CA_list)
# endif
#else
# ifndef _SSL_set0_CA_list
#  define _SSL_set0_CA_list OPENSSL_MANGLER_ASM(SSL_set0_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set0_rbio
#  define SSL_set0_rbio OPENSSL_MANGLER(SSL_set0_rbio)
# endif
#else
# ifndef _SSL_set0_rbio
#  define _SSL_set0_rbio OPENSSL_MANGLER_ASM(SSL_set0_rbio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set0_security_ex_data
#  define SSL_set0_security_ex_data OPENSSL_MANGLER(SSL_set0_security_ex_data)
# endif
#else
# ifndef _SSL_set0_security_ex_data
#  define _SSL_set0_security_ex_data OPENSSL_MANGLER_ASM(SSL_set0_security_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set0_tmp_dh_pkey
#  define SSL_set0_tmp_dh_pkey OPENSSL_MANGLER(SSL_set0_tmp_dh_pkey)
# endif
#else
# ifndef _SSL_set0_tmp_dh_pkey
#  define _SSL_set0_tmp_dh_pkey OPENSSL_MANGLER_ASM(SSL_set0_tmp_dh_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set0_wbio
#  define SSL_set0_wbio OPENSSL_MANGLER(SSL_set0_wbio)
# endif
#else
# ifndef _SSL_set0_wbio
#  define _SSL_set0_wbio OPENSSL_MANGLER_ASM(SSL_set0_wbio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set1_host
#  define SSL_set1_host OPENSSL_MANGLER(SSL_set1_host)
# endif
#else
# ifndef _SSL_set1_host
#  define _SSL_set1_host OPENSSL_MANGLER_ASM(SSL_set1_host)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set1_param
#  define SSL_set1_param OPENSSL_MANGLER(SSL_set1_param)
# endif
#else
# ifndef _SSL_set1_param
#  define _SSL_set1_param OPENSSL_MANGLER_ASM(SSL_set1_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_SSL_CTX
#  define SSL_set_SSL_CTX OPENSSL_MANGLER(SSL_set_SSL_CTX)
# endif
#else
# ifndef _SSL_set_SSL_CTX
#  define _SSL_set_SSL_CTX OPENSSL_MANGLER_ASM(SSL_set_SSL_CTX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_accept_state
#  define SSL_set_accept_state OPENSSL_MANGLER(SSL_set_accept_state)
# endif
#else
# ifndef _SSL_set_accept_state
#  define _SSL_set_accept_state OPENSSL_MANGLER_ASM(SSL_set_accept_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_allow_early_data_cb
#  define SSL_set_allow_early_data_cb OPENSSL_MANGLER(SSL_set_allow_early_data_cb)
# endif
#else
# ifndef _SSL_set_allow_early_data_cb
#  define _SSL_set_allow_early_data_cb OPENSSL_MANGLER_ASM(SSL_set_allow_early_data_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_alpn_protos
#  define SSL_set_alpn_protos OPENSSL_MANGLER(SSL_set_alpn_protos)
# endif
#else
# ifndef _SSL_set_alpn_protos
#  define _SSL_set_alpn_protos OPENSSL_MANGLER_ASM(SSL_set_alpn_protos)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_async_callback
#  define SSL_set_async_callback OPENSSL_MANGLER(SSL_set_async_callback)
# endif
#else
# ifndef _SSL_set_async_callback
#  define _SSL_set_async_callback OPENSSL_MANGLER_ASM(SSL_set_async_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_async_callback_arg
#  define SSL_set_async_callback_arg OPENSSL_MANGLER(SSL_set_async_callback_arg)
# endif
#else
# ifndef _SSL_set_async_callback_arg
#  define _SSL_set_async_callback_arg OPENSSL_MANGLER_ASM(SSL_set_async_callback_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_bio
#  define SSL_set_bio OPENSSL_MANGLER(SSL_set_bio)
# endif
#else
# ifndef _SSL_set_bio
#  define _SSL_set_bio OPENSSL_MANGLER_ASM(SSL_set_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_block_padding
#  define SSL_set_block_padding OPENSSL_MANGLER(SSL_set_block_padding)
# endif
#else
# ifndef _SSL_set_block_padding
#  define _SSL_set_block_padding OPENSSL_MANGLER_ASM(SSL_set_block_padding)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_cert_cb
#  define SSL_set_cert_cb OPENSSL_MANGLER(SSL_set_cert_cb)
# endif
#else
# ifndef _SSL_set_cert_cb
#  define _SSL_set_cert_cb OPENSSL_MANGLER_ASM(SSL_set_cert_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_cipher_list
#  define SSL_set_cipher_list OPENSSL_MANGLER(SSL_set_cipher_list)
# endif
#else
# ifndef _SSL_set_cipher_list
#  define _SSL_set_cipher_list OPENSSL_MANGLER_ASM(SSL_set_cipher_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_ciphersuites
#  define SSL_set_ciphersuites OPENSSL_MANGLER(SSL_set_ciphersuites)
# endif
#else
# ifndef _SSL_set_ciphersuites
#  define _SSL_set_ciphersuites OPENSSL_MANGLER_ASM(SSL_set_ciphersuites)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_client_CA_list
#  define SSL_set_client_CA_list OPENSSL_MANGLER(SSL_set_client_CA_list)
# endif
#else
# ifndef _SSL_set_client_CA_list
#  define _SSL_set_client_CA_list OPENSSL_MANGLER_ASM(SSL_set_client_CA_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_connect_state
#  define SSL_set_connect_state OPENSSL_MANGLER(SSL_set_connect_state)
# endif
#else
# ifndef _SSL_set_connect_state
#  define _SSL_set_connect_state OPENSSL_MANGLER_ASM(SSL_set_connect_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_ct_validation_callback
#  define SSL_set_ct_validation_callback OPENSSL_MANGLER(SSL_set_ct_validation_callback)
# endif
#else
# ifndef _SSL_set_ct_validation_callback
#  define _SSL_set_ct_validation_callback OPENSSL_MANGLER_ASM(SSL_set_ct_validation_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_debug
#  define SSL_set_debug OPENSSL_MANGLER(SSL_set_debug)
# endif
#else
# ifndef _SSL_set_debug
#  define _SSL_set_debug OPENSSL_MANGLER_ASM(SSL_set_debug)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_default_passwd_cb
#  define SSL_set_default_passwd_cb OPENSSL_MANGLER(SSL_set_default_passwd_cb)
# endif
#else
# ifndef _SSL_set_default_passwd_cb
#  define _SSL_set_default_passwd_cb OPENSSL_MANGLER_ASM(SSL_set_default_passwd_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_default_passwd_cb_userdata
#  define SSL_set_default_passwd_cb_userdata OPENSSL_MANGLER(SSL_set_default_passwd_cb_userdata)
# endif
#else
# ifndef _SSL_set_default_passwd_cb_userdata
#  define _SSL_set_default_passwd_cb_userdata OPENSSL_MANGLER_ASM(SSL_set_default_passwd_cb_userdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_default_read_buffer_len
#  define SSL_set_default_read_buffer_len OPENSSL_MANGLER(SSL_set_default_read_buffer_len)
# endif
#else
# ifndef _SSL_set_default_read_buffer_len
#  define _SSL_set_default_read_buffer_len OPENSSL_MANGLER_ASM(SSL_set_default_read_buffer_len)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_ex_data
#  define SSL_set_ex_data OPENSSL_MANGLER(SSL_set_ex_data)
# endif
#else
# ifndef _SSL_set_ex_data
#  define _SSL_set_ex_data OPENSSL_MANGLER_ASM(SSL_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_fd
#  define SSL_set_fd OPENSSL_MANGLER(SSL_set_fd)
# endif
#else
# ifndef _SSL_set_fd
#  define _SSL_set_fd OPENSSL_MANGLER_ASM(SSL_set_fd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_generate_session_id
#  define SSL_set_generate_session_id OPENSSL_MANGLER(SSL_set_generate_session_id)
# endif
#else
# ifndef _SSL_set_generate_session_id
#  define _SSL_set_generate_session_id OPENSSL_MANGLER_ASM(SSL_set_generate_session_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_hostflags
#  define SSL_set_hostflags OPENSSL_MANGLER(SSL_set_hostflags)
# endif
#else
# ifndef _SSL_set_hostflags
#  define _SSL_set_hostflags OPENSSL_MANGLER_ASM(SSL_set_hostflags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_info_callback
#  define SSL_set_info_callback OPENSSL_MANGLER(SSL_set_info_callback)
# endif
#else
# ifndef _SSL_set_info_callback
#  define _SSL_set_info_callback OPENSSL_MANGLER_ASM(SSL_set_info_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_max_early_data
#  define SSL_set_max_early_data OPENSSL_MANGLER(SSL_set_max_early_data)
# endif
#else
# ifndef _SSL_set_max_early_data
#  define _SSL_set_max_early_data OPENSSL_MANGLER_ASM(SSL_set_max_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_msg_callback
#  define SSL_set_msg_callback OPENSSL_MANGLER(SSL_set_msg_callback)
# endif
#else
# ifndef _SSL_set_msg_callback
#  define _SSL_set_msg_callback OPENSSL_MANGLER_ASM(SSL_set_msg_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_not_resumable_session_callback
#  define SSL_set_not_resumable_session_callback OPENSSL_MANGLER(SSL_set_not_resumable_session_callback)
# endif
#else
# ifndef _SSL_set_not_resumable_session_callback
#  define _SSL_set_not_resumable_session_callback OPENSSL_MANGLER_ASM(SSL_set_not_resumable_session_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_num_tickets
#  define SSL_set_num_tickets OPENSSL_MANGLER(SSL_set_num_tickets)
# endif
#else
# ifndef _SSL_set_num_tickets
#  define _SSL_set_num_tickets OPENSSL_MANGLER_ASM(SSL_set_num_tickets)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_options
#  define SSL_set_options OPENSSL_MANGLER(SSL_set_options)
# endif
#else
# ifndef _SSL_set_options
#  define _SSL_set_options OPENSSL_MANGLER_ASM(SSL_set_options)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_post_handshake_auth
#  define SSL_set_post_handshake_auth OPENSSL_MANGLER(SSL_set_post_handshake_auth)
# endif
#else
# ifndef _SSL_set_post_handshake_auth
#  define _SSL_set_post_handshake_auth OPENSSL_MANGLER_ASM(SSL_set_post_handshake_auth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_psk_client_callback
#  define SSL_set_psk_client_callback OPENSSL_MANGLER(SSL_set_psk_client_callback)
# endif
#else
# ifndef _SSL_set_psk_client_callback
#  define _SSL_set_psk_client_callback OPENSSL_MANGLER_ASM(SSL_set_psk_client_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_psk_find_session_callback
#  define SSL_set_psk_find_session_callback OPENSSL_MANGLER(SSL_set_psk_find_session_callback)
# endif
#else
# ifndef _SSL_set_psk_find_session_callback
#  define _SSL_set_psk_find_session_callback OPENSSL_MANGLER_ASM(SSL_set_psk_find_session_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_psk_server_callback
#  define SSL_set_psk_server_callback OPENSSL_MANGLER(SSL_set_psk_server_callback)
# endif
#else
# ifndef _SSL_set_psk_server_callback
#  define _SSL_set_psk_server_callback OPENSSL_MANGLER_ASM(SSL_set_psk_server_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_psk_use_session_callback
#  define SSL_set_psk_use_session_callback OPENSSL_MANGLER(SSL_set_psk_use_session_callback)
# endif
#else
# ifndef _SSL_set_psk_use_session_callback
#  define _SSL_set_psk_use_session_callback OPENSSL_MANGLER_ASM(SSL_set_psk_use_session_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_purpose
#  define SSL_set_purpose OPENSSL_MANGLER(SSL_set_purpose)
# endif
#else
# ifndef _SSL_set_purpose
#  define _SSL_set_purpose OPENSSL_MANGLER_ASM(SSL_set_purpose)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_quiet_shutdown
#  define SSL_set_quiet_shutdown OPENSSL_MANGLER(SSL_set_quiet_shutdown)
# endif
#else
# ifndef _SSL_set_quiet_shutdown
#  define _SSL_set_quiet_shutdown OPENSSL_MANGLER_ASM(SSL_set_quiet_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_read_ahead
#  define SSL_set_read_ahead OPENSSL_MANGLER(SSL_set_read_ahead)
# endif
#else
# ifndef _SSL_set_read_ahead
#  define _SSL_set_read_ahead OPENSSL_MANGLER_ASM(SSL_set_read_ahead)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_record_padding_callback
#  define SSL_set_record_padding_callback OPENSSL_MANGLER(SSL_set_record_padding_callback)
# endif
#else
# ifndef _SSL_set_record_padding_callback
#  define _SSL_set_record_padding_callback OPENSSL_MANGLER_ASM(SSL_set_record_padding_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_record_padding_callback_arg
#  define SSL_set_record_padding_callback_arg OPENSSL_MANGLER(SSL_set_record_padding_callback_arg)
# endif
#else
# ifndef _SSL_set_record_padding_callback_arg
#  define _SSL_set_record_padding_callback_arg OPENSSL_MANGLER_ASM(SSL_set_record_padding_callback_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_recv_max_early_data
#  define SSL_set_recv_max_early_data OPENSSL_MANGLER(SSL_set_recv_max_early_data)
# endif
#else
# ifndef _SSL_set_recv_max_early_data
#  define _SSL_set_recv_max_early_data OPENSSL_MANGLER_ASM(SSL_set_recv_max_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_rfd
#  define SSL_set_rfd OPENSSL_MANGLER(SSL_set_rfd)
# endif
#else
# ifndef _SSL_set_rfd
#  define _SSL_set_rfd OPENSSL_MANGLER_ASM(SSL_set_rfd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_security_callback
#  define SSL_set_security_callback OPENSSL_MANGLER(SSL_set_security_callback)
# endif
#else
# ifndef _SSL_set_security_callback
#  define _SSL_set_security_callback OPENSSL_MANGLER_ASM(SSL_set_security_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_security_level
#  define SSL_set_security_level OPENSSL_MANGLER(SSL_set_security_level)
# endif
#else
# ifndef _SSL_set_security_level
#  define _SSL_set_security_level OPENSSL_MANGLER_ASM(SSL_set_security_level)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_session
#  define SSL_set_session OPENSSL_MANGLER(SSL_set_session)
# endif
#else
# ifndef _SSL_set_session
#  define _SSL_set_session OPENSSL_MANGLER_ASM(SSL_set_session)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_session_id_context
#  define SSL_set_session_id_context OPENSSL_MANGLER(SSL_set_session_id_context)
# endif
#else
# ifndef _SSL_set_session_id_context
#  define _SSL_set_session_id_context OPENSSL_MANGLER_ASM(SSL_set_session_id_context)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_session_secret_cb
#  define SSL_set_session_secret_cb OPENSSL_MANGLER(SSL_set_session_secret_cb)
# endif
#else
# ifndef _SSL_set_session_secret_cb
#  define _SSL_set_session_secret_cb OPENSSL_MANGLER_ASM(SSL_set_session_secret_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_session_ticket_ext
#  define SSL_set_session_ticket_ext OPENSSL_MANGLER(SSL_set_session_ticket_ext)
# endif
#else
# ifndef _SSL_set_session_ticket_ext
#  define _SSL_set_session_ticket_ext OPENSSL_MANGLER_ASM(SSL_set_session_ticket_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_session_ticket_ext_cb
#  define SSL_set_session_ticket_ext_cb OPENSSL_MANGLER(SSL_set_session_ticket_ext_cb)
# endif
#else
# ifndef _SSL_set_session_ticket_ext_cb
#  define _SSL_set_session_ticket_ext_cb OPENSSL_MANGLER_ASM(SSL_set_session_ticket_ext_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_shutdown
#  define SSL_set_shutdown OPENSSL_MANGLER(SSL_set_shutdown)
# endif
#else
# ifndef _SSL_set_shutdown
#  define _SSL_set_shutdown OPENSSL_MANGLER_ASM(SSL_set_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_srp_server_param
#  define SSL_set_srp_server_param OPENSSL_MANGLER(SSL_set_srp_server_param)
# endif
#else
# ifndef _SSL_set_srp_server_param
#  define _SSL_set_srp_server_param OPENSSL_MANGLER_ASM(SSL_set_srp_server_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_srp_server_param_pw
#  define SSL_set_srp_server_param_pw OPENSSL_MANGLER(SSL_set_srp_server_param_pw)
# endif
#else
# ifndef _SSL_set_srp_server_param_pw
#  define _SSL_set_srp_server_param_pw OPENSSL_MANGLER_ASM(SSL_set_srp_server_param_pw)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_ssl_method
#  define SSL_set_ssl_method OPENSSL_MANGLER(SSL_set_ssl_method)
# endif
#else
# ifndef _SSL_set_ssl_method
#  define _SSL_set_ssl_method OPENSSL_MANGLER_ASM(SSL_set_ssl_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_tlsext_max_fragment_length
#  define SSL_set_tlsext_max_fragment_length OPENSSL_MANGLER(SSL_set_tlsext_max_fragment_length)
# endif
#else
# ifndef _SSL_set_tlsext_max_fragment_length
#  define _SSL_set_tlsext_max_fragment_length OPENSSL_MANGLER_ASM(SSL_set_tlsext_max_fragment_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_tlsext_use_srtp
#  define SSL_set_tlsext_use_srtp OPENSSL_MANGLER(SSL_set_tlsext_use_srtp)
# endif
#else
# ifndef _SSL_set_tlsext_use_srtp
#  define _SSL_set_tlsext_use_srtp OPENSSL_MANGLER_ASM(SSL_set_tlsext_use_srtp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_tmp_dh_callback
#  define SSL_set_tmp_dh_callback OPENSSL_MANGLER(SSL_set_tmp_dh_callback)
# endif
#else
# ifndef _SSL_set_tmp_dh_callback
#  define _SSL_set_tmp_dh_callback OPENSSL_MANGLER_ASM(SSL_set_tmp_dh_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_trust
#  define SSL_set_trust OPENSSL_MANGLER(SSL_set_trust)
# endif
#else
# ifndef _SSL_set_trust
#  define _SSL_set_trust OPENSSL_MANGLER_ASM(SSL_set_trust)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_verify
#  define SSL_set_verify OPENSSL_MANGLER(SSL_set_verify)
# endif
#else
# ifndef _SSL_set_verify
#  define _SSL_set_verify OPENSSL_MANGLER_ASM(SSL_set_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_verify_depth
#  define SSL_set_verify_depth OPENSSL_MANGLER(SSL_set_verify_depth)
# endif
#else
# ifndef _SSL_set_verify_depth
#  define _SSL_set_verify_depth OPENSSL_MANGLER_ASM(SSL_set_verify_depth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_verify_result
#  define SSL_set_verify_result OPENSSL_MANGLER(SSL_set_verify_result)
# endif
#else
# ifndef _SSL_set_verify_result
#  define _SSL_set_verify_result OPENSSL_MANGLER_ASM(SSL_set_verify_result)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_set_wfd
#  define SSL_set_wfd OPENSSL_MANGLER(SSL_set_wfd)
# endif
#else
# ifndef _SSL_set_wfd
#  define _SSL_set_wfd OPENSSL_MANGLER_ASM(SSL_set_wfd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_shutdown
#  define SSL_shutdown OPENSSL_MANGLER(SSL_shutdown)
# endif
#else
# ifndef _SSL_shutdown
#  define _SSL_shutdown OPENSSL_MANGLER_ASM(SSL_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_srp_server_param_with_username
#  define SSL_srp_server_param_with_username OPENSSL_MANGLER(SSL_srp_server_param_with_username)
# endif
#else
# ifndef _SSL_srp_server_param_with_username
#  define _SSL_srp_server_param_with_username OPENSSL_MANGLER_ASM(SSL_srp_server_param_with_username)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_state_string
#  define SSL_state_string OPENSSL_MANGLER(SSL_state_string)
# endif
#else
# ifndef _SSL_state_string
#  define _SSL_state_string OPENSSL_MANGLER_ASM(SSL_state_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_state_string_long
#  define SSL_state_string_long OPENSSL_MANGLER(SSL_state_string_long)
# endif
#else
# ifndef _SSL_state_string_long
#  define _SSL_state_string_long OPENSSL_MANGLER_ASM(SSL_state_string_long)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_stateless
#  define SSL_stateless OPENSSL_MANGLER(SSL_stateless)
# endif
#else
# ifndef _SSL_stateless
#  define _SSL_stateless OPENSSL_MANGLER_ASM(SSL_stateless)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_trace
#  define SSL_trace OPENSSL_MANGLER(SSL_trace)
# endif
#else
# ifndef _SSL_trace
#  define _SSL_trace OPENSSL_MANGLER_ASM(SSL_trace)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_up_ref
#  define SSL_up_ref OPENSSL_MANGLER(SSL_up_ref)
# endif
#else
# ifndef _SSL_up_ref
#  define _SSL_up_ref OPENSSL_MANGLER_ASM(SSL_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_use_PrivateKey
#  define SSL_use_PrivateKey OPENSSL_MANGLER(SSL_use_PrivateKey)
# endif
#else
# ifndef _SSL_use_PrivateKey
#  define _SSL_use_PrivateKey OPENSSL_MANGLER_ASM(SSL_use_PrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_use_PrivateKey_ASN1
#  define SSL_use_PrivateKey_ASN1 OPENSSL_MANGLER(SSL_use_PrivateKey_ASN1)
# endif
#else
# ifndef _SSL_use_PrivateKey_ASN1
#  define _SSL_use_PrivateKey_ASN1 OPENSSL_MANGLER_ASM(SSL_use_PrivateKey_ASN1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_use_PrivateKey_file
#  define SSL_use_PrivateKey_file OPENSSL_MANGLER(SSL_use_PrivateKey_file)
# endif
#else
# ifndef _SSL_use_PrivateKey_file
#  define _SSL_use_PrivateKey_file OPENSSL_MANGLER_ASM(SSL_use_PrivateKey_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_use_cert_and_key
#  define SSL_use_cert_and_key OPENSSL_MANGLER(SSL_use_cert_and_key)
# endif
#else
# ifndef _SSL_use_cert_and_key
#  define _SSL_use_cert_and_key OPENSSL_MANGLER_ASM(SSL_use_cert_and_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_use_certificate
#  define SSL_use_certificate OPENSSL_MANGLER(SSL_use_certificate)
# endif
#else
# ifndef _SSL_use_certificate
#  define _SSL_use_certificate OPENSSL_MANGLER_ASM(SSL_use_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_use_certificate_ASN1
#  define SSL_use_certificate_ASN1 OPENSSL_MANGLER(SSL_use_certificate_ASN1)
# endif
#else
# ifndef _SSL_use_certificate_ASN1
#  define _SSL_use_certificate_ASN1 OPENSSL_MANGLER_ASM(SSL_use_certificate_ASN1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_use_certificate_chain_file
#  define SSL_use_certificate_chain_file OPENSSL_MANGLER(SSL_use_certificate_chain_file)
# endif
#else
# ifndef _SSL_use_certificate_chain_file
#  define _SSL_use_certificate_chain_file OPENSSL_MANGLER_ASM(SSL_use_certificate_chain_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_use_certificate_file
#  define SSL_use_certificate_file OPENSSL_MANGLER(SSL_use_certificate_file)
# endif
#else
# ifndef _SSL_use_certificate_file
#  define _SSL_use_certificate_file OPENSSL_MANGLER_ASM(SSL_use_certificate_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_use_psk_identity_hint
#  define SSL_use_psk_identity_hint OPENSSL_MANGLER(SSL_use_psk_identity_hint)
# endif
#else
# ifndef _SSL_use_psk_identity_hint
#  define _SSL_use_psk_identity_hint OPENSSL_MANGLER_ASM(SSL_use_psk_identity_hint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_verify_client_post_handshake
#  define SSL_verify_client_post_handshake OPENSSL_MANGLER(SSL_verify_client_post_handshake)
# endif
#else
# ifndef _SSL_verify_client_post_handshake
#  define _SSL_verify_client_post_handshake OPENSSL_MANGLER_ASM(SSL_verify_client_post_handshake)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_version
#  define SSL_version OPENSSL_MANGLER(SSL_version)
# endif
#else
# ifndef _SSL_version
#  define _SSL_version OPENSSL_MANGLER_ASM(SSL_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_waiting_for_async
#  define SSL_waiting_for_async OPENSSL_MANGLER(SSL_waiting_for_async)
# endif
#else
# ifndef _SSL_waiting_for_async
#  define _SSL_waiting_for_async OPENSSL_MANGLER_ASM(SSL_waiting_for_async)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_want
#  define SSL_want OPENSSL_MANGLER(SSL_want)
# endif
#else
# ifndef _SSL_want
#  define _SSL_want OPENSSL_MANGLER_ASM(SSL_want)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_write
#  define SSL_write OPENSSL_MANGLER(SSL_write)
# endif
#else
# ifndef _SSL_write
#  define _SSL_write OPENSSL_MANGLER_ASM(SSL_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_write_early_data
#  define SSL_write_early_data OPENSSL_MANGLER(SSL_write_early_data)
# endif
#else
# ifndef _SSL_write_early_data
#  define _SSL_write_early_data OPENSSL_MANGLER_ASM(SSL_write_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSL_write_ex
#  define SSL_write_ex OPENSSL_MANGLER(SSL_write_ex)
# endif
#else
# ifndef _SSL_write_ex
#  define _SSL_write_ex OPENSSL_MANGLER_ASM(SSL_write_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SSLv3_enc_data
#  define SSLv3_enc_data OPENSSL_MANGLER(SSLv3_enc_data)
# endif
#else
# ifndef _SSLv3_enc_data
#  define _SSLv3_enc_data OPENSSL_MANGLER_ASM(SSLv3_enc_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNETID_free
#  define SXNETID_free OPENSSL_MANGLER(SXNETID_free)
# endif
#else
# ifndef _SXNETID_free
#  define _SXNETID_free OPENSSL_MANGLER_ASM(SXNETID_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNETID_it
#  define SXNETID_it OPENSSL_MANGLER(SXNETID_it)
# endif
#else
# ifndef _SXNETID_it
#  define _SXNETID_it OPENSSL_MANGLER_ASM(SXNETID_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNETID_new
#  define SXNETID_new OPENSSL_MANGLER(SXNETID_new)
# endif
#else
# ifndef _SXNETID_new
#  define _SXNETID_new OPENSSL_MANGLER_ASM(SXNETID_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNET_add_id_INTEGER
#  define SXNET_add_id_INTEGER OPENSSL_MANGLER(SXNET_add_id_INTEGER)
# endif
#else
# ifndef _SXNET_add_id_INTEGER
#  define _SXNET_add_id_INTEGER OPENSSL_MANGLER_ASM(SXNET_add_id_INTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNET_add_id_asc
#  define SXNET_add_id_asc OPENSSL_MANGLER(SXNET_add_id_asc)
# endif
#else
# ifndef _SXNET_add_id_asc
#  define _SXNET_add_id_asc OPENSSL_MANGLER_ASM(SXNET_add_id_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNET_add_id_ulong
#  define SXNET_add_id_ulong OPENSSL_MANGLER(SXNET_add_id_ulong)
# endif
#else
# ifndef _SXNET_add_id_ulong
#  define _SXNET_add_id_ulong OPENSSL_MANGLER_ASM(SXNET_add_id_ulong)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNET_free
#  define SXNET_free OPENSSL_MANGLER(SXNET_free)
# endif
#else
# ifndef _SXNET_free
#  define _SXNET_free OPENSSL_MANGLER_ASM(SXNET_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNET_get_id_INTEGER
#  define SXNET_get_id_INTEGER OPENSSL_MANGLER(SXNET_get_id_INTEGER)
# endif
#else
# ifndef _SXNET_get_id_INTEGER
#  define _SXNET_get_id_INTEGER OPENSSL_MANGLER_ASM(SXNET_get_id_INTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNET_get_id_asc
#  define SXNET_get_id_asc OPENSSL_MANGLER(SXNET_get_id_asc)
# endif
#else
# ifndef _SXNET_get_id_asc
#  define _SXNET_get_id_asc OPENSSL_MANGLER_ASM(SXNET_get_id_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNET_get_id_ulong
#  define SXNET_get_id_ulong OPENSSL_MANGLER(SXNET_get_id_ulong)
# endif
#else
# ifndef _SXNET_get_id_ulong
#  define _SXNET_get_id_ulong OPENSSL_MANGLER_ASM(SXNET_get_id_ulong)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNET_it
#  define SXNET_it OPENSSL_MANGLER(SXNET_it)
# endif
#else
# ifndef _SXNET_it
#  define _SXNET_it OPENSSL_MANGLER_ASM(SXNET_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SXNET_new
#  define SXNET_new OPENSSL_MANGLER(SXNET_new)
# endif
#else
# ifndef _SXNET_new
#  define _SXNET_new OPENSSL_MANGLER_ASM(SXNET_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SipHash_Final
#  define SipHash_Final OPENSSL_MANGLER(SipHash_Final)
# endif
#else
# ifndef _SipHash_Final
#  define _SipHash_Final OPENSSL_MANGLER_ASM(SipHash_Final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SipHash_Init
#  define SipHash_Init OPENSSL_MANGLER(SipHash_Init)
# endif
#else
# ifndef _SipHash_Init
#  define _SipHash_Init OPENSSL_MANGLER_ASM(SipHash_Init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SipHash_Update
#  define SipHash_Update OPENSSL_MANGLER(SipHash_Update)
# endif
#else
# ifndef _SipHash_Update
#  define _SipHash_Update OPENSSL_MANGLER_ASM(SipHash_Update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SipHash_ctx_size
#  define SipHash_ctx_size OPENSSL_MANGLER(SipHash_ctx_size)
# endif
#else
# ifndef _SipHash_ctx_size
#  define _SipHash_ctx_size OPENSSL_MANGLER_ASM(SipHash_ctx_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SipHash_hash_size
#  define SipHash_hash_size OPENSSL_MANGLER(SipHash_hash_size)
# endif
#else
# ifndef _SipHash_hash_size
#  define _SipHash_hash_size OPENSSL_MANGLER_ASM(SipHash_hash_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef SipHash_set_hash_size
#  define SipHash_set_hash_size OPENSSL_MANGLER(SipHash_set_hash_size)
# endif
#else
# ifndef _SipHash_set_hash_size
#  define _SipHash_set_hash_size OPENSSL_MANGLER_ASM(SipHash_set_hash_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLS_FEATURE_free
#  define TLS_FEATURE_free OPENSSL_MANGLER(TLS_FEATURE_free)
# endif
#else
# ifndef _TLS_FEATURE_free
#  define _TLS_FEATURE_free OPENSSL_MANGLER_ASM(TLS_FEATURE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLS_FEATURE_new
#  define TLS_FEATURE_new OPENSSL_MANGLER(TLS_FEATURE_new)
# endif
#else
# ifndef _TLS_FEATURE_new
#  define _TLS_FEATURE_new OPENSSL_MANGLER_ASM(TLS_FEATURE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLS_client_method
#  define TLS_client_method OPENSSL_MANGLER(TLS_client_method)
# endif
#else
# ifndef _TLS_client_method
#  define _TLS_client_method OPENSSL_MANGLER_ASM(TLS_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLS_method
#  define TLS_method OPENSSL_MANGLER(TLS_method)
# endif
#else
# ifndef _TLS_method
#  define _TLS_method OPENSSL_MANGLER_ASM(TLS_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLS_server_method
#  define TLS_server_method OPENSSL_MANGLER(TLS_server_method)
# endif
#else
# ifndef _TLS_server_method
#  define _TLS_server_method OPENSSL_MANGLER_ASM(TLS_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_1_client_method
#  define TLSv1_1_client_method OPENSSL_MANGLER(TLSv1_1_client_method)
# endif
#else
# ifndef _TLSv1_1_client_method
#  define _TLSv1_1_client_method OPENSSL_MANGLER_ASM(TLSv1_1_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_1_enc_data
#  define TLSv1_1_enc_data OPENSSL_MANGLER(TLSv1_1_enc_data)
# endif
#else
# ifndef _TLSv1_1_enc_data
#  define _TLSv1_1_enc_data OPENSSL_MANGLER_ASM(TLSv1_1_enc_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_1_method
#  define TLSv1_1_method OPENSSL_MANGLER(TLSv1_1_method)
# endif
#else
# ifndef _TLSv1_1_method
#  define _TLSv1_1_method OPENSSL_MANGLER_ASM(TLSv1_1_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_1_server_method
#  define TLSv1_1_server_method OPENSSL_MANGLER(TLSv1_1_server_method)
# endif
#else
# ifndef _TLSv1_1_server_method
#  define _TLSv1_1_server_method OPENSSL_MANGLER_ASM(TLSv1_1_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_2_client_method
#  define TLSv1_2_client_method OPENSSL_MANGLER(TLSv1_2_client_method)
# endif
#else
# ifndef _TLSv1_2_client_method
#  define _TLSv1_2_client_method OPENSSL_MANGLER_ASM(TLSv1_2_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_2_enc_data
#  define TLSv1_2_enc_data OPENSSL_MANGLER(TLSv1_2_enc_data)
# endif
#else
# ifndef _TLSv1_2_enc_data
#  define _TLSv1_2_enc_data OPENSSL_MANGLER_ASM(TLSv1_2_enc_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_2_method
#  define TLSv1_2_method OPENSSL_MANGLER(TLSv1_2_method)
# endif
#else
# ifndef _TLSv1_2_method
#  define _TLSv1_2_method OPENSSL_MANGLER_ASM(TLSv1_2_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_2_server_method
#  define TLSv1_2_server_method OPENSSL_MANGLER(TLSv1_2_server_method)
# endif
#else
# ifndef _TLSv1_2_server_method
#  define _TLSv1_2_server_method OPENSSL_MANGLER_ASM(TLSv1_2_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_3_enc_data
#  define TLSv1_3_enc_data OPENSSL_MANGLER(TLSv1_3_enc_data)
# endif
#else
# ifndef _TLSv1_3_enc_data
#  define _TLSv1_3_enc_data OPENSSL_MANGLER_ASM(TLSv1_3_enc_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_client_method
#  define TLSv1_client_method OPENSSL_MANGLER(TLSv1_client_method)
# endif
#else
# ifndef _TLSv1_client_method
#  define _TLSv1_client_method OPENSSL_MANGLER_ASM(TLSv1_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_enc_data
#  define TLSv1_enc_data OPENSSL_MANGLER(TLSv1_enc_data)
# endif
#else
# ifndef _TLSv1_enc_data
#  define _TLSv1_enc_data OPENSSL_MANGLER_ASM(TLSv1_enc_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_method
#  define TLSv1_method OPENSSL_MANGLER(TLSv1_method)
# endif
#else
# ifndef _TLSv1_method
#  define _TLSv1_method OPENSSL_MANGLER_ASM(TLSv1_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TLSv1_server_method
#  define TLSv1_server_method OPENSSL_MANGLER(TLSv1_server_method)
# endif
#else
# ifndef _TLSv1_server_method
#  define _TLSv1_server_method OPENSSL_MANGLER_ASM(TLSv1_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_ACCURACY_dup
#  define TS_ACCURACY_dup OPENSSL_MANGLER(TS_ACCURACY_dup)
# endif
#else
# ifndef _TS_ACCURACY_dup
#  define _TS_ACCURACY_dup OPENSSL_MANGLER_ASM(TS_ACCURACY_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_ACCURACY_free
#  define TS_ACCURACY_free OPENSSL_MANGLER(TS_ACCURACY_free)
# endif
#else
# ifndef _TS_ACCURACY_free
#  define _TS_ACCURACY_free OPENSSL_MANGLER_ASM(TS_ACCURACY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_ACCURACY_get_micros
#  define TS_ACCURACY_get_micros OPENSSL_MANGLER(TS_ACCURACY_get_micros)
# endif
#else
# ifndef _TS_ACCURACY_get_micros
#  define _TS_ACCURACY_get_micros OPENSSL_MANGLER_ASM(TS_ACCURACY_get_micros)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_ACCURACY_get_millis
#  define TS_ACCURACY_get_millis OPENSSL_MANGLER(TS_ACCURACY_get_millis)
# endif
#else
# ifndef _TS_ACCURACY_get_millis
#  define _TS_ACCURACY_get_millis OPENSSL_MANGLER_ASM(TS_ACCURACY_get_millis)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_ACCURACY_get_seconds
#  define TS_ACCURACY_get_seconds OPENSSL_MANGLER(TS_ACCURACY_get_seconds)
# endif
#else
# ifndef _TS_ACCURACY_get_seconds
#  define _TS_ACCURACY_get_seconds OPENSSL_MANGLER_ASM(TS_ACCURACY_get_seconds)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_ACCURACY_new
#  define TS_ACCURACY_new OPENSSL_MANGLER(TS_ACCURACY_new)
# endif
#else
# ifndef _TS_ACCURACY_new
#  define _TS_ACCURACY_new OPENSSL_MANGLER_ASM(TS_ACCURACY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_ACCURACY_set_micros
#  define TS_ACCURACY_set_micros OPENSSL_MANGLER(TS_ACCURACY_set_micros)
# endif
#else
# ifndef _TS_ACCURACY_set_micros
#  define _TS_ACCURACY_set_micros OPENSSL_MANGLER_ASM(TS_ACCURACY_set_micros)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_ACCURACY_set_millis
#  define TS_ACCURACY_set_millis OPENSSL_MANGLER(TS_ACCURACY_set_millis)
# endif
#else
# ifndef _TS_ACCURACY_set_millis
#  define _TS_ACCURACY_set_millis OPENSSL_MANGLER_ASM(TS_ACCURACY_set_millis)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_ACCURACY_set_seconds
#  define TS_ACCURACY_set_seconds OPENSSL_MANGLER(TS_ACCURACY_set_seconds)
# endif
#else
# ifndef _TS_ACCURACY_set_seconds
#  define _TS_ACCURACY_set_seconds OPENSSL_MANGLER_ASM(TS_ACCURACY_set_seconds)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_ASN1_INTEGER_print_bio
#  define TS_ASN1_INTEGER_print_bio OPENSSL_MANGLER(TS_ASN1_INTEGER_print_bio)
# endif
#else
# ifndef _TS_ASN1_INTEGER_print_bio
#  define _TS_ASN1_INTEGER_print_bio OPENSSL_MANGLER_ASM(TS_ASN1_INTEGER_print_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_get_tsa_section
#  define TS_CONF_get_tsa_section OPENSSL_MANGLER(TS_CONF_get_tsa_section)
# endif
#else
# ifndef _TS_CONF_get_tsa_section
#  define _TS_CONF_get_tsa_section OPENSSL_MANGLER_ASM(TS_CONF_get_tsa_section)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_load_cert
#  define TS_CONF_load_cert OPENSSL_MANGLER(TS_CONF_load_cert)
# endif
#else
# ifndef _TS_CONF_load_cert
#  define _TS_CONF_load_cert OPENSSL_MANGLER_ASM(TS_CONF_load_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_load_certs
#  define TS_CONF_load_certs OPENSSL_MANGLER(TS_CONF_load_certs)
# endif
#else
# ifndef _TS_CONF_load_certs
#  define _TS_CONF_load_certs OPENSSL_MANGLER_ASM(TS_CONF_load_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_load_key
#  define TS_CONF_load_key OPENSSL_MANGLER(TS_CONF_load_key)
# endif
#else
# ifndef _TS_CONF_load_key
#  define _TS_CONF_load_key OPENSSL_MANGLER_ASM(TS_CONF_load_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_accuracy
#  define TS_CONF_set_accuracy OPENSSL_MANGLER(TS_CONF_set_accuracy)
# endif
#else
# ifndef _TS_CONF_set_accuracy
#  define _TS_CONF_set_accuracy OPENSSL_MANGLER_ASM(TS_CONF_set_accuracy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_certs
#  define TS_CONF_set_certs OPENSSL_MANGLER(TS_CONF_set_certs)
# endif
#else
# ifndef _TS_CONF_set_certs
#  define _TS_CONF_set_certs OPENSSL_MANGLER_ASM(TS_CONF_set_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_clock_precision_digits
#  define TS_CONF_set_clock_precision_digits OPENSSL_MANGLER(TS_CONF_set_clock_precision_digits)
# endif
#else
# ifndef _TS_CONF_set_clock_precision_digits
#  define _TS_CONF_set_clock_precision_digits OPENSSL_MANGLER_ASM(TS_CONF_set_clock_precision_digits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_crypto_device
#  define TS_CONF_set_crypto_device OPENSSL_MANGLER(TS_CONF_set_crypto_device)
# endif
#else
# ifndef _TS_CONF_set_crypto_device
#  define _TS_CONF_set_crypto_device OPENSSL_MANGLER_ASM(TS_CONF_set_crypto_device)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_def_policy
#  define TS_CONF_set_def_policy OPENSSL_MANGLER(TS_CONF_set_def_policy)
# endif
#else
# ifndef _TS_CONF_set_def_policy
#  define _TS_CONF_set_def_policy OPENSSL_MANGLER_ASM(TS_CONF_set_def_policy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_default_engine
#  define TS_CONF_set_default_engine OPENSSL_MANGLER(TS_CONF_set_default_engine)
# endif
#else
# ifndef _TS_CONF_set_default_engine
#  define _TS_CONF_set_default_engine OPENSSL_MANGLER_ASM(TS_CONF_set_default_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_digests
#  define TS_CONF_set_digests OPENSSL_MANGLER(TS_CONF_set_digests)
# endif
#else
# ifndef _TS_CONF_set_digests
#  define _TS_CONF_set_digests OPENSSL_MANGLER_ASM(TS_CONF_set_digests)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_ess_cert_id_chain
#  define TS_CONF_set_ess_cert_id_chain OPENSSL_MANGLER(TS_CONF_set_ess_cert_id_chain)
# endif
#else
# ifndef _TS_CONF_set_ess_cert_id_chain
#  define _TS_CONF_set_ess_cert_id_chain OPENSSL_MANGLER_ASM(TS_CONF_set_ess_cert_id_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_ess_cert_id_digest
#  define TS_CONF_set_ess_cert_id_digest OPENSSL_MANGLER(TS_CONF_set_ess_cert_id_digest)
# endif
#else
# ifndef _TS_CONF_set_ess_cert_id_digest
#  define _TS_CONF_set_ess_cert_id_digest OPENSSL_MANGLER_ASM(TS_CONF_set_ess_cert_id_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_ordering
#  define TS_CONF_set_ordering OPENSSL_MANGLER(TS_CONF_set_ordering)
# endif
#else
# ifndef _TS_CONF_set_ordering
#  define _TS_CONF_set_ordering OPENSSL_MANGLER_ASM(TS_CONF_set_ordering)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_policies
#  define TS_CONF_set_policies OPENSSL_MANGLER(TS_CONF_set_policies)
# endif
#else
# ifndef _TS_CONF_set_policies
#  define _TS_CONF_set_policies OPENSSL_MANGLER_ASM(TS_CONF_set_policies)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_serial
#  define TS_CONF_set_serial OPENSSL_MANGLER(TS_CONF_set_serial)
# endif
#else
# ifndef _TS_CONF_set_serial
#  define _TS_CONF_set_serial OPENSSL_MANGLER_ASM(TS_CONF_set_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_signer_cert
#  define TS_CONF_set_signer_cert OPENSSL_MANGLER(TS_CONF_set_signer_cert)
# endif
#else
# ifndef _TS_CONF_set_signer_cert
#  define _TS_CONF_set_signer_cert OPENSSL_MANGLER_ASM(TS_CONF_set_signer_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_signer_digest
#  define TS_CONF_set_signer_digest OPENSSL_MANGLER(TS_CONF_set_signer_digest)
# endif
#else
# ifndef _TS_CONF_set_signer_digest
#  define _TS_CONF_set_signer_digest OPENSSL_MANGLER_ASM(TS_CONF_set_signer_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_signer_key
#  define TS_CONF_set_signer_key OPENSSL_MANGLER(TS_CONF_set_signer_key)
# endif
#else
# ifndef _TS_CONF_set_signer_key
#  define _TS_CONF_set_signer_key OPENSSL_MANGLER_ASM(TS_CONF_set_signer_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_CONF_set_tsa_name
#  define TS_CONF_set_tsa_name OPENSSL_MANGLER(TS_CONF_set_tsa_name)
# endif
#else
# ifndef _TS_CONF_set_tsa_name
#  define _TS_CONF_set_tsa_name OPENSSL_MANGLER_ASM(TS_CONF_set_tsa_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_MSG_IMPRINT_dup
#  define TS_MSG_IMPRINT_dup OPENSSL_MANGLER(TS_MSG_IMPRINT_dup)
# endif
#else
# ifndef _TS_MSG_IMPRINT_dup
#  define _TS_MSG_IMPRINT_dup OPENSSL_MANGLER_ASM(TS_MSG_IMPRINT_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_MSG_IMPRINT_free
#  define TS_MSG_IMPRINT_free OPENSSL_MANGLER(TS_MSG_IMPRINT_free)
# endif
#else
# ifndef _TS_MSG_IMPRINT_free
#  define _TS_MSG_IMPRINT_free OPENSSL_MANGLER_ASM(TS_MSG_IMPRINT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_MSG_IMPRINT_get_algo
#  define TS_MSG_IMPRINT_get_algo OPENSSL_MANGLER(TS_MSG_IMPRINT_get_algo)
# endif
#else
# ifndef _TS_MSG_IMPRINT_get_algo
#  define _TS_MSG_IMPRINT_get_algo OPENSSL_MANGLER_ASM(TS_MSG_IMPRINT_get_algo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_MSG_IMPRINT_get_msg
#  define TS_MSG_IMPRINT_get_msg OPENSSL_MANGLER(TS_MSG_IMPRINT_get_msg)
# endif
#else
# ifndef _TS_MSG_IMPRINT_get_msg
#  define _TS_MSG_IMPRINT_get_msg OPENSSL_MANGLER_ASM(TS_MSG_IMPRINT_get_msg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_MSG_IMPRINT_new
#  define TS_MSG_IMPRINT_new OPENSSL_MANGLER(TS_MSG_IMPRINT_new)
# endif
#else
# ifndef _TS_MSG_IMPRINT_new
#  define _TS_MSG_IMPRINT_new OPENSSL_MANGLER_ASM(TS_MSG_IMPRINT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_MSG_IMPRINT_print_bio
#  define TS_MSG_IMPRINT_print_bio OPENSSL_MANGLER(TS_MSG_IMPRINT_print_bio)
# endif
#else
# ifndef _TS_MSG_IMPRINT_print_bio
#  define _TS_MSG_IMPRINT_print_bio OPENSSL_MANGLER_ASM(TS_MSG_IMPRINT_print_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_MSG_IMPRINT_set_algo
#  define TS_MSG_IMPRINT_set_algo OPENSSL_MANGLER(TS_MSG_IMPRINT_set_algo)
# endif
#else
# ifndef _TS_MSG_IMPRINT_set_algo
#  define _TS_MSG_IMPRINT_set_algo OPENSSL_MANGLER_ASM(TS_MSG_IMPRINT_set_algo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_MSG_IMPRINT_set_msg
#  define TS_MSG_IMPRINT_set_msg OPENSSL_MANGLER(TS_MSG_IMPRINT_set_msg)
# endif
#else
# ifndef _TS_MSG_IMPRINT_set_msg
#  define _TS_MSG_IMPRINT_set_msg OPENSSL_MANGLER_ASM(TS_MSG_IMPRINT_set_msg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_OBJ_print_bio
#  define TS_OBJ_print_bio OPENSSL_MANGLER(TS_OBJ_print_bio)
# endif
#else
# ifndef _TS_OBJ_print_bio
#  define _TS_OBJ_print_bio OPENSSL_MANGLER_ASM(TS_OBJ_print_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_add_ext
#  define TS_REQ_add_ext OPENSSL_MANGLER(TS_REQ_add_ext)
# endif
#else
# ifndef _TS_REQ_add_ext
#  define _TS_REQ_add_ext OPENSSL_MANGLER_ASM(TS_REQ_add_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_delete_ext
#  define TS_REQ_delete_ext OPENSSL_MANGLER(TS_REQ_delete_ext)
# endif
#else
# ifndef _TS_REQ_delete_ext
#  define _TS_REQ_delete_ext OPENSSL_MANGLER_ASM(TS_REQ_delete_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_dup
#  define TS_REQ_dup OPENSSL_MANGLER(TS_REQ_dup)
# endif
#else
# ifndef _TS_REQ_dup
#  define _TS_REQ_dup OPENSSL_MANGLER_ASM(TS_REQ_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_ext_free
#  define TS_REQ_ext_free OPENSSL_MANGLER(TS_REQ_ext_free)
# endif
#else
# ifndef _TS_REQ_ext_free
#  define _TS_REQ_ext_free OPENSSL_MANGLER_ASM(TS_REQ_ext_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_free
#  define TS_REQ_free OPENSSL_MANGLER(TS_REQ_free)
# endif
#else
# ifndef _TS_REQ_free
#  define _TS_REQ_free OPENSSL_MANGLER_ASM(TS_REQ_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_cert_req
#  define TS_REQ_get_cert_req OPENSSL_MANGLER(TS_REQ_get_cert_req)
# endif
#else
# ifndef _TS_REQ_get_cert_req
#  define _TS_REQ_get_cert_req OPENSSL_MANGLER_ASM(TS_REQ_get_cert_req)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_ext
#  define TS_REQ_get_ext OPENSSL_MANGLER(TS_REQ_get_ext)
# endif
#else
# ifndef _TS_REQ_get_ext
#  define _TS_REQ_get_ext OPENSSL_MANGLER_ASM(TS_REQ_get_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_ext_by_NID
#  define TS_REQ_get_ext_by_NID OPENSSL_MANGLER(TS_REQ_get_ext_by_NID)
# endif
#else
# ifndef _TS_REQ_get_ext_by_NID
#  define _TS_REQ_get_ext_by_NID OPENSSL_MANGLER_ASM(TS_REQ_get_ext_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_ext_by_OBJ
#  define TS_REQ_get_ext_by_OBJ OPENSSL_MANGLER(TS_REQ_get_ext_by_OBJ)
# endif
#else
# ifndef _TS_REQ_get_ext_by_OBJ
#  define _TS_REQ_get_ext_by_OBJ OPENSSL_MANGLER_ASM(TS_REQ_get_ext_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_ext_by_critical
#  define TS_REQ_get_ext_by_critical OPENSSL_MANGLER(TS_REQ_get_ext_by_critical)
# endif
#else
# ifndef _TS_REQ_get_ext_by_critical
#  define _TS_REQ_get_ext_by_critical OPENSSL_MANGLER_ASM(TS_REQ_get_ext_by_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_ext_count
#  define TS_REQ_get_ext_count OPENSSL_MANGLER(TS_REQ_get_ext_count)
# endif
#else
# ifndef _TS_REQ_get_ext_count
#  define _TS_REQ_get_ext_count OPENSSL_MANGLER_ASM(TS_REQ_get_ext_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_ext_d2i
#  define TS_REQ_get_ext_d2i OPENSSL_MANGLER(TS_REQ_get_ext_d2i)
# endif
#else
# ifndef _TS_REQ_get_ext_d2i
#  define _TS_REQ_get_ext_d2i OPENSSL_MANGLER_ASM(TS_REQ_get_ext_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_exts
#  define TS_REQ_get_exts OPENSSL_MANGLER(TS_REQ_get_exts)
# endif
#else
# ifndef _TS_REQ_get_exts
#  define _TS_REQ_get_exts OPENSSL_MANGLER_ASM(TS_REQ_get_exts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_msg_imprint
#  define TS_REQ_get_msg_imprint OPENSSL_MANGLER(TS_REQ_get_msg_imprint)
# endif
#else
# ifndef _TS_REQ_get_msg_imprint
#  define _TS_REQ_get_msg_imprint OPENSSL_MANGLER_ASM(TS_REQ_get_msg_imprint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_nonce
#  define TS_REQ_get_nonce OPENSSL_MANGLER(TS_REQ_get_nonce)
# endif
#else
# ifndef _TS_REQ_get_nonce
#  define _TS_REQ_get_nonce OPENSSL_MANGLER_ASM(TS_REQ_get_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_policy_id
#  define TS_REQ_get_policy_id OPENSSL_MANGLER(TS_REQ_get_policy_id)
# endif
#else
# ifndef _TS_REQ_get_policy_id
#  define _TS_REQ_get_policy_id OPENSSL_MANGLER_ASM(TS_REQ_get_policy_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_get_version
#  define TS_REQ_get_version OPENSSL_MANGLER(TS_REQ_get_version)
# endif
#else
# ifndef _TS_REQ_get_version
#  define _TS_REQ_get_version OPENSSL_MANGLER_ASM(TS_REQ_get_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_new
#  define TS_REQ_new OPENSSL_MANGLER(TS_REQ_new)
# endif
#else
# ifndef _TS_REQ_new
#  define _TS_REQ_new OPENSSL_MANGLER_ASM(TS_REQ_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_print_bio
#  define TS_REQ_print_bio OPENSSL_MANGLER(TS_REQ_print_bio)
# endif
#else
# ifndef _TS_REQ_print_bio
#  define _TS_REQ_print_bio OPENSSL_MANGLER_ASM(TS_REQ_print_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_set_cert_req
#  define TS_REQ_set_cert_req OPENSSL_MANGLER(TS_REQ_set_cert_req)
# endif
#else
# ifndef _TS_REQ_set_cert_req
#  define _TS_REQ_set_cert_req OPENSSL_MANGLER_ASM(TS_REQ_set_cert_req)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_set_msg_imprint
#  define TS_REQ_set_msg_imprint OPENSSL_MANGLER(TS_REQ_set_msg_imprint)
# endif
#else
# ifndef _TS_REQ_set_msg_imprint
#  define _TS_REQ_set_msg_imprint OPENSSL_MANGLER_ASM(TS_REQ_set_msg_imprint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_set_nonce
#  define TS_REQ_set_nonce OPENSSL_MANGLER(TS_REQ_set_nonce)
# endif
#else
# ifndef _TS_REQ_set_nonce
#  define _TS_REQ_set_nonce OPENSSL_MANGLER_ASM(TS_REQ_set_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_set_policy_id
#  define TS_REQ_set_policy_id OPENSSL_MANGLER(TS_REQ_set_policy_id)
# endif
#else
# ifndef _TS_REQ_set_policy_id
#  define _TS_REQ_set_policy_id OPENSSL_MANGLER_ASM(TS_REQ_set_policy_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_set_version
#  define TS_REQ_set_version OPENSSL_MANGLER(TS_REQ_set_version)
# endif
#else
# ifndef _TS_REQ_set_version
#  define _TS_REQ_set_version OPENSSL_MANGLER_ASM(TS_REQ_set_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_REQ_to_TS_VERIFY_CTX
#  define TS_REQ_to_TS_VERIFY_CTX OPENSSL_MANGLER(TS_REQ_to_TS_VERIFY_CTX)
# endif
#else
# ifndef _TS_REQ_to_TS_VERIFY_CTX
#  define _TS_REQ_to_TS_VERIFY_CTX OPENSSL_MANGLER_ASM(TS_REQ_to_TS_VERIFY_CTX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_add_failure_info
#  define TS_RESP_CTX_add_failure_info OPENSSL_MANGLER(TS_RESP_CTX_add_failure_info)
# endif
#else
# ifndef _TS_RESP_CTX_add_failure_info
#  define _TS_RESP_CTX_add_failure_info OPENSSL_MANGLER_ASM(TS_RESP_CTX_add_failure_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_add_flags
#  define TS_RESP_CTX_add_flags OPENSSL_MANGLER(TS_RESP_CTX_add_flags)
# endif
#else
# ifndef _TS_RESP_CTX_add_flags
#  define _TS_RESP_CTX_add_flags OPENSSL_MANGLER_ASM(TS_RESP_CTX_add_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_add_md
#  define TS_RESP_CTX_add_md OPENSSL_MANGLER(TS_RESP_CTX_add_md)
# endif
#else
# ifndef _TS_RESP_CTX_add_md
#  define _TS_RESP_CTX_add_md OPENSSL_MANGLER_ASM(TS_RESP_CTX_add_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_add_policy
#  define TS_RESP_CTX_add_policy OPENSSL_MANGLER(TS_RESP_CTX_add_policy)
# endif
#else
# ifndef _TS_RESP_CTX_add_policy
#  define _TS_RESP_CTX_add_policy OPENSSL_MANGLER_ASM(TS_RESP_CTX_add_policy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_free
#  define TS_RESP_CTX_free OPENSSL_MANGLER(TS_RESP_CTX_free)
# endif
#else
# ifndef _TS_RESP_CTX_free
#  define _TS_RESP_CTX_free OPENSSL_MANGLER_ASM(TS_RESP_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_get_request
#  define TS_RESP_CTX_get_request OPENSSL_MANGLER(TS_RESP_CTX_get_request)
# endif
#else
# ifndef _TS_RESP_CTX_get_request
#  define _TS_RESP_CTX_get_request OPENSSL_MANGLER_ASM(TS_RESP_CTX_get_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_get_tst_info
#  define TS_RESP_CTX_get_tst_info OPENSSL_MANGLER(TS_RESP_CTX_get_tst_info)
# endif
#else
# ifndef _TS_RESP_CTX_get_tst_info
#  define _TS_RESP_CTX_get_tst_info OPENSSL_MANGLER_ASM(TS_RESP_CTX_get_tst_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_new
#  define TS_RESP_CTX_new OPENSSL_MANGLER(TS_RESP_CTX_new)
# endif
#else
# ifndef _TS_RESP_CTX_new
#  define _TS_RESP_CTX_new OPENSSL_MANGLER_ASM(TS_RESP_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_new_ex
#  define TS_RESP_CTX_new_ex OPENSSL_MANGLER(TS_RESP_CTX_new_ex)
# endif
#else
# ifndef _TS_RESP_CTX_new_ex
#  define _TS_RESP_CTX_new_ex OPENSSL_MANGLER_ASM(TS_RESP_CTX_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_accuracy
#  define TS_RESP_CTX_set_accuracy OPENSSL_MANGLER(TS_RESP_CTX_set_accuracy)
# endif
#else
# ifndef _TS_RESP_CTX_set_accuracy
#  define _TS_RESP_CTX_set_accuracy OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_accuracy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_certs
#  define TS_RESP_CTX_set_certs OPENSSL_MANGLER(TS_RESP_CTX_set_certs)
# endif
#else
# ifndef _TS_RESP_CTX_set_certs
#  define _TS_RESP_CTX_set_certs OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_clock_precision_digits
#  define TS_RESP_CTX_set_clock_precision_digits OPENSSL_MANGLER(TS_RESP_CTX_set_clock_precision_digits)
# endif
#else
# ifndef _TS_RESP_CTX_set_clock_precision_digits
#  define _TS_RESP_CTX_set_clock_precision_digits OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_clock_precision_digits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_def_policy
#  define TS_RESP_CTX_set_def_policy OPENSSL_MANGLER(TS_RESP_CTX_set_def_policy)
# endif
#else
# ifndef _TS_RESP_CTX_set_def_policy
#  define _TS_RESP_CTX_set_def_policy OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_def_policy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_ess_cert_id_digest
#  define TS_RESP_CTX_set_ess_cert_id_digest OPENSSL_MANGLER(TS_RESP_CTX_set_ess_cert_id_digest)
# endif
#else
# ifndef _TS_RESP_CTX_set_ess_cert_id_digest
#  define _TS_RESP_CTX_set_ess_cert_id_digest OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_ess_cert_id_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_extension_cb
#  define TS_RESP_CTX_set_extension_cb OPENSSL_MANGLER(TS_RESP_CTX_set_extension_cb)
# endif
#else
# ifndef _TS_RESP_CTX_set_extension_cb
#  define _TS_RESP_CTX_set_extension_cb OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_extension_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_serial_cb
#  define TS_RESP_CTX_set_serial_cb OPENSSL_MANGLER(TS_RESP_CTX_set_serial_cb)
# endif
#else
# ifndef _TS_RESP_CTX_set_serial_cb
#  define _TS_RESP_CTX_set_serial_cb OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_serial_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_signer_cert
#  define TS_RESP_CTX_set_signer_cert OPENSSL_MANGLER(TS_RESP_CTX_set_signer_cert)
# endif
#else
# ifndef _TS_RESP_CTX_set_signer_cert
#  define _TS_RESP_CTX_set_signer_cert OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_signer_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_signer_digest
#  define TS_RESP_CTX_set_signer_digest OPENSSL_MANGLER(TS_RESP_CTX_set_signer_digest)
# endif
#else
# ifndef _TS_RESP_CTX_set_signer_digest
#  define _TS_RESP_CTX_set_signer_digest OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_signer_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_signer_key
#  define TS_RESP_CTX_set_signer_key OPENSSL_MANGLER(TS_RESP_CTX_set_signer_key)
# endif
#else
# ifndef _TS_RESP_CTX_set_signer_key
#  define _TS_RESP_CTX_set_signer_key OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_signer_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_status_info
#  define TS_RESP_CTX_set_status_info OPENSSL_MANGLER(TS_RESP_CTX_set_status_info)
# endif
#else
# ifndef _TS_RESP_CTX_set_status_info
#  define _TS_RESP_CTX_set_status_info OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_status_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_status_info_cond
#  define TS_RESP_CTX_set_status_info_cond OPENSSL_MANGLER(TS_RESP_CTX_set_status_info_cond)
# endif
#else
# ifndef _TS_RESP_CTX_set_status_info_cond
#  define _TS_RESP_CTX_set_status_info_cond OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_status_info_cond)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_CTX_set_time_cb
#  define TS_RESP_CTX_set_time_cb OPENSSL_MANGLER(TS_RESP_CTX_set_time_cb)
# endif
#else
# ifndef _TS_RESP_CTX_set_time_cb
#  define _TS_RESP_CTX_set_time_cb OPENSSL_MANGLER_ASM(TS_RESP_CTX_set_time_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_create_response
#  define TS_RESP_create_response OPENSSL_MANGLER(TS_RESP_create_response)
# endif
#else
# ifndef _TS_RESP_create_response
#  define _TS_RESP_create_response OPENSSL_MANGLER_ASM(TS_RESP_create_response)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_dup
#  define TS_RESP_dup OPENSSL_MANGLER(TS_RESP_dup)
# endif
#else
# ifndef _TS_RESP_dup
#  define _TS_RESP_dup OPENSSL_MANGLER_ASM(TS_RESP_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_free
#  define TS_RESP_free OPENSSL_MANGLER(TS_RESP_free)
# endif
#else
# ifndef _TS_RESP_free
#  define _TS_RESP_free OPENSSL_MANGLER_ASM(TS_RESP_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_get_status_info
#  define TS_RESP_get_status_info OPENSSL_MANGLER(TS_RESP_get_status_info)
# endif
#else
# ifndef _TS_RESP_get_status_info
#  define _TS_RESP_get_status_info OPENSSL_MANGLER_ASM(TS_RESP_get_status_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_get_token
#  define TS_RESP_get_token OPENSSL_MANGLER(TS_RESP_get_token)
# endif
#else
# ifndef _TS_RESP_get_token
#  define _TS_RESP_get_token OPENSSL_MANGLER_ASM(TS_RESP_get_token)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_get_tst_info
#  define TS_RESP_get_tst_info OPENSSL_MANGLER(TS_RESP_get_tst_info)
# endif
#else
# ifndef _TS_RESP_get_tst_info
#  define _TS_RESP_get_tst_info OPENSSL_MANGLER_ASM(TS_RESP_get_tst_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_new
#  define TS_RESP_new OPENSSL_MANGLER(TS_RESP_new)
# endif
#else
# ifndef _TS_RESP_new
#  define _TS_RESP_new OPENSSL_MANGLER_ASM(TS_RESP_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_print_bio
#  define TS_RESP_print_bio OPENSSL_MANGLER(TS_RESP_print_bio)
# endif
#else
# ifndef _TS_RESP_print_bio
#  define _TS_RESP_print_bio OPENSSL_MANGLER_ASM(TS_RESP_print_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_set_status_info
#  define TS_RESP_set_status_info OPENSSL_MANGLER(TS_RESP_set_status_info)
# endif
#else
# ifndef _TS_RESP_set_status_info
#  define _TS_RESP_set_status_info OPENSSL_MANGLER_ASM(TS_RESP_set_status_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_set_tst_info
#  define TS_RESP_set_tst_info OPENSSL_MANGLER(TS_RESP_set_tst_info)
# endif
#else
# ifndef _TS_RESP_set_tst_info
#  define _TS_RESP_set_tst_info OPENSSL_MANGLER_ASM(TS_RESP_set_tst_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_verify_response
#  define TS_RESP_verify_response OPENSSL_MANGLER(TS_RESP_verify_response)
# endif
#else
# ifndef _TS_RESP_verify_response
#  define _TS_RESP_verify_response OPENSSL_MANGLER_ASM(TS_RESP_verify_response)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_verify_signature
#  define TS_RESP_verify_signature OPENSSL_MANGLER(TS_RESP_verify_signature)
# endif
#else
# ifndef _TS_RESP_verify_signature
#  define _TS_RESP_verify_signature OPENSSL_MANGLER_ASM(TS_RESP_verify_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_RESP_verify_token
#  define TS_RESP_verify_token OPENSSL_MANGLER(TS_RESP_verify_token)
# endif
#else
# ifndef _TS_RESP_verify_token
#  define _TS_RESP_verify_token OPENSSL_MANGLER_ASM(TS_RESP_verify_token)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_STATUS_INFO_dup
#  define TS_STATUS_INFO_dup OPENSSL_MANGLER(TS_STATUS_INFO_dup)
# endif
#else
# ifndef _TS_STATUS_INFO_dup
#  define _TS_STATUS_INFO_dup OPENSSL_MANGLER_ASM(TS_STATUS_INFO_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_STATUS_INFO_free
#  define TS_STATUS_INFO_free OPENSSL_MANGLER(TS_STATUS_INFO_free)
# endif
#else
# ifndef _TS_STATUS_INFO_free
#  define _TS_STATUS_INFO_free OPENSSL_MANGLER_ASM(TS_STATUS_INFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_STATUS_INFO_get0_failure_info
#  define TS_STATUS_INFO_get0_failure_info OPENSSL_MANGLER(TS_STATUS_INFO_get0_failure_info)
# endif
#else
# ifndef _TS_STATUS_INFO_get0_failure_info
#  define _TS_STATUS_INFO_get0_failure_info OPENSSL_MANGLER_ASM(TS_STATUS_INFO_get0_failure_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_STATUS_INFO_get0_status
#  define TS_STATUS_INFO_get0_status OPENSSL_MANGLER(TS_STATUS_INFO_get0_status)
# endif
#else
# ifndef _TS_STATUS_INFO_get0_status
#  define _TS_STATUS_INFO_get0_status OPENSSL_MANGLER_ASM(TS_STATUS_INFO_get0_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_STATUS_INFO_get0_text
#  define TS_STATUS_INFO_get0_text OPENSSL_MANGLER(TS_STATUS_INFO_get0_text)
# endif
#else
# ifndef _TS_STATUS_INFO_get0_text
#  define _TS_STATUS_INFO_get0_text OPENSSL_MANGLER_ASM(TS_STATUS_INFO_get0_text)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_STATUS_INFO_new
#  define TS_STATUS_INFO_new OPENSSL_MANGLER(TS_STATUS_INFO_new)
# endif
#else
# ifndef _TS_STATUS_INFO_new
#  define _TS_STATUS_INFO_new OPENSSL_MANGLER_ASM(TS_STATUS_INFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_STATUS_INFO_print_bio
#  define TS_STATUS_INFO_print_bio OPENSSL_MANGLER(TS_STATUS_INFO_print_bio)
# endif
#else
# ifndef _TS_STATUS_INFO_print_bio
#  define _TS_STATUS_INFO_print_bio OPENSSL_MANGLER_ASM(TS_STATUS_INFO_print_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_STATUS_INFO_set_status
#  define TS_STATUS_INFO_set_status OPENSSL_MANGLER(TS_STATUS_INFO_set_status)
# endif
#else
# ifndef _TS_STATUS_INFO_set_status
#  define _TS_STATUS_INFO_set_status OPENSSL_MANGLER_ASM(TS_STATUS_INFO_set_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_add_ext
#  define TS_TST_INFO_add_ext OPENSSL_MANGLER(TS_TST_INFO_add_ext)
# endif
#else
# ifndef _TS_TST_INFO_add_ext
#  define _TS_TST_INFO_add_ext OPENSSL_MANGLER_ASM(TS_TST_INFO_add_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_delete_ext
#  define TS_TST_INFO_delete_ext OPENSSL_MANGLER(TS_TST_INFO_delete_ext)
# endif
#else
# ifndef _TS_TST_INFO_delete_ext
#  define _TS_TST_INFO_delete_ext OPENSSL_MANGLER_ASM(TS_TST_INFO_delete_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_dup
#  define TS_TST_INFO_dup OPENSSL_MANGLER(TS_TST_INFO_dup)
# endif
#else
# ifndef _TS_TST_INFO_dup
#  define _TS_TST_INFO_dup OPENSSL_MANGLER_ASM(TS_TST_INFO_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_ext_free
#  define TS_TST_INFO_ext_free OPENSSL_MANGLER(TS_TST_INFO_ext_free)
# endif
#else
# ifndef _TS_TST_INFO_ext_free
#  define _TS_TST_INFO_ext_free OPENSSL_MANGLER_ASM(TS_TST_INFO_ext_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_free
#  define TS_TST_INFO_free OPENSSL_MANGLER(TS_TST_INFO_free)
# endif
#else
# ifndef _TS_TST_INFO_free
#  define _TS_TST_INFO_free OPENSSL_MANGLER_ASM(TS_TST_INFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_accuracy
#  define TS_TST_INFO_get_accuracy OPENSSL_MANGLER(TS_TST_INFO_get_accuracy)
# endif
#else
# ifndef _TS_TST_INFO_get_accuracy
#  define _TS_TST_INFO_get_accuracy OPENSSL_MANGLER_ASM(TS_TST_INFO_get_accuracy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_ext
#  define TS_TST_INFO_get_ext OPENSSL_MANGLER(TS_TST_INFO_get_ext)
# endif
#else
# ifndef _TS_TST_INFO_get_ext
#  define _TS_TST_INFO_get_ext OPENSSL_MANGLER_ASM(TS_TST_INFO_get_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_ext_by_NID
#  define TS_TST_INFO_get_ext_by_NID OPENSSL_MANGLER(TS_TST_INFO_get_ext_by_NID)
# endif
#else
# ifndef _TS_TST_INFO_get_ext_by_NID
#  define _TS_TST_INFO_get_ext_by_NID OPENSSL_MANGLER_ASM(TS_TST_INFO_get_ext_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_ext_by_OBJ
#  define TS_TST_INFO_get_ext_by_OBJ OPENSSL_MANGLER(TS_TST_INFO_get_ext_by_OBJ)
# endif
#else
# ifndef _TS_TST_INFO_get_ext_by_OBJ
#  define _TS_TST_INFO_get_ext_by_OBJ OPENSSL_MANGLER_ASM(TS_TST_INFO_get_ext_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_ext_by_critical
#  define TS_TST_INFO_get_ext_by_critical OPENSSL_MANGLER(TS_TST_INFO_get_ext_by_critical)
# endif
#else
# ifndef _TS_TST_INFO_get_ext_by_critical
#  define _TS_TST_INFO_get_ext_by_critical OPENSSL_MANGLER_ASM(TS_TST_INFO_get_ext_by_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_ext_count
#  define TS_TST_INFO_get_ext_count OPENSSL_MANGLER(TS_TST_INFO_get_ext_count)
# endif
#else
# ifndef _TS_TST_INFO_get_ext_count
#  define _TS_TST_INFO_get_ext_count OPENSSL_MANGLER_ASM(TS_TST_INFO_get_ext_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_ext_d2i
#  define TS_TST_INFO_get_ext_d2i OPENSSL_MANGLER(TS_TST_INFO_get_ext_d2i)
# endif
#else
# ifndef _TS_TST_INFO_get_ext_d2i
#  define _TS_TST_INFO_get_ext_d2i OPENSSL_MANGLER_ASM(TS_TST_INFO_get_ext_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_exts
#  define TS_TST_INFO_get_exts OPENSSL_MANGLER(TS_TST_INFO_get_exts)
# endif
#else
# ifndef _TS_TST_INFO_get_exts
#  define _TS_TST_INFO_get_exts OPENSSL_MANGLER_ASM(TS_TST_INFO_get_exts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_msg_imprint
#  define TS_TST_INFO_get_msg_imprint OPENSSL_MANGLER(TS_TST_INFO_get_msg_imprint)
# endif
#else
# ifndef _TS_TST_INFO_get_msg_imprint
#  define _TS_TST_INFO_get_msg_imprint OPENSSL_MANGLER_ASM(TS_TST_INFO_get_msg_imprint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_nonce
#  define TS_TST_INFO_get_nonce OPENSSL_MANGLER(TS_TST_INFO_get_nonce)
# endif
#else
# ifndef _TS_TST_INFO_get_nonce
#  define _TS_TST_INFO_get_nonce OPENSSL_MANGLER_ASM(TS_TST_INFO_get_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_ordering
#  define TS_TST_INFO_get_ordering OPENSSL_MANGLER(TS_TST_INFO_get_ordering)
# endif
#else
# ifndef _TS_TST_INFO_get_ordering
#  define _TS_TST_INFO_get_ordering OPENSSL_MANGLER_ASM(TS_TST_INFO_get_ordering)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_policy_id
#  define TS_TST_INFO_get_policy_id OPENSSL_MANGLER(TS_TST_INFO_get_policy_id)
# endif
#else
# ifndef _TS_TST_INFO_get_policy_id
#  define _TS_TST_INFO_get_policy_id OPENSSL_MANGLER_ASM(TS_TST_INFO_get_policy_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_serial
#  define TS_TST_INFO_get_serial OPENSSL_MANGLER(TS_TST_INFO_get_serial)
# endif
#else
# ifndef _TS_TST_INFO_get_serial
#  define _TS_TST_INFO_get_serial OPENSSL_MANGLER_ASM(TS_TST_INFO_get_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_time
#  define TS_TST_INFO_get_time OPENSSL_MANGLER(TS_TST_INFO_get_time)
# endif
#else
# ifndef _TS_TST_INFO_get_time
#  define _TS_TST_INFO_get_time OPENSSL_MANGLER_ASM(TS_TST_INFO_get_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_tsa
#  define TS_TST_INFO_get_tsa OPENSSL_MANGLER(TS_TST_INFO_get_tsa)
# endif
#else
# ifndef _TS_TST_INFO_get_tsa
#  define _TS_TST_INFO_get_tsa OPENSSL_MANGLER_ASM(TS_TST_INFO_get_tsa)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_get_version
#  define TS_TST_INFO_get_version OPENSSL_MANGLER(TS_TST_INFO_get_version)
# endif
#else
# ifndef _TS_TST_INFO_get_version
#  define _TS_TST_INFO_get_version OPENSSL_MANGLER_ASM(TS_TST_INFO_get_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_new
#  define TS_TST_INFO_new OPENSSL_MANGLER(TS_TST_INFO_new)
# endif
#else
# ifndef _TS_TST_INFO_new
#  define _TS_TST_INFO_new OPENSSL_MANGLER_ASM(TS_TST_INFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_print_bio
#  define TS_TST_INFO_print_bio OPENSSL_MANGLER(TS_TST_INFO_print_bio)
# endif
#else
# ifndef _TS_TST_INFO_print_bio
#  define _TS_TST_INFO_print_bio OPENSSL_MANGLER_ASM(TS_TST_INFO_print_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_set_accuracy
#  define TS_TST_INFO_set_accuracy OPENSSL_MANGLER(TS_TST_INFO_set_accuracy)
# endif
#else
# ifndef _TS_TST_INFO_set_accuracy
#  define _TS_TST_INFO_set_accuracy OPENSSL_MANGLER_ASM(TS_TST_INFO_set_accuracy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_set_msg_imprint
#  define TS_TST_INFO_set_msg_imprint OPENSSL_MANGLER(TS_TST_INFO_set_msg_imprint)
# endif
#else
# ifndef _TS_TST_INFO_set_msg_imprint
#  define _TS_TST_INFO_set_msg_imprint OPENSSL_MANGLER_ASM(TS_TST_INFO_set_msg_imprint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_set_nonce
#  define TS_TST_INFO_set_nonce OPENSSL_MANGLER(TS_TST_INFO_set_nonce)
# endif
#else
# ifndef _TS_TST_INFO_set_nonce
#  define _TS_TST_INFO_set_nonce OPENSSL_MANGLER_ASM(TS_TST_INFO_set_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_set_ordering
#  define TS_TST_INFO_set_ordering OPENSSL_MANGLER(TS_TST_INFO_set_ordering)
# endif
#else
# ifndef _TS_TST_INFO_set_ordering
#  define _TS_TST_INFO_set_ordering OPENSSL_MANGLER_ASM(TS_TST_INFO_set_ordering)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_set_policy_id
#  define TS_TST_INFO_set_policy_id OPENSSL_MANGLER(TS_TST_INFO_set_policy_id)
# endif
#else
# ifndef _TS_TST_INFO_set_policy_id
#  define _TS_TST_INFO_set_policy_id OPENSSL_MANGLER_ASM(TS_TST_INFO_set_policy_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_set_serial
#  define TS_TST_INFO_set_serial OPENSSL_MANGLER(TS_TST_INFO_set_serial)
# endif
#else
# ifndef _TS_TST_INFO_set_serial
#  define _TS_TST_INFO_set_serial OPENSSL_MANGLER_ASM(TS_TST_INFO_set_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_set_time
#  define TS_TST_INFO_set_time OPENSSL_MANGLER(TS_TST_INFO_set_time)
# endif
#else
# ifndef _TS_TST_INFO_set_time
#  define _TS_TST_INFO_set_time OPENSSL_MANGLER_ASM(TS_TST_INFO_set_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_set_tsa
#  define TS_TST_INFO_set_tsa OPENSSL_MANGLER(TS_TST_INFO_set_tsa)
# endif
#else
# ifndef _TS_TST_INFO_set_tsa
#  define _TS_TST_INFO_set_tsa OPENSSL_MANGLER_ASM(TS_TST_INFO_set_tsa)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_TST_INFO_set_version
#  define TS_TST_INFO_set_version OPENSSL_MANGLER(TS_TST_INFO_set_version)
# endif
#else
# ifndef _TS_TST_INFO_set_version
#  define _TS_TST_INFO_set_version OPENSSL_MANGLER_ASM(TS_TST_INFO_set_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_VERIFY_CTX_add_flags
#  define TS_VERIFY_CTX_add_flags OPENSSL_MANGLER(TS_VERIFY_CTX_add_flags)
# endif
#else
# ifndef _TS_VERIFY_CTX_add_flags
#  define _TS_VERIFY_CTX_add_flags OPENSSL_MANGLER_ASM(TS_VERIFY_CTX_add_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_VERIFY_CTX_cleanup
#  define TS_VERIFY_CTX_cleanup OPENSSL_MANGLER(TS_VERIFY_CTX_cleanup)
# endif
#else
# ifndef _TS_VERIFY_CTX_cleanup
#  define _TS_VERIFY_CTX_cleanup OPENSSL_MANGLER_ASM(TS_VERIFY_CTX_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_VERIFY_CTX_free
#  define TS_VERIFY_CTX_free OPENSSL_MANGLER(TS_VERIFY_CTX_free)
# endif
#else
# ifndef _TS_VERIFY_CTX_free
#  define _TS_VERIFY_CTX_free OPENSSL_MANGLER_ASM(TS_VERIFY_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_VERIFY_CTX_init
#  define TS_VERIFY_CTX_init OPENSSL_MANGLER(TS_VERIFY_CTX_init)
# endif
#else
# ifndef _TS_VERIFY_CTX_init
#  define _TS_VERIFY_CTX_init OPENSSL_MANGLER_ASM(TS_VERIFY_CTX_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_VERIFY_CTX_new
#  define TS_VERIFY_CTX_new OPENSSL_MANGLER(TS_VERIFY_CTX_new)
# endif
#else
# ifndef _TS_VERIFY_CTX_new
#  define _TS_VERIFY_CTX_new OPENSSL_MANGLER_ASM(TS_VERIFY_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_VERIFY_CTX_set_certs
#  define TS_VERIFY_CTX_set_certs OPENSSL_MANGLER(TS_VERIFY_CTX_set_certs)
# endif
#else
# ifndef _TS_VERIFY_CTX_set_certs
#  define _TS_VERIFY_CTX_set_certs OPENSSL_MANGLER_ASM(TS_VERIFY_CTX_set_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_VERIFY_CTX_set_data
#  define TS_VERIFY_CTX_set_data OPENSSL_MANGLER(TS_VERIFY_CTX_set_data)
# endif
#else
# ifndef _TS_VERIFY_CTX_set_data
#  define _TS_VERIFY_CTX_set_data OPENSSL_MANGLER_ASM(TS_VERIFY_CTX_set_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_VERIFY_CTX_set_flags
#  define TS_VERIFY_CTX_set_flags OPENSSL_MANGLER(TS_VERIFY_CTX_set_flags)
# endif
#else
# ifndef _TS_VERIFY_CTX_set_flags
#  define _TS_VERIFY_CTX_set_flags OPENSSL_MANGLER_ASM(TS_VERIFY_CTX_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_VERIFY_CTX_set_imprint
#  define TS_VERIFY_CTX_set_imprint OPENSSL_MANGLER(TS_VERIFY_CTX_set_imprint)
# endif
#else
# ifndef _TS_VERIFY_CTX_set_imprint
#  define _TS_VERIFY_CTX_set_imprint OPENSSL_MANGLER_ASM(TS_VERIFY_CTX_set_imprint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_VERIFY_CTX_set_store
#  define TS_VERIFY_CTX_set_store OPENSSL_MANGLER(TS_VERIFY_CTX_set_store)
# endif
#else
# ifndef _TS_VERIFY_CTX_set_store
#  define _TS_VERIFY_CTX_set_store OPENSSL_MANGLER_ASM(TS_VERIFY_CTX_set_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_X509_ALGOR_print_bio
#  define TS_X509_ALGOR_print_bio OPENSSL_MANGLER(TS_X509_ALGOR_print_bio)
# endif
#else
# ifndef _TS_X509_ALGOR_print_bio
#  define _TS_X509_ALGOR_print_bio OPENSSL_MANGLER_ASM(TS_X509_ALGOR_print_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TS_ext_print_bio
#  define TS_ext_print_bio OPENSSL_MANGLER(TS_ext_print_bio)
# endif
#else
# ifndef _TS_ext_print_bio
#  define _TS_ext_print_bio OPENSSL_MANGLER_ASM(TS_ext_print_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TXT_DB_create_index
#  define TXT_DB_create_index OPENSSL_MANGLER(TXT_DB_create_index)
# endif
#else
# ifndef _TXT_DB_create_index
#  define _TXT_DB_create_index OPENSSL_MANGLER_ASM(TXT_DB_create_index)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TXT_DB_free
#  define TXT_DB_free OPENSSL_MANGLER(TXT_DB_free)
# endif
#else
# ifndef _TXT_DB_free
#  define _TXT_DB_free OPENSSL_MANGLER_ASM(TXT_DB_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TXT_DB_get_by_index
#  define TXT_DB_get_by_index OPENSSL_MANGLER(TXT_DB_get_by_index)
# endif
#else
# ifndef _TXT_DB_get_by_index
#  define _TXT_DB_get_by_index OPENSSL_MANGLER_ASM(TXT_DB_get_by_index)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TXT_DB_insert
#  define TXT_DB_insert OPENSSL_MANGLER(TXT_DB_insert)
# endif
#else
# ifndef _TXT_DB_insert
#  define _TXT_DB_insert OPENSSL_MANGLER_ASM(TXT_DB_insert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TXT_DB_read
#  define TXT_DB_read OPENSSL_MANGLER(TXT_DB_read)
# endif
#else
# ifndef _TXT_DB_read
#  define _TXT_DB_read OPENSSL_MANGLER_ASM(TXT_DB_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef TXT_DB_write
#  define TXT_DB_write OPENSSL_MANGLER(TXT_DB_write)
# endif
#else
# ifndef _TXT_DB_write
#  define _TXT_DB_write OPENSSL_MANGLER_ASM(TXT_DB_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UINT32_it
#  define UINT32_it OPENSSL_MANGLER(UINT32_it)
# endif
#else
# ifndef _UINT32_it
#  define _UINT32_it OPENSSL_MANGLER_ASM(UINT32_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UINT64_it
#  define UINT64_it OPENSSL_MANGLER(UINT64_it)
# endif
#else
# ifndef _UINT64_it
#  define _UINT64_it OPENSSL_MANGLER_ASM(UINT64_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_OpenSSL
#  define UI_OpenSSL OPENSSL_MANGLER(UI_OpenSSL)
# endif
#else
# ifndef _UI_OpenSSL
#  define _UI_OpenSSL OPENSSL_MANGLER_ASM(UI_OpenSSL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_UTIL_read_pw
#  define UI_UTIL_read_pw OPENSSL_MANGLER(UI_UTIL_read_pw)
# endif
#else
# ifndef _UI_UTIL_read_pw
#  define _UI_UTIL_read_pw OPENSSL_MANGLER_ASM(UI_UTIL_read_pw)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_UTIL_read_pw_string
#  define UI_UTIL_read_pw_string OPENSSL_MANGLER(UI_UTIL_read_pw_string)
# endif
#else
# ifndef _UI_UTIL_read_pw_string
#  define _UI_UTIL_read_pw_string OPENSSL_MANGLER_ASM(UI_UTIL_read_pw_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_UTIL_wrap_read_pem_callback
#  define UI_UTIL_wrap_read_pem_callback OPENSSL_MANGLER(UI_UTIL_wrap_read_pem_callback)
# endif
#else
# ifndef _UI_UTIL_wrap_read_pem_callback
#  define _UI_UTIL_wrap_read_pem_callback OPENSSL_MANGLER_ASM(UI_UTIL_wrap_read_pem_callback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_add_error_string
#  define UI_add_error_string OPENSSL_MANGLER(UI_add_error_string)
# endif
#else
# ifndef _UI_add_error_string
#  define _UI_add_error_string OPENSSL_MANGLER_ASM(UI_add_error_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_add_info_string
#  define UI_add_info_string OPENSSL_MANGLER(UI_add_info_string)
# endif
#else
# ifndef _UI_add_info_string
#  define _UI_add_info_string OPENSSL_MANGLER_ASM(UI_add_info_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_add_input_boolean
#  define UI_add_input_boolean OPENSSL_MANGLER(UI_add_input_boolean)
# endif
#else
# ifndef _UI_add_input_boolean
#  define _UI_add_input_boolean OPENSSL_MANGLER_ASM(UI_add_input_boolean)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_add_input_string
#  define UI_add_input_string OPENSSL_MANGLER(UI_add_input_string)
# endif
#else
# ifndef _UI_add_input_string
#  define _UI_add_input_string OPENSSL_MANGLER_ASM(UI_add_input_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_add_user_data
#  define UI_add_user_data OPENSSL_MANGLER(UI_add_user_data)
# endif
#else
# ifndef _UI_add_user_data
#  define _UI_add_user_data OPENSSL_MANGLER_ASM(UI_add_user_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_add_verify_string
#  define UI_add_verify_string OPENSSL_MANGLER(UI_add_verify_string)
# endif
#else
# ifndef _UI_add_verify_string
#  define _UI_add_verify_string OPENSSL_MANGLER_ASM(UI_add_verify_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_construct_prompt
#  define UI_construct_prompt OPENSSL_MANGLER(UI_construct_prompt)
# endif
#else
# ifndef _UI_construct_prompt
#  define _UI_construct_prompt OPENSSL_MANGLER_ASM(UI_construct_prompt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_create_method
#  define UI_create_method OPENSSL_MANGLER(UI_create_method)
# endif
#else
# ifndef _UI_create_method
#  define _UI_create_method OPENSSL_MANGLER_ASM(UI_create_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_ctrl
#  define UI_ctrl OPENSSL_MANGLER(UI_ctrl)
# endif
#else
# ifndef _UI_ctrl
#  define _UI_ctrl OPENSSL_MANGLER_ASM(UI_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_destroy_method
#  define UI_destroy_method OPENSSL_MANGLER(UI_destroy_method)
# endif
#else
# ifndef _UI_destroy_method
#  define _UI_destroy_method OPENSSL_MANGLER_ASM(UI_destroy_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_dup_error_string
#  define UI_dup_error_string OPENSSL_MANGLER(UI_dup_error_string)
# endif
#else
# ifndef _UI_dup_error_string
#  define _UI_dup_error_string OPENSSL_MANGLER_ASM(UI_dup_error_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_dup_info_string
#  define UI_dup_info_string OPENSSL_MANGLER(UI_dup_info_string)
# endif
#else
# ifndef _UI_dup_info_string
#  define _UI_dup_info_string OPENSSL_MANGLER_ASM(UI_dup_info_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_dup_input_boolean
#  define UI_dup_input_boolean OPENSSL_MANGLER(UI_dup_input_boolean)
# endif
#else
# ifndef _UI_dup_input_boolean
#  define _UI_dup_input_boolean OPENSSL_MANGLER_ASM(UI_dup_input_boolean)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_dup_input_string
#  define UI_dup_input_string OPENSSL_MANGLER(UI_dup_input_string)
# endif
#else
# ifndef _UI_dup_input_string
#  define _UI_dup_input_string OPENSSL_MANGLER_ASM(UI_dup_input_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_dup_user_data
#  define UI_dup_user_data OPENSSL_MANGLER(UI_dup_user_data)
# endif
#else
# ifndef _UI_dup_user_data
#  define _UI_dup_user_data OPENSSL_MANGLER_ASM(UI_dup_user_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_dup_verify_string
#  define UI_dup_verify_string OPENSSL_MANGLER(UI_dup_verify_string)
# endif
#else
# ifndef _UI_dup_verify_string
#  define _UI_dup_verify_string OPENSSL_MANGLER_ASM(UI_dup_verify_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_free
#  define UI_free OPENSSL_MANGLER(UI_free)
# endif
#else
# ifndef _UI_free
#  define _UI_free OPENSSL_MANGLER_ASM(UI_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get0_action_string
#  define UI_get0_action_string OPENSSL_MANGLER(UI_get0_action_string)
# endif
#else
# ifndef _UI_get0_action_string
#  define _UI_get0_action_string OPENSSL_MANGLER_ASM(UI_get0_action_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get0_output_string
#  define UI_get0_output_string OPENSSL_MANGLER(UI_get0_output_string)
# endif
#else
# ifndef _UI_get0_output_string
#  define _UI_get0_output_string OPENSSL_MANGLER_ASM(UI_get0_output_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get0_result
#  define UI_get0_result OPENSSL_MANGLER(UI_get0_result)
# endif
#else
# ifndef _UI_get0_result
#  define _UI_get0_result OPENSSL_MANGLER_ASM(UI_get0_result)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get0_result_string
#  define UI_get0_result_string OPENSSL_MANGLER(UI_get0_result_string)
# endif
#else
# ifndef _UI_get0_result_string
#  define _UI_get0_result_string OPENSSL_MANGLER_ASM(UI_get0_result_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get0_test_string
#  define UI_get0_test_string OPENSSL_MANGLER(UI_get0_test_string)
# endif
#else
# ifndef _UI_get0_test_string
#  define _UI_get0_test_string OPENSSL_MANGLER_ASM(UI_get0_test_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get0_user_data
#  define UI_get0_user_data OPENSSL_MANGLER(UI_get0_user_data)
# endif
#else
# ifndef _UI_get0_user_data
#  define _UI_get0_user_data OPENSSL_MANGLER_ASM(UI_get0_user_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get_default_method
#  define UI_get_default_method OPENSSL_MANGLER(UI_get_default_method)
# endif
#else
# ifndef _UI_get_default_method
#  define _UI_get_default_method OPENSSL_MANGLER_ASM(UI_get_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get_ex_data
#  define UI_get_ex_data OPENSSL_MANGLER(UI_get_ex_data)
# endif
#else
# ifndef _UI_get_ex_data
#  define _UI_get_ex_data OPENSSL_MANGLER_ASM(UI_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get_input_flags
#  define UI_get_input_flags OPENSSL_MANGLER(UI_get_input_flags)
# endif
#else
# ifndef _UI_get_input_flags
#  define _UI_get_input_flags OPENSSL_MANGLER_ASM(UI_get_input_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get_method
#  define UI_get_method OPENSSL_MANGLER(UI_get_method)
# endif
#else
# ifndef _UI_get_method
#  define _UI_get_method OPENSSL_MANGLER_ASM(UI_get_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get_result_length
#  define UI_get_result_length OPENSSL_MANGLER(UI_get_result_length)
# endif
#else
# ifndef _UI_get_result_length
#  define _UI_get_result_length OPENSSL_MANGLER_ASM(UI_get_result_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get_result_maxsize
#  define UI_get_result_maxsize OPENSSL_MANGLER(UI_get_result_maxsize)
# endif
#else
# ifndef _UI_get_result_maxsize
#  define _UI_get_result_maxsize OPENSSL_MANGLER_ASM(UI_get_result_maxsize)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get_result_minsize
#  define UI_get_result_minsize OPENSSL_MANGLER(UI_get_result_minsize)
# endif
#else
# ifndef _UI_get_result_minsize
#  define _UI_get_result_minsize OPENSSL_MANGLER_ASM(UI_get_result_minsize)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get_result_string_length
#  define UI_get_result_string_length OPENSSL_MANGLER(UI_get_result_string_length)
# endif
#else
# ifndef _UI_get_result_string_length
#  define _UI_get_result_string_length OPENSSL_MANGLER_ASM(UI_get_result_string_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_get_string_type
#  define UI_get_string_type OPENSSL_MANGLER(UI_get_string_type)
# endif
#else
# ifndef _UI_get_string_type
#  define _UI_get_string_type OPENSSL_MANGLER_ASM(UI_get_string_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_get_closer
#  define UI_method_get_closer OPENSSL_MANGLER(UI_method_get_closer)
# endif
#else
# ifndef _UI_method_get_closer
#  define _UI_method_get_closer OPENSSL_MANGLER_ASM(UI_method_get_closer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_get_data_destructor
#  define UI_method_get_data_destructor OPENSSL_MANGLER(UI_method_get_data_destructor)
# endif
#else
# ifndef _UI_method_get_data_destructor
#  define _UI_method_get_data_destructor OPENSSL_MANGLER_ASM(UI_method_get_data_destructor)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_get_data_duplicator
#  define UI_method_get_data_duplicator OPENSSL_MANGLER(UI_method_get_data_duplicator)
# endif
#else
# ifndef _UI_method_get_data_duplicator
#  define _UI_method_get_data_duplicator OPENSSL_MANGLER_ASM(UI_method_get_data_duplicator)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_get_ex_data
#  define UI_method_get_ex_data OPENSSL_MANGLER(UI_method_get_ex_data)
# endif
#else
# ifndef _UI_method_get_ex_data
#  define _UI_method_get_ex_data OPENSSL_MANGLER_ASM(UI_method_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_get_flusher
#  define UI_method_get_flusher OPENSSL_MANGLER(UI_method_get_flusher)
# endif
#else
# ifndef _UI_method_get_flusher
#  define _UI_method_get_flusher OPENSSL_MANGLER_ASM(UI_method_get_flusher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_get_opener
#  define UI_method_get_opener OPENSSL_MANGLER(UI_method_get_opener)
# endif
#else
# ifndef _UI_method_get_opener
#  define _UI_method_get_opener OPENSSL_MANGLER_ASM(UI_method_get_opener)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_get_prompt_constructor
#  define UI_method_get_prompt_constructor OPENSSL_MANGLER(UI_method_get_prompt_constructor)
# endif
#else
# ifndef _UI_method_get_prompt_constructor
#  define _UI_method_get_prompt_constructor OPENSSL_MANGLER_ASM(UI_method_get_prompt_constructor)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_get_reader
#  define UI_method_get_reader OPENSSL_MANGLER(UI_method_get_reader)
# endif
#else
# ifndef _UI_method_get_reader
#  define _UI_method_get_reader OPENSSL_MANGLER_ASM(UI_method_get_reader)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_get_writer
#  define UI_method_get_writer OPENSSL_MANGLER(UI_method_get_writer)
# endif
#else
# ifndef _UI_method_get_writer
#  define _UI_method_get_writer OPENSSL_MANGLER_ASM(UI_method_get_writer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_set_closer
#  define UI_method_set_closer OPENSSL_MANGLER(UI_method_set_closer)
# endif
#else
# ifndef _UI_method_set_closer
#  define _UI_method_set_closer OPENSSL_MANGLER_ASM(UI_method_set_closer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_set_data_duplicator
#  define UI_method_set_data_duplicator OPENSSL_MANGLER(UI_method_set_data_duplicator)
# endif
#else
# ifndef _UI_method_set_data_duplicator
#  define _UI_method_set_data_duplicator OPENSSL_MANGLER_ASM(UI_method_set_data_duplicator)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_set_ex_data
#  define UI_method_set_ex_data OPENSSL_MANGLER(UI_method_set_ex_data)
# endif
#else
# ifndef _UI_method_set_ex_data
#  define _UI_method_set_ex_data OPENSSL_MANGLER_ASM(UI_method_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_set_flusher
#  define UI_method_set_flusher OPENSSL_MANGLER(UI_method_set_flusher)
# endif
#else
# ifndef _UI_method_set_flusher
#  define _UI_method_set_flusher OPENSSL_MANGLER_ASM(UI_method_set_flusher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_set_opener
#  define UI_method_set_opener OPENSSL_MANGLER(UI_method_set_opener)
# endif
#else
# ifndef _UI_method_set_opener
#  define _UI_method_set_opener OPENSSL_MANGLER_ASM(UI_method_set_opener)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_set_prompt_constructor
#  define UI_method_set_prompt_constructor OPENSSL_MANGLER(UI_method_set_prompt_constructor)
# endif
#else
# ifndef _UI_method_set_prompt_constructor
#  define _UI_method_set_prompt_constructor OPENSSL_MANGLER_ASM(UI_method_set_prompt_constructor)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_set_reader
#  define UI_method_set_reader OPENSSL_MANGLER(UI_method_set_reader)
# endif
#else
# ifndef _UI_method_set_reader
#  define _UI_method_set_reader OPENSSL_MANGLER_ASM(UI_method_set_reader)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_method_set_writer
#  define UI_method_set_writer OPENSSL_MANGLER(UI_method_set_writer)
# endif
#else
# ifndef _UI_method_set_writer
#  define _UI_method_set_writer OPENSSL_MANGLER_ASM(UI_method_set_writer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_new
#  define UI_new OPENSSL_MANGLER(UI_new)
# endif
#else
# ifndef _UI_new
#  define _UI_new OPENSSL_MANGLER_ASM(UI_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_new_method
#  define UI_new_method OPENSSL_MANGLER(UI_new_method)
# endif
#else
# ifndef _UI_new_method
#  define _UI_new_method OPENSSL_MANGLER_ASM(UI_new_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_null
#  define UI_null OPENSSL_MANGLER(UI_null)
# endif
#else
# ifndef _UI_null
#  define _UI_null OPENSSL_MANGLER_ASM(UI_null)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_process
#  define UI_process OPENSSL_MANGLER(UI_process)
# endif
#else
# ifndef _UI_process
#  define _UI_process OPENSSL_MANGLER_ASM(UI_process)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_set_default_method
#  define UI_set_default_method OPENSSL_MANGLER(UI_set_default_method)
# endif
#else
# ifndef _UI_set_default_method
#  define _UI_set_default_method OPENSSL_MANGLER_ASM(UI_set_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_set_ex_data
#  define UI_set_ex_data OPENSSL_MANGLER(UI_set_ex_data)
# endif
#else
# ifndef _UI_set_ex_data
#  define _UI_set_ex_data OPENSSL_MANGLER_ASM(UI_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_set_method
#  define UI_set_method OPENSSL_MANGLER(UI_set_method)
# endif
#else
# ifndef _UI_set_method
#  define _UI_set_method OPENSSL_MANGLER_ASM(UI_set_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_set_result
#  define UI_set_result OPENSSL_MANGLER(UI_set_result)
# endif
#else
# ifndef _UI_set_result
#  define _UI_set_result OPENSSL_MANGLER_ASM(UI_set_result)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UI_set_result_ex
#  define UI_set_result_ex OPENSSL_MANGLER(UI_set_result_ex)
# endif
#else
# ifndef _UI_set_result_ex
#  define _UI_set_result_ex OPENSSL_MANGLER_ASM(UI_set_result_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef USERNOTICE_free
#  define USERNOTICE_free OPENSSL_MANGLER(USERNOTICE_free)
# endif
#else
# ifndef _USERNOTICE_free
#  define _USERNOTICE_free OPENSSL_MANGLER_ASM(USERNOTICE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef USERNOTICE_it
#  define USERNOTICE_it OPENSSL_MANGLER(USERNOTICE_it)
# endif
#else
# ifndef _USERNOTICE_it
#  define _USERNOTICE_it OPENSSL_MANGLER_ASM(USERNOTICE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef USERNOTICE_new
#  define USERNOTICE_new OPENSSL_MANGLER(USERNOTICE_new)
# endif
#else
# ifndef _USERNOTICE_new
#  define _USERNOTICE_new OPENSSL_MANGLER_ASM(USERNOTICE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UTF8_getc
#  define UTF8_getc OPENSSL_MANGLER(UTF8_getc)
# endif
#else
# ifndef _UTF8_getc
#  define _UTF8_getc OPENSSL_MANGLER_ASM(UTF8_getc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef UTF8_putc
#  define UTF8_putc OPENSSL_MANGLER(UTF8_putc)
# endif
#else
# ifndef _UTF8_putc
#  define _UTF8_putc OPENSSL_MANGLER_ASM(UTF8_putc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_allocate_bytes
#  define WPACKET_allocate_bytes OPENSSL_MANGLER(WPACKET_allocate_bytes)
# endif
#else
# ifndef _WPACKET_allocate_bytes
#  define _WPACKET_allocate_bytes OPENSSL_MANGLER_ASM(WPACKET_allocate_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_cleanup
#  define WPACKET_cleanup OPENSSL_MANGLER(WPACKET_cleanup)
# endif
#else
# ifndef _WPACKET_cleanup
#  define _WPACKET_cleanup OPENSSL_MANGLER_ASM(WPACKET_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_close
#  define WPACKET_close OPENSSL_MANGLER(WPACKET_close)
# endif
#else
# ifndef _WPACKET_close
#  define _WPACKET_close OPENSSL_MANGLER_ASM(WPACKET_close)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_fill_lengths
#  define WPACKET_fill_lengths OPENSSL_MANGLER(WPACKET_fill_lengths)
# endif
#else
# ifndef _WPACKET_fill_lengths
#  define _WPACKET_fill_lengths OPENSSL_MANGLER_ASM(WPACKET_fill_lengths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_finish
#  define WPACKET_finish OPENSSL_MANGLER(WPACKET_finish)
# endif
#else
# ifndef _WPACKET_finish
#  define _WPACKET_finish OPENSSL_MANGLER_ASM(WPACKET_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_get_curr
#  define WPACKET_get_curr OPENSSL_MANGLER(WPACKET_get_curr)
# endif
#else
# ifndef _WPACKET_get_curr
#  define _WPACKET_get_curr OPENSSL_MANGLER_ASM(WPACKET_get_curr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_get_length
#  define WPACKET_get_length OPENSSL_MANGLER(WPACKET_get_length)
# endif
#else
# ifndef _WPACKET_get_length
#  define _WPACKET_get_length OPENSSL_MANGLER_ASM(WPACKET_get_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_get_total_written
#  define WPACKET_get_total_written OPENSSL_MANGLER(WPACKET_get_total_written)
# endif
#else
# ifndef _WPACKET_get_total_written
#  define _WPACKET_get_total_written OPENSSL_MANGLER_ASM(WPACKET_get_total_written)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_init
#  define WPACKET_init OPENSSL_MANGLER(WPACKET_init)
# endif
#else
# ifndef _WPACKET_init
#  define _WPACKET_init OPENSSL_MANGLER_ASM(WPACKET_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_init_der
#  define WPACKET_init_der OPENSSL_MANGLER(WPACKET_init_der)
# endif
#else
# ifndef _WPACKET_init_der
#  define _WPACKET_init_der OPENSSL_MANGLER_ASM(WPACKET_init_der)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_init_len
#  define WPACKET_init_len OPENSSL_MANGLER(WPACKET_init_len)
# endif
#else
# ifndef _WPACKET_init_len
#  define _WPACKET_init_len OPENSSL_MANGLER_ASM(WPACKET_init_len)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_init_null
#  define WPACKET_init_null OPENSSL_MANGLER(WPACKET_init_null)
# endif
#else
# ifndef _WPACKET_init_null
#  define _WPACKET_init_null OPENSSL_MANGLER_ASM(WPACKET_init_null)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_init_null_der
#  define WPACKET_init_null_der OPENSSL_MANGLER(WPACKET_init_null_der)
# endif
#else
# ifndef _WPACKET_init_null_der
#  define _WPACKET_init_null_der OPENSSL_MANGLER_ASM(WPACKET_init_null_der)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_init_static_len
#  define WPACKET_init_static_len OPENSSL_MANGLER(WPACKET_init_static_len)
# endif
#else
# ifndef _WPACKET_init_static_len
#  define _WPACKET_init_static_len OPENSSL_MANGLER_ASM(WPACKET_init_static_len)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_is_null_buf
#  define WPACKET_is_null_buf OPENSSL_MANGLER(WPACKET_is_null_buf)
# endif
#else
# ifndef _WPACKET_is_null_buf
#  define _WPACKET_is_null_buf OPENSSL_MANGLER_ASM(WPACKET_is_null_buf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_memcpy
#  define WPACKET_memcpy OPENSSL_MANGLER(WPACKET_memcpy)
# endif
#else
# ifndef _WPACKET_memcpy
#  define _WPACKET_memcpy OPENSSL_MANGLER_ASM(WPACKET_memcpy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_memset
#  define WPACKET_memset OPENSSL_MANGLER(WPACKET_memset)
# endif
#else
# ifndef _WPACKET_memset
#  define _WPACKET_memset OPENSSL_MANGLER_ASM(WPACKET_memset)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_put_bytes__
#  define WPACKET_put_bytes__ OPENSSL_MANGLER(WPACKET_put_bytes__)
# endif
#else
# ifndef _WPACKET_put_bytes__
#  define _WPACKET_put_bytes__ OPENSSL_MANGLER_ASM(WPACKET_put_bytes__)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_reserve_bytes
#  define WPACKET_reserve_bytes OPENSSL_MANGLER(WPACKET_reserve_bytes)
# endif
#else
# ifndef _WPACKET_reserve_bytes
#  define _WPACKET_reserve_bytes OPENSSL_MANGLER_ASM(WPACKET_reserve_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_set_flags
#  define WPACKET_set_flags OPENSSL_MANGLER(WPACKET_set_flags)
# endif
#else
# ifndef _WPACKET_set_flags
#  define _WPACKET_set_flags OPENSSL_MANGLER_ASM(WPACKET_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_set_max_size
#  define WPACKET_set_max_size OPENSSL_MANGLER(WPACKET_set_max_size)
# endif
#else
# ifndef _WPACKET_set_max_size
#  define _WPACKET_set_max_size OPENSSL_MANGLER_ASM(WPACKET_set_max_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_start_sub_packet
#  define WPACKET_start_sub_packet OPENSSL_MANGLER(WPACKET_start_sub_packet)
# endif
#else
# ifndef _WPACKET_start_sub_packet
#  define _WPACKET_start_sub_packet OPENSSL_MANGLER_ASM(WPACKET_start_sub_packet)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_start_sub_packet_len__
#  define WPACKET_start_sub_packet_len__ OPENSSL_MANGLER(WPACKET_start_sub_packet_len__)
# endif
#else
# ifndef _WPACKET_start_sub_packet_len__
#  define _WPACKET_start_sub_packet_len__ OPENSSL_MANGLER_ASM(WPACKET_start_sub_packet_len__)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_sub_allocate_bytes__
#  define WPACKET_sub_allocate_bytes__ OPENSSL_MANGLER(WPACKET_sub_allocate_bytes__)
# endif
#else
# ifndef _WPACKET_sub_allocate_bytes__
#  define _WPACKET_sub_allocate_bytes__ OPENSSL_MANGLER_ASM(WPACKET_sub_allocate_bytes__)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_sub_memcpy__
#  define WPACKET_sub_memcpy__ OPENSSL_MANGLER(WPACKET_sub_memcpy__)
# endif
#else
# ifndef _WPACKET_sub_memcpy__
#  define _WPACKET_sub_memcpy__ OPENSSL_MANGLER_ASM(WPACKET_sub_memcpy__)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef WPACKET_sub_reserve_bytes__
#  define WPACKET_sub_reserve_bytes__ OPENSSL_MANGLER(WPACKET_sub_reserve_bytes__)
# endif
#else
# ifndef _WPACKET_sub_reserve_bytes__
#  define _WPACKET_sub_reserve_bytes__ OPENSSL_MANGLER_ASM(WPACKET_sub_reserve_bytes__)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_CRL_add_conf
#  define X509V3_EXT_CRL_add_conf OPENSSL_MANGLER(X509V3_EXT_CRL_add_conf)
# endif
#else
# ifndef _X509V3_EXT_CRL_add_conf
#  define _X509V3_EXT_CRL_add_conf OPENSSL_MANGLER_ASM(X509V3_EXT_CRL_add_conf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_CRL_add_nconf
#  define X509V3_EXT_CRL_add_nconf OPENSSL_MANGLER(X509V3_EXT_CRL_add_nconf)
# endif
#else
# ifndef _X509V3_EXT_CRL_add_nconf
#  define _X509V3_EXT_CRL_add_nconf OPENSSL_MANGLER_ASM(X509V3_EXT_CRL_add_nconf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_REQ_add_conf
#  define X509V3_EXT_REQ_add_conf OPENSSL_MANGLER(X509V3_EXT_REQ_add_conf)
# endif
#else
# ifndef _X509V3_EXT_REQ_add_conf
#  define _X509V3_EXT_REQ_add_conf OPENSSL_MANGLER_ASM(X509V3_EXT_REQ_add_conf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_REQ_add_nconf
#  define X509V3_EXT_REQ_add_nconf OPENSSL_MANGLER(X509V3_EXT_REQ_add_nconf)
# endif
#else
# ifndef _X509V3_EXT_REQ_add_nconf
#  define _X509V3_EXT_REQ_add_nconf OPENSSL_MANGLER_ASM(X509V3_EXT_REQ_add_nconf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_add
#  define X509V3_EXT_add OPENSSL_MANGLER(X509V3_EXT_add)
# endif
#else
# ifndef _X509V3_EXT_add
#  define _X509V3_EXT_add OPENSSL_MANGLER_ASM(X509V3_EXT_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_add_alias
#  define X509V3_EXT_add_alias OPENSSL_MANGLER(X509V3_EXT_add_alias)
# endif
#else
# ifndef _X509V3_EXT_add_alias
#  define _X509V3_EXT_add_alias OPENSSL_MANGLER_ASM(X509V3_EXT_add_alias)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_add_conf
#  define X509V3_EXT_add_conf OPENSSL_MANGLER(X509V3_EXT_add_conf)
# endif
#else
# ifndef _X509V3_EXT_add_conf
#  define _X509V3_EXT_add_conf OPENSSL_MANGLER_ASM(X509V3_EXT_add_conf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_add_list
#  define X509V3_EXT_add_list OPENSSL_MANGLER(X509V3_EXT_add_list)
# endif
#else
# ifndef _X509V3_EXT_add_list
#  define _X509V3_EXT_add_list OPENSSL_MANGLER_ASM(X509V3_EXT_add_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_add_nconf
#  define X509V3_EXT_add_nconf OPENSSL_MANGLER(X509V3_EXT_add_nconf)
# endif
#else
# ifndef _X509V3_EXT_add_nconf
#  define _X509V3_EXT_add_nconf OPENSSL_MANGLER_ASM(X509V3_EXT_add_nconf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_add_nconf_sk
#  define X509V3_EXT_add_nconf_sk OPENSSL_MANGLER(X509V3_EXT_add_nconf_sk)
# endif
#else
# ifndef _X509V3_EXT_add_nconf_sk
#  define _X509V3_EXT_add_nconf_sk OPENSSL_MANGLER_ASM(X509V3_EXT_add_nconf_sk)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_cleanup
#  define X509V3_EXT_cleanup OPENSSL_MANGLER(X509V3_EXT_cleanup)
# endif
#else
# ifndef _X509V3_EXT_cleanup
#  define _X509V3_EXT_cleanup OPENSSL_MANGLER_ASM(X509V3_EXT_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_conf
#  define X509V3_EXT_conf OPENSSL_MANGLER(X509V3_EXT_conf)
# endif
#else
# ifndef _X509V3_EXT_conf
#  define _X509V3_EXT_conf OPENSSL_MANGLER_ASM(X509V3_EXT_conf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_conf_nid
#  define X509V3_EXT_conf_nid OPENSSL_MANGLER(X509V3_EXT_conf_nid)
# endif
#else
# ifndef _X509V3_EXT_conf_nid
#  define _X509V3_EXT_conf_nid OPENSSL_MANGLER_ASM(X509V3_EXT_conf_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_d2i
#  define X509V3_EXT_d2i OPENSSL_MANGLER(X509V3_EXT_d2i)
# endif
#else
# ifndef _X509V3_EXT_d2i
#  define _X509V3_EXT_d2i OPENSSL_MANGLER_ASM(X509V3_EXT_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_get
#  define X509V3_EXT_get OPENSSL_MANGLER(X509V3_EXT_get)
# endif
#else
# ifndef _X509V3_EXT_get
#  define _X509V3_EXT_get OPENSSL_MANGLER_ASM(X509V3_EXT_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_get_nid
#  define X509V3_EXT_get_nid OPENSSL_MANGLER(X509V3_EXT_get_nid)
# endif
#else
# ifndef _X509V3_EXT_get_nid
#  define _X509V3_EXT_get_nid OPENSSL_MANGLER_ASM(X509V3_EXT_get_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_i2d
#  define X509V3_EXT_i2d OPENSSL_MANGLER(X509V3_EXT_i2d)
# endif
#else
# ifndef _X509V3_EXT_i2d
#  define _X509V3_EXT_i2d OPENSSL_MANGLER_ASM(X509V3_EXT_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_nconf
#  define X509V3_EXT_nconf OPENSSL_MANGLER(X509V3_EXT_nconf)
# endif
#else
# ifndef _X509V3_EXT_nconf
#  define _X509V3_EXT_nconf OPENSSL_MANGLER_ASM(X509V3_EXT_nconf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_nconf_nid
#  define X509V3_EXT_nconf_nid OPENSSL_MANGLER(X509V3_EXT_nconf_nid)
# endif
#else
# ifndef _X509V3_EXT_nconf_nid
#  define _X509V3_EXT_nconf_nid OPENSSL_MANGLER_ASM(X509V3_EXT_nconf_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_print
#  define X509V3_EXT_print OPENSSL_MANGLER(X509V3_EXT_print)
# endif
#else
# ifndef _X509V3_EXT_print
#  define _X509V3_EXT_print OPENSSL_MANGLER_ASM(X509V3_EXT_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_print_fp
#  define X509V3_EXT_print_fp OPENSSL_MANGLER(X509V3_EXT_print_fp)
# endif
#else
# ifndef _X509V3_EXT_print_fp
#  define _X509V3_EXT_print_fp OPENSSL_MANGLER_ASM(X509V3_EXT_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_EXT_val_prn
#  define X509V3_EXT_val_prn OPENSSL_MANGLER(X509V3_EXT_val_prn)
# endif
#else
# ifndef _X509V3_EXT_val_prn
#  define _X509V3_EXT_val_prn OPENSSL_MANGLER_ASM(X509V3_EXT_val_prn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_NAME_from_section
#  define X509V3_NAME_from_section OPENSSL_MANGLER(X509V3_NAME_from_section)
# endif
#else
# ifndef _X509V3_NAME_from_section
#  define _X509V3_NAME_from_section OPENSSL_MANGLER_ASM(X509V3_NAME_from_section)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_add1_i2d
#  define X509V3_add1_i2d OPENSSL_MANGLER(X509V3_add1_i2d)
# endif
#else
# ifndef _X509V3_add1_i2d
#  define _X509V3_add1_i2d OPENSSL_MANGLER_ASM(X509V3_add1_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_add_standard_extensions
#  define X509V3_add_standard_extensions OPENSSL_MANGLER(X509V3_add_standard_extensions)
# endif
#else
# ifndef _X509V3_add_standard_extensions
#  define _X509V3_add_standard_extensions OPENSSL_MANGLER_ASM(X509V3_add_standard_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_add_value
#  define X509V3_add_value OPENSSL_MANGLER(X509V3_add_value)
# endif
#else
# ifndef _X509V3_add_value
#  define _X509V3_add_value OPENSSL_MANGLER_ASM(X509V3_add_value)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_add_value_bool
#  define X509V3_add_value_bool OPENSSL_MANGLER(X509V3_add_value_bool)
# endif
#else
# ifndef _X509V3_add_value_bool
#  define _X509V3_add_value_bool OPENSSL_MANGLER_ASM(X509V3_add_value_bool)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_add_value_bool_nf
#  define X509V3_add_value_bool_nf OPENSSL_MANGLER(X509V3_add_value_bool_nf)
# endif
#else
# ifndef _X509V3_add_value_bool_nf
#  define _X509V3_add_value_bool_nf OPENSSL_MANGLER_ASM(X509V3_add_value_bool_nf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_add_value_int
#  define X509V3_add_value_int OPENSSL_MANGLER(X509V3_add_value_int)
# endif
#else
# ifndef _X509V3_add_value_int
#  define _X509V3_add_value_int OPENSSL_MANGLER_ASM(X509V3_add_value_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_add_value_uchar
#  define X509V3_add_value_uchar OPENSSL_MANGLER(X509V3_add_value_uchar)
# endif
#else
# ifndef _X509V3_add_value_uchar
#  define _X509V3_add_value_uchar OPENSSL_MANGLER_ASM(X509V3_add_value_uchar)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_conf_free
#  define X509V3_conf_free OPENSSL_MANGLER(X509V3_conf_free)
# endif
#else
# ifndef _X509V3_conf_free
#  define _X509V3_conf_free OPENSSL_MANGLER_ASM(X509V3_conf_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_extensions_print
#  define X509V3_extensions_print OPENSSL_MANGLER(X509V3_extensions_print)
# endif
#else
# ifndef _X509V3_extensions_print
#  define _X509V3_extensions_print OPENSSL_MANGLER_ASM(X509V3_extensions_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_get_d2i
#  define X509V3_get_d2i OPENSSL_MANGLER(X509V3_get_d2i)
# endif
#else
# ifndef _X509V3_get_d2i
#  define _X509V3_get_d2i OPENSSL_MANGLER_ASM(X509V3_get_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_get_section
#  define X509V3_get_section OPENSSL_MANGLER(X509V3_get_section)
# endif
#else
# ifndef _X509V3_get_section
#  define _X509V3_get_section OPENSSL_MANGLER_ASM(X509V3_get_section)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_get_string
#  define X509V3_get_string OPENSSL_MANGLER(X509V3_get_string)
# endif
#else
# ifndef _X509V3_get_string
#  define _X509V3_get_string OPENSSL_MANGLER_ASM(X509V3_get_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_get_value_bool
#  define X509V3_get_value_bool OPENSSL_MANGLER(X509V3_get_value_bool)
# endif
#else
# ifndef _X509V3_get_value_bool
#  define _X509V3_get_value_bool OPENSSL_MANGLER_ASM(X509V3_get_value_bool)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_get_value_int
#  define X509V3_get_value_int OPENSSL_MANGLER(X509V3_get_value_int)
# endif
#else
# ifndef _X509V3_get_value_int
#  define _X509V3_get_value_int OPENSSL_MANGLER_ASM(X509V3_get_value_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_parse_list
#  define X509V3_parse_list OPENSSL_MANGLER(X509V3_parse_list)
# endif
#else
# ifndef _X509V3_parse_list
#  define _X509V3_parse_list OPENSSL_MANGLER_ASM(X509V3_parse_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_section_free
#  define X509V3_section_free OPENSSL_MANGLER(X509V3_section_free)
# endif
#else
# ifndef _X509V3_section_free
#  define _X509V3_section_free OPENSSL_MANGLER_ASM(X509V3_section_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_set_conf_lhash
#  define X509V3_set_conf_lhash OPENSSL_MANGLER(X509V3_set_conf_lhash)
# endif
#else
# ifndef _X509V3_set_conf_lhash
#  define _X509V3_set_conf_lhash OPENSSL_MANGLER_ASM(X509V3_set_conf_lhash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_set_ctx
#  define X509V3_set_ctx OPENSSL_MANGLER(X509V3_set_ctx)
# endif
#else
# ifndef _X509V3_set_ctx
#  define _X509V3_set_ctx OPENSSL_MANGLER_ASM(X509V3_set_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_set_issuer_pkey
#  define X509V3_set_issuer_pkey OPENSSL_MANGLER(X509V3_set_issuer_pkey)
# endif
#else
# ifndef _X509V3_set_issuer_pkey
#  define _X509V3_set_issuer_pkey OPENSSL_MANGLER_ASM(X509V3_set_issuer_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_set_nconf
#  define X509V3_set_nconf OPENSSL_MANGLER(X509V3_set_nconf)
# endif
#else
# ifndef _X509V3_set_nconf
#  define _X509V3_set_nconf OPENSSL_MANGLER_ASM(X509V3_set_nconf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509V3_string_free
#  define X509V3_string_free OPENSSL_MANGLER(X509V3_string_free)
# endif
#else
# ifndef _X509V3_string_free
#  define _X509V3_string_free OPENSSL_MANGLER_ASM(X509V3_string_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ALGORS_it
#  define X509_ALGORS_it OPENSSL_MANGLER(X509_ALGORS_it)
# endif
#else
# ifndef _X509_ALGORS_it
#  define _X509_ALGORS_it OPENSSL_MANGLER_ASM(X509_ALGORS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ALGOR_cmp
#  define X509_ALGOR_cmp OPENSSL_MANGLER(X509_ALGOR_cmp)
# endif
#else
# ifndef _X509_ALGOR_cmp
#  define _X509_ALGOR_cmp OPENSSL_MANGLER_ASM(X509_ALGOR_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ALGOR_copy
#  define X509_ALGOR_copy OPENSSL_MANGLER(X509_ALGOR_copy)
# endif
#else
# ifndef _X509_ALGOR_copy
#  define _X509_ALGOR_copy OPENSSL_MANGLER_ASM(X509_ALGOR_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ALGOR_dup
#  define X509_ALGOR_dup OPENSSL_MANGLER(X509_ALGOR_dup)
# endif
#else
# ifndef _X509_ALGOR_dup
#  define _X509_ALGOR_dup OPENSSL_MANGLER_ASM(X509_ALGOR_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ALGOR_free
#  define X509_ALGOR_free OPENSSL_MANGLER(X509_ALGOR_free)
# endif
#else
# ifndef _X509_ALGOR_free
#  define _X509_ALGOR_free OPENSSL_MANGLER_ASM(X509_ALGOR_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ALGOR_get0
#  define X509_ALGOR_get0 OPENSSL_MANGLER(X509_ALGOR_get0)
# endif
#else
# ifndef _X509_ALGOR_get0
#  define _X509_ALGOR_get0 OPENSSL_MANGLER_ASM(X509_ALGOR_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ALGOR_it
#  define X509_ALGOR_it OPENSSL_MANGLER(X509_ALGOR_it)
# endif
#else
# ifndef _X509_ALGOR_it
#  define _X509_ALGOR_it OPENSSL_MANGLER_ASM(X509_ALGOR_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ALGOR_new
#  define X509_ALGOR_new OPENSSL_MANGLER(X509_ALGOR_new)
# endif
#else
# ifndef _X509_ALGOR_new
#  define _X509_ALGOR_new OPENSSL_MANGLER_ASM(X509_ALGOR_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ALGOR_set0
#  define X509_ALGOR_set0 OPENSSL_MANGLER(X509_ALGOR_set0)
# endif
#else
# ifndef _X509_ALGOR_set0
#  define _X509_ALGOR_set0 OPENSSL_MANGLER_ASM(X509_ALGOR_set0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ALGOR_set_md
#  define X509_ALGOR_set_md OPENSSL_MANGLER(X509_ALGOR_set_md)
# endif
#else
# ifndef _X509_ALGOR_set_md
#  define _X509_ALGOR_set_md OPENSSL_MANGLER_ASM(X509_ALGOR_set_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_count
#  define X509_ATTRIBUTE_count OPENSSL_MANGLER(X509_ATTRIBUTE_count)
# endif
#else
# ifndef _X509_ATTRIBUTE_count
#  define _X509_ATTRIBUTE_count OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_create
#  define X509_ATTRIBUTE_create OPENSSL_MANGLER(X509_ATTRIBUTE_create)
# endif
#else
# ifndef _X509_ATTRIBUTE_create
#  define _X509_ATTRIBUTE_create OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_create_by_NID
#  define X509_ATTRIBUTE_create_by_NID OPENSSL_MANGLER(X509_ATTRIBUTE_create_by_NID)
# endif
#else
# ifndef _X509_ATTRIBUTE_create_by_NID
#  define _X509_ATTRIBUTE_create_by_NID OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_create_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_create_by_OBJ
#  define X509_ATTRIBUTE_create_by_OBJ OPENSSL_MANGLER(X509_ATTRIBUTE_create_by_OBJ)
# endif
#else
# ifndef _X509_ATTRIBUTE_create_by_OBJ
#  define _X509_ATTRIBUTE_create_by_OBJ OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_create_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_create_by_txt
#  define X509_ATTRIBUTE_create_by_txt OPENSSL_MANGLER(X509_ATTRIBUTE_create_by_txt)
# endif
#else
# ifndef _X509_ATTRIBUTE_create_by_txt
#  define _X509_ATTRIBUTE_create_by_txt OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_create_by_txt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_dup
#  define X509_ATTRIBUTE_dup OPENSSL_MANGLER(X509_ATTRIBUTE_dup)
# endif
#else
# ifndef _X509_ATTRIBUTE_dup
#  define _X509_ATTRIBUTE_dup OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_free
#  define X509_ATTRIBUTE_free OPENSSL_MANGLER(X509_ATTRIBUTE_free)
# endif
#else
# ifndef _X509_ATTRIBUTE_free
#  define _X509_ATTRIBUTE_free OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_get0_data
#  define X509_ATTRIBUTE_get0_data OPENSSL_MANGLER(X509_ATTRIBUTE_get0_data)
# endif
#else
# ifndef _X509_ATTRIBUTE_get0_data
#  define _X509_ATTRIBUTE_get0_data OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_get0_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_get0_object
#  define X509_ATTRIBUTE_get0_object OPENSSL_MANGLER(X509_ATTRIBUTE_get0_object)
# endif
#else
# ifndef _X509_ATTRIBUTE_get0_object
#  define _X509_ATTRIBUTE_get0_object OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_get0_object)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_get0_type
#  define X509_ATTRIBUTE_get0_type OPENSSL_MANGLER(X509_ATTRIBUTE_get0_type)
# endif
#else
# ifndef _X509_ATTRIBUTE_get0_type
#  define _X509_ATTRIBUTE_get0_type OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_get0_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_it
#  define X509_ATTRIBUTE_it OPENSSL_MANGLER(X509_ATTRIBUTE_it)
# endif
#else
# ifndef _X509_ATTRIBUTE_it
#  define _X509_ATTRIBUTE_it OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_new
#  define X509_ATTRIBUTE_new OPENSSL_MANGLER(X509_ATTRIBUTE_new)
# endif
#else
# ifndef _X509_ATTRIBUTE_new
#  define _X509_ATTRIBUTE_new OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_set1_data
#  define X509_ATTRIBUTE_set1_data OPENSSL_MANGLER(X509_ATTRIBUTE_set1_data)
# endif
#else
# ifndef _X509_ATTRIBUTE_set1_data
#  define _X509_ATTRIBUTE_set1_data OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_set1_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ATTRIBUTE_set1_object
#  define X509_ATTRIBUTE_set1_object OPENSSL_MANGLER(X509_ATTRIBUTE_set1_object)
# endif
#else
# ifndef _X509_ATTRIBUTE_set1_object
#  define _X509_ATTRIBUTE_set1_object OPENSSL_MANGLER_ASM(X509_ATTRIBUTE_set1_object)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CERT_AUX_free
#  define X509_CERT_AUX_free OPENSSL_MANGLER(X509_CERT_AUX_free)
# endif
#else
# ifndef _X509_CERT_AUX_free
#  define _X509_CERT_AUX_free OPENSSL_MANGLER_ASM(X509_CERT_AUX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CERT_AUX_it
#  define X509_CERT_AUX_it OPENSSL_MANGLER(X509_CERT_AUX_it)
# endif
#else
# ifndef _X509_CERT_AUX_it
#  define _X509_CERT_AUX_it OPENSSL_MANGLER_ASM(X509_CERT_AUX_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CERT_AUX_new
#  define X509_CERT_AUX_new OPENSSL_MANGLER(X509_CERT_AUX_new)
# endif
#else
# ifndef _X509_CERT_AUX_new
#  define _X509_CERT_AUX_new OPENSSL_MANGLER_ASM(X509_CERT_AUX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CINF_free
#  define X509_CINF_free OPENSSL_MANGLER(X509_CINF_free)
# endif
#else
# ifndef _X509_CINF_free
#  define _X509_CINF_free OPENSSL_MANGLER_ASM(X509_CINF_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CINF_it
#  define X509_CINF_it OPENSSL_MANGLER(X509_CINF_it)
# endif
#else
# ifndef _X509_CINF_it
#  define _X509_CINF_it OPENSSL_MANGLER_ASM(X509_CINF_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CINF_new
#  define X509_CINF_new OPENSSL_MANGLER(X509_CINF_new)
# endif
#else
# ifndef _X509_CINF_new
#  define _X509_CINF_new OPENSSL_MANGLER_ASM(X509_CINF_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_INFO_free
#  define X509_CRL_INFO_free OPENSSL_MANGLER(X509_CRL_INFO_free)
# endif
#else
# ifndef _X509_CRL_INFO_free
#  define _X509_CRL_INFO_free OPENSSL_MANGLER_ASM(X509_CRL_INFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_INFO_it
#  define X509_CRL_INFO_it OPENSSL_MANGLER(X509_CRL_INFO_it)
# endif
#else
# ifndef _X509_CRL_INFO_it
#  define _X509_CRL_INFO_it OPENSSL_MANGLER_ASM(X509_CRL_INFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_INFO_new
#  define X509_CRL_INFO_new OPENSSL_MANGLER(X509_CRL_INFO_new)
# endif
#else
# ifndef _X509_CRL_INFO_new
#  define _X509_CRL_INFO_new OPENSSL_MANGLER_ASM(X509_CRL_INFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_METHOD_free
#  define X509_CRL_METHOD_free OPENSSL_MANGLER(X509_CRL_METHOD_free)
# endif
#else
# ifndef _X509_CRL_METHOD_free
#  define _X509_CRL_METHOD_free OPENSSL_MANGLER_ASM(X509_CRL_METHOD_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_METHOD_new
#  define X509_CRL_METHOD_new OPENSSL_MANGLER(X509_CRL_METHOD_new)
# endif
#else
# ifndef _X509_CRL_METHOD_new
#  define _X509_CRL_METHOD_new OPENSSL_MANGLER_ASM(X509_CRL_METHOD_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_add0_revoked
#  define X509_CRL_add0_revoked OPENSSL_MANGLER(X509_CRL_add0_revoked)
# endif
#else
# ifndef _X509_CRL_add0_revoked
#  define _X509_CRL_add0_revoked OPENSSL_MANGLER_ASM(X509_CRL_add0_revoked)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_add1_ext_i2d
#  define X509_CRL_add1_ext_i2d OPENSSL_MANGLER(X509_CRL_add1_ext_i2d)
# endif
#else
# ifndef _X509_CRL_add1_ext_i2d
#  define _X509_CRL_add1_ext_i2d OPENSSL_MANGLER_ASM(X509_CRL_add1_ext_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_add_ext
#  define X509_CRL_add_ext OPENSSL_MANGLER(X509_CRL_add_ext)
# endif
#else
# ifndef _X509_CRL_add_ext
#  define _X509_CRL_add_ext OPENSSL_MANGLER_ASM(X509_CRL_add_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_check_suiteb
#  define X509_CRL_check_suiteb OPENSSL_MANGLER(X509_CRL_check_suiteb)
# endif
#else
# ifndef _X509_CRL_check_suiteb
#  define _X509_CRL_check_suiteb OPENSSL_MANGLER_ASM(X509_CRL_check_suiteb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_cmp
#  define X509_CRL_cmp OPENSSL_MANGLER(X509_CRL_cmp)
# endif
#else
# ifndef _X509_CRL_cmp
#  define _X509_CRL_cmp OPENSSL_MANGLER_ASM(X509_CRL_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_delete_ext
#  define X509_CRL_delete_ext OPENSSL_MANGLER(X509_CRL_delete_ext)
# endif
#else
# ifndef _X509_CRL_delete_ext
#  define _X509_CRL_delete_ext OPENSSL_MANGLER_ASM(X509_CRL_delete_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_diff
#  define X509_CRL_diff OPENSSL_MANGLER(X509_CRL_diff)
# endif
#else
# ifndef _X509_CRL_diff
#  define _X509_CRL_diff OPENSSL_MANGLER_ASM(X509_CRL_diff)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_digest
#  define X509_CRL_digest OPENSSL_MANGLER(X509_CRL_digest)
# endif
#else
# ifndef _X509_CRL_digest
#  define _X509_CRL_digest OPENSSL_MANGLER_ASM(X509_CRL_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_dup
#  define X509_CRL_dup OPENSSL_MANGLER(X509_CRL_dup)
# endif
#else
# ifndef _X509_CRL_dup
#  define _X509_CRL_dup OPENSSL_MANGLER_ASM(X509_CRL_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_free
#  define X509_CRL_free OPENSSL_MANGLER(X509_CRL_free)
# endif
#else
# ifndef _X509_CRL_free
#  define _X509_CRL_free OPENSSL_MANGLER_ASM(X509_CRL_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get0_by_cert
#  define X509_CRL_get0_by_cert OPENSSL_MANGLER(X509_CRL_get0_by_cert)
# endif
#else
# ifndef _X509_CRL_get0_by_cert
#  define _X509_CRL_get0_by_cert OPENSSL_MANGLER_ASM(X509_CRL_get0_by_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get0_by_serial
#  define X509_CRL_get0_by_serial OPENSSL_MANGLER(X509_CRL_get0_by_serial)
# endif
#else
# ifndef _X509_CRL_get0_by_serial
#  define _X509_CRL_get0_by_serial OPENSSL_MANGLER_ASM(X509_CRL_get0_by_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get0_extensions
#  define X509_CRL_get0_extensions OPENSSL_MANGLER(X509_CRL_get0_extensions)
# endif
#else
# ifndef _X509_CRL_get0_extensions
#  define _X509_CRL_get0_extensions OPENSSL_MANGLER_ASM(X509_CRL_get0_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get0_lastUpdate
#  define X509_CRL_get0_lastUpdate OPENSSL_MANGLER(X509_CRL_get0_lastUpdate)
# endif
#else
# ifndef _X509_CRL_get0_lastUpdate
#  define _X509_CRL_get0_lastUpdate OPENSSL_MANGLER_ASM(X509_CRL_get0_lastUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get0_nextUpdate
#  define X509_CRL_get0_nextUpdate OPENSSL_MANGLER(X509_CRL_get0_nextUpdate)
# endif
#else
# ifndef _X509_CRL_get0_nextUpdate
#  define _X509_CRL_get0_nextUpdate OPENSSL_MANGLER_ASM(X509_CRL_get0_nextUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get0_signature
#  define X509_CRL_get0_signature OPENSSL_MANGLER(X509_CRL_get0_signature)
# endif
#else
# ifndef _X509_CRL_get0_signature
#  define _X509_CRL_get0_signature OPENSSL_MANGLER_ASM(X509_CRL_get0_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get_REVOKED
#  define X509_CRL_get_REVOKED OPENSSL_MANGLER(X509_CRL_get_REVOKED)
# endif
#else
# ifndef _X509_CRL_get_REVOKED
#  define _X509_CRL_get_REVOKED OPENSSL_MANGLER_ASM(X509_CRL_get_REVOKED)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get_ext
#  define X509_CRL_get_ext OPENSSL_MANGLER(X509_CRL_get_ext)
# endif
#else
# ifndef _X509_CRL_get_ext
#  define _X509_CRL_get_ext OPENSSL_MANGLER_ASM(X509_CRL_get_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get_ext_by_NID
#  define X509_CRL_get_ext_by_NID OPENSSL_MANGLER(X509_CRL_get_ext_by_NID)
# endif
#else
# ifndef _X509_CRL_get_ext_by_NID
#  define _X509_CRL_get_ext_by_NID OPENSSL_MANGLER_ASM(X509_CRL_get_ext_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get_ext_by_OBJ
#  define X509_CRL_get_ext_by_OBJ OPENSSL_MANGLER(X509_CRL_get_ext_by_OBJ)
# endif
#else
# ifndef _X509_CRL_get_ext_by_OBJ
#  define _X509_CRL_get_ext_by_OBJ OPENSSL_MANGLER_ASM(X509_CRL_get_ext_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get_ext_by_critical
#  define X509_CRL_get_ext_by_critical OPENSSL_MANGLER(X509_CRL_get_ext_by_critical)
# endif
#else
# ifndef _X509_CRL_get_ext_by_critical
#  define _X509_CRL_get_ext_by_critical OPENSSL_MANGLER_ASM(X509_CRL_get_ext_by_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get_ext_count
#  define X509_CRL_get_ext_count OPENSSL_MANGLER(X509_CRL_get_ext_count)
# endif
#else
# ifndef _X509_CRL_get_ext_count
#  define _X509_CRL_get_ext_count OPENSSL_MANGLER_ASM(X509_CRL_get_ext_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get_ext_d2i
#  define X509_CRL_get_ext_d2i OPENSSL_MANGLER(X509_CRL_get_ext_d2i)
# endif
#else
# ifndef _X509_CRL_get_ext_d2i
#  define _X509_CRL_get_ext_d2i OPENSSL_MANGLER_ASM(X509_CRL_get_ext_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get_issuer
#  define X509_CRL_get_issuer OPENSSL_MANGLER(X509_CRL_get_issuer)
# endif
#else
# ifndef _X509_CRL_get_issuer
#  define _X509_CRL_get_issuer OPENSSL_MANGLER_ASM(X509_CRL_get_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get_meth_data
#  define X509_CRL_get_meth_data OPENSSL_MANGLER(X509_CRL_get_meth_data)
# endif
#else
# ifndef _X509_CRL_get_meth_data
#  define _X509_CRL_get_meth_data OPENSSL_MANGLER_ASM(X509_CRL_get_meth_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get_signature_nid
#  define X509_CRL_get_signature_nid OPENSSL_MANGLER(X509_CRL_get_signature_nid)
# endif
#else
# ifndef _X509_CRL_get_signature_nid
#  define _X509_CRL_get_signature_nid OPENSSL_MANGLER_ASM(X509_CRL_get_signature_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_get_version
#  define X509_CRL_get_version OPENSSL_MANGLER(X509_CRL_get_version)
# endif
#else
# ifndef _X509_CRL_get_version
#  define _X509_CRL_get_version OPENSSL_MANGLER_ASM(X509_CRL_get_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_it
#  define X509_CRL_it OPENSSL_MANGLER(X509_CRL_it)
# endif
#else
# ifndef _X509_CRL_it
#  define _X509_CRL_it OPENSSL_MANGLER_ASM(X509_CRL_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_load_http
#  define X509_CRL_load_http OPENSSL_MANGLER(X509_CRL_load_http)
# endif
#else
# ifndef _X509_CRL_load_http
#  define _X509_CRL_load_http OPENSSL_MANGLER_ASM(X509_CRL_load_http)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_match
#  define X509_CRL_match OPENSSL_MANGLER(X509_CRL_match)
# endif
#else
# ifndef _X509_CRL_match
#  define _X509_CRL_match OPENSSL_MANGLER_ASM(X509_CRL_match)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_new
#  define X509_CRL_new OPENSSL_MANGLER(X509_CRL_new)
# endif
#else
# ifndef _X509_CRL_new
#  define _X509_CRL_new OPENSSL_MANGLER_ASM(X509_CRL_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_new_ex
#  define X509_CRL_new_ex OPENSSL_MANGLER(X509_CRL_new_ex)
# endif
#else
# ifndef _X509_CRL_new_ex
#  define _X509_CRL_new_ex OPENSSL_MANGLER_ASM(X509_CRL_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_print
#  define X509_CRL_print OPENSSL_MANGLER(X509_CRL_print)
# endif
#else
# ifndef _X509_CRL_print
#  define _X509_CRL_print OPENSSL_MANGLER_ASM(X509_CRL_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_print_ex
#  define X509_CRL_print_ex OPENSSL_MANGLER(X509_CRL_print_ex)
# endif
#else
# ifndef _X509_CRL_print_ex
#  define _X509_CRL_print_ex OPENSSL_MANGLER_ASM(X509_CRL_print_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_print_fp
#  define X509_CRL_print_fp OPENSSL_MANGLER(X509_CRL_print_fp)
# endif
#else
# ifndef _X509_CRL_print_fp
#  define _X509_CRL_print_fp OPENSSL_MANGLER_ASM(X509_CRL_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_set1_lastUpdate
#  define X509_CRL_set1_lastUpdate OPENSSL_MANGLER(X509_CRL_set1_lastUpdate)
# endif
#else
# ifndef _X509_CRL_set1_lastUpdate
#  define _X509_CRL_set1_lastUpdate OPENSSL_MANGLER_ASM(X509_CRL_set1_lastUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_set1_nextUpdate
#  define X509_CRL_set1_nextUpdate OPENSSL_MANGLER(X509_CRL_set1_nextUpdate)
# endif
#else
# ifndef _X509_CRL_set1_nextUpdate
#  define _X509_CRL_set1_nextUpdate OPENSSL_MANGLER_ASM(X509_CRL_set1_nextUpdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_set_default_method
#  define X509_CRL_set_default_method OPENSSL_MANGLER(X509_CRL_set_default_method)
# endif
#else
# ifndef _X509_CRL_set_default_method
#  define _X509_CRL_set_default_method OPENSSL_MANGLER_ASM(X509_CRL_set_default_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_set_issuer_name
#  define X509_CRL_set_issuer_name OPENSSL_MANGLER(X509_CRL_set_issuer_name)
# endif
#else
# ifndef _X509_CRL_set_issuer_name
#  define _X509_CRL_set_issuer_name OPENSSL_MANGLER_ASM(X509_CRL_set_issuer_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_set_meth_data
#  define X509_CRL_set_meth_data OPENSSL_MANGLER(X509_CRL_set_meth_data)
# endif
#else
# ifndef _X509_CRL_set_meth_data
#  define _X509_CRL_set_meth_data OPENSSL_MANGLER_ASM(X509_CRL_set_meth_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_set_version
#  define X509_CRL_set_version OPENSSL_MANGLER(X509_CRL_set_version)
# endif
#else
# ifndef _X509_CRL_set_version
#  define _X509_CRL_set_version OPENSSL_MANGLER_ASM(X509_CRL_set_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_sign
#  define X509_CRL_sign OPENSSL_MANGLER(X509_CRL_sign)
# endif
#else
# ifndef _X509_CRL_sign
#  define _X509_CRL_sign OPENSSL_MANGLER_ASM(X509_CRL_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_sign_ctx
#  define X509_CRL_sign_ctx OPENSSL_MANGLER(X509_CRL_sign_ctx)
# endif
#else
# ifndef _X509_CRL_sign_ctx
#  define _X509_CRL_sign_ctx OPENSSL_MANGLER_ASM(X509_CRL_sign_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_sort
#  define X509_CRL_sort OPENSSL_MANGLER(X509_CRL_sort)
# endif
#else
# ifndef _X509_CRL_sort
#  define _X509_CRL_sort OPENSSL_MANGLER_ASM(X509_CRL_sort)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_up_ref
#  define X509_CRL_up_ref OPENSSL_MANGLER(X509_CRL_up_ref)
# endif
#else
# ifndef _X509_CRL_up_ref
#  define _X509_CRL_up_ref OPENSSL_MANGLER_ASM(X509_CRL_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_CRL_verify
#  define X509_CRL_verify OPENSSL_MANGLER(X509_CRL_verify)
# endif
#else
# ifndef _X509_CRL_verify
#  define _X509_CRL_verify OPENSSL_MANGLER_ASM(X509_CRL_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSIONS_it
#  define X509_EXTENSIONS_it OPENSSL_MANGLER(X509_EXTENSIONS_it)
# endif
#else
# ifndef _X509_EXTENSIONS_it
#  define _X509_EXTENSIONS_it OPENSSL_MANGLER_ASM(X509_EXTENSIONS_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_create_by_NID
#  define X509_EXTENSION_create_by_NID OPENSSL_MANGLER(X509_EXTENSION_create_by_NID)
# endif
#else
# ifndef _X509_EXTENSION_create_by_NID
#  define _X509_EXTENSION_create_by_NID OPENSSL_MANGLER_ASM(X509_EXTENSION_create_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_create_by_OBJ
#  define X509_EXTENSION_create_by_OBJ OPENSSL_MANGLER(X509_EXTENSION_create_by_OBJ)
# endif
#else
# ifndef _X509_EXTENSION_create_by_OBJ
#  define _X509_EXTENSION_create_by_OBJ OPENSSL_MANGLER_ASM(X509_EXTENSION_create_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_dup
#  define X509_EXTENSION_dup OPENSSL_MANGLER(X509_EXTENSION_dup)
# endif
#else
# ifndef _X509_EXTENSION_dup
#  define _X509_EXTENSION_dup OPENSSL_MANGLER_ASM(X509_EXTENSION_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_free
#  define X509_EXTENSION_free OPENSSL_MANGLER(X509_EXTENSION_free)
# endif
#else
# ifndef _X509_EXTENSION_free
#  define _X509_EXTENSION_free OPENSSL_MANGLER_ASM(X509_EXTENSION_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_get_critical
#  define X509_EXTENSION_get_critical OPENSSL_MANGLER(X509_EXTENSION_get_critical)
# endif
#else
# ifndef _X509_EXTENSION_get_critical
#  define _X509_EXTENSION_get_critical OPENSSL_MANGLER_ASM(X509_EXTENSION_get_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_get_data
#  define X509_EXTENSION_get_data OPENSSL_MANGLER(X509_EXTENSION_get_data)
# endif
#else
# ifndef _X509_EXTENSION_get_data
#  define _X509_EXTENSION_get_data OPENSSL_MANGLER_ASM(X509_EXTENSION_get_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_get_object
#  define X509_EXTENSION_get_object OPENSSL_MANGLER(X509_EXTENSION_get_object)
# endif
#else
# ifndef _X509_EXTENSION_get_object
#  define _X509_EXTENSION_get_object OPENSSL_MANGLER_ASM(X509_EXTENSION_get_object)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_it
#  define X509_EXTENSION_it OPENSSL_MANGLER(X509_EXTENSION_it)
# endif
#else
# ifndef _X509_EXTENSION_it
#  define _X509_EXTENSION_it OPENSSL_MANGLER_ASM(X509_EXTENSION_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_new
#  define X509_EXTENSION_new OPENSSL_MANGLER(X509_EXTENSION_new)
# endif
#else
# ifndef _X509_EXTENSION_new
#  define _X509_EXTENSION_new OPENSSL_MANGLER_ASM(X509_EXTENSION_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_set_critical
#  define X509_EXTENSION_set_critical OPENSSL_MANGLER(X509_EXTENSION_set_critical)
# endif
#else
# ifndef _X509_EXTENSION_set_critical
#  define _X509_EXTENSION_set_critical OPENSSL_MANGLER_ASM(X509_EXTENSION_set_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_set_data
#  define X509_EXTENSION_set_data OPENSSL_MANGLER(X509_EXTENSION_set_data)
# endif
#else
# ifndef _X509_EXTENSION_set_data
#  define _X509_EXTENSION_set_data OPENSSL_MANGLER_ASM(X509_EXTENSION_set_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_EXTENSION_set_object
#  define X509_EXTENSION_set_object OPENSSL_MANGLER(X509_EXTENSION_set_object)
# endif
#else
# ifndef _X509_EXTENSION_set_object
#  define _X509_EXTENSION_set_object OPENSSL_MANGLER_ASM(X509_EXTENSION_set_object)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_INFO_free
#  define X509_INFO_free OPENSSL_MANGLER(X509_INFO_free)
# endif
#else
# ifndef _X509_INFO_free
#  define _X509_INFO_free OPENSSL_MANGLER_ASM(X509_INFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_INFO_new
#  define X509_INFO_new OPENSSL_MANGLER(X509_INFO_new)
# endif
#else
# ifndef _X509_INFO_new
#  define _X509_INFO_new OPENSSL_MANGLER_ASM(X509_INFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_by_alias
#  define X509_LOOKUP_by_alias OPENSSL_MANGLER(X509_LOOKUP_by_alias)
# endif
#else
# ifndef _X509_LOOKUP_by_alias
#  define _X509_LOOKUP_by_alias OPENSSL_MANGLER_ASM(X509_LOOKUP_by_alias)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_by_fingerprint
#  define X509_LOOKUP_by_fingerprint OPENSSL_MANGLER(X509_LOOKUP_by_fingerprint)
# endif
#else
# ifndef _X509_LOOKUP_by_fingerprint
#  define _X509_LOOKUP_by_fingerprint OPENSSL_MANGLER_ASM(X509_LOOKUP_by_fingerprint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_by_issuer_serial
#  define X509_LOOKUP_by_issuer_serial OPENSSL_MANGLER(X509_LOOKUP_by_issuer_serial)
# endif
#else
# ifndef _X509_LOOKUP_by_issuer_serial
#  define _X509_LOOKUP_by_issuer_serial OPENSSL_MANGLER_ASM(X509_LOOKUP_by_issuer_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_by_subject
#  define X509_LOOKUP_by_subject OPENSSL_MANGLER(X509_LOOKUP_by_subject)
# endif
#else
# ifndef _X509_LOOKUP_by_subject
#  define _X509_LOOKUP_by_subject OPENSSL_MANGLER_ASM(X509_LOOKUP_by_subject)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_by_subject_ex
#  define X509_LOOKUP_by_subject_ex OPENSSL_MANGLER(X509_LOOKUP_by_subject_ex)
# endif
#else
# ifndef _X509_LOOKUP_by_subject_ex
#  define _X509_LOOKUP_by_subject_ex OPENSSL_MANGLER_ASM(X509_LOOKUP_by_subject_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_ctrl
#  define X509_LOOKUP_ctrl OPENSSL_MANGLER(X509_LOOKUP_ctrl)
# endif
#else
# ifndef _X509_LOOKUP_ctrl
#  define _X509_LOOKUP_ctrl OPENSSL_MANGLER_ASM(X509_LOOKUP_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_ctrl_ex
#  define X509_LOOKUP_ctrl_ex OPENSSL_MANGLER(X509_LOOKUP_ctrl_ex)
# endif
#else
# ifndef _X509_LOOKUP_ctrl_ex
#  define _X509_LOOKUP_ctrl_ex OPENSSL_MANGLER_ASM(X509_LOOKUP_ctrl_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_file
#  define X509_LOOKUP_file OPENSSL_MANGLER(X509_LOOKUP_file)
# endif
#else
# ifndef _X509_LOOKUP_file
#  define _X509_LOOKUP_file OPENSSL_MANGLER_ASM(X509_LOOKUP_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_free
#  define X509_LOOKUP_free OPENSSL_MANGLER(X509_LOOKUP_free)
# endif
#else
# ifndef _X509_LOOKUP_free
#  define _X509_LOOKUP_free OPENSSL_MANGLER_ASM(X509_LOOKUP_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_get_method_data
#  define X509_LOOKUP_get_method_data OPENSSL_MANGLER(X509_LOOKUP_get_method_data)
# endif
#else
# ifndef _X509_LOOKUP_get_method_data
#  define _X509_LOOKUP_get_method_data OPENSSL_MANGLER_ASM(X509_LOOKUP_get_method_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_get_store
#  define X509_LOOKUP_get_store OPENSSL_MANGLER(X509_LOOKUP_get_store)
# endif
#else
# ifndef _X509_LOOKUP_get_store
#  define _X509_LOOKUP_get_store OPENSSL_MANGLER_ASM(X509_LOOKUP_get_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_hash_dir
#  define X509_LOOKUP_hash_dir OPENSSL_MANGLER(X509_LOOKUP_hash_dir)
# endif
#else
# ifndef _X509_LOOKUP_hash_dir
#  define _X509_LOOKUP_hash_dir OPENSSL_MANGLER_ASM(X509_LOOKUP_hash_dir)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_init
#  define X509_LOOKUP_init OPENSSL_MANGLER(X509_LOOKUP_init)
# endif
#else
# ifndef _X509_LOOKUP_init
#  define _X509_LOOKUP_init OPENSSL_MANGLER_ASM(X509_LOOKUP_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_free
#  define X509_LOOKUP_meth_free OPENSSL_MANGLER(X509_LOOKUP_meth_free)
# endif
#else
# ifndef _X509_LOOKUP_meth_free
#  define _X509_LOOKUP_meth_free OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_get_ctrl
#  define X509_LOOKUP_meth_get_ctrl OPENSSL_MANGLER(X509_LOOKUP_meth_get_ctrl)
# endif
#else
# ifndef _X509_LOOKUP_meth_get_ctrl
#  define _X509_LOOKUP_meth_get_ctrl OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_get_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_get_free
#  define X509_LOOKUP_meth_get_free OPENSSL_MANGLER(X509_LOOKUP_meth_get_free)
# endif
#else
# ifndef _X509_LOOKUP_meth_get_free
#  define _X509_LOOKUP_meth_get_free OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_get_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_get_get_by_alias
#  define X509_LOOKUP_meth_get_get_by_alias OPENSSL_MANGLER(X509_LOOKUP_meth_get_get_by_alias)
# endif
#else
# ifndef _X509_LOOKUP_meth_get_get_by_alias
#  define _X509_LOOKUP_meth_get_get_by_alias OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_get_get_by_alias)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_get_get_by_fingerprint
#  define X509_LOOKUP_meth_get_get_by_fingerprint OPENSSL_MANGLER(X509_LOOKUP_meth_get_get_by_fingerprint)
# endif
#else
# ifndef _X509_LOOKUP_meth_get_get_by_fingerprint
#  define _X509_LOOKUP_meth_get_get_by_fingerprint OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_get_get_by_fingerprint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_get_get_by_issuer_serial
#  define X509_LOOKUP_meth_get_get_by_issuer_serial OPENSSL_MANGLER(X509_LOOKUP_meth_get_get_by_issuer_serial)
# endif
#else
# ifndef _X509_LOOKUP_meth_get_get_by_issuer_serial
#  define _X509_LOOKUP_meth_get_get_by_issuer_serial OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_get_get_by_issuer_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_get_get_by_subject
#  define X509_LOOKUP_meth_get_get_by_subject OPENSSL_MANGLER(X509_LOOKUP_meth_get_get_by_subject)
# endif
#else
# ifndef _X509_LOOKUP_meth_get_get_by_subject
#  define _X509_LOOKUP_meth_get_get_by_subject OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_get_get_by_subject)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_get_init
#  define X509_LOOKUP_meth_get_init OPENSSL_MANGLER(X509_LOOKUP_meth_get_init)
# endif
#else
# ifndef _X509_LOOKUP_meth_get_init
#  define _X509_LOOKUP_meth_get_init OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_get_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_get_new_item
#  define X509_LOOKUP_meth_get_new_item OPENSSL_MANGLER(X509_LOOKUP_meth_get_new_item)
# endif
#else
# ifndef _X509_LOOKUP_meth_get_new_item
#  define _X509_LOOKUP_meth_get_new_item OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_get_new_item)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_get_shutdown
#  define X509_LOOKUP_meth_get_shutdown OPENSSL_MANGLER(X509_LOOKUP_meth_get_shutdown)
# endif
#else
# ifndef _X509_LOOKUP_meth_get_shutdown
#  define _X509_LOOKUP_meth_get_shutdown OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_get_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_new
#  define X509_LOOKUP_meth_new OPENSSL_MANGLER(X509_LOOKUP_meth_new)
# endif
#else
# ifndef _X509_LOOKUP_meth_new
#  define _X509_LOOKUP_meth_new OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_set_ctrl
#  define X509_LOOKUP_meth_set_ctrl OPENSSL_MANGLER(X509_LOOKUP_meth_set_ctrl)
# endif
#else
# ifndef _X509_LOOKUP_meth_set_ctrl
#  define _X509_LOOKUP_meth_set_ctrl OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_set_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_set_free
#  define X509_LOOKUP_meth_set_free OPENSSL_MANGLER(X509_LOOKUP_meth_set_free)
# endif
#else
# ifndef _X509_LOOKUP_meth_set_free
#  define _X509_LOOKUP_meth_set_free OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_set_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_set_get_by_alias
#  define X509_LOOKUP_meth_set_get_by_alias OPENSSL_MANGLER(X509_LOOKUP_meth_set_get_by_alias)
# endif
#else
# ifndef _X509_LOOKUP_meth_set_get_by_alias
#  define _X509_LOOKUP_meth_set_get_by_alias OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_set_get_by_alias)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_set_get_by_fingerprint
#  define X509_LOOKUP_meth_set_get_by_fingerprint OPENSSL_MANGLER(X509_LOOKUP_meth_set_get_by_fingerprint)
# endif
#else
# ifndef _X509_LOOKUP_meth_set_get_by_fingerprint
#  define _X509_LOOKUP_meth_set_get_by_fingerprint OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_set_get_by_fingerprint)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_set_get_by_issuer_serial
#  define X509_LOOKUP_meth_set_get_by_issuer_serial OPENSSL_MANGLER(X509_LOOKUP_meth_set_get_by_issuer_serial)
# endif
#else
# ifndef _X509_LOOKUP_meth_set_get_by_issuer_serial
#  define _X509_LOOKUP_meth_set_get_by_issuer_serial OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_set_get_by_issuer_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_set_get_by_subject
#  define X509_LOOKUP_meth_set_get_by_subject OPENSSL_MANGLER(X509_LOOKUP_meth_set_get_by_subject)
# endif
#else
# ifndef _X509_LOOKUP_meth_set_get_by_subject
#  define _X509_LOOKUP_meth_set_get_by_subject OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_set_get_by_subject)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_set_init
#  define X509_LOOKUP_meth_set_init OPENSSL_MANGLER(X509_LOOKUP_meth_set_init)
# endif
#else
# ifndef _X509_LOOKUP_meth_set_init
#  define _X509_LOOKUP_meth_set_init OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_set_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_set_new_item
#  define X509_LOOKUP_meth_set_new_item OPENSSL_MANGLER(X509_LOOKUP_meth_set_new_item)
# endif
#else
# ifndef _X509_LOOKUP_meth_set_new_item
#  define _X509_LOOKUP_meth_set_new_item OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_set_new_item)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_meth_set_shutdown
#  define X509_LOOKUP_meth_set_shutdown OPENSSL_MANGLER(X509_LOOKUP_meth_set_shutdown)
# endif
#else
# ifndef _X509_LOOKUP_meth_set_shutdown
#  define _X509_LOOKUP_meth_set_shutdown OPENSSL_MANGLER_ASM(X509_LOOKUP_meth_set_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_new
#  define X509_LOOKUP_new OPENSSL_MANGLER(X509_LOOKUP_new)
# endif
#else
# ifndef _X509_LOOKUP_new
#  define _X509_LOOKUP_new OPENSSL_MANGLER_ASM(X509_LOOKUP_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_set_method_data
#  define X509_LOOKUP_set_method_data OPENSSL_MANGLER(X509_LOOKUP_set_method_data)
# endif
#else
# ifndef _X509_LOOKUP_set_method_data
#  define _X509_LOOKUP_set_method_data OPENSSL_MANGLER_ASM(X509_LOOKUP_set_method_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_shutdown
#  define X509_LOOKUP_shutdown OPENSSL_MANGLER(X509_LOOKUP_shutdown)
# endif
#else
# ifndef _X509_LOOKUP_shutdown
#  define _X509_LOOKUP_shutdown OPENSSL_MANGLER_ASM(X509_LOOKUP_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_LOOKUP_store
#  define X509_LOOKUP_store OPENSSL_MANGLER(X509_LOOKUP_store)
# endif
#else
# ifndef _X509_LOOKUP_store
#  define _X509_LOOKUP_store OPENSSL_MANGLER_ASM(X509_LOOKUP_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_create_by_NID
#  define X509_NAME_ENTRY_create_by_NID OPENSSL_MANGLER(X509_NAME_ENTRY_create_by_NID)
# endif
#else
# ifndef _X509_NAME_ENTRY_create_by_NID
#  define _X509_NAME_ENTRY_create_by_NID OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_create_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_create_by_OBJ
#  define X509_NAME_ENTRY_create_by_OBJ OPENSSL_MANGLER(X509_NAME_ENTRY_create_by_OBJ)
# endif
#else
# ifndef _X509_NAME_ENTRY_create_by_OBJ
#  define _X509_NAME_ENTRY_create_by_OBJ OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_create_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_create_by_txt
#  define X509_NAME_ENTRY_create_by_txt OPENSSL_MANGLER(X509_NAME_ENTRY_create_by_txt)
# endif
#else
# ifndef _X509_NAME_ENTRY_create_by_txt
#  define _X509_NAME_ENTRY_create_by_txt OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_create_by_txt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_dup
#  define X509_NAME_ENTRY_dup OPENSSL_MANGLER(X509_NAME_ENTRY_dup)
# endif
#else
# ifndef _X509_NAME_ENTRY_dup
#  define _X509_NAME_ENTRY_dup OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_free
#  define X509_NAME_ENTRY_free OPENSSL_MANGLER(X509_NAME_ENTRY_free)
# endif
#else
# ifndef _X509_NAME_ENTRY_free
#  define _X509_NAME_ENTRY_free OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_get_data
#  define X509_NAME_ENTRY_get_data OPENSSL_MANGLER(X509_NAME_ENTRY_get_data)
# endif
#else
# ifndef _X509_NAME_ENTRY_get_data
#  define _X509_NAME_ENTRY_get_data OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_get_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_get_object
#  define X509_NAME_ENTRY_get_object OPENSSL_MANGLER(X509_NAME_ENTRY_get_object)
# endif
#else
# ifndef _X509_NAME_ENTRY_get_object
#  define _X509_NAME_ENTRY_get_object OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_get_object)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_it
#  define X509_NAME_ENTRY_it OPENSSL_MANGLER(X509_NAME_ENTRY_it)
# endif
#else
# ifndef _X509_NAME_ENTRY_it
#  define _X509_NAME_ENTRY_it OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_new
#  define X509_NAME_ENTRY_new OPENSSL_MANGLER(X509_NAME_ENTRY_new)
# endif
#else
# ifndef _X509_NAME_ENTRY_new
#  define _X509_NAME_ENTRY_new OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_set
#  define X509_NAME_ENTRY_set OPENSSL_MANGLER(X509_NAME_ENTRY_set)
# endif
#else
# ifndef _X509_NAME_ENTRY_set
#  define _X509_NAME_ENTRY_set OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_set_data
#  define X509_NAME_ENTRY_set_data OPENSSL_MANGLER(X509_NAME_ENTRY_set_data)
# endif
#else
# ifndef _X509_NAME_ENTRY_set_data
#  define _X509_NAME_ENTRY_set_data OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_set_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_ENTRY_set_object
#  define X509_NAME_ENTRY_set_object OPENSSL_MANGLER(X509_NAME_ENTRY_set_object)
# endif
#else
# ifndef _X509_NAME_ENTRY_set_object
#  define _X509_NAME_ENTRY_set_object OPENSSL_MANGLER_ASM(X509_NAME_ENTRY_set_object)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_add_entry
#  define X509_NAME_add_entry OPENSSL_MANGLER(X509_NAME_add_entry)
# endif
#else
# ifndef _X509_NAME_add_entry
#  define _X509_NAME_add_entry OPENSSL_MANGLER_ASM(X509_NAME_add_entry)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_add_entry_by_NID
#  define X509_NAME_add_entry_by_NID OPENSSL_MANGLER(X509_NAME_add_entry_by_NID)
# endif
#else
# ifndef _X509_NAME_add_entry_by_NID
#  define _X509_NAME_add_entry_by_NID OPENSSL_MANGLER_ASM(X509_NAME_add_entry_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_add_entry_by_OBJ
#  define X509_NAME_add_entry_by_OBJ OPENSSL_MANGLER(X509_NAME_add_entry_by_OBJ)
# endif
#else
# ifndef _X509_NAME_add_entry_by_OBJ
#  define _X509_NAME_add_entry_by_OBJ OPENSSL_MANGLER_ASM(X509_NAME_add_entry_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_add_entry_by_txt
#  define X509_NAME_add_entry_by_txt OPENSSL_MANGLER(X509_NAME_add_entry_by_txt)
# endif
#else
# ifndef _X509_NAME_add_entry_by_txt
#  define _X509_NAME_add_entry_by_txt OPENSSL_MANGLER_ASM(X509_NAME_add_entry_by_txt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_cmp
#  define X509_NAME_cmp OPENSSL_MANGLER(X509_NAME_cmp)
# endif
#else
# ifndef _X509_NAME_cmp
#  define _X509_NAME_cmp OPENSSL_MANGLER_ASM(X509_NAME_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_delete_entry
#  define X509_NAME_delete_entry OPENSSL_MANGLER(X509_NAME_delete_entry)
# endif
#else
# ifndef _X509_NAME_delete_entry
#  define _X509_NAME_delete_entry OPENSSL_MANGLER_ASM(X509_NAME_delete_entry)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_digest
#  define X509_NAME_digest OPENSSL_MANGLER(X509_NAME_digest)
# endif
#else
# ifndef _X509_NAME_digest
#  define _X509_NAME_digest OPENSSL_MANGLER_ASM(X509_NAME_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_dup
#  define X509_NAME_dup OPENSSL_MANGLER(X509_NAME_dup)
# endif
#else
# ifndef _X509_NAME_dup
#  define _X509_NAME_dup OPENSSL_MANGLER_ASM(X509_NAME_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_entry_count
#  define X509_NAME_entry_count OPENSSL_MANGLER(X509_NAME_entry_count)
# endif
#else
# ifndef _X509_NAME_entry_count
#  define _X509_NAME_entry_count OPENSSL_MANGLER_ASM(X509_NAME_entry_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_free
#  define X509_NAME_free OPENSSL_MANGLER(X509_NAME_free)
# endif
#else
# ifndef _X509_NAME_free
#  define _X509_NAME_free OPENSSL_MANGLER_ASM(X509_NAME_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_get0_der
#  define X509_NAME_get0_der OPENSSL_MANGLER(X509_NAME_get0_der)
# endif
#else
# ifndef _X509_NAME_get0_der
#  define _X509_NAME_get0_der OPENSSL_MANGLER_ASM(X509_NAME_get0_der)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_get_entry
#  define X509_NAME_get_entry OPENSSL_MANGLER(X509_NAME_get_entry)
# endif
#else
# ifndef _X509_NAME_get_entry
#  define _X509_NAME_get_entry OPENSSL_MANGLER_ASM(X509_NAME_get_entry)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_get_index_by_NID
#  define X509_NAME_get_index_by_NID OPENSSL_MANGLER(X509_NAME_get_index_by_NID)
# endif
#else
# ifndef _X509_NAME_get_index_by_NID
#  define _X509_NAME_get_index_by_NID OPENSSL_MANGLER_ASM(X509_NAME_get_index_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_get_index_by_OBJ
#  define X509_NAME_get_index_by_OBJ OPENSSL_MANGLER(X509_NAME_get_index_by_OBJ)
# endif
#else
# ifndef _X509_NAME_get_index_by_OBJ
#  define _X509_NAME_get_index_by_OBJ OPENSSL_MANGLER_ASM(X509_NAME_get_index_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_get_text_by_NID
#  define X509_NAME_get_text_by_NID OPENSSL_MANGLER(X509_NAME_get_text_by_NID)
# endif
#else
# ifndef _X509_NAME_get_text_by_NID
#  define _X509_NAME_get_text_by_NID OPENSSL_MANGLER_ASM(X509_NAME_get_text_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_get_text_by_OBJ
#  define X509_NAME_get_text_by_OBJ OPENSSL_MANGLER(X509_NAME_get_text_by_OBJ)
# endif
#else
# ifndef _X509_NAME_get_text_by_OBJ
#  define _X509_NAME_get_text_by_OBJ OPENSSL_MANGLER_ASM(X509_NAME_get_text_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_hash_ex
#  define X509_NAME_hash_ex OPENSSL_MANGLER(X509_NAME_hash_ex)
# endif
#else
# ifndef _X509_NAME_hash_ex
#  define _X509_NAME_hash_ex OPENSSL_MANGLER_ASM(X509_NAME_hash_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_hash_old
#  define X509_NAME_hash_old OPENSSL_MANGLER(X509_NAME_hash_old)
# endif
#else
# ifndef _X509_NAME_hash_old
#  define _X509_NAME_hash_old OPENSSL_MANGLER_ASM(X509_NAME_hash_old)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_it
#  define X509_NAME_it OPENSSL_MANGLER(X509_NAME_it)
# endif
#else
# ifndef _X509_NAME_it
#  define _X509_NAME_it OPENSSL_MANGLER_ASM(X509_NAME_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_new
#  define X509_NAME_new OPENSSL_MANGLER(X509_NAME_new)
# endif
#else
# ifndef _X509_NAME_new
#  define _X509_NAME_new OPENSSL_MANGLER_ASM(X509_NAME_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_oneline
#  define X509_NAME_oneline OPENSSL_MANGLER(X509_NAME_oneline)
# endif
#else
# ifndef _X509_NAME_oneline
#  define _X509_NAME_oneline OPENSSL_MANGLER_ASM(X509_NAME_oneline)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_print
#  define X509_NAME_print OPENSSL_MANGLER(X509_NAME_print)
# endif
#else
# ifndef _X509_NAME_print
#  define _X509_NAME_print OPENSSL_MANGLER_ASM(X509_NAME_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_print_ex
#  define X509_NAME_print_ex OPENSSL_MANGLER(X509_NAME_print_ex)
# endif
#else
# ifndef _X509_NAME_print_ex
#  define _X509_NAME_print_ex OPENSSL_MANGLER_ASM(X509_NAME_print_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_print_ex_fp
#  define X509_NAME_print_ex_fp OPENSSL_MANGLER(X509_NAME_print_ex_fp)
# endif
#else
# ifndef _X509_NAME_print_ex_fp
#  define _X509_NAME_print_ex_fp OPENSSL_MANGLER_ASM(X509_NAME_print_ex_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_NAME_set
#  define X509_NAME_set OPENSSL_MANGLER(X509_NAME_set)
# endif
#else
# ifndef _X509_NAME_set
#  define _X509_NAME_set OPENSSL_MANGLER_ASM(X509_NAME_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_OBJECT_free
#  define X509_OBJECT_free OPENSSL_MANGLER(X509_OBJECT_free)
# endif
#else
# ifndef _X509_OBJECT_free
#  define _X509_OBJECT_free OPENSSL_MANGLER_ASM(X509_OBJECT_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_OBJECT_get0_X509
#  define X509_OBJECT_get0_X509 OPENSSL_MANGLER(X509_OBJECT_get0_X509)
# endif
#else
# ifndef _X509_OBJECT_get0_X509
#  define _X509_OBJECT_get0_X509 OPENSSL_MANGLER_ASM(X509_OBJECT_get0_X509)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_OBJECT_get0_X509_CRL
#  define X509_OBJECT_get0_X509_CRL OPENSSL_MANGLER(X509_OBJECT_get0_X509_CRL)
# endif
#else
# ifndef _X509_OBJECT_get0_X509_CRL
#  define _X509_OBJECT_get0_X509_CRL OPENSSL_MANGLER_ASM(X509_OBJECT_get0_X509_CRL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_OBJECT_get_type
#  define X509_OBJECT_get_type OPENSSL_MANGLER(X509_OBJECT_get_type)
# endif
#else
# ifndef _X509_OBJECT_get_type
#  define _X509_OBJECT_get_type OPENSSL_MANGLER_ASM(X509_OBJECT_get_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_OBJECT_idx_by_subject
#  define X509_OBJECT_idx_by_subject OPENSSL_MANGLER(X509_OBJECT_idx_by_subject)
# endif
#else
# ifndef _X509_OBJECT_idx_by_subject
#  define _X509_OBJECT_idx_by_subject OPENSSL_MANGLER_ASM(X509_OBJECT_idx_by_subject)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_OBJECT_new
#  define X509_OBJECT_new OPENSSL_MANGLER(X509_OBJECT_new)
# endif
#else
# ifndef _X509_OBJECT_new
#  define _X509_OBJECT_new OPENSSL_MANGLER_ASM(X509_OBJECT_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_OBJECT_retrieve_by_subject
#  define X509_OBJECT_retrieve_by_subject OPENSSL_MANGLER(X509_OBJECT_retrieve_by_subject)
# endif
#else
# ifndef _X509_OBJECT_retrieve_by_subject
#  define _X509_OBJECT_retrieve_by_subject OPENSSL_MANGLER_ASM(X509_OBJECT_retrieve_by_subject)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_OBJECT_retrieve_match
#  define X509_OBJECT_retrieve_match OPENSSL_MANGLER(X509_OBJECT_retrieve_match)
# endif
#else
# ifndef _X509_OBJECT_retrieve_match
#  define _X509_OBJECT_retrieve_match OPENSSL_MANGLER_ASM(X509_OBJECT_retrieve_match)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_OBJECT_set1_X509
#  define X509_OBJECT_set1_X509 OPENSSL_MANGLER(X509_OBJECT_set1_X509)
# endif
#else
# ifndef _X509_OBJECT_set1_X509
#  define _X509_OBJECT_set1_X509 OPENSSL_MANGLER_ASM(X509_OBJECT_set1_X509)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_OBJECT_set1_X509_CRL
#  define X509_OBJECT_set1_X509_CRL OPENSSL_MANGLER(X509_OBJECT_set1_X509_CRL)
# endif
#else
# ifndef _X509_OBJECT_set1_X509_CRL
#  define _X509_OBJECT_set1_X509_CRL OPENSSL_MANGLER_ASM(X509_OBJECT_set1_X509_CRL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_OBJECT_up_ref_count
#  define X509_OBJECT_up_ref_count OPENSSL_MANGLER(X509_OBJECT_up_ref_count)
# endif
#else
# ifndef _X509_OBJECT_up_ref_count
#  define _X509_OBJECT_up_ref_count OPENSSL_MANGLER_ASM(X509_OBJECT_up_ref_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PKEY_free
#  define X509_PKEY_free OPENSSL_MANGLER(X509_PKEY_free)
# endif
#else
# ifndef _X509_PKEY_free
#  define _X509_PKEY_free OPENSSL_MANGLER_ASM(X509_PKEY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PKEY_new
#  define X509_PKEY_new OPENSSL_MANGLER(X509_PKEY_new)
# endif
#else
# ifndef _X509_PKEY_new
#  define _X509_PKEY_new OPENSSL_MANGLER_ASM(X509_PKEY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_POLICY_NODE_print
#  define X509_POLICY_NODE_print OPENSSL_MANGLER(X509_POLICY_NODE_print)
# endif
#else
# ifndef _X509_POLICY_NODE_print
#  define _X509_POLICY_NODE_print OPENSSL_MANGLER_ASM(X509_POLICY_NODE_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PUBKEY_dup
#  define X509_PUBKEY_dup OPENSSL_MANGLER(X509_PUBKEY_dup)
# endif
#else
# ifndef _X509_PUBKEY_dup
#  define _X509_PUBKEY_dup OPENSSL_MANGLER_ASM(X509_PUBKEY_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PUBKEY_eq
#  define X509_PUBKEY_eq OPENSSL_MANGLER(X509_PUBKEY_eq)
# endif
#else
# ifndef _X509_PUBKEY_eq
#  define _X509_PUBKEY_eq OPENSSL_MANGLER_ASM(X509_PUBKEY_eq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PUBKEY_free
#  define X509_PUBKEY_free OPENSSL_MANGLER(X509_PUBKEY_free)
# endif
#else
# ifndef _X509_PUBKEY_free
#  define _X509_PUBKEY_free OPENSSL_MANGLER_ASM(X509_PUBKEY_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PUBKEY_get
#  define X509_PUBKEY_get OPENSSL_MANGLER(X509_PUBKEY_get)
# endif
#else
# ifndef _X509_PUBKEY_get
#  define _X509_PUBKEY_get OPENSSL_MANGLER_ASM(X509_PUBKEY_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PUBKEY_get0
#  define X509_PUBKEY_get0 OPENSSL_MANGLER(X509_PUBKEY_get0)
# endif
#else
# ifndef _X509_PUBKEY_get0
#  define _X509_PUBKEY_get0 OPENSSL_MANGLER_ASM(X509_PUBKEY_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PUBKEY_get0_param
#  define X509_PUBKEY_get0_param OPENSSL_MANGLER(X509_PUBKEY_get0_param)
# endif
#else
# ifndef _X509_PUBKEY_get0_param
#  define _X509_PUBKEY_get0_param OPENSSL_MANGLER_ASM(X509_PUBKEY_get0_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PUBKEY_it
#  define X509_PUBKEY_it OPENSSL_MANGLER(X509_PUBKEY_it)
# endif
#else
# ifndef _X509_PUBKEY_it
#  define _X509_PUBKEY_it OPENSSL_MANGLER_ASM(X509_PUBKEY_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PUBKEY_new
#  define X509_PUBKEY_new OPENSSL_MANGLER(X509_PUBKEY_new)
# endif
#else
# ifndef _X509_PUBKEY_new
#  define _X509_PUBKEY_new OPENSSL_MANGLER_ASM(X509_PUBKEY_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PUBKEY_new_ex
#  define X509_PUBKEY_new_ex OPENSSL_MANGLER(X509_PUBKEY_new_ex)
# endif
#else
# ifndef _X509_PUBKEY_new_ex
#  define _X509_PUBKEY_new_ex OPENSSL_MANGLER_ASM(X509_PUBKEY_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PUBKEY_set
#  define X509_PUBKEY_set OPENSSL_MANGLER(X509_PUBKEY_set)
# endif
#else
# ifndef _X509_PUBKEY_set
#  define _X509_PUBKEY_set OPENSSL_MANGLER_ASM(X509_PUBKEY_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PUBKEY_set0_param
#  define X509_PUBKEY_set0_param OPENSSL_MANGLER(X509_PUBKEY_set0_param)
# endif
#else
# ifndef _X509_PUBKEY_set0_param
#  define _X509_PUBKEY_set0_param OPENSSL_MANGLER_ASM(X509_PUBKEY_set0_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PURPOSE_add
#  define X509_PURPOSE_add OPENSSL_MANGLER(X509_PURPOSE_add)
# endif
#else
# ifndef _X509_PURPOSE_add
#  define _X509_PURPOSE_add OPENSSL_MANGLER_ASM(X509_PURPOSE_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PURPOSE_cleanup
#  define X509_PURPOSE_cleanup OPENSSL_MANGLER(X509_PURPOSE_cleanup)
# endif
#else
# ifndef _X509_PURPOSE_cleanup
#  define _X509_PURPOSE_cleanup OPENSSL_MANGLER_ASM(X509_PURPOSE_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PURPOSE_get0
#  define X509_PURPOSE_get0 OPENSSL_MANGLER(X509_PURPOSE_get0)
# endif
#else
# ifndef _X509_PURPOSE_get0
#  define _X509_PURPOSE_get0 OPENSSL_MANGLER_ASM(X509_PURPOSE_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PURPOSE_get0_name
#  define X509_PURPOSE_get0_name OPENSSL_MANGLER(X509_PURPOSE_get0_name)
# endif
#else
# ifndef _X509_PURPOSE_get0_name
#  define _X509_PURPOSE_get0_name OPENSSL_MANGLER_ASM(X509_PURPOSE_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PURPOSE_get0_sname
#  define X509_PURPOSE_get0_sname OPENSSL_MANGLER(X509_PURPOSE_get0_sname)
# endif
#else
# ifndef _X509_PURPOSE_get0_sname
#  define _X509_PURPOSE_get0_sname OPENSSL_MANGLER_ASM(X509_PURPOSE_get0_sname)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PURPOSE_get_by_id
#  define X509_PURPOSE_get_by_id OPENSSL_MANGLER(X509_PURPOSE_get_by_id)
# endif
#else
# ifndef _X509_PURPOSE_get_by_id
#  define _X509_PURPOSE_get_by_id OPENSSL_MANGLER_ASM(X509_PURPOSE_get_by_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PURPOSE_get_by_sname
#  define X509_PURPOSE_get_by_sname OPENSSL_MANGLER(X509_PURPOSE_get_by_sname)
# endif
#else
# ifndef _X509_PURPOSE_get_by_sname
#  define _X509_PURPOSE_get_by_sname OPENSSL_MANGLER_ASM(X509_PURPOSE_get_by_sname)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PURPOSE_get_count
#  define X509_PURPOSE_get_count OPENSSL_MANGLER(X509_PURPOSE_get_count)
# endif
#else
# ifndef _X509_PURPOSE_get_count
#  define _X509_PURPOSE_get_count OPENSSL_MANGLER_ASM(X509_PURPOSE_get_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PURPOSE_get_id
#  define X509_PURPOSE_get_id OPENSSL_MANGLER(X509_PURPOSE_get_id)
# endif
#else
# ifndef _X509_PURPOSE_get_id
#  define _X509_PURPOSE_get_id OPENSSL_MANGLER_ASM(X509_PURPOSE_get_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PURPOSE_get_trust
#  define X509_PURPOSE_get_trust OPENSSL_MANGLER(X509_PURPOSE_get_trust)
# endif
#else
# ifndef _X509_PURPOSE_get_trust
#  define _X509_PURPOSE_get_trust OPENSSL_MANGLER_ASM(X509_PURPOSE_get_trust)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_PURPOSE_set
#  define X509_PURPOSE_set OPENSSL_MANGLER(X509_PURPOSE_set)
# endif
#else
# ifndef _X509_PURPOSE_set
#  define _X509_PURPOSE_set OPENSSL_MANGLER_ASM(X509_PURPOSE_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_INFO_free
#  define X509_REQ_INFO_free OPENSSL_MANGLER(X509_REQ_INFO_free)
# endif
#else
# ifndef _X509_REQ_INFO_free
#  define _X509_REQ_INFO_free OPENSSL_MANGLER_ASM(X509_REQ_INFO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_INFO_it
#  define X509_REQ_INFO_it OPENSSL_MANGLER(X509_REQ_INFO_it)
# endif
#else
# ifndef _X509_REQ_INFO_it
#  define _X509_REQ_INFO_it OPENSSL_MANGLER_ASM(X509_REQ_INFO_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_INFO_new
#  define X509_REQ_INFO_new OPENSSL_MANGLER(X509_REQ_INFO_new)
# endif
#else
# ifndef _X509_REQ_INFO_new
#  define _X509_REQ_INFO_new OPENSSL_MANGLER_ASM(X509_REQ_INFO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_add1_attr
#  define X509_REQ_add1_attr OPENSSL_MANGLER(X509_REQ_add1_attr)
# endif
#else
# ifndef _X509_REQ_add1_attr
#  define _X509_REQ_add1_attr OPENSSL_MANGLER_ASM(X509_REQ_add1_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_add1_attr_by_NID
#  define X509_REQ_add1_attr_by_NID OPENSSL_MANGLER(X509_REQ_add1_attr_by_NID)
# endif
#else
# ifndef _X509_REQ_add1_attr_by_NID
#  define _X509_REQ_add1_attr_by_NID OPENSSL_MANGLER_ASM(X509_REQ_add1_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_add1_attr_by_OBJ
#  define X509_REQ_add1_attr_by_OBJ OPENSSL_MANGLER(X509_REQ_add1_attr_by_OBJ)
# endif
#else
# ifndef _X509_REQ_add1_attr_by_OBJ
#  define _X509_REQ_add1_attr_by_OBJ OPENSSL_MANGLER_ASM(X509_REQ_add1_attr_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_add1_attr_by_txt
#  define X509_REQ_add1_attr_by_txt OPENSSL_MANGLER(X509_REQ_add1_attr_by_txt)
# endif
#else
# ifndef _X509_REQ_add1_attr_by_txt
#  define _X509_REQ_add1_attr_by_txt OPENSSL_MANGLER_ASM(X509_REQ_add1_attr_by_txt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_add_extensions
#  define X509_REQ_add_extensions OPENSSL_MANGLER(X509_REQ_add_extensions)
# endif
#else
# ifndef _X509_REQ_add_extensions
#  define _X509_REQ_add_extensions OPENSSL_MANGLER_ASM(X509_REQ_add_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_add_extensions_nid
#  define X509_REQ_add_extensions_nid OPENSSL_MANGLER(X509_REQ_add_extensions_nid)
# endif
#else
# ifndef _X509_REQ_add_extensions_nid
#  define _X509_REQ_add_extensions_nid OPENSSL_MANGLER_ASM(X509_REQ_add_extensions_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_check_private_key
#  define X509_REQ_check_private_key OPENSSL_MANGLER(X509_REQ_check_private_key)
# endif
#else
# ifndef _X509_REQ_check_private_key
#  define _X509_REQ_check_private_key OPENSSL_MANGLER_ASM(X509_REQ_check_private_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_delete_attr
#  define X509_REQ_delete_attr OPENSSL_MANGLER(X509_REQ_delete_attr)
# endif
#else
# ifndef _X509_REQ_delete_attr
#  define _X509_REQ_delete_attr OPENSSL_MANGLER_ASM(X509_REQ_delete_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_digest
#  define X509_REQ_digest OPENSSL_MANGLER(X509_REQ_digest)
# endif
#else
# ifndef _X509_REQ_digest
#  define _X509_REQ_digest OPENSSL_MANGLER_ASM(X509_REQ_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_dup
#  define X509_REQ_dup OPENSSL_MANGLER(X509_REQ_dup)
# endif
#else
# ifndef _X509_REQ_dup
#  define _X509_REQ_dup OPENSSL_MANGLER_ASM(X509_REQ_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_extension_nid
#  define X509_REQ_extension_nid OPENSSL_MANGLER(X509_REQ_extension_nid)
# endif
#else
# ifndef _X509_REQ_extension_nid
#  define _X509_REQ_extension_nid OPENSSL_MANGLER_ASM(X509_REQ_extension_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_free
#  define X509_REQ_free OPENSSL_MANGLER(X509_REQ_free)
# endif
#else
# ifndef _X509_REQ_free
#  define _X509_REQ_free OPENSSL_MANGLER_ASM(X509_REQ_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get0_distinguishing_id
#  define X509_REQ_get0_distinguishing_id OPENSSL_MANGLER(X509_REQ_get0_distinguishing_id)
# endif
#else
# ifndef _X509_REQ_get0_distinguishing_id
#  define _X509_REQ_get0_distinguishing_id OPENSSL_MANGLER_ASM(X509_REQ_get0_distinguishing_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get0_pubkey
#  define X509_REQ_get0_pubkey OPENSSL_MANGLER(X509_REQ_get0_pubkey)
# endif
#else
# ifndef _X509_REQ_get0_pubkey
#  define _X509_REQ_get0_pubkey OPENSSL_MANGLER_ASM(X509_REQ_get0_pubkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get0_signature
#  define X509_REQ_get0_signature OPENSSL_MANGLER(X509_REQ_get0_signature)
# endif
#else
# ifndef _X509_REQ_get0_signature
#  define _X509_REQ_get0_signature OPENSSL_MANGLER_ASM(X509_REQ_get0_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get1_email
#  define X509_REQ_get1_email OPENSSL_MANGLER(X509_REQ_get1_email)
# endif
#else
# ifndef _X509_REQ_get1_email
#  define _X509_REQ_get1_email OPENSSL_MANGLER_ASM(X509_REQ_get1_email)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get_X509_PUBKEY
#  define X509_REQ_get_X509_PUBKEY OPENSSL_MANGLER(X509_REQ_get_X509_PUBKEY)
# endif
#else
# ifndef _X509_REQ_get_X509_PUBKEY
#  define _X509_REQ_get_X509_PUBKEY OPENSSL_MANGLER_ASM(X509_REQ_get_X509_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get_attr
#  define X509_REQ_get_attr OPENSSL_MANGLER(X509_REQ_get_attr)
# endif
#else
# ifndef _X509_REQ_get_attr
#  define _X509_REQ_get_attr OPENSSL_MANGLER_ASM(X509_REQ_get_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get_attr_by_NID
#  define X509_REQ_get_attr_by_NID OPENSSL_MANGLER(X509_REQ_get_attr_by_NID)
# endif
#else
# ifndef _X509_REQ_get_attr_by_NID
#  define _X509_REQ_get_attr_by_NID OPENSSL_MANGLER_ASM(X509_REQ_get_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get_attr_by_OBJ
#  define X509_REQ_get_attr_by_OBJ OPENSSL_MANGLER(X509_REQ_get_attr_by_OBJ)
# endif
#else
# ifndef _X509_REQ_get_attr_by_OBJ
#  define _X509_REQ_get_attr_by_OBJ OPENSSL_MANGLER_ASM(X509_REQ_get_attr_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get_attr_count
#  define X509_REQ_get_attr_count OPENSSL_MANGLER(X509_REQ_get_attr_count)
# endif
#else
# ifndef _X509_REQ_get_attr_count
#  define _X509_REQ_get_attr_count OPENSSL_MANGLER_ASM(X509_REQ_get_attr_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get_extension_nids
#  define X509_REQ_get_extension_nids OPENSSL_MANGLER(X509_REQ_get_extension_nids)
# endif
#else
# ifndef _X509_REQ_get_extension_nids
#  define _X509_REQ_get_extension_nids OPENSSL_MANGLER_ASM(X509_REQ_get_extension_nids)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get_extensions
#  define X509_REQ_get_extensions OPENSSL_MANGLER(X509_REQ_get_extensions)
# endif
#else
# ifndef _X509_REQ_get_extensions
#  define _X509_REQ_get_extensions OPENSSL_MANGLER_ASM(X509_REQ_get_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get_pubkey
#  define X509_REQ_get_pubkey OPENSSL_MANGLER(X509_REQ_get_pubkey)
# endif
#else
# ifndef _X509_REQ_get_pubkey
#  define _X509_REQ_get_pubkey OPENSSL_MANGLER_ASM(X509_REQ_get_pubkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get_signature_nid
#  define X509_REQ_get_signature_nid OPENSSL_MANGLER(X509_REQ_get_signature_nid)
# endif
#else
# ifndef _X509_REQ_get_signature_nid
#  define _X509_REQ_get_signature_nid OPENSSL_MANGLER_ASM(X509_REQ_get_signature_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get_subject_name
#  define X509_REQ_get_subject_name OPENSSL_MANGLER(X509_REQ_get_subject_name)
# endif
#else
# ifndef _X509_REQ_get_subject_name
#  define _X509_REQ_get_subject_name OPENSSL_MANGLER_ASM(X509_REQ_get_subject_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_get_version
#  define X509_REQ_get_version OPENSSL_MANGLER(X509_REQ_get_version)
# endif
#else
# ifndef _X509_REQ_get_version
#  define _X509_REQ_get_version OPENSSL_MANGLER_ASM(X509_REQ_get_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_it
#  define X509_REQ_it OPENSSL_MANGLER(X509_REQ_it)
# endif
#else
# ifndef _X509_REQ_it
#  define _X509_REQ_it OPENSSL_MANGLER_ASM(X509_REQ_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_new
#  define X509_REQ_new OPENSSL_MANGLER(X509_REQ_new)
# endif
#else
# ifndef _X509_REQ_new
#  define _X509_REQ_new OPENSSL_MANGLER_ASM(X509_REQ_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_new_ex
#  define X509_REQ_new_ex OPENSSL_MANGLER(X509_REQ_new_ex)
# endif
#else
# ifndef _X509_REQ_new_ex
#  define _X509_REQ_new_ex OPENSSL_MANGLER_ASM(X509_REQ_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_print
#  define X509_REQ_print OPENSSL_MANGLER(X509_REQ_print)
# endif
#else
# ifndef _X509_REQ_print
#  define _X509_REQ_print OPENSSL_MANGLER_ASM(X509_REQ_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_print_ex
#  define X509_REQ_print_ex OPENSSL_MANGLER(X509_REQ_print_ex)
# endif
#else
# ifndef _X509_REQ_print_ex
#  define _X509_REQ_print_ex OPENSSL_MANGLER_ASM(X509_REQ_print_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_print_fp
#  define X509_REQ_print_fp OPENSSL_MANGLER(X509_REQ_print_fp)
# endif
#else
# ifndef _X509_REQ_print_fp
#  define _X509_REQ_print_fp OPENSSL_MANGLER_ASM(X509_REQ_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_set0_distinguishing_id
#  define X509_REQ_set0_distinguishing_id OPENSSL_MANGLER(X509_REQ_set0_distinguishing_id)
# endif
#else
# ifndef _X509_REQ_set0_distinguishing_id
#  define _X509_REQ_set0_distinguishing_id OPENSSL_MANGLER_ASM(X509_REQ_set0_distinguishing_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_set0_signature
#  define X509_REQ_set0_signature OPENSSL_MANGLER(X509_REQ_set0_signature)
# endif
#else
# ifndef _X509_REQ_set0_signature
#  define _X509_REQ_set0_signature OPENSSL_MANGLER_ASM(X509_REQ_set0_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_set1_signature_algo
#  define X509_REQ_set1_signature_algo OPENSSL_MANGLER(X509_REQ_set1_signature_algo)
# endif
#else
# ifndef _X509_REQ_set1_signature_algo
#  define _X509_REQ_set1_signature_algo OPENSSL_MANGLER_ASM(X509_REQ_set1_signature_algo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_set_extension_nids
#  define X509_REQ_set_extension_nids OPENSSL_MANGLER(X509_REQ_set_extension_nids)
# endif
#else
# ifndef _X509_REQ_set_extension_nids
#  define _X509_REQ_set_extension_nids OPENSSL_MANGLER_ASM(X509_REQ_set_extension_nids)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_set_pubkey
#  define X509_REQ_set_pubkey OPENSSL_MANGLER(X509_REQ_set_pubkey)
# endif
#else
# ifndef _X509_REQ_set_pubkey
#  define _X509_REQ_set_pubkey OPENSSL_MANGLER_ASM(X509_REQ_set_pubkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_set_subject_name
#  define X509_REQ_set_subject_name OPENSSL_MANGLER(X509_REQ_set_subject_name)
# endif
#else
# ifndef _X509_REQ_set_subject_name
#  define _X509_REQ_set_subject_name OPENSSL_MANGLER_ASM(X509_REQ_set_subject_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_set_version
#  define X509_REQ_set_version OPENSSL_MANGLER(X509_REQ_set_version)
# endif
#else
# ifndef _X509_REQ_set_version
#  define _X509_REQ_set_version OPENSSL_MANGLER_ASM(X509_REQ_set_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_sign
#  define X509_REQ_sign OPENSSL_MANGLER(X509_REQ_sign)
# endif
#else
# ifndef _X509_REQ_sign
#  define _X509_REQ_sign OPENSSL_MANGLER_ASM(X509_REQ_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_sign_ctx
#  define X509_REQ_sign_ctx OPENSSL_MANGLER(X509_REQ_sign_ctx)
# endif
#else
# ifndef _X509_REQ_sign_ctx
#  define _X509_REQ_sign_ctx OPENSSL_MANGLER_ASM(X509_REQ_sign_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_to_X509
#  define X509_REQ_to_X509 OPENSSL_MANGLER(X509_REQ_to_X509)
# endif
#else
# ifndef _X509_REQ_to_X509
#  define _X509_REQ_to_X509 OPENSSL_MANGLER_ASM(X509_REQ_to_X509)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_verify
#  define X509_REQ_verify OPENSSL_MANGLER(X509_REQ_verify)
# endif
#else
# ifndef _X509_REQ_verify
#  define _X509_REQ_verify OPENSSL_MANGLER_ASM(X509_REQ_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REQ_verify_ex
#  define X509_REQ_verify_ex OPENSSL_MANGLER(X509_REQ_verify_ex)
# endif
#else
# ifndef _X509_REQ_verify_ex
#  define _X509_REQ_verify_ex OPENSSL_MANGLER_ASM(X509_REQ_verify_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_add1_ext_i2d
#  define X509_REVOKED_add1_ext_i2d OPENSSL_MANGLER(X509_REVOKED_add1_ext_i2d)
# endif
#else
# ifndef _X509_REVOKED_add1_ext_i2d
#  define _X509_REVOKED_add1_ext_i2d OPENSSL_MANGLER_ASM(X509_REVOKED_add1_ext_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_add_ext
#  define X509_REVOKED_add_ext OPENSSL_MANGLER(X509_REVOKED_add_ext)
# endif
#else
# ifndef _X509_REVOKED_add_ext
#  define _X509_REVOKED_add_ext OPENSSL_MANGLER_ASM(X509_REVOKED_add_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_delete_ext
#  define X509_REVOKED_delete_ext OPENSSL_MANGLER(X509_REVOKED_delete_ext)
# endif
#else
# ifndef _X509_REVOKED_delete_ext
#  define _X509_REVOKED_delete_ext OPENSSL_MANGLER_ASM(X509_REVOKED_delete_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_dup
#  define X509_REVOKED_dup OPENSSL_MANGLER(X509_REVOKED_dup)
# endif
#else
# ifndef _X509_REVOKED_dup
#  define _X509_REVOKED_dup OPENSSL_MANGLER_ASM(X509_REVOKED_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_free
#  define X509_REVOKED_free OPENSSL_MANGLER(X509_REVOKED_free)
# endif
#else
# ifndef _X509_REVOKED_free
#  define _X509_REVOKED_free OPENSSL_MANGLER_ASM(X509_REVOKED_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_get0_extensions
#  define X509_REVOKED_get0_extensions OPENSSL_MANGLER(X509_REVOKED_get0_extensions)
# endif
#else
# ifndef _X509_REVOKED_get0_extensions
#  define _X509_REVOKED_get0_extensions OPENSSL_MANGLER_ASM(X509_REVOKED_get0_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_get0_revocationDate
#  define X509_REVOKED_get0_revocationDate OPENSSL_MANGLER(X509_REVOKED_get0_revocationDate)
# endif
#else
# ifndef _X509_REVOKED_get0_revocationDate
#  define _X509_REVOKED_get0_revocationDate OPENSSL_MANGLER_ASM(X509_REVOKED_get0_revocationDate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_get0_serialNumber
#  define X509_REVOKED_get0_serialNumber OPENSSL_MANGLER(X509_REVOKED_get0_serialNumber)
# endif
#else
# ifndef _X509_REVOKED_get0_serialNumber
#  define _X509_REVOKED_get0_serialNumber OPENSSL_MANGLER_ASM(X509_REVOKED_get0_serialNumber)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_get_ext
#  define X509_REVOKED_get_ext OPENSSL_MANGLER(X509_REVOKED_get_ext)
# endif
#else
# ifndef _X509_REVOKED_get_ext
#  define _X509_REVOKED_get_ext OPENSSL_MANGLER_ASM(X509_REVOKED_get_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_get_ext_by_NID
#  define X509_REVOKED_get_ext_by_NID OPENSSL_MANGLER(X509_REVOKED_get_ext_by_NID)
# endif
#else
# ifndef _X509_REVOKED_get_ext_by_NID
#  define _X509_REVOKED_get_ext_by_NID OPENSSL_MANGLER_ASM(X509_REVOKED_get_ext_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_get_ext_by_OBJ
#  define X509_REVOKED_get_ext_by_OBJ OPENSSL_MANGLER(X509_REVOKED_get_ext_by_OBJ)
# endif
#else
# ifndef _X509_REVOKED_get_ext_by_OBJ
#  define _X509_REVOKED_get_ext_by_OBJ OPENSSL_MANGLER_ASM(X509_REVOKED_get_ext_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_get_ext_by_critical
#  define X509_REVOKED_get_ext_by_critical OPENSSL_MANGLER(X509_REVOKED_get_ext_by_critical)
# endif
#else
# ifndef _X509_REVOKED_get_ext_by_critical
#  define _X509_REVOKED_get_ext_by_critical OPENSSL_MANGLER_ASM(X509_REVOKED_get_ext_by_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_get_ext_count
#  define X509_REVOKED_get_ext_count OPENSSL_MANGLER(X509_REVOKED_get_ext_count)
# endif
#else
# ifndef _X509_REVOKED_get_ext_count
#  define _X509_REVOKED_get_ext_count OPENSSL_MANGLER_ASM(X509_REVOKED_get_ext_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_get_ext_d2i
#  define X509_REVOKED_get_ext_d2i OPENSSL_MANGLER(X509_REVOKED_get_ext_d2i)
# endif
#else
# ifndef _X509_REVOKED_get_ext_d2i
#  define _X509_REVOKED_get_ext_d2i OPENSSL_MANGLER_ASM(X509_REVOKED_get_ext_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_it
#  define X509_REVOKED_it OPENSSL_MANGLER(X509_REVOKED_it)
# endif
#else
# ifndef _X509_REVOKED_it
#  define _X509_REVOKED_it OPENSSL_MANGLER_ASM(X509_REVOKED_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_new
#  define X509_REVOKED_new OPENSSL_MANGLER(X509_REVOKED_new)
# endif
#else
# ifndef _X509_REVOKED_new
#  define _X509_REVOKED_new OPENSSL_MANGLER_ASM(X509_REVOKED_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_set_revocationDate
#  define X509_REVOKED_set_revocationDate OPENSSL_MANGLER(X509_REVOKED_set_revocationDate)
# endif
#else
# ifndef _X509_REVOKED_set_revocationDate
#  define _X509_REVOKED_set_revocationDate OPENSSL_MANGLER_ASM(X509_REVOKED_set_revocationDate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_REVOKED_set_serialNumber
#  define X509_REVOKED_set_serialNumber OPENSSL_MANGLER(X509_REVOKED_set_serialNumber)
# endif
#else
# ifndef _X509_REVOKED_set_serialNumber
#  define _X509_REVOKED_set_serialNumber OPENSSL_MANGLER_ASM(X509_REVOKED_set_serialNumber)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_SIG_INFO_get
#  define X509_SIG_INFO_get OPENSSL_MANGLER(X509_SIG_INFO_get)
# endif
#else
# ifndef _X509_SIG_INFO_get
#  define _X509_SIG_INFO_get OPENSSL_MANGLER_ASM(X509_SIG_INFO_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_SIG_INFO_set
#  define X509_SIG_INFO_set OPENSSL_MANGLER(X509_SIG_INFO_set)
# endif
#else
# ifndef _X509_SIG_INFO_set
#  define _X509_SIG_INFO_set OPENSSL_MANGLER_ASM(X509_SIG_INFO_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_SIG_free
#  define X509_SIG_free OPENSSL_MANGLER(X509_SIG_free)
# endif
#else
# ifndef _X509_SIG_free
#  define _X509_SIG_free OPENSSL_MANGLER_ASM(X509_SIG_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_SIG_get0
#  define X509_SIG_get0 OPENSSL_MANGLER(X509_SIG_get0)
# endif
#else
# ifndef _X509_SIG_get0
#  define _X509_SIG_get0 OPENSSL_MANGLER_ASM(X509_SIG_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_SIG_getm
#  define X509_SIG_getm OPENSSL_MANGLER(X509_SIG_getm)
# endif
#else
# ifndef _X509_SIG_getm
#  define _X509_SIG_getm OPENSSL_MANGLER_ASM(X509_SIG_getm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_SIG_it
#  define X509_SIG_it OPENSSL_MANGLER(X509_SIG_it)
# endif
#else
# ifndef _X509_SIG_it
#  define _X509_SIG_it OPENSSL_MANGLER_ASM(X509_SIG_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_SIG_new
#  define X509_SIG_new OPENSSL_MANGLER(X509_SIG_new)
# endif
#else
# ifndef _X509_SIG_new
#  define _X509_SIG_new OPENSSL_MANGLER_ASM(X509_SIG_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_cleanup
#  define X509_STORE_CTX_cleanup OPENSSL_MANGLER(X509_STORE_CTX_cleanup)
# endif
#else
# ifndef _X509_STORE_CTX_cleanup
#  define _X509_STORE_CTX_cleanup OPENSSL_MANGLER_ASM(X509_STORE_CTX_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_free
#  define X509_STORE_CTX_free OPENSSL_MANGLER(X509_STORE_CTX_free)
# endif
#else
# ifndef _X509_STORE_CTX_free
#  define _X509_STORE_CTX_free OPENSSL_MANGLER_ASM(X509_STORE_CTX_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get0_cert
#  define X509_STORE_CTX_get0_cert OPENSSL_MANGLER(X509_STORE_CTX_get0_cert)
# endif
#else
# ifndef _X509_STORE_CTX_get0_cert
#  define _X509_STORE_CTX_get0_cert OPENSSL_MANGLER_ASM(X509_STORE_CTX_get0_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get0_chain
#  define X509_STORE_CTX_get0_chain OPENSSL_MANGLER(X509_STORE_CTX_get0_chain)
# endif
#else
# ifndef _X509_STORE_CTX_get0_chain
#  define _X509_STORE_CTX_get0_chain OPENSSL_MANGLER_ASM(X509_STORE_CTX_get0_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get0_current_crl
#  define X509_STORE_CTX_get0_current_crl OPENSSL_MANGLER(X509_STORE_CTX_get0_current_crl)
# endif
#else
# ifndef _X509_STORE_CTX_get0_current_crl
#  define _X509_STORE_CTX_get0_current_crl OPENSSL_MANGLER_ASM(X509_STORE_CTX_get0_current_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get0_current_issuer
#  define X509_STORE_CTX_get0_current_issuer OPENSSL_MANGLER(X509_STORE_CTX_get0_current_issuer)
# endif
#else
# ifndef _X509_STORE_CTX_get0_current_issuer
#  define _X509_STORE_CTX_get0_current_issuer OPENSSL_MANGLER_ASM(X509_STORE_CTX_get0_current_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get0_param
#  define X509_STORE_CTX_get0_param OPENSSL_MANGLER(X509_STORE_CTX_get0_param)
# endif
#else
# ifndef _X509_STORE_CTX_get0_param
#  define _X509_STORE_CTX_get0_param OPENSSL_MANGLER_ASM(X509_STORE_CTX_get0_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get0_parent_ctx
#  define X509_STORE_CTX_get0_parent_ctx OPENSSL_MANGLER(X509_STORE_CTX_get0_parent_ctx)
# endif
#else
# ifndef _X509_STORE_CTX_get0_parent_ctx
#  define _X509_STORE_CTX_get0_parent_ctx OPENSSL_MANGLER_ASM(X509_STORE_CTX_get0_parent_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get0_policy_tree
#  define X509_STORE_CTX_get0_policy_tree OPENSSL_MANGLER(X509_STORE_CTX_get0_policy_tree)
# endif
#else
# ifndef _X509_STORE_CTX_get0_policy_tree
#  define _X509_STORE_CTX_get0_policy_tree OPENSSL_MANGLER_ASM(X509_STORE_CTX_get0_policy_tree)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get0_store
#  define X509_STORE_CTX_get0_store OPENSSL_MANGLER(X509_STORE_CTX_get0_store)
# endif
#else
# ifndef _X509_STORE_CTX_get0_store
#  define _X509_STORE_CTX_get0_store OPENSSL_MANGLER_ASM(X509_STORE_CTX_get0_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get0_untrusted
#  define X509_STORE_CTX_get0_untrusted OPENSSL_MANGLER(X509_STORE_CTX_get0_untrusted)
# endif
#else
# ifndef _X509_STORE_CTX_get0_untrusted
#  define _X509_STORE_CTX_get0_untrusted OPENSSL_MANGLER_ASM(X509_STORE_CTX_get0_untrusted)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get1_certs
#  define X509_STORE_CTX_get1_certs OPENSSL_MANGLER(X509_STORE_CTX_get1_certs)
# endif
#else
# ifndef _X509_STORE_CTX_get1_certs
#  define _X509_STORE_CTX_get1_certs OPENSSL_MANGLER_ASM(X509_STORE_CTX_get1_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get1_chain
#  define X509_STORE_CTX_get1_chain OPENSSL_MANGLER(X509_STORE_CTX_get1_chain)
# endif
#else
# ifndef _X509_STORE_CTX_get1_chain
#  define _X509_STORE_CTX_get1_chain OPENSSL_MANGLER_ASM(X509_STORE_CTX_get1_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get1_crls
#  define X509_STORE_CTX_get1_crls OPENSSL_MANGLER(X509_STORE_CTX_get1_crls)
# endif
#else
# ifndef _X509_STORE_CTX_get1_crls
#  define _X509_STORE_CTX_get1_crls OPENSSL_MANGLER_ASM(X509_STORE_CTX_get1_crls)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get1_issuer
#  define X509_STORE_CTX_get1_issuer OPENSSL_MANGLER(X509_STORE_CTX_get1_issuer)
# endif
#else
# ifndef _X509_STORE_CTX_get1_issuer
#  define _X509_STORE_CTX_get1_issuer OPENSSL_MANGLER_ASM(X509_STORE_CTX_get1_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_by_subject
#  define X509_STORE_CTX_get_by_subject OPENSSL_MANGLER(X509_STORE_CTX_get_by_subject)
# endif
#else
# ifndef _X509_STORE_CTX_get_by_subject
#  define _X509_STORE_CTX_get_by_subject OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_by_subject)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_cert_crl
#  define X509_STORE_CTX_get_cert_crl OPENSSL_MANGLER(X509_STORE_CTX_get_cert_crl)
# endif
#else
# ifndef _X509_STORE_CTX_get_cert_crl
#  define _X509_STORE_CTX_get_cert_crl OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_cert_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_check_crl
#  define X509_STORE_CTX_get_check_crl OPENSSL_MANGLER(X509_STORE_CTX_get_check_crl)
# endif
#else
# ifndef _X509_STORE_CTX_get_check_crl
#  define _X509_STORE_CTX_get_check_crl OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_check_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_check_issued
#  define X509_STORE_CTX_get_check_issued OPENSSL_MANGLER(X509_STORE_CTX_get_check_issued)
# endif
#else
# ifndef _X509_STORE_CTX_get_check_issued
#  define _X509_STORE_CTX_get_check_issued OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_check_issued)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_check_policy
#  define X509_STORE_CTX_get_check_policy OPENSSL_MANGLER(X509_STORE_CTX_get_check_policy)
# endif
#else
# ifndef _X509_STORE_CTX_get_check_policy
#  define _X509_STORE_CTX_get_check_policy OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_check_policy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_check_revocation
#  define X509_STORE_CTX_get_check_revocation OPENSSL_MANGLER(X509_STORE_CTX_get_check_revocation)
# endif
#else
# ifndef _X509_STORE_CTX_get_check_revocation
#  define _X509_STORE_CTX_get_check_revocation OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_check_revocation)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_cleanup
#  define X509_STORE_CTX_get_cleanup OPENSSL_MANGLER(X509_STORE_CTX_get_cleanup)
# endif
#else
# ifndef _X509_STORE_CTX_get_cleanup
#  define _X509_STORE_CTX_get_cleanup OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_current_cert
#  define X509_STORE_CTX_get_current_cert OPENSSL_MANGLER(X509_STORE_CTX_get_current_cert)
# endif
#else
# ifndef _X509_STORE_CTX_get_current_cert
#  define _X509_STORE_CTX_get_current_cert OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_current_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_error
#  define X509_STORE_CTX_get_error OPENSSL_MANGLER(X509_STORE_CTX_get_error)
# endif
#else
# ifndef _X509_STORE_CTX_get_error
#  define _X509_STORE_CTX_get_error OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_error_depth
#  define X509_STORE_CTX_get_error_depth OPENSSL_MANGLER(X509_STORE_CTX_get_error_depth)
# endif
#else
# ifndef _X509_STORE_CTX_get_error_depth
#  define _X509_STORE_CTX_get_error_depth OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_error_depth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_ex_data
#  define X509_STORE_CTX_get_ex_data OPENSSL_MANGLER(X509_STORE_CTX_get_ex_data)
# endif
#else
# ifndef _X509_STORE_CTX_get_ex_data
#  define _X509_STORE_CTX_get_ex_data OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_explicit_policy
#  define X509_STORE_CTX_get_explicit_policy OPENSSL_MANGLER(X509_STORE_CTX_get_explicit_policy)
# endif
#else
# ifndef _X509_STORE_CTX_get_explicit_policy
#  define _X509_STORE_CTX_get_explicit_policy OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_explicit_policy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_get_crl
#  define X509_STORE_CTX_get_get_crl OPENSSL_MANGLER(X509_STORE_CTX_get_get_crl)
# endif
#else
# ifndef _X509_STORE_CTX_get_get_crl
#  define _X509_STORE_CTX_get_get_crl OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_get_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_get_issuer
#  define X509_STORE_CTX_get_get_issuer OPENSSL_MANGLER(X509_STORE_CTX_get_get_issuer)
# endif
#else
# ifndef _X509_STORE_CTX_get_get_issuer
#  define _X509_STORE_CTX_get_get_issuer OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_get_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_lookup_certs
#  define X509_STORE_CTX_get_lookup_certs OPENSSL_MANGLER(X509_STORE_CTX_get_lookup_certs)
# endif
#else
# ifndef _X509_STORE_CTX_get_lookup_certs
#  define _X509_STORE_CTX_get_lookup_certs OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_lookup_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_lookup_crls
#  define X509_STORE_CTX_get_lookup_crls OPENSSL_MANGLER(X509_STORE_CTX_get_lookup_crls)
# endif
#else
# ifndef _X509_STORE_CTX_get_lookup_crls
#  define _X509_STORE_CTX_get_lookup_crls OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_lookup_crls)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_num_untrusted
#  define X509_STORE_CTX_get_num_untrusted OPENSSL_MANGLER(X509_STORE_CTX_get_num_untrusted)
# endif
#else
# ifndef _X509_STORE_CTX_get_num_untrusted
#  define _X509_STORE_CTX_get_num_untrusted OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_num_untrusted)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_obj_by_subject
#  define X509_STORE_CTX_get_obj_by_subject OPENSSL_MANGLER(X509_STORE_CTX_get_obj_by_subject)
# endif
#else
# ifndef _X509_STORE_CTX_get_obj_by_subject
#  define _X509_STORE_CTX_get_obj_by_subject OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_obj_by_subject)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_verify
#  define X509_STORE_CTX_get_verify OPENSSL_MANGLER(X509_STORE_CTX_get_verify)
# endif
#else
# ifndef _X509_STORE_CTX_get_verify
#  define _X509_STORE_CTX_get_verify OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_get_verify_cb
#  define X509_STORE_CTX_get_verify_cb OPENSSL_MANGLER(X509_STORE_CTX_get_verify_cb)
# endif
#else
# ifndef _X509_STORE_CTX_get_verify_cb
#  define _X509_STORE_CTX_get_verify_cb OPENSSL_MANGLER_ASM(X509_STORE_CTX_get_verify_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_init
#  define X509_STORE_CTX_init OPENSSL_MANGLER(X509_STORE_CTX_init)
# endif
#else
# ifndef _X509_STORE_CTX_init
#  define _X509_STORE_CTX_init OPENSSL_MANGLER_ASM(X509_STORE_CTX_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_new
#  define X509_STORE_CTX_new OPENSSL_MANGLER(X509_STORE_CTX_new)
# endif
#else
# ifndef _X509_STORE_CTX_new
#  define _X509_STORE_CTX_new OPENSSL_MANGLER_ASM(X509_STORE_CTX_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_new_ex
#  define X509_STORE_CTX_new_ex OPENSSL_MANGLER(X509_STORE_CTX_new_ex)
# endif
#else
# ifndef _X509_STORE_CTX_new_ex
#  define _X509_STORE_CTX_new_ex OPENSSL_MANGLER_ASM(X509_STORE_CTX_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_print_verify_cb
#  define X509_STORE_CTX_print_verify_cb OPENSSL_MANGLER(X509_STORE_CTX_print_verify_cb)
# endif
#else
# ifndef _X509_STORE_CTX_print_verify_cb
#  define _X509_STORE_CTX_print_verify_cb OPENSSL_MANGLER_ASM(X509_STORE_CTX_print_verify_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_purpose_inherit
#  define X509_STORE_CTX_purpose_inherit OPENSSL_MANGLER(X509_STORE_CTX_purpose_inherit)
# endif
#else
# ifndef _X509_STORE_CTX_purpose_inherit
#  define _X509_STORE_CTX_purpose_inherit OPENSSL_MANGLER_ASM(X509_STORE_CTX_purpose_inherit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set0_crls
#  define X509_STORE_CTX_set0_crls OPENSSL_MANGLER(X509_STORE_CTX_set0_crls)
# endif
#else
# ifndef _X509_STORE_CTX_set0_crls
#  define _X509_STORE_CTX_set0_crls OPENSSL_MANGLER_ASM(X509_STORE_CTX_set0_crls)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set0_dane
#  define X509_STORE_CTX_set0_dane OPENSSL_MANGLER(X509_STORE_CTX_set0_dane)
# endif
#else
# ifndef _X509_STORE_CTX_set0_dane
#  define _X509_STORE_CTX_set0_dane OPENSSL_MANGLER_ASM(X509_STORE_CTX_set0_dane)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set0_param
#  define X509_STORE_CTX_set0_param OPENSSL_MANGLER(X509_STORE_CTX_set0_param)
# endif
#else
# ifndef _X509_STORE_CTX_set0_param
#  define _X509_STORE_CTX_set0_param OPENSSL_MANGLER_ASM(X509_STORE_CTX_set0_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set0_trusted_stack
#  define X509_STORE_CTX_set0_trusted_stack OPENSSL_MANGLER(X509_STORE_CTX_set0_trusted_stack)
# endif
#else
# ifndef _X509_STORE_CTX_set0_trusted_stack
#  define _X509_STORE_CTX_set0_trusted_stack OPENSSL_MANGLER_ASM(X509_STORE_CTX_set0_trusted_stack)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set0_untrusted
#  define X509_STORE_CTX_set0_untrusted OPENSSL_MANGLER(X509_STORE_CTX_set0_untrusted)
# endif
#else
# ifndef _X509_STORE_CTX_set0_untrusted
#  define _X509_STORE_CTX_set0_untrusted OPENSSL_MANGLER_ASM(X509_STORE_CTX_set0_untrusted)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set0_verified_chain
#  define X509_STORE_CTX_set0_verified_chain OPENSSL_MANGLER(X509_STORE_CTX_set0_verified_chain)
# endif
#else
# ifndef _X509_STORE_CTX_set0_verified_chain
#  define _X509_STORE_CTX_set0_verified_chain OPENSSL_MANGLER_ASM(X509_STORE_CTX_set0_verified_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_cert
#  define X509_STORE_CTX_set_cert OPENSSL_MANGLER(X509_STORE_CTX_set_cert)
# endif
#else
# ifndef _X509_STORE_CTX_set_cert
#  define _X509_STORE_CTX_set_cert OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_current_cert
#  define X509_STORE_CTX_set_current_cert OPENSSL_MANGLER(X509_STORE_CTX_set_current_cert)
# endif
#else
# ifndef _X509_STORE_CTX_set_current_cert
#  define _X509_STORE_CTX_set_current_cert OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_current_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_default
#  define X509_STORE_CTX_set_default OPENSSL_MANGLER(X509_STORE_CTX_set_default)
# endif
#else
# ifndef _X509_STORE_CTX_set_default
#  define _X509_STORE_CTX_set_default OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_default)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_depth
#  define X509_STORE_CTX_set_depth OPENSSL_MANGLER(X509_STORE_CTX_set_depth)
# endif
#else
# ifndef _X509_STORE_CTX_set_depth
#  define _X509_STORE_CTX_set_depth OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_depth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_error
#  define X509_STORE_CTX_set_error OPENSSL_MANGLER(X509_STORE_CTX_set_error)
# endif
#else
# ifndef _X509_STORE_CTX_set_error
#  define _X509_STORE_CTX_set_error OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_error_depth
#  define X509_STORE_CTX_set_error_depth OPENSSL_MANGLER(X509_STORE_CTX_set_error_depth)
# endif
#else
# ifndef _X509_STORE_CTX_set_error_depth
#  define _X509_STORE_CTX_set_error_depth OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_error_depth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_ex_data
#  define X509_STORE_CTX_set_ex_data OPENSSL_MANGLER(X509_STORE_CTX_set_ex_data)
# endif
#else
# ifndef _X509_STORE_CTX_set_ex_data
#  define _X509_STORE_CTX_set_ex_data OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_flags
#  define X509_STORE_CTX_set_flags OPENSSL_MANGLER(X509_STORE_CTX_set_flags)
# endif
#else
# ifndef _X509_STORE_CTX_set_flags
#  define _X509_STORE_CTX_set_flags OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_purpose
#  define X509_STORE_CTX_set_purpose OPENSSL_MANGLER(X509_STORE_CTX_set_purpose)
# endif
#else
# ifndef _X509_STORE_CTX_set_purpose
#  define _X509_STORE_CTX_set_purpose OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_purpose)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_time
#  define X509_STORE_CTX_set_time OPENSSL_MANGLER(X509_STORE_CTX_set_time)
# endif
#else
# ifndef _X509_STORE_CTX_set_time
#  define _X509_STORE_CTX_set_time OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_trust
#  define X509_STORE_CTX_set_trust OPENSSL_MANGLER(X509_STORE_CTX_set_trust)
# endif
#else
# ifndef _X509_STORE_CTX_set_trust
#  define _X509_STORE_CTX_set_trust OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_trust)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_verify
#  define X509_STORE_CTX_set_verify OPENSSL_MANGLER(X509_STORE_CTX_set_verify)
# endif
#else
# ifndef _X509_STORE_CTX_set_verify
#  define _X509_STORE_CTX_set_verify OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_set_verify_cb
#  define X509_STORE_CTX_set_verify_cb OPENSSL_MANGLER(X509_STORE_CTX_set_verify_cb)
# endif
#else
# ifndef _X509_STORE_CTX_set_verify_cb
#  define _X509_STORE_CTX_set_verify_cb OPENSSL_MANGLER_ASM(X509_STORE_CTX_set_verify_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_CTX_verify
#  define X509_STORE_CTX_verify OPENSSL_MANGLER(X509_STORE_CTX_verify)
# endif
#else
# ifndef _X509_STORE_CTX_verify
#  define _X509_STORE_CTX_verify OPENSSL_MANGLER_ASM(X509_STORE_CTX_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_add_cert
#  define X509_STORE_add_cert OPENSSL_MANGLER(X509_STORE_add_cert)
# endif
#else
# ifndef _X509_STORE_add_cert
#  define _X509_STORE_add_cert OPENSSL_MANGLER_ASM(X509_STORE_add_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_add_crl
#  define X509_STORE_add_crl OPENSSL_MANGLER(X509_STORE_add_crl)
# endif
#else
# ifndef _X509_STORE_add_crl
#  define _X509_STORE_add_crl OPENSSL_MANGLER_ASM(X509_STORE_add_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_add_lookup
#  define X509_STORE_add_lookup OPENSSL_MANGLER(X509_STORE_add_lookup)
# endif
#else
# ifndef _X509_STORE_add_lookup
#  define _X509_STORE_add_lookup OPENSSL_MANGLER_ASM(X509_STORE_add_lookup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_free
#  define X509_STORE_free OPENSSL_MANGLER(X509_STORE_free)
# endif
#else
# ifndef _X509_STORE_free
#  define _X509_STORE_free OPENSSL_MANGLER_ASM(X509_STORE_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get0_objects
#  define X509_STORE_get0_objects OPENSSL_MANGLER(X509_STORE_get0_objects)
# endif
#else
# ifndef _X509_STORE_get0_objects
#  define _X509_STORE_get0_objects OPENSSL_MANGLER_ASM(X509_STORE_get0_objects)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get0_param
#  define X509_STORE_get0_param OPENSSL_MANGLER(X509_STORE_get0_param)
# endif
#else
# ifndef _X509_STORE_get0_param
#  define _X509_STORE_get0_param OPENSSL_MANGLER_ASM(X509_STORE_get0_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get1_all_certs
#  define X509_STORE_get1_all_certs OPENSSL_MANGLER(X509_STORE_get1_all_certs)
# endif
#else
# ifndef _X509_STORE_get1_all_certs
#  define _X509_STORE_get1_all_certs OPENSSL_MANGLER_ASM(X509_STORE_get1_all_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_cert_crl
#  define X509_STORE_get_cert_crl OPENSSL_MANGLER(X509_STORE_get_cert_crl)
# endif
#else
# ifndef _X509_STORE_get_cert_crl
#  define _X509_STORE_get_cert_crl OPENSSL_MANGLER_ASM(X509_STORE_get_cert_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_check_crl
#  define X509_STORE_get_check_crl OPENSSL_MANGLER(X509_STORE_get_check_crl)
# endif
#else
# ifndef _X509_STORE_get_check_crl
#  define _X509_STORE_get_check_crl OPENSSL_MANGLER_ASM(X509_STORE_get_check_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_check_issued
#  define X509_STORE_get_check_issued OPENSSL_MANGLER(X509_STORE_get_check_issued)
# endif
#else
# ifndef _X509_STORE_get_check_issued
#  define _X509_STORE_get_check_issued OPENSSL_MANGLER_ASM(X509_STORE_get_check_issued)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_check_policy
#  define X509_STORE_get_check_policy OPENSSL_MANGLER(X509_STORE_get_check_policy)
# endif
#else
# ifndef _X509_STORE_get_check_policy
#  define _X509_STORE_get_check_policy OPENSSL_MANGLER_ASM(X509_STORE_get_check_policy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_check_revocation
#  define X509_STORE_get_check_revocation OPENSSL_MANGLER(X509_STORE_get_check_revocation)
# endif
#else
# ifndef _X509_STORE_get_check_revocation
#  define _X509_STORE_get_check_revocation OPENSSL_MANGLER_ASM(X509_STORE_get_check_revocation)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_cleanup
#  define X509_STORE_get_cleanup OPENSSL_MANGLER(X509_STORE_get_cleanup)
# endif
#else
# ifndef _X509_STORE_get_cleanup
#  define _X509_STORE_get_cleanup OPENSSL_MANGLER_ASM(X509_STORE_get_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_ex_data
#  define X509_STORE_get_ex_data OPENSSL_MANGLER(X509_STORE_get_ex_data)
# endif
#else
# ifndef _X509_STORE_get_ex_data
#  define _X509_STORE_get_ex_data OPENSSL_MANGLER_ASM(X509_STORE_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_get_crl
#  define X509_STORE_get_get_crl OPENSSL_MANGLER(X509_STORE_get_get_crl)
# endif
#else
# ifndef _X509_STORE_get_get_crl
#  define _X509_STORE_get_get_crl OPENSSL_MANGLER_ASM(X509_STORE_get_get_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_get_issuer
#  define X509_STORE_get_get_issuer OPENSSL_MANGLER(X509_STORE_get_get_issuer)
# endif
#else
# ifndef _X509_STORE_get_get_issuer
#  define _X509_STORE_get_get_issuer OPENSSL_MANGLER_ASM(X509_STORE_get_get_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_lookup_certs
#  define X509_STORE_get_lookup_certs OPENSSL_MANGLER(X509_STORE_get_lookup_certs)
# endif
#else
# ifndef _X509_STORE_get_lookup_certs
#  define _X509_STORE_get_lookup_certs OPENSSL_MANGLER_ASM(X509_STORE_get_lookup_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_lookup_crls
#  define X509_STORE_get_lookup_crls OPENSSL_MANGLER(X509_STORE_get_lookup_crls)
# endif
#else
# ifndef _X509_STORE_get_lookup_crls
#  define _X509_STORE_get_lookup_crls OPENSSL_MANGLER_ASM(X509_STORE_get_lookup_crls)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_verify
#  define X509_STORE_get_verify OPENSSL_MANGLER(X509_STORE_get_verify)
# endif
#else
# ifndef _X509_STORE_get_verify
#  define _X509_STORE_get_verify OPENSSL_MANGLER_ASM(X509_STORE_get_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_get_verify_cb
#  define X509_STORE_get_verify_cb OPENSSL_MANGLER(X509_STORE_get_verify_cb)
# endif
#else
# ifndef _X509_STORE_get_verify_cb
#  define _X509_STORE_get_verify_cb OPENSSL_MANGLER_ASM(X509_STORE_get_verify_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_load_file
#  define X509_STORE_load_file OPENSSL_MANGLER(X509_STORE_load_file)
# endif
#else
# ifndef _X509_STORE_load_file
#  define _X509_STORE_load_file OPENSSL_MANGLER_ASM(X509_STORE_load_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_load_file_ex
#  define X509_STORE_load_file_ex OPENSSL_MANGLER(X509_STORE_load_file_ex)
# endif
#else
# ifndef _X509_STORE_load_file_ex
#  define _X509_STORE_load_file_ex OPENSSL_MANGLER_ASM(X509_STORE_load_file_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_load_locations
#  define X509_STORE_load_locations OPENSSL_MANGLER(X509_STORE_load_locations)
# endif
#else
# ifndef _X509_STORE_load_locations
#  define _X509_STORE_load_locations OPENSSL_MANGLER_ASM(X509_STORE_load_locations)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_load_locations_ex
#  define X509_STORE_load_locations_ex OPENSSL_MANGLER(X509_STORE_load_locations_ex)
# endif
#else
# ifndef _X509_STORE_load_locations_ex
#  define _X509_STORE_load_locations_ex OPENSSL_MANGLER_ASM(X509_STORE_load_locations_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_load_path
#  define X509_STORE_load_path OPENSSL_MANGLER(X509_STORE_load_path)
# endif
#else
# ifndef _X509_STORE_load_path
#  define _X509_STORE_load_path OPENSSL_MANGLER_ASM(X509_STORE_load_path)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_load_store
#  define X509_STORE_load_store OPENSSL_MANGLER(X509_STORE_load_store)
# endif
#else
# ifndef _X509_STORE_load_store
#  define _X509_STORE_load_store OPENSSL_MANGLER_ASM(X509_STORE_load_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_load_store_ex
#  define X509_STORE_load_store_ex OPENSSL_MANGLER(X509_STORE_load_store_ex)
# endif
#else
# ifndef _X509_STORE_load_store_ex
#  define _X509_STORE_load_store_ex OPENSSL_MANGLER_ASM(X509_STORE_load_store_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_lock
#  define X509_STORE_lock OPENSSL_MANGLER(X509_STORE_lock)
# endif
#else
# ifndef _X509_STORE_lock
#  define _X509_STORE_lock OPENSSL_MANGLER_ASM(X509_STORE_lock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_new
#  define X509_STORE_new OPENSSL_MANGLER(X509_STORE_new)
# endif
#else
# ifndef _X509_STORE_new
#  define _X509_STORE_new OPENSSL_MANGLER_ASM(X509_STORE_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set1_param
#  define X509_STORE_set1_param OPENSSL_MANGLER(X509_STORE_set1_param)
# endif
#else
# ifndef _X509_STORE_set1_param
#  define _X509_STORE_set1_param OPENSSL_MANGLER_ASM(X509_STORE_set1_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_cert_crl
#  define X509_STORE_set_cert_crl OPENSSL_MANGLER(X509_STORE_set_cert_crl)
# endif
#else
# ifndef _X509_STORE_set_cert_crl
#  define _X509_STORE_set_cert_crl OPENSSL_MANGLER_ASM(X509_STORE_set_cert_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_check_crl
#  define X509_STORE_set_check_crl OPENSSL_MANGLER(X509_STORE_set_check_crl)
# endif
#else
# ifndef _X509_STORE_set_check_crl
#  define _X509_STORE_set_check_crl OPENSSL_MANGLER_ASM(X509_STORE_set_check_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_check_issued
#  define X509_STORE_set_check_issued OPENSSL_MANGLER(X509_STORE_set_check_issued)
# endif
#else
# ifndef _X509_STORE_set_check_issued
#  define _X509_STORE_set_check_issued OPENSSL_MANGLER_ASM(X509_STORE_set_check_issued)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_check_policy
#  define X509_STORE_set_check_policy OPENSSL_MANGLER(X509_STORE_set_check_policy)
# endif
#else
# ifndef _X509_STORE_set_check_policy
#  define _X509_STORE_set_check_policy OPENSSL_MANGLER_ASM(X509_STORE_set_check_policy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_check_revocation
#  define X509_STORE_set_check_revocation OPENSSL_MANGLER(X509_STORE_set_check_revocation)
# endif
#else
# ifndef _X509_STORE_set_check_revocation
#  define _X509_STORE_set_check_revocation OPENSSL_MANGLER_ASM(X509_STORE_set_check_revocation)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_cleanup
#  define X509_STORE_set_cleanup OPENSSL_MANGLER(X509_STORE_set_cleanup)
# endif
#else
# ifndef _X509_STORE_set_cleanup
#  define _X509_STORE_set_cleanup OPENSSL_MANGLER_ASM(X509_STORE_set_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_default_paths
#  define X509_STORE_set_default_paths OPENSSL_MANGLER(X509_STORE_set_default_paths)
# endif
#else
# ifndef _X509_STORE_set_default_paths
#  define _X509_STORE_set_default_paths OPENSSL_MANGLER_ASM(X509_STORE_set_default_paths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_default_paths_ex
#  define X509_STORE_set_default_paths_ex OPENSSL_MANGLER(X509_STORE_set_default_paths_ex)
# endif
#else
# ifndef _X509_STORE_set_default_paths_ex
#  define _X509_STORE_set_default_paths_ex OPENSSL_MANGLER_ASM(X509_STORE_set_default_paths_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_depth
#  define X509_STORE_set_depth OPENSSL_MANGLER(X509_STORE_set_depth)
# endif
#else
# ifndef _X509_STORE_set_depth
#  define _X509_STORE_set_depth OPENSSL_MANGLER_ASM(X509_STORE_set_depth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_ex_data
#  define X509_STORE_set_ex_data OPENSSL_MANGLER(X509_STORE_set_ex_data)
# endif
#else
# ifndef _X509_STORE_set_ex_data
#  define _X509_STORE_set_ex_data OPENSSL_MANGLER_ASM(X509_STORE_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_flags
#  define X509_STORE_set_flags OPENSSL_MANGLER(X509_STORE_set_flags)
# endif
#else
# ifndef _X509_STORE_set_flags
#  define _X509_STORE_set_flags OPENSSL_MANGLER_ASM(X509_STORE_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_get_crl
#  define X509_STORE_set_get_crl OPENSSL_MANGLER(X509_STORE_set_get_crl)
# endif
#else
# ifndef _X509_STORE_set_get_crl
#  define _X509_STORE_set_get_crl OPENSSL_MANGLER_ASM(X509_STORE_set_get_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_get_issuer
#  define X509_STORE_set_get_issuer OPENSSL_MANGLER(X509_STORE_set_get_issuer)
# endif
#else
# ifndef _X509_STORE_set_get_issuer
#  define _X509_STORE_set_get_issuer OPENSSL_MANGLER_ASM(X509_STORE_set_get_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_lookup_certs
#  define X509_STORE_set_lookup_certs OPENSSL_MANGLER(X509_STORE_set_lookup_certs)
# endif
#else
# ifndef _X509_STORE_set_lookup_certs
#  define _X509_STORE_set_lookup_certs OPENSSL_MANGLER_ASM(X509_STORE_set_lookup_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_lookup_crls
#  define X509_STORE_set_lookup_crls OPENSSL_MANGLER(X509_STORE_set_lookup_crls)
# endif
#else
# ifndef _X509_STORE_set_lookup_crls
#  define _X509_STORE_set_lookup_crls OPENSSL_MANGLER_ASM(X509_STORE_set_lookup_crls)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_purpose
#  define X509_STORE_set_purpose OPENSSL_MANGLER(X509_STORE_set_purpose)
# endif
#else
# ifndef _X509_STORE_set_purpose
#  define _X509_STORE_set_purpose OPENSSL_MANGLER_ASM(X509_STORE_set_purpose)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_trust
#  define X509_STORE_set_trust OPENSSL_MANGLER(X509_STORE_set_trust)
# endif
#else
# ifndef _X509_STORE_set_trust
#  define _X509_STORE_set_trust OPENSSL_MANGLER_ASM(X509_STORE_set_trust)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_verify
#  define X509_STORE_set_verify OPENSSL_MANGLER(X509_STORE_set_verify)
# endif
#else
# ifndef _X509_STORE_set_verify
#  define _X509_STORE_set_verify OPENSSL_MANGLER_ASM(X509_STORE_set_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_set_verify_cb
#  define X509_STORE_set_verify_cb OPENSSL_MANGLER(X509_STORE_set_verify_cb)
# endif
#else
# ifndef _X509_STORE_set_verify_cb
#  define _X509_STORE_set_verify_cb OPENSSL_MANGLER_ASM(X509_STORE_set_verify_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_unlock
#  define X509_STORE_unlock OPENSSL_MANGLER(X509_STORE_unlock)
# endif
#else
# ifndef _X509_STORE_unlock
#  define _X509_STORE_unlock OPENSSL_MANGLER_ASM(X509_STORE_unlock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_STORE_up_ref
#  define X509_STORE_up_ref OPENSSL_MANGLER(X509_STORE_up_ref)
# endif
#else
# ifndef _X509_STORE_up_ref
#  define _X509_STORE_up_ref OPENSSL_MANGLER_ASM(X509_STORE_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_TRUST_add
#  define X509_TRUST_add OPENSSL_MANGLER(X509_TRUST_add)
# endif
#else
# ifndef _X509_TRUST_add
#  define _X509_TRUST_add OPENSSL_MANGLER_ASM(X509_TRUST_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_TRUST_cleanup
#  define X509_TRUST_cleanup OPENSSL_MANGLER(X509_TRUST_cleanup)
# endif
#else
# ifndef _X509_TRUST_cleanup
#  define _X509_TRUST_cleanup OPENSSL_MANGLER_ASM(X509_TRUST_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_TRUST_get0
#  define X509_TRUST_get0 OPENSSL_MANGLER(X509_TRUST_get0)
# endif
#else
# ifndef _X509_TRUST_get0
#  define _X509_TRUST_get0 OPENSSL_MANGLER_ASM(X509_TRUST_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_TRUST_get0_name
#  define X509_TRUST_get0_name OPENSSL_MANGLER(X509_TRUST_get0_name)
# endif
#else
# ifndef _X509_TRUST_get0_name
#  define _X509_TRUST_get0_name OPENSSL_MANGLER_ASM(X509_TRUST_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_TRUST_get_by_id
#  define X509_TRUST_get_by_id OPENSSL_MANGLER(X509_TRUST_get_by_id)
# endif
#else
# ifndef _X509_TRUST_get_by_id
#  define _X509_TRUST_get_by_id OPENSSL_MANGLER_ASM(X509_TRUST_get_by_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_TRUST_get_count
#  define X509_TRUST_get_count OPENSSL_MANGLER(X509_TRUST_get_count)
# endif
#else
# ifndef _X509_TRUST_get_count
#  define _X509_TRUST_get_count OPENSSL_MANGLER_ASM(X509_TRUST_get_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_TRUST_get_flags
#  define X509_TRUST_get_flags OPENSSL_MANGLER(X509_TRUST_get_flags)
# endif
#else
# ifndef _X509_TRUST_get_flags
#  define _X509_TRUST_get_flags OPENSSL_MANGLER_ASM(X509_TRUST_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_TRUST_get_trust
#  define X509_TRUST_get_trust OPENSSL_MANGLER(X509_TRUST_get_trust)
# endif
#else
# ifndef _X509_TRUST_get_trust
#  define _X509_TRUST_get_trust OPENSSL_MANGLER_ASM(X509_TRUST_get_trust)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_TRUST_set
#  define X509_TRUST_set OPENSSL_MANGLER(X509_TRUST_set)
# endif
#else
# ifndef _X509_TRUST_set
#  define _X509_TRUST_set OPENSSL_MANGLER_ASM(X509_TRUST_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_TRUST_set_default
#  define X509_TRUST_set_default OPENSSL_MANGLER(X509_TRUST_set_default)
# endif
#else
# ifndef _X509_TRUST_set_default
#  define _X509_TRUST_set_default OPENSSL_MANGLER_ASM(X509_TRUST_set_default)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VAL_free
#  define X509_VAL_free OPENSSL_MANGLER(X509_VAL_free)
# endif
#else
# ifndef _X509_VAL_free
#  define _X509_VAL_free OPENSSL_MANGLER_ASM(X509_VAL_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VAL_it
#  define X509_VAL_it OPENSSL_MANGLER(X509_VAL_it)
# endif
#else
# ifndef _X509_VAL_it
#  define _X509_VAL_it OPENSSL_MANGLER_ASM(X509_VAL_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VAL_new
#  define X509_VAL_new OPENSSL_MANGLER(X509_VAL_new)
# endif
#else
# ifndef _X509_VAL_new
#  define _X509_VAL_new OPENSSL_MANGLER_ASM(X509_VAL_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_add0_policy
#  define X509_VERIFY_PARAM_add0_policy OPENSSL_MANGLER(X509_VERIFY_PARAM_add0_policy)
# endif
#else
# ifndef _X509_VERIFY_PARAM_add0_policy
#  define _X509_VERIFY_PARAM_add0_policy OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_add0_policy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_add0_table
#  define X509_VERIFY_PARAM_add0_table OPENSSL_MANGLER(X509_VERIFY_PARAM_add0_table)
# endif
#else
# ifndef _X509_VERIFY_PARAM_add0_table
#  define _X509_VERIFY_PARAM_add0_table OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_add0_table)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_add1_host
#  define X509_VERIFY_PARAM_add1_host OPENSSL_MANGLER(X509_VERIFY_PARAM_add1_host)
# endif
#else
# ifndef _X509_VERIFY_PARAM_add1_host
#  define _X509_VERIFY_PARAM_add1_host OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_add1_host)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_clear_flags
#  define X509_VERIFY_PARAM_clear_flags OPENSSL_MANGLER(X509_VERIFY_PARAM_clear_flags)
# endif
#else
# ifndef _X509_VERIFY_PARAM_clear_flags
#  define _X509_VERIFY_PARAM_clear_flags OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_clear_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_free
#  define X509_VERIFY_PARAM_free OPENSSL_MANGLER(X509_VERIFY_PARAM_free)
# endif
#else
# ifndef _X509_VERIFY_PARAM_free
#  define _X509_VERIFY_PARAM_free OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get0
#  define X509_VERIFY_PARAM_get0 OPENSSL_MANGLER(X509_VERIFY_PARAM_get0)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get0
#  define _X509_VERIFY_PARAM_get0 OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get0_email
#  define X509_VERIFY_PARAM_get0_email OPENSSL_MANGLER(X509_VERIFY_PARAM_get0_email)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get0_email
#  define _X509_VERIFY_PARAM_get0_email OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get0_email)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get0_host
#  define X509_VERIFY_PARAM_get0_host OPENSSL_MANGLER(X509_VERIFY_PARAM_get0_host)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get0_host
#  define _X509_VERIFY_PARAM_get0_host OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get0_host)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get0_name
#  define X509_VERIFY_PARAM_get0_name OPENSSL_MANGLER(X509_VERIFY_PARAM_get0_name)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get0_name
#  define _X509_VERIFY_PARAM_get0_name OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get0_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get0_peername
#  define X509_VERIFY_PARAM_get0_peername OPENSSL_MANGLER(X509_VERIFY_PARAM_get0_peername)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get0_peername
#  define _X509_VERIFY_PARAM_get0_peername OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get0_peername)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get1_ip_asc
#  define X509_VERIFY_PARAM_get1_ip_asc OPENSSL_MANGLER(X509_VERIFY_PARAM_get1_ip_asc)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get1_ip_asc
#  define _X509_VERIFY_PARAM_get1_ip_asc OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get1_ip_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get_auth_level
#  define X509_VERIFY_PARAM_get_auth_level OPENSSL_MANGLER(X509_VERIFY_PARAM_get_auth_level)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get_auth_level
#  define _X509_VERIFY_PARAM_get_auth_level OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get_auth_level)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get_count
#  define X509_VERIFY_PARAM_get_count OPENSSL_MANGLER(X509_VERIFY_PARAM_get_count)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get_count
#  define _X509_VERIFY_PARAM_get_count OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get_depth
#  define X509_VERIFY_PARAM_get_depth OPENSSL_MANGLER(X509_VERIFY_PARAM_get_depth)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get_depth
#  define _X509_VERIFY_PARAM_get_depth OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get_depth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get_flags
#  define X509_VERIFY_PARAM_get_flags OPENSSL_MANGLER(X509_VERIFY_PARAM_get_flags)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get_flags
#  define _X509_VERIFY_PARAM_get_flags OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get_hostflags
#  define X509_VERIFY_PARAM_get_hostflags OPENSSL_MANGLER(X509_VERIFY_PARAM_get_hostflags)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get_hostflags
#  define _X509_VERIFY_PARAM_get_hostflags OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get_hostflags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get_inh_flags
#  define X509_VERIFY_PARAM_get_inh_flags OPENSSL_MANGLER(X509_VERIFY_PARAM_get_inh_flags)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get_inh_flags
#  define _X509_VERIFY_PARAM_get_inh_flags OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get_inh_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_get_time
#  define X509_VERIFY_PARAM_get_time OPENSSL_MANGLER(X509_VERIFY_PARAM_get_time)
# endif
#else
# ifndef _X509_VERIFY_PARAM_get_time
#  define _X509_VERIFY_PARAM_get_time OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_get_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_inherit
#  define X509_VERIFY_PARAM_inherit OPENSSL_MANGLER(X509_VERIFY_PARAM_inherit)
# endif
#else
# ifndef _X509_VERIFY_PARAM_inherit
#  define _X509_VERIFY_PARAM_inherit OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_inherit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_lookup
#  define X509_VERIFY_PARAM_lookup OPENSSL_MANGLER(X509_VERIFY_PARAM_lookup)
# endif
#else
# ifndef _X509_VERIFY_PARAM_lookup
#  define _X509_VERIFY_PARAM_lookup OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_lookup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_move_peername
#  define X509_VERIFY_PARAM_move_peername OPENSSL_MANGLER(X509_VERIFY_PARAM_move_peername)
# endif
#else
# ifndef _X509_VERIFY_PARAM_move_peername
#  define _X509_VERIFY_PARAM_move_peername OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_move_peername)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_new
#  define X509_VERIFY_PARAM_new OPENSSL_MANGLER(X509_VERIFY_PARAM_new)
# endif
#else
# ifndef _X509_VERIFY_PARAM_new
#  define _X509_VERIFY_PARAM_new OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set1
#  define X509_VERIFY_PARAM_set1 OPENSSL_MANGLER(X509_VERIFY_PARAM_set1)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set1
#  define _X509_VERIFY_PARAM_set1 OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set1_email
#  define X509_VERIFY_PARAM_set1_email OPENSSL_MANGLER(X509_VERIFY_PARAM_set1_email)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set1_email
#  define _X509_VERIFY_PARAM_set1_email OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set1_email)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set1_host
#  define X509_VERIFY_PARAM_set1_host OPENSSL_MANGLER(X509_VERIFY_PARAM_set1_host)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set1_host
#  define _X509_VERIFY_PARAM_set1_host OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set1_host)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set1_ip
#  define X509_VERIFY_PARAM_set1_ip OPENSSL_MANGLER(X509_VERIFY_PARAM_set1_ip)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set1_ip
#  define _X509_VERIFY_PARAM_set1_ip OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set1_ip)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set1_ip_asc
#  define X509_VERIFY_PARAM_set1_ip_asc OPENSSL_MANGLER(X509_VERIFY_PARAM_set1_ip_asc)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set1_ip_asc
#  define _X509_VERIFY_PARAM_set1_ip_asc OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set1_ip_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set1_name
#  define X509_VERIFY_PARAM_set1_name OPENSSL_MANGLER(X509_VERIFY_PARAM_set1_name)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set1_name
#  define _X509_VERIFY_PARAM_set1_name OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set1_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set1_policies
#  define X509_VERIFY_PARAM_set1_policies OPENSSL_MANGLER(X509_VERIFY_PARAM_set1_policies)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set1_policies
#  define _X509_VERIFY_PARAM_set1_policies OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set1_policies)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set_auth_level
#  define X509_VERIFY_PARAM_set_auth_level OPENSSL_MANGLER(X509_VERIFY_PARAM_set_auth_level)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set_auth_level
#  define _X509_VERIFY_PARAM_set_auth_level OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set_auth_level)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set_depth
#  define X509_VERIFY_PARAM_set_depth OPENSSL_MANGLER(X509_VERIFY_PARAM_set_depth)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set_depth
#  define _X509_VERIFY_PARAM_set_depth OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set_depth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set_flags
#  define X509_VERIFY_PARAM_set_flags OPENSSL_MANGLER(X509_VERIFY_PARAM_set_flags)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set_flags
#  define _X509_VERIFY_PARAM_set_flags OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set_hostflags
#  define X509_VERIFY_PARAM_set_hostflags OPENSSL_MANGLER(X509_VERIFY_PARAM_set_hostflags)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set_hostflags
#  define _X509_VERIFY_PARAM_set_hostflags OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set_hostflags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set_inh_flags
#  define X509_VERIFY_PARAM_set_inh_flags OPENSSL_MANGLER(X509_VERIFY_PARAM_set_inh_flags)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set_inh_flags
#  define _X509_VERIFY_PARAM_set_inh_flags OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set_inh_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set_purpose
#  define X509_VERIFY_PARAM_set_purpose OPENSSL_MANGLER(X509_VERIFY_PARAM_set_purpose)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set_purpose
#  define _X509_VERIFY_PARAM_set_purpose OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set_purpose)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set_time
#  define X509_VERIFY_PARAM_set_time OPENSSL_MANGLER(X509_VERIFY_PARAM_set_time)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set_time
#  define _X509_VERIFY_PARAM_set_time OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_set_trust
#  define X509_VERIFY_PARAM_set_trust OPENSSL_MANGLER(X509_VERIFY_PARAM_set_trust)
# endif
#else
# ifndef _X509_VERIFY_PARAM_set_trust
#  define _X509_VERIFY_PARAM_set_trust OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_set_trust)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_VERIFY_PARAM_table_cleanup
#  define X509_VERIFY_PARAM_table_cleanup OPENSSL_MANGLER(X509_VERIFY_PARAM_table_cleanup)
# endif
#else
# ifndef _X509_VERIFY_PARAM_table_cleanup
#  define _X509_VERIFY_PARAM_table_cleanup OPENSSL_MANGLER_ASM(X509_VERIFY_PARAM_table_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_add1_ext_i2d
#  define X509_add1_ext_i2d OPENSSL_MANGLER(X509_add1_ext_i2d)
# endif
#else
# ifndef _X509_add1_ext_i2d
#  define _X509_add1_ext_i2d OPENSSL_MANGLER_ASM(X509_add1_ext_i2d)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_add1_reject_object
#  define X509_add1_reject_object OPENSSL_MANGLER(X509_add1_reject_object)
# endif
#else
# ifndef _X509_add1_reject_object
#  define _X509_add1_reject_object OPENSSL_MANGLER_ASM(X509_add1_reject_object)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_add1_trust_object
#  define X509_add1_trust_object OPENSSL_MANGLER(X509_add1_trust_object)
# endif
#else
# ifndef _X509_add1_trust_object
#  define _X509_add1_trust_object OPENSSL_MANGLER_ASM(X509_add1_trust_object)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_add_cert
#  define X509_add_cert OPENSSL_MANGLER(X509_add_cert)
# endif
#else
# ifndef _X509_add_cert
#  define _X509_add_cert OPENSSL_MANGLER_ASM(X509_add_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_add_certs
#  define X509_add_certs OPENSSL_MANGLER(X509_add_certs)
# endif
#else
# ifndef _X509_add_certs
#  define _X509_add_certs OPENSSL_MANGLER_ASM(X509_add_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_add_ext
#  define X509_add_ext OPENSSL_MANGLER(X509_add_ext)
# endif
#else
# ifndef _X509_add_ext
#  define _X509_add_ext OPENSSL_MANGLER_ASM(X509_add_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_alias_get0
#  define X509_alias_get0 OPENSSL_MANGLER(X509_alias_get0)
# endif
#else
# ifndef _X509_alias_get0
#  define _X509_alias_get0 OPENSSL_MANGLER_ASM(X509_alias_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_alias_set1
#  define X509_alias_set1 OPENSSL_MANGLER(X509_alias_set1)
# endif
#else
# ifndef _X509_alias_set1
#  define _X509_alias_set1 OPENSSL_MANGLER_ASM(X509_alias_set1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_aux_print
#  define X509_aux_print OPENSSL_MANGLER(X509_aux_print)
# endif
#else
# ifndef _X509_aux_print
#  define _X509_aux_print OPENSSL_MANGLER_ASM(X509_aux_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_build_chain
#  define X509_build_chain OPENSSL_MANGLER(X509_build_chain)
# endif
#else
# ifndef _X509_build_chain
#  define _X509_build_chain OPENSSL_MANGLER_ASM(X509_build_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_certificate_type
#  define X509_certificate_type OPENSSL_MANGLER(X509_certificate_type)
# endif
#else
# ifndef _X509_certificate_type
#  define _X509_certificate_type OPENSSL_MANGLER_ASM(X509_certificate_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_chain_check_suiteb
#  define X509_chain_check_suiteb OPENSSL_MANGLER(X509_chain_check_suiteb)
# endif
#else
# ifndef _X509_chain_check_suiteb
#  define _X509_chain_check_suiteb OPENSSL_MANGLER_ASM(X509_chain_check_suiteb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_chain_up_ref
#  define X509_chain_up_ref OPENSSL_MANGLER(X509_chain_up_ref)
# endif
#else
# ifndef _X509_chain_up_ref
#  define _X509_chain_up_ref OPENSSL_MANGLER_ASM(X509_chain_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_check_akid
#  define X509_check_akid OPENSSL_MANGLER(X509_check_akid)
# endif
#else
# ifndef _X509_check_akid
#  define _X509_check_akid OPENSSL_MANGLER_ASM(X509_check_akid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_check_ca
#  define X509_check_ca OPENSSL_MANGLER(X509_check_ca)
# endif
#else
# ifndef _X509_check_ca
#  define _X509_check_ca OPENSSL_MANGLER_ASM(X509_check_ca)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_check_email
#  define X509_check_email OPENSSL_MANGLER(X509_check_email)
# endif
#else
# ifndef _X509_check_email
#  define _X509_check_email OPENSSL_MANGLER_ASM(X509_check_email)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_check_host
#  define X509_check_host OPENSSL_MANGLER(X509_check_host)
# endif
#else
# ifndef _X509_check_host
#  define _X509_check_host OPENSSL_MANGLER_ASM(X509_check_host)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_check_ip
#  define X509_check_ip OPENSSL_MANGLER(X509_check_ip)
# endif
#else
# ifndef _X509_check_ip
#  define _X509_check_ip OPENSSL_MANGLER_ASM(X509_check_ip)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_check_ip_asc
#  define X509_check_ip_asc OPENSSL_MANGLER(X509_check_ip_asc)
# endif
#else
# ifndef _X509_check_ip_asc
#  define _X509_check_ip_asc OPENSSL_MANGLER_ASM(X509_check_ip_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_check_issued
#  define X509_check_issued OPENSSL_MANGLER(X509_check_issued)
# endif
#else
# ifndef _X509_check_issued
#  define _X509_check_issued OPENSSL_MANGLER_ASM(X509_check_issued)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_check_private_key
#  define X509_check_private_key OPENSSL_MANGLER(X509_check_private_key)
# endif
#else
# ifndef _X509_check_private_key
#  define _X509_check_private_key OPENSSL_MANGLER_ASM(X509_check_private_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_check_purpose
#  define X509_check_purpose OPENSSL_MANGLER(X509_check_purpose)
# endif
#else
# ifndef _X509_check_purpose
#  define _X509_check_purpose OPENSSL_MANGLER_ASM(X509_check_purpose)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_check_trust
#  define X509_check_trust OPENSSL_MANGLER(X509_check_trust)
# endif
#else
# ifndef _X509_check_trust
#  define _X509_check_trust OPENSSL_MANGLER_ASM(X509_check_trust)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_cmp
#  define X509_cmp OPENSSL_MANGLER(X509_cmp)
# endif
#else
# ifndef _X509_cmp
#  define _X509_cmp OPENSSL_MANGLER_ASM(X509_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_cmp_current_time
#  define X509_cmp_current_time OPENSSL_MANGLER(X509_cmp_current_time)
# endif
#else
# ifndef _X509_cmp_current_time
#  define _X509_cmp_current_time OPENSSL_MANGLER_ASM(X509_cmp_current_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_cmp_time
#  define X509_cmp_time OPENSSL_MANGLER(X509_cmp_time)
# endif
#else
# ifndef _X509_cmp_time
#  define _X509_cmp_time OPENSSL_MANGLER_ASM(X509_cmp_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_cmp_timeframe
#  define X509_cmp_timeframe OPENSSL_MANGLER(X509_cmp_timeframe)
# endif
#else
# ifndef _X509_cmp_timeframe
#  define _X509_cmp_timeframe OPENSSL_MANGLER_ASM(X509_cmp_timeframe)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_delete_ext
#  define X509_delete_ext OPENSSL_MANGLER(X509_delete_ext)
# endif
#else
# ifndef _X509_delete_ext
#  define _X509_delete_ext OPENSSL_MANGLER_ASM(X509_delete_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_digest
#  define X509_digest OPENSSL_MANGLER(X509_digest)
# endif
#else
# ifndef _X509_digest
#  define _X509_digest OPENSSL_MANGLER_ASM(X509_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_digest_sig
#  define X509_digest_sig OPENSSL_MANGLER(X509_digest_sig)
# endif
#else
# ifndef _X509_digest_sig
#  define _X509_digest_sig OPENSSL_MANGLER_ASM(X509_digest_sig)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_dup
#  define X509_dup OPENSSL_MANGLER(X509_dup)
# endif
#else
# ifndef _X509_dup
#  define _X509_dup OPENSSL_MANGLER_ASM(X509_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_email_free
#  define X509_email_free OPENSSL_MANGLER(X509_email_free)
# endif
#else
# ifndef _X509_email_free
#  define _X509_email_free OPENSSL_MANGLER_ASM(X509_email_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_find_by_issuer_and_serial
#  define X509_find_by_issuer_and_serial OPENSSL_MANGLER(X509_find_by_issuer_and_serial)
# endif
#else
# ifndef _X509_find_by_issuer_and_serial
#  define _X509_find_by_issuer_and_serial OPENSSL_MANGLER_ASM(X509_find_by_issuer_and_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_find_by_subject
#  define X509_find_by_subject OPENSSL_MANGLER(X509_find_by_subject)
# endif
#else
# ifndef _X509_find_by_subject
#  define _X509_find_by_subject OPENSSL_MANGLER_ASM(X509_find_by_subject)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_free
#  define X509_free OPENSSL_MANGLER(X509_free)
# endif
#else
# ifndef _X509_free
#  define _X509_free OPENSSL_MANGLER_ASM(X509_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_authority_issuer
#  define X509_get0_authority_issuer OPENSSL_MANGLER(X509_get0_authority_issuer)
# endif
#else
# ifndef _X509_get0_authority_issuer
#  define _X509_get0_authority_issuer OPENSSL_MANGLER_ASM(X509_get0_authority_issuer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_authority_key_id
#  define X509_get0_authority_key_id OPENSSL_MANGLER(X509_get0_authority_key_id)
# endif
#else
# ifndef _X509_get0_authority_key_id
#  define _X509_get0_authority_key_id OPENSSL_MANGLER_ASM(X509_get0_authority_key_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_authority_serial
#  define X509_get0_authority_serial OPENSSL_MANGLER(X509_get0_authority_serial)
# endif
#else
# ifndef _X509_get0_authority_serial
#  define _X509_get0_authority_serial OPENSSL_MANGLER_ASM(X509_get0_authority_serial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_distinguishing_id
#  define X509_get0_distinguishing_id OPENSSL_MANGLER(X509_get0_distinguishing_id)
# endif
#else
# ifndef _X509_get0_distinguishing_id
#  define _X509_get0_distinguishing_id OPENSSL_MANGLER_ASM(X509_get0_distinguishing_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_extensions
#  define X509_get0_extensions OPENSSL_MANGLER(X509_get0_extensions)
# endif
#else
# ifndef _X509_get0_extensions
#  define _X509_get0_extensions OPENSSL_MANGLER_ASM(X509_get0_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_notAfter
#  define X509_get0_notAfter OPENSSL_MANGLER(X509_get0_notAfter)
# endif
#else
# ifndef _X509_get0_notAfter
#  define _X509_get0_notAfter OPENSSL_MANGLER_ASM(X509_get0_notAfter)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_notBefore
#  define X509_get0_notBefore OPENSSL_MANGLER(X509_get0_notBefore)
# endif
#else
# ifndef _X509_get0_notBefore
#  define _X509_get0_notBefore OPENSSL_MANGLER_ASM(X509_get0_notBefore)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_pubkey
#  define X509_get0_pubkey OPENSSL_MANGLER(X509_get0_pubkey)
# endif
#else
# ifndef _X509_get0_pubkey
#  define _X509_get0_pubkey OPENSSL_MANGLER_ASM(X509_get0_pubkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_pubkey_bitstr
#  define X509_get0_pubkey_bitstr OPENSSL_MANGLER(X509_get0_pubkey_bitstr)
# endif
#else
# ifndef _X509_get0_pubkey_bitstr
#  define _X509_get0_pubkey_bitstr OPENSSL_MANGLER_ASM(X509_get0_pubkey_bitstr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_reject_objects
#  define X509_get0_reject_objects OPENSSL_MANGLER(X509_get0_reject_objects)
# endif
#else
# ifndef _X509_get0_reject_objects
#  define _X509_get0_reject_objects OPENSSL_MANGLER_ASM(X509_get0_reject_objects)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_serialNumber
#  define X509_get0_serialNumber OPENSSL_MANGLER(X509_get0_serialNumber)
# endif
#else
# ifndef _X509_get0_serialNumber
#  define _X509_get0_serialNumber OPENSSL_MANGLER_ASM(X509_get0_serialNumber)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_signature
#  define X509_get0_signature OPENSSL_MANGLER(X509_get0_signature)
# endif
#else
# ifndef _X509_get0_signature
#  define _X509_get0_signature OPENSSL_MANGLER_ASM(X509_get0_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_subject_key_id
#  define X509_get0_subject_key_id OPENSSL_MANGLER(X509_get0_subject_key_id)
# endif
#else
# ifndef _X509_get0_subject_key_id
#  define _X509_get0_subject_key_id OPENSSL_MANGLER_ASM(X509_get0_subject_key_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_tbs_sigalg
#  define X509_get0_tbs_sigalg OPENSSL_MANGLER(X509_get0_tbs_sigalg)
# endif
#else
# ifndef _X509_get0_tbs_sigalg
#  define _X509_get0_tbs_sigalg OPENSSL_MANGLER_ASM(X509_get0_tbs_sigalg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_trust_objects
#  define X509_get0_trust_objects OPENSSL_MANGLER(X509_get0_trust_objects)
# endif
#else
# ifndef _X509_get0_trust_objects
#  define _X509_get0_trust_objects OPENSSL_MANGLER_ASM(X509_get0_trust_objects)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get0_uids
#  define X509_get0_uids OPENSSL_MANGLER(X509_get0_uids)
# endif
#else
# ifndef _X509_get0_uids
#  define _X509_get0_uids OPENSSL_MANGLER_ASM(X509_get0_uids)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get1_email
#  define X509_get1_email OPENSSL_MANGLER(X509_get1_email)
# endif
#else
# ifndef _X509_get1_email
#  define _X509_get1_email OPENSSL_MANGLER_ASM(X509_get1_email)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get1_ocsp
#  define X509_get1_ocsp OPENSSL_MANGLER(X509_get1_ocsp)
# endif
#else
# ifndef _X509_get1_ocsp
#  define _X509_get1_ocsp OPENSSL_MANGLER_ASM(X509_get1_ocsp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_X509_PUBKEY
#  define X509_get_X509_PUBKEY OPENSSL_MANGLER(X509_get_X509_PUBKEY)
# endif
#else
# ifndef _X509_get_X509_PUBKEY
#  define _X509_get_X509_PUBKEY OPENSSL_MANGLER_ASM(X509_get_X509_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_default_cert_area
#  define X509_get_default_cert_area OPENSSL_MANGLER(X509_get_default_cert_area)
# endif
#else
# ifndef _X509_get_default_cert_area
#  define _X509_get_default_cert_area OPENSSL_MANGLER_ASM(X509_get_default_cert_area)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_default_cert_dir
#  define X509_get_default_cert_dir OPENSSL_MANGLER(X509_get_default_cert_dir)
# endif
#else
# ifndef _X509_get_default_cert_dir
#  define _X509_get_default_cert_dir OPENSSL_MANGLER_ASM(X509_get_default_cert_dir)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_default_cert_dir_env
#  define X509_get_default_cert_dir_env OPENSSL_MANGLER(X509_get_default_cert_dir_env)
# endif
#else
# ifndef _X509_get_default_cert_dir_env
#  define _X509_get_default_cert_dir_env OPENSSL_MANGLER_ASM(X509_get_default_cert_dir_env)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_default_cert_file
#  define X509_get_default_cert_file OPENSSL_MANGLER(X509_get_default_cert_file)
# endif
#else
# ifndef _X509_get_default_cert_file
#  define _X509_get_default_cert_file OPENSSL_MANGLER_ASM(X509_get_default_cert_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_default_cert_file_env
#  define X509_get_default_cert_file_env OPENSSL_MANGLER(X509_get_default_cert_file_env)
# endif
#else
# ifndef _X509_get_default_cert_file_env
#  define _X509_get_default_cert_file_env OPENSSL_MANGLER_ASM(X509_get_default_cert_file_env)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_default_private_dir
#  define X509_get_default_private_dir OPENSSL_MANGLER(X509_get_default_private_dir)
# endif
#else
# ifndef _X509_get_default_private_dir
#  define _X509_get_default_private_dir OPENSSL_MANGLER_ASM(X509_get_default_private_dir)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_ex_data
#  define X509_get_ex_data OPENSSL_MANGLER(X509_get_ex_data)
# endif
#else
# ifndef _X509_get_ex_data
#  define _X509_get_ex_data OPENSSL_MANGLER_ASM(X509_get_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_ext
#  define X509_get_ext OPENSSL_MANGLER(X509_get_ext)
# endif
#else
# ifndef _X509_get_ext
#  define _X509_get_ext OPENSSL_MANGLER_ASM(X509_get_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_ext_by_NID
#  define X509_get_ext_by_NID OPENSSL_MANGLER(X509_get_ext_by_NID)
# endif
#else
# ifndef _X509_get_ext_by_NID
#  define _X509_get_ext_by_NID OPENSSL_MANGLER_ASM(X509_get_ext_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_ext_by_OBJ
#  define X509_get_ext_by_OBJ OPENSSL_MANGLER(X509_get_ext_by_OBJ)
# endif
#else
# ifndef _X509_get_ext_by_OBJ
#  define _X509_get_ext_by_OBJ OPENSSL_MANGLER_ASM(X509_get_ext_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_ext_by_critical
#  define X509_get_ext_by_critical OPENSSL_MANGLER(X509_get_ext_by_critical)
# endif
#else
# ifndef _X509_get_ext_by_critical
#  define _X509_get_ext_by_critical OPENSSL_MANGLER_ASM(X509_get_ext_by_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_ext_count
#  define X509_get_ext_count OPENSSL_MANGLER(X509_get_ext_count)
# endif
#else
# ifndef _X509_get_ext_count
#  define _X509_get_ext_count OPENSSL_MANGLER_ASM(X509_get_ext_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_ext_d2i
#  define X509_get_ext_d2i OPENSSL_MANGLER(X509_get_ext_d2i)
# endif
#else
# ifndef _X509_get_ext_d2i
#  define _X509_get_ext_d2i OPENSSL_MANGLER_ASM(X509_get_ext_d2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_extended_key_usage
#  define X509_get_extended_key_usage OPENSSL_MANGLER(X509_get_extended_key_usage)
# endif
#else
# ifndef _X509_get_extended_key_usage
#  define _X509_get_extended_key_usage OPENSSL_MANGLER_ASM(X509_get_extended_key_usage)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_extension_flags
#  define X509_get_extension_flags OPENSSL_MANGLER(X509_get_extension_flags)
# endif
#else
# ifndef _X509_get_extension_flags
#  define _X509_get_extension_flags OPENSSL_MANGLER_ASM(X509_get_extension_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_issuer_name
#  define X509_get_issuer_name OPENSSL_MANGLER(X509_get_issuer_name)
# endif
#else
# ifndef _X509_get_issuer_name
#  define _X509_get_issuer_name OPENSSL_MANGLER_ASM(X509_get_issuer_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_key_usage
#  define X509_get_key_usage OPENSSL_MANGLER(X509_get_key_usage)
# endif
#else
# ifndef _X509_get_key_usage
#  define _X509_get_key_usage OPENSSL_MANGLER_ASM(X509_get_key_usage)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_pathlen
#  define X509_get_pathlen OPENSSL_MANGLER(X509_get_pathlen)
# endif
#else
# ifndef _X509_get_pathlen
#  define _X509_get_pathlen OPENSSL_MANGLER_ASM(X509_get_pathlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_proxy_pathlen
#  define X509_get_proxy_pathlen OPENSSL_MANGLER(X509_get_proxy_pathlen)
# endif
#else
# ifndef _X509_get_proxy_pathlen
#  define _X509_get_proxy_pathlen OPENSSL_MANGLER_ASM(X509_get_proxy_pathlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_pubkey
#  define X509_get_pubkey OPENSSL_MANGLER(X509_get_pubkey)
# endif
#else
# ifndef _X509_get_pubkey
#  define _X509_get_pubkey OPENSSL_MANGLER_ASM(X509_get_pubkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_pubkey_parameters
#  define X509_get_pubkey_parameters OPENSSL_MANGLER(X509_get_pubkey_parameters)
# endif
#else
# ifndef _X509_get_pubkey_parameters
#  define _X509_get_pubkey_parameters OPENSSL_MANGLER_ASM(X509_get_pubkey_parameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_serialNumber
#  define X509_get_serialNumber OPENSSL_MANGLER(X509_get_serialNumber)
# endif
#else
# ifndef _X509_get_serialNumber
#  define _X509_get_serialNumber OPENSSL_MANGLER_ASM(X509_get_serialNumber)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_signature_info
#  define X509_get_signature_info OPENSSL_MANGLER(X509_get_signature_info)
# endif
#else
# ifndef _X509_get_signature_info
#  define _X509_get_signature_info OPENSSL_MANGLER_ASM(X509_get_signature_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_signature_nid
#  define X509_get_signature_nid OPENSSL_MANGLER(X509_get_signature_nid)
# endif
#else
# ifndef _X509_get_signature_nid
#  define _X509_get_signature_nid OPENSSL_MANGLER_ASM(X509_get_signature_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_signature_type
#  define X509_get_signature_type OPENSSL_MANGLER(X509_get_signature_type)
# endif
#else
# ifndef _X509_get_signature_type
#  define _X509_get_signature_type OPENSSL_MANGLER_ASM(X509_get_signature_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_subject_name
#  define X509_get_subject_name OPENSSL_MANGLER(X509_get_subject_name)
# endif
#else
# ifndef _X509_get_subject_name
#  define _X509_get_subject_name OPENSSL_MANGLER_ASM(X509_get_subject_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_get_version
#  define X509_get_version OPENSSL_MANGLER(X509_get_version)
# endif
#else
# ifndef _X509_get_version
#  define _X509_get_version OPENSSL_MANGLER_ASM(X509_get_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_getm_notAfter
#  define X509_getm_notAfter OPENSSL_MANGLER(X509_getm_notAfter)
# endif
#else
# ifndef _X509_getm_notAfter
#  define _X509_getm_notAfter OPENSSL_MANGLER_ASM(X509_getm_notAfter)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_getm_notBefore
#  define X509_getm_notBefore OPENSSL_MANGLER(X509_getm_notBefore)
# endif
#else
# ifndef _X509_getm_notBefore
#  define _X509_getm_notBefore OPENSSL_MANGLER_ASM(X509_getm_notBefore)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_gmtime_adj
#  define X509_gmtime_adj OPENSSL_MANGLER(X509_gmtime_adj)
# endif
#else
# ifndef _X509_gmtime_adj
#  define _X509_gmtime_adj OPENSSL_MANGLER_ASM(X509_gmtime_adj)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_issuer_and_serial_cmp
#  define X509_issuer_and_serial_cmp OPENSSL_MANGLER(X509_issuer_and_serial_cmp)
# endif
#else
# ifndef _X509_issuer_and_serial_cmp
#  define _X509_issuer_and_serial_cmp OPENSSL_MANGLER_ASM(X509_issuer_and_serial_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_issuer_and_serial_hash
#  define X509_issuer_and_serial_hash OPENSSL_MANGLER(X509_issuer_and_serial_hash)
# endif
#else
# ifndef _X509_issuer_and_serial_hash
#  define _X509_issuer_and_serial_hash OPENSSL_MANGLER_ASM(X509_issuer_and_serial_hash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_issuer_name_cmp
#  define X509_issuer_name_cmp OPENSSL_MANGLER(X509_issuer_name_cmp)
# endif
#else
# ifndef _X509_issuer_name_cmp
#  define _X509_issuer_name_cmp OPENSSL_MANGLER_ASM(X509_issuer_name_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_issuer_name_hash
#  define X509_issuer_name_hash OPENSSL_MANGLER(X509_issuer_name_hash)
# endif
#else
# ifndef _X509_issuer_name_hash
#  define _X509_issuer_name_hash OPENSSL_MANGLER_ASM(X509_issuer_name_hash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_issuer_name_hash_old
#  define X509_issuer_name_hash_old OPENSSL_MANGLER(X509_issuer_name_hash_old)
# endif
#else
# ifndef _X509_issuer_name_hash_old
#  define _X509_issuer_name_hash_old OPENSSL_MANGLER_ASM(X509_issuer_name_hash_old)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_it
#  define X509_it OPENSSL_MANGLER(X509_it)
# endif
#else
# ifndef _X509_it
#  define _X509_it OPENSSL_MANGLER_ASM(X509_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_keyid_get0
#  define X509_keyid_get0 OPENSSL_MANGLER(X509_keyid_get0)
# endif
#else
# ifndef _X509_keyid_get0
#  define _X509_keyid_get0 OPENSSL_MANGLER_ASM(X509_keyid_get0)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_keyid_set1
#  define X509_keyid_set1 OPENSSL_MANGLER(X509_keyid_set1)
# endif
#else
# ifndef _X509_keyid_set1
#  define _X509_keyid_set1 OPENSSL_MANGLER_ASM(X509_keyid_set1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_load_cert_crl_file
#  define X509_load_cert_crl_file OPENSSL_MANGLER(X509_load_cert_crl_file)
# endif
#else
# ifndef _X509_load_cert_crl_file
#  define _X509_load_cert_crl_file OPENSSL_MANGLER_ASM(X509_load_cert_crl_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_load_cert_crl_file_ex
#  define X509_load_cert_crl_file_ex OPENSSL_MANGLER(X509_load_cert_crl_file_ex)
# endif
#else
# ifndef _X509_load_cert_crl_file_ex
#  define _X509_load_cert_crl_file_ex OPENSSL_MANGLER_ASM(X509_load_cert_crl_file_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_load_cert_file
#  define X509_load_cert_file OPENSSL_MANGLER(X509_load_cert_file)
# endif
#else
# ifndef _X509_load_cert_file
#  define _X509_load_cert_file OPENSSL_MANGLER_ASM(X509_load_cert_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_load_cert_file_ex
#  define X509_load_cert_file_ex OPENSSL_MANGLER(X509_load_cert_file_ex)
# endif
#else
# ifndef _X509_load_cert_file_ex
#  define _X509_load_cert_file_ex OPENSSL_MANGLER_ASM(X509_load_cert_file_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_load_crl_file
#  define X509_load_crl_file OPENSSL_MANGLER(X509_load_crl_file)
# endif
#else
# ifndef _X509_load_crl_file
#  define _X509_load_crl_file OPENSSL_MANGLER_ASM(X509_load_crl_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_load_http
#  define X509_load_http OPENSSL_MANGLER(X509_load_http)
# endif
#else
# ifndef _X509_load_http
#  define _X509_load_http OPENSSL_MANGLER_ASM(X509_load_http)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_new
#  define X509_new OPENSSL_MANGLER(X509_new)
# endif
#else
# ifndef _X509_new
#  define _X509_new OPENSSL_MANGLER_ASM(X509_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_new_ex
#  define X509_new_ex OPENSSL_MANGLER(X509_new_ex)
# endif
#else
# ifndef _X509_new_ex
#  define _X509_new_ex OPENSSL_MANGLER_ASM(X509_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_ocspid_print
#  define X509_ocspid_print OPENSSL_MANGLER(X509_ocspid_print)
# endif
#else
# ifndef _X509_ocspid_print
#  define _X509_ocspid_print OPENSSL_MANGLER_ASM(X509_ocspid_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_policy_check
#  define X509_policy_check OPENSSL_MANGLER(X509_policy_check)
# endif
#else
# ifndef _X509_policy_check
#  define _X509_policy_check OPENSSL_MANGLER_ASM(X509_policy_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_policy_level_get0_node
#  define X509_policy_level_get0_node OPENSSL_MANGLER(X509_policy_level_get0_node)
# endif
#else
# ifndef _X509_policy_level_get0_node
#  define _X509_policy_level_get0_node OPENSSL_MANGLER_ASM(X509_policy_level_get0_node)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_policy_level_node_count
#  define X509_policy_level_node_count OPENSSL_MANGLER(X509_policy_level_node_count)
# endif
#else
# ifndef _X509_policy_level_node_count
#  define _X509_policy_level_node_count OPENSSL_MANGLER_ASM(X509_policy_level_node_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_policy_node_get0_parent
#  define X509_policy_node_get0_parent OPENSSL_MANGLER(X509_policy_node_get0_parent)
# endif
#else
# ifndef _X509_policy_node_get0_parent
#  define _X509_policy_node_get0_parent OPENSSL_MANGLER_ASM(X509_policy_node_get0_parent)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_policy_node_get0_policy
#  define X509_policy_node_get0_policy OPENSSL_MANGLER(X509_policy_node_get0_policy)
# endif
#else
# ifndef _X509_policy_node_get0_policy
#  define _X509_policy_node_get0_policy OPENSSL_MANGLER_ASM(X509_policy_node_get0_policy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_policy_node_get0_qualifiers
#  define X509_policy_node_get0_qualifiers OPENSSL_MANGLER(X509_policy_node_get0_qualifiers)
# endif
#else
# ifndef _X509_policy_node_get0_qualifiers
#  define _X509_policy_node_get0_qualifiers OPENSSL_MANGLER_ASM(X509_policy_node_get0_qualifiers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_policy_tree_free
#  define X509_policy_tree_free OPENSSL_MANGLER(X509_policy_tree_free)
# endif
#else
# ifndef _X509_policy_tree_free
#  define _X509_policy_tree_free OPENSSL_MANGLER_ASM(X509_policy_tree_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_policy_tree_get0_level
#  define X509_policy_tree_get0_level OPENSSL_MANGLER(X509_policy_tree_get0_level)
# endif
#else
# ifndef _X509_policy_tree_get0_level
#  define _X509_policy_tree_get0_level OPENSSL_MANGLER_ASM(X509_policy_tree_get0_level)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_policy_tree_get0_policies
#  define X509_policy_tree_get0_policies OPENSSL_MANGLER(X509_policy_tree_get0_policies)
# endif
#else
# ifndef _X509_policy_tree_get0_policies
#  define _X509_policy_tree_get0_policies OPENSSL_MANGLER_ASM(X509_policy_tree_get0_policies)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_policy_tree_get0_user_policies
#  define X509_policy_tree_get0_user_policies OPENSSL_MANGLER(X509_policy_tree_get0_user_policies)
# endif
#else
# ifndef _X509_policy_tree_get0_user_policies
#  define _X509_policy_tree_get0_user_policies OPENSSL_MANGLER_ASM(X509_policy_tree_get0_user_policies)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_policy_tree_level_count
#  define X509_policy_tree_level_count OPENSSL_MANGLER(X509_policy_tree_level_count)
# endif
#else
# ifndef _X509_policy_tree_level_count
#  define _X509_policy_tree_level_count OPENSSL_MANGLER_ASM(X509_policy_tree_level_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_print
#  define X509_print OPENSSL_MANGLER(X509_print)
# endif
#else
# ifndef _X509_print
#  define _X509_print OPENSSL_MANGLER_ASM(X509_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_print_ex
#  define X509_print_ex OPENSSL_MANGLER(X509_print_ex)
# endif
#else
# ifndef _X509_print_ex
#  define _X509_print_ex OPENSSL_MANGLER_ASM(X509_print_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_print_ex_fp
#  define X509_print_ex_fp OPENSSL_MANGLER(X509_print_ex_fp)
# endif
#else
# ifndef _X509_print_ex_fp
#  define _X509_print_ex_fp OPENSSL_MANGLER_ASM(X509_print_ex_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_print_fp
#  define X509_print_fp OPENSSL_MANGLER(X509_print_fp)
# endif
#else
# ifndef _X509_print_fp
#  define _X509_print_fp OPENSSL_MANGLER_ASM(X509_print_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_pubkey_digest
#  define X509_pubkey_digest OPENSSL_MANGLER(X509_pubkey_digest)
# endif
#else
# ifndef _X509_pubkey_digest
#  define _X509_pubkey_digest OPENSSL_MANGLER_ASM(X509_pubkey_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_reject_clear
#  define X509_reject_clear OPENSSL_MANGLER(X509_reject_clear)
# endif
#else
# ifndef _X509_reject_clear
#  define _X509_reject_clear OPENSSL_MANGLER_ASM(X509_reject_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_self_signed
#  define X509_self_signed OPENSSL_MANGLER(X509_self_signed)
# endif
#else
# ifndef _X509_self_signed
#  define _X509_self_signed OPENSSL_MANGLER_ASM(X509_self_signed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_set0_distinguishing_id
#  define X509_set0_distinguishing_id OPENSSL_MANGLER(X509_set0_distinguishing_id)
# endif
#else
# ifndef _X509_set0_distinguishing_id
#  define _X509_set0_distinguishing_id OPENSSL_MANGLER_ASM(X509_set0_distinguishing_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_set1_notAfter
#  define X509_set1_notAfter OPENSSL_MANGLER(X509_set1_notAfter)
# endif
#else
# ifndef _X509_set1_notAfter
#  define _X509_set1_notAfter OPENSSL_MANGLER_ASM(X509_set1_notAfter)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_set1_notBefore
#  define X509_set1_notBefore OPENSSL_MANGLER(X509_set1_notBefore)
# endif
#else
# ifndef _X509_set1_notBefore
#  define _X509_set1_notBefore OPENSSL_MANGLER_ASM(X509_set1_notBefore)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_set_ex_data
#  define X509_set_ex_data OPENSSL_MANGLER(X509_set_ex_data)
# endif
#else
# ifndef _X509_set_ex_data
#  define _X509_set_ex_data OPENSSL_MANGLER_ASM(X509_set_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_set_issuer_name
#  define X509_set_issuer_name OPENSSL_MANGLER(X509_set_issuer_name)
# endif
#else
# ifndef _X509_set_issuer_name
#  define _X509_set_issuer_name OPENSSL_MANGLER_ASM(X509_set_issuer_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_set_proxy_flag
#  define X509_set_proxy_flag OPENSSL_MANGLER(X509_set_proxy_flag)
# endif
#else
# ifndef _X509_set_proxy_flag
#  define _X509_set_proxy_flag OPENSSL_MANGLER_ASM(X509_set_proxy_flag)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_set_proxy_pathlen
#  define X509_set_proxy_pathlen OPENSSL_MANGLER(X509_set_proxy_pathlen)
# endif
#else
# ifndef _X509_set_proxy_pathlen
#  define _X509_set_proxy_pathlen OPENSSL_MANGLER_ASM(X509_set_proxy_pathlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_set_pubkey
#  define X509_set_pubkey OPENSSL_MANGLER(X509_set_pubkey)
# endif
#else
# ifndef _X509_set_pubkey
#  define _X509_set_pubkey OPENSSL_MANGLER_ASM(X509_set_pubkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_set_serialNumber
#  define X509_set_serialNumber OPENSSL_MANGLER(X509_set_serialNumber)
# endif
#else
# ifndef _X509_set_serialNumber
#  define _X509_set_serialNumber OPENSSL_MANGLER_ASM(X509_set_serialNumber)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_set_subject_name
#  define X509_set_subject_name OPENSSL_MANGLER(X509_set_subject_name)
# endif
#else
# ifndef _X509_set_subject_name
#  define _X509_set_subject_name OPENSSL_MANGLER_ASM(X509_set_subject_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_set_version
#  define X509_set_version OPENSSL_MANGLER(X509_set_version)
# endif
#else
# ifndef _X509_set_version
#  define _X509_set_version OPENSSL_MANGLER_ASM(X509_set_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_sign
#  define X509_sign OPENSSL_MANGLER(X509_sign)
# endif
#else
# ifndef _X509_sign
#  define _X509_sign OPENSSL_MANGLER_ASM(X509_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_sign_ctx
#  define X509_sign_ctx OPENSSL_MANGLER(X509_sign_ctx)
# endif
#else
# ifndef _X509_sign_ctx
#  define _X509_sign_ctx OPENSSL_MANGLER_ASM(X509_sign_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_signature_dump
#  define X509_signature_dump OPENSSL_MANGLER(X509_signature_dump)
# endif
#else
# ifndef _X509_signature_dump
#  define _X509_signature_dump OPENSSL_MANGLER_ASM(X509_signature_dump)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_signature_print
#  define X509_signature_print OPENSSL_MANGLER(X509_signature_print)
# endif
#else
# ifndef _X509_signature_print
#  define _X509_signature_print OPENSSL_MANGLER_ASM(X509_signature_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_subject_name_cmp
#  define X509_subject_name_cmp OPENSSL_MANGLER(X509_subject_name_cmp)
# endif
#else
# ifndef _X509_subject_name_cmp
#  define _X509_subject_name_cmp OPENSSL_MANGLER_ASM(X509_subject_name_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_subject_name_hash
#  define X509_subject_name_hash OPENSSL_MANGLER(X509_subject_name_hash)
# endif
#else
# ifndef _X509_subject_name_hash
#  define _X509_subject_name_hash OPENSSL_MANGLER_ASM(X509_subject_name_hash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_subject_name_hash_old
#  define X509_subject_name_hash_old OPENSSL_MANGLER(X509_subject_name_hash_old)
# endif
#else
# ifndef _X509_subject_name_hash_old
#  define _X509_subject_name_hash_old OPENSSL_MANGLER_ASM(X509_subject_name_hash_old)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_supported_extension
#  define X509_supported_extension OPENSSL_MANGLER(X509_supported_extension)
# endif
#else
# ifndef _X509_supported_extension
#  define _X509_supported_extension OPENSSL_MANGLER_ASM(X509_supported_extension)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_time_adj
#  define X509_time_adj OPENSSL_MANGLER(X509_time_adj)
# endif
#else
# ifndef _X509_time_adj
#  define _X509_time_adj OPENSSL_MANGLER_ASM(X509_time_adj)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_time_adj_ex
#  define X509_time_adj_ex OPENSSL_MANGLER(X509_time_adj_ex)
# endif
#else
# ifndef _X509_time_adj_ex
#  define _X509_time_adj_ex OPENSSL_MANGLER_ASM(X509_time_adj_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_to_X509_REQ
#  define X509_to_X509_REQ OPENSSL_MANGLER(X509_to_X509_REQ)
# endif
#else
# ifndef _X509_to_X509_REQ
#  define _X509_to_X509_REQ OPENSSL_MANGLER_ASM(X509_to_X509_REQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_trust_clear
#  define X509_trust_clear OPENSSL_MANGLER(X509_trust_clear)
# endif
#else
# ifndef _X509_trust_clear
#  define _X509_trust_clear OPENSSL_MANGLER_ASM(X509_trust_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_trusted
#  define X509_trusted OPENSSL_MANGLER(X509_trusted)
# endif
#else
# ifndef _X509_trusted
#  define _X509_trusted OPENSSL_MANGLER_ASM(X509_trusted)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_up_ref
#  define X509_up_ref OPENSSL_MANGLER(X509_up_ref)
# endif
#else
# ifndef _X509_up_ref
#  define _X509_up_ref OPENSSL_MANGLER_ASM(X509_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_verify
#  define X509_verify OPENSSL_MANGLER(X509_verify)
# endif
#else
# ifndef _X509_verify
#  define _X509_verify OPENSSL_MANGLER_ASM(X509_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_verify_cert
#  define X509_verify_cert OPENSSL_MANGLER(X509_verify_cert)
# endif
#else
# ifndef _X509_verify_cert
#  define _X509_verify_cert OPENSSL_MANGLER_ASM(X509_verify_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509_verify_cert_error_string
#  define X509_verify_cert_error_string OPENSSL_MANGLER(X509_verify_cert_error_string)
# endif
#else
# ifndef _X509_verify_cert_error_string
#  define _X509_verify_cert_error_string OPENSSL_MANGLER_ASM(X509_verify_cert_error_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509at_add1_attr
#  define X509at_add1_attr OPENSSL_MANGLER(X509at_add1_attr)
# endif
#else
# ifndef _X509at_add1_attr
#  define _X509at_add1_attr OPENSSL_MANGLER_ASM(X509at_add1_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509at_add1_attr_by_NID
#  define X509at_add1_attr_by_NID OPENSSL_MANGLER(X509at_add1_attr_by_NID)
# endif
#else
# ifndef _X509at_add1_attr_by_NID
#  define _X509at_add1_attr_by_NID OPENSSL_MANGLER_ASM(X509at_add1_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509at_add1_attr_by_OBJ
#  define X509at_add1_attr_by_OBJ OPENSSL_MANGLER(X509at_add1_attr_by_OBJ)
# endif
#else
# ifndef _X509at_add1_attr_by_OBJ
#  define _X509at_add1_attr_by_OBJ OPENSSL_MANGLER_ASM(X509at_add1_attr_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509at_add1_attr_by_txt
#  define X509at_add1_attr_by_txt OPENSSL_MANGLER(X509at_add1_attr_by_txt)
# endif
#else
# ifndef _X509at_add1_attr_by_txt
#  define _X509at_add1_attr_by_txt OPENSSL_MANGLER_ASM(X509at_add1_attr_by_txt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509at_delete_attr
#  define X509at_delete_attr OPENSSL_MANGLER(X509at_delete_attr)
# endif
#else
# ifndef _X509at_delete_attr
#  define _X509at_delete_attr OPENSSL_MANGLER_ASM(X509at_delete_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509at_get0_data_by_OBJ
#  define X509at_get0_data_by_OBJ OPENSSL_MANGLER(X509at_get0_data_by_OBJ)
# endif
#else
# ifndef _X509at_get0_data_by_OBJ
#  define _X509at_get0_data_by_OBJ OPENSSL_MANGLER_ASM(X509at_get0_data_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509at_get_attr
#  define X509at_get_attr OPENSSL_MANGLER(X509at_get_attr)
# endif
#else
# ifndef _X509at_get_attr
#  define _X509at_get_attr OPENSSL_MANGLER_ASM(X509at_get_attr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509at_get_attr_by_NID
#  define X509at_get_attr_by_NID OPENSSL_MANGLER(X509at_get_attr_by_NID)
# endif
#else
# ifndef _X509at_get_attr_by_NID
#  define _X509at_get_attr_by_NID OPENSSL_MANGLER_ASM(X509at_get_attr_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509at_get_attr_by_OBJ
#  define X509at_get_attr_by_OBJ OPENSSL_MANGLER(X509at_get_attr_by_OBJ)
# endif
#else
# ifndef _X509at_get_attr_by_OBJ
#  define _X509at_get_attr_by_OBJ OPENSSL_MANGLER_ASM(X509at_get_attr_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509at_get_attr_count
#  define X509at_get_attr_count OPENSSL_MANGLER(X509at_get_attr_count)
# endif
#else
# ifndef _X509at_get_attr_count
#  define _X509at_get_attr_count OPENSSL_MANGLER_ASM(X509at_get_attr_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_add_ext
#  define X509v3_add_ext OPENSSL_MANGLER(X509v3_add_ext)
# endif
#else
# ifndef _X509v3_add_ext
#  define _X509v3_add_ext OPENSSL_MANGLER_ASM(X509v3_add_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_addr_add_inherit
#  define X509v3_addr_add_inherit OPENSSL_MANGLER(X509v3_addr_add_inherit)
# endif
#else
# ifndef _X509v3_addr_add_inherit
#  define _X509v3_addr_add_inherit OPENSSL_MANGLER_ASM(X509v3_addr_add_inherit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_addr_add_prefix
#  define X509v3_addr_add_prefix OPENSSL_MANGLER(X509v3_addr_add_prefix)
# endif
#else
# ifndef _X509v3_addr_add_prefix
#  define _X509v3_addr_add_prefix OPENSSL_MANGLER_ASM(X509v3_addr_add_prefix)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_addr_add_range
#  define X509v3_addr_add_range OPENSSL_MANGLER(X509v3_addr_add_range)
# endif
#else
# ifndef _X509v3_addr_add_range
#  define _X509v3_addr_add_range OPENSSL_MANGLER_ASM(X509v3_addr_add_range)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_addr_canonize
#  define X509v3_addr_canonize OPENSSL_MANGLER(X509v3_addr_canonize)
# endif
#else
# ifndef _X509v3_addr_canonize
#  define _X509v3_addr_canonize OPENSSL_MANGLER_ASM(X509v3_addr_canonize)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_addr_get_afi
#  define X509v3_addr_get_afi OPENSSL_MANGLER(X509v3_addr_get_afi)
# endif
#else
# ifndef _X509v3_addr_get_afi
#  define _X509v3_addr_get_afi OPENSSL_MANGLER_ASM(X509v3_addr_get_afi)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_addr_get_range
#  define X509v3_addr_get_range OPENSSL_MANGLER(X509v3_addr_get_range)
# endif
#else
# ifndef _X509v3_addr_get_range
#  define _X509v3_addr_get_range OPENSSL_MANGLER_ASM(X509v3_addr_get_range)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_addr_inherits
#  define X509v3_addr_inherits OPENSSL_MANGLER(X509v3_addr_inherits)
# endif
#else
# ifndef _X509v3_addr_inherits
#  define _X509v3_addr_inherits OPENSSL_MANGLER_ASM(X509v3_addr_inherits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_addr_is_canonical
#  define X509v3_addr_is_canonical OPENSSL_MANGLER(X509v3_addr_is_canonical)
# endif
#else
# ifndef _X509v3_addr_is_canonical
#  define _X509v3_addr_is_canonical OPENSSL_MANGLER_ASM(X509v3_addr_is_canonical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_addr_subset
#  define X509v3_addr_subset OPENSSL_MANGLER(X509v3_addr_subset)
# endif
#else
# ifndef _X509v3_addr_subset
#  define _X509v3_addr_subset OPENSSL_MANGLER_ASM(X509v3_addr_subset)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_addr_validate_path
#  define X509v3_addr_validate_path OPENSSL_MANGLER(X509v3_addr_validate_path)
# endif
#else
# ifndef _X509v3_addr_validate_path
#  define _X509v3_addr_validate_path OPENSSL_MANGLER_ASM(X509v3_addr_validate_path)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_addr_validate_resource_set
#  define X509v3_addr_validate_resource_set OPENSSL_MANGLER(X509v3_addr_validate_resource_set)
# endif
#else
# ifndef _X509v3_addr_validate_resource_set
#  define _X509v3_addr_validate_resource_set OPENSSL_MANGLER_ASM(X509v3_addr_validate_resource_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_asid_add_id_or_range
#  define X509v3_asid_add_id_or_range OPENSSL_MANGLER(X509v3_asid_add_id_or_range)
# endif
#else
# ifndef _X509v3_asid_add_id_or_range
#  define _X509v3_asid_add_id_or_range OPENSSL_MANGLER_ASM(X509v3_asid_add_id_or_range)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_asid_add_inherit
#  define X509v3_asid_add_inherit OPENSSL_MANGLER(X509v3_asid_add_inherit)
# endif
#else
# ifndef _X509v3_asid_add_inherit
#  define _X509v3_asid_add_inherit OPENSSL_MANGLER_ASM(X509v3_asid_add_inherit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_asid_canonize
#  define X509v3_asid_canonize OPENSSL_MANGLER(X509v3_asid_canonize)
# endif
#else
# ifndef _X509v3_asid_canonize
#  define _X509v3_asid_canonize OPENSSL_MANGLER_ASM(X509v3_asid_canonize)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_asid_inherits
#  define X509v3_asid_inherits OPENSSL_MANGLER(X509v3_asid_inherits)
# endif
#else
# ifndef _X509v3_asid_inherits
#  define _X509v3_asid_inherits OPENSSL_MANGLER_ASM(X509v3_asid_inherits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_asid_is_canonical
#  define X509v3_asid_is_canonical OPENSSL_MANGLER(X509v3_asid_is_canonical)
# endif
#else
# ifndef _X509v3_asid_is_canonical
#  define _X509v3_asid_is_canonical OPENSSL_MANGLER_ASM(X509v3_asid_is_canonical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_asid_subset
#  define X509v3_asid_subset OPENSSL_MANGLER(X509v3_asid_subset)
# endif
#else
# ifndef _X509v3_asid_subset
#  define _X509v3_asid_subset OPENSSL_MANGLER_ASM(X509v3_asid_subset)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_asid_validate_path
#  define X509v3_asid_validate_path OPENSSL_MANGLER(X509v3_asid_validate_path)
# endif
#else
# ifndef _X509v3_asid_validate_path
#  define _X509v3_asid_validate_path OPENSSL_MANGLER_ASM(X509v3_asid_validate_path)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_asid_validate_resource_set
#  define X509v3_asid_validate_resource_set OPENSSL_MANGLER(X509v3_asid_validate_resource_set)
# endif
#else
# ifndef _X509v3_asid_validate_resource_set
#  define _X509v3_asid_validate_resource_set OPENSSL_MANGLER_ASM(X509v3_asid_validate_resource_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_delete_ext
#  define X509v3_delete_ext OPENSSL_MANGLER(X509v3_delete_ext)
# endif
#else
# ifndef _X509v3_delete_ext
#  define _X509v3_delete_ext OPENSSL_MANGLER_ASM(X509v3_delete_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_get_ext
#  define X509v3_get_ext OPENSSL_MANGLER(X509v3_get_ext)
# endif
#else
# ifndef _X509v3_get_ext
#  define _X509v3_get_ext OPENSSL_MANGLER_ASM(X509v3_get_ext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_get_ext_by_NID
#  define X509v3_get_ext_by_NID OPENSSL_MANGLER(X509v3_get_ext_by_NID)
# endif
#else
# ifndef _X509v3_get_ext_by_NID
#  define _X509v3_get_ext_by_NID OPENSSL_MANGLER_ASM(X509v3_get_ext_by_NID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_get_ext_by_OBJ
#  define X509v3_get_ext_by_OBJ OPENSSL_MANGLER(X509v3_get_ext_by_OBJ)
# endif
#else
# ifndef _X509v3_get_ext_by_OBJ
#  define _X509v3_get_ext_by_OBJ OPENSSL_MANGLER_ASM(X509v3_get_ext_by_OBJ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_get_ext_by_critical
#  define X509v3_get_ext_by_critical OPENSSL_MANGLER(X509v3_get_ext_by_critical)
# endif
#else
# ifndef _X509v3_get_ext_by_critical
#  define _X509v3_get_ext_by_critical OPENSSL_MANGLER_ASM(X509v3_get_ext_by_critical)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X509v3_get_ext_count
#  define X509v3_get_ext_count OPENSSL_MANGLER(X509v3_get_ext_count)
# endif
#else
# ifndef _X509v3_get_ext_count
#  define _X509v3_get_ext_count OPENSSL_MANGLER_ASM(X509v3_get_ext_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X9_62_CHARACTERISTIC_TWO_free
#  define X9_62_CHARACTERISTIC_TWO_free OPENSSL_MANGLER(X9_62_CHARACTERISTIC_TWO_free)
# endif
#else
# ifndef _X9_62_CHARACTERISTIC_TWO_free
#  define _X9_62_CHARACTERISTIC_TWO_free OPENSSL_MANGLER_ASM(X9_62_CHARACTERISTIC_TWO_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X9_62_CHARACTERISTIC_TWO_new
#  define X9_62_CHARACTERISTIC_TWO_new OPENSSL_MANGLER(X9_62_CHARACTERISTIC_TWO_new)
# endif
#else
# ifndef _X9_62_CHARACTERISTIC_TWO_new
#  define _X9_62_CHARACTERISTIC_TWO_new OPENSSL_MANGLER_ASM(X9_62_CHARACTERISTIC_TWO_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X9_62_PENTANOMIAL_free
#  define X9_62_PENTANOMIAL_free OPENSSL_MANGLER(X9_62_PENTANOMIAL_free)
# endif
#else
# ifndef _X9_62_PENTANOMIAL_free
#  define _X9_62_PENTANOMIAL_free OPENSSL_MANGLER_ASM(X9_62_PENTANOMIAL_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef X9_62_PENTANOMIAL_new
#  define X9_62_PENTANOMIAL_new OPENSSL_MANGLER(X9_62_PENTANOMIAL_new)
# endif
#else
# ifndef _X9_62_PENTANOMIAL_new
#  define _X9_62_PENTANOMIAL_new OPENSSL_MANGLER_ASM(X9_62_PENTANOMIAL_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ZINT32_it
#  define ZINT32_it OPENSSL_MANGLER(ZINT32_it)
# endif
#else
# ifndef _ZINT32_it
#  define _ZINT32_it OPENSSL_MANGLER_ASM(ZINT32_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ZINT64_it
#  define ZINT64_it OPENSSL_MANGLER(ZINT64_it)
# endif
#else
# ifndef _ZINT64_it
#  define _ZINT64_it OPENSSL_MANGLER_ASM(ZINT64_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ZLONG_it
#  define ZLONG_it OPENSSL_MANGLER(ZLONG_it)
# endif
#else
# ifndef _ZLONG_it
#  define _ZLONG_it OPENSSL_MANGLER_ASM(ZLONG_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ZUINT32_it
#  define ZUINT32_it OPENSSL_MANGLER(ZUINT32_it)
# endif
#else
# ifndef _ZUINT32_it
#  define _ZUINT32_it OPENSSL_MANGLER_ASM(ZUINT32_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ZUINT64_it
#  define ZUINT64_it OPENSSL_MANGLER(ZUINT64_it)
# endif
#else
# ifndef _ZUINT64_it
#  define _ZUINT64_it OPENSSL_MANGLER_ASM(ZUINT64_it)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef _CONF_add_string
#  define _CONF_add_string OPENSSL_MANGLER(_CONF_add_string)
# endif
#else
# ifndef __CONF_add_string
#  define __CONF_add_string OPENSSL_MANGLER_ASM(_CONF_add_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef _CONF_free_data
#  define _CONF_free_data OPENSSL_MANGLER(_CONF_free_data)
# endif
#else
# ifndef __CONF_free_data
#  define __CONF_free_data OPENSSL_MANGLER_ASM(_CONF_free_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef _CONF_get_number
#  define _CONF_get_number OPENSSL_MANGLER(_CONF_get_number)
# endif
#else
# ifndef __CONF_get_number
#  define __CONF_get_number OPENSSL_MANGLER_ASM(_CONF_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef _CONF_get_section
#  define _CONF_get_section OPENSSL_MANGLER(_CONF_get_section)
# endif
#else
# ifndef __CONF_get_section
#  define __CONF_get_section OPENSSL_MANGLER_ASM(_CONF_get_section)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef _CONF_get_section_values
#  define _CONF_get_section_values OPENSSL_MANGLER(_CONF_get_section_values)
# endif
#else
# ifndef __CONF_get_section_values
#  define __CONF_get_section_values OPENSSL_MANGLER_ASM(_CONF_get_section_values)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef _CONF_get_string
#  define _CONF_get_string OPENSSL_MANGLER(_CONF_get_string)
# endif
#else
# ifndef __CONF_get_string
#  define __CONF_get_string OPENSSL_MANGLER_ASM(_CONF_get_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef _CONF_new_data
#  define _CONF_new_data OPENSSL_MANGLER(_CONF_new_data)
# endif
#else
# ifndef __CONF_new_data
#  define __CONF_new_data OPENSSL_MANGLER_ASM(_CONF_new_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef _CONF_new_section
#  define _CONF_new_section OPENSSL_MANGLER(_CONF_new_section)
# endif
#else
# ifndef __CONF_new_section
#  define __CONF_new_section OPENSSL_MANGLER_ASM(_CONF_new_section)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef a2d_ASN1_OBJECT
#  define a2d_ASN1_OBJECT OPENSSL_MANGLER(a2d_ASN1_OBJECT)
# endif
#else
# ifndef _a2d_ASN1_OBJECT
#  define _a2d_ASN1_OBJECT OPENSSL_MANGLER_ASM(a2d_ASN1_OBJECT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef a2i_ASN1_ENUMERATED
#  define a2i_ASN1_ENUMERATED OPENSSL_MANGLER(a2i_ASN1_ENUMERATED)
# endif
#else
# ifndef _a2i_ASN1_ENUMERATED
#  define _a2i_ASN1_ENUMERATED OPENSSL_MANGLER_ASM(a2i_ASN1_ENUMERATED)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef a2i_ASN1_INTEGER
#  define a2i_ASN1_INTEGER OPENSSL_MANGLER(a2i_ASN1_INTEGER)
# endif
#else
# ifndef _a2i_ASN1_INTEGER
#  define _a2i_ASN1_INTEGER OPENSSL_MANGLER_ASM(a2i_ASN1_INTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef a2i_ASN1_STRING
#  define a2i_ASN1_STRING OPENSSL_MANGLER(a2i_ASN1_STRING)
# endif
#else
# ifndef _a2i_ASN1_STRING
#  define _a2i_ASN1_STRING OPENSSL_MANGLER_ASM(a2i_ASN1_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef a2i_GENERAL_NAME
#  define a2i_GENERAL_NAME OPENSSL_MANGLER(a2i_GENERAL_NAME)
# endif
#else
# ifndef _a2i_GENERAL_NAME
#  define _a2i_GENERAL_NAME OPENSSL_MANGLER_ASM(a2i_GENERAL_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef a2i_IPADDRESS
#  define a2i_IPADDRESS OPENSSL_MANGLER(a2i_IPADDRESS)
# endif
#else
# ifndef _a2i_IPADDRESS
#  define _a2i_IPADDRESS OPENSSL_MANGLER_ASM(a2i_IPADDRESS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef a2i_IPADDRESS_NC
#  define a2i_IPADDRESS_NC OPENSSL_MANGLER(a2i_IPADDRESS_NC)
# endif
#else
# ifndef _a2i_IPADDRESS_NC
#  define _a2i_IPADDRESS_NC OPENSSL_MANGLER_ASM(a2i_IPADDRESS_NC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_cbc_encrypt
#  define aesni_cbc_encrypt OPENSSL_MANGLER(aesni_cbc_encrypt)
# endif
#else
# ifndef _aesni_cbc_encrypt
#  define _aesni_cbc_encrypt OPENSSL_MANGLER_ASM(aesni_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_cbc_sha1_enc
#  define aesni_cbc_sha1_enc OPENSSL_MANGLER(aesni_cbc_sha1_enc)
# endif
#else
# ifndef _aesni_cbc_sha1_enc
#  define _aesni_cbc_sha1_enc OPENSSL_MANGLER_ASM(aesni_cbc_sha1_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_cbc_sha256_enc
#  define aesni_cbc_sha256_enc OPENSSL_MANGLER(aesni_cbc_sha256_enc)
# endif
#else
# ifndef _aesni_cbc_sha256_enc
#  define _aesni_cbc_sha256_enc OPENSSL_MANGLER_ASM(aesni_cbc_sha256_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_ccm64_decrypt_blocks
#  define aesni_ccm64_decrypt_blocks OPENSSL_MANGLER(aesni_ccm64_decrypt_blocks)
# endif
#else
# ifndef _aesni_ccm64_decrypt_blocks
#  define _aesni_ccm64_decrypt_blocks OPENSSL_MANGLER_ASM(aesni_ccm64_decrypt_blocks)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_ccm64_encrypt_blocks
#  define aesni_ccm64_encrypt_blocks OPENSSL_MANGLER(aesni_ccm64_encrypt_blocks)
# endif
#else
# ifndef _aesni_ccm64_encrypt_blocks
#  define _aesni_ccm64_encrypt_blocks OPENSSL_MANGLER_ASM(aesni_ccm64_encrypt_blocks)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_ctr32_encrypt_blocks
#  define aesni_ctr32_encrypt_blocks OPENSSL_MANGLER(aesni_ctr32_encrypt_blocks)
# endif
#else
# ifndef _aesni_ctr32_encrypt_blocks
#  define _aesni_ctr32_encrypt_blocks OPENSSL_MANGLER_ASM(aesni_ctr32_encrypt_blocks)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_decrypt
#  define aesni_decrypt OPENSSL_MANGLER(aesni_decrypt)
# endif
#else
# ifndef _aesni_decrypt
#  define _aesni_decrypt OPENSSL_MANGLER_ASM(aesni_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_ecb_encrypt
#  define aesni_ecb_encrypt OPENSSL_MANGLER(aesni_ecb_encrypt)
# endif
#else
# ifndef _aesni_ecb_encrypt
#  define _aesni_ecb_encrypt OPENSSL_MANGLER_ASM(aesni_ecb_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_encrypt
#  define aesni_encrypt OPENSSL_MANGLER(aesni_encrypt)
# endif
#else
# ifndef _aesni_encrypt
#  define _aesni_encrypt OPENSSL_MANGLER_ASM(aesni_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_gcm_decrypt
#  define aesni_gcm_decrypt OPENSSL_MANGLER(aesni_gcm_decrypt)
# endif
#else
# ifndef _aesni_gcm_decrypt
#  define _aesni_gcm_decrypt OPENSSL_MANGLER_ASM(aesni_gcm_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_gcm_encrypt
#  define aesni_gcm_encrypt OPENSSL_MANGLER(aesni_gcm_encrypt)
# endif
#else
# ifndef _aesni_gcm_encrypt
#  define _aesni_gcm_encrypt OPENSSL_MANGLER_ASM(aesni_gcm_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_multi_cbc_decrypt
#  define aesni_multi_cbc_decrypt OPENSSL_MANGLER(aesni_multi_cbc_decrypt)
# endif
#else
# ifndef _aesni_multi_cbc_decrypt
#  define _aesni_multi_cbc_decrypt OPENSSL_MANGLER_ASM(aesni_multi_cbc_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_multi_cbc_encrypt
#  define aesni_multi_cbc_encrypt OPENSSL_MANGLER(aesni_multi_cbc_encrypt)
# endif
#else
# ifndef _aesni_multi_cbc_encrypt
#  define _aesni_multi_cbc_encrypt OPENSSL_MANGLER_ASM(aesni_multi_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_ocb_decrypt
#  define aesni_ocb_decrypt OPENSSL_MANGLER(aesni_ocb_decrypt)
# endif
#else
# ifndef _aesni_ocb_decrypt
#  define _aesni_ocb_decrypt OPENSSL_MANGLER_ASM(aesni_ocb_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_ocb_encrypt
#  define aesni_ocb_encrypt OPENSSL_MANGLER(aesni_ocb_encrypt)
# endif
#else
# ifndef _aesni_ocb_encrypt
#  define _aesni_ocb_encrypt OPENSSL_MANGLER_ASM(aesni_ocb_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_set_decrypt_key
#  define aesni_set_decrypt_key OPENSSL_MANGLER(aesni_set_decrypt_key)
# endif
#else
# ifndef _aesni_set_decrypt_key
#  define _aesni_set_decrypt_key OPENSSL_MANGLER_ASM(aesni_set_decrypt_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_set_encrypt_key
#  define aesni_set_encrypt_key OPENSSL_MANGLER(aesni_set_encrypt_key)
# endif
#else
# ifndef _aesni_set_encrypt_key
#  define _aesni_set_encrypt_key OPENSSL_MANGLER_ASM(aesni_set_encrypt_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_xts_decrypt
#  define aesni_xts_decrypt OPENSSL_MANGLER(aesni_xts_decrypt)
# endif
#else
# ifndef _aesni_xts_decrypt
#  define _aesni_xts_decrypt OPENSSL_MANGLER_ASM(aesni_xts_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef aesni_xts_encrypt
#  define aesni_xts_encrypt OPENSSL_MANGLER(aesni_xts_encrypt)
# endif
#else
# ifndef _aesni_xts_encrypt
#  define _aesni_xts_encrypt OPENSSL_MANGLER_ASM(aesni_xts_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef asm_AES_cbc_encrypt
#  define asm_AES_cbc_encrypt OPENSSL_MANGLER(asm_AES_cbc_encrypt)
# endif
#else
# ifndef _asm_AES_cbc_encrypt
#  define _asm_AES_cbc_encrypt OPENSSL_MANGLER_ASM(asm_AES_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef asm_AES_decrypt
#  define asm_AES_decrypt OPENSSL_MANGLER(asm_AES_decrypt)
# endif
#else
# ifndef _asm_AES_decrypt
#  define _asm_AES_decrypt OPENSSL_MANGLER_ASM(asm_AES_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef asm_AES_encrypt
#  define asm_AES_encrypt OPENSSL_MANGLER(asm_AES_encrypt)
# endif
#else
# ifndef _asm_AES_encrypt
#  define _asm_AES_encrypt OPENSSL_MANGLER_ASM(asm_AES_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef asn1_d2i_read_bio
#  define asn1_d2i_read_bio OPENSSL_MANGLER(asn1_d2i_read_bio)
# endif
#else
# ifndef _asn1_d2i_read_bio
#  define _asn1_d2i_read_bio OPENSSL_MANGLER_ASM(asn1_d2i_read_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef async_deinit
#  define async_deinit OPENSSL_MANGLER(async_deinit)
# endif
#else
# ifndef _async_deinit
#  define _async_deinit OPENSSL_MANGLER_ASM(async_deinit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef async_fibre_free
#  define async_fibre_free OPENSSL_MANGLER(async_fibre_free)
# endif
#else
# ifndef _async_fibre_free
#  define _async_fibre_free OPENSSL_MANGLER_ASM(async_fibre_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef async_fibre_makecontext
#  define async_fibre_makecontext OPENSSL_MANGLER(async_fibre_makecontext)
# endif
#else
# ifndef _async_fibre_makecontext
#  define _async_fibre_makecontext OPENSSL_MANGLER_ASM(async_fibre_makecontext)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef async_get_ctx
#  define async_get_ctx OPENSSL_MANGLER(async_get_ctx)
# endif
#else
# ifndef _async_get_ctx
#  define _async_get_ctx OPENSSL_MANGLER_ASM(async_get_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef async_init
#  define async_init OPENSSL_MANGLER(async_init)
# endif
#else
# ifndef _async_init
#  define _async_init OPENSSL_MANGLER_ASM(async_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef async_local_cleanup
#  define async_local_cleanup OPENSSL_MANGLER(async_local_cleanup)
# endif
#else
# ifndef _async_local_cleanup
#  define _async_local_cleanup OPENSSL_MANGLER_ASM(async_local_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef async_start_func
#  define async_start_func OPENSSL_MANGLER(async_start_func)
# endif
#else
# ifndef _async_start_func
#  define _async_start_func OPENSSL_MANGLER_ASM(async_start_func)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef async_wait_ctx_reset_counts
#  define async_wait_ctx_reset_counts OPENSSL_MANGLER(async_wait_ctx_reset_counts)
# endif
#else
# ifndef _async_wait_ctx_reset_counts
#  define _async_wait_ctx_reset_counts OPENSSL_MANGLER_ASM(async_wait_ctx_reset_counts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef b2i_DSA_PVK_bio
#  define b2i_DSA_PVK_bio OPENSSL_MANGLER(b2i_DSA_PVK_bio)
# endif
#else
# ifndef _b2i_DSA_PVK_bio
#  define _b2i_DSA_PVK_bio OPENSSL_MANGLER_ASM(b2i_DSA_PVK_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef b2i_DSA_PVK_bio_ex
#  define b2i_DSA_PVK_bio_ex OPENSSL_MANGLER(b2i_DSA_PVK_bio_ex)
# endif
#else
# ifndef _b2i_DSA_PVK_bio_ex
#  define _b2i_DSA_PVK_bio_ex OPENSSL_MANGLER_ASM(b2i_DSA_PVK_bio_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef b2i_PVK_bio
#  define b2i_PVK_bio OPENSSL_MANGLER(b2i_PVK_bio)
# endif
#else
# ifndef _b2i_PVK_bio
#  define _b2i_PVK_bio OPENSSL_MANGLER_ASM(b2i_PVK_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef b2i_PVK_bio_ex
#  define b2i_PVK_bio_ex OPENSSL_MANGLER(b2i_PVK_bio_ex)
# endif
#else
# ifndef _b2i_PVK_bio_ex
#  define _b2i_PVK_bio_ex OPENSSL_MANGLER_ASM(b2i_PVK_bio_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef b2i_PrivateKey
#  define b2i_PrivateKey OPENSSL_MANGLER(b2i_PrivateKey)
# endif
#else
# ifndef _b2i_PrivateKey
#  define _b2i_PrivateKey OPENSSL_MANGLER_ASM(b2i_PrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef b2i_PrivateKey_bio
#  define b2i_PrivateKey_bio OPENSSL_MANGLER(b2i_PrivateKey_bio)
# endif
#else
# ifndef _b2i_PrivateKey_bio
#  define _b2i_PrivateKey_bio OPENSSL_MANGLER_ASM(b2i_PrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef b2i_PublicKey
#  define b2i_PublicKey OPENSSL_MANGLER(b2i_PublicKey)
# endif
#else
# ifndef _b2i_PublicKey
#  define _b2i_PublicKey OPENSSL_MANGLER_ASM(b2i_PublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef b2i_PublicKey_bio
#  define b2i_PublicKey_bio OPENSSL_MANGLER(b2i_PublicKey_bio)
# endif
#else
# ifndef _b2i_PublicKey_bio
#  define _b2i_PublicKey_bio OPENSSL_MANGLER_ASM(b2i_PublicKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef b2i_RSA_PVK_bio
#  define b2i_RSA_PVK_bio OPENSSL_MANGLER(b2i_RSA_PVK_bio)
# endif
#else
# ifndef _b2i_RSA_PVK_bio
#  define _b2i_RSA_PVK_bio OPENSSL_MANGLER_ASM(b2i_RSA_PVK_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef b2i_RSA_PVK_bio_ex
#  define b2i_RSA_PVK_bio_ex OPENSSL_MANGLER(b2i_RSA_PVK_bio_ex)
# endif
#else
# ifndef _b2i_RSA_PVK_bio_ex
#  define _b2i_RSA_PVK_bio_ex OPENSSL_MANGLER_ASM(b2i_RSA_PVK_bio_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bio_cleanup
#  define bio_cleanup OPENSSL_MANGLER(bio_cleanup)
# endif
#else
# ifndef _bio_cleanup
#  define _bio_cleanup OPENSSL_MANGLER_ASM(bio_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bio_free_ex_data
#  define bio_free_ex_data OPENSSL_MANGLER(bio_free_ex_data)
# endif
#else
# ifndef _bio_free_ex_data
#  define _bio_free_ex_data OPENSSL_MANGLER_ASM(bio_free_ex_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bio_lookup_lock
#  define bio_lookup_lock OPENSSL_MANGLER(bio_lookup_lock)
# endif
#else
# ifndef _bio_lookup_lock
#  define _bio_lookup_lock OPENSSL_MANGLER_ASM(bio_lookup_lock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bio_sock_cleanup_int
#  define bio_sock_cleanup_int OPENSSL_MANGLER(bio_sock_cleanup_int)
# endif
#else
# ifndef _bio_sock_cleanup_int
#  define _bio_sock_cleanup_int OPENSSL_MANGLER_ASM(bio_sock_cleanup_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bio_type_lock
#  define bio_type_lock OPENSSL_MANGLER(bio_type_lock)
# endif
#else
# ifndef _bio_type_lock
#  define _bio_type_lock OPENSSL_MANGLER_ASM(bio_type_lock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_GF2m_mul_2x2
#  define bn_GF2m_mul_2x2 OPENSSL_MANGLER(bn_GF2m_mul_2x2)
# endif
#else
# ifndef _bn_GF2m_mul_2x2
#  define _bn_GF2m_mul_2x2 OPENSSL_MANGLER_ASM(bn_GF2m_mul_2x2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_add_words
#  define bn_add_words OPENSSL_MANGLER(bn_add_words)
# endif
#else
# ifndef _bn_add_words
#  define _bn_add_words OPENSSL_MANGLER_ASM(bn_add_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_cmp_part_words
#  define bn_cmp_part_words OPENSSL_MANGLER(bn_cmp_part_words)
# endif
#else
# ifndef _bn_cmp_part_words
#  define _bn_cmp_part_words OPENSSL_MANGLER_ASM(bn_cmp_part_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_cmp_words
#  define bn_cmp_words OPENSSL_MANGLER(bn_cmp_words)
# endif
#else
# ifndef _bn_cmp_words
#  define _bn_cmp_words OPENSSL_MANGLER_ASM(bn_cmp_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_compute_wNAF
#  define bn_compute_wNAF OPENSSL_MANGLER(bn_compute_wNAF)
# endif
#else
# ifndef _bn_compute_wNAF
#  define _bn_compute_wNAF OPENSSL_MANGLER_ASM(bn_compute_wNAF)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_copy_words
#  define bn_copy_words OPENSSL_MANGLER(bn_copy_words)
# endif
#else
# ifndef _bn_copy_words
#  define _bn_copy_words OPENSSL_MANGLER_ASM(bn_copy_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_correct_top
#  define bn_correct_top OPENSSL_MANGLER(bn_correct_top)
# endif
#else
# ifndef _bn_correct_top
#  define _bn_correct_top OPENSSL_MANGLER_ASM(bn_correct_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_div_fixed_top
#  define bn_div_fixed_top OPENSSL_MANGLER(bn_div_fixed_top)
# endif
#else
# ifndef _bn_div_fixed_top
#  define _bn_div_fixed_top OPENSSL_MANGLER_ASM(bn_div_fixed_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_div_words
#  define bn_div_words OPENSSL_MANGLER(bn_div_words)
# endif
#else
# ifndef _bn_div_words
#  define _bn_div_words OPENSSL_MANGLER_ASM(bn_div_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_expand2
#  define bn_expand2 OPENSSL_MANGLER(bn_expand2)
# endif
#else
# ifndef _bn_expand2
#  define _bn_expand2 OPENSSL_MANGLER_ASM(bn_expand2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_from_mont_fixed_top
#  define bn_from_mont_fixed_top OPENSSL_MANGLER(bn_from_mont_fixed_top)
# endif
#else
# ifndef _bn_from_mont_fixed_top
#  define _bn_from_mont_fixed_top OPENSSL_MANGLER_ASM(bn_from_mont_fixed_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_from_montgomery
#  define bn_from_montgomery OPENSSL_MANGLER(bn_from_montgomery)
# endif
#else
# ifndef _bn_from_montgomery
#  define _bn_from_montgomery OPENSSL_MANGLER_ASM(bn_from_montgomery)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_gather5
#  define bn_gather5 OPENSSL_MANGLER(bn_gather5)
# endif
#else
# ifndef _bn_gather5
#  define _bn_gather5 OPENSSL_MANGLER_ASM(bn_gather5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_get_bits5
#  define bn_get_bits5 OPENSSL_MANGLER(bn_get_bits5)
# endif
#else
# ifndef _bn_get_bits5
#  define _bn_get_bits5 OPENSSL_MANGLER_ASM(bn_get_bits5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_get_dmax
#  define bn_get_dmax OPENSSL_MANGLER(bn_get_dmax)
# endif
#else
# ifndef _bn_get_dmax
#  define _bn_get_dmax OPENSSL_MANGLER_ASM(bn_get_dmax)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_get_top
#  define bn_get_top OPENSSL_MANGLER(bn_get_top)
# endif
#else
# ifndef _bn_get_top
#  define _bn_get_top OPENSSL_MANGLER_ASM(bn_get_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_get_words
#  define bn_get_words OPENSSL_MANGLER(bn_get_words)
# endif
#else
# ifndef _bn_get_words
#  define _bn_get_words OPENSSL_MANGLER_ASM(bn_get_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_init
#  define bn_init OPENSSL_MANGLER(bn_init)
# endif
#else
# ifndef _bn_init
#  define _bn_init OPENSSL_MANGLER_ASM(bn_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_lshift_fixed_top
#  define bn_lshift_fixed_top OPENSSL_MANGLER(bn_lshift_fixed_top)
# endif
#else
# ifndef _bn_lshift_fixed_top
#  define _bn_lshift_fixed_top OPENSSL_MANGLER_ASM(bn_lshift_fixed_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mod_add_fixed_top
#  define bn_mod_add_fixed_top OPENSSL_MANGLER(bn_mod_add_fixed_top)
# endif
#else
# ifndef _bn_mod_add_fixed_top
#  define _bn_mod_add_fixed_top OPENSSL_MANGLER_ASM(bn_mod_add_fixed_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mod_sub_fixed_top
#  define bn_mod_sub_fixed_top OPENSSL_MANGLER(bn_mod_sub_fixed_top)
# endif
#else
# ifndef _bn_mod_sub_fixed_top
#  define _bn_mod_sub_fixed_top OPENSSL_MANGLER_ASM(bn_mod_sub_fixed_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_add_words
#  define bn_mul_add_words OPENSSL_MANGLER(bn_mul_add_words)
# endif
#else
# ifndef _bn_mul_add_words
#  define _bn_mul_add_words OPENSSL_MANGLER_ASM(bn_mul_add_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_comba4
#  define bn_mul_comba4 OPENSSL_MANGLER(bn_mul_comba4)
# endif
#else
# ifndef _bn_mul_comba4
#  define _bn_mul_comba4 OPENSSL_MANGLER_ASM(bn_mul_comba4)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_comba8
#  define bn_mul_comba8 OPENSSL_MANGLER(bn_mul_comba8)
# endif
#else
# ifndef _bn_mul_comba8
#  define _bn_mul_comba8 OPENSSL_MANGLER_ASM(bn_mul_comba8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_fixed_top
#  define bn_mul_fixed_top OPENSSL_MANGLER(bn_mul_fixed_top)
# endif
#else
# ifndef _bn_mul_fixed_top
#  define _bn_mul_fixed_top OPENSSL_MANGLER_ASM(bn_mul_fixed_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_low_normal
#  define bn_mul_low_normal OPENSSL_MANGLER(bn_mul_low_normal)
# endif
#else
# ifndef _bn_mul_low_normal
#  define _bn_mul_low_normal OPENSSL_MANGLER_ASM(bn_mul_low_normal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_low_recursive
#  define bn_mul_low_recursive OPENSSL_MANGLER(bn_mul_low_recursive)
# endif
#else
# ifndef _bn_mul_low_recursive
#  define _bn_mul_low_recursive OPENSSL_MANGLER_ASM(bn_mul_low_recursive)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_mont
#  define bn_mul_mont OPENSSL_MANGLER(bn_mul_mont)
# endif
#else
# ifndef _bn_mul_mont
#  define _bn_mul_mont OPENSSL_MANGLER_ASM(bn_mul_mont)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_mont_fixed_top
#  define bn_mul_mont_fixed_top OPENSSL_MANGLER(bn_mul_mont_fixed_top)
# endif
#else
# ifndef _bn_mul_mont_fixed_top
#  define _bn_mul_mont_fixed_top OPENSSL_MANGLER_ASM(bn_mul_mont_fixed_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_mont_gather5
#  define bn_mul_mont_gather5 OPENSSL_MANGLER(bn_mul_mont_gather5)
# endif
#else
# ifndef _bn_mul_mont_gather5
#  define _bn_mul_mont_gather5 OPENSSL_MANGLER_ASM(bn_mul_mont_gather5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_normal
#  define bn_mul_normal OPENSSL_MANGLER(bn_mul_normal)
# endif
#else
# ifndef _bn_mul_normal
#  define _bn_mul_normal OPENSSL_MANGLER_ASM(bn_mul_normal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_part_recursive
#  define bn_mul_part_recursive OPENSSL_MANGLER(bn_mul_part_recursive)
# endif
#else
# ifndef _bn_mul_part_recursive
#  define _bn_mul_part_recursive OPENSSL_MANGLER_ASM(bn_mul_part_recursive)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_recursive
#  define bn_mul_recursive OPENSSL_MANGLER(bn_mul_recursive)
# endif
#else
# ifndef _bn_mul_recursive
#  define _bn_mul_recursive OPENSSL_MANGLER_ASM(bn_mul_recursive)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_mul_words
#  define bn_mul_words OPENSSL_MANGLER(bn_mul_words)
# endif
#else
# ifndef _bn_mul_words
#  define _bn_mul_words OPENSSL_MANGLER_ASM(bn_mul_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_power5
#  define bn_power5 OPENSSL_MANGLER(bn_power5)
# endif
#else
# ifndef _bn_power5
#  define _bn_power5 OPENSSL_MANGLER_ASM(bn_power5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_rshift_fixed_top
#  define bn_rshift_fixed_top OPENSSL_MANGLER(bn_rshift_fixed_top)
# endif
#else
# ifndef _bn_rshift_fixed_top
#  define _bn_rshift_fixed_top OPENSSL_MANGLER_ASM(bn_rshift_fixed_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_scatter5
#  define bn_scatter5 OPENSSL_MANGLER(bn_scatter5)
# endif
#else
# ifndef _bn_scatter5
#  define _bn_scatter5 OPENSSL_MANGLER_ASM(bn_scatter5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_set_all_zero
#  define bn_set_all_zero OPENSSL_MANGLER(bn_set_all_zero)
# endif
#else
# ifndef _bn_set_all_zero
#  define _bn_set_all_zero OPENSSL_MANGLER_ASM(bn_set_all_zero)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_set_static_words
#  define bn_set_static_words OPENSSL_MANGLER(bn_set_static_words)
# endif
#else
# ifndef _bn_set_static_words
#  define _bn_set_static_words OPENSSL_MANGLER_ASM(bn_set_static_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_set_words
#  define bn_set_words OPENSSL_MANGLER(bn_set_words)
# endif
#else
# ifndef _bn_set_words
#  define _bn_set_words OPENSSL_MANGLER_ASM(bn_set_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_sqr8x_internal
#  define bn_sqr8x_internal OPENSSL_MANGLER(bn_sqr8x_internal)
# endif
#else
# ifndef _bn_sqr8x_internal
#  define _bn_sqr8x_internal OPENSSL_MANGLER_ASM(bn_sqr8x_internal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_sqr_comba4
#  define bn_sqr_comba4 OPENSSL_MANGLER(bn_sqr_comba4)
# endif
#else
# ifndef _bn_sqr_comba4
#  define _bn_sqr_comba4 OPENSSL_MANGLER_ASM(bn_sqr_comba4)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_sqr_comba8
#  define bn_sqr_comba8 OPENSSL_MANGLER(bn_sqr_comba8)
# endif
#else
# ifndef _bn_sqr_comba8
#  define _bn_sqr_comba8 OPENSSL_MANGLER_ASM(bn_sqr_comba8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_sqr_fixed_top
#  define bn_sqr_fixed_top OPENSSL_MANGLER(bn_sqr_fixed_top)
# endif
#else
# ifndef _bn_sqr_fixed_top
#  define _bn_sqr_fixed_top OPENSSL_MANGLER_ASM(bn_sqr_fixed_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_sqr_normal
#  define bn_sqr_normal OPENSSL_MANGLER(bn_sqr_normal)
# endif
#else
# ifndef _bn_sqr_normal
#  define _bn_sqr_normal OPENSSL_MANGLER_ASM(bn_sqr_normal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_sqr_recursive
#  define bn_sqr_recursive OPENSSL_MANGLER(bn_sqr_recursive)
# endif
#else
# ifndef _bn_sqr_recursive
#  define _bn_sqr_recursive OPENSSL_MANGLER_ASM(bn_sqr_recursive)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_sqr_words
#  define bn_sqr_words OPENSSL_MANGLER(bn_sqr_words)
# endif
#else
# ifndef _bn_sqr_words
#  define _bn_sqr_words OPENSSL_MANGLER_ASM(bn_sqr_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_sub_part_words
#  define bn_sub_part_words OPENSSL_MANGLER(bn_sub_part_words)
# endif
#else
# ifndef _bn_sub_part_words
#  define _bn_sub_part_words OPENSSL_MANGLER_ASM(bn_sub_part_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_sub_words
#  define bn_sub_words OPENSSL_MANGLER(bn_sub_words)
# endif
#else
# ifndef _bn_sub_words
#  define _bn_sub_words OPENSSL_MANGLER_ASM(bn_sub_words)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_to_mont_fixed_top
#  define bn_to_mont_fixed_top OPENSSL_MANGLER(bn_to_mont_fixed_top)
# endif
#else
# ifndef _bn_to_mont_fixed_top
#  define _bn_to_mont_fixed_top OPENSSL_MANGLER_ASM(bn_to_mont_fixed_top)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bn_wexpand
#  define bn_wexpand OPENSSL_MANGLER(bn_wexpand)
# endif
#else
# ifndef _bn_wexpand
#  define _bn_wexpand OPENSSL_MANGLER_ASM(bn_wexpand)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bread_conv
#  define bread_conv OPENSSL_MANGLER(bread_conv)
# endif
#else
# ifndef _bread_conv
#  define _bread_conv OPENSSL_MANGLER_ASM(bread_conv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bwrite_conv
#  define bwrite_conv OPENSSL_MANGLER(bwrite_conv)
# endif
#else
# ifndef _bwrite_conv
#  define _bwrite_conv OPENSSL_MANGLER_ASM(bwrite_conv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef bytes_to_cipher_list
#  define bytes_to_cipher_list OPENSSL_MANGLER(bytes_to_cipher_list)
# endif
#else
# ifndef _bytes_to_cipher_list
#  define _bytes_to_cipher_list OPENSSL_MANGLER_ASM(bytes_to_cipher_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef check_in_list
#  define check_in_list OPENSSL_MANGLER(check_in_list)
# endif
#else
# ifndef _check_in_list
#  define _check_in_list OPENSSL_MANGLER_ASM(check_in_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef conf_ssl_get
#  define conf_ssl_get OPENSSL_MANGLER(conf_ssl_get)
# endif
#else
# ifndef _conf_ssl_get
#  define _conf_ssl_get OPENSSL_MANGLER_ASM(conf_ssl_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef conf_ssl_get_cmd
#  define conf_ssl_get_cmd OPENSSL_MANGLER(conf_ssl_get_cmd)
# endif
#else
# ifndef _conf_ssl_get_cmd
#  define _conf_ssl_get_cmd OPENSSL_MANGLER_ASM(conf_ssl_get_cmd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef conf_ssl_name_find
#  define conf_ssl_name_find OPENSSL_MANGLER(conf_ssl_name_find)
# endif
#else
# ifndef _conf_ssl_name_find
#  define _conf_ssl_name_find OPENSSL_MANGLER_ASM(conf_ssl_name_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef construct_ca_names
#  define construct_ca_names OPENSSL_MANGLER(construct_ca_names)
# endif
#else
# ifndef _construct_ca_names
#  define _construct_ca_names OPENSSL_MANGLER_ASM(construct_ca_names)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef construct_key_exchange_tbs
#  define construct_key_exchange_tbs OPENSSL_MANGLER(construct_key_exchange_tbs)
# endif
#else
# ifndef _construct_key_exchange_tbs
#  define _construct_key_exchange_tbs OPENSSL_MANGLER_ASM(construct_key_exchange_tbs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef create_synthetic_message_hash
#  define create_synthetic_message_hash OPENSSL_MANGLER(create_synthetic_message_hash)
# endif
#else
# ifndef _create_synthetic_message_hash
#  define _create_synthetic_message_hash OPENSSL_MANGLER_ASM(create_synthetic_message_hash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef custom_ext_add
#  define custom_ext_add OPENSSL_MANGLER(custom_ext_add)
# endif
#else
# ifndef _custom_ext_add
#  define _custom_ext_add OPENSSL_MANGLER_ASM(custom_ext_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef custom_ext_find
#  define custom_ext_find OPENSSL_MANGLER(custom_ext_find)
# endif
#else
# ifndef _custom_ext_find
#  define _custom_ext_find OPENSSL_MANGLER_ASM(custom_ext_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef custom_ext_init
#  define custom_ext_init OPENSSL_MANGLER(custom_ext_init)
# endif
#else
# ifndef _custom_ext_init
#  define _custom_ext_init OPENSSL_MANGLER_ASM(custom_ext_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef custom_ext_parse
#  define custom_ext_parse OPENSSL_MANGLER(custom_ext_parse)
# endif
#else
# ifndef _custom_ext_parse
#  define _custom_ext_parse OPENSSL_MANGLER_ASM(custom_ext_parse)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef custom_exts_copy
#  define custom_exts_copy OPENSSL_MANGLER(custom_exts_copy)
# endif
#else
# ifndef _custom_exts_copy
#  define _custom_exts_copy OPENSSL_MANGLER_ASM(custom_exts_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef custom_exts_copy_flags
#  define custom_exts_copy_flags OPENSSL_MANGLER(custom_exts_copy_flags)
# endif
#else
# ifndef _custom_exts_copy_flags
#  define _custom_exts_copy_flags OPENSSL_MANGLER_ASM(custom_exts_copy_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef custom_exts_free
#  define custom_exts_free OPENSSL_MANGLER(custom_exts_free)
# endif
#else
# ifndef _custom_exts_free
#  define _custom_exts_free OPENSSL_MANGLER_ASM(custom_exts_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ACCESS_DESCRIPTION
#  define d2i_ACCESS_DESCRIPTION OPENSSL_MANGLER(d2i_ACCESS_DESCRIPTION)
# endif
#else
# ifndef _d2i_ACCESS_DESCRIPTION
#  define _d2i_ACCESS_DESCRIPTION OPENSSL_MANGLER_ASM(d2i_ACCESS_DESCRIPTION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ADMISSIONS
#  define d2i_ADMISSIONS OPENSSL_MANGLER(d2i_ADMISSIONS)
# endif
#else
# ifndef _d2i_ADMISSIONS
#  define _d2i_ADMISSIONS OPENSSL_MANGLER_ASM(d2i_ADMISSIONS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ADMISSION_SYNTAX
#  define d2i_ADMISSION_SYNTAX OPENSSL_MANGLER(d2i_ADMISSION_SYNTAX)
# endif
#else
# ifndef _d2i_ADMISSION_SYNTAX
#  define _d2i_ADMISSION_SYNTAX OPENSSL_MANGLER_ASM(d2i_ADMISSION_SYNTAX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASIdOrRange
#  define d2i_ASIdOrRange OPENSSL_MANGLER(d2i_ASIdOrRange)
# endif
#else
# ifndef _d2i_ASIdOrRange
#  define _d2i_ASIdOrRange OPENSSL_MANGLER_ASM(d2i_ASIdOrRange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASIdentifierChoice
#  define d2i_ASIdentifierChoice OPENSSL_MANGLER(d2i_ASIdentifierChoice)
# endif
#else
# ifndef _d2i_ASIdentifierChoice
#  define _d2i_ASIdentifierChoice OPENSSL_MANGLER_ASM(d2i_ASIdentifierChoice)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASIdentifiers
#  define d2i_ASIdentifiers OPENSSL_MANGLER(d2i_ASIdentifiers)
# endif
#else
# ifndef _d2i_ASIdentifiers
#  define _d2i_ASIdentifiers OPENSSL_MANGLER_ASM(d2i_ASIdentifiers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_BIT_STRING
#  define d2i_ASN1_BIT_STRING OPENSSL_MANGLER(d2i_ASN1_BIT_STRING)
# endif
#else
# ifndef _d2i_ASN1_BIT_STRING
#  define _d2i_ASN1_BIT_STRING OPENSSL_MANGLER_ASM(d2i_ASN1_BIT_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_BMPSTRING
#  define d2i_ASN1_BMPSTRING OPENSSL_MANGLER(d2i_ASN1_BMPSTRING)
# endif
#else
# ifndef _d2i_ASN1_BMPSTRING
#  define _d2i_ASN1_BMPSTRING OPENSSL_MANGLER_ASM(d2i_ASN1_BMPSTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_ENUMERATED
#  define d2i_ASN1_ENUMERATED OPENSSL_MANGLER(d2i_ASN1_ENUMERATED)
# endif
#else
# ifndef _d2i_ASN1_ENUMERATED
#  define _d2i_ASN1_ENUMERATED OPENSSL_MANGLER_ASM(d2i_ASN1_ENUMERATED)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_GENERALIZEDTIME
#  define d2i_ASN1_GENERALIZEDTIME OPENSSL_MANGLER(d2i_ASN1_GENERALIZEDTIME)
# endif
#else
# ifndef _d2i_ASN1_GENERALIZEDTIME
#  define _d2i_ASN1_GENERALIZEDTIME OPENSSL_MANGLER_ASM(d2i_ASN1_GENERALIZEDTIME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_GENERALSTRING
#  define d2i_ASN1_GENERALSTRING OPENSSL_MANGLER(d2i_ASN1_GENERALSTRING)
# endif
#else
# ifndef _d2i_ASN1_GENERALSTRING
#  define _d2i_ASN1_GENERALSTRING OPENSSL_MANGLER_ASM(d2i_ASN1_GENERALSTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_IA5STRING
#  define d2i_ASN1_IA5STRING OPENSSL_MANGLER(d2i_ASN1_IA5STRING)
# endif
#else
# ifndef _d2i_ASN1_IA5STRING
#  define _d2i_ASN1_IA5STRING OPENSSL_MANGLER_ASM(d2i_ASN1_IA5STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_INTEGER
#  define d2i_ASN1_INTEGER OPENSSL_MANGLER(d2i_ASN1_INTEGER)
# endif
#else
# ifndef _d2i_ASN1_INTEGER
#  define _d2i_ASN1_INTEGER OPENSSL_MANGLER_ASM(d2i_ASN1_INTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_NULL
#  define d2i_ASN1_NULL OPENSSL_MANGLER(d2i_ASN1_NULL)
# endif
#else
# ifndef _d2i_ASN1_NULL
#  define _d2i_ASN1_NULL OPENSSL_MANGLER_ASM(d2i_ASN1_NULL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_OBJECT
#  define d2i_ASN1_OBJECT OPENSSL_MANGLER(d2i_ASN1_OBJECT)
# endif
#else
# ifndef _d2i_ASN1_OBJECT
#  define _d2i_ASN1_OBJECT OPENSSL_MANGLER_ASM(d2i_ASN1_OBJECT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_OCTET_STRING
#  define d2i_ASN1_OCTET_STRING OPENSSL_MANGLER(d2i_ASN1_OCTET_STRING)
# endif
#else
# ifndef _d2i_ASN1_OCTET_STRING
#  define _d2i_ASN1_OCTET_STRING OPENSSL_MANGLER_ASM(d2i_ASN1_OCTET_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_PRINTABLE
#  define d2i_ASN1_PRINTABLE OPENSSL_MANGLER(d2i_ASN1_PRINTABLE)
# endif
#else
# ifndef _d2i_ASN1_PRINTABLE
#  define _d2i_ASN1_PRINTABLE OPENSSL_MANGLER_ASM(d2i_ASN1_PRINTABLE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_PRINTABLESTRING
#  define d2i_ASN1_PRINTABLESTRING OPENSSL_MANGLER(d2i_ASN1_PRINTABLESTRING)
# endif
#else
# ifndef _d2i_ASN1_PRINTABLESTRING
#  define _d2i_ASN1_PRINTABLESTRING OPENSSL_MANGLER_ASM(d2i_ASN1_PRINTABLESTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_SEQUENCE_ANY
#  define d2i_ASN1_SEQUENCE_ANY OPENSSL_MANGLER(d2i_ASN1_SEQUENCE_ANY)
# endif
#else
# ifndef _d2i_ASN1_SEQUENCE_ANY
#  define _d2i_ASN1_SEQUENCE_ANY OPENSSL_MANGLER_ASM(d2i_ASN1_SEQUENCE_ANY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_SET_ANY
#  define d2i_ASN1_SET_ANY OPENSSL_MANGLER(d2i_ASN1_SET_ANY)
# endif
#else
# ifndef _d2i_ASN1_SET_ANY
#  define _d2i_ASN1_SET_ANY OPENSSL_MANGLER_ASM(d2i_ASN1_SET_ANY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_T61STRING
#  define d2i_ASN1_T61STRING OPENSSL_MANGLER(d2i_ASN1_T61STRING)
# endif
#else
# ifndef _d2i_ASN1_T61STRING
#  define _d2i_ASN1_T61STRING OPENSSL_MANGLER_ASM(d2i_ASN1_T61STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_TIME
#  define d2i_ASN1_TIME OPENSSL_MANGLER(d2i_ASN1_TIME)
# endif
#else
# ifndef _d2i_ASN1_TIME
#  define _d2i_ASN1_TIME OPENSSL_MANGLER_ASM(d2i_ASN1_TIME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_TYPE
#  define d2i_ASN1_TYPE OPENSSL_MANGLER(d2i_ASN1_TYPE)
# endif
#else
# ifndef _d2i_ASN1_TYPE
#  define _d2i_ASN1_TYPE OPENSSL_MANGLER_ASM(d2i_ASN1_TYPE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_UINTEGER
#  define d2i_ASN1_UINTEGER OPENSSL_MANGLER(d2i_ASN1_UINTEGER)
# endif
#else
# ifndef _d2i_ASN1_UINTEGER
#  define _d2i_ASN1_UINTEGER OPENSSL_MANGLER_ASM(d2i_ASN1_UINTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_UNIVERSALSTRING
#  define d2i_ASN1_UNIVERSALSTRING OPENSSL_MANGLER(d2i_ASN1_UNIVERSALSTRING)
# endif
#else
# ifndef _d2i_ASN1_UNIVERSALSTRING
#  define _d2i_ASN1_UNIVERSALSTRING OPENSSL_MANGLER_ASM(d2i_ASN1_UNIVERSALSTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_UTCTIME
#  define d2i_ASN1_UTCTIME OPENSSL_MANGLER(d2i_ASN1_UTCTIME)
# endif
#else
# ifndef _d2i_ASN1_UTCTIME
#  define _d2i_ASN1_UTCTIME OPENSSL_MANGLER_ASM(d2i_ASN1_UTCTIME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_UTF8STRING
#  define d2i_ASN1_UTF8STRING OPENSSL_MANGLER(d2i_ASN1_UTF8STRING)
# endif
#else
# ifndef _d2i_ASN1_UTF8STRING
#  define _d2i_ASN1_UTF8STRING OPENSSL_MANGLER_ASM(d2i_ASN1_UTF8STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASN1_VISIBLESTRING
#  define d2i_ASN1_VISIBLESTRING OPENSSL_MANGLER(d2i_ASN1_VISIBLESTRING)
# endif
#else
# ifndef _d2i_ASN1_VISIBLESTRING
#  define _d2i_ASN1_VISIBLESTRING OPENSSL_MANGLER_ASM(d2i_ASN1_VISIBLESTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ASRange
#  define d2i_ASRange OPENSSL_MANGLER(d2i_ASRange)
# endif
#else
# ifndef _d2i_ASRange
#  define _d2i_ASRange OPENSSL_MANGLER_ASM(d2i_ASRange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_AUTHORITY_INFO_ACCESS
#  define d2i_AUTHORITY_INFO_ACCESS OPENSSL_MANGLER(d2i_AUTHORITY_INFO_ACCESS)
# endif
#else
# ifndef _d2i_AUTHORITY_INFO_ACCESS
#  define _d2i_AUTHORITY_INFO_ACCESS OPENSSL_MANGLER_ASM(d2i_AUTHORITY_INFO_ACCESS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_AUTHORITY_KEYID
#  define d2i_AUTHORITY_KEYID OPENSSL_MANGLER(d2i_AUTHORITY_KEYID)
# endif
#else
# ifndef _d2i_AUTHORITY_KEYID
#  define _d2i_AUTHORITY_KEYID OPENSSL_MANGLER_ASM(d2i_AUTHORITY_KEYID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_AutoPrivateKey
#  define d2i_AutoPrivateKey OPENSSL_MANGLER(d2i_AutoPrivateKey)
# endif
#else
# ifndef _d2i_AutoPrivateKey
#  define _d2i_AutoPrivateKey OPENSSL_MANGLER_ASM(d2i_AutoPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_AutoPrivateKey_ex
#  define d2i_AutoPrivateKey_ex OPENSSL_MANGLER(d2i_AutoPrivateKey_ex)
# endif
#else
# ifndef _d2i_AutoPrivateKey_ex
#  define _d2i_AutoPrivateKey_ex OPENSSL_MANGLER_ASM(d2i_AutoPrivateKey_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_BASIC_CONSTRAINTS
#  define d2i_BASIC_CONSTRAINTS OPENSSL_MANGLER(d2i_BASIC_CONSTRAINTS)
# endif
#else
# ifndef _d2i_BASIC_CONSTRAINTS
#  define _d2i_BASIC_CONSTRAINTS OPENSSL_MANGLER_ASM(d2i_BASIC_CONSTRAINTS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_CERTIFICATEPOLICIES
#  define d2i_CERTIFICATEPOLICIES OPENSSL_MANGLER(d2i_CERTIFICATEPOLICIES)
# endif
#else
# ifndef _d2i_CERTIFICATEPOLICIES
#  define _d2i_CERTIFICATEPOLICIES OPENSSL_MANGLER_ASM(d2i_CERTIFICATEPOLICIES)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_CMS_ContentInfo
#  define d2i_CMS_ContentInfo OPENSSL_MANGLER(d2i_CMS_ContentInfo)
# endif
#else
# ifndef _d2i_CMS_ContentInfo
#  define _d2i_CMS_ContentInfo OPENSSL_MANGLER_ASM(d2i_CMS_ContentInfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_CMS_ReceiptRequest
#  define d2i_CMS_ReceiptRequest OPENSSL_MANGLER(d2i_CMS_ReceiptRequest)
# endif
#else
# ifndef _d2i_CMS_ReceiptRequest
#  define _d2i_CMS_ReceiptRequest OPENSSL_MANGLER_ASM(d2i_CMS_ReceiptRequest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_CMS_bio
#  define d2i_CMS_bio OPENSSL_MANGLER(d2i_CMS_bio)
# endif
#else
# ifndef _d2i_CMS_bio
#  define _d2i_CMS_bio OPENSSL_MANGLER_ASM(d2i_CMS_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_CRL_DIST_POINTS
#  define d2i_CRL_DIST_POINTS OPENSSL_MANGLER(d2i_CRL_DIST_POINTS)
# endif
#else
# ifndef _d2i_CRL_DIST_POINTS
#  define _d2i_CRL_DIST_POINTS OPENSSL_MANGLER_ASM(d2i_CRL_DIST_POINTS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DHparams
#  define d2i_DHparams OPENSSL_MANGLER(d2i_DHparams)
# endif
#else
# ifndef _d2i_DHparams
#  define _d2i_DHparams OPENSSL_MANGLER_ASM(d2i_DHparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DHxparams
#  define d2i_DHxparams OPENSSL_MANGLER(d2i_DHxparams)
# endif
#else
# ifndef _d2i_DHxparams
#  define _d2i_DHxparams OPENSSL_MANGLER_ASM(d2i_DHxparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DIRECTORYSTRING
#  define d2i_DIRECTORYSTRING OPENSSL_MANGLER(d2i_DIRECTORYSTRING)
# endif
#else
# ifndef _d2i_DIRECTORYSTRING
#  define _d2i_DIRECTORYSTRING OPENSSL_MANGLER_ASM(d2i_DIRECTORYSTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DISPLAYTEXT
#  define d2i_DISPLAYTEXT OPENSSL_MANGLER(d2i_DISPLAYTEXT)
# endif
#else
# ifndef _d2i_DISPLAYTEXT
#  define _d2i_DISPLAYTEXT OPENSSL_MANGLER_ASM(d2i_DISPLAYTEXT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DIST_POINT
#  define d2i_DIST_POINT OPENSSL_MANGLER(d2i_DIST_POINT)
# endif
#else
# ifndef _d2i_DIST_POINT
#  define _d2i_DIST_POINT OPENSSL_MANGLER_ASM(d2i_DIST_POINT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DIST_POINT_NAME
#  define d2i_DIST_POINT_NAME OPENSSL_MANGLER(d2i_DIST_POINT_NAME)
# endif
#else
# ifndef _d2i_DIST_POINT_NAME
#  define _d2i_DIST_POINT_NAME OPENSSL_MANGLER_ASM(d2i_DIST_POINT_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DSAPrivateKey
#  define d2i_DSAPrivateKey OPENSSL_MANGLER(d2i_DSAPrivateKey)
# endif
#else
# ifndef _d2i_DSAPrivateKey
#  define _d2i_DSAPrivateKey OPENSSL_MANGLER_ASM(d2i_DSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DSAPrivateKey_bio
#  define d2i_DSAPrivateKey_bio OPENSSL_MANGLER(d2i_DSAPrivateKey_bio)
# endif
#else
# ifndef _d2i_DSAPrivateKey_bio
#  define _d2i_DSAPrivateKey_bio OPENSSL_MANGLER_ASM(d2i_DSAPrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DSAPrivateKey_fp
#  define d2i_DSAPrivateKey_fp OPENSSL_MANGLER(d2i_DSAPrivateKey_fp)
# endif
#else
# ifndef _d2i_DSAPrivateKey_fp
#  define _d2i_DSAPrivateKey_fp OPENSSL_MANGLER_ASM(d2i_DSAPrivateKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DSAPublicKey
#  define d2i_DSAPublicKey OPENSSL_MANGLER(d2i_DSAPublicKey)
# endif
#else
# ifndef _d2i_DSAPublicKey
#  define _d2i_DSAPublicKey OPENSSL_MANGLER_ASM(d2i_DSAPublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DSA_PUBKEY
#  define d2i_DSA_PUBKEY OPENSSL_MANGLER(d2i_DSA_PUBKEY)
# endif
#else
# ifndef _d2i_DSA_PUBKEY
#  define _d2i_DSA_PUBKEY OPENSSL_MANGLER_ASM(d2i_DSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DSA_PUBKEY_bio
#  define d2i_DSA_PUBKEY_bio OPENSSL_MANGLER(d2i_DSA_PUBKEY_bio)
# endif
#else
# ifndef _d2i_DSA_PUBKEY_bio
#  define _d2i_DSA_PUBKEY_bio OPENSSL_MANGLER_ASM(d2i_DSA_PUBKEY_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DSA_PUBKEY_fp
#  define d2i_DSA_PUBKEY_fp OPENSSL_MANGLER(d2i_DSA_PUBKEY_fp)
# endif
#else
# ifndef _d2i_DSA_PUBKEY_fp
#  define _d2i_DSA_PUBKEY_fp OPENSSL_MANGLER_ASM(d2i_DSA_PUBKEY_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DSA_SIG
#  define d2i_DSA_SIG OPENSSL_MANGLER(d2i_DSA_SIG)
# endif
#else
# ifndef _d2i_DSA_SIG
#  define _d2i_DSA_SIG OPENSSL_MANGLER_ASM(d2i_DSA_SIG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_DSAparams
#  define d2i_DSAparams OPENSSL_MANGLER(d2i_DSAparams)
# endif
#else
# ifndef _d2i_DSAparams
#  define _d2i_DSAparams OPENSSL_MANGLER_ASM(d2i_DSAparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ECDSA_SIG
#  define d2i_ECDSA_SIG OPENSSL_MANGLER(d2i_ECDSA_SIG)
# endif
#else
# ifndef _d2i_ECDSA_SIG
#  define _d2i_ECDSA_SIG OPENSSL_MANGLER_ASM(d2i_ECDSA_SIG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ECPKPARAMETERS
#  define d2i_ECPKPARAMETERS OPENSSL_MANGLER(d2i_ECPKPARAMETERS)
# endif
#else
# ifndef _d2i_ECPKPARAMETERS
#  define _d2i_ECPKPARAMETERS OPENSSL_MANGLER_ASM(d2i_ECPKPARAMETERS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ECPKParameters
#  define d2i_ECPKParameters OPENSSL_MANGLER(d2i_ECPKParameters)
# endif
#else
# ifndef _d2i_ECPKParameters
#  define _d2i_ECPKParameters OPENSSL_MANGLER_ASM(d2i_ECPKParameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ECParameters
#  define d2i_ECParameters OPENSSL_MANGLER(d2i_ECParameters)
# endif
#else
# ifndef _d2i_ECParameters
#  define _d2i_ECParameters OPENSSL_MANGLER_ASM(d2i_ECParameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ECPrivateKey
#  define d2i_ECPrivateKey OPENSSL_MANGLER(d2i_ECPrivateKey)
# endif
#else
# ifndef _d2i_ECPrivateKey
#  define _d2i_ECPrivateKey OPENSSL_MANGLER_ASM(d2i_ECPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ECPrivateKey_bio
#  define d2i_ECPrivateKey_bio OPENSSL_MANGLER(d2i_ECPrivateKey_bio)
# endif
#else
# ifndef _d2i_ECPrivateKey_bio
#  define _d2i_ECPrivateKey_bio OPENSSL_MANGLER_ASM(d2i_ECPrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ECPrivateKey_fp
#  define d2i_ECPrivateKey_fp OPENSSL_MANGLER(d2i_ECPrivateKey_fp)
# endif
#else
# ifndef _d2i_ECPrivateKey_fp
#  define _d2i_ECPrivateKey_fp OPENSSL_MANGLER_ASM(d2i_ECPrivateKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_EC_PRIVATEKEY
#  define d2i_EC_PRIVATEKEY OPENSSL_MANGLER(d2i_EC_PRIVATEKEY)
# endif
#else
# ifndef _d2i_EC_PRIVATEKEY
#  define _d2i_EC_PRIVATEKEY OPENSSL_MANGLER_ASM(d2i_EC_PRIVATEKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_EC_PUBKEY
#  define d2i_EC_PUBKEY OPENSSL_MANGLER(d2i_EC_PUBKEY)
# endif
#else
# ifndef _d2i_EC_PUBKEY
#  define _d2i_EC_PUBKEY OPENSSL_MANGLER_ASM(d2i_EC_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_EC_PUBKEY_bio
#  define d2i_EC_PUBKEY_bio OPENSSL_MANGLER(d2i_EC_PUBKEY_bio)
# endif
#else
# ifndef _d2i_EC_PUBKEY_bio
#  define _d2i_EC_PUBKEY_bio OPENSSL_MANGLER_ASM(d2i_EC_PUBKEY_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_EC_PUBKEY_fp
#  define d2i_EC_PUBKEY_fp OPENSSL_MANGLER(d2i_EC_PUBKEY_fp)
# endif
#else
# ifndef _d2i_EC_PUBKEY_fp
#  define _d2i_EC_PUBKEY_fp OPENSSL_MANGLER_ASM(d2i_EC_PUBKEY_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_EDIPARTYNAME
#  define d2i_EDIPARTYNAME OPENSSL_MANGLER(d2i_EDIPARTYNAME)
# endif
#else
# ifndef _d2i_EDIPARTYNAME
#  define _d2i_EDIPARTYNAME OPENSSL_MANGLER_ASM(d2i_EDIPARTYNAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ESS_CERT_ID
#  define d2i_ESS_CERT_ID OPENSSL_MANGLER(d2i_ESS_CERT_ID)
# endif
#else
# ifndef _d2i_ESS_CERT_ID
#  define _d2i_ESS_CERT_ID OPENSSL_MANGLER_ASM(d2i_ESS_CERT_ID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ESS_CERT_ID_V2
#  define d2i_ESS_CERT_ID_V2 OPENSSL_MANGLER(d2i_ESS_CERT_ID_V2)
# endif
#else
# ifndef _d2i_ESS_CERT_ID_V2
#  define _d2i_ESS_CERT_ID_V2 OPENSSL_MANGLER_ASM(d2i_ESS_CERT_ID_V2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ESS_ISSUER_SERIAL
#  define d2i_ESS_ISSUER_SERIAL OPENSSL_MANGLER(d2i_ESS_ISSUER_SERIAL)
# endif
#else
# ifndef _d2i_ESS_ISSUER_SERIAL
#  define _d2i_ESS_ISSUER_SERIAL OPENSSL_MANGLER_ASM(d2i_ESS_ISSUER_SERIAL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ESS_SIGNING_CERT
#  define d2i_ESS_SIGNING_CERT OPENSSL_MANGLER(d2i_ESS_SIGNING_CERT)
# endif
#else
# ifndef _d2i_ESS_SIGNING_CERT
#  define _d2i_ESS_SIGNING_CERT OPENSSL_MANGLER_ASM(d2i_ESS_SIGNING_CERT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ESS_SIGNING_CERT_V2
#  define d2i_ESS_SIGNING_CERT_V2 OPENSSL_MANGLER(d2i_ESS_SIGNING_CERT_V2)
# endif
#else
# ifndef _d2i_ESS_SIGNING_CERT_V2
#  define _d2i_ESS_SIGNING_CERT_V2 OPENSSL_MANGLER_ASM(d2i_ESS_SIGNING_CERT_V2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_EXTENDED_KEY_USAGE
#  define d2i_EXTENDED_KEY_USAGE OPENSSL_MANGLER(d2i_EXTENDED_KEY_USAGE)
# endif
#else
# ifndef _d2i_EXTENDED_KEY_USAGE
#  define _d2i_EXTENDED_KEY_USAGE OPENSSL_MANGLER_ASM(d2i_EXTENDED_KEY_USAGE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_GENERAL_NAME
#  define d2i_GENERAL_NAME OPENSSL_MANGLER(d2i_GENERAL_NAME)
# endif
#else
# ifndef _d2i_GENERAL_NAME
#  define _d2i_GENERAL_NAME OPENSSL_MANGLER_ASM(d2i_GENERAL_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_GENERAL_NAMES
#  define d2i_GENERAL_NAMES OPENSSL_MANGLER(d2i_GENERAL_NAMES)
# endif
#else
# ifndef _d2i_GENERAL_NAMES
#  define _d2i_GENERAL_NAMES OPENSSL_MANGLER_ASM(d2i_GENERAL_NAMES)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_GOST_KX_MESSAGE
#  define d2i_GOST_KX_MESSAGE OPENSSL_MANGLER(d2i_GOST_KX_MESSAGE)
# endif
#else
# ifndef _d2i_GOST_KX_MESSAGE
#  define _d2i_GOST_KX_MESSAGE OPENSSL_MANGLER_ASM(d2i_GOST_KX_MESSAGE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_IPAddressChoice
#  define d2i_IPAddressChoice OPENSSL_MANGLER(d2i_IPAddressChoice)
# endif
#else
# ifndef _d2i_IPAddressChoice
#  define _d2i_IPAddressChoice OPENSSL_MANGLER_ASM(d2i_IPAddressChoice)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_IPAddressFamily
#  define d2i_IPAddressFamily OPENSSL_MANGLER(d2i_IPAddressFamily)
# endif
#else
# ifndef _d2i_IPAddressFamily
#  define _d2i_IPAddressFamily OPENSSL_MANGLER_ASM(d2i_IPAddressFamily)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_IPAddressOrRange
#  define d2i_IPAddressOrRange OPENSSL_MANGLER(d2i_IPAddressOrRange)
# endif
#else
# ifndef _d2i_IPAddressOrRange
#  define _d2i_IPAddressOrRange OPENSSL_MANGLER_ASM(d2i_IPAddressOrRange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_IPAddressRange
#  define d2i_IPAddressRange OPENSSL_MANGLER(d2i_IPAddressRange)
# endif
#else
# ifndef _d2i_IPAddressRange
#  define _d2i_IPAddressRange OPENSSL_MANGLER_ASM(d2i_IPAddressRange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ISSUER_SIGN_TOOL
#  define d2i_ISSUER_SIGN_TOOL OPENSSL_MANGLER(d2i_ISSUER_SIGN_TOOL)
# endif
#else
# ifndef _d2i_ISSUER_SIGN_TOOL
#  define _d2i_ISSUER_SIGN_TOOL OPENSSL_MANGLER_ASM(d2i_ISSUER_SIGN_TOOL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_ISSUING_DIST_POINT
#  define d2i_ISSUING_DIST_POINT OPENSSL_MANGLER(d2i_ISSUING_DIST_POINT)
# endif
#else
# ifndef _d2i_ISSUING_DIST_POINT
#  define _d2i_ISSUING_DIST_POINT OPENSSL_MANGLER_ASM(d2i_ISSUING_DIST_POINT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_NAMING_AUTHORITY
#  define d2i_NAMING_AUTHORITY OPENSSL_MANGLER(d2i_NAMING_AUTHORITY)
# endif
#else
# ifndef _d2i_NAMING_AUTHORITY
#  define _d2i_NAMING_AUTHORITY OPENSSL_MANGLER_ASM(d2i_NAMING_AUTHORITY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_NETSCAPE_CERT_SEQUENCE
#  define d2i_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER(d2i_NETSCAPE_CERT_SEQUENCE)
# endif
#else
# ifndef _d2i_NETSCAPE_CERT_SEQUENCE
#  define _d2i_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER_ASM(d2i_NETSCAPE_CERT_SEQUENCE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_NETSCAPE_ENCRYPTED_PKEY
#  define d2i_NETSCAPE_ENCRYPTED_PKEY OPENSSL_MANGLER(d2i_NETSCAPE_ENCRYPTED_PKEY)
# endif
#else
# ifndef _d2i_NETSCAPE_ENCRYPTED_PKEY
#  define _d2i_NETSCAPE_ENCRYPTED_PKEY OPENSSL_MANGLER_ASM(d2i_NETSCAPE_ENCRYPTED_PKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_NETSCAPE_PKEY
#  define d2i_NETSCAPE_PKEY OPENSSL_MANGLER(d2i_NETSCAPE_PKEY)
# endif
#else
# ifndef _d2i_NETSCAPE_PKEY
#  define _d2i_NETSCAPE_PKEY OPENSSL_MANGLER_ASM(d2i_NETSCAPE_PKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_NETSCAPE_SPKAC
#  define d2i_NETSCAPE_SPKAC OPENSSL_MANGLER(d2i_NETSCAPE_SPKAC)
# endif
#else
# ifndef _d2i_NETSCAPE_SPKAC
#  define _d2i_NETSCAPE_SPKAC OPENSSL_MANGLER_ASM(d2i_NETSCAPE_SPKAC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_NETSCAPE_SPKI
#  define d2i_NETSCAPE_SPKI OPENSSL_MANGLER(d2i_NETSCAPE_SPKI)
# endif
#else
# ifndef _d2i_NETSCAPE_SPKI
#  define _d2i_NETSCAPE_SPKI OPENSSL_MANGLER_ASM(d2i_NETSCAPE_SPKI)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_NOTICEREF
#  define d2i_NOTICEREF OPENSSL_MANGLER(d2i_NOTICEREF)
# endif
#else
# ifndef _d2i_NOTICEREF
#  define _d2i_NOTICEREF OPENSSL_MANGLER_ASM(d2i_NOTICEREF)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_BASICRESP
#  define d2i_OCSP_BASICRESP OPENSSL_MANGLER(d2i_OCSP_BASICRESP)
# endif
#else
# ifndef _d2i_OCSP_BASICRESP
#  define _d2i_OCSP_BASICRESP OPENSSL_MANGLER_ASM(d2i_OCSP_BASICRESP)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_CERTID
#  define d2i_OCSP_CERTID OPENSSL_MANGLER(d2i_OCSP_CERTID)
# endif
#else
# ifndef _d2i_OCSP_CERTID
#  define _d2i_OCSP_CERTID OPENSSL_MANGLER_ASM(d2i_OCSP_CERTID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_CERTSTATUS
#  define d2i_OCSP_CERTSTATUS OPENSSL_MANGLER(d2i_OCSP_CERTSTATUS)
# endif
#else
# ifndef _d2i_OCSP_CERTSTATUS
#  define _d2i_OCSP_CERTSTATUS OPENSSL_MANGLER_ASM(d2i_OCSP_CERTSTATUS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_CRLID
#  define d2i_OCSP_CRLID OPENSSL_MANGLER(d2i_OCSP_CRLID)
# endif
#else
# ifndef _d2i_OCSP_CRLID
#  define _d2i_OCSP_CRLID OPENSSL_MANGLER_ASM(d2i_OCSP_CRLID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_ONEREQ
#  define d2i_OCSP_ONEREQ OPENSSL_MANGLER(d2i_OCSP_ONEREQ)
# endif
#else
# ifndef _d2i_OCSP_ONEREQ
#  define _d2i_OCSP_ONEREQ OPENSSL_MANGLER_ASM(d2i_OCSP_ONEREQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_REQINFO
#  define d2i_OCSP_REQINFO OPENSSL_MANGLER(d2i_OCSP_REQINFO)
# endif
#else
# ifndef _d2i_OCSP_REQINFO
#  define _d2i_OCSP_REQINFO OPENSSL_MANGLER_ASM(d2i_OCSP_REQINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_REQUEST
#  define d2i_OCSP_REQUEST OPENSSL_MANGLER(d2i_OCSP_REQUEST)
# endif
#else
# ifndef _d2i_OCSP_REQUEST
#  define _d2i_OCSP_REQUEST OPENSSL_MANGLER_ASM(d2i_OCSP_REQUEST)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_RESPBYTES
#  define d2i_OCSP_RESPBYTES OPENSSL_MANGLER(d2i_OCSP_RESPBYTES)
# endif
#else
# ifndef _d2i_OCSP_RESPBYTES
#  define _d2i_OCSP_RESPBYTES OPENSSL_MANGLER_ASM(d2i_OCSP_RESPBYTES)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_RESPDATA
#  define d2i_OCSP_RESPDATA OPENSSL_MANGLER(d2i_OCSP_RESPDATA)
# endif
#else
# ifndef _d2i_OCSP_RESPDATA
#  define _d2i_OCSP_RESPDATA OPENSSL_MANGLER_ASM(d2i_OCSP_RESPDATA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_RESPID
#  define d2i_OCSP_RESPID OPENSSL_MANGLER(d2i_OCSP_RESPID)
# endif
#else
# ifndef _d2i_OCSP_RESPID
#  define _d2i_OCSP_RESPID OPENSSL_MANGLER_ASM(d2i_OCSP_RESPID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_RESPONSE
#  define d2i_OCSP_RESPONSE OPENSSL_MANGLER(d2i_OCSP_RESPONSE)
# endif
#else
# ifndef _d2i_OCSP_RESPONSE
#  define _d2i_OCSP_RESPONSE OPENSSL_MANGLER_ASM(d2i_OCSP_RESPONSE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_REVOKEDINFO
#  define d2i_OCSP_REVOKEDINFO OPENSSL_MANGLER(d2i_OCSP_REVOKEDINFO)
# endif
#else
# ifndef _d2i_OCSP_REVOKEDINFO
#  define _d2i_OCSP_REVOKEDINFO OPENSSL_MANGLER_ASM(d2i_OCSP_REVOKEDINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_SERVICELOC
#  define d2i_OCSP_SERVICELOC OPENSSL_MANGLER(d2i_OCSP_SERVICELOC)
# endif
#else
# ifndef _d2i_OCSP_SERVICELOC
#  define _d2i_OCSP_SERVICELOC OPENSSL_MANGLER_ASM(d2i_OCSP_SERVICELOC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_SIGNATURE
#  define d2i_OCSP_SIGNATURE OPENSSL_MANGLER(d2i_OCSP_SIGNATURE)
# endif
#else
# ifndef _d2i_OCSP_SIGNATURE
#  define _d2i_OCSP_SIGNATURE OPENSSL_MANGLER_ASM(d2i_OCSP_SIGNATURE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OCSP_SINGLERESP
#  define d2i_OCSP_SINGLERESP OPENSSL_MANGLER(d2i_OCSP_SINGLERESP)
# endif
#else
# ifndef _d2i_OCSP_SINGLERESP
#  define _d2i_OCSP_SINGLERESP OPENSSL_MANGLER_ASM(d2i_OCSP_SINGLERESP)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_CAKEYUPDANNCONTENT
#  define d2i_OSSL_CMP_CAKEYUPDANNCONTENT OPENSSL_MANGLER(d2i_OSSL_CMP_CAKEYUPDANNCONTENT)
# endif
#else
# ifndef _d2i_OSSL_CMP_CAKEYUPDANNCONTENT
#  define _d2i_OSSL_CMP_CAKEYUPDANNCONTENT OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_CAKEYUPDANNCONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_CERTIFIEDKEYPAIR
#  define d2i_OSSL_CMP_CERTIFIEDKEYPAIR OPENSSL_MANGLER(d2i_OSSL_CMP_CERTIFIEDKEYPAIR)
# endif
#else
# ifndef _d2i_OSSL_CMP_CERTIFIEDKEYPAIR
#  define _d2i_OSSL_CMP_CERTIFIEDKEYPAIR OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_CERTIFIEDKEYPAIR)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_CERTORENCCERT
#  define d2i_OSSL_CMP_CERTORENCCERT OPENSSL_MANGLER(d2i_OSSL_CMP_CERTORENCCERT)
# endif
#else
# ifndef _d2i_OSSL_CMP_CERTORENCCERT
#  define _d2i_OSSL_CMP_CERTORENCCERT OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_CERTORENCCERT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_CERTREPMESSAGE
#  define d2i_OSSL_CMP_CERTREPMESSAGE OPENSSL_MANGLER(d2i_OSSL_CMP_CERTREPMESSAGE)
# endif
#else
# ifndef _d2i_OSSL_CMP_CERTREPMESSAGE
#  define _d2i_OSSL_CMP_CERTREPMESSAGE OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_CERTREPMESSAGE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_CERTRESPONSE
#  define d2i_OSSL_CMP_CERTRESPONSE OPENSSL_MANGLER(d2i_OSSL_CMP_CERTRESPONSE)
# endif
#else
# ifndef _d2i_OSSL_CMP_CERTRESPONSE
#  define _d2i_OSSL_CMP_CERTRESPONSE OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_CERTRESPONSE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_CERTSTATUS
#  define d2i_OSSL_CMP_CERTSTATUS OPENSSL_MANGLER(d2i_OSSL_CMP_CERTSTATUS)
# endif
#else
# ifndef _d2i_OSSL_CMP_CERTSTATUS
#  define _d2i_OSSL_CMP_CERTSTATUS OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_CERTSTATUS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_CHALLENGE
#  define d2i_OSSL_CMP_CHALLENGE OPENSSL_MANGLER(d2i_OSSL_CMP_CHALLENGE)
# endif
#else
# ifndef _d2i_OSSL_CMP_CHALLENGE
#  define _d2i_OSSL_CMP_CHALLENGE OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_CHALLENGE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_ERRORMSGCONTENT
#  define d2i_OSSL_CMP_ERRORMSGCONTENT OPENSSL_MANGLER(d2i_OSSL_CMP_ERRORMSGCONTENT)
# endif
#else
# ifndef _d2i_OSSL_CMP_ERRORMSGCONTENT
#  define _d2i_OSSL_CMP_ERRORMSGCONTENT OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_ERRORMSGCONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_ITAV
#  define d2i_OSSL_CMP_ITAV OPENSSL_MANGLER(d2i_OSSL_CMP_ITAV)
# endif
#else
# ifndef _d2i_OSSL_CMP_ITAV
#  define _d2i_OSSL_CMP_ITAV OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_ITAV)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_KEYRECREPCONTENT
#  define d2i_OSSL_CMP_KEYRECREPCONTENT OPENSSL_MANGLER(d2i_OSSL_CMP_KEYRECREPCONTENT)
# endif
#else
# ifndef _d2i_OSSL_CMP_KEYRECREPCONTENT
#  define _d2i_OSSL_CMP_KEYRECREPCONTENT OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_KEYRECREPCONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_MSG
#  define d2i_OSSL_CMP_MSG OPENSSL_MANGLER(d2i_OSSL_CMP_MSG)
# endif
#else
# ifndef _d2i_OSSL_CMP_MSG
#  define _d2i_OSSL_CMP_MSG OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_MSG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_MSG_bio
#  define d2i_OSSL_CMP_MSG_bio OPENSSL_MANGLER(d2i_OSSL_CMP_MSG_bio)
# endif
#else
# ifndef _d2i_OSSL_CMP_MSG_bio
#  define _d2i_OSSL_CMP_MSG_bio OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_MSG_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_PKIBODY
#  define d2i_OSSL_CMP_PKIBODY OPENSSL_MANGLER(d2i_OSSL_CMP_PKIBODY)
# endif
#else
# ifndef _d2i_OSSL_CMP_PKIBODY
#  define _d2i_OSSL_CMP_PKIBODY OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_PKIBODY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_PKIHEADER
#  define d2i_OSSL_CMP_PKIHEADER OPENSSL_MANGLER(d2i_OSSL_CMP_PKIHEADER)
# endif
#else
# ifndef _d2i_OSSL_CMP_PKIHEADER
#  define _d2i_OSSL_CMP_PKIHEADER OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_PKIHEADER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_PKISI
#  define d2i_OSSL_CMP_PKISI OPENSSL_MANGLER(d2i_OSSL_CMP_PKISI)
# endif
#else
# ifndef _d2i_OSSL_CMP_PKISI
#  define _d2i_OSSL_CMP_PKISI OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_PKISI)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_POLLREP
#  define d2i_OSSL_CMP_POLLREP OPENSSL_MANGLER(d2i_OSSL_CMP_POLLREP)
# endif
#else
# ifndef _d2i_OSSL_CMP_POLLREP
#  define _d2i_OSSL_CMP_POLLREP OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_POLLREP)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_POLLREQ
#  define d2i_OSSL_CMP_POLLREQ OPENSSL_MANGLER(d2i_OSSL_CMP_POLLREQ)
# endif
#else
# ifndef _d2i_OSSL_CMP_POLLREQ
#  define _d2i_OSSL_CMP_POLLREQ OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_POLLREQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_PROTECTEDPART
#  define d2i_OSSL_CMP_PROTECTEDPART OPENSSL_MANGLER(d2i_OSSL_CMP_PROTECTEDPART)
# endif
#else
# ifndef _d2i_OSSL_CMP_PROTECTEDPART
#  define _d2i_OSSL_CMP_PROTECTEDPART OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_PROTECTEDPART)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_REVANNCONTENT
#  define d2i_OSSL_CMP_REVANNCONTENT OPENSSL_MANGLER(d2i_OSSL_CMP_REVANNCONTENT)
# endif
#else
# ifndef _d2i_OSSL_CMP_REVANNCONTENT
#  define _d2i_OSSL_CMP_REVANNCONTENT OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_REVANNCONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_REVDETAILS
#  define d2i_OSSL_CMP_REVDETAILS OPENSSL_MANGLER(d2i_OSSL_CMP_REVDETAILS)
# endif
#else
# ifndef _d2i_OSSL_CMP_REVDETAILS
#  define _d2i_OSSL_CMP_REVDETAILS OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_REVDETAILS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CMP_REVREPCONTENT
#  define d2i_OSSL_CMP_REVREPCONTENT OPENSSL_MANGLER(d2i_OSSL_CMP_REVREPCONTENT)
# endif
#else
# ifndef _d2i_OSSL_CMP_REVREPCONTENT
#  define _d2i_OSSL_CMP_REVREPCONTENT OPENSSL_MANGLER_ASM(d2i_OSSL_CMP_REVREPCONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_ATTRIBUTETYPEANDVALUE
#  define d2i_OSSL_CRMF_ATTRIBUTETYPEANDVALUE OPENSSL_MANGLER(d2i_OSSL_CRMF_ATTRIBUTETYPEANDVALUE)
# endif
#else
# ifndef _d2i_OSSL_CRMF_ATTRIBUTETYPEANDVALUE
#  define _d2i_OSSL_CRMF_ATTRIBUTETYPEANDVALUE OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_ATTRIBUTETYPEANDVALUE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_CERTID
#  define d2i_OSSL_CRMF_CERTID OPENSSL_MANGLER(d2i_OSSL_CRMF_CERTID)
# endif
#else
# ifndef _d2i_OSSL_CRMF_CERTID
#  define _d2i_OSSL_CRMF_CERTID OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_CERTID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_CERTREQUEST
#  define d2i_OSSL_CRMF_CERTREQUEST OPENSSL_MANGLER(d2i_OSSL_CRMF_CERTREQUEST)
# endif
#else
# ifndef _d2i_OSSL_CRMF_CERTREQUEST
#  define _d2i_OSSL_CRMF_CERTREQUEST OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_CERTREQUEST)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_CERTTEMPLATE
#  define d2i_OSSL_CRMF_CERTTEMPLATE OPENSSL_MANGLER(d2i_OSSL_CRMF_CERTTEMPLATE)
# endif
#else
# ifndef _d2i_OSSL_CRMF_CERTTEMPLATE
#  define _d2i_OSSL_CRMF_CERTTEMPLATE OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_CERTTEMPLATE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_ENCKEYWITHID
#  define d2i_OSSL_CRMF_ENCKEYWITHID OPENSSL_MANGLER(d2i_OSSL_CRMF_ENCKEYWITHID)
# endif
#else
# ifndef _d2i_OSSL_CRMF_ENCKEYWITHID
#  define _d2i_OSSL_CRMF_ENCKEYWITHID OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_ENCKEYWITHID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER
#  define d2i_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER OPENSSL_MANGLER(d2i_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER)
# endif
#else
# ifndef _d2i_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER
#  define _d2i_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_ENCRYPTEDVALUE
#  define d2i_OSSL_CRMF_ENCRYPTEDVALUE OPENSSL_MANGLER(d2i_OSSL_CRMF_ENCRYPTEDVALUE)
# endif
#else
# ifndef _d2i_OSSL_CRMF_ENCRYPTEDVALUE
#  define _d2i_OSSL_CRMF_ENCRYPTEDVALUE OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_ENCRYPTEDVALUE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_MSG
#  define d2i_OSSL_CRMF_MSG OPENSSL_MANGLER(d2i_OSSL_CRMF_MSG)
# endif
#else
# ifndef _d2i_OSSL_CRMF_MSG
#  define _d2i_OSSL_CRMF_MSG OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_MSG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_MSGS
#  define d2i_OSSL_CRMF_MSGS OPENSSL_MANGLER(d2i_OSSL_CRMF_MSGS)
# endif
#else
# ifndef _d2i_OSSL_CRMF_MSGS
#  define _d2i_OSSL_CRMF_MSGS OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_MSGS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_OPTIONALVALIDITY
#  define d2i_OSSL_CRMF_OPTIONALVALIDITY OPENSSL_MANGLER(d2i_OSSL_CRMF_OPTIONALVALIDITY)
# endif
#else
# ifndef _d2i_OSSL_CRMF_OPTIONALVALIDITY
#  define _d2i_OSSL_CRMF_OPTIONALVALIDITY OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_OPTIONALVALIDITY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_PBMPARAMETER
#  define d2i_OSSL_CRMF_PBMPARAMETER OPENSSL_MANGLER(d2i_OSSL_CRMF_PBMPARAMETER)
# endif
#else
# ifndef _d2i_OSSL_CRMF_PBMPARAMETER
#  define _d2i_OSSL_CRMF_PBMPARAMETER OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_PBMPARAMETER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_PKIPUBLICATIONINFO
#  define d2i_OSSL_CRMF_PKIPUBLICATIONINFO OPENSSL_MANGLER(d2i_OSSL_CRMF_PKIPUBLICATIONINFO)
# endif
#else
# ifndef _d2i_OSSL_CRMF_PKIPUBLICATIONINFO
#  define _d2i_OSSL_CRMF_PKIPUBLICATIONINFO OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_PKIPUBLICATIONINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_PKMACVALUE
#  define d2i_OSSL_CRMF_PKMACVALUE OPENSSL_MANGLER(d2i_OSSL_CRMF_PKMACVALUE)
# endif
#else
# ifndef _d2i_OSSL_CRMF_PKMACVALUE
#  define _d2i_OSSL_CRMF_PKMACVALUE OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_PKMACVALUE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_POPO
#  define d2i_OSSL_CRMF_POPO OPENSSL_MANGLER(d2i_OSSL_CRMF_POPO)
# endif
#else
# ifndef _d2i_OSSL_CRMF_POPO
#  define _d2i_OSSL_CRMF_POPO OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_POPO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_POPOPRIVKEY
#  define d2i_OSSL_CRMF_POPOPRIVKEY OPENSSL_MANGLER(d2i_OSSL_CRMF_POPOPRIVKEY)
# endif
#else
# ifndef _d2i_OSSL_CRMF_POPOPRIVKEY
#  define _d2i_OSSL_CRMF_POPOPRIVKEY OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_POPOPRIVKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_POPOSIGNINGKEY
#  define d2i_OSSL_CRMF_POPOSIGNINGKEY OPENSSL_MANGLER(d2i_OSSL_CRMF_POPOSIGNINGKEY)
# endif
#else
# ifndef _d2i_OSSL_CRMF_POPOSIGNINGKEY
#  define _d2i_OSSL_CRMF_POPOSIGNINGKEY OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_POPOSIGNINGKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT
#  define d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT OPENSSL_MANGLER(d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT)
# endif
#else
# ifndef _d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT
#  define _d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO
#  define d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO OPENSSL_MANGLER(d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO)
# endif
#else
# ifndef _d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO
#  define _d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_PRIVATEKEYINFO
#  define d2i_OSSL_CRMF_PRIVATEKEYINFO OPENSSL_MANGLER(d2i_OSSL_CRMF_PRIVATEKEYINFO)
# endif
#else
# ifndef _d2i_OSSL_CRMF_PRIVATEKEYINFO
#  define _d2i_OSSL_CRMF_PRIVATEKEYINFO OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_PRIVATEKEYINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OSSL_CRMF_SINGLEPUBINFO
#  define d2i_OSSL_CRMF_SINGLEPUBINFO OPENSSL_MANGLER(d2i_OSSL_CRMF_SINGLEPUBINFO)
# endif
#else
# ifndef _d2i_OSSL_CRMF_SINGLEPUBINFO
#  define _d2i_OSSL_CRMF_SINGLEPUBINFO OPENSSL_MANGLER_ASM(d2i_OSSL_CRMF_SINGLEPUBINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_OTHERNAME
#  define d2i_OTHERNAME OPENSSL_MANGLER(d2i_OTHERNAME)
# endif
#else
# ifndef _d2i_OTHERNAME
#  define _d2i_OTHERNAME OPENSSL_MANGLER_ASM(d2i_OTHERNAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PBE2PARAM
#  define d2i_PBE2PARAM OPENSSL_MANGLER(d2i_PBE2PARAM)
# endif
#else
# ifndef _d2i_PBE2PARAM
#  define _d2i_PBE2PARAM OPENSSL_MANGLER_ASM(d2i_PBE2PARAM)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PBEPARAM
#  define d2i_PBEPARAM OPENSSL_MANGLER(d2i_PBEPARAM)
# endif
#else
# ifndef _d2i_PBEPARAM
#  define _d2i_PBEPARAM OPENSSL_MANGLER_ASM(d2i_PBEPARAM)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PBKDF2PARAM
#  define d2i_PBKDF2PARAM OPENSSL_MANGLER(d2i_PBKDF2PARAM)
# endif
#else
# ifndef _d2i_PBKDF2PARAM
#  define _d2i_PBKDF2PARAM OPENSSL_MANGLER_ASM(d2i_PBKDF2PARAM)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS12
#  define d2i_PKCS12 OPENSSL_MANGLER(d2i_PKCS12)
# endif
#else
# ifndef _d2i_PKCS12
#  define _d2i_PKCS12 OPENSSL_MANGLER_ASM(d2i_PKCS12)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS12_BAGS
#  define d2i_PKCS12_BAGS OPENSSL_MANGLER(d2i_PKCS12_BAGS)
# endif
#else
# ifndef _d2i_PKCS12_BAGS
#  define _d2i_PKCS12_BAGS OPENSSL_MANGLER_ASM(d2i_PKCS12_BAGS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS12_MAC_DATA
#  define d2i_PKCS12_MAC_DATA OPENSSL_MANGLER(d2i_PKCS12_MAC_DATA)
# endif
#else
# ifndef _d2i_PKCS12_MAC_DATA
#  define _d2i_PKCS12_MAC_DATA OPENSSL_MANGLER_ASM(d2i_PKCS12_MAC_DATA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS12_SAFEBAG
#  define d2i_PKCS12_SAFEBAG OPENSSL_MANGLER(d2i_PKCS12_SAFEBAG)
# endif
#else
# ifndef _d2i_PKCS12_SAFEBAG
#  define _d2i_PKCS12_SAFEBAG OPENSSL_MANGLER_ASM(d2i_PKCS12_SAFEBAG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS12_bio
#  define d2i_PKCS12_bio OPENSSL_MANGLER(d2i_PKCS12_bio)
# endif
#else
# ifndef _d2i_PKCS12_bio
#  define _d2i_PKCS12_bio OPENSSL_MANGLER_ASM(d2i_PKCS12_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS12_fp
#  define d2i_PKCS12_fp OPENSSL_MANGLER(d2i_PKCS12_fp)
# endif
#else
# ifndef _d2i_PKCS12_fp
#  define _d2i_PKCS12_fp OPENSSL_MANGLER_ASM(d2i_PKCS12_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7
#  define d2i_PKCS7 OPENSSL_MANGLER(d2i_PKCS7)
# endif
#else
# ifndef _d2i_PKCS7
#  define _d2i_PKCS7 OPENSSL_MANGLER_ASM(d2i_PKCS7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7_DIGEST
#  define d2i_PKCS7_DIGEST OPENSSL_MANGLER(d2i_PKCS7_DIGEST)
# endif
#else
# ifndef _d2i_PKCS7_DIGEST
#  define _d2i_PKCS7_DIGEST OPENSSL_MANGLER_ASM(d2i_PKCS7_DIGEST)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7_ENCRYPT
#  define d2i_PKCS7_ENCRYPT OPENSSL_MANGLER(d2i_PKCS7_ENCRYPT)
# endif
#else
# ifndef _d2i_PKCS7_ENCRYPT
#  define _d2i_PKCS7_ENCRYPT OPENSSL_MANGLER_ASM(d2i_PKCS7_ENCRYPT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7_ENC_CONTENT
#  define d2i_PKCS7_ENC_CONTENT OPENSSL_MANGLER(d2i_PKCS7_ENC_CONTENT)
# endif
#else
# ifndef _d2i_PKCS7_ENC_CONTENT
#  define _d2i_PKCS7_ENC_CONTENT OPENSSL_MANGLER_ASM(d2i_PKCS7_ENC_CONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7_ENVELOPE
#  define d2i_PKCS7_ENVELOPE OPENSSL_MANGLER(d2i_PKCS7_ENVELOPE)
# endif
#else
# ifndef _d2i_PKCS7_ENVELOPE
#  define _d2i_PKCS7_ENVELOPE OPENSSL_MANGLER_ASM(d2i_PKCS7_ENVELOPE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7_ISSUER_AND_SERIAL
#  define d2i_PKCS7_ISSUER_AND_SERIAL OPENSSL_MANGLER(d2i_PKCS7_ISSUER_AND_SERIAL)
# endif
#else
# ifndef _d2i_PKCS7_ISSUER_AND_SERIAL
#  define _d2i_PKCS7_ISSUER_AND_SERIAL OPENSSL_MANGLER_ASM(d2i_PKCS7_ISSUER_AND_SERIAL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7_RECIP_INFO
#  define d2i_PKCS7_RECIP_INFO OPENSSL_MANGLER(d2i_PKCS7_RECIP_INFO)
# endif
#else
# ifndef _d2i_PKCS7_RECIP_INFO
#  define _d2i_PKCS7_RECIP_INFO OPENSSL_MANGLER_ASM(d2i_PKCS7_RECIP_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7_SIGNED
#  define d2i_PKCS7_SIGNED OPENSSL_MANGLER(d2i_PKCS7_SIGNED)
# endif
#else
# ifndef _d2i_PKCS7_SIGNED
#  define _d2i_PKCS7_SIGNED OPENSSL_MANGLER_ASM(d2i_PKCS7_SIGNED)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7_SIGNER_INFO
#  define d2i_PKCS7_SIGNER_INFO OPENSSL_MANGLER(d2i_PKCS7_SIGNER_INFO)
# endif
#else
# ifndef _d2i_PKCS7_SIGNER_INFO
#  define _d2i_PKCS7_SIGNER_INFO OPENSSL_MANGLER_ASM(d2i_PKCS7_SIGNER_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7_SIGN_ENVELOPE
#  define d2i_PKCS7_SIGN_ENVELOPE OPENSSL_MANGLER(d2i_PKCS7_SIGN_ENVELOPE)
# endif
#else
# ifndef _d2i_PKCS7_SIGN_ENVELOPE
#  define _d2i_PKCS7_SIGN_ENVELOPE OPENSSL_MANGLER_ASM(d2i_PKCS7_SIGN_ENVELOPE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7_bio
#  define d2i_PKCS7_bio OPENSSL_MANGLER(d2i_PKCS7_bio)
# endif
#else
# ifndef _d2i_PKCS7_bio
#  define _d2i_PKCS7_bio OPENSSL_MANGLER_ASM(d2i_PKCS7_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS7_fp
#  define d2i_PKCS7_fp OPENSSL_MANGLER(d2i_PKCS7_fp)
# endif
#else
# ifndef _d2i_PKCS7_fp
#  define _d2i_PKCS7_fp OPENSSL_MANGLER_ASM(d2i_PKCS7_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS8PrivateKey_bio
#  define d2i_PKCS8PrivateKey_bio OPENSSL_MANGLER(d2i_PKCS8PrivateKey_bio)
# endif
#else
# ifndef _d2i_PKCS8PrivateKey_bio
#  define _d2i_PKCS8PrivateKey_bio OPENSSL_MANGLER_ASM(d2i_PKCS8PrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS8PrivateKey_fp
#  define d2i_PKCS8PrivateKey_fp OPENSSL_MANGLER(d2i_PKCS8PrivateKey_fp)
# endif
#else
# ifndef _d2i_PKCS8PrivateKey_fp
#  define _d2i_PKCS8PrivateKey_fp OPENSSL_MANGLER_ASM(d2i_PKCS8PrivateKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS8_PRIV_KEY_INFO
#  define d2i_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER(d2i_PKCS8_PRIV_KEY_INFO)
# endif
#else
# ifndef _d2i_PKCS8_PRIV_KEY_INFO
#  define _d2i_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER_ASM(d2i_PKCS8_PRIV_KEY_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS8_PRIV_KEY_INFO_bio
#  define d2i_PKCS8_PRIV_KEY_INFO_bio OPENSSL_MANGLER(d2i_PKCS8_PRIV_KEY_INFO_bio)
# endif
#else
# ifndef _d2i_PKCS8_PRIV_KEY_INFO_bio
#  define _d2i_PKCS8_PRIV_KEY_INFO_bio OPENSSL_MANGLER_ASM(d2i_PKCS8_PRIV_KEY_INFO_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS8_PRIV_KEY_INFO_fp
#  define d2i_PKCS8_PRIV_KEY_INFO_fp OPENSSL_MANGLER(d2i_PKCS8_PRIV_KEY_INFO_fp)
# endif
#else
# ifndef _d2i_PKCS8_PRIV_KEY_INFO_fp
#  define _d2i_PKCS8_PRIV_KEY_INFO_fp OPENSSL_MANGLER_ASM(d2i_PKCS8_PRIV_KEY_INFO_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS8_bio
#  define d2i_PKCS8_bio OPENSSL_MANGLER(d2i_PKCS8_bio)
# endif
#else
# ifndef _d2i_PKCS8_bio
#  define _d2i_PKCS8_bio OPENSSL_MANGLER_ASM(d2i_PKCS8_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKCS8_fp
#  define d2i_PKCS8_fp OPENSSL_MANGLER(d2i_PKCS8_fp)
# endif
#else
# ifndef _d2i_PKCS8_fp
#  define _d2i_PKCS8_fp OPENSSL_MANGLER_ASM(d2i_PKCS8_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PKEY_USAGE_PERIOD
#  define d2i_PKEY_USAGE_PERIOD OPENSSL_MANGLER(d2i_PKEY_USAGE_PERIOD)
# endif
#else
# ifndef _d2i_PKEY_USAGE_PERIOD
#  define _d2i_PKEY_USAGE_PERIOD OPENSSL_MANGLER_ASM(d2i_PKEY_USAGE_PERIOD)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_POLICYINFO
#  define d2i_POLICYINFO OPENSSL_MANGLER(d2i_POLICYINFO)
# endif
#else
# ifndef _d2i_POLICYINFO
#  define _d2i_POLICYINFO OPENSSL_MANGLER_ASM(d2i_POLICYINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_POLICYQUALINFO
#  define d2i_POLICYQUALINFO OPENSSL_MANGLER(d2i_POLICYQUALINFO)
# endif
#else
# ifndef _d2i_POLICYQUALINFO
#  define _d2i_POLICYQUALINFO OPENSSL_MANGLER_ASM(d2i_POLICYQUALINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PROFESSION_INFO
#  define d2i_PROFESSION_INFO OPENSSL_MANGLER(d2i_PROFESSION_INFO)
# endif
#else
# ifndef _d2i_PROFESSION_INFO
#  define _d2i_PROFESSION_INFO OPENSSL_MANGLER_ASM(d2i_PROFESSION_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PROXY_CERT_INFO_EXTENSION
#  define d2i_PROXY_CERT_INFO_EXTENSION OPENSSL_MANGLER(d2i_PROXY_CERT_INFO_EXTENSION)
# endif
#else
# ifndef _d2i_PROXY_CERT_INFO_EXTENSION
#  define _d2i_PROXY_CERT_INFO_EXTENSION OPENSSL_MANGLER_ASM(d2i_PROXY_CERT_INFO_EXTENSION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PROXY_POLICY
#  define d2i_PROXY_POLICY OPENSSL_MANGLER(d2i_PROXY_POLICY)
# endif
#else
# ifndef _d2i_PROXY_POLICY
#  define _d2i_PROXY_POLICY OPENSSL_MANGLER_ASM(d2i_PROXY_POLICY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PUBKEY
#  define d2i_PUBKEY OPENSSL_MANGLER(d2i_PUBKEY)
# endif
#else
# ifndef _d2i_PUBKEY
#  define _d2i_PUBKEY OPENSSL_MANGLER_ASM(d2i_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PUBKEY_bio
#  define d2i_PUBKEY_bio OPENSSL_MANGLER(d2i_PUBKEY_bio)
# endif
#else
# ifndef _d2i_PUBKEY_bio
#  define _d2i_PUBKEY_bio OPENSSL_MANGLER_ASM(d2i_PUBKEY_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PUBKEY_ex
#  define d2i_PUBKEY_ex OPENSSL_MANGLER(d2i_PUBKEY_ex)
# endif
#else
# ifndef _d2i_PUBKEY_ex
#  define _d2i_PUBKEY_ex OPENSSL_MANGLER_ASM(d2i_PUBKEY_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PUBKEY_fp
#  define d2i_PUBKEY_fp OPENSSL_MANGLER(d2i_PUBKEY_fp)
# endif
#else
# ifndef _d2i_PUBKEY_fp
#  define _d2i_PUBKEY_fp OPENSSL_MANGLER_ASM(d2i_PUBKEY_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PrivateKey
#  define d2i_PrivateKey OPENSSL_MANGLER(d2i_PrivateKey)
# endif
#else
# ifndef _d2i_PrivateKey
#  define _d2i_PrivateKey OPENSSL_MANGLER_ASM(d2i_PrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PrivateKey_bio
#  define d2i_PrivateKey_bio OPENSSL_MANGLER(d2i_PrivateKey_bio)
# endif
#else
# ifndef _d2i_PrivateKey_bio
#  define _d2i_PrivateKey_bio OPENSSL_MANGLER_ASM(d2i_PrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PrivateKey_ex
#  define d2i_PrivateKey_ex OPENSSL_MANGLER(d2i_PrivateKey_ex)
# endif
#else
# ifndef _d2i_PrivateKey_ex
#  define _d2i_PrivateKey_ex OPENSSL_MANGLER_ASM(d2i_PrivateKey_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PrivateKey_ex_bio
#  define d2i_PrivateKey_ex_bio OPENSSL_MANGLER(d2i_PrivateKey_ex_bio)
# endif
#else
# ifndef _d2i_PrivateKey_ex_bio
#  define _d2i_PrivateKey_ex_bio OPENSSL_MANGLER_ASM(d2i_PrivateKey_ex_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PrivateKey_ex_fp
#  define d2i_PrivateKey_ex_fp OPENSSL_MANGLER(d2i_PrivateKey_ex_fp)
# endif
#else
# ifndef _d2i_PrivateKey_ex_fp
#  define _d2i_PrivateKey_ex_fp OPENSSL_MANGLER_ASM(d2i_PrivateKey_ex_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PrivateKey_fp
#  define d2i_PrivateKey_fp OPENSSL_MANGLER(d2i_PrivateKey_fp)
# endif
#else
# ifndef _d2i_PrivateKey_fp
#  define _d2i_PrivateKey_fp OPENSSL_MANGLER_ASM(d2i_PrivateKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_PublicKey
#  define d2i_PublicKey OPENSSL_MANGLER(d2i_PublicKey)
# endif
#else
# ifndef _d2i_PublicKey
#  define _d2i_PublicKey OPENSSL_MANGLER_ASM(d2i_PublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_RSAPrivateKey
#  define d2i_RSAPrivateKey OPENSSL_MANGLER(d2i_RSAPrivateKey)
# endif
#else
# ifndef _d2i_RSAPrivateKey
#  define _d2i_RSAPrivateKey OPENSSL_MANGLER_ASM(d2i_RSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_RSAPrivateKey_bio
#  define d2i_RSAPrivateKey_bio OPENSSL_MANGLER(d2i_RSAPrivateKey_bio)
# endif
#else
# ifndef _d2i_RSAPrivateKey_bio
#  define _d2i_RSAPrivateKey_bio OPENSSL_MANGLER_ASM(d2i_RSAPrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_RSAPrivateKey_fp
#  define d2i_RSAPrivateKey_fp OPENSSL_MANGLER(d2i_RSAPrivateKey_fp)
# endif
#else
# ifndef _d2i_RSAPrivateKey_fp
#  define _d2i_RSAPrivateKey_fp OPENSSL_MANGLER_ASM(d2i_RSAPrivateKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_RSAPublicKey
#  define d2i_RSAPublicKey OPENSSL_MANGLER(d2i_RSAPublicKey)
# endif
#else
# ifndef _d2i_RSAPublicKey
#  define _d2i_RSAPublicKey OPENSSL_MANGLER_ASM(d2i_RSAPublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_RSAPublicKey_bio
#  define d2i_RSAPublicKey_bio OPENSSL_MANGLER(d2i_RSAPublicKey_bio)
# endif
#else
# ifndef _d2i_RSAPublicKey_bio
#  define _d2i_RSAPublicKey_bio OPENSSL_MANGLER_ASM(d2i_RSAPublicKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_RSAPublicKey_fp
#  define d2i_RSAPublicKey_fp OPENSSL_MANGLER(d2i_RSAPublicKey_fp)
# endif
#else
# ifndef _d2i_RSAPublicKey_fp
#  define _d2i_RSAPublicKey_fp OPENSSL_MANGLER_ASM(d2i_RSAPublicKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_RSA_OAEP_PARAMS
#  define d2i_RSA_OAEP_PARAMS OPENSSL_MANGLER(d2i_RSA_OAEP_PARAMS)
# endif
#else
# ifndef _d2i_RSA_OAEP_PARAMS
#  define _d2i_RSA_OAEP_PARAMS OPENSSL_MANGLER_ASM(d2i_RSA_OAEP_PARAMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_RSA_PSS_PARAMS
#  define d2i_RSA_PSS_PARAMS OPENSSL_MANGLER(d2i_RSA_PSS_PARAMS)
# endif
#else
# ifndef _d2i_RSA_PSS_PARAMS
#  define _d2i_RSA_PSS_PARAMS OPENSSL_MANGLER_ASM(d2i_RSA_PSS_PARAMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_RSA_PUBKEY
#  define d2i_RSA_PUBKEY OPENSSL_MANGLER(d2i_RSA_PUBKEY)
# endif
#else
# ifndef _d2i_RSA_PUBKEY
#  define _d2i_RSA_PUBKEY OPENSSL_MANGLER_ASM(d2i_RSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_RSA_PUBKEY_bio
#  define d2i_RSA_PUBKEY_bio OPENSSL_MANGLER(d2i_RSA_PUBKEY_bio)
# endif
#else
# ifndef _d2i_RSA_PUBKEY_bio
#  define _d2i_RSA_PUBKEY_bio OPENSSL_MANGLER_ASM(d2i_RSA_PUBKEY_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_RSA_PUBKEY_fp
#  define d2i_RSA_PUBKEY_fp OPENSSL_MANGLER(d2i_RSA_PUBKEY_fp)
# endif
#else
# ifndef _d2i_RSA_PUBKEY_fp
#  define _d2i_RSA_PUBKEY_fp OPENSSL_MANGLER_ASM(d2i_RSA_PUBKEY_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_SCRYPT_PARAMS
#  define d2i_SCRYPT_PARAMS OPENSSL_MANGLER(d2i_SCRYPT_PARAMS)
# endif
#else
# ifndef _d2i_SCRYPT_PARAMS
#  define _d2i_SCRYPT_PARAMS OPENSSL_MANGLER_ASM(d2i_SCRYPT_PARAMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_SCT_LIST
#  define d2i_SCT_LIST OPENSSL_MANGLER(d2i_SCT_LIST)
# endif
#else
# ifndef _d2i_SCT_LIST
#  define _d2i_SCT_LIST OPENSSL_MANGLER_ASM(d2i_SCT_LIST)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_SSL_SESSION
#  define d2i_SSL_SESSION OPENSSL_MANGLER(d2i_SSL_SESSION)
# endif
#else
# ifndef _d2i_SSL_SESSION
#  define _d2i_SSL_SESSION OPENSSL_MANGLER_ASM(d2i_SSL_SESSION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_SXNET
#  define d2i_SXNET OPENSSL_MANGLER(d2i_SXNET)
# endif
#else
# ifndef _d2i_SXNET
#  define _d2i_SXNET OPENSSL_MANGLER_ASM(d2i_SXNET)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_SXNETID
#  define d2i_SXNETID OPENSSL_MANGLER(d2i_SXNETID)
# endif
#else
# ifndef _d2i_SXNETID
#  define _d2i_SXNETID OPENSSL_MANGLER_ASM(d2i_SXNETID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_ACCURACY
#  define d2i_TS_ACCURACY OPENSSL_MANGLER(d2i_TS_ACCURACY)
# endif
#else
# ifndef _d2i_TS_ACCURACY
#  define _d2i_TS_ACCURACY OPENSSL_MANGLER_ASM(d2i_TS_ACCURACY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_MSG_IMPRINT
#  define d2i_TS_MSG_IMPRINT OPENSSL_MANGLER(d2i_TS_MSG_IMPRINT)
# endif
#else
# ifndef _d2i_TS_MSG_IMPRINT
#  define _d2i_TS_MSG_IMPRINT OPENSSL_MANGLER_ASM(d2i_TS_MSG_IMPRINT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_MSG_IMPRINT_bio
#  define d2i_TS_MSG_IMPRINT_bio OPENSSL_MANGLER(d2i_TS_MSG_IMPRINT_bio)
# endif
#else
# ifndef _d2i_TS_MSG_IMPRINT_bio
#  define _d2i_TS_MSG_IMPRINT_bio OPENSSL_MANGLER_ASM(d2i_TS_MSG_IMPRINT_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_MSG_IMPRINT_fp
#  define d2i_TS_MSG_IMPRINT_fp OPENSSL_MANGLER(d2i_TS_MSG_IMPRINT_fp)
# endif
#else
# ifndef _d2i_TS_MSG_IMPRINT_fp
#  define _d2i_TS_MSG_IMPRINT_fp OPENSSL_MANGLER_ASM(d2i_TS_MSG_IMPRINT_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_REQ
#  define d2i_TS_REQ OPENSSL_MANGLER(d2i_TS_REQ)
# endif
#else
# ifndef _d2i_TS_REQ
#  define _d2i_TS_REQ OPENSSL_MANGLER_ASM(d2i_TS_REQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_REQ_bio
#  define d2i_TS_REQ_bio OPENSSL_MANGLER(d2i_TS_REQ_bio)
# endif
#else
# ifndef _d2i_TS_REQ_bio
#  define _d2i_TS_REQ_bio OPENSSL_MANGLER_ASM(d2i_TS_REQ_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_REQ_fp
#  define d2i_TS_REQ_fp OPENSSL_MANGLER(d2i_TS_REQ_fp)
# endif
#else
# ifndef _d2i_TS_REQ_fp
#  define _d2i_TS_REQ_fp OPENSSL_MANGLER_ASM(d2i_TS_REQ_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_RESP
#  define d2i_TS_RESP OPENSSL_MANGLER(d2i_TS_RESP)
# endif
#else
# ifndef _d2i_TS_RESP
#  define _d2i_TS_RESP OPENSSL_MANGLER_ASM(d2i_TS_RESP)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_RESP_bio
#  define d2i_TS_RESP_bio OPENSSL_MANGLER(d2i_TS_RESP_bio)
# endif
#else
# ifndef _d2i_TS_RESP_bio
#  define _d2i_TS_RESP_bio OPENSSL_MANGLER_ASM(d2i_TS_RESP_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_RESP_fp
#  define d2i_TS_RESP_fp OPENSSL_MANGLER(d2i_TS_RESP_fp)
# endif
#else
# ifndef _d2i_TS_RESP_fp
#  define _d2i_TS_RESP_fp OPENSSL_MANGLER_ASM(d2i_TS_RESP_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_STATUS_INFO
#  define d2i_TS_STATUS_INFO OPENSSL_MANGLER(d2i_TS_STATUS_INFO)
# endif
#else
# ifndef _d2i_TS_STATUS_INFO
#  define _d2i_TS_STATUS_INFO OPENSSL_MANGLER_ASM(d2i_TS_STATUS_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_TST_INFO
#  define d2i_TS_TST_INFO OPENSSL_MANGLER(d2i_TS_TST_INFO)
# endif
#else
# ifndef _d2i_TS_TST_INFO
#  define _d2i_TS_TST_INFO OPENSSL_MANGLER_ASM(d2i_TS_TST_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_TST_INFO_bio
#  define d2i_TS_TST_INFO_bio OPENSSL_MANGLER(d2i_TS_TST_INFO_bio)
# endif
#else
# ifndef _d2i_TS_TST_INFO_bio
#  define _d2i_TS_TST_INFO_bio OPENSSL_MANGLER_ASM(d2i_TS_TST_INFO_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_TS_TST_INFO_fp
#  define d2i_TS_TST_INFO_fp OPENSSL_MANGLER(d2i_TS_TST_INFO_fp)
# endif
#else
# ifndef _d2i_TS_TST_INFO_fp
#  define _d2i_TS_TST_INFO_fp OPENSSL_MANGLER_ASM(d2i_TS_TST_INFO_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_USERNOTICE
#  define d2i_USERNOTICE OPENSSL_MANGLER(d2i_USERNOTICE)
# endif
#else
# ifndef _d2i_USERNOTICE
#  define _d2i_USERNOTICE OPENSSL_MANGLER_ASM(d2i_USERNOTICE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509
#  define d2i_X509 OPENSSL_MANGLER(d2i_X509)
# endif
#else
# ifndef _d2i_X509
#  define _d2i_X509 OPENSSL_MANGLER_ASM(d2i_X509)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_ALGOR
#  define d2i_X509_ALGOR OPENSSL_MANGLER(d2i_X509_ALGOR)
# endif
#else
# ifndef _d2i_X509_ALGOR
#  define _d2i_X509_ALGOR OPENSSL_MANGLER_ASM(d2i_X509_ALGOR)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_ALGORS
#  define d2i_X509_ALGORS OPENSSL_MANGLER(d2i_X509_ALGORS)
# endif
#else
# ifndef _d2i_X509_ALGORS
#  define _d2i_X509_ALGORS OPENSSL_MANGLER_ASM(d2i_X509_ALGORS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_ATTRIBUTE
#  define d2i_X509_ATTRIBUTE OPENSSL_MANGLER(d2i_X509_ATTRIBUTE)
# endif
#else
# ifndef _d2i_X509_ATTRIBUTE
#  define _d2i_X509_ATTRIBUTE OPENSSL_MANGLER_ASM(d2i_X509_ATTRIBUTE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_AUX
#  define d2i_X509_AUX OPENSSL_MANGLER(d2i_X509_AUX)
# endif
#else
# ifndef _d2i_X509_AUX
#  define _d2i_X509_AUX OPENSSL_MANGLER_ASM(d2i_X509_AUX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_CERT_AUX
#  define d2i_X509_CERT_AUX OPENSSL_MANGLER(d2i_X509_CERT_AUX)
# endif
#else
# ifndef _d2i_X509_CERT_AUX
#  define _d2i_X509_CERT_AUX OPENSSL_MANGLER_ASM(d2i_X509_CERT_AUX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_CINF
#  define d2i_X509_CINF OPENSSL_MANGLER(d2i_X509_CINF)
# endif
#else
# ifndef _d2i_X509_CINF
#  define _d2i_X509_CINF OPENSSL_MANGLER_ASM(d2i_X509_CINF)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_CRL
#  define d2i_X509_CRL OPENSSL_MANGLER(d2i_X509_CRL)
# endif
#else
# ifndef _d2i_X509_CRL
#  define _d2i_X509_CRL OPENSSL_MANGLER_ASM(d2i_X509_CRL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_CRL_INFO
#  define d2i_X509_CRL_INFO OPENSSL_MANGLER(d2i_X509_CRL_INFO)
# endif
#else
# ifndef _d2i_X509_CRL_INFO
#  define _d2i_X509_CRL_INFO OPENSSL_MANGLER_ASM(d2i_X509_CRL_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_CRL_bio
#  define d2i_X509_CRL_bio OPENSSL_MANGLER(d2i_X509_CRL_bio)
# endif
#else
# ifndef _d2i_X509_CRL_bio
#  define _d2i_X509_CRL_bio OPENSSL_MANGLER_ASM(d2i_X509_CRL_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_CRL_fp
#  define d2i_X509_CRL_fp OPENSSL_MANGLER(d2i_X509_CRL_fp)
# endif
#else
# ifndef _d2i_X509_CRL_fp
#  define _d2i_X509_CRL_fp OPENSSL_MANGLER_ASM(d2i_X509_CRL_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_EXTENSION
#  define d2i_X509_EXTENSION OPENSSL_MANGLER(d2i_X509_EXTENSION)
# endif
#else
# ifndef _d2i_X509_EXTENSION
#  define _d2i_X509_EXTENSION OPENSSL_MANGLER_ASM(d2i_X509_EXTENSION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_EXTENSIONS
#  define d2i_X509_EXTENSIONS OPENSSL_MANGLER(d2i_X509_EXTENSIONS)
# endif
#else
# ifndef _d2i_X509_EXTENSIONS
#  define _d2i_X509_EXTENSIONS OPENSSL_MANGLER_ASM(d2i_X509_EXTENSIONS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_NAME
#  define d2i_X509_NAME OPENSSL_MANGLER(d2i_X509_NAME)
# endif
#else
# ifndef _d2i_X509_NAME
#  define _d2i_X509_NAME OPENSSL_MANGLER_ASM(d2i_X509_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_NAME_ENTRY
#  define d2i_X509_NAME_ENTRY OPENSSL_MANGLER(d2i_X509_NAME_ENTRY)
# endif
#else
# ifndef _d2i_X509_NAME_ENTRY
#  define _d2i_X509_NAME_ENTRY OPENSSL_MANGLER_ASM(d2i_X509_NAME_ENTRY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_PUBKEY
#  define d2i_X509_PUBKEY OPENSSL_MANGLER(d2i_X509_PUBKEY)
# endif
#else
# ifndef _d2i_X509_PUBKEY
#  define _d2i_X509_PUBKEY OPENSSL_MANGLER_ASM(d2i_X509_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_PUBKEY_bio
#  define d2i_X509_PUBKEY_bio OPENSSL_MANGLER(d2i_X509_PUBKEY_bio)
# endif
#else
# ifndef _d2i_X509_PUBKEY_bio
#  define _d2i_X509_PUBKEY_bio OPENSSL_MANGLER_ASM(d2i_X509_PUBKEY_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_PUBKEY_fp
#  define d2i_X509_PUBKEY_fp OPENSSL_MANGLER(d2i_X509_PUBKEY_fp)
# endif
#else
# ifndef _d2i_X509_PUBKEY_fp
#  define _d2i_X509_PUBKEY_fp OPENSSL_MANGLER_ASM(d2i_X509_PUBKEY_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_REQ
#  define d2i_X509_REQ OPENSSL_MANGLER(d2i_X509_REQ)
# endif
#else
# ifndef _d2i_X509_REQ
#  define _d2i_X509_REQ OPENSSL_MANGLER_ASM(d2i_X509_REQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_REQ_INFO
#  define d2i_X509_REQ_INFO OPENSSL_MANGLER(d2i_X509_REQ_INFO)
# endif
#else
# ifndef _d2i_X509_REQ_INFO
#  define _d2i_X509_REQ_INFO OPENSSL_MANGLER_ASM(d2i_X509_REQ_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_REQ_bio
#  define d2i_X509_REQ_bio OPENSSL_MANGLER(d2i_X509_REQ_bio)
# endif
#else
# ifndef _d2i_X509_REQ_bio
#  define _d2i_X509_REQ_bio OPENSSL_MANGLER_ASM(d2i_X509_REQ_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_REQ_fp
#  define d2i_X509_REQ_fp OPENSSL_MANGLER(d2i_X509_REQ_fp)
# endif
#else
# ifndef _d2i_X509_REQ_fp
#  define _d2i_X509_REQ_fp OPENSSL_MANGLER_ASM(d2i_X509_REQ_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_REVOKED
#  define d2i_X509_REVOKED OPENSSL_MANGLER(d2i_X509_REVOKED)
# endif
#else
# ifndef _d2i_X509_REVOKED
#  define _d2i_X509_REVOKED OPENSSL_MANGLER_ASM(d2i_X509_REVOKED)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_SIG
#  define d2i_X509_SIG OPENSSL_MANGLER(d2i_X509_SIG)
# endif
#else
# ifndef _d2i_X509_SIG
#  define _d2i_X509_SIG OPENSSL_MANGLER_ASM(d2i_X509_SIG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_VAL
#  define d2i_X509_VAL OPENSSL_MANGLER(d2i_X509_VAL)
# endif
#else
# ifndef _d2i_X509_VAL
#  define _d2i_X509_VAL OPENSSL_MANGLER_ASM(d2i_X509_VAL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_bio
#  define d2i_X509_bio OPENSSL_MANGLER(d2i_X509_bio)
# endif
#else
# ifndef _d2i_X509_bio
#  define _d2i_X509_bio OPENSSL_MANGLER_ASM(d2i_X509_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_X509_fp
#  define d2i_X509_fp OPENSSL_MANGLER(d2i_X509_fp)
# endif
#else
# ifndef _d2i_X509_fp
#  define _d2i_X509_fp OPENSSL_MANGLER_ASM(d2i_X509_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef d2i_int_dhx
#  define d2i_int_dhx OPENSSL_MANGLER(d2i_int_dhx)
# endif
#else
# ifndef _d2i_int_dhx
#  define _d2i_int_dhx OPENSSL_MANGLER_ASM(d2i_int_dhx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef do_dtls1_write
#  define do_dtls1_write OPENSSL_MANGLER(do_dtls1_write)
# endif
#else
# ifndef _do_dtls1_write
#  define _do_dtls1_write OPENSSL_MANGLER_ASM(do_dtls1_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef do_engine_lock_init_ossl_
#  define do_engine_lock_init_ossl_ OPENSSL_MANGLER(do_engine_lock_init_ossl_)
# endif
#else
# ifndef _do_engine_lock_init_ossl_
#  define _do_engine_lock_init_ossl_ OPENSSL_MANGLER_ASM(do_engine_lock_init_ossl_)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef do_engine_lock_init_ossl_ret_
#  define do_engine_lock_init_ossl_ret_ OPENSSL_MANGLER(do_engine_lock_init_ossl_ret_)
# endif
#else
# ifndef _do_engine_lock_init_ossl_ret_
#  define _do_engine_lock_init_ossl_ret_ OPENSSL_MANGLER_ASM(do_engine_lock_init_ossl_ret_)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef do_ssl3_write
#  define do_ssl3_write OPENSSL_MANGLER(do_ssl3_write)
# endif
#else
# ifndef _do_ssl3_write
#  define _do_ssl3_write OPENSSL_MANGLER_ASM(do_ssl3_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_buffer_message
#  define dtls1_buffer_message OPENSSL_MANGLER(dtls1_buffer_message)
# endif
#else
# ifndef _dtls1_buffer_message
#  define _dtls1_buffer_message OPENSSL_MANGLER_ASM(dtls1_buffer_message)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_buffer_record
#  define dtls1_buffer_record OPENSSL_MANGLER(dtls1_buffer_record)
# endif
#else
# ifndef _dtls1_buffer_record
#  define _dtls1_buffer_record OPENSSL_MANGLER_ASM(dtls1_buffer_record)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_check_timeout_num
#  define dtls1_check_timeout_num OPENSSL_MANGLER(dtls1_check_timeout_num)
# endif
#else
# ifndef _dtls1_check_timeout_num
#  define _dtls1_check_timeout_num OPENSSL_MANGLER_ASM(dtls1_check_timeout_num)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_clear
#  define dtls1_clear OPENSSL_MANGLER(dtls1_clear)
# endif
#else
# ifndef _dtls1_clear
#  define _dtls1_clear OPENSSL_MANGLER_ASM(dtls1_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_clear_received_buffer
#  define dtls1_clear_received_buffer OPENSSL_MANGLER(dtls1_clear_received_buffer)
# endif
#else
# ifndef _dtls1_clear_received_buffer
#  define _dtls1_clear_received_buffer OPENSSL_MANGLER_ASM(dtls1_clear_received_buffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_clear_sent_buffer
#  define dtls1_clear_sent_buffer OPENSSL_MANGLER(dtls1_clear_sent_buffer)
# endif
#else
# ifndef _dtls1_clear_sent_buffer
#  define _dtls1_clear_sent_buffer OPENSSL_MANGLER_ASM(dtls1_clear_sent_buffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_close_construct_packet
#  define dtls1_close_construct_packet OPENSSL_MANGLER(dtls1_close_construct_packet)
# endif
#else
# ifndef _dtls1_close_construct_packet
#  define _dtls1_close_construct_packet OPENSSL_MANGLER_ASM(dtls1_close_construct_packet)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_ctrl
#  define dtls1_ctrl OPENSSL_MANGLER(dtls1_ctrl)
# endif
#else
# ifndef _dtls1_ctrl
#  define _dtls1_ctrl OPENSSL_MANGLER_ASM(dtls1_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_default_timeout
#  define dtls1_default_timeout OPENSSL_MANGLER(dtls1_default_timeout)
# endif
#else
# ifndef _dtls1_default_timeout
#  define _dtls1_default_timeout OPENSSL_MANGLER_ASM(dtls1_default_timeout)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_dispatch_alert
#  define dtls1_dispatch_alert OPENSSL_MANGLER(dtls1_dispatch_alert)
# endif
#else
# ifndef _dtls1_dispatch_alert
#  define _dtls1_dispatch_alert OPENSSL_MANGLER_ASM(dtls1_dispatch_alert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_do_write
#  define dtls1_do_write OPENSSL_MANGLER(dtls1_do_write)
# endif
#else
# ifndef _dtls1_do_write
#  define _dtls1_do_write OPENSSL_MANGLER_ASM(dtls1_do_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_free
#  define dtls1_free OPENSSL_MANGLER(dtls1_free)
# endif
#else
# ifndef _dtls1_free
#  define _dtls1_free OPENSSL_MANGLER_ASM(dtls1_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_get_bitmap
#  define dtls1_get_bitmap OPENSSL_MANGLER(dtls1_get_bitmap)
# endif
#else
# ifndef _dtls1_get_bitmap
#  define _dtls1_get_bitmap OPENSSL_MANGLER_ASM(dtls1_get_bitmap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_get_message_header
#  define dtls1_get_message_header OPENSSL_MANGLER(dtls1_get_message_header)
# endif
#else
# ifndef _dtls1_get_message_header
#  define _dtls1_get_message_header OPENSSL_MANGLER_ASM(dtls1_get_message_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_get_queue_priority
#  define dtls1_get_queue_priority OPENSSL_MANGLER(dtls1_get_queue_priority)
# endif
#else
# ifndef _dtls1_get_queue_priority
#  define _dtls1_get_queue_priority OPENSSL_MANGLER_ASM(dtls1_get_queue_priority)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_get_record
#  define dtls1_get_record OPENSSL_MANGLER(dtls1_get_record)
# endif
#else
# ifndef _dtls1_get_record
#  define _dtls1_get_record OPENSSL_MANGLER_ASM(dtls1_get_record)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_get_timeout
#  define dtls1_get_timeout OPENSSL_MANGLER(dtls1_get_timeout)
# endif
#else
# ifndef _dtls1_get_timeout
#  define _dtls1_get_timeout OPENSSL_MANGLER_ASM(dtls1_get_timeout)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_handle_timeout
#  define dtls1_handle_timeout OPENSSL_MANGLER(dtls1_handle_timeout)
# endif
#else
# ifndef _dtls1_handle_timeout
#  define _dtls1_handle_timeout OPENSSL_MANGLER_ASM(dtls1_handle_timeout)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_hm_fragment_free
#  define dtls1_hm_fragment_free OPENSSL_MANGLER(dtls1_hm_fragment_free)
# endif
#else
# ifndef _dtls1_hm_fragment_free
#  define _dtls1_hm_fragment_free OPENSSL_MANGLER_ASM(dtls1_hm_fragment_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_is_timer_expired
#  define dtls1_is_timer_expired OPENSSL_MANGLER(dtls1_is_timer_expired)
# endif
#else
# ifndef _dtls1_is_timer_expired
#  define _dtls1_is_timer_expired OPENSSL_MANGLER_ASM(dtls1_is_timer_expired)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_min_mtu
#  define dtls1_min_mtu OPENSSL_MANGLER(dtls1_min_mtu)
# endif
#else
# ifndef _dtls1_min_mtu
#  define _dtls1_min_mtu OPENSSL_MANGLER_ASM(dtls1_min_mtu)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_new
#  define dtls1_new OPENSSL_MANGLER(dtls1_new)
# endif
#else
# ifndef _dtls1_new
#  define _dtls1_new OPENSSL_MANGLER_ASM(dtls1_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_process_buffered_records
#  define dtls1_process_buffered_records OPENSSL_MANGLER(dtls1_process_buffered_records)
# endif
#else
# ifndef _dtls1_process_buffered_records
#  define _dtls1_process_buffered_records OPENSSL_MANGLER_ASM(dtls1_process_buffered_records)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_process_record
#  define dtls1_process_record OPENSSL_MANGLER(dtls1_process_record)
# endif
#else
# ifndef _dtls1_process_record
#  define _dtls1_process_record OPENSSL_MANGLER_ASM(dtls1_process_record)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_query_mtu
#  define dtls1_query_mtu OPENSSL_MANGLER(dtls1_query_mtu)
# endif
#else
# ifndef _dtls1_query_mtu
#  define _dtls1_query_mtu OPENSSL_MANGLER_ASM(dtls1_query_mtu)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_read_bytes
#  define dtls1_read_bytes OPENSSL_MANGLER(dtls1_read_bytes)
# endif
#else
# ifndef _dtls1_read_bytes
#  define _dtls1_read_bytes OPENSSL_MANGLER_ASM(dtls1_read_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_read_failed
#  define dtls1_read_failed OPENSSL_MANGLER(dtls1_read_failed)
# endif
#else
# ifndef _dtls1_read_failed
#  define _dtls1_read_failed OPENSSL_MANGLER_ASM(dtls1_read_failed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_record_bitmap_update
#  define dtls1_record_bitmap_update OPENSSL_MANGLER(dtls1_record_bitmap_update)
# endif
#else
# ifndef _dtls1_record_bitmap_update
#  define _dtls1_record_bitmap_update OPENSSL_MANGLER_ASM(dtls1_record_bitmap_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_record_replay_check
#  define dtls1_record_replay_check OPENSSL_MANGLER(dtls1_record_replay_check)
# endif
#else
# ifndef _dtls1_record_replay_check
#  define _dtls1_record_replay_check OPENSSL_MANGLER_ASM(dtls1_record_replay_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_reset_seq_numbers
#  define dtls1_reset_seq_numbers OPENSSL_MANGLER(dtls1_reset_seq_numbers)
# endif
#else
# ifndef _dtls1_reset_seq_numbers
#  define _dtls1_reset_seq_numbers OPENSSL_MANGLER_ASM(dtls1_reset_seq_numbers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_retransmit_buffered_messages
#  define dtls1_retransmit_buffered_messages OPENSSL_MANGLER(dtls1_retransmit_buffered_messages)
# endif
#else
# ifndef _dtls1_retransmit_buffered_messages
#  define _dtls1_retransmit_buffered_messages OPENSSL_MANGLER_ASM(dtls1_retransmit_buffered_messages)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_retransmit_message
#  define dtls1_retransmit_message OPENSSL_MANGLER(dtls1_retransmit_message)
# endif
#else
# ifndef _dtls1_retransmit_message
#  define _dtls1_retransmit_message OPENSSL_MANGLER_ASM(dtls1_retransmit_message)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_retrieve_buffered_record
#  define dtls1_retrieve_buffered_record OPENSSL_MANGLER(dtls1_retrieve_buffered_record)
# endif
#else
# ifndef _dtls1_retrieve_buffered_record
#  define _dtls1_retrieve_buffered_record OPENSSL_MANGLER_ASM(dtls1_retrieve_buffered_record)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_set_handshake_header
#  define dtls1_set_handshake_header OPENSSL_MANGLER(dtls1_set_handshake_header)
# endif
#else
# ifndef _dtls1_set_handshake_header
#  define _dtls1_set_handshake_header OPENSSL_MANGLER_ASM(dtls1_set_handshake_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_set_message_header
#  define dtls1_set_message_header OPENSSL_MANGLER(dtls1_set_message_header)
# endif
#else
# ifndef _dtls1_set_message_header
#  define _dtls1_set_message_header OPENSSL_MANGLER_ASM(dtls1_set_message_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_shutdown
#  define dtls1_shutdown OPENSSL_MANGLER(dtls1_shutdown)
# endif
#else
# ifndef _dtls1_shutdown
#  define _dtls1_shutdown OPENSSL_MANGLER_ASM(dtls1_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_start_timer
#  define dtls1_start_timer OPENSSL_MANGLER(dtls1_start_timer)
# endif
#else
# ifndef _dtls1_start_timer
#  define _dtls1_start_timer OPENSSL_MANGLER_ASM(dtls1_start_timer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_stop_timer
#  define dtls1_stop_timer OPENSSL_MANGLER(dtls1_stop_timer)
# endif
#else
# ifndef _dtls1_stop_timer
#  define _dtls1_stop_timer OPENSSL_MANGLER_ASM(dtls1_stop_timer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_write_app_data_bytes
#  define dtls1_write_app_data_bytes OPENSSL_MANGLER(dtls1_write_app_data_bytes)
# endif
#else
# ifndef _dtls1_write_app_data_bytes
#  define _dtls1_write_app_data_bytes OPENSSL_MANGLER_ASM(dtls1_write_app_data_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls1_write_bytes
#  define dtls1_write_bytes OPENSSL_MANGLER(dtls1_write_bytes)
# endif
#else
# ifndef _dtls1_write_bytes
#  define _dtls1_write_bytes OPENSSL_MANGLER_ASM(dtls1_write_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls_bad_ver_client_method
#  define dtls_bad_ver_client_method OPENSSL_MANGLER(dtls_bad_ver_client_method)
# endif
#else
# ifndef _dtls_bad_ver_client_method
#  define _dtls_bad_ver_client_method OPENSSL_MANGLER_ASM(dtls_bad_ver_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls_buffer_listen_record
#  define dtls_buffer_listen_record OPENSSL_MANGLER(dtls_buffer_listen_record)
# endif
#else
# ifndef _dtls_buffer_listen_record
#  define _dtls_buffer_listen_record OPENSSL_MANGLER_ASM(dtls_buffer_listen_record)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls_construct_change_cipher_spec
#  define dtls_construct_change_cipher_spec OPENSSL_MANGLER(dtls_construct_change_cipher_spec)
# endif
#else
# ifndef _dtls_construct_change_cipher_spec
#  define _dtls_construct_change_cipher_spec OPENSSL_MANGLER_ASM(dtls_construct_change_cipher_spec)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls_construct_hello_verify_request
#  define dtls_construct_hello_verify_request OPENSSL_MANGLER(dtls_construct_hello_verify_request)
# endif
#else
# ifndef _dtls_construct_hello_verify_request
#  define _dtls_construct_hello_verify_request OPENSSL_MANGLER_ASM(dtls_construct_hello_verify_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls_get_message
#  define dtls_get_message OPENSSL_MANGLER(dtls_get_message)
# endif
#else
# ifndef _dtls_get_message
#  define _dtls_get_message OPENSSL_MANGLER_ASM(dtls_get_message)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls_get_message_body
#  define dtls_get_message_body OPENSSL_MANGLER(dtls_get_message_body)
# endif
#else
# ifndef _dtls_get_message_body
#  define _dtls_get_message_body OPENSSL_MANGLER_ASM(dtls_get_message_body)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls_process_hello_verify
#  define dtls_process_hello_verify OPENSSL_MANGLER(dtls_process_hello_verify)
# endif
#else
# ifndef _dtls_process_hello_verify
#  define _dtls_process_hello_verify OPENSSL_MANGLER_ASM(dtls_process_hello_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtls_raw_hello_verify_request
#  define dtls_raw_hello_verify_request OPENSSL_MANGLER(dtls_raw_hello_verify_request)
# endif
#else
# ifndef _dtls_raw_hello_verify_request
#  define _dtls_raw_hello_verify_request OPENSSL_MANGLER_ASM(dtls_raw_hello_verify_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtlsv1_2_client_method
#  define dtlsv1_2_client_method OPENSSL_MANGLER(dtlsv1_2_client_method)
# endif
#else
# ifndef _dtlsv1_2_client_method
#  define _dtlsv1_2_client_method OPENSSL_MANGLER_ASM(dtlsv1_2_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtlsv1_2_method
#  define dtlsv1_2_method OPENSSL_MANGLER(dtlsv1_2_method)
# endif
#else
# ifndef _dtlsv1_2_method
#  define _dtlsv1_2_method OPENSSL_MANGLER_ASM(dtlsv1_2_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtlsv1_2_server_method
#  define dtlsv1_2_server_method OPENSSL_MANGLER(dtlsv1_2_server_method)
# endif
#else
# ifndef _dtlsv1_2_server_method
#  define _dtlsv1_2_server_method OPENSSL_MANGLER_ASM(dtlsv1_2_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtlsv1_client_method
#  define dtlsv1_client_method OPENSSL_MANGLER(dtlsv1_client_method)
# endif
#else
# ifndef _dtlsv1_client_method
#  define _dtlsv1_client_method OPENSSL_MANGLER_ASM(dtlsv1_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtlsv1_method
#  define dtlsv1_method OPENSSL_MANGLER(dtlsv1_method)
# endif
#else
# ifndef _dtlsv1_method
#  define _dtlsv1_method OPENSSL_MANGLER_ASM(dtlsv1_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef dtlsv1_server_method
#  define dtlsv1_server_method OPENSSL_MANGLER(dtlsv1_server_method)
# endif
#else
# ifndef _dtlsv1_server_method
#  define _dtlsv1_server_method OPENSSL_MANGLER_ASM(dtlsv1_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef early_data_count_ok
#  define early_data_count_ok OPENSSL_MANGLER(early_data_count_ok)
# endif
#else
# ifndef _early_data_count_ok
#  define _early_data_count_ok OPENSSL_MANGLER_ASM(early_data_count_ok)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_add
#  define ecp_nistz256_add OPENSSL_MANGLER(ecp_nistz256_add)
# endif
#else
# ifndef _ecp_nistz256_add
#  define _ecp_nistz256_add OPENSSL_MANGLER_ASM(ecp_nistz256_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_avx2_gather_w7
#  define ecp_nistz256_avx2_gather_w7 OPENSSL_MANGLER(ecp_nistz256_avx2_gather_w7)
# endif
#else
# ifndef _ecp_nistz256_avx2_gather_w7
#  define _ecp_nistz256_avx2_gather_w7 OPENSSL_MANGLER_ASM(ecp_nistz256_avx2_gather_w7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_div_by_2
#  define ecp_nistz256_div_by_2 OPENSSL_MANGLER(ecp_nistz256_div_by_2)
# endif
#else
# ifndef _ecp_nistz256_div_by_2
#  define _ecp_nistz256_div_by_2 OPENSSL_MANGLER_ASM(ecp_nistz256_div_by_2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_from_mont
#  define ecp_nistz256_from_mont OPENSSL_MANGLER(ecp_nistz256_from_mont)
# endif
#else
# ifndef _ecp_nistz256_from_mont
#  define _ecp_nistz256_from_mont OPENSSL_MANGLER_ASM(ecp_nistz256_from_mont)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_gather_w5
#  define ecp_nistz256_gather_w5 OPENSSL_MANGLER(ecp_nistz256_gather_w5)
# endif
#else
# ifndef _ecp_nistz256_gather_w5
#  define _ecp_nistz256_gather_w5 OPENSSL_MANGLER_ASM(ecp_nistz256_gather_w5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_gather_w7
#  define ecp_nistz256_gather_w7 OPENSSL_MANGLER(ecp_nistz256_gather_w7)
# endif
#else
# ifndef _ecp_nistz256_gather_w7
#  define _ecp_nistz256_gather_w7 OPENSSL_MANGLER_ASM(ecp_nistz256_gather_w7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_mul_by_2
#  define ecp_nistz256_mul_by_2 OPENSSL_MANGLER(ecp_nistz256_mul_by_2)
# endif
#else
# ifndef _ecp_nistz256_mul_by_2
#  define _ecp_nistz256_mul_by_2 OPENSSL_MANGLER_ASM(ecp_nistz256_mul_by_2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_mul_by_3
#  define ecp_nistz256_mul_by_3 OPENSSL_MANGLER(ecp_nistz256_mul_by_3)
# endif
#else
# ifndef _ecp_nistz256_mul_by_3
#  define _ecp_nistz256_mul_by_3 OPENSSL_MANGLER_ASM(ecp_nistz256_mul_by_3)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_mul_mont
#  define ecp_nistz256_mul_mont OPENSSL_MANGLER(ecp_nistz256_mul_mont)
# endif
#else
# ifndef _ecp_nistz256_mul_mont
#  define _ecp_nistz256_mul_mont OPENSSL_MANGLER_ASM(ecp_nistz256_mul_mont)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_neg
#  define ecp_nistz256_neg OPENSSL_MANGLER(ecp_nistz256_neg)
# endif
#else
# ifndef _ecp_nistz256_neg
#  define _ecp_nistz256_neg OPENSSL_MANGLER_ASM(ecp_nistz256_neg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_ord_mul_mont
#  define ecp_nistz256_ord_mul_mont OPENSSL_MANGLER(ecp_nistz256_ord_mul_mont)
# endif
#else
# ifndef _ecp_nistz256_ord_mul_mont
#  define _ecp_nistz256_ord_mul_mont OPENSSL_MANGLER_ASM(ecp_nistz256_ord_mul_mont)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_ord_sqr_mont
#  define ecp_nistz256_ord_sqr_mont OPENSSL_MANGLER(ecp_nistz256_ord_sqr_mont)
# endif
#else
# ifndef _ecp_nistz256_ord_sqr_mont
#  define _ecp_nistz256_ord_sqr_mont OPENSSL_MANGLER_ASM(ecp_nistz256_ord_sqr_mont)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_point_add
#  define ecp_nistz256_point_add OPENSSL_MANGLER(ecp_nistz256_point_add)
# endif
#else
# ifndef _ecp_nistz256_point_add
#  define _ecp_nistz256_point_add OPENSSL_MANGLER_ASM(ecp_nistz256_point_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_point_add_affine
#  define ecp_nistz256_point_add_affine OPENSSL_MANGLER(ecp_nistz256_point_add_affine)
# endif
#else
# ifndef _ecp_nistz256_point_add_affine
#  define _ecp_nistz256_point_add_affine OPENSSL_MANGLER_ASM(ecp_nistz256_point_add_affine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_point_double
#  define ecp_nistz256_point_double OPENSSL_MANGLER(ecp_nistz256_point_double)
# endif
#else
# ifndef _ecp_nistz256_point_double
#  define _ecp_nistz256_point_double OPENSSL_MANGLER_ASM(ecp_nistz256_point_double)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_precomputed
#  define ecp_nistz256_precomputed OPENSSL_MANGLER(ecp_nistz256_precomputed)
# endif
#else
# ifndef _ecp_nistz256_precomputed
#  define _ecp_nistz256_precomputed OPENSSL_MANGLER_ASM(ecp_nistz256_precomputed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_scatter_w5
#  define ecp_nistz256_scatter_w5 OPENSSL_MANGLER(ecp_nistz256_scatter_w5)
# endif
#else
# ifndef _ecp_nistz256_scatter_w5
#  define _ecp_nistz256_scatter_w5 OPENSSL_MANGLER_ASM(ecp_nistz256_scatter_w5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_scatter_w7
#  define ecp_nistz256_scatter_w7 OPENSSL_MANGLER(ecp_nistz256_scatter_w7)
# endif
#else
# ifndef _ecp_nistz256_scatter_w7
#  define _ecp_nistz256_scatter_w7 OPENSSL_MANGLER_ASM(ecp_nistz256_scatter_w7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_sqr_mont
#  define ecp_nistz256_sqr_mont OPENSSL_MANGLER(ecp_nistz256_sqr_mont)
# endif
#else
# ifndef _ecp_nistz256_sqr_mont
#  define _ecp_nistz256_sqr_mont OPENSSL_MANGLER_ASM(ecp_nistz256_sqr_mont)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_sub
#  define ecp_nistz256_sub OPENSSL_MANGLER(ecp_nistz256_sub)
# endif
#else
# ifndef _ecp_nistz256_sub
#  define _ecp_nistz256_sub OPENSSL_MANGLER_ASM(ecp_nistz256_sub)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ecp_nistz256_to_mont
#  define ecp_nistz256_to_mont OPENSSL_MANGLER(ecp_nistz256_to_mont)
# endif
#else
# ifndef _ecp_nistz256_to_mont
#  define _ecp_nistz256_to_mont OPENSSL_MANGLER_ASM(ecp_nistz256_to_mont)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_add_dynamic_id
#  define engine_add_dynamic_id OPENSSL_MANGLER(engine_add_dynamic_id)
# endif
#else
# ifndef _engine_add_dynamic_id
#  define _engine_add_dynamic_id OPENSSL_MANGLER_ASM(engine_add_dynamic_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_cleanup_add_first
#  define engine_cleanup_add_first OPENSSL_MANGLER(engine_cleanup_add_first)
# endif
#else
# ifndef _engine_cleanup_add_first
#  define _engine_cleanup_add_first OPENSSL_MANGLER_ASM(engine_cleanup_add_first)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_cleanup_add_last
#  define engine_cleanup_add_last OPENSSL_MANGLER(engine_cleanup_add_last)
# endif
#else
# ifndef _engine_cleanup_add_last
#  define _engine_cleanup_add_last OPENSSL_MANGLER_ASM(engine_cleanup_add_last)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_cleanup_int
#  define engine_cleanup_int OPENSSL_MANGLER(engine_cleanup_int)
# endif
#else
# ifndef _engine_cleanup_int
#  define _engine_cleanup_int OPENSSL_MANGLER_ASM(engine_cleanup_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_free_util
#  define engine_free_util OPENSSL_MANGLER(engine_free_util)
# endif
#else
# ifndef _engine_free_util
#  define _engine_free_util OPENSSL_MANGLER_ASM(engine_free_util)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_load_dynamic_int
#  define engine_load_dynamic_int OPENSSL_MANGLER(engine_load_dynamic_int)
# endif
#else
# ifndef _engine_load_dynamic_int
#  define _engine_load_dynamic_int OPENSSL_MANGLER_ASM(engine_load_dynamic_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_load_openssl_int
#  define engine_load_openssl_int OPENSSL_MANGLER(engine_load_openssl_int)
# endif
#else
# ifndef _engine_load_openssl_int
#  define _engine_load_openssl_int OPENSSL_MANGLER_ASM(engine_load_openssl_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_load_rdrand_int
#  define engine_load_rdrand_int OPENSSL_MANGLER(engine_load_rdrand_int)
# endif
#else
# ifndef _engine_load_rdrand_int
#  define _engine_load_rdrand_int OPENSSL_MANGLER_ASM(engine_load_rdrand_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_lock_init
#  define engine_lock_init OPENSSL_MANGLER(engine_lock_init)
# endif
#else
# ifndef _engine_lock_init
#  define _engine_lock_init OPENSSL_MANGLER_ASM(engine_lock_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_pkey_asn1_meths_free
#  define engine_pkey_asn1_meths_free OPENSSL_MANGLER(engine_pkey_asn1_meths_free)
# endif
#else
# ifndef _engine_pkey_asn1_meths_free
#  define _engine_pkey_asn1_meths_free OPENSSL_MANGLER_ASM(engine_pkey_asn1_meths_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_pkey_meths_free
#  define engine_pkey_meths_free OPENSSL_MANGLER(engine_pkey_meths_free)
# endif
#else
# ifndef _engine_pkey_meths_free
#  define _engine_pkey_meths_free OPENSSL_MANGLER_ASM(engine_pkey_meths_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_remove_dynamic_id
#  define engine_remove_dynamic_id OPENSSL_MANGLER(engine_remove_dynamic_id)
# endif
#else
# ifndef _engine_remove_dynamic_id
#  define _engine_remove_dynamic_id OPENSSL_MANGLER_ASM(engine_remove_dynamic_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_set_all_null
#  define engine_set_all_null OPENSSL_MANGLER(engine_set_all_null)
# endif
#else
# ifndef _engine_set_all_null
#  define _engine_set_all_null OPENSSL_MANGLER_ASM(engine_set_all_null)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_table_cleanup
#  define engine_table_cleanup OPENSSL_MANGLER(engine_table_cleanup)
# endif
#else
# ifndef _engine_table_cleanup
#  define _engine_table_cleanup OPENSSL_MANGLER_ASM(engine_table_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_table_doall
#  define engine_table_doall OPENSSL_MANGLER(engine_table_doall)
# endif
#else
# ifndef _engine_table_doall
#  define _engine_table_doall OPENSSL_MANGLER_ASM(engine_table_doall)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_table_register
#  define engine_table_register OPENSSL_MANGLER(engine_table_register)
# endif
#else
# ifndef _engine_table_register
#  define _engine_table_register OPENSSL_MANGLER_ASM(engine_table_register)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_table_unregister
#  define engine_table_unregister OPENSSL_MANGLER(engine_table_unregister)
# endif
#else
# ifndef _engine_table_unregister
#  define _engine_table_unregister OPENSSL_MANGLER_ASM(engine_table_unregister)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_unlocked_finish
#  define engine_unlocked_finish OPENSSL_MANGLER(engine_unlocked_finish)
# endif
#else
# ifndef _engine_unlocked_finish
#  define _engine_unlocked_finish OPENSSL_MANGLER_ASM(engine_unlocked_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef engine_unlocked_init
#  define engine_unlocked_init OPENSSL_MANGLER(engine_unlocked_init)
# endif
#else
# ifndef _engine_unlocked_init
#  define _engine_unlocked_init OPENSSL_MANGLER_ASM(engine_unlocked_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef err_cleanup
#  define err_cleanup OPENSSL_MANGLER(err_cleanup)
# endif
#else
# ifndef _err_cleanup
#  define _err_cleanup OPENSSL_MANGLER_ASM(err_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef err_clear_last_constant_time
#  define err_clear_last_constant_time OPENSSL_MANGLER(err_clear_last_constant_time)
# endif
#else
# ifndef _err_clear_last_constant_time
#  define _err_clear_last_constant_time OPENSSL_MANGLER_ASM(err_clear_last_constant_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef err_free_strings_int
#  define err_free_strings_int OPENSSL_MANGLER(err_free_strings_int)
# endif
#else
# ifndef _err_free_strings_int
#  define _err_free_strings_int OPENSSL_MANGLER_ASM(err_free_strings_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef err_shelve_state
#  define err_shelve_state OPENSSL_MANGLER(err_shelve_state)
# endif
#else
# ifndef _err_shelve_state
#  define _err_shelve_state OPENSSL_MANGLER_ASM(err_shelve_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef err_unshelve_state
#  define err_unshelve_state OPENSSL_MANGLER(err_unshelve_state)
# endif
#else
# ifndef _err_unshelve_state
#  define _err_unshelve_state OPENSSL_MANGLER_ASM(err_unshelve_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_app_cleanup_int
#  define evp_app_cleanup_int OPENSSL_MANGLER(evp_app_cleanup_int)
# endif
#else
# ifndef _evp_app_cleanup_int
#  define _evp_app_cleanup_int OPENSSL_MANGLER_ASM(evp_app_cleanup_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_asym_cipher_fetch_from_prov
#  define evp_asym_cipher_fetch_from_prov OPENSSL_MANGLER(evp_asym_cipher_fetch_from_prov)
# endif
#else
# ifndef _evp_asym_cipher_fetch_from_prov
#  define _evp_asym_cipher_fetch_from_prov OPENSSL_MANGLER_ASM(evp_asym_cipher_fetch_from_prov)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_asym_cipher_get_number
#  define evp_asym_cipher_get_number OPENSSL_MANGLER(evp_asym_cipher_get_number)
# endif
#else
# ifndef _evp_asym_cipher_get_number
#  define _evp_asym_cipher_get_number OPENSSL_MANGLER_ASM(evp_asym_cipher_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_cipher_asn1_to_param_ex
#  define evp_cipher_asn1_to_param_ex OPENSSL_MANGLER(evp_cipher_asn1_to_param_ex)
# endif
#else
# ifndef _evp_cipher_asn1_to_param_ex
#  define _evp_cipher_asn1_to_param_ex OPENSSL_MANGLER_ASM(evp_cipher_asn1_to_param_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_cipher_cache_constants
#  define evp_cipher_cache_constants OPENSSL_MANGLER(evp_cipher_cache_constants)
# endif
#else
# ifndef _evp_cipher_cache_constants
#  define _evp_cipher_cache_constants OPENSSL_MANGLER_ASM(evp_cipher_cache_constants)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_cipher_free_int
#  define evp_cipher_free_int OPENSSL_MANGLER(evp_cipher_free_int)
# endif
#else
# ifndef _evp_cipher_free_int
#  define _evp_cipher_free_int OPENSSL_MANGLER_ASM(evp_cipher_free_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_cipher_get_asn1_aead_params
#  define evp_cipher_get_asn1_aead_params OPENSSL_MANGLER(evp_cipher_get_asn1_aead_params)
# endif
#else
# ifndef _evp_cipher_get_asn1_aead_params
#  define _evp_cipher_get_asn1_aead_params OPENSSL_MANGLER_ASM(evp_cipher_get_asn1_aead_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_cipher_get_number
#  define evp_cipher_get_number OPENSSL_MANGLER(evp_cipher_get_number)
# endif
#else
# ifndef _evp_cipher_get_number
#  define _evp_cipher_get_number OPENSSL_MANGLER_ASM(evp_cipher_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_cipher_new
#  define evp_cipher_new OPENSSL_MANGLER(evp_cipher_new)
# endif
#else
# ifndef _evp_cipher_new
#  define _evp_cipher_new OPENSSL_MANGLER_ASM(evp_cipher_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_cipher_param_to_asn1_ex
#  define evp_cipher_param_to_asn1_ex OPENSSL_MANGLER(evp_cipher_param_to_asn1_ex)
# endif
#else
# ifndef _evp_cipher_param_to_asn1_ex
#  define _evp_cipher_param_to_asn1_ex OPENSSL_MANGLER_ASM(evp_cipher_param_to_asn1_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_cipher_set_asn1_aead_params
#  define evp_cipher_set_asn1_aead_params OPENSSL_MANGLER(evp_cipher_set_asn1_aead_params)
# endif
#else
# ifndef _evp_cipher_set_asn1_aead_params
#  define _evp_cipher_set_asn1_aead_params OPENSSL_MANGLER_ASM(evp_cipher_set_asn1_aead_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_cleanup_int
#  define evp_cleanup_int OPENSSL_MANGLER(evp_cleanup_int)
# endif
#else
# ifndef _evp_cleanup_int
#  define _evp_cleanup_int OPENSSL_MANGLER_ASM(evp_cleanup_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_default_properties_enable_fips_int
#  define evp_default_properties_enable_fips_int OPENSSL_MANGLER(evp_default_properties_enable_fips_int)
# endif
#else
# ifndef _evp_default_properties_enable_fips_int
#  define _evp_default_properties_enable_fips_int OPENSSL_MANGLER_ASM(evp_default_properties_enable_fips_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_do_ciph_ctx_getparams
#  define evp_do_ciph_ctx_getparams OPENSSL_MANGLER(evp_do_ciph_ctx_getparams)
# endif
#else
# ifndef _evp_do_ciph_ctx_getparams
#  define _evp_do_ciph_ctx_getparams OPENSSL_MANGLER_ASM(evp_do_ciph_ctx_getparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_do_ciph_ctx_setparams
#  define evp_do_ciph_ctx_setparams OPENSSL_MANGLER(evp_do_ciph_ctx_setparams)
# endif
#else
# ifndef _evp_do_ciph_ctx_setparams
#  define _evp_do_ciph_ctx_setparams OPENSSL_MANGLER_ASM(evp_do_ciph_ctx_setparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_do_ciph_getparams
#  define evp_do_ciph_getparams OPENSSL_MANGLER(evp_do_ciph_getparams)
# endif
#else
# ifndef _evp_do_ciph_getparams
#  define _evp_do_ciph_getparams OPENSSL_MANGLER_ASM(evp_do_ciph_getparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_do_md_ctx_getparams
#  define evp_do_md_ctx_getparams OPENSSL_MANGLER(evp_do_md_ctx_getparams)
# endif
#else
# ifndef _evp_do_md_ctx_getparams
#  define _evp_do_md_ctx_getparams OPENSSL_MANGLER_ASM(evp_do_md_ctx_getparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_do_md_ctx_setparams
#  define evp_do_md_ctx_setparams OPENSSL_MANGLER(evp_do_md_ctx_setparams)
# endif
#else
# ifndef _evp_do_md_ctx_setparams
#  define _evp_do_md_ctx_setparams OPENSSL_MANGLER_ASM(evp_do_md_ctx_setparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_do_md_getparams
#  define evp_do_md_getparams OPENSSL_MANGLER(evp_do_md_getparams)
# endif
#else
# ifndef _evp_do_md_getparams
#  define _evp_do_md_getparams OPENSSL_MANGLER_ASM(evp_do_md_getparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_encode_ctx_set_flags
#  define evp_encode_ctx_set_flags OPENSSL_MANGLER(evp_encode_ctx_set_flags)
# endif
#else
# ifndef _evp_encode_ctx_set_flags
#  define _evp_encode_ctx_set_flags OPENSSL_MANGLER_ASM(evp_encode_ctx_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_generic_do_all
#  define evp_generic_do_all OPENSSL_MANGLER(evp_generic_do_all)
# endif
#else
# ifndef _evp_generic_do_all
#  define _evp_generic_do_all OPENSSL_MANGLER_ASM(evp_generic_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_generic_fetch
#  define evp_generic_fetch OPENSSL_MANGLER(evp_generic_fetch)
# endif
#else
# ifndef _evp_generic_fetch
#  define _evp_generic_fetch OPENSSL_MANGLER_ASM(evp_generic_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_generic_fetch_by_number
#  define evp_generic_fetch_by_number OPENSSL_MANGLER(evp_generic_fetch_by_number)
# endif
#else
# ifndef _evp_generic_fetch_by_number
#  define _evp_generic_fetch_by_number OPENSSL_MANGLER_ASM(evp_generic_fetch_by_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_generic_fetch_from_prov
#  define evp_generic_fetch_from_prov OPENSSL_MANGLER(evp_generic_fetch_from_prov)
# endif
#else
# ifndef _evp_generic_fetch_from_prov
#  define _evp_generic_fetch_from_prov OPENSSL_MANGLER_ASM(evp_generic_fetch_from_prov)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_get_cipherbyname_ex
#  define evp_get_cipherbyname_ex OPENSSL_MANGLER(evp_get_cipherbyname_ex)
# endif
#else
# ifndef _evp_get_cipherbyname_ex
#  define _evp_get_cipherbyname_ex OPENSSL_MANGLER_ASM(evp_get_cipherbyname_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_get_digestbyname_ex
#  define evp_get_digestbyname_ex OPENSSL_MANGLER(evp_get_digestbyname_ex)
# endif
#else
# ifndef _evp_get_digestbyname_ex
#  define _evp_get_digestbyname_ex OPENSSL_MANGLER_ASM(evp_get_digestbyname_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_get_global_properties_str
#  define evp_get_global_properties_str OPENSSL_MANGLER(evp_get_global_properties_str)
# endif
#else
# ifndef _evp_get_global_properties_str
#  define _evp_get_global_properties_str OPENSSL_MANGLER_ASM(evp_get_global_properties_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_is_a
#  define evp_is_a OPENSSL_MANGLER(evp_is_a)
# endif
#else
# ifndef _evp_is_a
#  define _evp_is_a OPENSSL_MANGLER_ASM(evp_is_a)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_kdf_get_number
#  define evp_kdf_get_number OPENSSL_MANGLER(evp_kdf_get_number)
# endif
#else
# ifndef _evp_kdf_get_number
#  define _evp_kdf_get_number OPENSSL_MANGLER_ASM(evp_kdf_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_kem_fetch_from_prov
#  define evp_kem_fetch_from_prov OPENSSL_MANGLER(evp_kem_fetch_from_prov)
# endif
#else
# ifndef _evp_kem_fetch_from_prov
#  define _evp_kem_fetch_from_prov OPENSSL_MANGLER_ASM(evp_kem_fetch_from_prov)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_kem_get_number
#  define evp_kem_get_number OPENSSL_MANGLER(evp_kem_get_number)
# endif
#else
# ifndef _evp_kem_get_number
#  define _evp_kem_get_number OPENSSL_MANGLER_ASM(evp_kem_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keyexch_fetch_from_prov
#  define evp_keyexch_fetch_from_prov OPENSSL_MANGLER(evp_keyexch_fetch_from_prov)
# endif
#else
# ifndef _evp_keyexch_fetch_from_prov
#  define _evp_keyexch_fetch_from_prov OPENSSL_MANGLER_ASM(evp_keyexch_fetch_from_prov)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keyexch_get_number
#  define evp_keyexch_get_number OPENSSL_MANGLER(evp_keyexch_get_number)
# endif
#else
# ifndef _evp_keyexch_get_number
#  define _evp_keyexch_get_number OPENSSL_MANGLER_ASM(evp_keyexch_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_dup
#  define evp_keymgmt_dup OPENSSL_MANGLER(evp_keymgmt_dup)
# endif
#else
# ifndef _evp_keymgmt_dup
#  define _evp_keymgmt_dup OPENSSL_MANGLER_ASM(evp_keymgmt_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_export
#  define evp_keymgmt_export OPENSSL_MANGLER(evp_keymgmt_export)
# endif
#else
# ifndef _evp_keymgmt_export
#  define _evp_keymgmt_export OPENSSL_MANGLER_ASM(evp_keymgmt_export)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_export_types
#  define evp_keymgmt_export_types OPENSSL_MANGLER(evp_keymgmt_export_types)
# endif
#else
# ifndef _evp_keymgmt_export_types
#  define _evp_keymgmt_export_types OPENSSL_MANGLER_ASM(evp_keymgmt_export_types)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_fetch_by_number
#  define evp_keymgmt_fetch_by_number OPENSSL_MANGLER(evp_keymgmt_fetch_by_number)
# endif
#else
# ifndef _evp_keymgmt_fetch_by_number
#  define _evp_keymgmt_fetch_by_number OPENSSL_MANGLER_ASM(evp_keymgmt_fetch_by_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_fetch_from_prov
#  define evp_keymgmt_fetch_from_prov OPENSSL_MANGLER(evp_keymgmt_fetch_from_prov)
# endif
#else
# ifndef _evp_keymgmt_fetch_from_prov
#  define _evp_keymgmt_fetch_from_prov OPENSSL_MANGLER_ASM(evp_keymgmt_fetch_from_prov)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_freedata
#  define evp_keymgmt_freedata OPENSSL_MANGLER(evp_keymgmt_freedata)
# endif
#else
# ifndef _evp_keymgmt_freedata
#  define _evp_keymgmt_freedata OPENSSL_MANGLER_ASM(evp_keymgmt_freedata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_gen
#  define evp_keymgmt_gen OPENSSL_MANGLER(evp_keymgmt_gen)
# endif
#else
# ifndef _evp_keymgmt_gen
#  define _evp_keymgmt_gen OPENSSL_MANGLER_ASM(evp_keymgmt_gen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_gen_cleanup
#  define evp_keymgmt_gen_cleanup OPENSSL_MANGLER(evp_keymgmt_gen_cleanup)
# endif
#else
# ifndef _evp_keymgmt_gen_cleanup
#  define _evp_keymgmt_gen_cleanup OPENSSL_MANGLER_ASM(evp_keymgmt_gen_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_gen_init
#  define evp_keymgmt_gen_init OPENSSL_MANGLER(evp_keymgmt_gen_init)
# endif
#else
# ifndef _evp_keymgmt_gen_init
#  define _evp_keymgmt_gen_init OPENSSL_MANGLER_ASM(evp_keymgmt_gen_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_gen_set_params
#  define evp_keymgmt_gen_set_params OPENSSL_MANGLER(evp_keymgmt_gen_set_params)
# endif
#else
# ifndef _evp_keymgmt_gen_set_params
#  define _evp_keymgmt_gen_set_params OPENSSL_MANGLER_ASM(evp_keymgmt_gen_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_gen_set_template
#  define evp_keymgmt_gen_set_template OPENSSL_MANGLER(evp_keymgmt_gen_set_template)
# endif
#else
# ifndef _evp_keymgmt_gen_set_template
#  define _evp_keymgmt_gen_set_template OPENSSL_MANGLER_ASM(evp_keymgmt_gen_set_template)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_get_number
#  define evp_keymgmt_get_number OPENSSL_MANGLER(evp_keymgmt_get_number)
# endif
#else
# ifndef _evp_keymgmt_get_number
#  define _evp_keymgmt_get_number OPENSSL_MANGLER_ASM(evp_keymgmt_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_get_params
#  define evp_keymgmt_get_params OPENSSL_MANGLER(evp_keymgmt_get_params)
# endif
#else
# ifndef _evp_keymgmt_get_params
#  define _evp_keymgmt_get_params OPENSSL_MANGLER_ASM(evp_keymgmt_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_has
#  define evp_keymgmt_has OPENSSL_MANGLER(evp_keymgmt_has)
# endif
#else
# ifndef _evp_keymgmt_has
#  define _evp_keymgmt_has OPENSSL_MANGLER_ASM(evp_keymgmt_has)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_has_load
#  define evp_keymgmt_has_load OPENSSL_MANGLER(evp_keymgmt_has_load)
# endif
#else
# ifndef _evp_keymgmt_has_load
#  define _evp_keymgmt_has_load OPENSSL_MANGLER_ASM(evp_keymgmt_has_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_import
#  define evp_keymgmt_import OPENSSL_MANGLER(evp_keymgmt_import)
# endif
#else
# ifndef _evp_keymgmt_import
#  define _evp_keymgmt_import OPENSSL_MANGLER_ASM(evp_keymgmt_import)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_import_types
#  define evp_keymgmt_import_types OPENSSL_MANGLER(evp_keymgmt_import_types)
# endif
#else
# ifndef _evp_keymgmt_import_types
#  define _evp_keymgmt_import_types OPENSSL_MANGLER_ASM(evp_keymgmt_import_types)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_load
#  define evp_keymgmt_load OPENSSL_MANGLER(evp_keymgmt_load)
# endif
#else
# ifndef _evp_keymgmt_load
#  define _evp_keymgmt_load OPENSSL_MANGLER_ASM(evp_keymgmt_load)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_match
#  define evp_keymgmt_match OPENSSL_MANGLER(evp_keymgmt_match)
# endif
#else
# ifndef _evp_keymgmt_match
#  define _evp_keymgmt_match OPENSSL_MANGLER_ASM(evp_keymgmt_match)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_newdata
#  define evp_keymgmt_newdata OPENSSL_MANGLER(evp_keymgmt_newdata)
# endif
#else
# ifndef _evp_keymgmt_newdata
#  define _evp_keymgmt_newdata OPENSSL_MANGLER_ASM(evp_keymgmt_newdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_set_params
#  define evp_keymgmt_set_params OPENSSL_MANGLER(evp_keymgmt_set_params)
# endif
#else
# ifndef _evp_keymgmt_set_params
#  define _evp_keymgmt_set_params OPENSSL_MANGLER_ASM(evp_keymgmt_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_assign_pkey
#  define evp_keymgmt_util_assign_pkey OPENSSL_MANGLER(evp_keymgmt_util_assign_pkey)
# endif
#else
# ifndef _evp_keymgmt_util_assign_pkey
#  define _evp_keymgmt_util_assign_pkey OPENSSL_MANGLER_ASM(evp_keymgmt_util_assign_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_cache_keydata
#  define evp_keymgmt_util_cache_keydata OPENSSL_MANGLER(evp_keymgmt_util_cache_keydata)
# endif
#else
# ifndef _evp_keymgmt_util_cache_keydata
#  define _evp_keymgmt_util_cache_keydata OPENSSL_MANGLER_ASM(evp_keymgmt_util_cache_keydata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_cache_keyinfo
#  define evp_keymgmt_util_cache_keyinfo OPENSSL_MANGLER(evp_keymgmt_util_cache_keyinfo)
# endif
#else
# ifndef _evp_keymgmt_util_cache_keyinfo
#  define _evp_keymgmt_util_cache_keyinfo OPENSSL_MANGLER_ASM(evp_keymgmt_util_cache_keyinfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_clear_operation_cache
#  define evp_keymgmt_util_clear_operation_cache OPENSSL_MANGLER(evp_keymgmt_util_clear_operation_cache)
# endif
#else
# ifndef _evp_keymgmt_util_clear_operation_cache
#  define _evp_keymgmt_util_clear_operation_cache OPENSSL_MANGLER_ASM(evp_keymgmt_util_clear_operation_cache)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_copy
#  define evp_keymgmt_util_copy OPENSSL_MANGLER(evp_keymgmt_util_copy)
# endif
#else
# ifndef _evp_keymgmt_util_copy
#  define _evp_keymgmt_util_copy OPENSSL_MANGLER_ASM(evp_keymgmt_util_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_export
#  define evp_keymgmt_util_export OPENSSL_MANGLER(evp_keymgmt_util_export)
# endif
#else
# ifndef _evp_keymgmt_util_export
#  define _evp_keymgmt_util_export OPENSSL_MANGLER_ASM(evp_keymgmt_util_export)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_export_to_provider
#  define evp_keymgmt_util_export_to_provider OPENSSL_MANGLER(evp_keymgmt_util_export_to_provider)
# endif
#else
# ifndef _evp_keymgmt_util_export_to_provider
#  define _evp_keymgmt_util_export_to_provider OPENSSL_MANGLER_ASM(evp_keymgmt_util_export_to_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_find_operation_cache
#  define evp_keymgmt_util_find_operation_cache OPENSSL_MANGLER(evp_keymgmt_util_find_operation_cache)
# endif
#else
# ifndef _evp_keymgmt_util_find_operation_cache
#  define _evp_keymgmt_util_find_operation_cache OPENSSL_MANGLER_ASM(evp_keymgmt_util_find_operation_cache)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_fromdata
#  define evp_keymgmt_util_fromdata OPENSSL_MANGLER(evp_keymgmt_util_fromdata)
# endif
#else
# ifndef _evp_keymgmt_util_fromdata
#  define _evp_keymgmt_util_fromdata OPENSSL_MANGLER_ASM(evp_keymgmt_util_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_gen
#  define evp_keymgmt_util_gen OPENSSL_MANGLER(evp_keymgmt_util_gen)
# endif
#else
# ifndef _evp_keymgmt_util_gen
#  define _evp_keymgmt_util_gen OPENSSL_MANGLER_ASM(evp_keymgmt_util_gen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_get_deflt_digest_name
#  define evp_keymgmt_util_get_deflt_digest_name OPENSSL_MANGLER(evp_keymgmt_util_get_deflt_digest_name)
# endif
#else
# ifndef _evp_keymgmt_util_get_deflt_digest_name
#  define _evp_keymgmt_util_get_deflt_digest_name OPENSSL_MANGLER_ASM(evp_keymgmt_util_get_deflt_digest_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_has
#  define evp_keymgmt_util_has OPENSSL_MANGLER(evp_keymgmt_util_has)
# endif
#else
# ifndef _evp_keymgmt_util_has
#  define _evp_keymgmt_util_has OPENSSL_MANGLER_ASM(evp_keymgmt_util_has)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_make_pkey
#  define evp_keymgmt_util_make_pkey OPENSSL_MANGLER(evp_keymgmt_util_make_pkey)
# endif
#else
# ifndef _evp_keymgmt_util_make_pkey
#  define _evp_keymgmt_util_make_pkey OPENSSL_MANGLER_ASM(evp_keymgmt_util_make_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_match
#  define evp_keymgmt_util_match OPENSSL_MANGLER(evp_keymgmt_util_match)
# endif
#else
# ifndef _evp_keymgmt_util_match
#  define _evp_keymgmt_util_match OPENSSL_MANGLER_ASM(evp_keymgmt_util_match)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_query_operation_name
#  define evp_keymgmt_util_query_operation_name OPENSSL_MANGLER(evp_keymgmt_util_query_operation_name)
# endif
#else
# ifndef _evp_keymgmt_util_query_operation_name
#  define _evp_keymgmt_util_query_operation_name OPENSSL_MANGLER_ASM(evp_keymgmt_util_query_operation_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_util_try_import
#  define evp_keymgmt_util_try_import OPENSSL_MANGLER(evp_keymgmt_util_try_import)
# endif
#else
# ifndef _evp_keymgmt_util_try_import
#  define _evp_keymgmt_util_try_import OPENSSL_MANGLER_ASM(evp_keymgmt_util_try_import)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_keymgmt_validate
#  define evp_keymgmt_validate OPENSSL_MANGLER(evp_keymgmt_validate)
# endif
#else
# ifndef _evp_keymgmt_validate
#  define _evp_keymgmt_validate OPENSSL_MANGLER_ASM(evp_keymgmt_validate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_mac_get_number
#  define evp_mac_get_number OPENSSL_MANGLER(evp_mac_get_number)
# endif
#else
# ifndef _evp_mac_get_number
#  define _evp_mac_get_number OPENSSL_MANGLER_ASM(evp_mac_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_md_ctx_clear_digest
#  define evp_md_ctx_clear_digest OPENSSL_MANGLER(evp_md_ctx_clear_digest)
# endif
#else
# ifndef _evp_md_ctx_clear_digest
#  define _evp_md_ctx_clear_digest OPENSSL_MANGLER_ASM(evp_md_ctx_clear_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_md_ctx_new_ex
#  define evp_md_ctx_new_ex OPENSSL_MANGLER(evp_md_ctx_new_ex)
# endif
#else
# ifndef _evp_md_ctx_new_ex
#  define _evp_md_ctx_new_ex OPENSSL_MANGLER_ASM(evp_md_ctx_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_md_free_int
#  define evp_md_free_int OPENSSL_MANGLER(evp_md_free_int)
# endif
#else
# ifndef _evp_md_free_int
#  define _evp_md_free_int OPENSSL_MANGLER_ASM(evp_md_free_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_md_get_number
#  define evp_md_get_number OPENSSL_MANGLER(evp_md_get_number)
# endif
#else
# ifndef _evp_md_get_number
#  define _evp_md_get_number OPENSSL_MANGLER_ASM(evp_md_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_md_new
#  define evp_md_new OPENSSL_MANGLER(evp_md_new)
# endif
#else
# ifndef _evp_md_new
#  define _evp_md_new OPENSSL_MANGLER_ASM(evp_md_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_method_store_cache_flush
#  define evp_method_store_cache_flush OPENSSL_MANGLER(evp_method_store_cache_flush)
# endif
#else
# ifndef _evp_method_store_cache_flush
#  define _evp_method_store_cache_flush OPENSSL_MANGLER_ASM(evp_method_store_cache_flush)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_method_store_remove_all_provided
#  define evp_method_store_remove_all_provided OPENSSL_MANGLER(evp_method_store_remove_all_provided)
# endif
#else
# ifndef _evp_method_store_remove_all_provided
#  define _evp_method_store_remove_all_provided OPENSSL_MANGLER_ASM(evp_method_store_remove_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_names_do_all
#  define evp_names_do_all OPENSSL_MANGLER(evp_names_do_all)
# endif
#else
# ifndef _evp_names_do_all
#  define _evp_names_do_all OPENSSL_MANGLER_ASM(evp_names_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkcs82pkey_legacy
#  define evp_pkcs82pkey_legacy OPENSSL_MANGLER(evp_pkcs82pkey_legacy)
# endif
#else
# ifndef _evp_pkcs82pkey_legacy
#  define _evp_pkcs82pkey_legacy OPENSSL_MANGLER_ASM(evp_pkcs82pkey_legacy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_copy_downgraded
#  define evp_pkey_copy_downgraded OPENSSL_MANGLER(evp_pkey_copy_downgraded)
# endif
#else
# ifndef _evp_pkey_copy_downgraded
#  define _evp_pkey_copy_downgraded OPENSSL_MANGLER_ASM(evp_pkey_copy_downgraded)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_ctrl_str_to_param
#  define evp_pkey_ctx_ctrl_str_to_param OPENSSL_MANGLER(evp_pkey_ctx_ctrl_str_to_param)
# endif
#else
# ifndef _evp_pkey_ctx_ctrl_str_to_param
#  define _evp_pkey_ctx_ctrl_str_to_param OPENSSL_MANGLER_ASM(evp_pkey_ctx_ctrl_str_to_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_ctrl_to_param
#  define evp_pkey_ctx_ctrl_to_param OPENSSL_MANGLER(evp_pkey_ctx_ctrl_to_param)
# endif
#else
# ifndef _evp_pkey_ctx_ctrl_to_param
#  define _evp_pkey_ctx_ctrl_to_param OPENSSL_MANGLER_ASM(evp_pkey_ctx_ctrl_to_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_free_old_ops
#  define evp_pkey_ctx_free_old_ops OPENSSL_MANGLER(evp_pkey_ctx_free_old_ops)
# endif
#else
# ifndef _evp_pkey_ctx_free_old_ops
#  define _evp_pkey_ctx_free_old_ops OPENSSL_MANGLER_ASM(evp_pkey_ctx_free_old_ops)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_get1_id_len_prov
#  define evp_pkey_ctx_get1_id_len_prov OPENSSL_MANGLER(evp_pkey_ctx_get1_id_len_prov)
# endif
#else
# ifndef _evp_pkey_ctx_get1_id_len_prov
#  define _evp_pkey_ctx_get1_id_len_prov OPENSSL_MANGLER_ASM(evp_pkey_ctx_get1_id_len_prov)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_get1_id_prov
#  define evp_pkey_ctx_get1_id_prov OPENSSL_MANGLER(evp_pkey_ctx_get1_id_prov)
# endif
#else
# ifndef _evp_pkey_ctx_get1_id_prov
#  define _evp_pkey_ctx_get1_id_prov OPENSSL_MANGLER_ASM(evp_pkey_ctx_get1_id_prov)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_get_params_strict
#  define evp_pkey_ctx_get_params_strict OPENSSL_MANGLER(evp_pkey_ctx_get_params_strict)
# endif
#else
# ifndef _evp_pkey_ctx_get_params_strict
#  define _evp_pkey_ctx_get_params_strict OPENSSL_MANGLER_ASM(evp_pkey_ctx_get_params_strict)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_get_params_to_ctrl
#  define evp_pkey_ctx_get_params_to_ctrl OPENSSL_MANGLER(evp_pkey_ctx_get_params_to_ctrl)
# endif
#else
# ifndef _evp_pkey_ctx_get_params_to_ctrl
#  define _evp_pkey_ctx_get_params_to_ctrl OPENSSL_MANGLER_ASM(evp_pkey_ctx_get_params_to_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_set1_id_prov
#  define evp_pkey_ctx_set1_id_prov OPENSSL_MANGLER(evp_pkey_ctx_set1_id_prov)
# endif
#else
# ifndef _evp_pkey_ctx_set1_id_prov
#  define _evp_pkey_ctx_set1_id_prov OPENSSL_MANGLER_ASM(evp_pkey_ctx_set1_id_prov)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_set_params_strict
#  define evp_pkey_ctx_set_params_strict OPENSSL_MANGLER(evp_pkey_ctx_set_params_strict)
# endif
#else
# ifndef _evp_pkey_ctx_set_params_strict
#  define _evp_pkey_ctx_set_params_strict OPENSSL_MANGLER_ASM(evp_pkey_ctx_set_params_strict)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_set_params_to_ctrl
#  define evp_pkey_ctx_set_params_to_ctrl OPENSSL_MANGLER(evp_pkey_ctx_set_params_to_ctrl)
# endif
#else
# ifndef _evp_pkey_ctx_set_params_to_ctrl
#  define _evp_pkey_ctx_set_params_to_ctrl OPENSSL_MANGLER_ASM(evp_pkey_ctx_set_params_to_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_state
#  define evp_pkey_ctx_state OPENSSL_MANGLER(evp_pkey_ctx_state)
# endif
#else
# ifndef _evp_pkey_ctx_state
#  define _evp_pkey_ctx_state OPENSSL_MANGLER_ASM(evp_pkey_ctx_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_ctx_use_cached_data
#  define evp_pkey_ctx_use_cached_data OPENSSL_MANGLER(evp_pkey_ctx_use_cached_data)
# endif
#else
# ifndef _evp_pkey_ctx_use_cached_data
#  define _evp_pkey_ctx_use_cached_data OPENSSL_MANGLER_ASM(evp_pkey_ctx_use_cached_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_export_to_provider
#  define evp_pkey_export_to_provider OPENSSL_MANGLER(evp_pkey_export_to_provider)
# endif
#else
# ifndef _evp_pkey_export_to_provider
#  define _evp_pkey_export_to_provider OPENSSL_MANGLER_ASM(evp_pkey_export_to_provider)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_free_legacy
#  define evp_pkey_free_legacy OPENSSL_MANGLER(evp_pkey_free_legacy)
# endif
#else
# ifndef _evp_pkey_free_legacy
#  define _evp_pkey_free_legacy OPENSSL_MANGLER_ASM(evp_pkey_free_legacy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_get0_DH_int
#  define evp_pkey_get0_DH_int OPENSSL_MANGLER(evp_pkey_get0_DH_int)
# endif
#else
# ifndef _evp_pkey_get0_DH_int
#  define _evp_pkey_get0_DH_int OPENSSL_MANGLER_ASM(evp_pkey_get0_DH_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_get0_EC_KEY_int
#  define evp_pkey_get0_EC_KEY_int OPENSSL_MANGLER(evp_pkey_get0_EC_KEY_int)
# endif
#else
# ifndef _evp_pkey_get0_EC_KEY_int
#  define _evp_pkey_get0_EC_KEY_int OPENSSL_MANGLER_ASM(evp_pkey_get0_EC_KEY_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_get0_RSA_int
#  define evp_pkey_get0_RSA_int OPENSSL_MANGLER(evp_pkey_get0_RSA_int)
# endif
#else
# ifndef _evp_pkey_get0_RSA_int
#  define _evp_pkey_get0_RSA_int OPENSSL_MANGLER_ASM(evp_pkey_get0_RSA_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_get_legacy
#  define evp_pkey_get_legacy OPENSSL_MANGLER(evp_pkey_get_legacy)
# endif
#else
# ifndef _evp_pkey_get_legacy
#  define _evp_pkey_get_legacy OPENSSL_MANGLER_ASM(evp_pkey_get_legacy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_get_params_to_ctrl
#  define evp_pkey_get_params_to_ctrl OPENSSL_MANGLER(evp_pkey_get_params_to_ctrl)
# endif
#else
# ifndef _evp_pkey_get_params_to_ctrl
#  define _evp_pkey_get_params_to_ctrl OPENSSL_MANGLER_ASM(evp_pkey_get_params_to_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_name2type
#  define evp_pkey_name2type OPENSSL_MANGLER(evp_pkey_name2type)
# endif
#else
# ifndef _evp_pkey_name2type
#  define _evp_pkey_name2type OPENSSL_MANGLER_ASM(evp_pkey_name2type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_set_cb_translate
#  define evp_pkey_set_cb_translate OPENSSL_MANGLER(evp_pkey_set_cb_translate)
# endif
#else
# ifndef _evp_pkey_set_cb_translate
#  define _evp_pkey_set_cb_translate OPENSSL_MANGLER_ASM(evp_pkey_set_cb_translate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_pkey_type2name
#  define evp_pkey_type2name OPENSSL_MANGLER(evp_pkey_type2name)
# endif
#else
# ifndef _evp_pkey_type2name
#  define _evp_pkey_type2name OPENSSL_MANGLER_ASM(evp_pkey_type2name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_rand_get_number
#  define evp_rand_get_number OPENSSL_MANGLER(evp_rand_get_number)
# endif
#else
# ifndef _evp_rand_get_number
#  define _evp_rand_get_number OPENSSL_MANGLER_ASM(evp_rand_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_set_default_properties_int
#  define evp_set_default_properties_int OPENSSL_MANGLER(evp_set_default_properties_int)
# endif
#else
# ifndef _evp_set_default_properties_int
#  define _evp_set_default_properties_int OPENSSL_MANGLER_ASM(evp_set_default_properties_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_signature_fetch_from_prov
#  define evp_signature_fetch_from_prov OPENSSL_MANGLER(evp_signature_fetch_from_prov)
# endif
#else
# ifndef _evp_signature_fetch_from_prov
#  define _evp_signature_fetch_from_prov OPENSSL_MANGLER_ASM(evp_signature_fetch_from_prov)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef evp_signature_get_number
#  define evp_signature_get_number OPENSSL_MANGLER(evp_signature_get_number)
# endif
#else
# ifndef _evp_signature_get_number
#  define _evp_signature_get_number OPENSSL_MANGLER_ASM(evp_signature_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef extension_is_relevant
#  define extension_is_relevant OPENSSL_MANGLER(extension_is_relevant)
# endif
#else
# ifndef _extension_is_relevant
#  define _extension_is_relevant OPENSSL_MANGLER_ASM(extension_is_relevant)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef fcrypt_body
#  define fcrypt_body OPENSSL_MANGLER(fcrypt_body)
# endif
#else
# ifndef _fcrypt_body
#  define _fcrypt_body OPENSSL_MANGLER_ASM(fcrypt_body)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gcm_ghash_4bit
#  define gcm_ghash_4bit OPENSSL_MANGLER(gcm_ghash_4bit)
# endif
#else
# ifndef _gcm_ghash_4bit
#  define _gcm_ghash_4bit OPENSSL_MANGLER_ASM(gcm_ghash_4bit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gcm_ghash_avx
#  define gcm_ghash_avx OPENSSL_MANGLER(gcm_ghash_avx)
# endif
#else
# ifndef _gcm_ghash_avx
#  define _gcm_ghash_avx OPENSSL_MANGLER_ASM(gcm_ghash_avx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gcm_ghash_clmul
#  define gcm_ghash_clmul OPENSSL_MANGLER(gcm_ghash_clmul)
# endif
#else
# ifndef _gcm_ghash_clmul
#  define _gcm_ghash_clmul OPENSSL_MANGLER_ASM(gcm_ghash_clmul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gcm_gmult_4bit
#  define gcm_gmult_4bit OPENSSL_MANGLER(gcm_gmult_4bit)
# endif
#else
# ifndef _gcm_gmult_4bit
#  define _gcm_gmult_4bit OPENSSL_MANGLER_ASM(gcm_gmult_4bit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gcm_gmult_avx
#  define gcm_gmult_avx OPENSSL_MANGLER(gcm_gmult_avx)
# endif
#else
# ifndef _gcm_gmult_avx
#  define _gcm_gmult_avx OPENSSL_MANGLER_ASM(gcm_gmult_avx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gcm_gmult_clmul
#  define gcm_gmult_clmul OPENSSL_MANGLER(gcm_gmult_clmul)
# endif
#else
# ifndef _gcm_gmult_clmul
#  define _gcm_gmult_clmul OPENSSL_MANGLER_ASM(gcm_gmult_clmul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gcm_init_avx
#  define gcm_init_avx OPENSSL_MANGLER(gcm_init_avx)
# endif
#else
# ifndef _gcm_init_avx
#  define _gcm_init_avx OPENSSL_MANGLER_ASM(gcm_init_avx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gcm_init_clmul
#  define gcm_init_clmul OPENSSL_MANGLER(gcm_init_clmul)
# endif
#else
# ifndef _gcm_init_clmul
#  define _gcm_init_clmul OPENSSL_MANGLER_ASM(gcm_init_clmul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef get_ca_names
#  define get_ca_names OPENSSL_MANGLER(get_ca_names)
# endif
#else
# ifndef _get_ca_names
#  define _get_ca_names OPENSSL_MANGLER_ASM(get_ca_names)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_add
#  define gf_add OPENSSL_MANGLER(gf_add)
# endif
#else
# ifndef _gf_add
#  define _gf_add OPENSSL_MANGLER_ASM(gf_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_deserialize
#  define gf_deserialize OPENSSL_MANGLER(gf_deserialize)
# endif
#else
# ifndef _gf_deserialize
#  define _gf_deserialize OPENSSL_MANGLER_ASM(gf_deserialize)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_eq
#  define gf_eq OPENSSL_MANGLER(gf_eq)
# endif
#else
# ifndef _gf_eq
#  define _gf_eq OPENSSL_MANGLER_ASM(gf_eq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_hibit
#  define gf_hibit OPENSSL_MANGLER(gf_hibit)
# endif
#else
# ifndef _gf_hibit
#  define _gf_hibit OPENSSL_MANGLER_ASM(gf_hibit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_isr
#  define gf_isr OPENSSL_MANGLER(gf_isr)
# endif
#else
# ifndef _gf_isr
#  define _gf_isr OPENSSL_MANGLER_ASM(gf_isr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_lobit
#  define gf_lobit OPENSSL_MANGLER(gf_lobit)
# endif
#else
# ifndef _gf_lobit
#  define _gf_lobit OPENSSL_MANGLER_ASM(gf_lobit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_mul
#  define gf_mul OPENSSL_MANGLER(gf_mul)
# endif
#else
# ifndef _gf_mul
#  define _gf_mul OPENSSL_MANGLER_ASM(gf_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_mulw_unsigned
#  define gf_mulw_unsigned OPENSSL_MANGLER(gf_mulw_unsigned)
# endif
#else
# ifndef _gf_mulw_unsigned
#  define _gf_mulw_unsigned OPENSSL_MANGLER_ASM(gf_mulw_unsigned)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_serialize
#  define gf_serialize OPENSSL_MANGLER(gf_serialize)
# endif
#else
# ifndef _gf_serialize
#  define _gf_serialize OPENSSL_MANGLER_ASM(gf_serialize)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_sqr
#  define gf_sqr OPENSSL_MANGLER(gf_sqr)
# endif
#else
# ifndef _gf_sqr
#  define _gf_sqr OPENSSL_MANGLER_ASM(gf_sqr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_strong_reduce
#  define gf_strong_reduce OPENSSL_MANGLER(gf_strong_reduce)
# endif
#else
# ifndef _gf_strong_reduce
#  define _gf_strong_reduce OPENSSL_MANGLER_ASM(gf_strong_reduce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef gf_sub
#  define gf_sub OPENSSL_MANGLER(gf_sub)
# endif
#else
# ifndef _gf_sub
#  define _gf_sub OPENSSL_MANGLER_ASM(gf_sub)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef global_engine_lock
#  define global_engine_lock OPENSSL_MANGLER(global_engine_lock)
# endif
#else
# ifndef _global_engine_lock
#  define _global_engine_lock OPENSSL_MANGLER_ASM(global_engine_lock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2a_ACCESS_DESCRIPTION
#  define i2a_ACCESS_DESCRIPTION OPENSSL_MANGLER(i2a_ACCESS_DESCRIPTION)
# endif
#else
# ifndef _i2a_ACCESS_DESCRIPTION
#  define _i2a_ACCESS_DESCRIPTION OPENSSL_MANGLER_ASM(i2a_ACCESS_DESCRIPTION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2a_ASN1_ENUMERATED
#  define i2a_ASN1_ENUMERATED OPENSSL_MANGLER(i2a_ASN1_ENUMERATED)
# endif
#else
# ifndef _i2a_ASN1_ENUMERATED
#  define _i2a_ASN1_ENUMERATED OPENSSL_MANGLER_ASM(i2a_ASN1_ENUMERATED)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2a_ASN1_INTEGER
#  define i2a_ASN1_INTEGER OPENSSL_MANGLER(i2a_ASN1_INTEGER)
# endif
#else
# ifndef _i2a_ASN1_INTEGER
#  define _i2a_ASN1_INTEGER OPENSSL_MANGLER_ASM(i2a_ASN1_INTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2a_ASN1_OBJECT
#  define i2a_ASN1_OBJECT OPENSSL_MANGLER(i2a_ASN1_OBJECT)
# endif
#else
# ifndef _i2a_ASN1_OBJECT
#  define _i2a_ASN1_OBJECT OPENSSL_MANGLER_ASM(i2a_ASN1_OBJECT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2a_ASN1_STRING
#  define i2a_ASN1_STRING OPENSSL_MANGLER(i2a_ASN1_STRING)
# endif
#else
# ifndef _i2a_ASN1_STRING
#  define _i2a_ASN1_STRING OPENSSL_MANGLER_ASM(i2a_ASN1_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2b_PVK_bio
#  define i2b_PVK_bio OPENSSL_MANGLER(i2b_PVK_bio)
# endif
#else
# ifndef _i2b_PVK_bio
#  define _i2b_PVK_bio OPENSSL_MANGLER_ASM(i2b_PVK_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2b_PVK_bio_ex
#  define i2b_PVK_bio_ex OPENSSL_MANGLER(i2b_PVK_bio_ex)
# endif
#else
# ifndef _i2b_PVK_bio_ex
#  define _i2b_PVK_bio_ex OPENSSL_MANGLER_ASM(i2b_PVK_bio_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2b_PrivateKey_bio
#  define i2b_PrivateKey_bio OPENSSL_MANGLER(i2b_PrivateKey_bio)
# endif
#else
# ifndef _i2b_PrivateKey_bio
#  define _i2b_PrivateKey_bio OPENSSL_MANGLER_ASM(i2b_PrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2b_PublicKey_bio
#  define i2b_PublicKey_bio OPENSSL_MANGLER(i2b_PublicKey_bio)
# endif
#else
# ifndef _i2b_PublicKey_bio
#  define _i2b_PublicKey_bio OPENSSL_MANGLER_ASM(i2b_PublicKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ACCESS_DESCRIPTION
#  define i2d_ACCESS_DESCRIPTION OPENSSL_MANGLER(i2d_ACCESS_DESCRIPTION)
# endif
#else
# ifndef _i2d_ACCESS_DESCRIPTION
#  define _i2d_ACCESS_DESCRIPTION OPENSSL_MANGLER_ASM(i2d_ACCESS_DESCRIPTION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ADMISSIONS
#  define i2d_ADMISSIONS OPENSSL_MANGLER(i2d_ADMISSIONS)
# endif
#else
# ifndef _i2d_ADMISSIONS
#  define _i2d_ADMISSIONS OPENSSL_MANGLER_ASM(i2d_ADMISSIONS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ADMISSION_SYNTAX
#  define i2d_ADMISSION_SYNTAX OPENSSL_MANGLER(i2d_ADMISSION_SYNTAX)
# endif
#else
# ifndef _i2d_ADMISSION_SYNTAX
#  define _i2d_ADMISSION_SYNTAX OPENSSL_MANGLER_ASM(i2d_ADMISSION_SYNTAX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASIdOrRange
#  define i2d_ASIdOrRange OPENSSL_MANGLER(i2d_ASIdOrRange)
# endif
#else
# ifndef _i2d_ASIdOrRange
#  define _i2d_ASIdOrRange OPENSSL_MANGLER_ASM(i2d_ASIdOrRange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASIdentifierChoice
#  define i2d_ASIdentifierChoice OPENSSL_MANGLER(i2d_ASIdentifierChoice)
# endif
#else
# ifndef _i2d_ASIdentifierChoice
#  define _i2d_ASIdentifierChoice OPENSSL_MANGLER_ASM(i2d_ASIdentifierChoice)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASIdentifiers
#  define i2d_ASIdentifiers OPENSSL_MANGLER(i2d_ASIdentifiers)
# endif
#else
# ifndef _i2d_ASIdentifiers
#  define _i2d_ASIdentifiers OPENSSL_MANGLER_ASM(i2d_ASIdentifiers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_BIT_STRING
#  define i2d_ASN1_BIT_STRING OPENSSL_MANGLER(i2d_ASN1_BIT_STRING)
# endif
#else
# ifndef _i2d_ASN1_BIT_STRING
#  define _i2d_ASN1_BIT_STRING OPENSSL_MANGLER_ASM(i2d_ASN1_BIT_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_BMPSTRING
#  define i2d_ASN1_BMPSTRING OPENSSL_MANGLER(i2d_ASN1_BMPSTRING)
# endif
#else
# ifndef _i2d_ASN1_BMPSTRING
#  define _i2d_ASN1_BMPSTRING OPENSSL_MANGLER_ASM(i2d_ASN1_BMPSTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_ENUMERATED
#  define i2d_ASN1_ENUMERATED OPENSSL_MANGLER(i2d_ASN1_ENUMERATED)
# endif
#else
# ifndef _i2d_ASN1_ENUMERATED
#  define _i2d_ASN1_ENUMERATED OPENSSL_MANGLER_ASM(i2d_ASN1_ENUMERATED)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_GENERALIZEDTIME
#  define i2d_ASN1_GENERALIZEDTIME OPENSSL_MANGLER(i2d_ASN1_GENERALIZEDTIME)
# endif
#else
# ifndef _i2d_ASN1_GENERALIZEDTIME
#  define _i2d_ASN1_GENERALIZEDTIME OPENSSL_MANGLER_ASM(i2d_ASN1_GENERALIZEDTIME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_GENERALSTRING
#  define i2d_ASN1_GENERALSTRING OPENSSL_MANGLER(i2d_ASN1_GENERALSTRING)
# endif
#else
# ifndef _i2d_ASN1_GENERALSTRING
#  define _i2d_ASN1_GENERALSTRING OPENSSL_MANGLER_ASM(i2d_ASN1_GENERALSTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_IA5STRING
#  define i2d_ASN1_IA5STRING OPENSSL_MANGLER(i2d_ASN1_IA5STRING)
# endif
#else
# ifndef _i2d_ASN1_IA5STRING
#  define _i2d_ASN1_IA5STRING OPENSSL_MANGLER_ASM(i2d_ASN1_IA5STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_INTEGER
#  define i2d_ASN1_INTEGER OPENSSL_MANGLER(i2d_ASN1_INTEGER)
# endif
#else
# ifndef _i2d_ASN1_INTEGER
#  define _i2d_ASN1_INTEGER OPENSSL_MANGLER_ASM(i2d_ASN1_INTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_NULL
#  define i2d_ASN1_NULL OPENSSL_MANGLER(i2d_ASN1_NULL)
# endif
#else
# ifndef _i2d_ASN1_NULL
#  define _i2d_ASN1_NULL OPENSSL_MANGLER_ASM(i2d_ASN1_NULL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_OBJECT
#  define i2d_ASN1_OBJECT OPENSSL_MANGLER(i2d_ASN1_OBJECT)
# endif
#else
# ifndef _i2d_ASN1_OBJECT
#  define _i2d_ASN1_OBJECT OPENSSL_MANGLER_ASM(i2d_ASN1_OBJECT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_OCTET_STRING
#  define i2d_ASN1_OCTET_STRING OPENSSL_MANGLER(i2d_ASN1_OCTET_STRING)
# endif
#else
# ifndef _i2d_ASN1_OCTET_STRING
#  define _i2d_ASN1_OCTET_STRING OPENSSL_MANGLER_ASM(i2d_ASN1_OCTET_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_PRINTABLE
#  define i2d_ASN1_PRINTABLE OPENSSL_MANGLER(i2d_ASN1_PRINTABLE)
# endif
#else
# ifndef _i2d_ASN1_PRINTABLE
#  define _i2d_ASN1_PRINTABLE OPENSSL_MANGLER_ASM(i2d_ASN1_PRINTABLE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_PRINTABLESTRING
#  define i2d_ASN1_PRINTABLESTRING OPENSSL_MANGLER(i2d_ASN1_PRINTABLESTRING)
# endif
#else
# ifndef _i2d_ASN1_PRINTABLESTRING
#  define _i2d_ASN1_PRINTABLESTRING OPENSSL_MANGLER_ASM(i2d_ASN1_PRINTABLESTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_SEQUENCE_ANY
#  define i2d_ASN1_SEQUENCE_ANY OPENSSL_MANGLER(i2d_ASN1_SEQUENCE_ANY)
# endif
#else
# ifndef _i2d_ASN1_SEQUENCE_ANY
#  define _i2d_ASN1_SEQUENCE_ANY OPENSSL_MANGLER_ASM(i2d_ASN1_SEQUENCE_ANY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_SET_ANY
#  define i2d_ASN1_SET_ANY OPENSSL_MANGLER(i2d_ASN1_SET_ANY)
# endif
#else
# ifndef _i2d_ASN1_SET_ANY
#  define _i2d_ASN1_SET_ANY OPENSSL_MANGLER_ASM(i2d_ASN1_SET_ANY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_T61STRING
#  define i2d_ASN1_T61STRING OPENSSL_MANGLER(i2d_ASN1_T61STRING)
# endif
#else
# ifndef _i2d_ASN1_T61STRING
#  define _i2d_ASN1_T61STRING OPENSSL_MANGLER_ASM(i2d_ASN1_T61STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_TIME
#  define i2d_ASN1_TIME OPENSSL_MANGLER(i2d_ASN1_TIME)
# endif
#else
# ifndef _i2d_ASN1_TIME
#  define _i2d_ASN1_TIME OPENSSL_MANGLER_ASM(i2d_ASN1_TIME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_TYPE
#  define i2d_ASN1_TYPE OPENSSL_MANGLER(i2d_ASN1_TYPE)
# endif
#else
# ifndef _i2d_ASN1_TYPE
#  define _i2d_ASN1_TYPE OPENSSL_MANGLER_ASM(i2d_ASN1_TYPE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_UNIVERSALSTRING
#  define i2d_ASN1_UNIVERSALSTRING OPENSSL_MANGLER(i2d_ASN1_UNIVERSALSTRING)
# endif
#else
# ifndef _i2d_ASN1_UNIVERSALSTRING
#  define _i2d_ASN1_UNIVERSALSTRING OPENSSL_MANGLER_ASM(i2d_ASN1_UNIVERSALSTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_UTCTIME
#  define i2d_ASN1_UTCTIME OPENSSL_MANGLER(i2d_ASN1_UTCTIME)
# endif
#else
# ifndef _i2d_ASN1_UTCTIME
#  define _i2d_ASN1_UTCTIME OPENSSL_MANGLER_ASM(i2d_ASN1_UTCTIME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_UTF8STRING
#  define i2d_ASN1_UTF8STRING OPENSSL_MANGLER(i2d_ASN1_UTF8STRING)
# endif
#else
# ifndef _i2d_ASN1_UTF8STRING
#  define _i2d_ASN1_UTF8STRING OPENSSL_MANGLER_ASM(i2d_ASN1_UTF8STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_VISIBLESTRING
#  define i2d_ASN1_VISIBLESTRING OPENSSL_MANGLER(i2d_ASN1_VISIBLESTRING)
# endif
#else
# ifndef _i2d_ASN1_VISIBLESTRING
#  define _i2d_ASN1_VISIBLESTRING OPENSSL_MANGLER_ASM(i2d_ASN1_VISIBLESTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASN1_bio_stream
#  define i2d_ASN1_bio_stream OPENSSL_MANGLER(i2d_ASN1_bio_stream)
# endif
#else
# ifndef _i2d_ASN1_bio_stream
#  define _i2d_ASN1_bio_stream OPENSSL_MANGLER_ASM(i2d_ASN1_bio_stream)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ASRange
#  define i2d_ASRange OPENSSL_MANGLER(i2d_ASRange)
# endif
#else
# ifndef _i2d_ASRange
#  define _i2d_ASRange OPENSSL_MANGLER_ASM(i2d_ASRange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_AUTHORITY_INFO_ACCESS
#  define i2d_AUTHORITY_INFO_ACCESS OPENSSL_MANGLER(i2d_AUTHORITY_INFO_ACCESS)
# endif
#else
# ifndef _i2d_AUTHORITY_INFO_ACCESS
#  define _i2d_AUTHORITY_INFO_ACCESS OPENSSL_MANGLER_ASM(i2d_AUTHORITY_INFO_ACCESS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_AUTHORITY_KEYID
#  define i2d_AUTHORITY_KEYID OPENSSL_MANGLER(i2d_AUTHORITY_KEYID)
# endif
#else
# ifndef _i2d_AUTHORITY_KEYID
#  define _i2d_AUTHORITY_KEYID OPENSSL_MANGLER_ASM(i2d_AUTHORITY_KEYID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_BASIC_CONSTRAINTS
#  define i2d_BASIC_CONSTRAINTS OPENSSL_MANGLER(i2d_BASIC_CONSTRAINTS)
# endif
#else
# ifndef _i2d_BASIC_CONSTRAINTS
#  define _i2d_BASIC_CONSTRAINTS OPENSSL_MANGLER_ASM(i2d_BASIC_CONSTRAINTS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_CERTIFICATEPOLICIES
#  define i2d_CERTIFICATEPOLICIES OPENSSL_MANGLER(i2d_CERTIFICATEPOLICIES)
# endif
#else
# ifndef _i2d_CERTIFICATEPOLICIES
#  define _i2d_CERTIFICATEPOLICIES OPENSSL_MANGLER_ASM(i2d_CERTIFICATEPOLICIES)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_CMS_ContentInfo
#  define i2d_CMS_ContentInfo OPENSSL_MANGLER(i2d_CMS_ContentInfo)
# endif
#else
# ifndef _i2d_CMS_ContentInfo
#  define _i2d_CMS_ContentInfo OPENSSL_MANGLER_ASM(i2d_CMS_ContentInfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_CMS_ReceiptRequest
#  define i2d_CMS_ReceiptRequest OPENSSL_MANGLER(i2d_CMS_ReceiptRequest)
# endif
#else
# ifndef _i2d_CMS_ReceiptRequest
#  define _i2d_CMS_ReceiptRequest OPENSSL_MANGLER_ASM(i2d_CMS_ReceiptRequest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_CMS_bio
#  define i2d_CMS_bio OPENSSL_MANGLER(i2d_CMS_bio)
# endif
#else
# ifndef _i2d_CMS_bio
#  define _i2d_CMS_bio OPENSSL_MANGLER_ASM(i2d_CMS_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_CMS_bio_stream
#  define i2d_CMS_bio_stream OPENSSL_MANGLER(i2d_CMS_bio_stream)
# endif
#else
# ifndef _i2d_CMS_bio_stream
#  define _i2d_CMS_bio_stream OPENSSL_MANGLER_ASM(i2d_CMS_bio_stream)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_CRL_DIST_POINTS
#  define i2d_CRL_DIST_POINTS OPENSSL_MANGLER(i2d_CRL_DIST_POINTS)
# endif
#else
# ifndef _i2d_CRL_DIST_POINTS
#  define _i2d_CRL_DIST_POINTS OPENSSL_MANGLER_ASM(i2d_CRL_DIST_POINTS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DHparams
#  define i2d_DHparams OPENSSL_MANGLER(i2d_DHparams)
# endif
#else
# ifndef _i2d_DHparams
#  define _i2d_DHparams OPENSSL_MANGLER_ASM(i2d_DHparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DHxparams
#  define i2d_DHxparams OPENSSL_MANGLER(i2d_DHxparams)
# endif
#else
# ifndef _i2d_DHxparams
#  define _i2d_DHxparams OPENSSL_MANGLER_ASM(i2d_DHxparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DIRECTORYSTRING
#  define i2d_DIRECTORYSTRING OPENSSL_MANGLER(i2d_DIRECTORYSTRING)
# endif
#else
# ifndef _i2d_DIRECTORYSTRING
#  define _i2d_DIRECTORYSTRING OPENSSL_MANGLER_ASM(i2d_DIRECTORYSTRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DISPLAYTEXT
#  define i2d_DISPLAYTEXT OPENSSL_MANGLER(i2d_DISPLAYTEXT)
# endif
#else
# ifndef _i2d_DISPLAYTEXT
#  define _i2d_DISPLAYTEXT OPENSSL_MANGLER_ASM(i2d_DISPLAYTEXT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DIST_POINT
#  define i2d_DIST_POINT OPENSSL_MANGLER(i2d_DIST_POINT)
# endif
#else
# ifndef _i2d_DIST_POINT
#  define _i2d_DIST_POINT OPENSSL_MANGLER_ASM(i2d_DIST_POINT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DIST_POINT_NAME
#  define i2d_DIST_POINT_NAME OPENSSL_MANGLER(i2d_DIST_POINT_NAME)
# endif
#else
# ifndef _i2d_DIST_POINT_NAME
#  define _i2d_DIST_POINT_NAME OPENSSL_MANGLER_ASM(i2d_DIST_POINT_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DSAPrivateKey
#  define i2d_DSAPrivateKey OPENSSL_MANGLER(i2d_DSAPrivateKey)
# endif
#else
# ifndef _i2d_DSAPrivateKey
#  define _i2d_DSAPrivateKey OPENSSL_MANGLER_ASM(i2d_DSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DSAPrivateKey_bio
#  define i2d_DSAPrivateKey_bio OPENSSL_MANGLER(i2d_DSAPrivateKey_bio)
# endif
#else
# ifndef _i2d_DSAPrivateKey_bio
#  define _i2d_DSAPrivateKey_bio OPENSSL_MANGLER_ASM(i2d_DSAPrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DSAPrivateKey_fp
#  define i2d_DSAPrivateKey_fp OPENSSL_MANGLER(i2d_DSAPrivateKey_fp)
# endif
#else
# ifndef _i2d_DSAPrivateKey_fp
#  define _i2d_DSAPrivateKey_fp OPENSSL_MANGLER_ASM(i2d_DSAPrivateKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DSAPublicKey
#  define i2d_DSAPublicKey OPENSSL_MANGLER(i2d_DSAPublicKey)
# endif
#else
# ifndef _i2d_DSAPublicKey
#  define _i2d_DSAPublicKey OPENSSL_MANGLER_ASM(i2d_DSAPublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DSA_PUBKEY
#  define i2d_DSA_PUBKEY OPENSSL_MANGLER(i2d_DSA_PUBKEY)
# endif
#else
# ifndef _i2d_DSA_PUBKEY
#  define _i2d_DSA_PUBKEY OPENSSL_MANGLER_ASM(i2d_DSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DSA_PUBKEY_bio
#  define i2d_DSA_PUBKEY_bio OPENSSL_MANGLER(i2d_DSA_PUBKEY_bio)
# endif
#else
# ifndef _i2d_DSA_PUBKEY_bio
#  define _i2d_DSA_PUBKEY_bio OPENSSL_MANGLER_ASM(i2d_DSA_PUBKEY_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DSA_PUBKEY_fp
#  define i2d_DSA_PUBKEY_fp OPENSSL_MANGLER(i2d_DSA_PUBKEY_fp)
# endif
#else
# ifndef _i2d_DSA_PUBKEY_fp
#  define _i2d_DSA_PUBKEY_fp OPENSSL_MANGLER_ASM(i2d_DSA_PUBKEY_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DSA_SIG
#  define i2d_DSA_SIG OPENSSL_MANGLER(i2d_DSA_SIG)
# endif
#else
# ifndef _i2d_DSA_SIG
#  define _i2d_DSA_SIG OPENSSL_MANGLER_ASM(i2d_DSA_SIG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_DSAparams
#  define i2d_DSAparams OPENSSL_MANGLER(i2d_DSAparams)
# endif
#else
# ifndef _i2d_DSAparams
#  define _i2d_DSAparams OPENSSL_MANGLER_ASM(i2d_DSAparams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ECDSA_SIG
#  define i2d_ECDSA_SIG OPENSSL_MANGLER(i2d_ECDSA_SIG)
# endif
#else
# ifndef _i2d_ECDSA_SIG
#  define _i2d_ECDSA_SIG OPENSSL_MANGLER_ASM(i2d_ECDSA_SIG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ECPKPARAMETERS
#  define i2d_ECPKPARAMETERS OPENSSL_MANGLER(i2d_ECPKPARAMETERS)
# endif
#else
# ifndef _i2d_ECPKPARAMETERS
#  define _i2d_ECPKPARAMETERS OPENSSL_MANGLER_ASM(i2d_ECPKPARAMETERS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ECPKParameters
#  define i2d_ECPKParameters OPENSSL_MANGLER(i2d_ECPKParameters)
# endif
#else
# ifndef _i2d_ECPKParameters
#  define _i2d_ECPKParameters OPENSSL_MANGLER_ASM(i2d_ECPKParameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ECParameters
#  define i2d_ECParameters OPENSSL_MANGLER(i2d_ECParameters)
# endif
#else
# ifndef _i2d_ECParameters
#  define _i2d_ECParameters OPENSSL_MANGLER_ASM(i2d_ECParameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ECPrivateKey
#  define i2d_ECPrivateKey OPENSSL_MANGLER(i2d_ECPrivateKey)
# endif
#else
# ifndef _i2d_ECPrivateKey
#  define _i2d_ECPrivateKey OPENSSL_MANGLER_ASM(i2d_ECPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ECPrivateKey_bio
#  define i2d_ECPrivateKey_bio OPENSSL_MANGLER(i2d_ECPrivateKey_bio)
# endif
#else
# ifndef _i2d_ECPrivateKey_bio
#  define _i2d_ECPrivateKey_bio OPENSSL_MANGLER_ASM(i2d_ECPrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ECPrivateKey_fp
#  define i2d_ECPrivateKey_fp OPENSSL_MANGLER(i2d_ECPrivateKey_fp)
# endif
#else
# ifndef _i2d_ECPrivateKey_fp
#  define _i2d_ECPrivateKey_fp OPENSSL_MANGLER_ASM(i2d_ECPrivateKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_EC_PRIVATEKEY
#  define i2d_EC_PRIVATEKEY OPENSSL_MANGLER(i2d_EC_PRIVATEKEY)
# endif
#else
# ifndef _i2d_EC_PRIVATEKEY
#  define _i2d_EC_PRIVATEKEY OPENSSL_MANGLER_ASM(i2d_EC_PRIVATEKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_EC_PUBKEY
#  define i2d_EC_PUBKEY OPENSSL_MANGLER(i2d_EC_PUBKEY)
# endif
#else
# ifndef _i2d_EC_PUBKEY
#  define _i2d_EC_PUBKEY OPENSSL_MANGLER_ASM(i2d_EC_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_EC_PUBKEY_bio
#  define i2d_EC_PUBKEY_bio OPENSSL_MANGLER(i2d_EC_PUBKEY_bio)
# endif
#else
# ifndef _i2d_EC_PUBKEY_bio
#  define _i2d_EC_PUBKEY_bio OPENSSL_MANGLER_ASM(i2d_EC_PUBKEY_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_EC_PUBKEY_fp
#  define i2d_EC_PUBKEY_fp OPENSSL_MANGLER(i2d_EC_PUBKEY_fp)
# endif
#else
# ifndef _i2d_EC_PUBKEY_fp
#  define _i2d_EC_PUBKEY_fp OPENSSL_MANGLER_ASM(i2d_EC_PUBKEY_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_EDIPARTYNAME
#  define i2d_EDIPARTYNAME OPENSSL_MANGLER(i2d_EDIPARTYNAME)
# endif
#else
# ifndef _i2d_EDIPARTYNAME
#  define _i2d_EDIPARTYNAME OPENSSL_MANGLER_ASM(i2d_EDIPARTYNAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ESS_CERT_ID
#  define i2d_ESS_CERT_ID OPENSSL_MANGLER(i2d_ESS_CERT_ID)
# endif
#else
# ifndef _i2d_ESS_CERT_ID
#  define _i2d_ESS_CERT_ID OPENSSL_MANGLER_ASM(i2d_ESS_CERT_ID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ESS_CERT_ID_V2
#  define i2d_ESS_CERT_ID_V2 OPENSSL_MANGLER(i2d_ESS_CERT_ID_V2)
# endif
#else
# ifndef _i2d_ESS_CERT_ID_V2
#  define _i2d_ESS_CERT_ID_V2 OPENSSL_MANGLER_ASM(i2d_ESS_CERT_ID_V2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ESS_ISSUER_SERIAL
#  define i2d_ESS_ISSUER_SERIAL OPENSSL_MANGLER(i2d_ESS_ISSUER_SERIAL)
# endif
#else
# ifndef _i2d_ESS_ISSUER_SERIAL
#  define _i2d_ESS_ISSUER_SERIAL OPENSSL_MANGLER_ASM(i2d_ESS_ISSUER_SERIAL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ESS_SIGNING_CERT
#  define i2d_ESS_SIGNING_CERT OPENSSL_MANGLER(i2d_ESS_SIGNING_CERT)
# endif
#else
# ifndef _i2d_ESS_SIGNING_CERT
#  define _i2d_ESS_SIGNING_CERT OPENSSL_MANGLER_ASM(i2d_ESS_SIGNING_CERT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ESS_SIGNING_CERT_V2
#  define i2d_ESS_SIGNING_CERT_V2 OPENSSL_MANGLER(i2d_ESS_SIGNING_CERT_V2)
# endif
#else
# ifndef _i2d_ESS_SIGNING_CERT_V2
#  define _i2d_ESS_SIGNING_CERT_V2 OPENSSL_MANGLER_ASM(i2d_ESS_SIGNING_CERT_V2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_EXTENDED_KEY_USAGE
#  define i2d_EXTENDED_KEY_USAGE OPENSSL_MANGLER(i2d_EXTENDED_KEY_USAGE)
# endif
#else
# ifndef _i2d_EXTENDED_KEY_USAGE
#  define _i2d_EXTENDED_KEY_USAGE OPENSSL_MANGLER_ASM(i2d_EXTENDED_KEY_USAGE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_GENERAL_NAME
#  define i2d_GENERAL_NAME OPENSSL_MANGLER(i2d_GENERAL_NAME)
# endif
#else
# ifndef _i2d_GENERAL_NAME
#  define _i2d_GENERAL_NAME OPENSSL_MANGLER_ASM(i2d_GENERAL_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_GENERAL_NAMES
#  define i2d_GENERAL_NAMES OPENSSL_MANGLER(i2d_GENERAL_NAMES)
# endif
#else
# ifndef _i2d_GENERAL_NAMES
#  define _i2d_GENERAL_NAMES OPENSSL_MANGLER_ASM(i2d_GENERAL_NAMES)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_GOST_KX_MESSAGE
#  define i2d_GOST_KX_MESSAGE OPENSSL_MANGLER(i2d_GOST_KX_MESSAGE)
# endif
#else
# ifndef _i2d_GOST_KX_MESSAGE
#  define _i2d_GOST_KX_MESSAGE OPENSSL_MANGLER_ASM(i2d_GOST_KX_MESSAGE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_IPAddressChoice
#  define i2d_IPAddressChoice OPENSSL_MANGLER(i2d_IPAddressChoice)
# endif
#else
# ifndef _i2d_IPAddressChoice
#  define _i2d_IPAddressChoice OPENSSL_MANGLER_ASM(i2d_IPAddressChoice)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_IPAddressFamily
#  define i2d_IPAddressFamily OPENSSL_MANGLER(i2d_IPAddressFamily)
# endif
#else
# ifndef _i2d_IPAddressFamily
#  define _i2d_IPAddressFamily OPENSSL_MANGLER_ASM(i2d_IPAddressFamily)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_IPAddressOrRange
#  define i2d_IPAddressOrRange OPENSSL_MANGLER(i2d_IPAddressOrRange)
# endif
#else
# ifndef _i2d_IPAddressOrRange
#  define _i2d_IPAddressOrRange OPENSSL_MANGLER_ASM(i2d_IPAddressOrRange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_IPAddressRange
#  define i2d_IPAddressRange OPENSSL_MANGLER(i2d_IPAddressRange)
# endif
#else
# ifndef _i2d_IPAddressRange
#  define _i2d_IPAddressRange OPENSSL_MANGLER_ASM(i2d_IPAddressRange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ISSUER_SIGN_TOOL
#  define i2d_ISSUER_SIGN_TOOL OPENSSL_MANGLER(i2d_ISSUER_SIGN_TOOL)
# endif
#else
# ifndef _i2d_ISSUER_SIGN_TOOL
#  define _i2d_ISSUER_SIGN_TOOL OPENSSL_MANGLER_ASM(i2d_ISSUER_SIGN_TOOL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_ISSUING_DIST_POINT
#  define i2d_ISSUING_DIST_POINT OPENSSL_MANGLER(i2d_ISSUING_DIST_POINT)
# endif
#else
# ifndef _i2d_ISSUING_DIST_POINT
#  define _i2d_ISSUING_DIST_POINT OPENSSL_MANGLER_ASM(i2d_ISSUING_DIST_POINT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_KeyParams
#  define i2d_KeyParams OPENSSL_MANGLER(i2d_KeyParams)
# endif
#else
# ifndef _i2d_KeyParams
#  define _i2d_KeyParams OPENSSL_MANGLER_ASM(i2d_KeyParams)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_KeyParams_bio
#  define i2d_KeyParams_bio OPENSSL_MANGLER(i2d_KeyParams_bio)
# endif
#else
# ifndef _i2d_KeyParams_bio
#  define _i2d_KeyParams_bio OPENSSL_MANGLER_ASM(i2d_KeyParams_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_NAMING_AUTHORITY
#  define i2d_NAMING_AUTHORITY OPENSSL_MANGLER(i2d_NAMING_AUTHORITY)
# endif
#else
# ifndef _i2d_NAMING_AUTHORITY
#  define _i2d_NAMING_AUTHORITY OPENSSL_MANGLER_ASM(i2d_NAMING_AUTHORITY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_NETSCAPE_CERT_SEQUENCE
#  define i2d_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER(i2d_NETSCAPE_CERT_SEQUENCE)
# endif
#else
# ifndef _i2d_NETSCAPE_CERT_SEQUENCE
#  define _i2d_NETSCAPE_CERT_SEQUENCE OPENSSL_MANGLER_ASM(i2d_NETSCAPE_CERT_SEQUENCE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_NETSCAPE_ENCRYPTED_PKEY
#  define i2d_NETSCAPE_ENCRYPTED_PKEY OPENSSL_MANGLER(i2d_NETSCAPE_ENCRYPTED_PKEY)
# endif
#else
# ifndef _i2d_NETSCAPE_ENCRYPTED_PKEY
#  define _i2d_NETSCAPE_ENCRYPTED_PKEY OPENSSL_MANGLER_ASM(i2d_NETSCAPE_ENCRYPTED_PKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_NETSCAPE_PKEY
#  define i2d_NETSCAPE_PKEY OPENSSL_MANGLER(i2d_NETSCAPE_PKEY)
# endif
#else
# ifndef _i2d_NETSCAPE_PKEY
#  define _i2d_NETSCAPE_PKEY OPENSSL_MANGLER_ASM(i2d_NETSCAPE_PKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_NETSCAPE_SPKAC
#  define i2d_NETSCAPE_SPKAC OPENSSL_MANGLER(i2d_NETSCAPE_SPKAC)
# endif
#else
# ifndef _i2d_NETSCAPE_SPKAC
#  define _i2d_NETSCAPE_SPKAC OPENSSL_MANGLER_ASM(i2d_NETSCAPE_SPKAC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_NETSCAPE_SPKI
#  define i2d_NETSCAPE_SPKI OPENSSL_MANGLER(i2d_NETSCAPE_SPKI)
# endif
#else
# ifndef _i2d_NETSCAPE_SPKI
#  define _i2d_NETSCAPE_SPKI OPENSSL_MANGLER_ASM(i2d_NETSCAPE_SPKI)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_NOTICEREF
#  define i2d_NOTICEREF OPENSSL_MANGLER(i2d_NOTICEREF)
# endif
#else
# ifndef _i2d_NOTICEREF
#  define _i2d_NOTICEREF OPENSSL_MANGLER_ASM(i2d_NOTICEREF)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_BASICRESP
#  define i2d_OCSP_BASICRESP OPENSSL_MANGLER(i2d_OCSP_BASICRESP)
# endif
#else
# ifndef _i2d_OCSP_BASICRESP
#  define _i2d_OCSP_BASICRESP OPENSSL_MANGLER_ASM(i2d_OCSP_BASICRESP)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_CERTID
#  define i2d_OCSP_CERTID OPENSSL_MANGLER(i2d_OCSP_CERTID)
# endif
#else
# ifndef _i2d_OCSP_CERTID
#  define _i2d_OCSP_CERTID OPENSSL_MANGLER_ASM(i2d_OCSP_CERTID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_CERTSTATUS
#  define i2d_OCSP_CERTSTATUS OPENSSL_MANGLER(i2d_OCSP_CERTSTATUS)
# endif
#else
# ifndef _i2d_OCSP_CERTSTATUS
#  define _i2d_OCSP_CERTSTATUS OPENSSL_MANGLER_ASM(i2d_OCSP_CERTSTATUS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_CRLID
#  define i2d_OCSP_CRLID OPENSSL_MANGLER(i2d_OCSP_CRLID)
# endif
#else
# ifndef _i2d_OCSP_CRLID
#  define _i2d_OCSP_CRLID OPENSSL_MANGLER_ASM(i2d_OCSP_CRLID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_ONEREQ
#  define i2d_OCSP_ONEREQ OPENSSL_MANGLER(i2d_OCSP_ONEREQ)
# endif
#else
# ifndef _i2d_OCSP_ONEREQ
#  define _i2d_OCSP_ONEREQ OPENSSL_MANGLER_ASM(i2d_OCSP_ONEREQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_REQINFO
#  define i2d_OCSP_REQINFO OPENSSL_MANGLER(i2d_OCSP_REQINFO)
# endif
#else
# ifndef _i2d_OCSP_REQINFO
#  define _i2d_OCSP_REQINFO OPENSSL_MANGLER_ASM(i2d_OCSP_REQINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_REQUEST
#  define i2d_OCSP_REQUEST OPENSSL_MANGLER(i2d_OCSP_REQUEST)
# endif
#else
# ifndef _i2d_OCSP_REQUEST
#  define _i2d_OCSP_REQUEST OPENSSL_MANGLER_ASM(i2d_OCSP_REQUEST)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_RESPBYTES
#  define i2d_OCSP_RESPBYTES OPENSSL_MANGLER(i2d_OCSP_RESPBYTES)
# endif
#else
# ifndef _i2d_OCSP_RESPBYTES
#  define _i2d_OCSP_RESPBYTES OPENSSL_MANGLER_ASM(i2d_OCSP_RESPBYTES)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_RESPDATA
#  define i2d_OCSP_RESPDATA OPENSSL_MANGLER(i2d_OCSP_RESPDATA)
# endif
#else
# ifndef _i2d_OCSP_RESPDATA
#  define _i2d_OCSP_RESPDATA OPENSSL_MANGLER_ASM(i2d_OCSP_RESPDATA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_RESPID
#  define i2d_OCSP_RESPID OPENSSL_MANGLER(i2d_OCSP_RESPID)
# endif
#else
# ifndef _i2d_OCSP_RESPID
#  define _i2d_OCSP_RESPID OPENSSL_MANGLER_ASM(i2d_OCSP_RESPID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_RESPONSE
#  define i2d_OCSP_RESPONSE OPENSSL_MANGLER(i2d_OCSP_RESPONSE)
# endif
#else
# ifndef _i2d_OCSP_RESPONSE
#  define _i2d_OCSP_RESPONSE OPENSSL_MANGLER_ASM(i2d_OCSP_RESPONSE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_REVOKEDINFO
#  define i2d_OCSP_REVOKEDINFO OPENSSL_MANGLER(i2d_OCSP_REVOKEDINFO)
# endif
#else
# ifndef _i2d_OCSP_REVOKEDINFO
#  define _i2d_OCSP_REVOKEDINFO OPENSSL_MANGLER_ASM(i2d_OCSP_REVOKEDINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_SERVICELOC
#  define i2d_OCSP_SERVICELOC OPENSSL_MANGLER(i2d_OCSP_SERVICELOC)
# endif
#else
# ifndef _i2d_OCSP_SERVICELOC
#  define _i2d_OCSP_SERVICELOC OPENSSL_MANGLER_ASM(i2d_OCSP_SERVICELOC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_SIGNATURE
#  define i2d_OCSP_SIGNATURE OPENSSL_MANGLER(i2d_OCSP_SIGNATURE)
# endif
#else
# ifndef _i2d_OCSP_SIGNATURE
#  define _i2d_OCSP_SIGNATURE OPENSSL_MANGLER_ASM(i2d_OCSP_SIGNATURE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OCSP_SINGLERESP
#  define i2d_OCSP_SINGLERESP OPENSSL_MANGLER(i2d_OCSP_SINGLERESP)
# endif
#else
# ifndef _i2d_OCSP_SINGLERESP
#  define _i2d_OCSP_SINGLERESP OPENSSL_MANGLER_ASM(i2d_OCSP_SINGLERESP)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_CAKEYUPDANNCONTENT
#  define i2d_OSSL_CMP_CAKEYUPDANNCONTENT OPENSSL_MANGLER(i2d_OSSL_CMP_CAKEYUPDANNCONTENT)
# endif
#else
# ifndef _i2d_OSSL_CMP_CAKEYUPDANNCONTENT
#  define _i2d_OSSL_CMP_CAKEYUPDANNCONTENT OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_CAKEYUPDANNCONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_CERTIFIEDKEYPAIR
#  define i2d_OSSL_CMP_CERTIFIEDKEYPAIR OPENSSL_MANGLER(i2d_OSSL_CMP_CERTIFIEDKEYPAIR)
# endif
#else
# ifndef _i2d_OSSL_CMP_CERTIFIEDKEYPAIR
#  define _i2d_OSSL_CMP_CERTIFIEDKEYPAIR OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_CERTIFIEDKEYPAIR)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_CERTORENCCERT
#  define i2d_OSSL_CMP_CERTORENCCERT OPENSSL_MANGLER(i2d_OSSL_CMP_CERTORENCCERT)
# endif
#else
# ifndef _i2d_OSSL_CMP_CERTORENCCERT
#  define _i2d_OSSL_CMP_CERTORENCCERT OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_CERTORENCCERT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_CERTREPMESSAGE
#  define i2d_OSSL_CMP_CERTREPMESSAGE OPENSSL_MANGLER(i2d_OSSL_CMP_CERTREPMESSAGE)
# endif
#else
# ifndef _i2d_OSSL_CMP_CERTREPMESSAGE
#  define _i2d_OSSL_CMP_CERTREPMESSAGE OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_CERTREPMESSAGE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_CERTRESPONSE
#  define i2d_OSSL_CMP_CERTRESPONSE OPENSSL_MANGLER(i2d_OSSL_CMP_CERTRESPONSE)
# endif
#else
# ifndef _i2d_OSSL_CMP_CERTRESPONSE
#  define _i2d_OSSL_CMP_CERTRESPONSE OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_CERTRESPONSE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_CERTSTATUS
#  define i2d_OSSL_CMP_CERTSTATUS OPENSSL_MANGLER(i2d_OSSL_CMP_CERTSTATUS)
# endif
#else
# ifndef _i2d_OSSL_CMP_CERTSTATUS
#  define _i2d_OSSL_CMP_CERTSTATUS OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_CERTSTATUS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_CHALLENGE
#  define i2d_OSSL_CMP_CHALLENGE OPENSSL_MANGLER(i2d_OSSL_CMP_CHALLENGE)
# endif
#else
# ifndef _i2d_OSSL_CMP_CHALLENGE
#  define _i2d_OSSL_CMP_CHALLENGE OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_CHALLENGE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_ERRORMSGCONTENT
#  define i2d_OSSL_CMP_ERRORMSGCONTENT OPENSSL_MANGLER(i2d_OSSL_CMP_ERRORMSGCONTENT)
# endif
#else
# ifndef _i2d_OSSL_CMP_ERRORMSGCONTENT
#  define _i2d_OSSL_CMP_ERRORMSGCONTENT OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_ERRORMSGCONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_ITAV
#  define i2d_OSSL_CMP_ITAV OPENSSL_MANGLER(i2d_OSSL_CMP_ITAV)
# endif
#else
# ifndef _i2d_OSSL_CMP_ITAV
#  define _i2d_OSSL_CMP_ITAV OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_ITAV)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_KEYRECREPCONTENT
#  define i2d_OSSL_CMP_KEYRECREPCONTENT OPENSSL_MANGLER(i2d_OSSL_CMP_KEYRECREPCONTENT)
# endif
#else
# ifndef _i2d_OSSL_CMP_KEYRECREPCONTENT
#  define _i2d_OSSL_CMP_KEYRECREPCONTENT OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_KEYRECREPCONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_MSG
#  define i2d_OSSL_CMP_MSG OPENSSL_MANGLER(i2d_OSSL_CMP_MSG)
# endif
#else
# ifndef _i2d_OSSL_CMP_MSG
#  define _i2d_OSSL_CMP_MSG OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_MSG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_MSG_bio
#  define i2d_OSSL_CMP_MSG_bio OPENSSL_MANGLER(i2d_OSSL_CMP_MSG_bio)
# endif
#else
# ifndef _i2d_OSSL_CMP_MSG_bio
#  define _i2d_OSSL_CMP_MSG_bio OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_MSG_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_PKIBODY
#  define i2d_OSSL_CMP_PKIBODY OPENSSL_MANGLER(i2d_OSSL_CMP_PKIBODY)
# endif
#else
# ifndef _i2d_OSSL_CMP_PKIBODY
#  define _i2d_OSSL_CMP_PKIBODY OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_PKIBODY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_PKIHEADER
#  define i2d_OSSL_CMP_PKIHEADER OPENSSL_MANGLER(i2d_OSSL_CMP_PKIHEADER)
# endif
#else
# ifndef _i2d_OSSL_CMP_PKIHEADER
#  define _i2d_OSSL_CMP_PKIHEADER OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_PKIHEADER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_PKISI
#  define i2d_OSSL_CMP_PKISI OPENSSL_MANGLER(i2d_OSSL_CMP_PKISI)
# endif
#else
# ifndef _i2d_OSSL_CMP_PKISI
#  define _i2d_OSSL_CMP_PKISI OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_PKISI)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_POLLREP
#  define i2d_OSSL_CMP_POLLREP OPENSSL_MANGLER(i2d_OSSL_CMP_POLLREP)
# endif
#else
# ifndef _i2d_OSSL_CMP_POLLREP
#  define _i2d_OSSL_CMP_POLLREP OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_POLLREP)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_POLLREQ
#  define i2d_OSSL_CMP_POLLREQ OPENSSL_MANGLER(i2d_OSSL_CMP_POLLREQ)
# endif
#else
# ifndef _i2d_OSSL_CMP_POLLREQ
#  define _i2d_OSSL_CMP_POLLREQ OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_POLLREQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_PROTECTEDPART
#  define i2d_OSSL_CMP_PROTECTEDPART OPENSSL_MANGLER(i2d_OSSL_CMP_PROTECTEDPART)
# endif
#else
# ifndef _i2d_OSSL_CMP_PROTECTEDPART
#  define _i2d_OSSL_CMP_PROTECTEDPART OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_PROTECTEDPART)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_REVANNCONTENT
#  define i2d_OSSL_CMP_REVANNCONTENT OPENSSL_MANGLER(i2d_OSSL_CMP_REVANNCONTENT)
# endif
#else
# ifndef _i2d_OSSL_CMP_REVANNCONTENT
#  define _i2d_OSSL_CMP_REVANNCONTENT OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_REVANNCONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_REVDETAILS
#  define i2d_OSSL_CMP_REVDETAILS OPENSSL_MANGLER(i2d_OSSL_CMP_REVDETAILS)
# endif
#else
# ifndef _i2d_OSSL_CMP_REVDETAILS
#  define _i2d_OSSL_CMP_REVDETAILS OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_REVDETAILS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CMP_REVREPCONTENT
#  define i2d_OSSL_CMP_REVREPCONTENT OPENSSL_MANGLER(i2d_OSSL_CMP_REVREPCONTENT)
# endif
#else
# ifndef _i2d_OSSL_CMP_REVREPCONTENT
#  define _i2d_OSSL_CMP_REVREPCONTENT OPENSSL_MANGLER_ASM(i2d_OSSL_CMP_REVREPCONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_ATTRIBUTETYPEANDVALUE
#  define i2d_OSSL_CRMF_ATTRIBUTETYPEANDVALUE OPENSSL_MANGLER(i2d_OSSL_CRMF_ATTRIBUTETYPEANDVALUE)
# endif
#else
# ifndef _i2d_OSSL_CRMF_ATTRIBUTETYPEANDVALUE
#  define _i2d_OSSL_CRMF_ATTRIBUTETYPEANDVALUE OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_ATTRIBUTETYPEANDVALUE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_CERTID
#  define i2d_OSSL_CRMF_CERTID OPENSSL_MANGLER(i2d_OSSL_CRMF_CERTID)
# endif
#else
# ifndef _i2d_OSSL_CRMF_CERTID
#  define _i2d_OSSL_CRMF_CERTID OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_CERTID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_CERTREQUEST
#  define i2d_OSSL_CRMF_CERTREQUEST OPENSSL_MANGLER(i2d_OSSL_CRMF_CERTREQUEST)
# endif
#else
# ifndef _i2d_OSSL_CRMF_CERTREQUEST
#  define _i2d_OSSL_CRMF_CERTREQUEST OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_CERTREQUEST)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_CERTTEMPLATE
#  define i2d_OSSL_CRMF_CERTTEMPLATE OPENSSL_MANGLER(i2d_OSSL_CRMF_CERTTEMPLATE)
# endif
#else
# ifndef _i2d_OSSL_CRMF_CERTTEMPLATE
#  define _i2d_OSSL_CRMF_CERTTEMPLATE OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_CERTTEMPLATE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_ENCKEYWITHID
#  define i2d_OSSL_CRMF_ENCKEYWITHID OPENSSL_MANGLER(i2d_OSSL_CRMF_ENCKEYWITHID)
# endif
#else
# ifndef _i2d_OSSL_CRMF_ENCKEYWITHID
#  define _i2d_OSSL_CRMF_ENCKEYWITHID OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_ENCKEYWITHID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER
#  define i2d_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER OPENSSL_MANGLER(i2d_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER)
# endif
#else
# ifndef _i2d_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER
#  define _i2d_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_ENCRYPTEDVALUE
#  define i2d_OSSL_CRMF_ENCRYPTEDVALUE OPENSSL_MANGLER(i2d_OSSL_CRMF_ENCRYPTEDVALUE)
# endif
#else
# ifndef _i2d_OSSL_CRMF_ENCRYPTEDVALUE
#  define _i2d_OSSL_CRMF_ENCRYPTEDVALUE OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_ENCRYPTEDVALUE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_MSG
#  define i2d_OSSL_CRMF_MSG OPENSSL_MANGLER(i2d_OSSL_CRMF_MSG)
# endif
#else
# ifndef _i2d_OSSL_CRMF_MSG
#  define _i2d_OSSL_CRMF_MSG OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_MSG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_MSGS
#  define i2d_OSSL_CRMF_MSGS OPENSSL_MANGLER(i2d_OSSL_CRMF_MSGS)
# endif
#else
# ifndef _i2d_OSSL_CRMF_MSGS
#  define _i2d_OSSL_CRMF_MSGS OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_MSGS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_OPTIONALVALIDITY
#  define i2d_OSSL_CRMF_OPTIONALVALIDITY OPENSSL_MANGLER(i2d_OSSL_CRMF_OPTIONALVALIDITY)
# endif
#else
# ifndef _i2d_OSSL_CRMF_OPTIONALVALIDITY
#  define _i2d_OSSL_CRMF_OPTIONALVALIDITY OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_OPTIONALVALIDITY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_PBMPARAMETER
#  define i2d_OSSL_CRMF_PBMPARAMETER OPENSSL_MANGLER(i2d_OSSL_CRMF_PBMPARAMETER)
# endif
#else
# ifndef _i2d_OSSL_CRMF_PBMPARAMETER
#  define _i2d_OSSL_CRMF_PBMPARAMETER OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_PBMPARAMETER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_PKIPUBLICATIONINFO
#  define i2d_OSSL_CRMF_PKIPUBLICATIONINFO OPENSSL_MANGLER(i2d_OSSL_CRMF_PKIPUBLICATIONINFO)
# endif
#else
# ifndef _i2d_OSSL_CRMF_PKIPUBLICATIONINFO
#  define _i2d_OSSL_CRMF_PKIPUBLICATIONINFO OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_PKIPUBLICATIONINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_PKMACVALUE
#  define i2d_OSSL_CRMF_PKMACVALUE OPENSSL_MANGLER(i2d_OSSL_CRMF_PKMACVALUE)
# endif
#else
# ifndef _i2d_OSSL_CRMF_PKMACVALUE
#  define _i2d_OSSL_CRMF_PKMACVALUE OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_PKMACVALUE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_POPO
#  define i2d_OSSL_CRMF_POPO OPENSSL_MANGLER(i2d_OSSL_CRMF_POPO)
# endif
#else
# ifndef _i2d_OSSL_CRMF_POPO
#  define _i2d_OSSL_CRMF_POPO OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_POPO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_POPOPRIVKEY
#  define i2d_OSSL_CRMF_POPOPRIVKEY OPENSSL_MANGLER(i2d_OSSL_CRMF_POPOPRIVKEY)
# endif
#else
# ifndef _i2d_OSSL_CRMF_POPOPRIVKEY
#  define _i2d_OSSL_CRMF_POPOPRIVKEY OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_POPOPRIVKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_POPOSIGNINGKEY
#  define i2d_OSSL_CRMF_POPOSIGNINGKEY OPENSSL_MANGLER(i2d_OSSL_CRMF_POPOSIGNINGKEY)
# endif
#else
# ifndef _i2d_OSSL_CRMF_POPOSIGNINGKEY
#  define _i2d_OSSL_CRMF_POPOSIGNINGKEY OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_POPOSIGNINGKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT
#  define i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT OPENSSL_MANGLER(i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT)
# endif
#else
# ifndef _i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT
#  define _i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO
#  define i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO OPENSSL_MANGLER(i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO)
# endif
#else
# ifndef _i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO
#  define _i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_PRIVATEKEYINFO
#  define i2d_OSSL_CRMF_PRIVATEKEYINFO OPENSSL_MANGLER(i2d_OSSL_CRMF_PRIVATEKEYINFO)
# endif
#else
# ifndef _i2d_OSSL_CRMF_PRIVATEKEYINFO
#  define _i2d_OSSL_CRMF_PRIVATEKEYINFO OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_PRIVATEKEYINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OSSL_CRMF_SINGLEPUBINFO
#  define i2d_OSSL_CRMF_SINGLEPUBINFO OPENSSL_MANGLER(i2d_OSSL_CRMF_SINGLEPUBINFO)
# endif
#else
# ifndef _i2d_OSSL_CRMF_SINGLEPUBINFO
#  define _i2d_OSSL_CRMF_SINGLEPUBINFO OPENSSL_MANGLER_ASM(i2d_OSSL_CRMF_SINGLEPUBINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_OTHERNAME
#  define i2d_OTHERNAME OPENSSL_MANGLER(i2d_OTHERNAME)
# endif
#else
# ifndef _i2d_OTHERNAME
#  define _i2d_OTHERNAME OPENSSL_MANGLER_ASM(i2d_OTHERNAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PBE2PARAM
#  define i2d_PBE2PARAM OPENSSL_MANGLER(i2d_PBE2PARAM)
# endif
#else
# ifndef _i2d_PBE2PARAM
#  define _i2d_PBE2PARAM OPENSSL_MANGLER_ASM(i2d_PBE2PARAM)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PBEPARAM
#  define i2d_PBEPARAM OPENSSL_MANGLER(i2d_PBEPARAM)
# endif
#else
# ifndef _i2d_PBEPARAM
#  define _i2d_PBEPARAM OPENSSL_MANGLER_ASM(i2d_PBEPARAM)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PBKDF2PARAM
#  define i2d_PBKDF2PARAM OPENSSL_MANGLER(i2d_PBKDF2PARAM)
# endif
#else
# ifndef _i2d_PBKDF2PARAM
#  define _i2d_PBKDF2PARAM OPENSSL_MANGLER_ASM(i2d_PBKDF2PARAM)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS12
#  define i2d_PKCS12 OPENSSL_MANGLER(i2d_PKCS12)
# endif
#else
# ifndef _i2d_PKCS12
#  define _i2d_PKCS12 OPENSSL_MANGLER_ASM(i2d_PKCS12)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS12_BAGS
#  define i2d_PKCS12_BAGS OPENSSL_MANGLER(i2d_PKCS12_BAGS)
# endif
#else
# ifndef _i2d_PKCS12_BAGS
#  define _i2d_PKCS12_BAGS OPENSSL_MANGLER_ASM(i2d_PKCS12_BAGS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS12_MAC_DATA
#  define i2d_PKCS12_MAC_DATA OPENSSL_MANGLER(i2d_PKCS12_MAC_DATA)
# endif
#else
# ifndef _i2d_PKCS12_MAC_DATA
#  define _i2d_PKCS12_MAC_DATA OPENSSL_MANGLER_ASM(i2d_PKCS12_MAC_DATA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS12_SAFEBAG
#  define i2d_PKCS12_SAFEBAG OPENSSL_MANGLER(i2d_PKCS12_SAFEBAG)
# endif
#else
# ifndef _i2d_PKCS12_SAFEBAG
#  define _i2d_PKCS12_SAFEBAG OPENSSL_MANGLER_ASM(i2d_PKCS12_SAFEBAG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS12_bio
#  define i2d_PKCS12_bio OPENSSL_MANGLER(i2d_PKCS12_bio)
# endif
#else
# ifndef _i2d_PKCS12_bio
#  define _i2d_PKCS12_bio OPENSSL_MANGLER_ASM(i2d_PKCS12_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS12_fp
#  define i2d_PKCS12_fp OPENSSL_MANGLER(i2d_PKCS12_fp)
# endif
#else
# ifndef _i2d_PKCS12_fp
#  define _i2d_PKCS12_fp OPENSSL_MANGLER_ASM(i2d_PKCS12_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7
#  define i2d_PKCS7 OPENSSL_MANGLER(i2d_PKCS7)
# endif
#else
# ifndef _i2d_PKCS7
#  define _i2d_PKCS7 OPENSSL_MANGLER_ASM(i2d_PKCS7)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_DIGEST
#  define i2d_PKCS7_DIGEST OPENSSL_MANGLER(i2d_PKCS7_DIGEST)
# endif
#else
# ifndef _i2d_PKCS7_DIGEST
#  define _i2d_PKCS7_DIGEST OPENSSL_MANGLER_ASM(i2d_PKCS7_DIGEST)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_ENCRYPT
#  define i2d_PKCS7_ENCRYPT OPENSSL_MANGLER(i2d_PKCS7_ENCRYPT)
# endif
#else
# ifndef _i2d_PKCS7_ENCRYPT
#  define _i2d_PKCS7_ENCRYPT OPENSSL_MANGLER_ASM(i2d_PKCS7_ENCRYPT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_ENC_CONTENT
#  define i2d_PKCS7_ENC_CONTENT OPENSSL_MANGLER(i2d_PKCS7_ENC_CONTENT)
# endif
#else
# ifndef _i2d_PKCS7_ENC_CONTENT
#  define _i2d_PKCS7_ENC_CONTENT OPENSSL_MANGLER_ASM(i2d_PKCS7_ENC_CONTENT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_ENVELOPE
#  define i2d_PKCS7_ENVELOPE OPENSSL_MANGLER(i2d_PKCS7_ENVELOPE)
# endif
#else
# ifndef _i2d_PKCS7_ENVELOPE
#  define _i2d_PKCS7_ENVELOPE OPENSSL_MANGLER_ASM(i2d_PKCS7_ENVELOPE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_ISSUER_AND_SERIAL
#  define i2d_PKCS7_ISSUER_AND_SERIAL OPENSSL_MANGLER(i2d_PKCS7_ISSUER_AND_SERIAL)
# endif
#else
# ifndef _i2d_PKCS7_ISSUER_AND_SERIAL
#  define _i2d_PKCS7_ISSUER_AND_SERIAL OPENSSL_MANGLER_ASM(i2d_PKCS7_ISSUER_AND_SERIAL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_NDEF
#  define i2d_PKCS7_NDEF OPENSSL_MANGLER(i2d_PKCS7_NDEF)
# endif
#else
# ifndef _i2d_PKCS7_NDEF
#  define _i2d_PKCS7_NDEF OPENSSL_MANGLER_ASM(i2d_PKCS7_NDEF)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_RECIP_INFO
#  define i2d_PKCS7_RECIP_INFO OPENSSL_MANGLER(i2d_PKCS7_RECIP_INFO)
# endif
#else
# ifndef _i2d_PKCS7_RECIP_INFO
#  define _i2d_PKCS7_RECIP_INFO OPENSSL_MANGLER_ASM(i2d_PKCS7_RECIP_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_SIGNED
#  define i2d_PKCS7_SIGNED OPENSSL_MANGLER(i2d_PKCS7_SIGNED)
# endif
#else
# ifndef _i2d_PKCS7_SIGNED
#  define _i2d_PKCS7_SIGNED OPENSSL_MANGLER_ASM(i2d_PKCS7_SIGNED)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_SIGNER_INFO
#  define i2d_PKCS7_SIGNER_INFO OPENSSL_MANGLER(i2d_PKCS7_SIGNER_INFO)
# endif
#else
# ifndef _i2d_PKCS7_SIGNER_INFO
#  define _i2d_PKCS7_SIGNER_INFO OPENSSL_MANGLER_ASM(i2d_PKCS7_SIGNER_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_SIGN_ENVELOPE
#  define i2d_PKCS7_SIGN_ENVELOPE OPENSSL_MANGLER(i2d_PKCS7_SIGN_ENVELOPE)
# endif
#else
# ifndef _i2d_PKCS7_SIGN_ENVELOPE
#  define _i2d_PKCS7_SIGN_ENVELOPE OPENSSL_MANGLER_ASM(i2d_PKCS7_SIGN_ENVELOPE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_bio
#  define i2d_PKCS7_bio OPENSSL_MANGLER(i2d_PKCS7_bio)
# endif
#else
# ifndef _i2d_PKCS7_bio
#  define _i2d_PKCS7_bio OPENSSL_MANGLER_ASM(i2d_PKCS7_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_bio_stream
#  define i2d_PKCS7_bio_stream OPENSSL_MANGLER(i2d_PKCS7_bio_stream)
# endif
#else
# ifndef _i2d_PKCS7_bio_stream
#  define _i2d_PKCS7_bio_stream OPENSSL_MANGLER_ASM(i2d_PKCS7_bio_stream)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS7_fp
#  define i2d_PKCS7_fp OPENSSL_MANGLER(i2d_PKCS7_fp)
# endif
#else
# ifndef _i2d_PKCS7_fp
#  define _i2d_PKCS7_fp OPENSSL_MANGLER_ASM(i2d_PKCS7_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS8PrivateKeyInfo_bio
#  define i2d_PKCS8PrivateKeyInfo_bio OPENSSL_MANGLER(i2d_PKCS8PrivateKeyInfo_bio)
# endif
#else
# ifndef _i2d_PKCS8PrivateKeyInfo_bio
#  define _i2d_PKCS8PrivateKeyInfo_bio OPENSSL_MANGLER_ASM(i2d_PKCS8PrivateKeyInfo_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS8PrivateKeyInfo_fp
#  define i2d_PKCS8PrivateKeyInfo_fp OPENSSL_MANGLER(i2d_PKCS8PrivateKeyInfo_fp)
# endif
#else
# ifndef _i2d_PKCS8PrivateKeyInfo_fp
#  define _i2d_PKCS8PrivateKeyInfo_fp OPENSSL_MANGLER_ASM(i2d_PKCS8PrivateKeyInfo_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS8PrivateKey_bio
#  define i2d_PKCS8PrivateKey_bio OPENSSL_MANGLER(i2d_PKCS8PrivateKey_bio)
# endif
#else
# ifndef _i2d_PKCS8PrivateKey_bio
#  define _i2d_PKCS8PrivateKey_bio OPENSSL_MANGLER_ASM(i2d_PKCS8PrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS8PrivateKey_fp
#  define i2d_PKCS8PrivateKey_fp OPENSSL_MANGLER(i2d_PKCS8PrivateKey_fp)
# endif
#else
# ifndef _i2d_PKCS8PrivateKey_fp
#  define _i2d_PKCS8PrivateKey_fp OPENSSL_MANGLER_ASM(i2d_PKCS8PrivateKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS8PrivateKey_nid_bio
#  define i2d_PKCS8PrivateKey_nid_bio OPENSSL_MANGLER(i2d_PKCS8PrivateKey_nid_bio)
# endif
#else
# ifndef _i2d_PKCS8PrivateKey_nid_bio
#  define _i2d_PKCS8PrivateKey_nid_bio OPENSSL_MANGLER_ASM(i2d_PKCS8PrivateKey_nid_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS8PrivateKey_nid_fp
#  define i2d_PKCS8PrivateKey_nid_fp OPENSSL_MANGLER(i2d_PKCS8PrivateKey_nid_fp)
# endif
#else
# ifndef _i2d_PKCS8PrivateKey_nid_fp
#  define _i2d_PKCS8PrivateKey_nid_fp OPENSSL_MANGLER_ASM(i2d_PKCS8PrivateKey_nid_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS8_PRIV_KEY_INFO
#  define i2d_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER(i2d_PKCS8_PRIV_KEY_INFO)
# endif
#else
# ifndef _i2d_PKCS8_PRIV_KEY_INFO
#  define _i2d_PKCS8_PRIV_KEY_INFO OPENSSL_MANGLER_ASM(i2d_PKCS8_PRIV_KEY_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS8_PRIV_KEY_INFO_bio
#  define i2d_PKCS8_PRIV_KEY_INFO_bio OPENSSL_MANGLER(i2d_PKCS8_PRIV_KEY_INFO_bio)
# endif
#else
# ifndef _i2d_PKCS8_PRIV_KEY_INFO_bio
#  define _i2d_PKCS8_PRIV_KEY_INFO_bio OPENSSL_MANGLER_ASM(i2d_PKCS8_PRIV_KEY_INFO_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS8_PRIV_KEY_INFO_fp
#  define i2d_PKCS8_PRIV_KEY_INFO_fp OPENSSL_MANGLER(i2d_PKCS8_PRIV_KEY_INFO_fp)
# endif
#else
# ifndef _i2d_PKCS8_PRIV_KEY_INFO_fp
#  define _i2d_PKCS8_PRIV_KEY_INFO_fp OPENSSL_MANGLER_ASM(i2d_PKCS8_PRIV_KEY_INFO_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS8_bio
#  define i2d_PKCS8_bio OPENSSL_MANGLER(i2d_PKCS8_bio)
# endif
#else
# ifndef _i2d_PKCS8_bio
#  define _i2d_PKCS8_bio OPENSSL_MANGLER_ASM(i2d_PKCS8_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKCS8_fp
#  define i2d_PKCS8_fp OPENSSL_MANGLER(i2d_PKCS8_fp)
# endif
#else
# ifndef _i2d_PKCS8_fp
#  define _i2d_PKCS8_fp OPENSSL_MANGLER_ASM(i2d_PKCS8_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PKEY_USAGE_PERIOD
#  define i2d_PKEY_USAGE_PERIOD OPENSSL_MANGLER(i2d_PKEY_USAGE_PERIOD)
# endif
#else
# ifndef _i2d_PKEY_USAGE_PERIOD
#  define _i2d_PKEY_USAGE_PERIOD OPENSSL_MANGLER_ASM(i2d_PKEY_USAGE_PERIOD)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_POLICYINFO
#  define i2d_POLICYINFO OPENSSL_MANGLER(i2d_POLICYINFO)
# endif
#else
# ifndef _i2d_POLICYINFO
#  define _i2d_POLICYINFO OPENSSL_MANGLER_ASM(i2d_POLICYINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_POLICYQUALINFO
#  define i2d_POLICYQUALINFO OPENSSL_MANGLER(i2d_POLICYQUALINFO)
# endif
#else
# ifndef _i2d_POLICYQUALINFO
#  define _i2d_POLICYQUALINFO OPENSSL_MANGLER_ASM(i2d_POLICYQUALINFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PROFESSION_INFO
#  define i2d_PROFESSION_INFO OPENSSL_MANGLER(i2d_PROFESSION_INFO)
# endif
#else
# ifndef _i2d_PROFESSION_INFO
#  define _i2d_PROFESSION_INFO OPENSSL_MANGLER_ASM(i2d_PROFESSION_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PROXY_CERT_INFO_EXTENSION
#  define i2d_PROXY_CERT_INFO_EXTENSION OPENSSL_MANGLER(i2d_PROXY_CERT_INFO_EXTENSION)
# endif
#else
# ifndef _i2d_PROXY_CERT_INFO_EXTENSION
#  define _i2d_PROXY_CERT_INFO_EXTENSION OPENSSL_MANGLER_ASM(i2d_PROXY_CERT_INFO_EXTENSION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PROXY_POLICY
#  define i2d_PROXY_POLICY OPENSSL_MANGLER(i2d_PROXY_POLICY)
# endif
#else
# ifndef _i2d_PROXY_POLICY
#  define _i2d_PROXY_POLICY OPENSSL_MANGLER_ASM(i2d_PROXY_POLICY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PUBKEY
#  define i2d_PUBKEY OPENSSL_MANGLER(i2d_PUBKEY)
# endif
#else
# ifndef _i2d_PUBKEY
#  define _i2d_PUBKEY OPENSSL_MANGLER_ASM(i2d_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PUBKEY_bio
#  define i2d_PUBKEY_bio OPENSSL_MANGLER(i2d_PUBKEY_bio)
# endif
#else
# ifndef _i2d_PUBKEY_bio
#  define _i2d_PUBKEY_bio OPENSSL_MANGLER_ASM(i2d_PUBKEY_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PUBKEY_fp
#  define i2d_PUBKEY_fp OPENSSL_MANGLER(i2d_PUBKEY_fp)
# endif
#else
# ifndef _i2d_PUBKEY_fp
#  define _i2d_PUBKEY_fp OPENSSL_MANGLER_ASM(i2d_PUBKEY_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PrivateKey
#  define i2d_PrivateKey OPENSSL_MANGLER(i2d_PrivateKey)
# endif
#else
# ifndef _i2d_PrivateKey
#  define _i2d_PrivateKey OPENSSL_MANGLER_ASM(i2d_PrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PrivateKey_bio
#  define i2d_PrivateKey_bio OPENSSL_MANGLER(i2d_PrivateKey_bio)
# endif
#else
# ifndef _i2d_PrivateKey_bio
#  define _i2d_PrivateKey_bio OPENSSL_MANGLER_ASM(i2d_PrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PrivateKey_fp
#  define i2d_PrivateKey_fp OPENSSL_MANGLER(i2d_PrivateKey_fp)
# endif
#else
# ifndef _i2d_PrivateKey_fp
#  define _i2d_PrivateKey_fp OPENSSL_MANGLER_ASM(i2d_PrivateKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_PublicKey
#  define i2d_PublicKey OPENSSL_MANGLER(i2d_PublicKey)
# endif
#else
# ifndef _i2d_PublicKey
#  define _i2d_PublicKey OPENSSL_MANGLER_ASM(i2d_PublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_RSAPrivateKey
#  define i2d_RSAPrivateKey OPENSSL_MANGLER(i2d_RSAPrivateKey)
# endif
#else
# ifndef _i2d_RSAPrivateKey
#  define _i2d_RSAPrivateKey OPENSSL_MANGLER_ASM(i2d_RSAPrivateKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_RSAPrivateKey_bio
#  define i2d_RSAPrivateKey_bio OPENSSL_MANGLER(i2d_RSAPrivateKey_bio)
# endif
#else
# ifndef _i2d_RSAPrivateKey_bio
#  define _i2d_RSAPrivateKey_bio OPENSSL_MANGLER_ASM(i2d_RSAPrivateKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_RSAPrivateKey_fp
#  define i2d_RSAPrivateKey_fp OPENSSL_MANGLER(i2d_RSAPrivateKey_fp)
# endif
#else
# ifndef _i2d_RSAPrivateKey_fp
#  define _i2d_RSAPrivateKey_fp OPENSSL_MANGLER_ASM(i2d_RSAPrivateKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_RSAPublicKey
#  define i2d_RSAPublicKey OPENSSL_MANGLER(i2d_RSAPublicKey)
# endif
#else
# ifndef _i2d_RSAPublicKey
#  define _i2d_RSAPublicKey OPENSSL_MANGLER_ASM(i2d_RSAPublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_RSAPublicKey_bio
#  define i2d_RSAPublicKey_bio OPENSSL_MANGLER(i2d_RSAPublicKey_bio)
# endif
#else
# ifndef _i2d_RSAPublicKey_bio
#  define _i2d_RSAPublicKey_bio OPENSSL_MANGLER_ASM(i2d_RSAPublicKey_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_RSAPublicKey_fp
#  define i2d_RSAPublicKey_fp OPENSSL_MANGLER(i2d_RSAPublicKey_fp)
# endif
#else
# ifndef _i2d_RSAPublicKey_fp
#  define _i2d_RSAPublicKey_fp OPENSSL_MANGLER_ASM(i2d_RSAPublicKey_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_RSA_OAEP_PARAMS
#  define i2d_RSA_OAEP_PARAMS OPENSSL_MANGLER(i2d_RSA_OAEP_PARAMS)
# endif
#else
# ifndef _i2d_RSA_OAEP_PARAMS
#  define _i2d_RSA_OAEP_PARAMS OPENSSL_MANGLER_ASM(i2d_RSA_OAEP_PARAMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_RSA_PSS_PARAMS
#  define i2d_RSA_PSS_PARAMS OPENSSL_MANGLER(i2d_RSA_PSS_PARAMS)
# endif
#else
# ifndef _i2d_RSA_PSS_PARAMS
#  define _i2d_RSA_PSS_PARAMS OPENSSL_MANGLER_ASM(i2d_RSA_PSS_PARAMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_RSA_PUBKEY
#  define i2d_RSA_PUBKEY OPENSSL_MANGLER(i2d_RSA_PUBKEY)
# endif
#else
# ifndef _i2d_RSA_PUBKEY
#  define _i2d_RSA_PUBKEY OPENSSL_MANGLER_ASM(i2d_RSA_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_RSA_PUBKEY_bio
#  define i2d_RSA_PUBKEY_bio OPENSSL_MANGLER(i2d_RSA_PUBKEY_bio)
# endif
#else
# ifndef _i2d_RSA_PUBKEY_bio
#  define _i2d_RSA_PUBKEY_bio OPENSSL_MANGLER_ASM(i2d_RSA_PUBKEY_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_RSA_PUBKEY_fp
#  define i2d_RSA_PUBKEY_fp OPENSSL_MANGLER(i2d_RSA_PUBKEY_fp)
# endif
#else
# ifndef _i2d_RSA_PUBKEY_fp
#  define _i2d_RSA_PUBKEY_fp OPENSSL_MANGLER_ASM(i2d_RSA_PUBKEY_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_SCRYPT_PARAMS
#  define i2d_SCRYPT_PARAMS OPENSSL_MANGLER(i2d_SCRYPT_PARAMS)
# endif
#else
# ifndef _i2d_SCRYPT_PARAMS
#  define _i2d_SCRYPT_PARAMS OPENSSL_MANGLER_ASM(i2d_SCRYPT_PARAMS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_SCT_LIST
#  define i2d_SCT_LIST OPENSSL_MANGLER(i2d_SCT_LIST)
# endif
#else
# ifndef _i2d_SCT_LIST
#  define _i2d_SCT_LIST OPENSSL_MANGLER_ASM(i2d_SCT_LIST)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_SSL_SESSION
#  define i2d_SSL_SESSION OPENSSL_MANGLER(i2d_SSL_SESSION)
# endif
#else
# ifndef _i2d_SSL_SESSION
#  define _i2d_SSL_SESSION OPENSSL_MANGLER_ASM(i2d_SSL_SESSION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_SXNET
#  define i2d_SXNET OPENSSL_MANGLER(i2d_SXNET)
# endif
#else
# ifndef _i2d_SXNET
#  define _i2d_SXNET OPENSSL_MANGLER_ASM(i2d_SXNET)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_SXNETID
#  define i2d_SXNETID OPENSSL_MANGLER(i2d_SXNETID)
# endif
#else
# ifndef _i2d_SXNETID
#  define _i2d_SXNETID OPENSSL_MANGLER_ASM(i2d_SXNETID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_ACCURACY
#  define i2d_TS_ACCURACY OPENSSL_MANGLER(i2d_TS_ACCURACY)
# endif
#else
# ifndef _i2d_TS_ACCURACY
#  define _i2d_TS_ACCURACY OPENSSL_MANGLER_ASM(i2d_TS_ACCURACY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_MSG_IMPRINT
#  define i2d_TS_MSG_IMPRINT OPENSSL_MANGLER(i2d_TS_MSG_IMPRINT)
# endif
#else
# ifndef _i2d_TS_MSG_IMPRINT
#  define _i2d_TS_MSG_IMPRINT OPENSSL_MANGLER_ASM(i2d_TS_MSG_IMPRINT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_MSG_IMPRINT_bio
#  define i2d_TS_MSG_IMPRINT_bio OPENSSL_MANGLER(i2d_TS_MSG_IMPRINT_bio)
# endif
#else
# ifndef _i2d_TS_MSG_IMPRINT_bio
#  define _i2d_TS_MSG_IMPRINT_bio OPENSSL_MANGLER_ASM(i2d_TS_MSG_IMPRINT_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_MSG_IMPRINT_fp
#  define i2d_TS_MSG_IMPRINT_fp OPENSSL_MANGLER(i2d_TS_MSG_IMPRINT_fp)
# endif
#else
# ifndef _i2d_TS_MSG_IMPRINT_fp
#  define _i2d_TS_MSG_IMPRINT_fp OPENSSL_MANGLER_ASM(i2d_TS_MSG_IMPRINT_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_REQ
#  define i2d_TS_REQ OPENSSL_MANGLER(i2d_TS_REQ)
# endif
#else
# ifndef _i2d_TS_REQ
#  define _i2d_TS_REQ OPENSSL_MANGLER_ASM(i2d_TS_REQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_REQ_bio
#  define i2d_TS_REQ_bio OPENSSL_MANGLER(i2d_TS_REQ_bio)
# endif
#else
# ifndef _i2d_TS_REQ_bio
#  define _i2d_TS_REQ_bio OPENSSL_MANGLER_ASM(i2d_TS_REQ_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_REQ_fp
#  define i2d_TS_REQ_fp OPENSSL_MANGLER(i2d_TS_REQ_fp)
# endif
#else
# ifndef _i2d_TS_REQ_fp
#  define _i2d_TS_REQ_fp OPENSSL_MANGLER_ASM(i2d_TS_REQ_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_RESP
#  define i2d_TS_RESP OPENSSL_MANGLER(i2d_TS_RESP)
# endif
#else
# ifndef _i2d_TS_RESP
#  define _i2d_TS_RESP OPENSSL_MANGLER_ASM(i2d_TS_RESP)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_RESP_bio
#  define i2d_TS_RESP_bio OPENSSL_MANGLER(i2d_TS_RESP_bio)
# endif
#else
# ifndef _i2d_TS_RESP_bio
#  define _i2d_TS_RESP_bio OPENSSL_MANGLER_ASM(i2d_TS_RESP_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_RESP_fp
#  define i2d_TS_RESP_fp OPENSSL_MANGLER(i2d_TS_RESP_fp)
# endif
#else
# ifndef _i2d_TS_RESP_fp
#  define _i2d_TS_RESP_fp OPENSSL_MANGLER_ASM(i2d_TS_RESP_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_STATUS_INFO
#  define i2d_TS_STATUS_INFO OPENSSL_MANGLER(i2d_TS_STATUS_INFO)
# endif
#else
# ifndef _i2d_TS_STATUS_INFO
#  define _i2d_TS_STATUS_INFO OPENSSL_MANGLER_ASM(i2d_TS_STATUS_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_TST_INFO
#  define i2d_TS_TST_INFO OPENSSL_MANGLER(i2d_TS_TST_INFO)
# endif
#else
# ifndef _i2d_TS_TST_INFO
#  define _i2d_TS_TST_INFO OPENSSL_MANGLER_ASM(i2d_TS_TST_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_TST_INFO_bio
#  define i2d_TS_TST_INFO_bio OPENSSL_MANGLER(i2d_TS_TST_INFO_bio)
# endif
#else
# ifndef _i2d_TS_TST_INFO_bio
#  define _i2d_TS_TST_INFO_bio OPENSSL_MANGLER_ASM(i2d_TS_TST_INFO_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_TS_TST_INFO_fp
#  define i2d_TS_TST_INFO_fp OPENSSL_MANGLER(i2d_TS_TST_INFO_fp)
# endif
#else
# ifndef _i2d_TS_TST_INFO_fp
#  define _i2d_TS_TST_INFO_fp OPENSSL_MANGLER_ASM(i2d_TS_TST_INFO_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_USERNOTICE
#  define i2d_USERNOTICE OPENSSL_MANGLER(i2d_USERNOTICE)
# endif
#else
# ifndef _i2d_USERNOTICE
#  define _i2d_USERNOTICE OPENSSL_MANGLER_ASM(i2d_USERNOTICE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509
#  define i2d_X509 OPENSSL_MANGLER(i2d_X509)
# endif
#else
# ifndef _i2d_X509
#  define _i2d_X509 OPENSSL_MANGLER_ASM(i2d_X509)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_ALGOR
#  define i2d_X509_ALGOR OPENSSL_MANGLER(i2d_X509_ALGOR)
# endif
#else
# ifndef _i2d_X509_ALGOR
#  define _i2d_X509_ALGOR OPENSSL_MANGLER_ASM(i2d_X509_ALGOR)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_ALGORS
#  define i2d_X509_ALGORS OPENSSL_MANGLER(i2d_X509_ALGORS)
# endif
#else
# ifndef _i2d_X509_ALGORS
#  define _i2d_X509_ALGORS OPENSSL_MANGLER_ASM(i2d_X509_ALGORS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_ATTRIBUTE
#  define i2d_X509_ATTRIBUTE OPENSSL_MANGLER(i2d_X509_ATTRIBUTE)
# endif
#else
# ifndef _i2d_X509_ATTRIBUTE
#  define _i2d_X509_ATTRIBUTE OPENSSL_MANGLER_ASM(i2d_X509_ATTRIBUTE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_AUX
#  define i2d_X509_AUX OPENSSL_MANGLER(i2d_X509_AUX)
# endif
#else
# ifndef _i2d_X509_AUX
#  define _i2d_X509_AUX OPENSSL_MANGLER_ASM(i2d_X509_AUX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_CERT_AUX
#  define i2d_X509_CERT_AUX OPENSSL_MANGLER(i2d_X509_CERT_AUX)
# endif
#else
# ifndef _i2d_X509_CERT_AUX
#  define _i2d_X509_CERT_AUX OPENSSL_MANGLER_ASM(i2d_X509_CERT_AUX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_CINF
#  define i2d_X509_CINF OPENSSL_MANGLER(i2d_X509_CINF)
# endif
#else
# ifndef _i2d_X509_CINF
#  define _i2d_X509_CINF OPENSSL_MANGLER_ASM(i2d_X509_CINF)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_CRL
#  define i2d_X509_CRL OPENSSL_MANGLER(i2d_X509_CRL)
# endif
#else
# ifndef _i2d_X509_CRL
#  define _i2d_X509_CRL OPENSSL_MANGLER_ASM(i2d_X509_CRL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_CRL_INFO
#  define i2d_X509_CRL_INFO OPENSSL_MANGLER(i2d_X509_CRL_INFO)
# endif
#else
# ifndef _i2d_X509_CRL_INFO
#  define _i2d_X509_CRL_INFO OPENSSL_MANGLER_ASM(i2d_X509_CRL_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_CRL_bio
#  define i2d_X509_CRL_bio OPENSSL_MANGLER(i2d_X509_CRL_bio)
# endif
#else
# ifndef _i2d_X509_CRL_bio
#  define _i2d_X509_CRL_bio OPENSSL_MANGLER_ASM(i2d_X509_CRL_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_CRL_fp
#  define i2d_X509_CRL_fp OPENSSL_MANGLER(i2d_X509_CRL_fp)
# endif
#else
# ifndef _i2d_X509_CRL_fp
#  define _i2d_X509_CRL_fp OPENSSL_MANGLER_ASM(i2d_X509_CRL_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_EXTENSION
#  define i2d_X509_EXTENSION OPENSSL_MANGLER(i2d_X509_EXTENSION)
# endif
#else
# ifndef _i2d_X509_EXTENSION
#  define _i2d_X509_EXTENSION OPENSSL_MANGLER_ASM(i2d_X509_EXTENSION)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_EXTENSIONS
#  define i2d_X509_EXTENSIONS OPENSSL_MANGLER(i2d_X509_EXTENSIONS)
# endif
#else
# ifndef _i2d_X509_EXTENSIONS
#  define _i2d_X509_EXTENSIONS OPENSSL_MANGLER_ASM(i2d_X509_EXTENSIONS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_NAME
#  define i2d_X509_NAME OPENSSL_MANGLER(i2d_X509_NAME)
# endif
#else
# ifndef _i2d_X509_NAME
#  define _i2d_X509_NAME OPENSSL_MANGLER_ASM(i2d_X509_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_NAME_ENTRY
#  define i2d_X509_NAME_ENTRY OPENSSL_MANGLER(i2d_X509_NAME_ENTRY)
# endif
#else
# ifndef _i2d_X509_NAME_ENTRY
#  define _i2d_X509_NAME_ENTRY OPENSSL_MANGLER_ASM(i2d_X509_NAME_ENTRY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_PUBKEY
#  define i2d_X509_PUBKEY OPENSSL_MANGLER(i2d_X509_PUBKEY)
# endif
#else
# ifndef _i2d_X509_PUBKEY
#  define _i2d_X509_PUBKEY OPENSSL_MANGLER_ASM(i2d_X509_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_PUBKEY_bio
#  define i2d_X509_PUBKEY_bio OPENSSL_MANGLER(i2d_X509_PUBKEY_bio)
# endif
#else
# ifndef _i2d_X509_PUBKEY_bio
#  define _i2d_X509_PUBKEY_bio OPENSSL_MANGLER_ASM(i2d_X509_PUBKEY_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_PUBKEY_fp
#  define i2d_X509_PUBKEY_fp OPENSSL_MANGLER(i2d_X509_PUBKEY_fp)
# endif
#else
# ifndef _i2d_X509_PUBKEY_fp
#  define _i2d_X509_PUBKEY_fp OPENSSL_MANGLER_ASM(i2d_X509_PUBKEY_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_REQ
#  define i2d_X509_REQ OPENSSL_MANGLER(i2d_X509_REQ)
# endif
#else
# ifndef _i2d_X509_REQ
#  define _i2d_X509_REQ OPENSSL_MANGLER_ASM(i2d_X509_REQ)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_REQ_INFO
#  define i2d_X509_REQ_INFO OPENSSL_MANGLER(i2d_X509_REQ_INFO)
# endif
#else
# ifndef _i2d_X509_REQ_INFO
#  define _i2d_X509_REQ_INFO OPENSSL_MANGLER_ASM(i2d_X509_REQ_INFO)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_REQ_bio
#  define i2d_X509_REQ_bio OPENSSL_MANGLER(i2d_X509_REQ_bio)
# endif
#else
# ifndef _i2d_X509_REQ_bio
#  define _i2d_X509_REQ_bio OPENSSL_MANGLER_ASM(i2d_X509_REQ_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_REQ_fp
#  define i2d_X509_REQ_fp OPENSSL_MANGLER(i2d_X509_REQ_fp)
# endif
#else
# ifndef _i2d_X509_REQ_fp
#  define _i2d_X509_REQ_fp OPENSSL_MANGLER_ASM(i2d_X509_REQ_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_REVOKED
#  define i2d_X509_REVOKED OPENSSL_MANGLER(i2d_X509_REVOKED)
# endif
#else
# ifndef _i2d_X509_REVOKED
#  define _i2d_X509_REVOKED OPENSSL_MANGLER_ASM(i2d_X509_REVOKED)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_SIG
#  define i2d_X509_SIG OPENSSL_MANGLER(i2d_X509_SIG)
# endif
#else
# ifndef _i2d_X509_SIG
#  define _i2d_X509_SIG OPENSSL_MANGLER_ASM(i2d_X509_SIG)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_VAL
#  define i2d_X509_VAL OPENSSL_MANGLER(i2d_X509_VAL)
# endif
#else
# ifndef _i2d_X509_VAL
#  define _i2d_X509_VAL OPENSSL_MANGLER_ASM(i2d_X509_VAL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_bio
#  define i2d_X509_bio OPENSSL_MANGLER(i2d_X509_bio)
# endif
#else
# ifndef _i2d_X509_bio
#  define _i2d_X509_bio OPENSSL_MANGLER_ASM(i2d_X509_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_X509_fp
#  define i2d_X509_fp OPENSSL_MANGLER(i2d_X509_fp)
# endif
#else
# ifndef _i2d_X509_fp
#  define _i2d_X509_fp OPENSSL_MANGLER_ASM(i2d_X509_fp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_int_dhx
#  define i2d_int_dhx OPENSSL_MANGLER(i2d_int_dhx)
# endif
#else
# ifndef _i2d_int_dhx
#  define _i2d_int_dhx OPENSSL_MANGLER_ASM(i2d_int_dhx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_re_X509_CRL_tbs
#  define i2d_re_X509_CRL_tbs OPENSSL_MANGLER(i2d_re_X509_CRL_tbs)
# endif
#else
# ifndef _i2d_re_X509_CRL_tbs
#  define _i2d_re_X509_CRL_tbs OPENSSL_MANGLER_ASM(i2d_re_X509_CRL_tbs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_re_X509_REQ_tbs
#  define i2d_re_X509_REQ_tbs OPENSSL_MANGLER(i2d_re_X509_REQ_tbs)
# endif
#else
# ifndef _i2d_re_X509_REQ_tbs
#  define _i2d_re_X509_REQ_tbs OPENSSL_MANGLER_ASM(i2d_re_X509_REQ_tbs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2d_re_X509_tbs
#  define i2d_re_X509_tbs OPENSSL_MANGLER(i2d_re_X509_tbs)
# endif
#else
# ifndef _i2d_re_X509_tbs
#  define _i2d_re_X509_tbs OPENSSL_MANGLER_ASM(i2d_re_X509_tbs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2o_ECPublicKey
#  define i2o_ECPublicKey OPENSSL_MANGLER(i2o_ECPublicKey)
# endif
#else
# ifndef _i2o_ECPublicKey
#  define _i2o_ECPublicKey OPENSSL_MANGLER_ASM(i2o_ECPublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2o_SCT
#  define i2o_SCT OPENSSL_MANGLER(i2o_SCT)
# endif
#else
# ifndef _i2o_SCT
#  define _i2o_SCT OPENSSL_MANGLER_ASM(i2o_SCT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2o_SCT_LIST
#  define i2o_SCT_LIST OPENSSL_MANGLER(i2o_SCT_LIST)
# endif
#else
# ifndef _i2o_SCT_LIST
#  define _i2o_SCT_LIST OPENSSL_MANGLER_ASM(i2o_SCT_LIST)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2o_SCT_signature
#  define i2o_SCT_signature OPENSSL_MANGLER(i2o_SCT_signature)
# endif
#else
# ifndef _i2o_SCT_signature
#  define _i2o_SCT_signature OPENSSL_MANGLER_ASM(i2o_SCT_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2s_ASN1_ENUMERATED
#  define i2s_ASN1_ENUMERATED OPENSSL_MANGLER(i2s_ASN1_ENUMERATED)
# endif
#else
# ifndef _i2s_ASN1_ENUMERATED
#  define _i2s_ASN1_ENUMERATED OPENSSL_MANGLER_ASM(i2s_ASN1_ENUMERATED)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2s_ASN1_ENUMERATED_TABLE
#  define i2s_ASN1_ENUMERATED_TABLE OPENSSL_MANGLER(i2s_ASN1_ENUMERATED_TABLE)
# endif
#else
# ifndef _i2s_ASN1_ENUMERATED_TABLE
#  define _i2s_ASN1_ENUMERATED_TABLE OPENSSL_MANGLER_ASM(i2s_ASN1_ENUMERATED_TABLE)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2s_ASN1_IA5STRING
#  define i2s_ASN1_IA5STRING OPENSSL_MANGLER(i2s_ASN1_IA5STRING)
# endif
#else
# ifndef _i2s_ASN1_IA5STRING
#  define _i2s_ASN1_IA5STRING OPENSSL_MANGLER_ASM(i2s_ASN1_IA5STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2s_ASN1_INTEGER
#  define i2s_ASN1_INTEGER OPENSSL_MANGLER(i2s_ASN1_INTEGER)
# endif
#else
# ifndef _i2s_ASN1_INTEGER
#  define _i2s_ASN1_INTEGER OPENSSL_MANGLER_ASM(i2s_ASN1_INTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2s_ASN1_OCTET_STRING
#  define i2s_ASN1_OCTET_STRING OPENSSL_MANGLER(i2s_ASN1_OCTET_STRING)
# endif
#else
# ifndef _i2s_ASN1_OCTET_STRING
#  define _i2s_ASN1_OCTET_STRING OPENSSL_MANGLER_ASM(i2s_ASN1_OCTET_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2s_ASN1_UTF8STRING
#  define i2s_ASN1_UTF8STRING OPENSSL_MANGLER(i2s_ASN1_UTF8STRING)
# endif
#else
# ifndef _i2s_ASN1_UTF8STRING
#  define _i2s_ASN1_UTF8STRING OPENSSL_MANGLER_ASM(i2s_ASN1_UTF8STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2t_ASN1_OBJECT
#  define i2t_ASN1_OBJECT OPENSSL_MANGLER(i2t_ASN1_OBJECT)
# endif
#else
# ifndef _i2t_ASN1_OBJECT
#  define _i2t_ASN1_OBJECT OPENSSL_MANGLER_ASM(i2t_ASN1_OBJECT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2v_ASN1_BIT_STRING
#  define i2v_ASN1_BIT_STRING OPENSSL_MANGLER(i2v_ASN1_BIT_STRING)
# endif
#else
# ifndef _i2v_ASN1_BIT_STRING
#  define _i2v_ASN1_BIT_STRING OPENSSL_MANGLER_ASM(i2v_ASN1_BIT_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2v_GENERAL_NAME
#  define i2v_GENERAL_NAME OPENSSL_MANGLER(i2v_GENERAL_NAME)
# endif
#else
# ifndef _i2v_GENERAL_NAME
#  define _i2v_GENERAL_NAME OPENSSL_MANGLER_ASM(i2v_GENERAL_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef i2v_GENERAL_NAMES
#  define i2v_GENERAL_NAMES OPENSSL_MANGLER(i2v_GENERAL_NAMES)
# endif
#else
# ifndef _i2v_GENERAL_NAMES
#  define _i2v_GENERAL_NAMES OPENSSL_MANGLER_ASM(i2v_GENERAL_NAMES)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef int_bn_mod_inverse
#  define int_bn_mod_inverse OPENSSL_MANGLER(int_bn_mod_inverse)
# endif
#else
# ifndef _int_bn_mod_inverse
#  define _int_bn_mod_inverse OPENSSL_MANGLER_ASM(int_bn_mod_inverse)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef lookup_sess_in_cache
#  define lookup_sess_in_cache OPENSSL_MANGLER(lookup_sess_in_cache)
# endif
#else
# ifndef _lookup_sess_in_cache
#  define _lookup_sess_in_cache OPENSSL_MANGLER_ASM(lookup_sess_in_cache)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef n_ssl3_mac
#  define n_ssl3_mac OPENSSL_MANGLER(n_ssl3_mac)
# endif
#else
# ifndef _n_ssl3_mac
#  define _n_ssl3_mac OPENSSL_MANGLER_ASM(n_ssl3_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef o2i_ECPublicKey
#  define o2i_ECPublicKey OPENSSL_MANGLER(o2i_ECPublicKey)
# endif
#else
# ifndef _o2i_ECPublicKey
#  define _o2i_ECPublicKey OPENSSL_MANGLER_ASM(o2i_ECPublicKey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef o2i_SCT
#  define o2i_SCT OPENSSL_MANGLER(o2i_SCT)
# endif
#else
# ifndef _o2i_SCT
#  define _o2i_SCT OPENSSL_MANGLER_ASM(o2i_SCT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef o2i_SCT_LIST
#  define o2i_SCT_LIST OPENSSL_MANGLER(o2i_SCT_LIST)
# endif
#else
# ifndef _o2i_SCT_LIST
#  define _o2i_SCT_LIST OPENSSL_MANGLER_ASM(o2i_SCT_LIST)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef o2i_SCT_signature
#  define o2i_SCT_signature OPENSSL_MANGLER(o2i_SCT_signature)
# endif
#else
# ifndef _o2i_SCT_signature
#  define _o2i_SCT_signature OPENSSL_MANGLER_ASM(o2i_SCT_signature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef openssl_add_all_ciphers_int
#  define openssl_add_all_ciphers_int OPENSSL_MANGLER(openssl_add_all_ciphers_int)
# endif
#else
# ifndef _openssl_add_all_ciphers_int
#  define _openssl_add_all_ciphers_int OPENSSL_MANGLER_ASM(openssl_add_all_ciphers_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef openssl_add_all_digests_int
#  define openssl_add_all_digests_int OPENSSL_MANGLER(openssl_add_all_digests_int)
# endif
#else
# ifndef _openssl_add_all_digests_int
#  define _openssl_add_all_digests_int OPENSSL_MANGLER_ASM(openssl_add_all_digests_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef openssl_fopen
#  define openssl_fopen OPENSSL_MANGLER(openssl_fopen)
# endif
#else
# ifndef _openssl_fopen
#  define _openssl_fopen OPENSSL_MANGLER_ASM(openssl_fopen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef openssl_get_fork_id
#  define openssl_get_fork_id OPENSSL_MANGLER(openssl_get_fork_id)
# endif
#else
# ifndef _openssl_get_fork_id
#  define _openssl_get_fork_id OPENSSL_MANGLER_ASM(openssl_get_fork_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef openssl_init_fork_handlers
#  define openssl_init_fork_handlers OPENSSL_MANGLER(openssl_init_fork_handlers)
# endif
#else
# ifndef _openssl_init_fork_handlers
#  define _openssl_init_fork_handlers OPENSSL_MANGLER_ASM(openssl_init_fork_handlers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef openssl_strerror_r
#  define openssl_strerror_r OPENSSL_MANGLER(openssl_strerror_r)
# endif
#else
# ifndef _openssl_strerror_r
#  define _openssl_strerror_r OPENSSL_MANGLER_ASM(openssl_strerror_r)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_RSASSA_PSS_params
#  define ossl_DER_w_RSASSA_PSS_params OPENSSL_MANGLER(ossl_DER_w_RSASSA_PSS_params)
# endif
#else
# ifndef _ossl_DER_w_RSASSA_PSS_params
#  define _ossl_DER_w_RSASSA_PSS_params OPENSSL_MANGLER_ASM(ossl_DER_w_RSASSA_PSS_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_DSA
#  define ossl_DER_w_algorithmIdentifier_DSA OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_DSA)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_DSA
#  define _ossl_DER_w_algorithmIdentifier_DSA OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_DSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_DSA_with_MD
#  define ossl_DER_w_algorithmIdentifier_DSA_with_MD OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_DSA_with_MD)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_DSA_with_MD
#  define _ossl_DER_w_algorithmIdentifier_DSA_with_MD OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_DSA_with_MD)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_EC
#  define ossl_DER_w_algorithmIdentifier_EC OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_EC)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_EC
#  define _ossl_DER_w_algorithmIdentifier_EC OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_EC)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_ECDSA_with_MD
#  define ossl_DER_w_algorithmIdentifier_ECDSA_with_MD OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_ECDSA_with_MD)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_ECDSA_with_MD
#  define _ossl_DER_w_algorithmIdentifier_ECDSA_with_MD OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_ECDSA_with_MD)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_ED25519
#  define ossl_DER_w_algorithmIdentifier_ED25519 OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_ED25519)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_ED25519
#  define _ossl_DER_w_algorithmIdentifier_ED25519 OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_ED25519)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_ED448
#  define ossl_DER_w_algorithmIdentifier_ED448 OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_ED448)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_ED448
#  define _ossl_DER_w_algorithmIdentifier_ED448 OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_ED448)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_MDWithRSAEncryption
#  define ossl_DER_w_algorithmIdentifier_MDWithRSAEncryption OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_MDWithRSAEncryption)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_MDWithRSAEncryption
#  define _ossl_DER_w_algorithmIdentifier_MDWithRSAEncryption OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_MDWithRSAEncryption)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_RSA
#  define ossl_DER_w_algorithmIdentifier_RSA OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_RSA)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_RSA
#  define _ossl_DER_w_algorithmIdentifier_RSA OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_RSA)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_RSA_PSS
#  define ossl_DER_w_algorithmIdentifier_RSA_PSS OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_RSA_PSS)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_RSA_PSS
#  define _ossl_DER_w_algorithmIdentifier_RSA_PSS OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_RSA_PSS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_SM2
#  define ossl_DER_w_algorithmIdentifier_SM2 OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_SM2)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_SM2
#  define _ossl_DER_w_algorithmIdentifier_SM2 OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_SM2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_SM2_with_MD
#  define ossl_DER_w_algorithmIdentifier_SM2_with_MD OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_SM2_with_MD)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_SM2_with_MD
#  define _ossl_DER_w_algorithmIdentifier_SM2_with_MD OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_SM2_with_MD)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_X25519
#  define ossl_DER_w_algorithmIdentifier_X25519 OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_X25519)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_X25519
#  define _ossl_DER_w_algorithmIdentifier_X25519 OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_X25519)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_algorithmIdentifier_X448
#  define ossl_DER_w_algorithmIdentifier_X448 OPENSSL_MANGLER(ossl_DER_w_algorithmIdentifier_X448)
# endif
#else
# ifndef _ossl_DER_w_algorithmIdentifier_X448
#  define _ossl_DER_w_algorithmIdentifier_X448 OPENSSL_MANGLER_ASM(ossl_DER_w_algorithmIdentifier_X448)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_begin_sequence
#  define ossl_DER_w_begin_sequence OPENSSL_MANGLER(ossl_DER_w_begin_sequence)
# endif
#else
# ifndef _ossl_DER_w_begin_sequence
#  define _ossl_DER_w_begin_sequence OPENSSL_MANGLER_ASM(ossl_DER_w_begin_sequence)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_bn
#  define ossl_DER_w_bn OPENSSL_MANGLER(ossl_DER_w_bn)
# endif
#else
# ifndef _ossl_DER_w_bn
#  define _ossl_DER_w_bn OPENSSL_MANGLER_ASM(ossl_DER_w_bn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_boolean
#  define ossl_DER_w_boolean OPENSSL_MANGLER(ossl_DER_w_boolean)
# endif
#else
# ifndef _ossl_DER_w_boolean
#  define _ossl_DER_w_boolean OPENSSL_MANGLER_ASM(ossl_DER_w_boolean)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_end_sequence
#  define ossl_DER_w_end_sequence OPENSSL_MANGLER(ossl_DER_w_end_sequence)
# endif
#else
# ifndef _ossl_DER_w_end_sequence
#  define _ossl_DER_w_end_sequence OPENSSL_MANGLER_ASM(ossl_DER_w_end_sequence)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_null
#  define ossl_DER_w_null OPENSSL_MANGLER(ossl_DER_w_null)
# endif
#else
# ifndef _ossl_DER_w_null
#  define _ossl_DER_w_null OPENSSL_MANGLER_ASM(ossl_DER_w_null)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_octet_string
#  define ossl_DER_w_octet_string OPENSSL_MANGLER(ossl_DER_w_octet_string)
# endif
#else
# ifndef _ossl_DER_w_octet_string
#  define _ossl_DER_w_octet_string OPENSSL_MANGLER_ASM(ossl_DER_w_octet_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_octet_string_uint32
#  define ossl_DER_w_octet_string_uint32 OPENSSL_MANGLER(ossl_DER_w_octet_string_uint32)
# endif
#else
# ifndef _ossl_DER_w_octet_string_uint32
#  define _ossl_DER_w_octet_string_uint32 OPENSSL_MANGLER_ASM(ossl_DER_w_octet_string_uint32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_precompiled
#  define ossl_DER_w_precompiled OPENSSL_MANGLER(ossl_DER_w_precompiled)
# endif
#else
# ifndef _ossl_DER_w_precompiled
#  define _ossl_DER_w_precompiled OPENSSL_MANGLER_ASM(ossl_DER_w_precompiled)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DER_w_uint32
#  define ossl_DER_w_uint32 OPENSSL_MANGLER(ossl_DER_w_uint32)
# endif
#else
# ifndef _ossl_DER_w_uint32
#  define _ossl_DER_w_uint32 OPENSSL_MANGLER_ASM(ossl_DER_w_uint32)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DHX_der_to_dhx_decoder_functions
#  define ossl_DHX_der_to_dhx_decoder_functions OPENSSL_MANGLER(ossl_DHX_der_to_dhx_decoder_functions)
# endif
#else
# ifndef _ossl_DHX_der_to_dhx_decoder_functions
#  define _ossl_DHX_der_to_dhx_decoder_functions OPENSSL_MANGLER_ASM(ossl_DHX_der_to_dhx_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DH_der_to_dh_decoder_functions
#  define ossl_DH_der_to_dh_decoder_functions OPENSSL_MANGLER(ossl_DH_der_to_dh_decoder_functions)
# endif
#else
# ifndef _ossl_DH_der_to_dh_decoder_functions
#  define _ossl_DH_der_to_dh_decoder_functions OPENSSL_MANGLER_ASM(ossl_DH_der_to_dh_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_DSA_der_to_dsa_decoder_functions
#  define ossl_DSA_der_to_dsa_decoder_functions OPENSSL_MANGLER(ossl_DSA_der_to_dsa_decoder_functions)
# endif
#else
# ifndef _ossl_DSA_der_to_dsa_decoder_functions
#  define _ossl_DSA_der_to_dsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_DSA_der_to_dsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_EC_der_to_ec_decoder_functions
#  define ossl_EC_der_to_ec_decoder_functions OPENSSL_MANGLER(ossl_EC_der_to_ec_decoder_functions)
# endif
#else
# ifndef _ossl_EC_der_to_ec_decoder_functions
#  define _ossl_EC_der_to_ec_decoder_functions OPENSSL_MANGLER_ASM(ossl_EC_der_to_ec_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_EncryptedPrivateKeyInfo_der_to_der_decoder_functions
#  define ossl_EncryptedPrivateKeyInfo_der_to_der_decoder_functions OPENSSL_MANGLER(ossl_EncryptedPrivateKeyInfo_der_to_der_decoder_functions)
# endif
#else
# ifndef _ossl_EncryptedPrivateKeyInfo_der_to_der_decoder_functions
#  define _ossl_EncryptedPrivateKeyInfo_der_to_der_decoder_functions OPENSSL_MANGLER_ASM(ossl_EncryptedPrivateKeyInfo_der_to_der_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_PrivateKeyInfo_der_to_dh_decoder_functions
#  define ossl_PrivateKeyInfo_der_to_dh_decoder_functions OPENSSL_MANGLER(ossl_PrivateKeyInfo_der_to_dh_decoder_functions)
# endif
#else
# ifndef _ossl_PrivateKeyInfo_der_to_dh_decoder_functions
#  define _ossl_PrivateKeyInfo_der_to_dh_decoder_functions OPENSSL_MANGLER_ASM(ossl_PrivateKeyInfo_der_to_dh_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_PrivateKeyInfo_der_to_dhx_decoder_functions
#  define ossl_PrivateKeyInfo_der_to_dhx_decoder_functions OPENSSL_MANGLER(ossl_PrivateKeyInfo_der_to_dhx_decoder_functions)
# endif
#else
# ifndef _ossl_PrivateKeyInfo_der_to_dhx_decoder_functions
#  define _ossl_PrivateKeyInfo_der_to_dhx_decoder_functions OPENSSL_MANGLER_ASM(ossl_PrivateKeyInfo_der_to_dhx_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_PrivateKeyInfo_der_to_dsa_decoder_functions
#  define ossl_PrivateKeyInfo_der_to_dsa_decoder_functions OPENSSL_MANGLER(ossl_PrivateKeyInfo_der_to_dsa_decoder_functions)
# endif
#else
# ifndef _ossl_PrivateKeyInfo_der_to_dsa_decoder_functions
#  define _ossl_PrivateKeyInfo_der_to_dsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_PrivateKeyInfo_der_to_dsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_PrivateKeyInfo_der_to_ec_decoder_functions
#  define ossl_PrivateKeyInfo_der_to_ec_decoder_functions OPENSSL_MANGLER(ossl_PrivateKeyInfo_der_to_ec_decoder_functions)
# endif
#else
# ifndef _ossl_PrivateKeyInfo_der_to_ec_decoder_functions
#  define _ossl_PrivateKeyInfo_der_to_ec_decoder_functions OPENSSL_MANGLER_ASM(ossl_PrivateKeyInfo_der_to_ec_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_PrivateKeyInfo_der_to_ed25519_decoder_functions
#  define ossl_PrivateKeyInfo_der_to_ed25519_decoder_functions OPENSSL_MANGLER(ossl_PrivateKeyInfo_der_to_ed25519_decoder_functions)
# endif
#else
# ifndef _ossl_PrivateKeyInfo_der_to_ed25519_decoder_functions
#  define _ossl_PrivateKeyInfo_der_to_ed25519_decoder_functions OPENSSL_MANGLER_ASM(ossl_PrivateKeyInfo_der_to_ed25519_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_PrivateKeyInfo_der_to_ed448_decoder_functions
#  define ossl_PrivateKeyInfo_der_to_ed448_decoder_functions OPENSSL_MANGLER(ossl_PrivateKeyInfo_der_to_ed448_decoder_functions)
# endif
#else
# ifndef _ossl_PrivateKeyInfo_der_to_ed448_decoder_functions
#  define _ossl_PrivateKeyInfo_der_to_ed448_decoder_functions OPENSSL_MANGLER_ASM(ossl_PrivateKeyInfo_der_to_ed448_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_PrivateKeyInfo_der_to_rsa_decoder_functions
#  define ossl_PrivateKeyInfo_der_to_rsa_decoder_functions OPENSSL_MANGLER(ossl_PrivateKeyInfo_der_to_rsa_decoder_functions)
# endif
#else
# ifndef _ossl_PrivateKeyInfo_der_to_rsa_decoder_functions
#  define _ossl_PrivateKeyInfo_der_to_rsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_PrivateKeyInfo_der_to_rsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_PrivateKeyInfo_der_to_rsapss_decoder_functions
#  define ossl_PrivateKeyInfo_der_to_rsapss_decoder_functions OPENSSL_MANGLER(ossl_PrivateKeyInfo_der_to_rsapss_decoder_functions)
# endif
#else
# ifndef _ossl_PrivateKeyInfo_der_to_rsapss_decoder_functions
#  define _ossl_PrivateKeyInfo_der_to_rsapss_decoder_functions OPENSSL_MANGLER_ASM(ossl_PrivateKeyInfo_der_to_rsapss_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_PrivateKeyInfo_der_to_x25519_decoder_functions
#  define ossl_PrivateKeyInfo_der_to_x25519_decoder_functions OPENSSL_MANGLER(ossl_PrivateKeyInfo_der_to_x25519_decoder_functions)
# endif
#else
# ifndef _ossl_PrivateKeyInfo_der_to_x25519_decoder_functions
#  define _ossl_PrivateKeyInfo_der_to_x25519_decoder_functions OPENSSL_MANGLER_ASM(ossl_PrivateKeyInfo_der_to_x25519_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_PrivateKeyInfo_der_to_x448_decoder_functions
#  define ossl_PrivateKeyInfo_der_to_x448_decoder_functions OPENSSL_MANGLER(ossl_PrivateKeyInfo_der_to_x448_decoder_functions)
# endif
#else
# ifndef _ossl_PrivateKeyInfo_der_to_x448_decoder_functions
#  define _ossl_PrivateKeyInfo_der_to_x448_decoder_functions OPENSSL_MANGLER_ASM(ossl_PrivateKeyInfo_der_to_x448_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_RSA_der_to_rsa_decoder_functions
#  define ossl_RSA_der_to_rsa_decoder_functions OPENSSL_MANGLER(ossl_RSA_der_to_rsa_decoder_functions)
# endif
#else
# ifndef _ossl_RSA_der_to_rsa_decoder_functions
#  define _ossl_RSA_der_to_rsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_RSA_der_to_rsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_SubjectPublicKeyInfo_der_to_der_decoder_functions
#  define ossl_SubjectPublicKeyInfo_der_to_der_decoder_functions OPENSSL_MANGLER(ossl_SubjectPublicKeyInfo_der_to_der_decoder_functions)
# endif
#else
# ifndef _ossl_SubjectPublicKeyInfo_der_to_der_decoder_functions
#  define _ossl_SubjectPublicKeyInfo_der_to_der_decoder_functions OPENSSL_MANGLER_ASM(ossl_SubjectPublicKeyInfo_der_to_der_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_SubjectPublicKeyInfo_der_to_dh_decoder_functions
#  define ossl_SubjectPublicKeyInfo_der_to_dh_decoder_functions OPENSSL_MANGLER(ossl_SubjectPublicKeyInfo_der_to_dh_decoder_functions)
# endif
#else
# ifndef _ossl_SubjectPublicKeyInfo_der_to_dh_decoder_functions
#  define _ossl_SubjectPublicKeyInfo_der_to_dh_decoder_functions OPENSSL_MANGLER_ASM(ossl_SubjectPublicKeyInfo_der_to_dh_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_SubjectPublicKeyInfo_der_to_dhx_decoder_functions
#  define ossl_SubjectPublicKeyInfo_der_to_dhx_decoder_functions OPENSSL_MANGLER(ossl_SubjectPublicKeyInfo_der_to_dhx_decoder_functions)
# endif
#else
# ifndef _ossl_SubjectPublicKeyInfo_der_to_dhx_decoder_functions
#  define _ossl_SubjectPublicKeyInfo_der_to_dhx_decoder_functions OPENSSL_MANGLER_ASM(ossl_SubjectPublicKeyInfo_der_to_dhx_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_SubjectPublicKeyInfo_der_to_dsa_decoder_functions
#  define ossl_SubjectPublicKeyInfo_der_to_dsa_decoder_functions OPENSSL_MANGLER(ossl_SubjectPublicKeyInfo_der_to_dsa_decoder_functions)
# endif
#else
# ifndef _ossl_SubjectPublicKeyInfo_der_to_dsa_decoder_functions
#  define _ossl_SubjectPublicKeyInfo_der_to_dsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_SubjectPublicKeyInfo_der_to_dsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_SubjectPublicKeyInfo_der_to_ec_decoder_functions
#  define ossl_SubjectPublicKeyInfo_der_to_ec_decoder_functions OPENSSL_MANGLER(ossl_SubjectPublicKeyInfo_der_to_ec_decoder_functions)
# endif
#else
# ifndef _ossl_SubjectPublicKeyInfo_der_to_ec_decoder_functions
#  define _ossl_SubjectPublicKeyInfo_der_to_ec_decoder_functions OPENSSL_MANGLER_ASM(ossl_SubjectPublicKeyInfo_der_to_ec_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_SubjectPublicKeyInfo_der_to_ed25519_decoder_functions
#  define ossl_SubjectPublicKeyInfo_der_to_ed25519_decoder_functions OPENSSL_MANGLER(ossl_SubjectPublicKeyInfo_der_to_ed25519_decoder_functions)
# endif
#else
# ifndef _ossl_SubjectPublicKeyInfo_der_to_ed25519_decoder_functions
#  define _ossl_SubjectPublicKeyInfo_der_to_ed25519_decoder_functions OPENSSL_MANGLER_ASM(ossl_SubjectPublicKeyInfo_der_to_ed25519_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_SubjectPublicKeyInfo_der_to_ed448_decoder_functions
#  define ossl_SubjectPublicKeyInfo_der_to_ed448_decoder_functions OPENSSL_MANGLER(ossl_SubjectPublicKeyInfo_der_to_ed448_decoder_functions)
# endif
#else
# ifndef _ossl_SubjectPublicKeyInfo_der_to_ed448_decoder_functions
#  define _ossl_SubjectPublicKeyInfo_der_to_ed448_decoder_functions OPENSSL_MANGLER_ASM(ossl_SubjectPublicKeyInfo_der_to_ed448_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_SubjectPublicKeyInfo_der_to_rsa_decoder_functions
#  define ossl_SubjectPublicKeyInfo_der_to_rsa_decoder_functions OPENSSL_MANGLER(ossl_SubjectPublicKeyInfo_der_to_rsa_decoder_functions)
# endif
#else
# ifndef _ossl_SubjectPublicKeyInfo_der_to_rsa_decoder_functions
#  define _ossl_SubjectPublicKeyInfo_der_to_rsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_SubjectPublicKeyInfo_der_to_rsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_SubjectPublicKeyInfo_der_to_rsapss_decoder_functions
#  define ossl_SubjectPublicKeyInfo_der_to_rsapss_decoder_functions OPENSSL_MANGLER(ossl_SubjectPublicKeyInfo_der_to_rsapss_decoder_functions)
# endif
#else
# ifndef _ossl_SubjectPublicKeyInfo_der_to_rsapss_decoder_functions
#  define _ossl_SubjectPublicKeyInfo_der_to_rsapss_decoder_functions OPENSSL_MANGLER_ASM(ossl_SubjectPublicKeyInfo_der_to_rsapss_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_SubjectPublicKeyInfo_der_to_x25519_decoder_functions
#  define ossl_SubjectPublicKeyInfo_der_to_x25519_decoder_functions OPENSSL_MANGLER(ossl_SubjectPublicKeyInfo_der_to_x25519_decoder_functions)
# endif
#else
# ifndef _ossl_SubjectPublicKeyInfo_der_to_x25519_decoder_functions
#  define _ossl_SubjectPublicKeyInfo_der_to_x25519_decoder_functions OPENSSL_MANGLER_ASM(ossl_SubjectPublicKeyInfo_der_to_x25519_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_SubjectPublicKeyInfo_der_to_x448_decoder_functions
#  define ossl_SubjectPublicKeyInfo_der_to_x448_decoder_functions OPENSSL_MANGLER(ossl_SubjectPublicKeyInfo_der_to_x448_decoder_functions)
# endif
#else
# ifndef _ossl_SubjectPublicKeyInfo_der_to_x448_decoder_functions
#  define _ossl_SubjectPublicKeyInfo_der_to_x448_decoder_functions OPENSSL_MANGLER_ASM(ossl_SubjectPublicKeyInfo_der_to_x448_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_X509_PUBKEY_INTERNAL_free
#  define ossl_X509_PUBKEY_INTERNAL_free OPENSSL_MANGLER(ossl_X509_PUBKEY_INTERNAL_free)
# endif
#else
# ifndef _ossl_X509_PUBKEY_INTERNAL_free
#  define _ossl_X509_PUBKEY_INTERNAL_free OPENSSL_MANGLER_ASM(ossl_X509_PUBKEY_INTERNAL_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_a2i_ipadd
#  define ossl_a2i_ipadd OPENSSL_MANGLER(ossl_a2i_ipadd)
# endif
#else
# ifndef _ossl_a2i_ipadd
#  define _ossl_a2i_ipadd OPENSSL_MANGLER_ASM(ossl_a2i_ipadd)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_a2ucompare
#  define ossl_a2ucompare OPENSSL_MANGLER(ossl_a2ucompare)
# endif
#else
# ifndef _ossl_a2ucompare
#  define _ossl_a2ucompare OPENSSL_MANGLER_ASM(ossl_a2ucompare)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_a2ulabel
#  define ossl_a2ulabel OPENSSL_MANGLER(ossl_a2ulabel)
# endif
#else
# ifndef _ossl_a2ulabel
#  define _ossl_a2ulabel OPENSSL_MANGLER_ASM(ossl_a2ulabel)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128cbc_cts_functions
#  define ossl_aes128cbc_cts_functions OPENSSL_MANGLER(ossl_aes128cbc_cts_functions)
# endif
#else
# ifndef _ossl_aes128cbc_cts_functions
#  define _ossl_aes128cbc_cts_functions OPENSSL_MANGLER_ASM(ossl_aes128cbc_cts_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128cbc_functions
#  define ossl_aes128cbc_functions OPENSSL_MANGLER(ossl_aes128cbc_functions)
# endif
#else
# ifndef _ossl_aes128cbc_functions
#  define _ossl_aes128cbc_functions OPENSSL_MANGLER_ASM(ossl_aes128cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128cbc_hmac_sha1_functions
#  define ossl_aes128cbc_hmac_sha1_functions OPENSSL_MANGLER(ossl_aes128cbc_hmac_sha1_functions)
# endif
#else
# ifndef _ossl_aes128cbc_hmac_sha1_functions
#  define _ossl_aes128cbc_hmac_sha1_functions OPENSSL_MANGLER_ASM(ossl_aes128cbc_hmac_sha1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128cbc_hmac_sha256_functions
#  define ossl_aes128cbc_hmac_sha256_functions OPENSSL_MANGLER(ossl_aes128cbc_hmac_sha256_functions)
# endif
#else
# ifndef _ossl_aes128cbc_hmac_sha256_functions
#  define _ossl_aes128cbc_hmac_sha256_functions OPENSSL_MANGLER_ASM(ossl_aes128cbc_hmac_sha256_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128ccm_functions
#  define ossl_aes128ccm_functions OPENSSL_MANGLER(ossl_aes128ccm_functions)
# endif
#else
# ifndef _ossl_aes128ccm_functions
#  define _ossl_aes128ccm_functions OPENSSL_MANGLER_ASM(ossl_aes128ccm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128cfb1_functions
#  define ossl_aes128cfb1_functions OPENSSL_MANGLER(ossl_aes128cfb1_functions)
# endif
#else
# ifndef _ossl_aes128cfb1_functions
#  define _ossl_aes128cfb1_functions OPENSSL_MANGLER_ASM(ossl_aes128cfb1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128cfb8_functions
#  define ossl_aes128cfb8_functions OPENSSL_MANGLER(ossl_aes128cfb8_functions)
# endif
#else
# ifndef _ossl_aes128cfb8_functions
#  define _ossl_aes128cfb8_functions OPENSSL_MANGLER_ASM(ossl_aes128cfb8_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128cfb_functions
#  define ossl_aes128cfb_functions OPENSSL_MANGLER(ossl_aes128cfb_functions)
# endif
#else
# ifndef _ossl_aes128cfb_functions
#  define _ossl_aes128cfb_functions OPENSSL_MANGLER_ASM(ossl_aes128cfb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128ctr_functions
#  define ossl_aes128ctr_functions OPENSSL_MANGLER(ossl_aes128ctr_functions)
# endif
#else
# ifndef _ossl_aes128ctr_functions
#  define _ossl_aes128ctr_functions OPENSSL_MANGLER_ASM(ossl_aes128ctr_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128ecb_functions
#  define ossl_aes128ecb_functions OPENSSL_MANGLER(ossl_aes128ecb_functions)
# endif
#else
# ifndef _ossl_aes128ecb_functions
#  define _ossl_aes128ecb_functions OPENSSL_MANGLER_ASM(ossl_aes128ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128gcm_functions
#  define ossl_aes128gcm_functions OPENSSL_MANGLER(ossl_aes128gcm_functions)
# endif
#else
# ifndef _ossl_aes128gcm_functions
#  define _ossl_aes128gcm_functions OPENSSL_MANGLER_ASM(ossl_aes128gcm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128ocb_functions
#  define ossl_aes128ocb_functions OPENSSL_MANGLER(ossl_aes128ocb_functions)
# endif
#else
# ifndef _ossl_aes128ocb_functions
#  define _ossl_aes128ocb_functions OPENSSL_MANGLER_ASM(ossl_aes128ocb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128ofb_functions
#  define ossl_aes128ofb_functions OPENSSL_MANGLER(ossl_aes128ofb_functions)
# endif
#else
# ifndef _ossl_aes128ofb_functions
#  define _ossl_aes128ofb_functions OPENSSL_MANGLER_ASM(ossl_aes128ofb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128siv_functions
#  define ossl_aes128siv_functions OPENSSL_MANGLER(ossl_aes128siv_functions)
# endif
#else
# ifndef _ossl_aes128siv_functions
#  define _ossl_aes128siv_functions OPENSSL_MANGLER_ASM(ossl_aes128siv_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128wrap_functions
#  define ossl_aes128wrap_functions OPENSSL_MANGLER(ossl_aes128wrap_functions)
# endif
#else
# ifndef _ossl_aes128wrap_functions
#  define _ossl_aes128wrap_functions OPENSSL_MANGLER_ASM(ossl_aes128wrap_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128wrapinv_functions
#  define ossl_aes128wrapinv_functions OPENSSL_MANGLER(ossl_aes128wrapinv_functions)
# endif
#else
# ifndef _ossl_aes128wrapinv_functions
#  define _ossl_aes128wrapinv_functions OPENSSL_MANGLER_ASM(ossl_aes128wrapinv_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128wrappad_functions
#  define ossl_aes128wrappad_functions OPENSSL_MANGLER(ossl_aes128wrappad_functions)
# endif
#else
# ifndef _ossl_aes128wrappad_functions
#  define _ossl_aes128wrappad_functions OPENSSL_MANGLER_ASM(ossl_aes128wrappad_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128wrappadinv_functions
#  define ossl_aes128wrappadinv_functions OPENSSL_MANGLER(ossl_aes128wrappadinv_functions)
# endif
#else
# ifndef _ossl_aes128wrappadinv_functions
#  define _ossl_aes128wrappadinv_functions OPENSSL_MANGLER_ASM(ossl_aes128wrappadinv_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes128xts_functions
#  define ossl_aes128xts_functions OPENSSL_MANGLER(ossl_aes128xts_functions)
# endif
#else
# ifndef _ossl_aes128xts_functions
#  define _ossl_aes128xts_functions OPENSSL_MANGLER_ASM(ossl_aes128xts_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192cbc_cts_functions
#  define ossl_aes192cbc_cts_functions OPENSSL_MANGLER(ossl_aes192cbc_cts_functions)
# endif
#else
# ifndef _ossl_aes192cbc_cts_functions
#  define _ossl_aes192cbc_cts_functions OPENSSL_MANGLER_ASM(ossl_aes192cbc_cts_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192cbc_functions
#  define ossl_aes192cbc_functions OPENSSL_MANGLER(ossl_aes192cbc_functions)
# endif
#else
# ifndef _ossl_aes192cbc_functions
#  define _ossl_aes192cbc_functions OPENSSL_MANGLER_ASM(ossl_aes192cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192ccm_functions
#  define ossl_aes192ccm_functions OPENSSL_MANGLER(ossl_aes192ccm_functions)
# endif
#else
# ifndef _ossl_aes192ccm_functions
#  define _ossl_aes192ccm_functions OPENSSL_MANGLER_ASM(ossl_aes192ccm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192cfb1_functions
#  define ossl_aes192cfb1_functions OPENSSL_MANGLER(ossl_aes192cfb1_functions)
# endif
#else
# ifndef _ossl_aes192cfb1_functions
#  define _ossl_aes192cfb1_functions OPENSSL_MANGLER_ASM(ossl_aes192cfb1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192cfb8_functions
#  define ossl_aes192cfb8_functions OPENSSL_MANGLER(ossl_aes192cfb8_functions)
# endif
#else
# ifndef _ossl_aes192cfb8_functions
#  define _ossl_aes192cfb8_functions OPENSSL_MANGLER_ASM(ossl_aes192cfb8_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192cfb_functions
#  define ossl_aes192cfb_functions OPENSSL_MANGLER(ossl_aes192cfb_functions)
# endif
#else
# ifndef _ossl_aes192cfb_functions
#  define _ossl_aes192cfb_functions OPENSSL_MANGLER_ASM(ossl_aes192cfb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192ctr_functions
#  define ossl_aes192ctr_functions OPENSSL_MANGLER(ossl_aes192ctr_functions)
# endif
#else
# ifndef _ossl_aes192ctr_functions
#  define _ossl_aes192ctr_functions OPENSSL_MANGLER_ASM(ossl_aes192ctr_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192ecb_functions
#  define ossl_aes192ecb_functions OPENSSL_MANGLER(ossl_aes192ecb_functions)
# endif
#else
# ifndef _ossl_aes192ecb_functions
#  define _ossl_aes192ecb_functions OPENSSL_MANGLER_ASM(ossl_aes192ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192gcm_functions
#  define ossl_aes192gcm_functions OPENSSL_MANGLER(ossl_aes192gcm_functions)
# endif
#else
# ifndef _ossl_aes192gcm_functions
#  define _ossl_aes192gcm_functions OPENSSL_MANGLER_ASM(ossl_aes192gcm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192ocb_functions
#  define ossl_aes192ocb_functions OPENSSL_MANGLER(ossl_aes192ocb_functions)
# endif
#else
# ifndef _ossl_aes192ocb_functions
#  define _ossl_aes192ocb_functions OPENSSL_MANGLER_ASM(ossl_aes192ocb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192ofb_functions
#  define ossl_aes192ofb_functions OPENSSL_MANGLER(ossl_aes192ofb_functions)
# endif
#else
# ifndef _ossl_aes192ofb_functions
#  define _ossl_aes192ofb_functions OPENSSL_MANGLER_ASM(ossl_aes192ofb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192siv_functions
#  define ossl_aes192siv_functions OPENSSL_MANGLER(ossl_aes192siv_functions)
# endif
#else
# ifndef _ossl_aes192siv_functions
#  define _ossl_aes192siv_functions OPENSSL_MANGLER_ASM(ossl_aes192siv_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192wrap_functions
#  define ossl_aes192wrap_functions OPENSSL_MANGLER(ossl_aes192wrap_functions)
# endif
#else
# ifndef _ossl_aes192wrap_functions
#  define _ossl_aes192wrap_functions OPENSSL_MANGLER_ASM(ossl_aes192wrap_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192wrapinv_functions
#  define ossl_aes192wrapinv_functions OPENSSL_MANGLER(ossl_aes192wrapinv_functions)
# endif
#else
# ifndef _ossl_aes192wrapinv_functions
#  define _ossl_aes192wrapinv_functions OPENSSL_MANGLER_ASM(ossl_aes192wrapinv_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192wrappad_functions
#  define ossl_aes192wrappad_functions OPENSSL_MANGLER(ossl_aes192wrappad_functions)
# endif
#else
# ifndef _ossl_aes192wrappad_functions
#  define _ossl_aes192wrappad_functions OPENSSL_MANGLER_ASM(ossl_aes192wrappad_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes192wrappadinv_functions
#  define ossl_aes192wrappadinv_functions OPENSSL_MANGLER(ossl_aes192wrappadinv_functions)
# endif
#else
# ifndef _ossl_aes192wrappadinv_functions
#  define _ossl_aes192wrappadinv_functions OPENSSL_MANGLER_ASM(ossl_aes192wrappadinv_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256cbc_cts_functions
#  define ossl_aes256cbc_cts_functions OPENSSL_MANGLER(ossl_aes256cbc_cts_functions)
# endif
#else
# ifndef _ossl_aes256cbc_cts_functions
#  define _ossl_aes256cbc_cts_functions OPENSSL_MANGLER_ASM(ossl_aes256cbc_cts_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256cbc_functions
#  define ossl_aes256cbc_functions OPENSSL_MANGLER(ossl_aes256cbc_functions)
# endif
#else
# ifndef _ossl_aes256cbc_functions
#  define _ossl_aes256cbc_functions OPENSSL_MANGLER_ASM(ossl_aes256cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256cbc_hmac_sha1_functions
#  define ossl_aes256cbc_hmac_sha1_functions OPENSSL_MANGLER(ossl_aes256cbc_hmac_sha1_functions)
# endif
#else
# ifndef _ossl_aes256cbc_hmac_sha1_functions
#  define _ossl_aes256cbc_hmac_sha1_functions OPENSSL_MANGLER_ASM(ossl_aes256cbc_hmac_sha1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256cbc_hmac_sha256_functions
#  define ossl_aes256cbc_hmac_sha256_functions OPENSSL_MANGLER(ossl_aes256cbc_hmac_sha256_functions)
# endif
#else
# ifndef _ossl_aes256cbc_hmac_sha256_functions
#  define _ossl_aes256cbc_hmac_sha256_functions OPENSSL_MANGLER_ASM(ossl_aes256cbc_hmac_sha256_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256ccm_functions
#  define ossl_aes256ccm_functions OPENSSL_MANGLER(ossl_aes256ccm_functions)
# endif
#else
# ifndef _ossl_aes256ccm_functions
#  define _ossl_aes256ccm_functions OPENSSL_MANGLER_ASM(ossl_aes256ccm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256cfb1_functions
#  define ossl_aes256cfb1_functions OPENSSL_MANGLER(ossl_aes256cfb1_functions)
# endif
#else
# ifndef _ossl_aes256cfb1_functions
#  define _ossl_aes256cfb1_functions OPENSSL_MANGLER_ASM(ossl_aes256cfb1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256cfb8_functions
#  define ossl_aes256cfb8_functions OPENSSL_MANGLER(ossl_aes256cfb8_functions)
# endif
#else
# ifndef _ossl_aes256cfb8_functions
#  define _ossl_aes256cfb8_functions OPENSSL_MANGLER_ASM(ossl_aes256cfb8_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256cfb_functions
#  define ossl_aes256cfb_functions OPENSSL_MANGLER(ossl_aes256cfb_functions)
# endif
#else
# ifndef _ossl_aes256cfb_functions
#  define _ossl_aes256cfb_functions OPENSSL_MANGLER_ASM(ossl_aes256cfb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256ctr_functions
#  define ossl_aes256ctr_functions OPENSSL_MANGLER(ossl_aes256ctr_functions)
# endif
#else
# ifndef _ossl_aes256ctr_functions
#  define _ossl_aes256ctr_functions OPENSSL_MANGLER_ASM(ossl_aes256ctr_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256ecb_functions
#  define ossl_aes256ecb_functions OPENSSL_MANGLER(ossl_aes256ecb_functions)
# endif
#else
# ifndef _ossl_aes256ecb_functions
#  define _ossl_aes256ecb_functions OPENSSL_MANGLER_ASM(ossl_aes256ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256gcm_functions
#  define ossl_aes256gcm_functions OPENSSL_MANGLER(ossl_aes256gcm_functions)
# endif
#else
# ifndef _ossl_aes256gcm_functions
#  define _ossl_aes256gcm_functions OPENSSL_MANGLER_ASM(ossl_aes256gcm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256ocb_functions
#  define ossl_aes256ocb_functions OPENSSL_MANGLER(ossl_aes256ocb_functions)
# endif
#else
# ifndef _ossl_aes256ocb_functions
#  define _ossl_aes256ocb_functions OPENSSL_MANGLER_ASM(ossl_aes256ocb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256ofb_functions
#  define ossl_aes256ofb_functions OPENSSL_MANGLER(ossl_aes256ofb_functions)
# endif
#else
# ifndef _ossl_aes256ofb_functions
#  define _ossl_aes256ofb_functions OPENSSL_MANGLER_ASM(ossl_aes256ofb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256siv_functions
#  define ossl_aes256siv_functions OPENSSL_MANGLER(ossl_aes256siv_functions)
# endif
#else
# ifndef _ossl_aes256siv_functions
#  define _ossl_aes256siv_functions OPENSSL_MANGLER_ASM(ossl_aes256siv_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256wrap_functions
#  define ossl_aes256wrap_functions OPENSSL_MANGLER(ossl_aes256wrap_functions)
# endif
#else
# ifndef _ossl_aes256wrap_functions
#  define _ossl_aes256wrap_functions OPENSSL_MANGLER_ASM(ossl_aes256wrap_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256wrapinv_functions
#  define ossl_aes256wrapinv_functions OPENSSL_MANGLER(ossl_aes256wrapinv_functions)
# endif
#else
# ifndef _ossl_aes256wrapinv_functions
#  define _ossl_aes256wrapinv_functions OPENSSL_MANGLER_ASM(ossl_aes256wrapinv_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256wrappad_functions
#  define ossl_aes256wrappad_functions OPENSSL_MANGLER(ossl_aes256wrappad_functions)
# endif
#else
# ifndef _ossl_aes256wrappad_functions
#  define _ossl_aes256wrappad_functions OPENSSL_MANGLER_ASM(ossl_aes256wrappad_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256wrappadinv_functions
#  define ossl_aes256wrappadinv_functions OPENSSL_MANGLER(ossl_aes256wrappadinv_functions)
# endif
#else
# ifndef _ossl_aes256wrappadinv_functions
#  define _ossl_aes256wrappadinv_functions OPENSSL_MANGLER_ASM(ossl_aes256wrappadinv_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aes256xts_functions
#  define ossl_aes256xts_functions OPENSSL_MANGLER(ossl_aes256xts_functions)
# endif
#else
# ifndef _ossl_aes256xts_functions
#  define _ossl_aes256xts_functions OPENSSL_MANGLER_ASM(ossl_aes256xts_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_algorithm_do_all
#  define ossl_algorithm_do_all OPENSSL_MANGLER(ossl_algorithm_do_all)
# endif
#else
# ifndef _ossl_algorithm_do_all
#  define _ossl_algorithm_do_all OPENSSL_MANGLER_ASM(ossl_algorithm_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_algorithm_get1_first_name
#  define ossl_algorithm_get1_first_name OPENSSL_MANGLER(ossl_algorithm_get1_first_name)
# endif
#else
# ifndef _ossl_algorithm_get1_first_name
#  define _ossl_algorithm_get1_first_name OPENSSL_MANGLER_ASM(ossl_algorithm_get1_first_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_any_to_obj_algorithm
#  define ossl_any_to_obj_algorithm OPENSSL_MANGLER(ossl_any_to_obj_algorithm)
# endif
#else
# ifndef _ossl_any_to_obj_algorithm
#  define _ossl_any_to_obj_algorithm OPENSSL_MANGLER_ASM(ossl_any_to_obj_algorithm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria128cbc_functions
#  define ossl_aria128cbc_functions OPENSSL_MANGLER(ossl_aria128cbc_functions)
# endif
#else
# ifndef _ossl_aria128cbc_functions
#  define _ossl_aria128cbc_functions OPENSSL_MANGLER_ASM(ossl_aria128cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria128ccm_functions
#  define ossl_aria128ccm_functions OPENSSL_MANGLER(ossl_aria128ccm_functions)
# endif
#else
# ifndef _ossl_aria128ccm_functions
#  define _ossl_aria128ccm_functions OPENSSL_MANGLER_ASM(ossl_aria128ccm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria128cfb1_functions
#  define ossl_aria128cfb1_functions OPENSSL_MANGLER(ossl_aria128cfb1_functions)
# endif
#else
# ifndef _ossl_aria128cfb1_functions
#  define _ossl_aria128cfb1_functions OPENSSL_MANGLER_ASM(ossl_aria128cfb1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria128cfb8_functions
#  define ossl_aria128cfb8_functions OPENSSL_MANGLER(ossl_aria128cfb8_functions)
# endif
#else
# ifndef _ossl_aria128cfb8_functions
#  define _ossl_aria128cfb8_functions OPENSSL_MANGLER_ASM(ossl_aria128cfb8_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria128cfb_functions
#  define ossl_aria128cfb_functions OPENSSL_MANGLER(ossl_aria128cfb_functions)
# endif
#else
# ifndef _ossl_aria128cfb_functions
#  define _ossl_aria128cfb_functions OPENSSL_MANGLER_ASM(ossl_aria128cfb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria128ctr_functions
#  define ossl_aria128ctr_functions OPENSSL_MANGLER(ossl_aria128ctr_functions)
# endif
#else
# ifndef _ossl_aria128ctr_functions
#  define _ossl_aria128ctr_functions OPENSSL_MANGLER_ASM(ossl_aria128ctr_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria128ecb_functions
#  define ossl_aria128ecb_functions OPENSSL_MANGLER(ossl_aria128ecb_functions)
# endif
#else
# ifndef _ossl_aria128ecb_functions
#  define _ossl_aria128ecb_functions OPENSSL_MANGLER_ASM(ossl_aria128ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria128gcm_functions
#  define ossl_aria128gcm_functions OPENSSL_MANGLER(ossl_aria128gcm_functions)
# endif
#else
# ifndef _ossl_aria128gcm_functions
#  define _ossl_aria128gcm_functions OPENSSL_MANGLER_ASM(ossl_aria128gcm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria128ofb_functions
#  define ossl_aria128ofb_functions OPENSSL_MANGLER(ossl_aria128ofb_functions)
# endif
#else
# ifndef _ossl_aria128ofb_functions
#  define _ossl_aria128ofb_functions OPENSSL_MANGLER_ASM(ossl_aria128ofb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria192cbc_functions
#  define ossl_aria192cbc_functions OPENSSL_MANGLER(ossl_aria192cbc_functions)
# endif
#else
# ifndef _ossl_aria192cbc_functions
#  define _ossl_aria192cbc_functions OPENSSL_MANGLER_ASM(ossl_aria192cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria192ccm_functions
#  define ossl_aria192ccm_functions OPENSSL_MANGLER(ossl_aria192ccm_functions)
# endif
#else
# ifndef _ossl_aria192ccm_functions
#  define _ossl_aria192ccm_functions OPENSSL_MANGLER_ASM(ossl_aria192ccm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria192cfb1_functions
#  define ossl_aria192cfb1_functions OPENSSL_MANGLER(ossl_aria192cfb1_functions)
# endif
#else
# ifndef _ossl_aria192cfb1_functions
#  define _ossl_aria192cfb1_functions OPENSSL_MANGLER_ASM(ossl_aria192cfb1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria192cfb8_functions
#  define ossl_aria192cfb8_functions OPENSSL_MANGLER(ossl_aria192cfb8_functions)
# endif
#else
# ifndef _ossl_aria192cfb8_functions
#  define _ossl_aria192cfb8_functions OPENSSL_MANGLER_ASM(ossl_aria192cfb8_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria192cfb_functions
#  define ossl_aria192cfb_functions OPENSSL_MANGLER(ossl_aria192cfb_functions)
# endif
#else
# ifndef _ossl_aria192cfb_functions
#  define _ossl_aria192cfb_functions OPENSSL_MANGLER_ASM(ossl_aria192cfb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria192ctr_functions
#  define ossl_aria192ctr_functions OPENSSL_MANGLER(ossl_aria192ctr_functions)
# endif
#else
# ifndef _ossl_aria192ctr_functions
#  define _ossl_aria192ctr_functions OPENSSL_MANGLER_ASM(ossl_aria192ctr_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria192ecb_functions
#  define ossl_aria192ecb_functions OPENSSL_MANGLER(ossl_aria192ecb_functions)
# endif
#else
# ifndef _ossl_aria192ecb_functions
#  define _ossl_aria192ecb_functions OPENSSL_MANGLER_ASM(ossl_aria192ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria192gcm_functions
#  define ossl_aria192gcm_functions OPENSSL_MANGLER(ossl_aria192gcm_functions)
# endif
#else
# ifndef _ossl_aria192gcm_functions
#  define _ossl_aria192gcm_functions OPENSSL_MANGLER_ASM(ossl_aria192gcm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria192ofb_functions
#  define ossl_aria192ofb_functions OPENSSL_MANGLER(ossl_aria192ofb_functions)
# endif
#else
# ifndef _ossl_aria192ofb_functions
#  define _ossl_aria192ofb_functions OPENSSL_MANGLER_ASM(ossl_aria192ofb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria256cbc_functions
#  define ossl_aria256cbc_functions OPENSSL_MANGLER(ossl_aria256cbc_functions)
# endif
#else
# ifndef _ossl_aria256cbc_functions
#  define _ossl_aria256cbc_functions OPENSSL_MANGLER_ASM(ossl_aria256cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria256ccm_functions
#  define ossl_aria256ccm_functions OPENSSL_MANGLER(ossl_aria256ccm_functions)
# endif
#else
# ifndef _ossl_aria256ccm_functions
#  define _ossl_aria256ccm_functions OPENSSL_MANGLER_ASM(ossl_aria256ccm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria256cfb1_functions
#  define ossl_aria256cfb1_functions OPENSSL_MANGLER(ossl_aria256cfb1_functions)
# endif
#else
# ifndef _ossl_aria256cfb1_functions
#  define _ossl_aria256cfb1_functions OPENSSL_MANGLER_ASM(ossl_aria256cfb1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria256cfb8_functions
#  define ossl_aria256cfb8_functions OPENSSL_MANGLER(ossl_aria256cfb8_functions)
# endif
#else
# ifndef _ossl_aria256cfb8_functions
#  define _ossl_aria256cfb8_functions OPENSSL_MANGLER_ASM(ossl_aria256cfb8_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria256cfb_functions
#  define ossl_aria256cfb_functions OPENSSL_MANGLER(ossl_aria256cfb_functions)
# endif
#else
# ifndef _ossl_aria256cfb_functions
#  define _ossl_aria256cfb_functions OPENSSL_MANGLER_ASM(ossl_aria256cfb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria256ctr_functions
#  define ossl_aria256ctr_functions OPENSSL_MANGLER(ossl_aria256ctr_functions)
# endif
#else
# ifndef _ossl_aria256ctr_functions
#  define _ossl_aria256ctr_functions OPENSSL_MANGLER_ASM(ossl_aria256ctr_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria256ecb_functions
#  define ossl_aria256ecb_functions OPENSSL_MANGLER(ossl_aria256ecb_functions)
# endif
#else
# ifndef _ossl_aria256ecb_functions
#  define _ossl_aria256ecb_functions OPENSSL_MANGLER_ASM(ossl_aria256ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria256gcm_functions
#  define ossl_aria256gcm_functions OPENSSL_MANGLER(ossl_aria256gcm_functions)
# endif
#else
# ifndef _ossl_aria256gcm_functions
#  define _ossl_aria256gcm_functions OPENSSL_MANGLER_ASM(ossl_aria256gcm_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria256ofb_functions
#  define ossl_aria256ofb_functions OPENSSL_MANGLER(ossl_aria256ofb_functions)
# endif
#else
# ifndef _ossl_aria256ofb_functions
#  define _ossl_aria256ofb_functions OPENSSL_MANGLER_ASM(ossl_aria256ofb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria_encrypt
#  define ossl_aria_encrypt OPENSSL_MANGLER(ossl_aria_encrypt)
# endif
#else
# ifndef _ossl_aria_encrypt
#  define _ossl_aria_encrypt OPENSSL_MANGLER_ASM(ossl_aria_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria_set_decrypt_key
#  define ossl_aria_set_decrypt_key OPENSSL_MANGLER(ossl_aria_set_decrypt_key)
# endif
#else
# ifndef _ossl_aria_set_decrypt_key
#  define _ossl_aria_set_decrypt_key OPENSSL_MANGLER_ASM(ossl_aria_set_decrypt_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_aria_set_encrypt_key
#  define ossl_aria_set_encrypt_key OPENSSL_MANGLER(ossl_aria_set_encrypt_key)
# endif
#else
# ifndef _ossl_aria_set_encrypt_key
#  define _ossl_aria_set_encrypt_key OPENSSL_MANGLER_ASM(ossl_aria_set_encrypt_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ascii_isdigit
#  define ossl_ascii_isdigit OPENSSL_MANGLER(ossl_ascii_isdigit)
# endif
#else
# ifndef _ossl_ascii_isdigit
#  define _ossl_ascii_isdigit OPENSSL_MANGLER_ASM(ossl_ascii_isdigit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_do_adb
#  define ossl_asn1_do_adb OPENSSL_MANGLER(ossl_asn1_do_adb)
# endif
#else
# ifndef _ossl_asn1_do_adb
#  define _ossl_asn1_do_adb OPENSSL_MANGLER_ASM(ossl_asn1_do_adb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_do_lock
#  define ossl_asn1_do_lock OPENSSL_MANGLER(ossl_asn1_do_lock)
# endif
#else
# ifndef _ossl_asn1_do_lock
#  define _ossl_asn1_do_lock OPENSSL_MANGLER_ASM(ossl_asn1_do_lock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_enc_free
#  define ossl_asn1_enc_free OPENSSL_MANGLER(ossl_asn1_enc_free)
# endif
#else
# ifndef _ossl_asn1_enc_free
#  define _ossl_asn1_enc_free OPENSSL_MANGLER_ASM(ossl_asn1_enc_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_enc_init
#  define ossl_asn1_enc_init OPENSSL_MANGLER(ossl_asn1_enc_init)
# endif
#else
# ifndef _ossl_asn1_enc_init
#  define _ossl_asn1_enc_init OPENSSL_MANGLER_ASM(ossl_asn1_enc_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_enc_restore
#  define ossl_asn1_enc_restore OPENSSL_MANGLER(ossl_asn1_enc_restore)
# endif
#else
# ifndef _ossl_asn1_enc_restore
#  define _ossl_asn1_enc_restore OPENSSL_MANGLER_ASM(ossl_asn1_enc_restore)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_enc_save
#  define ossl_asn1_enc_save OPENSSL_MANGLER(ossl_asn1_enc_save)
# endif
#else
# ifndef _ossl_asn1_enc_save
#  define _ossl_asn1_enc_save OPENSSL_MANGLER_ASM(ossl_asn1_enc_save)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_get_choice_selector
#  define ossl_asn1_get_choice_selector OPENSSL_MANGLER(ossl_asn1_get_choice_selector)
# endif
#else
# ifndef _ossl_asn1_get_choice_selector
#  define _ossl_asn1_get_choice_selector OPENSSL_MANGLER_ASM(ossl_asn1_get_choice_selector)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_get_choice_selector_const
#  define ossl_asn1_get_choice_selector_const OPENSSL_MANGLER(ossl_asn1_get_choice_selector_const)
# endif
#else
# ifndef _ossl_asn1_get_choice_selector_const
#  define _ossl_asn1_get_choice_selector_const OPENSSL_MANGLER_ASM(ossl_asn1_get_choice_selector_const)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_get_const_field_ptr
#  define ossl_asn1_get_const_field_ptr OPENSSL_MANGLER(ossl_asn1_get_const_field_ptr)
# endif
#else
# ifndef _ossl_asn1_get_const_field_ptr
#  define _ossl_asn1_get_const_field_ptr OPENSSL_MANGLER_ASM(ossl_asn1_get_const_field_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_get_field_ptr
#  define ossl_asn1_get_field_ptr OPENSSL_MANGLER(ossl_asn1_get_field_ptr)
# endif
#else
# ifndef _ossl_asn1_get_field_ptr
#  define _ossl_asn1_get_field_ptr OPENSSL_MANGLER_ASM(ossl_asn1_get_field_ptr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_item_digest_ex
#  define ossl_asn1_item_digest_ex OPENSSL_MANGLER(ossl_asn1_item_digest_ex)
# endif
#else
# ifndef _ossl_asn1_item_digest_ex
#  define _ossl_asn1_item_digest_ex OPENSSL_MANGLER_ASM(ossl_asn1_item_digest_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_item_embed_free
#  define ossl_asn1_item_embed_free OPENSSL_MANGLER(ossl_asn1_item_embed_free)
# endif
#else
# ifndef _ossl_asn1_item_embed_free
#  define _ossl_asn1_item_embed_free OPENSSL_MANGLER_ASM(ossl_asn1_item_embed_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_item_ex_new_intern
#  define ossl_asn1_item_ex_new_intern OPENSSL_MANGLER(ossl_asn1_item_ex_new_intern)
# endif
#else
# ifndef _ossl_asn1_item_ex_new_intern
#  define _ossl_asn1_item_ex_new_intern OPENSSL_MANGLER_ASM(ossl_asn1_item_ex_new_intern)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_primitive_free
#  define ossl_asn1_primitive_free OPENSSL_MANGLER(ossl_asn1_primitive_free)
# endif
#else
# ifndef _ossl_asn1_primitive_free
#  define _ossl_asn1_primitive_free OPENSSL_MANGLER_ASM(ossl_asn1_primitive_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_set_choice_selector
#  define ossl_asn1_set_choice_selector OPENSSL_MANGLER(ossl_asn1_set_choice_selector)
# endif
#else
# ifndef _ossl_asn1_set_choice_selector
#  define _ossl_asn1_set_choice_selector OPENSSL_MANGLER_ASM(ossl_asn1_set_choice_selector)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_string_embed_free
#  define ossl_asn1_string_embed_free OPENSSL_MANGLER(ossl_asn1_string_embed_free)
# endif
#else
# ifndef _ossl_asn1_string_embed_free
#  define _ossl_asn1_string_embed_free OPENSSL_MANGLER_ASM(ossl_asn1_string_embed_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_template_free
#  define ossl_asn1_template_free OPENSSL_MANGLER(ossl_asn1_template_free)
# endif
#else
# ifndef _ossl_asn1_template_free
#  define _ossl_asn1_template_free OPENSSL_MANGLER_ASM(ossl_asn1_template_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_time_from_tm
#  define ossl_asn1_time_from_tm OPENSSL_MANGLER(ossl_asn1_time_from_tm)
# endif
#else
# ifndef _ossl_asn1_time_from_tm
#  define _ossl_asn1_time_from_tm OPENSSL_MANGLER_ASM(ossl_asn1_time_from_tm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_time_print_ex
#  define ossl_asn1_time_print_ex OPENSSL_MANGLER(ossl_asn1_time_print_ex)
# endif
#else
# ifndef _ossl_asn1_time_print_ex
#  define _ossl_asn1_time_print_ex OPENSSL_MANGLER_ASM(ossl_asn1_time_print_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_time_to_tm
#  define ossl_asn1_time_to_tm OPENSSL_MANGLER(ossl_asn1_time_to_tm)
# endif
#else
# ifndef _ossl_asn1_time_to_tm
#  define _ossl_asn1_time_to_tm OPENSSL_MANGLER_ASM(ossl_asn1_time_to_tm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_type_get_octetstring_int
#  define ossl_asn1_type_get_octetstring_int OPENSSL_MANGLER(ossl_asn1_type_get_octetstring_int)
# endif
#else
# ifndef _ossl_asn1_type_get_octetstring_int
#  define _ossl_asn1_type_get_octetstring_int OPENSSL_MANGLER_ASM(ossl_asn1_type_get_octetstring_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_type_set_octetstring_int
#  define ossl_asn1_type_set_octetstring_int OPENSSL_MANGLER(ossl_asn1_type_set_octetstring_int)
# endif
#else
# ifndef _ossl_asn1_type_set_octetstring_int
#  define _ossl_asn1_type_set_octetstring_int OPENSSL_MANGLER_ASM(ossl_asn1_type_set_octetstring_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_asn1_utctime_to_tm
#  define ossl_asn1_utctime_to_tm OPENSSL_MANGLER(ossl_asn1_utctime_to_tm)
# endif
#else
# ifndef _ossl_asn1_utctime_to_tm
#  define _ossl_asn1_utctime_to_tm OPENSSL_MANGLER_ASM(ossl_asn1_utctime_to_tm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_b2i
#  define ossl_b2i OPENSSL_MANGLER(ossl_b2i)
# endif
#else
# ifndef _ossl_b2i
#  define _ossl_b2i OPENSSL_MANGLER_ASM(ossl_b2i)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_b2i_DSA_after_header
#  define ossl_b2i_DSA_after_header OPENSSL_MANGLER(ossl_b2i_DSA_after_header)
# endif
#else
# ifndef _ossl_b2i_DSA_after_header
#  define _ossl_b2i_DSA_after_header OPENSSL_MANGLER_ASM(ossl_b2i_DSA_after_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_b2i_RSA_after_header
#  define ossl_b2i_RSA_after_header OPENSSL_MANGLER(ossl_b2i_RSA_after_header)
# endif
#else
# ifndef _ossl_b2i_RSA_after_header
#  define _ossl_b2i_RSA_after_header OPENSSL_MANGLER_ASM(ossl_b2i_RSA_after_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_b2i_bio
#  define ossl_b2i_bio OPENSSL_MANGLER(ossl_b2i_bio)
# endif
#else
# ifndef _ossl_b2i_bio
#  define _ossl_b2i_bio OPENSSL_MANGLER_ASM(ossl_b2i_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_base_provider_init
#  define ossl_base_provider_init OPENSSL_MANGLER(ossl_base_provider_init)
# endif
#else
# ifndef _ossl_base_provider_init
#  define _ossl_base_provider_init OPENSSL_MANGLER_ASM(ossl_base_provider_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_const_2
#  define ossl_bignum_const_2 OPENSSL_MANGLER(ossl_bignum_const_2)
# endif
#else
# ifndef _ossl_bignum_const_2
#  define _ossl_bignum_const_2 OPENSSL_MANGLER_ASM(ossl_bignum_const_2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_dh1024_160_g
#  define ossl_bignum_dh1024_160_g OPENSSL_MANGLER(ossl_bignum_dh1024_160_g)
# endif
#else
# ifndef _ossl_bignum_dh1024_160_g
#  define _ossl_bignum_dh1024_160_g OPENSSL_MANGLER_ASM(ossl_bignum_dh1024_160_g)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_dh1024_160_p
#  define ossl_bignum_dh1024_160_p OPENSSL_MANGLER(ossl_bignum_dh1024_160_p)
# endif
#else
# ifndef _ossl_bignum_dh1024_160_p
#  define _ossl_bignum_dh1024_160_p OPENSSL_MANGLER_ASM(ossl_bignum_dh1024_160_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_dh1024_160_q
#  define ossl_bignum_dh1024_160_q OPENSSL_MANGLER(ossl_bignum_dh1024_160_q)
# endif
#else
# ifndef _ossl_bignum_dh1024_160_q
#  define _ossl_bignum_dh1024_160_q OPENSSL_MANGLER_ASM(ossl_bignum_dh1024_160_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_dh2048_224_g
#  define ossl_bignum_dh2048_224_g OPENSSL_MANGLER(ossl_bignum_dh2048_224_g)
# endif
#else
# ifndef _ossl_bignum_dh2048_224_g
#  define _ossl_bignum_dh2048_224_g OPENSSL_MANGLER_ASM(ossl_bignum_dh2048_224_g)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_dh2048_224_p
#  define ossl_bignum_dh2048_224_p OPENSSL_MANGLER(ossl_bignum_dh2048_224_p)
# endif
#else
# ifndef _ossl_bignum_dh2048_224_p
#  define _ossl_bignum_dh2048_224_p OPENSSL_MANGLER_ASM(ossl_bignum_dh2048_224_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_dh2048_224_q
#  define ossl_bignum_dh2048_224_q OPENSSL_MANGLER(ossl_bignum_dh2048_224_q)
# endif
#else
# ifndef _ossl_bignum_dh2048_224_q
#  define _ossl_bignum_dh2048_224_q OPENSSL_MANGLER_ASM(ossl_bignum_dh2048_224_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_dh2048_256_g
#  define ossl_bignum_dh2048_256_g OPENSSL_MANGLER(ossl_bignum_dh2048_256_g)
# endif
#else
# ifndef _ossl_bignum_dh2048_256_g
#  define _ossl_bignum_dh2048_256_g OPENSSL_MANGLER_ASM(ossl_bignum_dh2048_256_g)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_dh2048_256_p
#  define ossl_bignum_dh2048_256_p OPENSSL_MANGLER(ossl_bignum_dh2048_256_p)
# endif
#else
# ifndef _ossl_bignum_dh2048_256_p
#  define _ossl_bignum_dh2048_256_p OPENSSL_MANGLER_ASM(ossl_bignum_dh2048_256_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_dh2048_256_q
#  define ossl_bignum_dh2048_256_q OPENSSL_MANGLER(ossl_bignum_dh2048_256_q)
# endif
#else
# ifndef _ossl_bignum_dh2048_256_q
#  define _ossl_bignum_dh2048_256_q OPENSSL_MANGLER_ASM(ossl_bignum_dh2048_256_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_ffdhe2048_p
#  define ossl_bignum_ffdhe2048_p OPENSSL_MANGLER(ossl_bignum_ffdhe2048_p)
# endif
#else
# ifndef _ossl_bignum_ffdhe2048_p
#  define _ossl_bignum_ffdhe2048_p OPENSSL_MANGLER_ASM(ossl_bignum_ffdhe2048_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_ffdhe2048_q
#  define ossl_bignum_ffdhe2048_q OPENSSL_MANGLER(ossl_bignum_ffdhe2048_q)
# endif
#else
# ifndef _ossl_bignum_ffdhe2048_q
#  define _ossl_bignum_ffdhe2048_q OPENSSL_MANGLER_ASM(ossl_bignum_ffdhe2048_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_ffdhe3072_p
#  define ossl_bignum_ffdhe3072_p OPENSSL_MANGLER(ossl_bignum_ffdhe3072_p)
# endif
#else
# ifndef _ossl_bignum_ffdhe3072_p
#  define _ossl_bignum_ffdhe3072_p OPENSSL_MANGLER_ASM(ossl_bignum_ffdhe3072_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_ffdhe3072_q
#  define ossl_bignum_ffdhe3072_q OPENSSL_MANGLER(ossl_bignum_ffdhe3072_q)
# endif
#else
# ifndef _ossl_bignum_ffdhe3072_q
#  define _ossl_bignum_ffdhe3072_q OPENSSL_MANGLER_ASM(ossl_bignum_ffdhe3072_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_ffdhe4096_p
#  define ossl_bignum_ffdhe4096_p OPENSSL_MANGLER(ossl_bignum_ffdhe4096_p)
# endif
#else
# ifndef _ossl_bignum_ffdhe4096_p
#  define _ossl_bignum_ffdhe4096_p OPENSSL_MANGLER_ASM(ossl_bignum_ffdhe4096_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_ffdhe4096_q
#  define ossl_bignum_ffdhe4096_q OPENSSL_MANGLER(ossl_bignum_ffdhe4096_q)
# endif
#else
# ifndef _ossl_bignum_ffdhe4096_q
#  define _ossl_bignum_ffdhe4096_q OPENSSL_MANGLER_ASM(ossl_bignum_ffdhe4096_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_ffdhe6144_p
#  define ossl_bignum_ffdhe6144_p OPENSSL_MANGLER(ossl_bignum_ffdhe6144_p)
# endif
#else
# ifndef _ossl_bignum_ffdhe6144_p
#  define _ossl_bignum_ffdhe6144_p OPENSSL_MANGLER_ASM(ossl_bignum_ffdhe6144_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_ffdhe6144_q
#  define ossl_bignum_ffdhe6144_q OPENSSL_MANGLER(ossl_bignum_ffdhe6144_q)
# endif
#else
# ifndef _ossl_bignum_ffdhe6144_q
#  define _ossl_bignum_ffdhe6144_q OPENSSL_MANGLER_ASM(ossl_bignum_ffdhe6144_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_ffdhe8192_p
#  define ossl_bignum_ffdhe8192_p OPENSSL_MANGLER(ossl_bignum_ffdhe8192_p)
# endif
#else
# ifndef _ossl_bignum_ffdhe8192_p
#  define _ossl_bignum_ffdhe8192_p OPENSSL_MANGLER_ASM(ossl_bignum_ffdhe8192_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_ffdhe8192_q
#  define ossl_bignum_ffdhe8192_q OPENSSL_MANGLER(ossl_bignum_ffdhe8192_q)
# endif
#else
# ifndef _ossl_bignum_ffdhe8192_q
#  define _ossl_bignum_ffdhe8192_q OPENSSL_MANGLER_ASM(ossl_bignum_ffdhe8192_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_1536_p
#  define ossl_bignum_modp_1536_p OPENSSL_MANGLER(ossl_bignum_modp_1536_p)
# endif
#else
# ifndef _ossl_bignum_modp_1536_p
#  define _ossl_bignum_modp_1536_p OPENSSL_MANGLER_ASM(ossl_bignum_modp_1536_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_1536_q
#  define ossl_bignum_modp_1536_q OPENSSL_MANGLER(ossl_bignum_modp_1536_q)
# endif
#else
# ifndef _ossl_bignum_modp_1536_q
#  define _ossl_bignum_modp_1536_q OPENSSL_MANGLER_ASM(ossl_bignum_modp_1536_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_2048_p
#  define ossl_bignum_modp_2048_p OPENSSL_MANGLER(ossl_bignum_modp_2048_p)
# endif
#else
# ifndef _ossl_bignum_modp_2048_p
#  define _ossl_bignum_modp_2048_p OPENSSL_MANGLER_ASM(ossl_bignum_modp_2048_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_2048_q
#  define ossl_bignum_modp_2048_q OPENSSL_MANGLER(ossl_bignum_modp_2048_q)
# endif
#else
# ifndef _ossl_bignum_modp_2048_q
#  define _ossl_bignum_modp_2048_q OPENSSL_MANGLER_ASM(ossl_bignum_modp_2048_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_3072_p
#  define ossl_bignum_modp_3072_p OPENSSL_MANGLER(ossl_bignum_modp_3072_p)
# endif
#else
# ifndef _ossl_bignum_modp_3072_p
#  define _ossl_bignum_modp_3072_p OPENSSL_MANGLER_ASM(ossl_bignum_modp_3072_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_3072_q
#  define ossl_bignum_modp_3072_q OPENSSL_MANGLER(ossl_bignum_modp_3072_q)
# endif
#else
# ifndef _ossl_bignum_modp_3072_q
#  define _ossl_bignum_modp_3072_q OPENSSL_MANGLER_ASM(ossl_bignum_modp_3072_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_4096_p
#  define ossl_bignum_modp_4096_p OPENSSL_MANGLER(ossl_bignum_modp_4096_p)
# endif
#else
# ifndef _ossl_bignum_modp_4096_p
#  define _ossl_bignum_modp_4096_p OPENSSL_MANGLER_ASM(ossl_bignum_modp_4096_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_4096_q
#  define ossl_bignum_modp_4096_q OPENSSL_MANGLER(ossl_bignum_modp_4096_q)
# endif
#else
# ifndef _ossl_bignum_modp_4096_q
#  define _ossl_bignum_modp_4096_q OPENSSL_MANGLER_ASM(ossl_bignum_modp_4096_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_6144_p
#  define ossl_bignum_modp_6144_p OPENSSL_MANGLER(ossl_bignum_modp_6144_p)
# endif
#else
# ifndef _ossl_bignum_modp_6144_p
#  define _ossl_bignum_modp_6144_p OPENSSL_MANGLER_ASM(ossl_bignum_modp_6144_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_6144_q
#  define ossl_bignum_modp_6144_q OPENSSL_MANGLER(ossl_bignum_modp_6144_q)
# endif
#else
# ifndef _ossl_bignum_modp_6144_q
#  define _ossl_bignum_modp_6144_q OPENSSL_MANGLER_ASM(ossl_bignum_modp_6144_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_8192_p
#  define ossl_bignum_modp_8192_p OPENSSL_MANGLER(ossl_bignum_modp_8192_p)
# endif
#else
# ifndef _ossl_bignum_modp_8192_p
#  define _ossl_bignum_modp_8192_p OPENSSL_MANGLER_ASM(ossl_bignum_modp_8192_p)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bignum_modp_8192_q
#  define ossl_bignum_modp_8192_q OPENSSL_MANGLER(ossl_bignum_modp_8192_q)
# endif
#else
# ifndef _ossl_bignum_modp_8192_q
#  define _ossl_bignum_modp_8192_q OPENSSL_MANGLER_ASM(ossl_bignum_modp_8192_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bio_init_core
#  define ossl_bio_init_core OPENSSL_MANGLER(ossl_bio_init_core)
# endif
#else
# ifndef _ossl_bio_init_core
#  define _ossl_bio_init_core OPENSSL_MANGLER_ASM(ossl_bio_init_core)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bio_new_from_core_bio
#  define ossl_bio_new_from_core_bio OPENSSL_MANGLER(ossl_bio_new_from_core_bio)
# endif
#else
# ifndef _ossl_bio_new_from_core_bio
#  define _ossl_bio_new_from_core_bio OPENSSL_MANGLER_ASM(ossl_bio_new_from_core_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bio_prov_init_bio_method
#  define ossl_bio_prov_init_bio_method OPENSSL_MANGLER(ossl_bio_prov_init_bio_method)
# endif
#else
# ifndef _ossl_bio_prov_init_bio_method
#  define _ossl_bio_prov_init_bio_method OPENSSL_MANGLER_ASM(ossl_bio_prov_init_bio_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2b512_functions
#  define ossl_blake2b512_functions OPENSSL_MANGLER(ossl_blake2b512_functions)
# endif
#else
# ifndef _ossl_blake2b512_functions
#  define _ossl_blake2b512_functions OPENSSL_MANGLER_ASM(ossl_blake2b512_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2b512_init
#  define ossl_blake2b512_init OPENSSL_MANGLER(ossl_blake2b512_init)
# endif
#else
# ifndef _ossl_blake2b512_init
#  define _ossl_blake2b512_init OPENSSL_MANGLER_ASM(ossl_blake2b512_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2b_final
#  define ossl_blake2b_final OPENSSL_MANGLER(ossl_blake2b_final)
# endif
#else
# ifndef _ossl_blake2b_final
#  define _ossl_blake2b_final OPENSSL_MANGLER_ASM(ossl_blake2b_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2b_init
#  define ossl_blake2b_init OPENSSL_MANGLER(ossl_blake2b_init)
# endif
#else
# ifndef _ossl_blake2b_init
#  define _ossl_blake2b_init OPENSSL_MANGLER_ASM(ossl_blake2b_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2b_init_key
#  define ossl_blake2b_init_key OPENSSL_MANGLER(ossl_blake2b_init_key)
# endif
#else
# ifndef _ossl_blake2b_init_key
#  define _ossl_blake2b_init_key OPENSSL_MANGLER_ASM(ossl_blake2b_init_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2b_param_init
#  define ossl_blake2b_param_init OPENSSL_MANGLER(ossl_blake2b_param_init)
# endif
#else
# ifndef _ossl_blake2b_param_init
#  define _ossl_blake2b_param_init OPENSSL_MANGLER_ASM(ossl_blake2b_param_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2b_param_set_digest_length
#  define ossl_blake2b_param_set_digest_length OPENSSL_MANGLER(ossl_blake2b_param_set_digest_length)
# endif
#else
# ifndef _ossl_blake2b_param_set_digest_length
#  define _ossl_blake2b_param_set_digest_length OPENSSL_MANGLER_ASM(ossl_blake2b_param_set_digest_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2b_param_set_key_length
#  define ossl_blake2b_param_set_key_length OPENSSL_MANGLER(ossl_blake2b_param_set_key_length)
# endif
#else
# ifndef _ossl_blake2b_param_set_key_length
#  define _ossl_blake2b_param_set_key_length OPENSSL_MANGLER_ASM(ossl_blake2b_param_set_key_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2b_param_set_personal
#  define ossl_blake2b_param_set_personal OPENSSL_MANGLER(ossl_blake2b_param_set_personal)
# endif
#else
# ifndef _ossl_blake2b_param_set_personal
#  define _ossl_blake2b_param_set_personal OPENSSL_MANGLER_ASM(ossl_blake2b_param_set_personal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2b_param_set_salt
#  define ossl_blake2b_param_set_salt OPENSSL_MANGLER(ossl_blake2b_param_set_salt)
# endif
#else
# ifndef _ossl_blake2b_param_set_salt
#  define _ossl_blake2b_param_set_salt OPENSSL_MANGLER_ASM(ossl_blake2b_param_set_salt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2b_update
#  define ossl_blake2b_update OPENSSL_MANGLER(ossl_blake2b_update)
# endif
#else
# ifndef _ossl_blake2b_update
#  define _ossl_blake2b_update OPENSSL_MANGLER_ASM(ossl_blake2b_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2bmac_functions
#  define ossl_blake2bmac_functions OPENSSL_MANGLER(ossl_blake2bmac_functions)
# endif
#else
# ifndef _ossl_blake2bmac_functions
#  define _ossl_blake2bmac_functions OPENSSL_MANGLER_ASM(ossl_blake2bmac_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2s256_functions
#  define ossl_blake2s256_functions OPENSSL_MANGLER(ossl_blake2s256_functions)
# endif
#else
# ifndef _ossl_blake2s256_functions
#  define _ossl_blake2s256_functions OPENSSL_MANGLER_ASM(ossl_blake2s256_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2s256_init
#  define ossl_blake2s256_init OPENSSL_MANGLER(ossl_blake2s256_init)
# endif
#else
# ifndef _ossl_blake2s256_init
#  define _ossl_blake2s256_init OPENSSL_MANGLER_ASM(ossl_blake2s256_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2s_final
#  define ossl_blake2s_final OPENSSL_MANGLER(ossl_blake2s_final)
# endif
#else
# ifndef _ossl_blake2s_final
#  define _ossl_blake2s_final OPENSSL_MANGLER_ASM(ossl_blake2s_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2s_init
#  define ossl_blake2s_init OPENSSL_MANGLER(ossl_blake2s_init)
# endif
#else
# ifndef _ossl_blake2s_init
#  define _ossl_blake2s_init OPENSSL_MANGLER_ASM(ossl_blake2s_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2s_init_key
#  define ossl_blake2s_init_key OPENSSL_MANGLER(ossl_blake2s_init_key)
# endif
#else
# ifndef _ossl_blake2s_init_key
#  define _ossl_blake2s_init_key OPENSSL_MANGLER_ASM(ossl_blake2s_init_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2s_param_init
#  define ossl_blake2s_param_init OPENSSL_MANGLER(ossl_blake2s_param_init)
# endif
#else
# ifndef _ossl_blake2s_param_init
#  define _ossl_blake2s_param_init OPENSSL_MANGLER_ASM(ossl_blake2s_param_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2s_param_set_digest_length
#  define ossl_blake2s_param_set_digest_length OPENSSL_MANGLER(ossl_blake2s_param_set_digest_length)
# endif
#else
# ifndef _ossl_blake2s_param_set_digest_length
#  define _ossl_blake2s_param_set_digest_length OPENSSL_MANGLER_ASM(ossl_blake2s_param_set_digest_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2s_param_set_key_length
#  define ossl_blake2s_param_set_key_length OPENSSL_MANGLER(ossl_blake2s_param_set_key_length)
# endif
#else
# ifndef _ossl_blake2s_param_set_key_length
#  define _ossl_blake2s_param_set_key_length OPENSSL_MANGLER_ASM(ossl_blake2s_param_set_key_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2s_param_set_personal
#  define ossl_blake2s_param_set_personal OPENSSL_MANGLER(ossl_blake2s_param_set_personal)
# endif
#else
# ifndef _ossl_blake2s_param_set_personal
#  define _ossl_blake2s_param_set_personal OPENSSL_MANGLER_ASM(ossl_blake2s_param_set_personal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2s_param_set_salt
#  define ossl_blake2s_param_set_salt OPENSSL_MANGLER(ossl_blake2s_param_set_salt)
# endif
#else
# ifndef _ossl_blake2s_param_set_salt
#  define _ossl_blake2s_param_set_salt OPENSSL_MANGLER_ASM(ossl_blake2s_param_set_salt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2s_update
#  define ossl_blake2s_update OPENSSL_MANGLER(ossl_blake2s_update)
# endif
#else
# ifndef _ossl_blake2s_update
#  define _ossl_blake2s_update OPENSSL_MANGLER_ASM(ossl_blake2s_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blake2smac_functions
#  define ossl_blake2smac_functions OPENSSL_MANGLER(ossl_blake2smac_functions)
# endif
#else
# ifndef _ossl_blake2smac_functions
#  define _ossl_blake2smac_functions OPENSSL_MANGLER_ASM(ossl_blake2smac_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blob_length
#  define ossl_blob_length OPENSSL_MANGLER(ossl_blob_length)
# endif
#else
# ifndef _ossl_blob_length
#  define _ossl_blob_length OPENSSL_MANGLER_ASM(ossl_blob_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blowfish128cbc_functions
#  define ossl_blowfish128cbc_functions OPENSSL_MANGLER(ossl_blowfish128cbc_functions)
# endif
#else
# ifndef _ossl_blowfish128cbc_functions
#  define _ossl_blowfish128cbc_functions OPENSSL_MANGLER_ASM(ossl_blowfish128cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blowfish128cfb64_functions
#  define ossl_blowfish128cfb64_functions OPENSSL_MANGLER(ossl_blowfish128cfb64_functions)
# endif
#else
# ifndef _ossl_blowfish128cfb64_functions
#  define _ossl_blowfish128cfb64_functions OPENSSL_MANGLER_ASM(ossl_blowfish128cfb64_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blowfish128ecb_functions
#  define ossl_blowfish128ecb_functions OPENSSL_MANGLER(ossl_blowfish128ecb_functions)
# endif
#else
# ifndef _ossl_blowfish128ecb_functions
#  define _ossl_blowfish128ecb_functions OPENSSL_MANGLER_ASM(ossl_blowfish128ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_blowfish128ofb64_functions
#  define ossl_blowfish128ofb64_functions OPENSSL_MANGLER(ossl_blowfish128ofb64_functions)
# endif
#else
# ifndef _ossl_blowfish128ofb64_functions
#  define _ossl_blowfish128ofb64_functions OPENSSL_MANGLER_ASM(ossl_blowfish128ofb64_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_check_prime
#  define ossl_bn_check_prime OPENSSL_MANGLER(ossl_bn_check_prime)
# endif
#else
# ifndef _ossl_bn_check_prime
#  define _ossl_bn_check_prime OPENSSL_MANGLER_ASM(ossl_bn_check_prime)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_generator_19
#  define ossl_bn_generator_19 OPENSSL_MANGLER(ossl_bn_generator_19)
# endif
#else
# ifndef _ossl_bn_generator_19
#  define _ossl_bn_generator_19 OPENSSL_MANGLER_ASM(ossl_bn_generator_19)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_generator_2
#  define ossl_bn_generator_2 OPENSSL_MANGLER(ossl_bn_generator_2)
# endif
#else
# ifndef _ossl_bn_generator_2
#  define _ossl_bn_generator_2 OPENSSL_MANGLER_ASM(ossl_bn_generator_2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_generator_5
#  define ossl_bn_generator_5 OPENSSL_MANGLER(ossl_bn_generator_5)
# endif
#else
# ifndef _ossl_bn_generator_5
#  define _ossl_bn_generator_5 OPENSSL_MANGLER_ASM(ossl_bn_generator_5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_get0_small_factors
#  define ossl_bn_get0_small_factors OPENSSL_MANGLER(ossl_bn_get0_small_factors)
# endif
#else
# ifndef _ossl_bn_get0_small_factors
#  define _ossl_bn_get0_small_factors OPENSSL_MANGLER_ASM(ossl_bn_get0_small_factors)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_get_libctx
#  define ossl_bn_get_libctx OPENSSL_MANGLER(ossl_bn_get_libctx)
# endif
#else
# ifndef _ossl_bn_get_libctx
#  define _ossl_bn_get_libctx OPENSSL_MANGLER_ASM(ossl_bn_get_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_group_1024
#  define ossl_bn_group_1024 OPENSSL_MANGLER(ossl_bn_group_1024)
# endif
#else
# ifndef _ossl_bn_group_1024
#  define _ossl_bn_group_1024 OPENSSL_MANGLER_ASM(ossl_bn_group_1024)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_group_1536
#  define ossl_bn_group_1536 OPENSSL_MANGLER(ossl_bn_group_1536)
# endif
#else
# ifndef _ossl_bn_group_1536
#  define _ossl_bn_group_1536 OPENSSL_MANGLER_ASM(ossl_bn_group_1536)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_group_2048
#  define ossl_bn_group_2048 OPENSSL_MANGLER(ossl_bn_group_2048)
# endif
#else
# ifndef _ossl_bn_group_2048
#  define _ossl_bn_group_2048 OPENSSL_MANGLER_ASM(ossl_bn_group_2048)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_group_3072
#  define ossl_bn_group_3072 OPENSSL_MANGLER(ossl_bn_group_3072)
# endif
#else
# ifndef _ossl_bn_group_3072
#  define _ossl_bn_group_3072 OPENSSL_MANGLER_ASM(ossl_bn_group_3072)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_group_4096
#  define ossl_bn_group_4096 OPENSSL_MANGLER(ossl_bn_group_4096)
# endif
#else
# ifndef _ossl_bn_group_4096
#  define _ossl_bn_group_4096 OPENSSL_MANGLER_ASM(ossl_bn_group_4096)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_group_6144
#  define ossl_bn_group_6144 OPENSSL_MANGLER(ossl_bn_group_6144)
# endif
#else
# ifndef _ossl_bn_group_6144
#  define _ossl_bn_group_6144 OPENSSL_MANGLER_ASM(ossl_bn_group_6144)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_group_8192
#  define ossl_bn_group_8192 OPENSSL_MANGLER(ossl_bn_group_8192)
# endif
#else
# ifndef _ossl_bn_group_8192
#  define _ossl_bn_group_8192 OPENSSL_MANGLER_ASM(ossl_bn_group_8192)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_inv_sqrt_2
#  define ossl_bn_inv_sqrt_2 OPENSSL_MANGLER(ossl_bn_inv_sqrt_2)
# endif
#else
# ifndef _ossl_bn_inv_sqrt_2
#  define _ossl_bn_inv_sqrt_2 OPENSSL_MANGLER_ASM(ossl_bn_inv_sqrt_2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_miller_rabin_is_prime
#  define ossl_bn_miller_rabin_is_prime OPENSSL_MANGLER(ossl_bn_miller_rabin_is_prime)
# endif
#else
# ifndef _ossl_bn_miller_rabin_is_prime
#  define _ossl_bn_miller_rabin_is_prime OPENSSL_MANGLER_ASM(ossl_bn_miller_rabin_is_prime)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_rsa_fips186_4_derive_prime
#  define ossl_bn_rsa_fips186_4_derive_prime OPENSSL_MANGLER(ossl_bn_rsa_fips186_4_derive_prime)
# endif
#else
# ifndef _ossl_bn_rsa_fips186_4_derive_prime
#  define _ossl_bn_rsa_fips186_4_derive_prime OPENSSL_MANGLER_ASM(ossl_bn_rsa_fips186_4_derive_prime)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bn_rsa_fips186_4_gen_prob_primes
#  define ossl_bn_rsa_fips186_4_gen_prob_primes OPENSSL_MANGLER(ossl_bn_rsa_fips186_4_gen_prob_primes)
# endif
#else
# ifndef _ossl_bn_rsa_fips186_4_gen_prob_primes
#  define _ossl_bn_rsa_fips186_4_gen_prob_primes OPENSSL_MANGLER_ASM(ossl_bn_rsa_fips186_4_gen_prob_primes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bsaes_cbc_encrypt
#  define ossl_bsaes_cbc_encrypt OPENSSL_MANGLER(ossl_bsaes_cbc_encrypt)
# endif
#else
# ifndef _ossl_bsaes_cbc_encrypt
#  define _ossl_bsaes_cbc_encrypt OPENSSL_MANGLER_ASM(ossl_bsaes_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bsaes_ctr32_encrypt_blocks
#  define ossl_bsaes_ctr32_encrypt_blocks OPENSSL_MANGLER(ossl_bsaes_ctr32_encrypt_blocks)
# endif
#else
# ifndef _ossl_bsaes_ctr32_encrypt_blocks
#  define _ossl_bsaes_ctr32_encrypt_blocks OPENSSL_MANGLER_ASM(ossl_bsaes_ctr32_encrypt_blocks)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bsaes_xts_decrypt
#  define ossl_bsaes_xts_decrypt OPENSSL_MANGLER(ossl_bsaes_xts_decrypt)
# endif
#else
# ifndef _ossl_bsaes_xts_decrypt
#  define _ossl_bsaes_xts_decrypt OPENSSL_MANGLER_ASM(ossl_bsaes_xts_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bsaes_xts_encrypt
#  define ossl_bsaes_xts_encrypt OPENSSL_MANGLER(ossl_bsaes_xts_encrypt)
# endif
#else
# ifndef _ossl_bsaes_xts_encrypt
#  define _ossl_bsaes_xts_encrypt OPENSSL_MANGLER_ASM(ossl_bsaes_xts_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_bsearch
#  define ossl_bsearch OPENSSL_MANGLER(ossl_bsearch)
# endif
#else
# ifndef _ossl_bsearch
#  define _ossl_bsearch OPENSSL_MANGLER_ASM(ossl_bsearch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_buf2hexstr_sep
#  define ossl_buf2hexstr_sep OPENSSL_MANGLER(ossl_buf2hexstr_sep)
# endif
#else
# ifndef _ossl_buf2hexstr_sep
#  define _ossl_buf2hexstr_sep OPENSSL_MANGLER_ASM(ossl_buf2hexstr_sep)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_c2i_ASN1_BIT_STRING
#  define ossl_c2i_ASN1_BIT_STRING OPENSSL_MANGLER(ossl_c2i_ASN1_BIT_STRING)
# endif
#else
# ifndef _ossl_c2i_ASN1_BIT_STRING
#  define _ossl_c2i_ASN1_BIT_STRING OPENSSL_MANGLER_ASM(ossl_c2i_ASN1_BIT_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_c2i_ASN1_INTEGER
#  define ossl_c2i_ASN1_INTEGER OPENSSL_MANGLER(ossl_c2i_ASN1_INTEGER)
# endif
#else
# ifndef _ossl_c2i_ASN1_INTEGER
#  define _ossl_c2i_ASN1_INTEGER OPENSSL_MANGLER_ASM(ossl_c2i_ASN1_INTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_c2i_ASN1_OBJECT
#  define ossl_c2i_ASN1_OBJECT OPENSSL_MANGLER(ossl_c2i_ASN1_OBJECT)
# endif
#else
# ifndef _ossl_c2i_ASN1_OBJECT
#  define _ossl_c2i_ASN1_OBJECT OPENSSL_MANGLER_ASM(ossl_c2i_ASN1_OBJECT)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_c2i_uint64_int
#  define ossl_c2i_uint64_int OPENSSL_MANGLER(ossl_c2i_uint64_int)
# endif
#else
# ifndef _ossl_c2i_uint64_int
#  define _ossl_c2i_uint64_int OPENSSL_MANGLER_ASM(ossl_c2i_uint64_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_c448_ed448_convert_private_key_to_x448
#  define ossl_c448_ed448_convert_private_key_to_x448 OPENSSL_MANGLER(ossl_c448_ed448_convert_private_key_to_x448)
# endif
#else
# ifndef _ossl_c448_ed448_convert_private_key_to_x448
#  define _ossl_c448_ed448_convert_private_key_to_x448 OPENSSL_MANGLER_ASM(ossl_c448_ed448_convert_private_key_to_x448)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_c448_ed448_derive_public_key
#  define ossl_c448_ed448_derive_public_key OPENSSL_MANGLER(ossl_c448_ed448_derive_public_key)
# endif
#else
# ifndef _ossl_c448_ed448_derive_public_key
#  define _ossl_c448_ed448_derive_public_key OPENSSL_MANGLER_ASM(ossl_c448_ed448_derive_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_c448_ed448_sign
#  define ossl_c448_ed448_sign OPENSSL_MANGLER(ossl_c448_ed448_sign)
# endif
#else
# ifndef _ossl_c448_ed448_sign
#  define _ossl_c448_ed448_sign OPENSSL_MANGLER_ASM(ossl_c448_ed448_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_c448_ed448_sign_prehash
#  define ossl_c448_ed448_sign_prehash OPENSSL_MANGLER(ossl_c448_ed448_sign_prehash)
# endif
#else
# ifndef _ossl_c448_ed448_sign_prehash
#  define _ossl_c448_ed448_sign_prehash OPENSSL_MANGLER_ASM(ossl_c448_ed448_sign_prehash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_c448_ed448_verify
#  define ossl_c448_ed448_verify OPENSSL_MANGLER(ossl_c448_ed448_verify)
# endif
#else
# ifndef _ossl_c448_ed448_verify
#  define _ossl_c448_ed448_verify OPENSSL_MANGLER_ASM(ossl_c448_ed448_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_c448_ed448_verify_prehash
#  define ossl_c448_ed448_verify_prehash OPENSSL_MANGLER(ossl_c448_ed448_verify_prehash)
# endif
#else
# ifndef _ossl_c448_ed448_verify_prehash
#  define _ossl_c448_ed448_verify_prehash OPENSSL_MANGLER_ASM(ossl_c448_ed448_verify_prehash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia128cbc_cts_functions
#  define ossl_camellia128cbc_cts_functions OPENSSL_MANGLER(ossl_camellia128cbc_cts_functions)
# endif
#else
# ifndef _ossl_camellia128cbc_cts_functions
#  define _ossl_camellia128cbc_cts_functions OPENSSL_MANGLER_ASM(ossl_camellia128cbc_cts_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia128cbc_functions
#  define ossl_camellia128cbc_functions OPENSSL_MANGLER(ossl_camellia128cbc_functions)
# endif
#else
# ifndef _ossl_camellia128cbc_functions
#  define _ossl_camellia128cbc_functions OPENSSL_MANGLER_ASM(ossl_camellia128cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia128cfb1_functions
#  define ossl_camellia128cfb1_functions OPENSSL_MANGLER(ossl_camellia128cfb1_functions)
# endif
#else
# ifndef _ossl_camellia128cfb1_functions
#  define _ossl_camellia128cfb1_functions OPENSSL_MANGLER_ASM(ossl_camellia128cfb1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia128cfb8_functions
#  define ossl_camellia128cfb8_functions OPENSSL_MANGLER(ossl_camellia128cfb8_functions)
# endif
#else
# ifndef _ossl_camellia128cfb8_functions
#  define _ossl_camellia128cfb8_functions OPENSSL_MANGLER_ASM(ossl_camellia128cfb8_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia128cfb_functions
#  define ossl_camellia128cfb_functions OPENSSL_MANGLER(ossl_camellia128cfb_functions)
# endif
#else
# ifndef _ossl_camellia128cfb_functions
#  define _ossl_camellia128cfb_functions OPENSSL_MANGLER_ASM(ossl_camellia128cfb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia128ctr_functions
#  define ossl_camellia128ctr_functions OPENSSL_MANGLER(ossl_camellia128ctr_functions)
# endif
#else
# ifndef _ossl_camellia128ctr_functions
#  define _ossl_camellia128ctr_functions OPENSSL_MANGLER_ASM(ossl_camellia128ctr_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia128ecb_functions
#  define ossl_camellia128ecb_functions OPENSSL_MANGLER(ossl_camellia128ecb_functions)
# endif
#else
# ifndef _ossl_camellia128ecb_functions
#  define _ossl_camellia128ecb_functions OPENSSL_MANGLER_ASM(ossl_camellia128ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia128ofb_functions
#  define ossl_camellia128ofb_functions OPENSSL_MANGLER(ossl_camellia128ofb_functions)
# endif
#else
# ifndef _ossl_camellia128ofb_functions
#  define _ossl_camellia128ofb_functions OPENSSL_MANGLER_ASM(ossl_camellia128ofb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia192cbc_cts_functions
#  define ossl_camellia192cbc_cts_functions OPENSSL_MANGLER(ossl_camellia192cbc_cts_functions)
# endif
#else
# ifndef _ossl_camellia192cbc_cts_functions
#  define _ossl_camellia192cbc_cts_functions OPENSSL_MANGLER_ASM(ossl_camellia192cbc_cts_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia192cbc_functions
#  define ossl_camellia192cbc_functions OPENSSL_MANGLER(ossl_camellia192cbc_functions)
# endif
#else
# ifndef _ossl_camellia192cbc_functions
#  define _ossl_camellia192cbc_functions OPENSSL_MANGLER_ASM(ossl_camellia192cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia192cfb1_functions
#  define ossl_camellia192cfb1_functions OPENSSL_MANGLER(ossl_camellia192cfb1_functions)
# endif
#else
# ifndef _ossl_camellia192cfb1_functions
#  define _ossl_camellia192cfb1_functions OPENSSL_MANGLER_ASM(ossl_camellia192cfb1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia192cfb8_functions
#  define ossl_camellia192cfb8_functions OPENSSL_MANGLER(ossl_camellia192cfb8_functions)
# endif
#else
# ifndef _ossl_camellia192cfb8_functions
#  define _ossl_camellia192cfb8_functions OPENSSL_MANGLER_ASM(ossl_camellia192cfb8_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia192cfb_functions
#  define ossl_camellia192cfb_functions OPENSSL_MANGLER(ossl_camellia192cfb_functions)
# endif
#else
# ifndef _ossl_camellia192cfb_functions
#  define _ossl_camellia192cfb_functions OPENSSL_MANGLER_ASM(ossl_camellia192cfb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia192ctr_functions
#  define ossl_camellia192ctr_functions OPENSSL_MANGLER(ossl_camellia192ctr_functions)
# endif
#else
# ifndef _ossl_camellia192ctr_functions
#  define _ossl_camellia192ctr_functions OPENSSL_MANGLER_ASM(ossl_camellia192ctr_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia192ecb_functions
#  define ossl_camellia192ecb_functions OPENSSL_MANGLER(ossl_camellia192ecb_functions)
# endif
#else
# ifndef _ossl_camellia192ecb_functions
#  define _ossl_camellia192ecb_functions OPENSSL_MANGLER_ASM(ossl_camellia192ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia192ofb_functions
#  define ossl_camellia192ofb_functions OPENSSL_MANGLER(ossl_camellia192ofb_functions)
# endif
#else
# ifndef _ossl_camellia192ofb_functions
#  define _ossl_camellia192ofb_functions OPENSSL_MANGLER_ASM(ossl_camellia192ofb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia256cbc_cts_functions
#  define ossl_camellia256cbc_cts_functions OPENSSL_MANGLER(ossl_camellia256cbc_cts_functions)
# endif
#else
# ifndef _ossl_camellia256cbc_cts_functions
#  define _ossl_camellia256cbc_cts_functions OPENSSL_MANGLER_ASM(ossl_camellia256cbc_cts_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia256cbc_functions
#  define ossl_camellia256cbc_functions OPENSSL_MANGLER(ossl_camellia256cbc_functions)
# endif
#else
# ifndef _ossl_camellia256cbc_functions
#  define _ossl_camellia256cbc_functions OPENSSL_MANGLER_ASM(ossl_camellia256cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia256cfb1_functions
#  define ossl_camellia256cfb1_functions OPENSSL_MANGLER(ossl_camellia256cfb1_functions)
# endif
#else
# ifndef _ossl_camellia256cfb1_functions
#  define _ossl_camellia256cfb1_functions OPENSSL_MANGLER_ASM(ossl_camellia256cfb1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia256cfb8_functions
#  define ossl_camellia256cfb8_functions OPENSSL_MANGLER(ossl_camellia256cfb8_functions)
# endif
#else
# ifndef _ossl_camellia256cfb8_functions
#  define _ossl_camellia256cfb8_functions OPENSSL_MANGLER_ASM(ossl_camellia256cfb8_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia256cfb_functions
#  define ossl_camellia256cfb_functions OPENSSL_MANGLER(ossl_camellia256cfb_functions)
# endif
#else
# ifndef _ossl_camellia256cfb_functions
#  define _ossl_camellia256cfb_functions OPENSSL_MANGLER_ASM(ossl_camellia256cfb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia256ctr_functions
#  define ossl_camellia256ctr_functions OPENSSL_MANGLER(ossl_camellia256ctr_functions)
# endif
#else
# ifndef _ossl_camellia256ctr_functions
#  define _ossl_camellia256ctr_functions OPENSSL_MANGLER_ASM(ossl_camellia256ctr_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia256ecb_functions
#  define ossl_camellia256ecb_functions OPENSSL_MANGLER(ossl_camellia256ecb_functions)
# endif
#else
# ifndef _ossl_camellia256ecb_functions
#  define _ossl_camellia256ecb_functions OPENSSL_MANGLER_ASM(ossl_camellia256ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_camellia256ofb_functions
#  define ossl_camellia256ofb_functions OPENSSL_MANGLER(ossl_camellia256ofb_functions)
# endif
#else
# ifndef _ossl_camellia256ofb_functions
#  define _ossl_camellia256ofb_functions OPENSSL_MANGLER_ASM(ossl_camellia256ofb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cast5128cbc_functions
#  define ossl_cast5128cbc_functions OPENSSL_MANGLER(ossl_cast5128cbc_functions)
# endif
#else
# ifndef _ossl_cast5128cbc_functions
#  define _ossl_cast5128cbc_functions OPENSSL_MANGLER_ASM(ossl_cast5128cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cast5128cfb64_functions
#  define ossl_cast5128cfb64_functions OPENSSL_MANGLER(ossl_cast5128cfb64_functions)
# endif
#else
# ifndef _ossl_cast5128cfb64_functions
#  define _ossl_cast5128cfb64_functions OPENSSL_MANGLER_ASM(ossl_cast5128cfb64_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cast5128ecb_functions
#  define ossl_cast5128ecb_functions OPENSSL_MANGLER(ossl_cast5128ecb_functions)
# endif
#else
# ifndef _ossl_cast5128ecb_functions
#  define _ossl_cast5128ecb_functions OPENSSL_MANGLER_ASM(ossl_cast5128ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cast5128ofb64_functions
#  define ossl_cast5128ofb64_functions OPENSSL_MANGLER(ossl_cast5128ofb64_functions)
# endif
#else
# ifndef _ossl_cast5128ofb64_functions
#  define _ossl_cast5128ofb64_functions OPENSSL_MANGLER_ASM(ossl_cast5128ofb64_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_cipher
#  define ossl_ccm_cipher OPENSSL_MANGLER(ossl_ccm_cipher)
# endif
#else
# ifndef _ossl_ccm_cipher
#  define _ossl_ccm_cipher OPENSSL_MANGLER_ASM(ossl_ccm_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_dinit
#  define ossl_ccm_dinit OPENSSL_MANGLER(ossl_ccm_dinit)
# endif
#else
# ifndef _ossl_ccm_dinit
#  define _ossl_ccm_dinit OPENSSL_MANGLER_ASM(ossl_ccm_dinit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_einit
#  define ossl_ccm_einit OPENSSL_MANGLER(ossl_ccm_einit)
# endif
#else
# ifndef _ossl_ccm_einit
#  define _ossl_ccm_einit OPENSSL_MANGLER_ASM(ossl_ccm_einit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_generic_auth_decrypt
#  define ossl_ccm_generic_auth_decrypt OPENSSL_MANGLER(ossl_ccm_generic_auth_decrypt)
# endif
#else
# ifndef _ossl_ccm_generic_auth_decrypt
#  define _ossl_ccm_generic_auth_decrypt OPENSSL_MANGLER_ASM(ossl_ccm_generic_auth_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_generic_auth_encrypt
#  define ossl_ccm_generic_auth_encrypt OPENSSL_MANGLER(ossl_ccm_generic_auth_encrypt)
# endif
#else
# ifndef _ossl_ccm_generic_auth_encrypt
#  define _ossl_ccm_generic_auth_encrypt OPENSSL_MANGLER_ASM(ossl_ccm_generic_auth_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_generic_gettag
#  define ossl_ccm_generic_gettag OPENSSL_MANGLER(ossl_ccm_generic_gettag)
# endif
#else
# ifndef _ossl_ccm_generic_gettag
#  define _ossl_ccm_generic_gettag OPENSSL_MANGLER_ASM(ossl_ccm_generic_gettag)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_generic_setaad
#  define ossl_ccm_generic_setaad OPENSSL_MANGLER(ossl_ccm_generic_setaad)
# endif
#else
# ifndef _ossl_ccm_generic_setaad
#  define _ossl_ccm_generic_setaad OPENSSL_MANGLER_ASM(ossl_ccm_generic_setaad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_generic_setiv
#  define ossl_ccm_generic_setiv OPENSSL_MANGLER(ossl_ccm_generic_setiv)
# endif
#else
# ifndef _ossl_ccm_generic_setiv
#  define _ossl_ccm_generic_setiv OPENSSL_MANGLER_ASM(ossl_ccm_generic_setiv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_get_ctx_params
#  define ossl_ccm_get_ctx_params OPENSSL_MANGLER(ossl_ccm_get_ctx_params)
# endif
#else
# ifndef _ossl_ccm_get_ctx_params
#  define _ossl_ccm_get_ctx_params OPENSSL_MANGLER_ASM(ossl_ccm_get_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_initctx
#  define ossl_ccm_initctx OPENSSL_MANGLER(ossl_ccm_initctx)
# endif
#else
# ifndef _ossl_ccm_initctx
#  define _ossl_ccm_initctx OPENSSL_MANGLER_ASM(ossl_ccm_initctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_set_ctx_params
#  define ossl_ccm_set_ctx_params OPENSSL_MANGLER(ossl_ccm_set_ctx_params)
# endif
#else
# ifndef _ossl_ccm_set_ctx_params
#  define _ossl_ccm_set_ctx_params OPENSSL_MANGLER_ASM(ossl_ccm_set_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_stream_final
#  define ossl_ccm_stream_final OPENSSL_MANGLER(ossl_ccm_stream_final)
# endif
#else
# ifndef _ossl_ccm_stream_final
#  define _ossl_ccm_stream_final OPENSSL_MANGLER_ASM(ossl_ccm_stream_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ccm_stream_update
#  define ossl_ccm_stream_update OPENSSL_MANGLER(ossl_ccm_stream_update)
# endif
#else
# ifndef _ossl_ccm_stream_update
#  define _ossl_ccm_stream_update OPENSSL_MANGLER_ASM(ossl_ccm_stream_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_chacha20_dinit
#  define ossl_chacha20_dinit OPENSSL_MANGLER(ossl_chacha20_dinit)
# endif
#else
# ifndef _ossl_chacha20_dinit
#  define _ossl_chacha20_dinit OPENSSL_MANGLER_ASM(ossl_chacha20_dinit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_chacha20_einit
#  define ossl_chacha20_einit OPENSSL_MANGLER(ossl_chacha20_einit)
# endif
#else
# ifndef _ossl_chacha20_einit
#  define _ossl_chacha20_einit OPENSSL_MANGLER_ASM(ossl_chacha20_einit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_chacha20_functions
#  define ossl_chacha20_functions OPENSSL_MANGLER(ossl_chacha20_functions)
# endif
#else
# ifndef _ossl_chacha20_functions
#  define _ossl_chacha20_functions OPENSSL_MANGLER_ASM(ossl_chacha20_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_chacha20_initctx
#  define ossl_chacha20_initctx OPENSSL_MANGLER(ossl_chacha20_initctx)
# endif
#else
# ifndef _ossl_chacha20_initctx
#  define _ossl_chacha20_initctx OPENSSL_MANGLER_ASM(ossl_chacha20_initctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_chacha20_ossl_poly1305_functions
#  define ossl_chacha20_ossl_poly1305_functions OPENSSL_MANGLER(ossl_chacha20_ossl_poly1305_functions)
# endif
#else
# ifndef _ossl_chacha20_ossl_poly1305_functions
#  define _ossl_chacha20_ossl_poly1305_functions OPENSSL_MANGLER_ASM(ossl_chacha20_ossl_poly1305_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_aead_gettable_ctx_params
#  define ossl_cipher_aead_gettable_ctx_params OPENSSL_MANGLER(ossl_cipher_aead_gettable_ctx_params)
# endif
#else
# ifndef _ossl_cipher_aead_gettable_ctx_params
#  define _ossl_cipher_aead_gettable_ctx_params OPENSSL_MANGLER_ASM(ossl_cipher_aead_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_aead_settable_ctx_params
#  define ossl_cipher_aead_settable_ctx_params OPENSSL_MANGLER(ossl_cipher_aead_settable_ctx_params)
# endif
#else
# ifndef _ossl_cipher_aead_settable_ctx_params
#  define _ossl_cipher_aead_settable_ctx_params OPENSSL_MANGLER_ASM(ossl_cipher_aead_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_capable_aes_cbc_hmac_sha1
#  define ossl_cipher_capable_aes_cbc_hmac_sha1 OPENSSL_MANGLER(ossl_cipher_capable_aes_cbc_hmac_sha1)
# endif
#else
# ifndef _ossl_cipher_capable_aes_cbc_hmac_sha1
#  define _ossl_cipher_capable_aes_cbc_hmac_sha1 OPENSSL_MANGLER_ASM(ossl_cipher_capable_aes_cbc_hmac_sha1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_capable_aes_cbc_hmac_sha256
#  define ossl_cipher_capable_aes_cbc_hmac_sha256 OPENSSL_MANGLER(ossl_cipher_capable_aes_cbc_hmac_sha256)
# endif
#else
# ifndef _ossl_cipher_capable_aes_cbc_hmac_sha256
#  define _ossl_cipher_capable_aes_cbc_hmac_sha256 OPENSSL_MANGLER_ASM(ossl_cipher_capable_aes_cbc_hmac_sha256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_cbc_cts_block_final
#  define ossl_cipher_cbc_cts_block_final OPENSSL_MANGLER(ossl_cipher_cbc_cts_block_final)
# endif
#else
# ifndef _ossl_cipher_cbc_cts_block_final
#  define _ossl_cipher_cbc_cts_block_final OPENSSL_MANGLER_ASM(ossl_cipher_cbc_cts_block_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_cbc_cts_block_update
#  define ossl_cipher_cbc_cts_block_update OPENSSL_MANGLER(ossl_cipher_cbc_cts_block_update)
# endif
#else
# ifndef _ossl_cipher_cbc_cts_block_update
#  define _ossl_cipher_cbc_cts_block_update OPENSSL_MANGLER_ASM(ossl_cipher_cbc_cts_block_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_cbc_cts_mode_id2name
#  define ossl_cipher_cbc_cts_mode_id2name OPENSSL_MANGLER(ossl_cipher_cbc_cts_mode_id2name)
# endif
#else
# ifndef _ossl_cipher_cbc_cts_mode_id2name
#  define _ossl_cipher_cbc_cts_mode_id2name OPENSSL_MANGLER_ASM(ossl_cipher_cbc_cts_mode_id2name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_cbc_cts_mode_name2id
#  define ossl_cipher_cbc_cts_mode_name2id OPENSSL_MANGLER(ossl_cipher_cbc_cts_mode_name2id)
# endif
#else
# ifndef _ossl_cipher_cbc_cts_mode_name2id
#  define _ossl_cipher_cbc_cts_mode_name2id OPENSSL_MANGLER_ASM(ossl_cipher_cbc_cts_mode_name2id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_fillblock
#  define ossl_cipher_fillblock OPENSSL_MANGLER(ossl_cipher_fillblock)
# endif
#else
# ifndef _ossl_cipher_fillblock
#  define _ossl_cipher_fillblock OPENSSL_MANGLER_ASM(ossl_cipher_fillblock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_block_final
#  define ossl_cipher_generic_block_final OPENSSL_MANGLER(ossl_cipher_generic_block_final)
# endif
#else
# ifndef _ossl_cipher_generic_block_final
#  define _ossl_cipher_generic_block_final OPENSSL_MANGLER_ASM(ossl_cipher_generic_block_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_block_update
#  define ossl_cipher_generic_block_update OPENSSL_MANGLER(ossl_cipher_generic_block_update)
# endif
#else
# ifndef _ossl_cipher_generic_block_update
#  define _ossl_cipher_generic_block_update OPENSSL_MANGLER_ASM(ossl_cipher_generic_block_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_cipher
#  define ossl_cipher_generic_cipher OPENSSL_MANGLER(ossl_cipher_generic_cipher)
# endif
#else
# ifndef _ossl_cipher_generic_cipher
#  define _ossl_cipher_generic_cipher OPENSSL_MANGLER_ASM(ossl_cipher_generic_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_dinit
#  define ossl_cipher_generic_dinit OPENSSL_MANGLER(ossl_cipher_generic_dinit)
# endif
#else
# ifndef _ossl_cipher_generic_dinit
#  define _ossl_cipher_generic_dinit OPENSSL_MANGLER_ASM(ossl_cipher_generic_dinit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_einit
#  define ossl_cipher_generic_einit OPENSSL_MANGLER(ossl_cipher_generic_einit)
# endif
#else
# ifndef _ossl_cipher_generic_einit
#  define _ossl_cipher_generic_einit OPENSSL_MANGLER_ASM(ossl_cipher_generic_einit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_get_ctx_params
#  define ossl_cipher_generic_get_ctx_params OPENSSL_MANGLER(ossl_cipher_generic_get_ctx_params)
# endif
#else
# ifndef _ossl_cipher_generic_get_ctx_params
#  define _ossl_cipher_generic_get_ctx_params OPENSSL_MANGLER_ASM(ossl_cipher_generic_get_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_get_params
#  define ossl_cipher_generic_get_params OPENSSL_MANGLER(ossl_cipher_generic_get_params)
# endif
#else
# ifndef _ossl_cipher_generic_get_params
#  define _ossl_cipher_generic_get_params OPENSSL_MANGLER_ASM(ossl_cipher_generic_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_gettable_ctx_params
#  define ossl_cipher_generic_gettable_ctx_params OPENSSL_MANGLER(ossl_cipher_generic_gettable_ctx_params)
# endif
#else
# ifndef _ossl_cipher_generic_gettable_ctx_params
#  define _ossl_cipher_generic_gettable_ctx_params OPENSSL_MANGLER_ASM(ossl_cipher_generic_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_gettable_params
#  define ossl_cipher_generic_gettable_params OPENSSL_MANGLER(ossl_cipher_generic_gettable_params)
# endif
#else
# ifndef _ossl_cipher_generic_gettable_params
#  define _ossl_cipher_generic_gettable_params OPENSSL_MANGLER_ASM(ossl_cipher_generic_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_initiv
#  define ossl_cipher_generic_initiv OPENSSL_MANGLER(ossl_cipher_generic_initiv)
# endif
#else
# ifndef _ossl_cipher_generic_initiv
#  define _ossl_cipher_generic_initiv OPENSSL_MANGLER_ASM(ossl_cipher_generic_initiv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_initkey
#  define ossl_cipher_generic_initkey OPENSSL_MANGLER(ossl_cipher_generic_initkey)
# endif
#else
# ifndef _ossl_cipher_generic_initkey
#  define _ossl_cipher_generic_initkey OPENSSL_MANGLER_ASM(ossl_cipher_generic_initkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_reset_ctx
#  define ossl_cipher_generic_reset_ctx OPENSSL_MANGLER(ossl_cipher_generic_reset_ctx)
# endif
#else
# ifndef _ossl_cipher_generic_reset_ctx
#  define _ossl_cipher_generic_reset_ctx OPENSSL_MANGLER_ASM(ossl_cipher_generic_reset_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_set_ctx_params
#  define ossl_cipher_generic_set_ctx_params OPENSSL_MANGLER(ossl_cipher_generic_set_ctx_params)
# endif
#else
# ifndef _ossl_cipher_generic_set_ctx_params
#  define _ossl_cipher_generic_set_ctx_params OPENSSL_MANGLER_ASM(ossl_cipher_generic_set_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_settable_ctx_params
#  define ossl_cipher_generic_settable_ctx_params OPENSSL_MANGLER(ossl_cipher_generic_settable_ctx_params)
# endif
#else
# ifndef _ossl_cipher_generic_settable_ctx_params
#  define _ossl_cipher_generic_settable_ctx_params OPENSSL_MANGLER_ASM(ossl_cipher_generic_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_stream_final
#  define ossl_cipher_generic_stream_final OPENSSL_MANGLER(ossl_cipher_generic_stream_final)
# endif
#else
# ifndef _ossl_cipher_generic_stream_final
#  define _ossl_cipher_generic_stream_final OPENSSL_MANGLER_ASM(ossl_cipher_generic_stream_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_generic_stream_update
#  define ossl_cipher_generic_stream_update OPENSSL_MANGLER(ossl_cipher_generic_stream_update)
# endif
#else
# ifndef _ossl_cipher_generic_stream_update
#  define _ossl_cipher_generic_stream_update OPENSSL_MANGLER_ASM(ossl_cipher_generic_stream_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_chunked_cbc
#  define ossl_cipher_hw_chunked_cbc OPENSSL_MANGLER(ossl_cipher_hw_chunked_cbc)
# endif
#else
# ifndef _ossl_cipher_hw_chunked_cbc
#  define _ossl_cipher_hw_chunked_cbc OPENSSL_MANGLER_ASM(ossl_cipher_hw_chunked_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_chunked_cfb128
#  define ossl_cipher_hw_chunked_cfb128 OPENSSL_MANGLER(ossl_cipher_hw_chunked_cfb128)
# endif
#else
# ifndef _ossl_cipher_hw_chunked_cfb128
#  define _ossl_cipher_hw_chunked_cfb128 OPENSSL_MANGLER_ASM(ossl_cipher_hw_chunked_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_chunked_cfb8
#  define ossl_cipher_hw_chunked_cfb8 OPENSSL_MANGLER(ossl_cipher_hw_chunked_cfb8)
# endif
#else
# ifndef _ossl_cipher_hw_chunked_cfb8
#  define _ossl_cipher_hw_chunked_cfb8 OPENSSL_MANGLER_ASM(ossl_cipher_hw_chunked_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_chunked_ofb128
#  define ossl_cipher_hw_chunked_ofb128 OPENSSL_MANGLER(ossl_cipher_hw_chunked_ofb128)
# endif
#else
# ifndef _ossl_cipher_hw_chunked_ofb128
#  define _ossl_cipher_hw_chunked_ofb128 OPENSSL_MANGLER_ASM(ossl_cipher_hw_chunked_ofb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_generic_cbc
#  define ossl_cipher_hw_generic_cbc OPENSSL_MANGLER(ossl_cipher_hw_generic_cbc)
# endif
#else
# ifndef _ossl_cipher_hw_generic_cbc
#  define _ossl_cipher_hw_generic_cbc OPENSSL_MANGLER_ASM(ossl_cipher_hw_generic_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_generic_cfb1
#  define ossl_cipher_hw_generic_cfb1 OPENSSL_MANGLER(ossl_cipher_hw_generic_cfb1)
# endif
#else
# ifndef _ossl_cipher_hw_generic_cfb1
#  define _ossl_cipher_hw_generic_cfb1 OPENSSL_MANGLER_ASM(ossl_cipher_hw_generic_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_generic_cfb128
#  define ossl_cipher_hw_generic_cfb128 OPENSSL_MANGLER(ossl_cipher_hw_generic_cfb128)
# endif
#else
# ifndef _ossl_cipher_hw_generic_cfb128
#  define _ossl_cipher_hw_generic_cfb128 OPENSSL_MANGLER_ASM(ossl_cipher_hw_generic_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_generic_cfb8
#  define ossl_cipher_hw_generic_cfb8 OPENSSL_MANGLER(ossl_cipher_hw_generic_cfb8)
# endif
#else
# ifndef _ossl_cipher_hw_generic_cfb8
#  define _ossl_cipher_hw_generic_cfb8 OPENSSL_MANGLER_ASM(ossl_cipher_hw_generic_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_generic_ctr
#  define ossl_cipher_hw_generic_ctr OPENSSL_MANGLER(ossl_cipher_hw_generic_ctr)
# endif
#else
# ifndef _ossl_cipher_hw_generic_ctr
#  define _ossl_cipher_hw_generic_ctr OPENSSL_MANGLER_ASM(ossl_cipher_hw_generic_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_generic_ecb
#  define ossl_cipher_hw_generic_ecb OPENSSL_MANGLER(ossl_cipher_hw_generic_ecb)
# endif
#else
# ifndef _ossl_cipher_hw_generic_ecb
#  define _ossl_cipher_hw_generic_ecb OPENSSL_MANGLER_ASM(ossl_cipher_hw_generic_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_generic_ofb128
#  define ossl_cipher_hw_generic_ofb128 OPENSSL_MANGLER(ossl_cipher_hw_generic_ofb128)
# endif
#else
# ifndef _ossl_cipher_hw_generic_ofb128
#  define _ossl_cipher_hw_generic_ofb128 OPENSSL_MANGLER_ASM(ossl_cipher_hw_generic_ofb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_tdes_cbc
#  define ossl_cipher_hw_tdes_cbc OPENSSL_MANGLER(ossl_cipher_hw_tdes_cbc)
# endif
#else
# ifndef _ossl_cipher_hw_tdes_cbc
#  define _ossl_cipher_hw_tdes_cbc OPENSSL_MANGLER_ASM(ossl_cipher_hw_tdes_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_tdes_copyctx
#  define ossl_cipher_hw_tdes_copyctx OPENSSL_MANGLER(ossl_cipher_hw_tdes_copyctx)
# endif
#else
# ifndef _ossl_cipher_hw_tdes_copyctx
#  define _ossl_cipher_hw_tdes_copyctx OPENSSL_MANGLER_ASM(ossl_cipher_hw_tdes_copyctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_tdes_ecb
#  define ossl_cipher_hw_tdes_ecb OPENSSL_MANGLER(ossl_cipher_hw_tdes_ecb)
# endif
#else
# ifndef _ossl_cipher_hw_tdes_ecb
#  define _ossl_cipher_hw_tdes_ecb OPENSSL_MANGLER_ASM(ossl_cipher_hw_tdes_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_hw_tdes_ede3_initkey
#  define ossl_cipher_hw_tdes_ede3_initkey OPENSSL_MANGLER(ossl_cipher_hw_tdes_ede3_initkey)
# endif
#else
# ifndef _ossl_cipher_hw_tdes_ede3_initkey
#  define _ossl_cipher_hw_tdes_ede3_initkey OPENSSL_MANGLER_ASM(ossl_cipher_hw_tdes_ede3_initkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_padblock
#  define ossl_cipher_padblock OPENSSL_MANGLER(ossl_cipher_padblock)
# endif
#else
# ifndef _ossl_cipher_padblock
#  define _ossl_cipher_padblock OPENSSL_MANGLER_ASM(ossl_cipher_padblock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_tlsunpadblock
#  define ossl_cipher_tlsunpadblock OPENSSL_MANGLER(ossl_cipher_tlsunpadblock)
# endif
#else
# ifndef _ossl_cipher_tlsunpadblock
#  define _ossl_cipher_tlsunpadblock OPENSSL_MANGLER_ASM(ossl_cipher_tlsunpadblock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_trailingdata
#  define ossl_cipher_trailingdata OPENSSL_MANGLER(ossl_cipher_trailingdata)
# endif
#else
# ifndef _ossl_cipher_trailingdata
#  define _ossl_cipher_trailingdata OPENSSL_MANGLER_ASM(ossl_cipher_trailingdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_unpadblock
#  define ossl_cipher_unpadblock OPENSSL_MANGLER(ossl_cipher_unpadblock)
# endif
#else
# ifndef _ossl_cipher_unpadblock
#  define _ossl_cipher_unpadblock OPENSSL_MANGLER_ASM(ossl_cipher_unpadblock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_var_keylen_set_ctx_params
#  define ossl_cipher_var_keylen_set_ctx_params OPENSSL_MANGLER(ossl_cipher_var_keylen_set_ctx_params)
# endif
#else
# ifndef _ossl_cipher_var_keylen_set_ctx_params
#  define _ossl_cipher_var_keylen_set_ctx_params OPENSSL_MANGLER_ASM(ossl_cipher_var_keylen_set_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cipher_var_keylen_settable_ctx_params
#  define ossl_cipher_var_keylen_settable_ctx_params OPENSSL_MANGLER(ossl_cipher_var_keylen_settable_ctx_params)
# endif
#else
# ifndef _ossl_cipher_var_keylen_settable_ctx_params
#  define _ossl_cipher_var_keylen_settable_ctx_params OPENSSL_MANGLER_ASM(ossl_cipher_var_keylen_settable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cleanup_thread
#  define ossl_cleanup_thread OPENSSL_MANGLER(ossl_cleanup_thread)
# endif
#else
# ifndef _ossl_cleanup_thread
#  define _ossl_cleanup_thread OPENSSL_MANGLER_ASM(ossl_cleanup_thread)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmac_functions
#  define ossl_cmac_functions OPENSSL_MANGLER(ossl_cmac_functions)
# endif
#else
# ifndef _ossl_cmac_functions
#  define _ossl_cmac_functions OPENSSL_MANGLER_ASM(ossl_cmac_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmac_legacy_keymgmt_functions
#  define ossl_cmac_legacy_keymgmt_functions OPENSSL_MANGLER(ossl_cmac_legacy_keymgmt_functions)
# endif
#else
# ifndef _ossl_cmac_legacy_keymgmt_functions
#  define _ossl_cmac_legacy_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_cmac_legacy_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_PKIStatus_to_string
#  define ossl_cmp_PKIStatus_to_string OPENSSL_MANGLER(ossl_cmp_PKIStatus_to_string)
# endif
#else
# ifndef _ossl_cmp_PKIStatus_to_string
#  define _ossl_cmp_PKIStatus_to_string OPENSSL_MANGLER_ASM(ossl_cmp_PKIStatus_to_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_X509_STORE_add1_certs
#  define ossl_cmp_X509_STORE_add1_certs OPENSSL_MANGLER(ossl_cmp_X509_STORE_add1_certs)
# endif
#else
# ifndef _ossl_cmp_X509_STORE_add1_certs
#  define _ossl_cmp_X509_STORE_add1_certs OPENSSL_MANGLER_ASM(ossl_cmp_X509_STORE_add1_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_asn1_get_int
#  define ossl_cmp_asn1_get_int OPENSSL_MANGLER(ossl_cmp_asn1_get_int)
# endif
#else
# ifndef _ossl_cmp_asn1_get_int
#  define _ossl_cmp_asn1_get_int OPENSSL_MANGLER_ASM(ossl_cmp_asn1_get_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_asn1_octet_string_set1
#  define ossl_cmp_asn1_octet_string_set1 OPENSSL_MANGLER(ossl_cmp_asn1_octet_string_set1)
# endif
#else
# ifndef _ossl_cmp_asn1_octet_string_set1
#  define _ossl_cmp_asn1_octet_string_set1 OPENSSL_MANGLER_ASM(ossl_cmp_asn1_octet_string_set1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_asn1_octet_string_set1_bytes
#  define ossl_cmp_asn1_octet_string_set1_bytes OPENSSL_MANGLER(ossl_cmp_asn1_octet_string_set1_bytes)
# endif
#else
# ifndef _ossl_cmp_asn1_octet_string_set1_bytes
#  define _ossl_cmp_asn1_octet_string_set1_bytes OPENSSL_MANGLER_ASM(ossl_cmp_asn1_octet_string_set1_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_bodytype_to_string
#  define ossl_cmp_bodytype_to_string OPENSSL_MANGLER(ossl_cmp_bodytype_to_string)
# endif
#else
# ifndef _ossl_cmp_bodytype_to_string
#  define _ossl_cmp_bodytype_to_string OPENSSL_MANGLER_ASM(ossl_cmp_bodytype_to_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_calc_protection
#  define ossl_cmp_calc_protection OPENSSL_MANGLER(ossl_cmp_calc_protection)
# endif
#else
# ifndef _ossl_cmp_calc_protection
#  define _ossl_cmp_calc_protection OPENSSL_MANGLER_ASM(ossl_cmp_calc_protection)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_certConf_new
#  define ossl_cmp_certConf_new OPENSSL_MANGLER(ossl_cmp_certConf_new)
# endif
#else
# ifndef _ossl_cmp_certConf_new
#  define _ossl_cmp_certConf_new OPENSSL_MANGLER_ASM(ossl_cmp_certConf_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_certrep_new
#  define ossl_cmp_certrep_new OPENSSL_MANGLER(ossl_cmp_certrep_new)
# endif
#else
# ifndef _ossl_cmp_certrep_new
#  define _ossl_cmp_certrep_new OPENSSL_MANGLER_ASM(ossl_cmp_certrep_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_certrepmessage_get0_certresponse
#  define ossl_cmp_certrepmessage_get0_certresponse OPENSSL_MANGLER(ossl_cmp_certrepmessage_get0_certresponse)
# endif
#else
# ifndef _ossl_cmp_certrepmessage_get0_certresponse
#  define _ossl_cmp_certrepmessage_get0_certresponse OPENSSL_MANGLER_ASM(ossl_cmp_certrepmessage_get0_certresponse)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_certreq_new
#  define ossl_cmp_certreq_new OPENSSL_MANGLER(ossl_cmp_certreq_new)
# endif
#else
# ifndef _ossl_cmp_certreq_new
#  define _ossl_cmp_certreq_new OPENSSL_MANGLER_ASM(ossl_cmp_certreq_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_certresponse_get1_cert
#  define ossl_cmp_certresponse_get1_cert OPENSSL_MANGLER(ossl_cmp_certresponse_get1_cert)
# endif
#else
# ifndef _ossl_cmp_certresponse_get1_cert
#  define _ossl_cmp_certresponse_get1_cert OPENSSL_MANGLER_ASM(ossl_cmp_certresponse_get1_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_certstatus_set0_certHash
#  define ossl_cmp_certstatus_set0_certHash OPENSSL_MANGLER(ossl_cmp_certstatus_set0_certHash)
# endif
#else
# ifndef _ossl_cmp_certstatus_set0_certHash
#  define _ossl_cmp_certstatus_set0_certHash OPENSSL_MANGLER_ASM(ossl_cmp_certstatus_set0_certHash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_ctx_set0_newCert
#  define ossl_cmp_ctx_set0_newCert OPENSSL_MANGLER(ossl_cmp_ctx_set0_newCert)
# endif
#else
# ifndef _ossl_cmp_ctx_set0_newCert
#  define _ossl_cmp_ctx_set0_newCert OPENSSL_MANGLER_ASM(ossl_cmp_ctx_set0_newCert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_ctx_set0_statusString
#  define ossl_cmp_ctx_set0_statusString OPENSSL_MANGLER(ossl_cmp_ctx_set0_statusString)
# endif
#else
# ifndef _ossl_cmp_ctx_set0_statusString
#  define _ossl_cmp_ctx_set0_statusString OPENSSL_MANGLER_ASM(ossl_cmp_ctx_set0_statusString)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_ctx_set0_validatedSrvCert
#  define ossl_cmp_ctx_set0_validatedSrvCert OPENSSL_MANGLER(ossl_cmp_ctx_set0_validatedSrvCert)
# endif
#else
# ifndef _ossl_cmp_ctx_set0_validatedSrvCert
#  define _ossl_cmp_ctx_set0_validatedSrvCert OPENSSL_MANGLER_ASM(ossl_cmp_ctx_set0_validatedSrvCert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_ctx_set1_caPubs
#  define ossl_cmp_ctx_set1_caPubs OPENSSL_MANGLER(ossl_cmp_ctx_set1_caPubs)
# endif
#else
# ifndef _ossl_cmp_ctx_set1_caPubs
#  define _ossl_cmp_ctx_set1_caPubs OPENSSL_MANGLER_ASM(ossl_cmp_ctx_set1_caPubs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_ctx_set1_extraCertsIn
#  define ossl_cmp_ctx_set1_extraCertsIn OPENSSL_MANGLER(ossl_cmp_ctx_set1_extraCertsIn)
# endif
#else
# ifndef _ossl_cmp_ctx_set1_extraCertsIn
#  define _ossl_cmp_ctx_set1_extraCertsIn OPENSSL_MANGLER_ASM(ossl_cmp_ctx_set1_extraCertsIn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_ctx_set1_newChain
#  define ossl_cmp_ctx_set1_newChain OPENSSL_MANGLER(ossl_cmp_ctx_set1_newChain)
# endif
#else
# ifndef _ossl_cmp_ctx_set1_newChain
#  define _ossl_cmp_ctx_set1_newChain OPENSSL_MANGLER_ASM(ossl_cmp_ctx_set1_newChain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_ctx_set1_recipNonce
#  define ossl_cmp_ctx_set1_recipNonce OPENSSL_MANGLER(ossl_cmp_ctx_set1_recipNonce)
# endif
#else
# ifndef _ossl_cmp_ctx_set1_recipNonce
#  define _ossl_cmp_ctx_set1_recipNonce OPENSSL_MANGLER_ASM(ossl_cmp_ctx_set1_recipNonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_ctx_set_failInfoCode
#  define ossl_cmp_ctx_set_failInfoCode OPENSSL_MANGLER(ossl_cmp_ctx_set_failInfoCode)
# endif
#else
# ifndef _ossl_cmp_ctx_set_failInfoCode
#  define _ossl_cmp_ctx_set_failInfoCode OPENSSL_MANGLER_ASM(ossl_cmp_ctx_set_failInfoCode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_ctx_set_status
#  define ossl_cmp_ctx_set_status OPENSSL_MANGLER(ossl_cmp_ctx_set_status)
# endif
#else
# ifndef _ossl_cmp_ctx_set_status
#  define _ossl_cmp_ctx_set_status OPENSSL_MANGLER_ASM(ossl_cmp_ctx_set_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_error_new
#  define ossl_cmp_error_new OPENSSL_MANGLER(ossl_cmp_error_new)
# endif
#else
# ifndef _ossl_cmp_error_new
#  define _ossl_cmp_error_new OPENSSL_MANGLER_ASM(ossl_cmp_error_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_exchange_certConf
#  define ossl_cmp_exchange_certConf OPENSSL_MANGLER(ossl_cmp_exchange_certConf)
# endif
#else
# ifndef _ossl_cmp_exchange_certConf
#  define _ossl_cmp_exchange_certConf OPENSSL_MANGLER_ASM(ossl_cmp_exchange_certConf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_exchange_error
#  define ossl_cmp_exchange_error OPENSSL_MANGLER(ossl_cmp_exchange_error)
# endif
#else
# ifndef _ossl_cmp_exchange_error
#  define _ossl_cmp_exchange_error OPENSSL_MANGLER_ASM(ossl_cmp_exchange_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_general_name_is_NULL_DN
#  define ossl_cmp_general_name_is_NULL_DN OPENSSL_MANGLER(ossl_cmp_general_name_is_NULL_DN)
# endif
#else
# ifndef _ossl_cmp_general_name_is_NULL_DN
#  define _ossl_cmp_general_name_is_NULL_DN OPENSSL_MANGLER_ASM(ossl_cmp_general_name_is_NULL_DN)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_genm_new
#  define ossl_cmp_genm_new OPENSSL_MANGLER(ossl_cmp_genm_new)
# endif
#else
# ifndef _ossl_cmp_genm_new
#  define _ossl_cmp_genm_new OPENSSL_MANGLER_ASM(ossl_cmp_genm_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_genp_new
#  define ossl_cmp_genp_new OPENSSL_MANGLER(ossl_cmp_genp_new)
# endif
#else
# ifndef _ossl_cmp_genp_new
#  define _ossl_cmp_genp_new OPENSSL_MANGLER_ASM(ossl_cmp_genp_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_generalInfo_push0_item
#  define ossl_cmp_hdr_generalInfo_push0_item OPENSSL_MANGLER(ossl_cmp_hdr_generalInfo_push0_item)
# endif
#else
# ifndef _ossl_cmp_hdr_generalInfo_push0_item
#  define _ossl_cmp_hdr_generalInfo_push0_item OPENSSL_MANGLER_ASM(ossl_cmp_hdr_generalInfo_push0_item)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_generalInfo_push1_items
#  define ossl_cmp_hdr_generalInfo_push1_items OPENSSL_MANGLER(ossl_cmp_hdr_generalInfo_push1_items)
# endif
#else
# ifndef _ossl_cmp_hdr_generalInfo_push1_items
#  define _ossl_cmp_hdr_generalInfo_push1_items OPENSSL_MANGLER_ASM(ossl_cmp_hdr_generalInfo_push1_items)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_get0_senderNonce
#  define ossl_cmp_hdr_get0_senderNonce OPENSSL_MANGLER(ossl_cmp_hdr_get0_senderNonce)
# endif
#else
# ifndef _ossl_cmp_hdr_get0_senderNonce
#  define _ossl_cmp_hdr_get0_senderNonce OPENSSL_MANGLER_ASM(ossl_cmp_hdr_get0_senderNonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_get_protection_nid
#  define ossl_cmp_hdr_get_protection_nid OPENSSL_MANGLER(ossl_cmp_hdr_get_protection_nid)
# endif
#else
# ifndef _ossl_cmp_hdr_get_protection_nid
#  define _ossl_cmp_hdr_get_protection_nid OPENSSL_MANGLER_ASM(ossl_cmp_hdr_get_protection_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_get_pvno
#  define ossl_cmp_hdr_get_pvno OPENSSL_MANGLER(ossl_cmp_hdr_get_pvno)
# endif
#else
# ifndef _ossl_cmp_hdr_get_pvno
#  define _ossl_cmp_hdr_get_pvno OPENSSL_MANGLER_ASM(ossl_cmp_hdr_get_pvno)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_has_implicitConfirm
#  define ossl_cmp_hdr_has_implicitConfirm OPENSSL_MANGLER(ossl_cmp_hdr_has_implicitConfirm)
# endif
#else
# ifndef _ossl_cmp_hdr_has_implicitConfirm
#  define _ossl_cmp_hdr_has_implicitConfirm OPENSSL_MANGLER_ASM(ossl_cmp_hdr_has_implicitConfirm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_init
#  define ossl_cmp_hdr_init OPENSSL_MANGLER(ossl_cmp_hdr_init)
# endif
#else
# ifndef _ossl_cmp_hdr_init
#  define _ossl_cmp_hdr_init OPENSSL_MANGLER_ASM(ossl_cmp_hdr_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_push0_freeText
#  define ossl_cmp_hdr_push0_freeText OPENSSL_MANGLER(ossl_cmp_hdr_push0_freeText)
# endif
#else
# ifndef _ossl_cmp_hdr_push0_freeText
#  define _ossl_cmp_hdr_push0_freeText OPENSSL_MANGLER_ASM(ossl_cmp_hdr_push0_freeText)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_push1_freeText
#  define ossl_cmp_hdr_push1_freeText OPENSSL_MANGLER(ossl_cmp_hdr_push1_freeText)
# endif
#else
# ifndef _ossl_cmp_hdr_push1_freeText
#  define _ossl_cmp_hdr_push1_freeText OPENSSL_MANGLER_ASM(ossl_cmp_hdr_push1_freeText)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_set1_recipient
#  define ossl_cmp_hdr_set1_recipient OPENSSL_MANGLER(ossl_cmp_hdr_set1_recipient)
# endif
#else
# ifndef _ossl_cmp_hdr_set1_recipient
#  define _ossl_cmp_hdr_set1_recipient OPENSSL_MANGLER_ASM(ossl_cmp_hdr_set1_recipient)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_set1_sender
#  define ossl_cmp_hdr_set1_sender OPENSSL_MANGLER(ossl_cmp_hdr_set1_sender)
# endif
#else
# ifndef _ossl_cmp_hdr_set1_sender
#  define _ossl_cmp_hdr_set1_sender OPENSSL_MANGLER_ASM(ossl_cmp_hdr_set1_sender)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_set1_senderKID
#  define ossl_cmp_hdr_set1_senderKID OPENSSL_MANGLER(ossl_cmp_hdr_set1_senderKID)
# endif
#else
# ifndef _ossl_cmp_hdr_set1_senderKID
#  define _ossl_cmp_hdr_set1_senderKID OPENSSL_MANGLER_ASM(ossl_cmp_hdr_set1_senderKID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_set_implicitConfirm
#  define ossl_cmp_hdr_set_implicitConfirm OPENSSL_MANGLER(ossl_cmp_hdr_set_implicitConfirm)
# endif
#else
# ifndef _ossl_cmp_hdr_set_implicitConfirm
#  define _ossl_cmp_hdr_set_implicitConfirm OPENSSL_MANGLER_ASM(ossl_cmp_hdr_set_implicitConfirm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_set_pvno
#  define ossl_cmp_hdr_set_pvno OPENSSL_MANGLER(ossl_cmp_hdr_set_pvno)
# endif
#else
# ifndef _ossl_cmp_hdr_set_pvno
#  define _ossl_cmp_hdr_set_pvno OPENSSL_MANGLER_ASM(ossl_cmp_hdr_set_pvno)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_set_transactionID
#  define ossl_cmp_hdr_set_transactionID OPENSSL_MANGLER(ossl_cmp_hdr_set_transactionID)
# endif
#else
# ifndef _ossl_cmp_hdr_set_transactionID
#  define _ossl_cmp_hdr_set_transactionID OPENSSL_MANGLER_ASM(ossl_cmp_hdr_set_transactionID)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_hdr_update_messageTime
#  define ossl_cmp_hdr_update_messageTime OPENSSL_MANGLER(ossl_cmp_hdr_update_messageTime)
# endif
#else
# ifndef _ossl_cmp_hdr_update_messageTime
#  define _ossl_cmp_hdr_update_messageTime OPENSSL_MANGLER_ASM(ossl_cmp_hdr_update_messageTime)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_log_parse_metadata
#  define ossl_cmp_log_parse_metadata OPENSSL_MANGLER(ossl_cmp_log_parse_metadata)
# endif
#else
# ifndef _ossl_cmp_log_parse_metadata
#  define _ossl_cmp_log_parse_metadata OPENSSL_MANGLER_ASM(ossl_cmp_log_parse_metadata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_msg_add_extraCerts
#  define ossl_cmp_msg_add_extraCerts OPENSSL_MANGLER(ossl_cmp_msg_add_extraCerts)
# endif
#else
# ifndef _ossl_cmp_msg_add_extraCerts
#  define _ossl_cmp_msg_add_extraCerts OPENSSL_MANGLER_ASM(ossl_cmp_msg_add_extraCerts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_msg_check_update
#  define ossl_cmp_msg_check_update OPENSSL_MANGLER(ossl_cmp_msg_check_update)
# endif
#else
# ifndef _ossl_cmp_msg_check_update
#  define _ossl_cmp_msg_check_update OPENSSL_MANGLER_ASM(ossl_cmp_msg_check_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_msg_create
#  define ossl_cmp_msg_create OPENSSL_MANGLER(ossl_cmp_msg_create)
# endif
#else
# ifndef _ossl_cmp_msg_create
#  define _ossl_cmp_msg_create OPENSSL_MANGLER_ASM(ossl_cmp_msg_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_msg_gen_push0_ITAV
#  define ossl_cmp_msg_gen_push0_ITAV OPENSSL_MANGLER(ossl_cmp_msg_gen_push0_ITAV)
# endif
#else
# ifndef _ossl_cmp_msg_gen_push0_ITAV
#  define _ossl_cmp_msg_gen_push0_ITAV OPENSSL_MANGLER_ASM(ossl_cmp_msg_gen_push0_ITAV)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_msg_gen_push1_ITAVs
#  define ossl_cmp_msg_gen_push1_ITAVs OPENSSL_MANGLER(ossl_cmp_msg_gen_push1_ITAVs)
# endif
#else
# ifndef _ossl_cmp_msg_gen_push1_ITAVs
#  define _ossl_cmp_msg_gen_push1_ITAVs OPENSSL_MANGLER_ASM(ossl_cmp_msg_gen_push1_ITAVs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_msg_protect
#  define ossl_cmp_msg_protect OPENSSL_MANGLER(ossl_cmp_msg_protect)
# endif
#else
# ifndef _ossl_cmp_msg_protect
#  define _ossl_cmp_msg_protect OPENSSL_MANGLER_ASM(ossl_cmp_msg_protect)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_msg_set0_libctx
#  define ossl_cmp_msg_set0_libctx OPENSSL_MANGLER(ossl_cmp_msg_set0_libctx)
# endif
#else
# ifndef _ossl_cmp_msg_set0_libctx
#  define _ossl_cmp_msg_set0_libctx OPENSSL_MANGLER_ASM(ossl_cmp_msg_set0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_msg_set_bodytype
#  define ossl_cmp_msg_set_bodytype OPENSSL_MANGLER(ossl_cmp_msg_set_bodytype)
# endif
#else
# ifndef _ossl_cmp_msg_set_bodytype
#  define _ossl_cmp_msg_set_bodytype OPENSSL_MANGLER_ASM(ossl_cmp_msg_set_bodytype)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_pkiconf_new
#  define ossl_cmp_pkiconf_new OPENSSL_MANGLER(ossl_cmp_pkiconf_new)
# endif
#else
# ifndef _ossl_cmp_pkiconf_new
#  define _ossl_cmp_pkiconf_new OPENSSL_MANGLER_ASM(ossl_cmp_pkiconf_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_pkisi_check_pkifailureinfo
#  define ossl_cmp_pkisi_check_pkifailureinfo OPENSSL_MANGLER(ossl_cmp_pkisi_check_pkifailureinfo)
# endif
#else
# ifndef _ossl_cmp_pkisi_check_pkifailureinfo
#  define _ossl_cmp_pkisi_check_pkifailureinfo OPENSSL_MANGLER_ASM(ossl_cmp_pkisi_check_pkifailureinfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_pkisi_get0_statusString
#  define ossl_cmp_pkisi_get0_statusString OPENSSL_MANGLER(ossl_cmp_pkisi_get0_statusString)
# endif
#else
# ifndef _ossl_cmp_pkisi_get0_statusString
#  define _ossl_cmp_pkisi_get0_statusString OPENSSL_MANGLER_ASM(ossl_cmp_pkisi_get0_statusString)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_pkisi_get_pkifailureinfo
#  define ossl_cmp_pkisi_get_pkifailureinfo OPENSSL_MANGLER(ossl_cmp_pkisi_get_pkifailureinfo)
# endif
#else
# ifndef _ossl_cmp_pkisi_get_pkifailureinfo
#  define _ossl_cmp_pkisi_get_pkifailureinfo OPENSSL_MANGLER_ASM(ossl_cmp_pkisi_get_pkifailureinfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_pkisi_get_status
#  define ossl_cmp_pkisi_get_status OPENSSL_MANGLER(ossl_cmp_pkisi_get_status)
# endif
#else
# ifndef _ossl_cmp_pkisi_get_status
#  define _ossl_cmp_pkisi_get_status OPENSSL_MANGLER_ASM(ossl_cmp_pkisi_get_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_pollRep_new
#  define ossl_cmp_pollRep_new OPENSSL_MANGLER(ossl_cmp_pollRep_new)
# endif
#else
# ifndef _ossl_cmp_pollRep_new
#  define _ossl_cmp_pollRep_new OPENSSL_MANGLER_ASM(ossl_cmp_pollRep_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_pollReq_new
#  define ossl_cmp_pollReq_new OPENSSL_MANGLER(ossl_cmp_pollReq_new)
# endif
#else
# ifndef _ossl_cmp_pollReq_new
#  define _ossl_cmp_pollReq_new OPENSSL_MANGLER_ASM(ossl_cmp_pollReq_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_pollrepcontent_get0_pollrep
#  define ossl_cmp_pollrepcontent_get0_pollrep OPENSSL_MANGLER(ossl_cmp_pollrepcontent_get0_pollrep)
# endif
#else
# ifndef _ossl_cmp_pollrepcontent_get0_pollrep
#  define _ossl_cmp_pollrepcontent_get0_pollrep OPENSSL_MANGLER_ASM(ossl_cmp_pollrepcontent_get0_pollrep)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_print_log
#  define ossl_cmp_print_log OPENSSL_MANGLER(ossl_cmp_print_log)
# endif
#else
# ifndef _ossl_cmp_print_log
#  define _ossl_cmp_print_log OPENSSL_MANGLER_ASM(ossl_cmp_print_log)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_revrepcontent_get_CertId
#  define ossl_cmp_revrepcontent_get_CertId OPENSSL_MANGLER(ossl_cmp_revrepcontent_get_CertId)
# endif
#else
# ifndef _ossl_cmp_revrepcontent_get_CertId
#  define _ossl_cmp_revrepcontent_get_CertId OPENSSL_MANGLER_ASM(ossl_cmp_revrepcontent_get_CertId)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_revrepcontent_get_pkisi
#  define ossl_cmp_revrepcontent_get_pkisi OPENSSL_MANGLER(ossl_cmp_revrepcontent_get_pkisi)
# endif
#else
# ifndef _ossl_cmp_revrepcontent_get_pkisi
#  define _ossl_cmp_revrepcontent_get_pkisi OPENSSL_MANGLER_ASM(ossl_cmp_revrepcontent_get_pkisi)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_rp_new
#  define ossl_cmp_rp_new OPENSSL_MANGLER(ossl_cmp_rp_new)
# endif
#else
# ifndef _ossl_cmp_rp_new
#  define _ossl_cmp_rp_new OPENSSL_MANGLER_ASM(ossl_cmp_rp_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_rr_new
#  define ossl_cmp_rr_new OPENSSL_MANGLER(ossl_cmp_rr_new)
# endif
#else
# ifndef _ossl_cmp_rr_new
#  define _ossl_cmp_rr_new OPENSSL_MANGLER_ASM(ossl_cmp_rr_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_sk_ASN1_UTF8STRING_push_str
#  define ossl_cmp_sk_ASN1_UTF8STRING_push_str OPENSSL_MANGLER(ossl_cmp_sk_ASN1_UTF8STRING_push_str)
# endif
#else
# ifndef _ossl_cmp_sk_ASN1_UTF8STRING_push_str
#  define _ossl_cmp_sk_ASN1_UTF8STRING_push_str OPENSSL_MANGLER_ASM(ossl_cmp_sk_ASN1_UTF8STRING_push_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cmp_verify_popo
#  define ossl_cmp_verify_popo OPENSSL_MANGLER(ossl_cmp_verify_popo)
# endif
#else
# ifndef _ossl_cmp_verify_popo
#  define _ossl_cmp_verify_popo OPENSSL_MANGLER_ASM(ossl_cmp_verify_popo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_AuthEnvelopedData_final
#  define ossl_cms_AuthEnvelopedData_final OPENSSL_MANGLER(ossl_cms_AuthEnvelopedData_final)
# endif
#else
# ifndef _ossl_cms_AuthEnvelopedData_final
#  define _ossl_cms_AuthEnvelopedData_final OPENSSL_MANGLER_ASM(ossl_cms_AuthEnvelopedData_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_AuthEnvelopedData_init_bio
#  define ossl_cms_AuthEnvelopedData_init_bio OPENSSL_MANGLER(ossl_cms_AuthEnvelopedData_init_bio)
# endif
#else
# ifndef _ossl_cms_AuthEnvelopedData_init_bio
#  define _ossl_cms_AuthEnvelopedData_init_bio OPENSSL_MANGLER_ASM(ossl_cms_AuthEnvelopedData_init_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_Data_create
#  define ossl_cms_Data_create OPENSSL_MANGLER(ossl_cms_Data_create)
# endif
#else
# ifndef _ossl_cms_Data_create
#  define _ossl_cms_Data_create OPENSSL_MANGLER_ASM(ossl_cms_Data_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_DigestAlgorithm_find_ctx
#  define ossl_cms_DigestAlgorithm_find_ctx OPENSSL_MANGLER(ossl_cms_DigestAlgorithm_find_ctx)
# endif
#else
# ifndef _ossl_cms_DigestAlgorithm_find_ctx
#  define _ossl_cms_DigestAlgorithm_find_ctx OPENSSL_MANGLER_ASM(ossl_cms_DigestAlgorithm_find_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_DigestAlgorithm_init_bio
#  define ossl_cms_DigestAlgorithm_init_bio OPENSSL_MANGLER(ossl_cms_DigestAlgorithm_init_bio)
# endif
#else
# ifndef _ossl_cms_DigestAlgorithm_init_bio
#  define _ossl_cms_DigestAlgorithm_init_bio OPENSSL_MANGLER_ASM(ossl_cms_DigestAlgorithm_init_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_DigestedData_create
#  define ossl_cms_DigestedData_create OPENSSL_MANGLER(ossl_cms_DigestedData_create)
# endif
#else
# ifndef _ossl_cms_DigestedData_create
#  define _ossl_cms_DigestedData_create OPENSSL_MANGLER_ASM(ossl_cms_DigestedData_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_DigestedData_do_final
#  define ossl_cms_DigestedData_do_final OPENSSL_MANGLER(ossl_cms_DigestedData_do_final)
# endif
#else
# ifndef _ossl_cms_DigestedData_do_final
#  define _ossl_cms_DigestedData_do_final OPENSSL_MANGLER_ASM(ossl_cms_DigestedData_do_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_DigestedData_init_bio
#  define ossl_cms_DigestedData_init_bio OPENSSL_MANGLER(ossl_cms_DigestedData_init_bio)
# endif
#else
# ifndef _ossl_cms_DigestedData_init_bio
#  define _ossl_cms_DigestedData_init_bio OPENSSL_MANGLER_ASM(ossl_cms_DigestedData_init_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_EncryptedContent_init
#  define ossl_cms_EncryptedContent_init OPENSSL_MANGLER(ossl_cms_EncryptedContent_init)
# endif
#else
# ifndef _ossl_cms_EncryptedContent_init
#  define _ossl_cms_EncryptedContent_init OPENSSL_MANGLER_ASM(ossl_cms_EncryptedContent_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_EncryptedContent_init_bio
#  define ossl_cms_EncryptedContent_init_bio OPENSSL_MANGLER(ossl_cms_EncryptedContent_init_bio)
# endif
#else
# ifndef _ossl_cms_EncryptedContent_init_bio
#  define _ossl_cms_EncryptedContent_init_bio OPENSSL_MANGLER_ASM(ossl_cms_EncryptedContent_init_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_EncryptedData_init_bio
#  define ossl_cms_EncryptedData_init_bio OPENSSL_MANGLER(ossl_cms_EncryptedData_init_bio)
# endif
#else
# ifndef _ossl_cms_EncryptedData_init_bio
#  define _ossl_cms_EncryptedData_init_bio OPENSSL_MANGLER_ASM(ossl_cms_EncryptedData_init_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_EnvelopedData_final
#  define ossl_cms_EnvelopedData_final OPENSSL_MANGLER(ossl_cms_EnvelopedData_final)
# endif
#else
# ifndef _ossl_cms_EnvelopedData_final
#  define _ossl_cms_EnvelopedData_final OPENSSL_MANGLER_ASM(ossl_cms_EnvelopedData_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_EnvelopedData_init_bio
#  define ossl_cms_EnvelopedData_init_bio OPENSSL_MANGLER(ossl_cms_EnvelopedData_init_bio)
# endif
#else
# ifndef _ossl_cms_EnvelopedData_init_bio
#  define _ossl_cms_EnvelopedData_init_bio OPENSSL_MANGLER_ASM(ossl_cms_EnvelopedData_init_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_Receipt_verify
#  define ossl_cms_Receipt_verify OPENSSL_MANGLER(ossl_cms_Receipt_verify)
# endif
#else
# ifndef _ossl_cms_Receipt_verify
#  define _ossl_cms_Receipt_verify OPENSSL_MANGLER_ASM(ossl_cms_Receipt_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_RecipientInfo_kari_encrypt
#  define ossl_cms_RecipientInfo_kari_encrypt OPENSSL_MANGLER(ossl_cms_RecipientInfo_kari_encrypt)
# endif
#else
# ifndef _ossl_cms_RecipientInfo_kari_encrypt
#  define _ossl_cms_RecipientInfo_kari_encrypt OPENSSL_MANGLER_ASM(ossl_cms_RecipientInfo_kari_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_RecipientInfo_kari_init
#  define ossl_cms_RecipientInfo_kari_init OPENSSL_MANGLER(ossl_cms_RecipientInfo_kari_init)
# endif
#else
# ifndef _ossl_cms_RecipientInfo_kari_init
#  define _ossl_cms_RecipientInfo_kari_init OPENSSL_MANGLER_ASM(ossl_cms_RecipientInfo_kari_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_RecipientInfo_pwri_crypt
#  define ossl_cms_RecipientInfo_pwri_crypt OPENSSL_MANGLER(ossl_cms_RecipientInfo_pwri_crypt)
# endif
#else
# ifndef _ossl_cms_RecipientInfo_pwri_crypt
#  define _ossl_cms_RecipientInfo_pwri_crypt OPENSSL_MANGLER_ASM(ossl_cms_RecipientInfo_pwri_crypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_RecipientInfos_set_cmsctx
#  define ossl_cms_RecipientInfos_set_cmsctx OPENSSL_MANGLER(ossl_cms_RecipientInfos_set_cmsctx)
# endif
#else
# ifndef _ossl_cms_RecipientInfos_set_cmsctx
#  define _ossl_cms_RecipientInfos_set_cmsctx OPENSSL_MANGLER_ASM(ossl_cms_RecipientInfos_set_cmsctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_SignedData_final
#  define ossl_cms_SignedData_final OPENSSL_MANGLER(ossl_cms_SignedData_final)
# endif
#else
# ifndef _ossl_cms_SignedData_final
#  define _ossl_cms_SignedData_final OPENSSL_MANGLER_ASM(ossl_cms_SignedData_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_SignedData_init_bio
#  define ossl_cms_SignedData_init_bio OPENSSL_MANGLER(ossl_cms_SignedData_init_bio)
# endif
#else
# ifndef _ossl_cms_SignedData_init_bio
#  define _ossl_cms_SignedData_init_bio OPENSSL_MANGLER_ASM(ossl_cms_SignedData_init_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_SignerIdentifier_cert_cmp
#  define ossl_cms_SignerIdentifier_cert_cmp OPENSSL_MANGLER(ossl_cms_SignerIdentifier_cert_cmp)
# endif
#else
# ifndef _ossl_cms_SignerIdentifier_cert_cmp
#  define _ossl_cms_SignerIdentifier_cert_cmp OPENSSL_MANGLER_ASM(ossl_cms_SignerIdentifier_cert_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_SignerIdentifier_get0_signer_id
#  define ossl_cms_SignerIdentifier_get0_signer_id OPENSSL_MANGLER(ossl_cms_SignerIdentifier_get0_signer_id)
# endif
#else
# ifndef _ossl_cms_SignerIdentifier_get0_signer_id
#  define _ossl_cms_SignerIdentifier_get0_signer_id OPENSSL_MANGLER_ASM(ossl_cms_SignerIdentifier_get0_signer_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_SignerInfos_set_cmsctx
#  define ossl_cms_SignerInfos_set_cmsctx OPENSSL_MANGLER(ossl_cms_SignerInfos_set_cmsctx)
# endif
#else
# ifndef _ossl_cms_SignerInfos_set_cmsctx
#  define _ossl_cms_SignerInfos_set_cmsctx OPENSSL_MANGLER_ASM(ossl_cms_SignerInfos_set_cmsctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_check_signing_certs
#  define ossl_cms_check_signing_certs OPENSSL_MANGLER(ossl_cms_check_signing_certs)
# endif
#else
# ifndef _ossl_cms_check_signing_certs
#  define _ossl_cms_check_signing_certs OPENSSL_MANGLER_ASM(ossl_cms_check_signing_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_content_bio
#  define ossl_cms_content_bio OPENSSL_MANGLER(ossl_cms_content_bio)
# endif
#else
# ifndef _ossl_cms_content_bio
#  define _ossl_cms_content_bio OPENSSL_MANGLER_ASM(ossl_cms_content_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_ctx_get0_libctx
#  define ossl_cms_ctx_get0_libctx OPENSSL_MANGLER(ossl_cms_ctx_get0_libctx)
# endif
#else
# ifndef _ossl_cms_ctx_get0_libctx
#  define _ossl_cms_ctx_get0_libctx OPENSSL_MANGLER_ASM(ossl_cms_ctx_get0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_ctx_get0_propq
#  define ossl_cms_ctx_get0_propq OPENSSL_MANGLER(ossl_cms_ctx_get0_propq)
# endif
#else
# ifndef _ossl_cms_ctx_get0_propq
#  define _ossl_cms_ctx_get0_propq OPENSSL_MANGLER_ASM(ossl_cms_ctx_get0_propq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_dh_envelope
#  define ossl_cms_dh_envelope OPENSSL_MANGLER(ossl_cms_dh_envelope)
# endif
#else
# ifndef _ossl_cms_dh_envelope
#  define _ossl_cms_dh_envelope OPENSSL_MANGLER_ASM(ossl_cms_dh_envelope)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_ecdh_envelope
#  define ossl_cms_ecdh_envelope OPENSSL_MANGLER(ossl_cms_ecdh_envelope)
# endif
#else
# ifndef _ossl_cms_ecdh_envelope
#  define _ossl_cms_ecdh_envelope OPENSSL_MANGLER_ASM(ossl_cms_ecdh_envelope)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_ecdsa_dsa_sign
#  define ossl_cms_ecdsa_dsa_sign OPENSSL_MANGLER(ossl_cms_ecdsa_dsa_sign)
# endif
#else
# ifndef _ossl_cms_ecdsa_dsa_sign
#  define _ossl_cms_ecdsa_dsa_sign OPENSSL_MANGLER_ASM(ossl_cms_ecdsa_dsa_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_encode_Receipt
#  define ossl_cms_encode_Receipt OPENSSL_MANGLER(ossl_cms_encode_Receipt)
# endif
#else
# ifndef _ossl_cms_encode_Receipt
#  define _ossl_cms_encode_Receipt OPENSSL_MANGLER_ASM(ossl_cms_encode_Receipt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_env_asn1_ctrl
#  define ossl_cms_env_asn1_ctrl OPENSSL_MANGLER(ossl_cms_env_asn1_ctrl)
# endif
#else
# ifndef _ossl_cms_env_asn1_ctrl
#  define _ossl_cms_env_asn1_ctrl OPENSSL_MANGLER_ASM(ossl_cms_env_asn1_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_get0_auth_enveloped
#  define ossl_cms_get0_auth_enveloped OPENSSL_MANGLER(ossl_cms_get0_auth_enveloped)
# endif
#else
# ifndef _ossl_cms_get0_auth_enveloped
#  define _ossl_cms_get0_auth_enveloped OPENSSL_MANGLER_ASM(ossl_cms_get0_auth_enveloped)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_get0_cmsctx
#  define ossl_cms_get0_cmsctx OPENSSL_MANGLER(ossl_cms_get0_cmsctx)
# endif
#else
# ifndef _ossl_cms_get0_cmsctx
#  define _ossl_cms_get0_cmsctx OPENSSL_MANGLER_ASM(ossl_cms_get0_cmsctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_get0_env_enc_content
#  define ossl_cms_get0_env_enc_content OPENSSL_MANGLER(ossl_cms_get0_env_enc_content)
# endif
#else
# ifndef _ossl_cms_get0_env_enc_content
#  define _ossl_cms_get0_env_enc_content OPENSSL_MANGLER_ASM(ossl_cms_get0_env_enc_content)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_get0_enveloped
#  define ossl_cms_get0_enveloped OPENSSL_MANGLER(ossl_cms_get0_enveloped)
# endif
#else
# ifndef _ossl_cms_get0_enveloped
#  define _ossl_cms_get0_enveloped OPENSSL_MANGLER_ASM(ossl_cms_get0_enveloped)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_ias_cert_cmp
#  define ossl_cms_ias_cert_cmp OPENSSL_MANGLER(ossl_cms_ias_cert_cmp)
# endif
#else
# ifndef _ossl_cms_ias_cert_cmp
#  define _ossl_cms_ias_cert_cmp OPENSSL_MANGLER_ASM(ossl_cms_ias_cert_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_keyid_cert_cmp
#  define ossl_cms_keyid_cert_cmp OPENSSL_MANGLER(ossl_cms_keyid_cert_cmp)
# endif
#else
# ifndef _ossl_cms_keyid_cert_cmp
#  define _ossl_cms_keyid_cert_cmp OPENSSL_MANGLER_ASM(ossl_cms_keyid_cert_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_msgSigDigest_add1
#  define ossl_cms_msgSigDigest_add1 OPENSSL_MANGLER(ossl_cms_msgSigDigest_add1)
# endif
#else
# ifndef _ossl_cms_msgSigDigest_add1
#  define _ossl_cms_msgSigDigest_add1 OPENSSL_MANGLER_ASM(ossl_cms_msgSigDigest_add1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_pkey_get_ri_type
#  define ossl_cms_pkey_get_ri_type OPENSSL_MANGLER(ossl_cms_pkey_get_ri_type)
# endif
#else
# ifndef _ossl_cms_pkey_get_ri_type
#  define _ossl_cms_pkey_get_ri_type OPENSSL_MANGLER_ASM(ossl_cms_pkey_get_ri_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_pkey_is_ri_type_supported
#  define ossl_cms_pkey_is_ri_type_supported OPENSSL_MANGLER(ossl_cms_pkey_is_ri_type_supported)
# endif
#else
# ifndef _ossl_cms_pkey_is_ri_type_supported
#  define _ossl_cms_pkey_is_ri_type_supported OPENSSL_MANGLER_ASM(ossl_cms_pkey_is_ri_type_supported)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_resolve_libctx
#  define ossl_cms_resolve_libctx OPENSSL_MANGLER(ossl_cms_resolve_libctx)
# endif
#else
# ifndef _ossl_cms_resolve_libctx
#  define _ossl_cms_resolve_libctx OPENSSL_MANGLER_ASM(ossl_cms_resolve_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_rsa_envelope
#  define ossl_cms_rsa_envelope OPENSSL_MANGLER(ossl_cms_rsa_envelope)
# endif
#else
# ifndef _ossl_cms_rsa_envelope
#  define _ossl_cms_rsa_envelope OPENSSL_MANGLER_ASM(ossl_cms_rsa_envelope)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_rsa_sign
#  define ossl_cms_rsa_sign OPENSSL_MANGLER(ossl_cms_rsa_sign)
# endif
#else
# ifndef _ossl_cms_rsa_sign
#  define _ossl_cms_rsa_sign OPENSSL_MANGLER_ASM(ossl_cms_rsa_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_set1_SignerIdentifier
#  define ossl_cms_set1_SignerIdentifier OPENSSL_MANGLER(ossl_cms_set1_SignerIdentifier)
# endif
#else
# ifndef _ossl_cms_set1_SignerIdentifier
#  define _ossl_cms_set1_SignerIdentifier OPENSSL_MANGLER_ASM(ossl_cms_set1_SignerIdentifier)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_set1_ias
#  define ossl_cms_set1_ias OPENSSL_MANGLER(ossl_cms_set1_ias)
# endif
#else
# ifndef _ossl_cms_set1_ias
#  define _ossl_cms_set1_ias OPENSSL_MANGLER_ASM(ossl_cms_set1_ias)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_set1_keyid
#  define ossl_cms_set1_keyid OPENSSL_MANGLER(ossl_cms_set1_keyid)
# endif
#else
# ifndef _ossl_cms_set1_keyid
#  define _ossl_cms_set1_keyid OPENSSL_MANGLER_ASM(ossl_cms_set1_keyid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cms_si_check_attributes
#  define ossl_cms_si_check_attributes OPENSSL_MANGLER(ossl_cms_si_check_attributes)
# endif
#else
# ifndef _ossl_cms_si_check_attributes
#  define _ossl_cms_si_check_attributes OPENSSL_MANGLER_ASM(ossl_cms_si_check_attributes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_comp_zlib_cleanup
#  define ossl_comp_zlib_cleanup OPENSSL_MANGLER(ossl_comp_zlib_cleanup)
# endif
#else
# ifndef _ossl_comp_zlib_cleanup
#  define _ossl_comp_zlib_cleanup OPENSSL_MANGLER_ASM(ossl_comp_zlib_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_config_add_ssl_module
#  define ossl_config_add_ssl_module OPENSSL_MANGLER(ossl_config_add_ssl_module)
# endif
#else
# ifndef _ossl_config_add_ssl_module
#  define _ossl_config_add_ssl_module OPENSSL_MANGLER_ASM(ossl_config_add_ssl_module)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_config_int
#  define ossl_config_int OPENSSL_MANGLER(ossl_config_int)
# endif
#else
# ifndef _ossl_config_int
#  define _ossl_config_int OPENSSL_MANGLER_ASM(ossl_config_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_config_modules_free
#  define ossl_config_modules_free OPENSSL_MANGLER(ossl_config_modules_free)
# endif
#else
# ifndef _ossl_config_modules_free
#  define _ossl_config_modules_free OPENSSL_MANGLER_ASM(ossl_config_modules_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_core_bio_ctrl
#  define ossl_core_bio_ctrl OPENSSL_MANGLER(ossl_core_bio_ctrl)
# endif
#else
# ifndef _ossl_core_bio_ctrl
#  define _ossl_core_bio_ctrl OPENSSL_MANGLER_ASM(ossl_core_bio_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_core_bio_free
#  define ossl_core_bio_free OPENSSL_MANGLER(ossl_core_bio_free)
# endif
#else
# ifndef _ossl_core_bio_free
#  define _ossl_core_bio_free OPENSSL_MANGLER_ASM(ossl_core_bio_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_core_bio_gets
#  define ossl_core_bio_gets OPENSSL_MANGLER(ossl_core_bio_gets)
# endif
#else
# ifndef _ossl_core_bio_gets
#  define _ossl_core_bio_gets OPENSSL_MANGLER_ASM(ossl_core_bio_gets)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_core_bio_new_file
#  define ossl_core_bio_new_file OPENSSL_MANGLER(ossl_core_bio_new_file)
# endif
#else
# ifndef _ossl_core_bio_new_file
#  define _ossl_core_bio_new_file OPENSSL_MANGLER_ASM(ossl_core_bio_new_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_core_bio_new_from_bio
#  define ossl_core_bio_new_from_bio OPENSSL_MANGLER(ossl_core_bio_new_from_bio)
# endif
#else
# ifndef _ossl_core_bio_new_from_bio
#  define _ossl_core_bio_new_from_bio OPENSSL_MANGLER_ASM(ossl_core_bio_new_from_bio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_core_bio_new_mem_buf
#  define ossl_core_bio_new_mem_buf OPENSSL_MANGLER(ossl_core_bio_new_mem_buf)
# endif
#else
# ifndef _ossl_core_bio_new_mem_buf
#  define _ossl_core_bio_new_mem_buf OPENSSL_MANGLER_ASM(ossl_core_bio_new_mem_buf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_core_bio_puts
#  define ossl_core_bio_puts OPENSSL_MANGLER(ossl_core_bio_puts)
# endif
#else
# ifndef _ossl_core_bio_puts
#  define _ossl_core_bio_puts OPENSSL_MANGLER_ASM(ossl_core_bio_puts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_core_bio_read_ex
#  define ossl_core_bio_read_ex OPENSSL_MANGLER(ossl_core_bio_read_ex)
# endif
#else
# ifndef _ossl_core_bio_read_ex
#  define _ossl_core_bio_read_ex OPENSSL_MANGLER_ASM(ossl_core_bio_read_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_core_bio_up_ref
#  define ossl_core_bio_up_ref OPENSSL_MANGLER(ossl_core_bio_up_ref)
# endif
#else
# ifndef _ossl_core_bio_up_ref
#  define _ossl_core_bio_up_ref OPENSSL_MANGLER_ASM(ossl_core_bio_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_core_bio_vprintf
#  define ossl_core_bio_vprintf OPENSSL_MANGLER(ossl_core_bio_vprintf)
# endif
#else
# ifndef _ossl_core_bio_vprintf
#  define _ossl_core_bio_vprintf OPENSSL_MANGLER_ASM(ossl_core_bio_vprintf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_core_bio_write_ex
#  define ossl_core_bio_write_ex OPENSSL_MANGLER(ossl_core_bio_write_ex)
# endif
#else
# ifndef _ossl_core_bio_write_ex
#  define _ossl_core_bio_write_ex OPENSSL_MANGLER_ASM(ossl_core_bio_write_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_cpu_info_str
#  define ossl_cpu_info_str OPENSSL_MANGLER(ossl_cpu_info_str)
# endif
#else
# ifndef _ossl_cpu_info_str
#  define _ossl_cpu_info_str OPENSSL_MANGLER_ASM(ossl_cpu_info_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_crngt_cleanup_entropy
#  define ossl_crngt_cleanup_entropy OPENSSL_MANGLER(ossl_crngt_cleanup_entropy)
# endif
#else
# ifndef _ossl_crngt_cleanup_entropy
#  define _ossl_crngt_cleanup_entropy OPENSSL_MANGLER_ASM(ossl_crngt_cleanup_entropy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_crngt_get_entropy
#  define ossl_crngt_get_entropy OPENSSL_MANGLER(ossl_crngt_get_entropy)
# endif
#else
# ifndef _ossl_crngt_get_entropy
#  define _ossl_crngt_get_entropy OPENSSL_MANGLER_ASM(ossl_crngt_get_entropy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_crypto_alloc_ex_data_intern
#  define ossl_crypto_alloc_ex_data_intern OPENSSL_MANGLER(ossl_crypto_alloc_ex_data_intern)
# endif
#else
# ifndef _ossl_crypto_alloc_ex_data_intern
#  define _ossl_crypto_alloc_ex_data_intern OPENSSL_MANGLER_ASM(ossl_crypto_alloc_ex_data_intern)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_crypto_cleanup_all_ex_data_int
#  define ossl_crypto_cleanup_all_ex_data_int OPENSSL_MANGLER(ossl_crypto_cleanup_all_ex_data_int)
# endif
#else
# ifndef _ossl_crypto_cleanup_all_ex_data_int
#  define _ossl_crypto_cleanup_all_ex_data_int OPENSSL_MANGLER_ASM(ossl_crypto_cleanup_all_ex_data_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_crypto_ex_data_get_ossl_lib_ctx
#  define ossl_crypto_ex_data_get_ossl_lib_ctx OPENSSL_MANGLER(ossl_crypto_ex_data_get_ossl_lib_ctx)
# endif
#else
# ifndef _ossl_crypto_ex_data_get_ossl_lib_ctx
#  define _ossl_crypto_ex_data_get_ossl_lib_ctx OPENSSL_MANGLER_ASM(ossl_crypto_ex_data_get_ossl_lib_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_crypto_free_ex_index_ex
#  define ossl_crypto_free_ex_index_ex OPENSSL_MANGLER(ossl_crypto_free_ex_index_ex)
# endif
#else
# ifndef _ossl_crypto_free_ex_index_ex
#  define _ossl_crypto_free_ex_index_ex OPENSSL_MANGLER_ASM(ossl_crypto_free_ex_index_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_crypto_get_ex_new_index_ex
#  define ossl_crypto_get_ex_new_index_ex OPENSSL_MANGLER(ossl_crypto_get_ex_new_index_ex)
# endif
#else
# ifndef _ossl_crypto_get_ex_new_index_ex
#  define _ossl_crypto_get_ex_new_index_ex OPENSSL_MANGLER_ASM(ossl_crypto_get_ex_new_index_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_crypto_new_ex_data_ex
#  define ossl_crypto_new_ex_data_ex OPENSSL_MANGLER(ossl_crypto_new_ex_data_ex)
# endif
#else
# ifndef _ossl_crypto_new_ex_data_ex
#  define _ossl_crypto_new_ex_data_ex OPENSSL_MANGLER_ASM(ossl_crypto_new_ex_data_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ctx_global_properties
#  define ossl_ctx_global_properties OPENSSL_MANGLER(ossl_ctx_global_properties)
# endif
#else
# ifndef _ossl_ctx_global_properties
#  define _ossl_ctx_global_properties OPENSSL_MANGLER_ASM(ossl_ctx_global_properties)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ctx_thread_stop
#  define ossl_ctx_thread_stop OPENSSL_MANGLER(ossl_ctx_thread_stop)
# endif
#else
# ifndef _ossl_ctx_thread_stop
#  define _ossl_ctx_thread_stop OPENSSL_MANGLER_ASM(ossl_ctx_thread_stop)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ctype_check
#  define ossl_ctype_check OPENSSL_MANGLER(ossl_ctype_check)
# endif
#else
# ifndef _ossl_ctype_check
#  define _ossl_ctype_check OPENSSL_MANGLER_ASM(ossl_ctype_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_base_double_scalarmul_non_secret
#  define ossl_curve448_base_double_scalarmul_non_secret OPENSSL_MANGLER(ossl_curve448_base_double_scalarmul_non_secret)
# endif
#else
# ifndef _ossl_curve448_base_double_scalarmul_non_secret
#  define _ossl_curve448_base_double_scalarmul_non_secret OPENSSL_MANGLER_ASM(ossl_curve448_base_double_scalarmul_non_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_point_decode_like_eddsa_and_mul_by_ratio
#  define ossl_curve448_point_decode_like_eddsa_and_mul_by_ratio OPENSSL_MANGLER(ossl_curve448_point_decode_like_eddsa_and_mul_by_ratio)
# endif
#else
# ifndef _ossl_curve448_point_decode_like_eddsa_and_mul_by_ratio
#  define _ossl_curve448_point_decode_like_eddsa_and_mul_by_ratio OPENSSL_MANGLER_ASM(ossl_curve448_point_decode_like_eddsa_and_mul_by_ratio)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_point_destroy
#  define ossl_curve448_point_destroy OPENSSL_MANGLER(ossl_curve448_point_destroy)
# endif
#else
# ifndef _ossl_curve448_point_destroy
#  define _ossl_curve448_point_destroy OPENSSL_MANGLER_ASM(ossl_curve448_point_destroy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_point_double
#  define ossl_curve448_point_double OPENSSL_MANGLER(ossl_curve448_point_double)
# endif
#else
# ifndef _ossl_curve448_point_double
#  define _ossl_curve448_point_double OPENSSL_MANGLER_ASM(ossl_curve448_point_double)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_point_eq
#  define ossl_curve448_point_eq OPENSSL_MANGLER(ossl_curve448_point_eq)
# endif
#else
# ifndef _ossl_curve448_point_eq
#  define _ossl_curve448_point_eq OPENSSL_MANGLER_ASM(ossl_curve448_point_eq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_point_mul_by_ratio_and_encode_like_eddsa
#  define ossl_curve448_point_mul_by_ratio_and_encode_like_eddsa OPENSSL_MANGLER(ossl_curve448_point_mul_by_ratio_and_encode_like_eddsa)
# endif
#else
# ifndef _ossl_curve448_point_mul_by_ratio_and_encode_like_eddsa
#  define _ossl_curve448_point_mul_by_ratio_and_encode_like_eddsa OPENSSL_MANGLER_ASM(ossl_curve448_point_mul_by_ratio_and_encode_like_eddsa)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_point_mul_by_ratio_and_encode_like_x448
#  define ossl_curve448_point_mul_by_ratio_and_encode_like_x448 OPENSSL_MANGLER(ossl_curve448_point_mul_by_ratio_and_encode_like_x448)
# endif
#else
# ifndef _ossl_curve448_point_mul_by_ratio_and_encode_like_x448
#  define _ossl_curve448_point_mul_by_ratio_and_encode_like_x448 OPENSSL_MANGLER_ASM(ossl_curve448_point_mul_by_ratio_and_encode_like_x448)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_point_valid
#  define ossl_curve448_point_valid OPENSSL_MANGLER(ossl_curve448_point_valid)
# endif
#else
# ifndef _ossl_curve448_point_valid
#  define _ossl_curve448_point_valid OPENSSL_MANGLER_ASM(ossl_curve448_point_valid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_precomputed_base
#  define ossl_curve448_precomputed_base OPENSSL_MANGLER(ossl_curve448_precomputed_base)
# endif
#else
# ifndef _ossl_curve448_precomputed_base
#  define _ossl_curve448_precomputed_base OPENSSL_MANGLER_ASM(ossl_curve448_precomputed_base)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_precomputed_scalarmul
#  define ossl_curve448_precomputed_scalarmul OPENSSL_MANGLER(ossl_curve448_precomputed_scalarmul)
# endif
#else
# ifndef _ossl_curve448_precomputed_scalarmul
#  define _ossl_curve448_precomputed_scalarmul OPENSSL_MANGLER_ASM(ossl_curve448_precomputed_scalarmul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_scalar_add
#  define ossl_curve448_scalar_add OPENSSL_MANGLER(ossl_curve448_scalar_add)
# endif
#else
# ifndef _ossl_curve448_scalar_add
#  define _ossl_curve448_scalar_add OPENSSL_MANGLER_ASM(ossl_curve448_scalar_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_scalar_decode
#  define ossl_curve448_scalar_decode OPENSSL_MANGLER(ossl_curve448_scalar_decode)
# endif
#else
# ifndef _ossl_curve448_scalar_decode
#  define _ossl_curve448_scalar_decode OPENSSL_MANGLER_ASM(ossl_curve448_scalar_decode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_scalar_decode_long
#  define ossl_curve448_scalar_decode_long OPENSSL_MANGLER(ossl_curve448_scalar_decode_long)
# endif
#else
# ifndef _ossl_curve448_scalar_decode_long
#  define _ossl_curve448_scalar_decode_long OPENSSL_MANGLER_ASM(ossl_curve448_scalar_decode_long)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_scalar_destroy
#  define ossl_curve448_scalar_destroy OPENSSL_MANGLER(ossl_curve448_scalar_destroy)
# endif
#else
# ifndef _ossl_curve448_scalar_destroy
#  define _ossl_curve448_scalar_destroy OPENSSL_MANGLER_ASM(ossl_curve448_scalar_destroy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_scalar_encode
#  define ossl_curve448_scalar_encode OPENSSL_MANGLER(ossl_curve448_scalar_encode)
# endif
#else
# ifndef _ossl_curve448_scalar_encode
#  define _ossl_curve448_scalar_encode OPENSSL_MANGLER_ASM(ossl_curve448_scalar_encode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_scalar_halve
#  define ossl_curve448_scalar_halve OPENSSL_MANGLER(ossl_curve448_scalar_halve)
# endif
#else
# ifndef _ossl_curve448_scalar_halve
#  define _ossl_curve448_scalar_halve OPENSSL_MANGLER_ASM(ossl_curve448_scalar_halve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_scalar_mul
#  define ossl_curve448_scalar_mul OPENSSL_MANGLER(ossl_curve448_scalar_mul)
# endif
#else
# ifndef _ossl_curve448_scalar_mul
#  define _ossl_curve448_scalar_mul OPENSSL_MANGLER_ASM(ossl_curve448_scalar_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_scalar_sub
#  define ossl_curve448_scalar_sub OPENSSL_MANGLER(ossl_curve448_scalar_sub)
# endif
#else
# ifndef _ossl_curve448_scalar_sub
#  define _ossl_curve448_scalar_sub OPENSSL_MANGLER_ASM(ossl_curve448_scalar_sub)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_curve448_wnaf_base
#  define ossl_curve448_wnaf_base OPENSSL_MANGLER(ossl_curve448_wnaf_base)
# endif
#else
# ifndef _ossl_curve448_wnaf_base
#  define _ossl_curve448_wnaf_base OPENSSL_MANGLER_ASM(ossl_curve448_wnaf_base)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_d2i_DH_PUBKEY
#  define ossl_d2i_DH_PUBKEY OPENSSL_MANGLER(ossl_d2i_DH_PUBKEY)
# endif
#else
# ifndef _ossl_d2i_DH_PUBKEY
#  define _ossl_d2i_DH_PUBKEY OPENSSL_MANGLER_ASM(ossl_d2i_DH_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_d2i_DHx_PUBKEY
#  define ossl_d2i_DHx_PUBKEY OPENSSL_MANGLER(ossl_d2i_DHx_PUBKEY)
# endif
#else
# ifndef _ossl_d2i_DHx_PUBKEY
#  define _ossl_d2i_DHx_PUBKEY OPENSSL_MANGLER_ASM(ossl_d2i_DHx_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_d2i_ED25519_PUBKEY
#  define ossl_d2i_ED25519_PUBKEY OPENSSL_MANGLER(ossl_d2i_ED25519_PUBKEY)
# endif
#else
# ifndef _ossl_d2i_ED25519_PUBKEY
#  define _ossl_d2i_ED25519_PUBKEY OPENSSL_MANGLER_ASM(ossl_d2i_ED25519_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_d2i_ED448_PUBKEY
#  define ossl_d2i_ED448_PUBKEY OPENSSL_MANGLER(ossl_d2i_ED448_PUBKEY)
# endif
#else
# ifndef _ossl_d2i_ED448_PUBKEY
#  define _ossl_d2i_ED448_PUBKEY OPENSSL_MANGLER_ASM(ossl_d2i_ED448_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_d2i_PUBKEY_legacy
#  define ossl_d2i_PUBKEY_legacy OPENSSL_MANGLER(ossl_d2i_PUBKEY_legacy)
# endif
#else
# ifndef _ossl_d2i_PUBKEY_legacy
#  define _ossl_d2i_PUBKEY_legacy OPENSSL_MANGLER_ASM(ossl_d2i_PUBKEY_legacy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_d2i_PrivateKey_legacy
#  define ossl_d2i_PrivateKey_legacy OPENSSL_MANGLER(ossl_d2i_PrivateKey_legacy)
# endif
#else
# ifndef _ossl_d2i_PrivateKey_legacy
#  define _ossl_d2i_PrivateKey_legacy OPENSSL_MANGLER_ASM(ossl_d2i_PrivateKey_legacy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_d2i_X25519_PUBKEY
#  define ossl_d2i_X25519_PUBKEY OPENSSL_MANGLER(ossl_d2i_X25519_PUBKEY)
# endif
#else
# ifndef _ossl_d2i_X25519_PUBKEY
#  define _ossl_d2i_X25519_PUBKEY OPENSSL_MANGLER_ASM(ossl_d2i_X25519_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_d2i_X448_PUBKEY
#  define ossl_d2i_X448_PUBKEY OPENSSL_MANGLER(ossl_d2i_X448_PUBKEY)
# endif
#else
# ifndef _ossl_d2i_X448_PUBKEY
#  define _ossl_d2i_X448_PUBKEY OPENSSL_MANGLER_ASM(ossl_d2i_X448_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_d2i_X509_PUBKEY_INTERNAL
#  define ossl_d2i_X509_PUBKEY_INTERNAL OPENSSL_MANGLER(ossl_d2i_X509_PUBKEY_INTERNAL)
# endif
#else
# ifndef _ossl_d2i_X509_PUBKEY_INTERNAL
#  define _ossl_d2i_X509_PUBKEY_INTERNAL OPENSSL_MANGLER_ASM(ossl_d2i_X509_PUBKEY_INTERNAL)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decode_der_dsa_sig
#  define ossl_decode_der_dsa_sig OPENSSL_MANGLER(ossl_decode_der_dsa_sig)
# endif
#else
# ifndef _ossl_decode_der_dsa_sig
#  define _ossl_decode_der_dsa_sig OPENSSL_MANGLER_ASM(ossl_decode_der_dsa_sig)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decode_der_integer
#  define ossl_decode_der_integer OPENSSL_MANGLER(ossl_decode_der_integer)
# endif
#else
# ifndef _ossl_decode_der_integer
#  define _ossl_decode_der_integer OPENSSL_MANGLER_ASM(ossl_decode_der_integer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decode_der_length
#  define ossl_decode_der_length OPENSSL_MANGLER(ossl_decode_der_length)
# endif
#else
# ifndef _ossl_decode_der_length
#  define _ossl_decode_der_length OPENSSL_MANGLER_ASM(ossl_decode_der_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decoder_ctx_add_decoder_inst
#  define ossl_decoder_ctx_add_decoder_inst OPENSSL_MANGLER(ossl_decoder_ctx_add_decoder_inst)
# endif
#else
# ifndef _ossl_decoder_ctx_add_decoder_inst
#  define _ossl_decoder_ctx_add_decoder_inst OPENSSL_MANGLER_ASM(ossl_decoder_ctx_add_decoder_inst)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decoder_ctx_setup_for_pkey
#  define ossl_decoder_ctx_setup_for_pkey OPENSSL_MANGLER(ossl_decoder_ctx_setup_for_pkey)
# endif
#else
# ifndef _ossl_decoder_ctx_setup_for_pkey
#  define _ossl_decoder_ctx_setup_for_pkey OPENSSL_MANGLER_ASM(ossl_decoder_ctx_setup_for_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decoder_fetch_by_number
#  define ossl_decoder_fetch_by_number OPENSSL_MANGLER(ossl_decoder_fetch_by_number)
# endif
#else
# ifndef _ossl_decoder_fetch_by_number
#  define _ossl_decoder_fetch_by_number OPENSSL_MANGLER_ASM(ossl_decoder_fetch_by_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decoder_from_algorithm
#  define ossl_decoder_from_algorithm OPENSSL_MANGLER(ossl_decoder_from_algorithm)
# endif
#else
# ifndef _ossl_decoder_from_algorithm
#  define _ossl_decoder_from_algorithm OPENSSL_MANGLER_ASM(ossl_decoder_from_algorithm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decoder_get_number
#  define ossl_decoder_get_number OPENSSL_MANGLER(ossl_decoder_get_number)
# endif
#else
# ifndef _ossl_decoder_get_number
#  define _ossl_decoder_get_number OPENSSL_MANGLER_ASM(ossl_decoder_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decoder_instance_free
#  define ossl_decoder_instance_free OPENSSL_MANGLER(ossl_decoder_instance_free)
# endif
#else
# ifndef _ossl_decoder_instance_free
#  define _ossl_decoder_instance_free OPENSSL_MANGLER_ASM(ossl_decoder_instance_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decoder_instance_new
#  define ossl_decoder_instance_new OPENSSL_MANGLER(ossl_decoder_instance_new)
# endif
#else
# ifndef _ossl_decoder_instance_new
#  define _ossl_decoder_instance_new OPENSSL_MANGLER_ASM(ossl_decoder_instance_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decoder_parsed_properties
#  define ossl_decoder_parsed_properties OPENSSL_MANGLER(ossl_decoder_parsed_properties)
# endif
#else
# ifndef _ossl_decoder_parsed_properties
#  define _ossl_decoder_parsed_properties OPENSSL_MANGLER_ASM(ossl_decoder_parsed_properties)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decoder_store_cache_flush
#  define ossl_decoder_store_cache_flush OPENSSL_MANGLER(ossl_decoder_store_cache_flush)
# endif
#else
# ifndef _ossl_decoder_store_cache_flush
#  define _ossl_decoder_store_cache_flush OPENSSL_MANGLER_ASM(ossl_decoder_store_cache_flush)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_decoder_store_remove_all_provided
#  define ossl_decoder_store_remove_all_provided OPENSSL_MANGLER(ossl_decoder_store_remove_all_provided)
# endif
#else
# ifndef _ossl_decoder_store_remove_all_provided
#  define _ossl_decoder_store_remove_all_provided OPENSSL_MANGLER_ASM(ossl_decoder_store_remove_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_default_provider_init
#  define ossl_default_provider_init OPENSSL_MANGLER(ossl_default_provider_init)
# endif
#else
# ifndef _ossl_default_provider_init
#  define _ossl_default_provider_init OPENSSL_MANGLER_ASM(ossl_default_provider_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_des_cbc_functions
#  define ossl_des_cbc_functions OPENSSL_MANGLER(ossl_des_cbc_functions)
# endif
#else
# ifndef _ossl_des_cbc_functions
#  define _ossl_des_cbc_functions OPENSSL_MANGLER_ASM(ossl_des_cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_des_cfb1_functions
#  define ossl_des_cfb1_functions OPENSSL_MANGLER(ossl_des_cfb1_functions)
# endif
#else
# ifndef _ossl_des_cfb1_functions
#  define _ossl_des_cfb1_functions OPENSSL_MANGLER_ASM(ossl_des_cfb1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_des_cfb64_functions
#  define ossl_des_cfb64_functions OPENSSL_MANGLER(ossl_des_cfb64_functions)
# endif
#else
# ifndef _ossl_des_cfb64_functions
#  define _ossl_des_cfb64_functions OPENSSL_MANGLER_ASM(ossl_des_cfb64_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_des_cfb8_functions
#  define ossl_des_cfb8_functions OPENSSL_MANGLER(ossl_des_cfb8_functions)
# endif
#else
# ifndef _ossl_des_cfb8_functions
#  define _ossl_des_cfb8_functions OPENSSL_MANGLER_ASM(ossl_des_cfb8_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_des_ecb_functions
#  define ossl_des_ecb_functions OPENSSL_MANGLER(ossl_des_ecb_functions)
# endif
#else
# ifndef _ossl_des_ecb_functions
#  define _ossl_des_ecb_functions OPENSSL_MANGLER_ASM(ossl_des_ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_des_ofb64_functions
#  define ossl_des_ofb64_functions OPENSSL_MANGLER(ossl_des_ofb64_functions)
# endif
#else
# ifndef _ossl_des_ofb64_functions
#  define _ossl_des_ofb64_functions OPENSSL_MANGLER_ASM(ossl_des_ofb64_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_asn1_meth
#  define ossl_dh_asn1_meth OPENSSL_MANGLER(ossl_dh_asn1_meth)
# endif
#else
# ifndef _ossl_dh_asn1_meth
#  define _ossl_dh_asn1_meth OPENSSL_MANGLER_ASM(ossl_dh_asn1_meth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_buf2key
#  define ossl_dh_buf2key OPENSSL_MANGLER(ossl_dh_buf2key)
# endif
#else
# ifndef _ossl_dh_buf2key
#  define _ossl_dh_buf2key OPENSSL_MANGLER_ASM(ossl_dh_buf2key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_cache_named_group
#  define ossl_dh_cache_named_group OPENSSL_MANGLER(ossl_dh_cache_named_group)
# endif
#else
# ifndef _ossl_dh_cache_named_group
#  define _ossl_dh_cache_named_group OPENSSL_MANGLER_ASM(ossl_dh_cache_named_group)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_check_key
#  define ossl_dh_check_key OPENSSL_MANGLER(ossl_dh_check_key)
# endif
#else
# ifndef _ossl_dh_check_key
#  define _ossl_dh_check_key OPENSSL_MANGLER_ASM(ossl_dh_check_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_check_pairwise
#  define ossl_dh_check_pairwise OPENSSL_MANGLER(ossl_dh_check_pairwise)
# endif
#else
# ifndef _ossl_dh_check_pairwise
#  define _ossl_dh_check_pairwise OPENSSL_MANGLER_ASM(ossl_dh_check_pairwise)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_check_priv_key
#  define ossl_dh_check_priv_key OPENSSL_MANGLER(ossl_dh_check_priv_key)
# endif
#else
# ifndef _ossl_dh_check_priv_key
#  define _ossl_dh_check_priv_key OPENSSL_MANGLER_ASM(ossl_dh_check_priv_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_check_pub_key_partial
#  define ossl_dh_check_pub_key_partial OPENSSL_MANGLER(ossl_dh_check_pub_key_partial)
# endif
#else
# ifndef _ossl_dh_check_pub_key_partial
#  define _ossl_dh_check_pub_key_partial OPENSSL_MANGLER_ASM(ossl_dh_check_pub_key_partial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_compute_key
#  define ossl_dh_compute_key OPENSSL_MANGLER(ossl_dh_compute_key)
# endif
#else
# ifndef _ossl_dh_compute_key
#  define _ossl_dh_compute_key OPENSSL_MANGLER_ASM(ossl_dh_compute_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_dup
#  define ossl_dh_dup OPENSSL_MANGLER(ossl_dh_dup)
# endif
#else
# ifndef _ossl_dh_dup
#  define _ossl_dh_dup OPENSSL_MANGLER_ASM(ossl_dh_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_gen_type_id2name
#  define ossl_dh_gen_type_id2name OPENSSL_MANGLER(ossl_dh_gen_type_id2name)
# endif
#else
# ifndef _ossl_dh_gen_type_id2name
#  define _ossl_dh_gen_type_id2name OPENSSL_MANGLER_ASM(ossl_dh_gen_type_id2name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_gen_type_name2id
#  define ossl_dh_gen_type_name2id OPENSSL_MANGLER(ossl_dh_gen_type_name2id)
# endif
#else
# ifndef _ossl_dh_gen_type_name2id
#  define _ossl_dh_gen_type_name2id OPENSSL_MANGLER_ASM(ossl_dh_gen_type_name2id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_generate_ffc_parameters
#  define ossl_dh_generate_ffc_parameters OPENSSL_MANGLER(ossl_dh_generate_ffc_parameters)
# endif
#else
# ifndef _ossl_dh_generate_ffc_parameters
#  define _ossl_dh_generate_ffc_parameters OPENSSL_MANGLER_ASM(ossl_dh_generate_ffc_parameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_generate_public_key
#  define ossl_dh_generate_public_key OPENSSL_MANGLER(ossl_dh_generate_public_key)
# endif
#else
# ifndef _ossl_dh_generate_public_key
#  define _ossl_dh_generate_public_key OPENSSL_MANGLER_ASM(ossl_dh_generate_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_get0_nid
#  define ossl_dh_get0_nid OPENSSL_MANGLER(ossl_dh_get0_nid)
# endif
#else
# ifndef _ossl_dh_get0_nid
#  define _ossl_dh_get0_nid OPENSSL_MANGLER_ASM(ossl_dh_get0_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_get0_params
#  define ossl_dh_get0_params OPENSSL_MANGLER(ossl_dh_get0_params)
# endif
#else
# ifndef _ossl_dh_get0_params
#  define _ossl_dh_get0_params OPENSSL_MANGLER_ASM(ossl_dh_get0_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_get_method
#  define ossl_dh_get_method OPENSSL_MANGLER(ossl_dh_get_method)
# endif
#else
# ifndef _ossl_dh_get_method
#  define _ossl_dh_get_method OPENSSL_MANGLER_ASM(ossl_dh_get_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_get_named_group_uid_from_size
#  define ossl_dh_get_named_group_uid_from_size OPENSSL_MANGLER(ossl_dh_get_named_group_uid_from_size)
# endif
#else
# ifndef _ossl_dh_get_named_group_uid_from_size
#  define _ossl_dh_get_named_group_uid_from_size OPENSSL_MANGLER_ASM(ossl_dh_get_named_group_uid_from_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_is_foreign
#  define ossl_dh_is_foreign OPENSSL_MANGLER(ossl_dh_is_foreign)
# endif
#else
# ifndef _ossl_dh_is_foreign
#  define _ossl_dh_is_foreign OPENSSL_MANGLER_ASM(ossl_dh_is_foreign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_is_named_safe_prime_group
#  define ossl_dh_is_named_safe_prime_group OPENSSL_MANGLER(ossl_dh_is_named_safe_prime_group)
# endif
#else
# ifndef _ossl_dh_is_named_safe_prime_group
#  define _ossl_dh_is_named_safe_prime_group OPENSSL_MANGLER_ASM(ossl_dh_is_named_safe_prime_group)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_kdf_X9_42_asn1
#  define ossl_dh_kdf_X9_42_asn1 OPENSSL_MANGLER(ossl_dh_kdf_X9_42_asn1)
# endif
#else
# ifndef _ossl_dh_kdf_X9_42_asn1
#  define _ossl_dh_kdf_X9_42_asn1 OPENSSL_MANGLER_ASM(ossl_dh_kdf_X9_42_asn1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_key2buf
#  define ossl_dh_key2buf OPENSSL_MANGLER(ossl_dh_key2buf)
# endif
#else
# ifndef _ossl_dh_key2buf
#  define _ossl_dh_key2buf OPENSSL_MANGLER_ASM(ossl_dh_key2buf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_key_from_pkcs8
#  define ossl_dh_key_from_pkcs8 OPENSSL_MANGLER(ossl_dh_key_from_pkcs8)
# endif
#else
# ifndef _ossl_dh_key_from_pkcs8
#  define _ossl_dh_key_from_pkcs8 OPENSSL_MANGLER_ASM(ossl_dh_key_from_pkcs8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_key_fromdata
#  define ossl_dh_key_fromdata OPENSSL_MANGLER(ossl_dh_key_fromdata)
# endif
#else
# ifndef _ossl_dh_key_fromdata
#  define _ossl_dh_key_fromdata OPENSSL_MANGLER_ASM(ossl_dh_key_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_key_todata
#  define ossl_dh_key_todata OPENSSL_MANGLER(ossl_dh_key_todata)
# endif
#else
# ifndef _ossl_dh_key_todata
#  define _ossl_dh_key_todata OPENSSL_MANGLER_ASM(ossl_dh_key_todata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_keyexch_functions
#  define ossl_dh_keyexch_functions OPENSSL_MANGLER(ossl_dh_keyexch_functions)
# endif
#else
# ifndef _ossl_dh_keyexch_functions
#  define _ossl_dh_keyexch_functions OPENSSL_MANGLER_ASM(ossl_dh_keyexch_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_keymgmt_functions
#  define ossl_dh_keymgmt_functions OPENSSL_MANGLER(ossl_dh_keymgmt_functions)
# endif
#else
# ifndef _ossl_dh_keymgmt_functions
#  define _ossl_dh_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_dh_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_new_by_nid_ex
#  define ossl_dh_new_by_nid_ex OPENSSL_MANGLER(ossl_dh_new_by_nid_ex)
# endif
#else
# ifndef _ossl_dh_new_by_nid_ex
#  define _ossl_dh_new_by_nid_ex OPENSSL_MANGLER_ASM(ossl_dh_new_by_nid_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_new_ex
#  define ossl_dh_new_ex OPENSSL_MANGLER(ossl_dh_new_ex)
# endif
#else
# ifndef _ossl_dh_new_ex
#  define _ossl_dh_new_ex OPENSSL_MANGLER_ASM(ossl_dh_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_params_fromdata
#  define ossl_dh_params_fromdata OPENSSL_MANGLER(ossl_dh_params_fromdata)
# endif
#else
# ifndef _ossl_dh_params_fromdata
#  define _ossl_dh_params_fromdata OPENSSL_MANGLER_ASM(ossl_dh_params_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_params_todata
#  define ossl_dh_params_todata OPENSSL_MANGLER(ossl_dh_params_todata)
# endif
#else
# ifndef _ossl_dh_params_todata
#  define _ossl_dh_params_todata OPENSSL_MANGLER_ASM(ossl_dh_params_todata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_pkey_method
#  define ossl_dh_pkey_method OPENSSL_MANGLER(ossl_dh_pkey_method)
# endif
#else
# ifndef _ossl_dh_pkey_method
#  define _ossl_dh_pkey_method OPENSSL_MANGLER_ASM(ossl_dh_pkey_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_set0_libctx
#  define ossl_dh_set0_libctx OPENSSL_MANGLER(ossl_dh_set0_libctx)
# endif
#else
# ifndef _ossl_dh_set0_libctx
#  define _ossl_dh_set0_libctx OPENSSL_MANGLER_ASM(ossl_dh_set0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_DH_der_encoder_functions
#  define ossl_dh_to_DH_der_encoder_functions OPENSSL_MANGLER(ossl_dh_to_DH_der_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_DH_der_encoder_functions
#  define _ossl_dh_to_DH_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_DH_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_DH_pem_encoder_functions
#  define ossl_dh_to_DH_pem_encoder_functions OPENSSL_MANGLER(ossl_dh_to_DH_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_DH_pem_encoder_functions
#  define _ossl_dh_to_DH_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_DH_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define ossl_dh_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_dh_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define _ossl_dh_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define ossl_dh_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_dh_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define _ossl_dh_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_PKCS3_der_encoder_functions
#  define ossl_dh_to_PKCS3_der_encoder_functions OPENSSL_MANGLER(ossl_dh_to_PKCS3_der_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_PKCS3_der_encoder_functions
#  define _ossl_dh_to_PKCS3_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_PKCS3_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_PKCS3_pem_encoder_functions
#  define ossl_dh_to_PKCS3_pem_encoder_functions OPENSSL_MANGLER(ossl_dh_to_PKCS3_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_PKCS3_pem_encoder_functions
#  define _ossl_dh_to_PKCS3_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_PKCS3_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_PrivateKeyInfo_der_encoder_functions
#  define ossl_dh_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_dh_to_PrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_PrivateKeyInfo_der_encoder_functions
#  define _ossl_dh_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_PrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_PrivateKeyInfo_pem_encoder_functions
#  define ossl_dh_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_dh_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_PrivateKeyInfo_pem_encoder_functions
#  define _ossl_dh_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_SubjectPublicKeyInfo_der_encoder_functions
#  define ossl_dh_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_dh_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_SubjectPublicKeyInfo_der_encoder_functions
#  define _ossl_dh_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define ossl_dh_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_dh_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define _ossl_dh_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_text_encoder_functions
#  define ossl_dh_to_text_encoder_functions OPENSSL_MANGLER(ossl_dh_to_text_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_text_encoder_functions
#  define _ossl_dh_to_text_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_text_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_type_specific_params_der_encoder_functions
#  define ossl_dh_to_type_specific_params_der_encoder_functions OPENSSL_MANGLER(ossl_dh_to_type_specific_params_der_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_type_specific_params_der_encoder_functions
#  define _ossl_dh_to_type_specific_params_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_type_specific_params_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dh_to_type_specific_params_pem_encoder_functions
#  define ossl_dh_to_type_specific_params_pem_encoder_functions OPENSSL_MANGLER(ossl_dh_to_type_specific_params_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dh_to_type_specific_params_pem_encoder_functions
#  define _ossl_dh_to_type_specific_params_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dh_to_type_specific_params_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_asn1_meth
#  define ossl_dhx_asn1_meth OPENSSL_MANGLER(ossl_dhx_asn1_meth)
# endif
#else
# ifndef _ossl_dhx_asn1_meth
#  define _ossl_dhx_asn1_meth OPENSSL_MANGLER_ASM(ossl_dhx_asn1_meth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_keymgmt_functions
#  define ossl_dhx_keymgmt_functions OPENSSL_MANGLER(ossl_dhx_keymgmt_functions)
# endif
#else
# ifndef _ossl_dhx_keymgmt_functions
#  define _ossl_dhx_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_dhx_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_pkey_method
#  define ossl_dhx_pkey_method OPENSSL_MANGLER(ossl_dhx_pkey_method)
# endif
#else
# ifndef _ossl_dhx_pkey_method
#  define _ossl_dhx_pkey_method OPENSSL_MANGLER_ASM(ossl_dhx_pkey_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_DHX_der_encoder_functions
#  define ossl_dhx_to_DHX_der_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_DHX_der_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_DHX_der_encoder_functions
#  define _ossl_dhx_to_DHX_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_DHX_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_DHX_pem_encoder_functions
#  define ossl_dhx_to_DHX_pem_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_DHX_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_DHX_pem_encoder_functions
#  define _ossl_dhx_to_DHX_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_DHX_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define ossl_dhx_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define _ossl_dhx_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define ossl_dhx_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define _ossl_dhx_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_PrivateKeyInfo_der_encoder_functions
#  define ossl_dhx_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_PrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_PrivateKeyInfo_der_encoder_functions
#  define _ossl_dhx_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_PrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_PrivateKeyInfo_pem_encoder_functions
#  define ossl_dhx_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_PrivateKeyInfo_pem_encoder_functions
#  define _ossl_dhx_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_SubjectPublicKeyInfo_der_encoder_functions
#  define ossl_dhx_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_SubjectPublicKeyInfo_der_encoder_functions
#  define _ossl_dhx_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define ossl_dhx_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define _ossl_dhx_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_X9_42_der_encoder_functions
#  define ossl_dhx_to_X9_42_der_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_X9_42_der_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_X9_42_der_encoder_functions
#  define _ossl_dhx_to_X9_42_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_X9_42_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_X9_42_pem_encoder_functions
#  define ossl_dhx_to_X9_42_pem_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_X9_42_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_X9_42_pem_encoder_functions
#  define _ossl_dhx_to_X9_42_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_X9_42_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_text_encoder_functions
#  define ossl_dhx_to_text_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_text_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_text_encoder_functions
#  define _ossl_dhx_to_text_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_text_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_type_specific_params_der_encoder_functions
#  define ossl_dhx_to_type_specific_params_der_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_type_specific_params_der_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_type_specific_params_der_encoder_functions
#  define _ossl_dhx_to_type_specific_params_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_type_specific_params_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dhx_to_type_specific_params_pem_encoder_functions
#  define ossl_dhx_to_type_specific_params_pem_encoder_functions OPENSSL_MANGLER(ossl_dhx_to_type_specific_params_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dhx_to_type_specific_params_pem_encoder_functions
#  define _ossl_dhx_to_type_specific_params_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dhx_to_type_specific_params_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_digest_default_get_params
#  define ossl_digest_default_get_params OPENSSL_MANGLER(ossl_digest_default_get_params)
# endif
#else
# ifndef _ossl_digest_default_get_params
#  define _ossl_digest_default_get_params OPENSSL_MANGLER_ASM(ossl_digest_default_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_digest_default_gettable_params
#  define ossl_digest_default_gettable_params OPENSSL_MANGLER(ossl_digest_default_gettable_params)
# endif
#else
# ifndef _ossl_digest_default_gettable_params
#  define _ossl_digest_default_gettable_params OPENSSL_MANGLER_ASM(ossl_digest_default_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_digest_get_approved_nid
#  define ossl_digest_get_approved_nid OPENSSL_MANGLER(ossl_digest_get_approved_nid)
# endif
#else
# ifndef _ossl_digest_get_approved_nid
#  define _ossl_digest_get_approved_nid OPENSSL_MANGLER_ASM(ossl_digest_get_approved_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_digest_get_approved_nid_with_sha1
#  define ossl_digest_get_approved_nid_with_sha1 OPENSSL_MANGLER(ossl_digest_get_approved_nid_with_sha1)
# endif
#else
# ifndef _ossl_digest_get_approved_nid_with_sha1
#  define _ossl_digest_get_approved_nid_with_sha1 OPENSSL_MANGLER_ASM(ossl_digest_get_approved_nid_with_sha1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_digest_is_allowed
#  define ossl_digest_is_allowed OPENSSL_MANGLER(ossl_digest_is_allowed)
# endif
#else
# ifndef _ossl_digest_is_allowed
#  define _ossl_digest_is_allowed OPENSSL_MANGLER_ASM(ossl_digest_is_allowed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_digest_md_to_nid
#  define ossl_digest_md_to_nid OPENSSL_MANGLER(ossl_digest_md_to_nid)
# endif
#else
# ifndef _ossl_digest_md_to_nid
#  define _ossl_digest_md_to_nid OPENSSL_MANGLER_ASM(ossl_digest_md_to_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_digest_rsa_sign_get_md_nid
#  define ossl_digest_rsa_sign_get_md_nid OPENSSL_MANGLER(ossl_digest_rsa_sign_get_md_nid)
# endif
#else
# ifndef _ossl_digest_rsa_sign_get_md_nid
#  define _ossl_digest_rsa_sign_get_md_nid OPENSSL_MANGLER_ASM(ossl_digest_rsa_sign_get_md_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_do_PVK_header
#  define ossl_do_PVK_header OPENSSL_MANGLER(ossl_do_PVK_header)
# endif
#else
# ifndef _ossl_do_PVK_header
#  define _ossl_do_PVK_header OPENSSL_MANGLER_ASM(ossl_do_PVK_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_do_blob_header
#  define ossl_do_blob_header OPENSSL_MANGLER(ossl_do_blob_header)
# endif
#else
# ifndef _ossl_do_blob_header
#  define _ossl_do_blob_header OPENSSL_MANGLER_ASM(ossl_do_blob_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_do_ex_data_init
#  define ossl_do_ex_data_init OPENSSL_MANGLER(ossl_do_ex_data_init)
# endif
#else
# ifndef _ossl_do_ex_data_init
#  define _ossl_do_ex_data_init OPENSSL_MANGLER_ASM(ossl_do_ex_data_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_drbg_clear_seed
#  define ossl_drbg_clear_seed OPENSSL_MANGLER(ossl_drbg_clear_seed)
# endif
#else
# ifndef _ossl_drbg_clear_seed
#  define _ossl_drbg_clear_seed OPENSSL_MANGLER_ASM(ossl_drbg_clear_seed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_drbg_ctr_functions
#  define ossl_drbg_ctr_functions OPENSSL_MANGLER(ossl_drbg_ctr_functions)
# endif
#else
# ifndef _ossl_drbg_ctr_functions
#  define _ossl_drbg_ctr_functions OPENSSL_MANGLER_ASM(ossl_drbg_ctr_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_drbg_enable_locking
#  define ossl_drbg_enable_locking OPENSSL_MANGLER(ossl_drbg_enable_locking)
# endif
#else
# ifndef _ossl_drbg_enable_locking
#  define _ossl_drbg_enable_locking OPENSSL_MANGLER_ASM(ossl_drbg_enable_locking)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_drbg_get_ctx_params
#  define ossl_drbg_get_ctx_params OPENSSL_MANGLER(ossl_drbg_get_ctx_params)
# endif
#else
# ifndef _ossl_drbg_get_ctx_params
#  define _ossl_drbg_get_ctx_params OPENSSL_MANGLER_ASM(ossl_drbg_get_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_drbg_get_seed
#  define ossl_drbg_get_seed OPENSSL_MANGLER(ossl_drbg_get_seed)
# endif
#else
# ifndef _ossl_drbg_get_seed
#  define _ossl_drbg_get_seed OPENSSL_MANGLER_ASM(ossl_drbg_get_seed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_drbg_hash_functions
#  define ossl_drbg_hash_functions OPENSSL_MANGLER(ossl_drbg_hash_functions)
# endif
#else
# ifndef _ossl_drbg_hash_functions
#  define _ossl_drbg_hash_functions OPENSSL_MANGLER_ASM(ossl_drbg_hash_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_drbg_lock
#  define ossl_drbg_lock OPENSSL_MANGLER(ossl_drbg_lock)
# endif
#else
# ifndef _ossl_drbg_lock
#  define _ossl_drbg_lock OPENSSL_MANGLER_ASM(ossl_drbg_lock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_drbg_ossl_hmac_functions
#  define ossl_drbg_ossl_hmac_functions OPENSSL_MANGLER(ossl_drbg_ossl_hmac_functions)
# endif
#else
# ifndef _ossl_drbg_ossl_hmac_functions
#  define _ossl_drbg_ossl_hmac_functions OPENSSL_MANGLER_ASM(ossl_drbg_ossl_hmac_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_drbg_set_ctx_params
#  define ossl_drbg_set_ctx_params OPENSSL_MANGLER(ossl_drbg_set_ctx_params)
# endif
#else
# ifndef _ossl_drbg_set_ctx_params
#  define _ossl_drbg_set_ctx_params OPENSSL_MANGLER_ASM(ossl_drbg_set_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_drbg_unlock
#  define ossl_drbg_unlock OPENSSL_MANGLER(ossl_drbg_unlock)
# endif
#else
# ifndef _ossl_drbg_unlock
#  define _ossl_drbg_unlock OPENSSL_MANGLER_ASM(ossl_drbg_unlock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_asn1_meths
#  define ossl_dsa_asn1_meths OPENSSL_MANGLER(ossl_dsa_asn1_meths)
# endif
#else
# ifndef _ossl_dsa_asn1_meths
#  define _ossl_dsa_asn1_meths OPENSSL_MANGLER_ASM(ossl_dsa_asn1_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_check_key
#  define ossl_dsa_check_key OPENSSL_MANGLER(ossl_dsa_check_key)
# endif
#else
# ifndef _ossl_dsa_check_key
#  define _ossl_dsa_check_key OPENSSL_MANGLER_ASM(ossl_dsa_check_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_check_pairwise
#  define ossl_dsa_check_pairwise OPENSSL_MANGLER(ossl_dsa_check_pairwise)
# endif
#else
# ifndef _ossl_dsa_check_pairwise
#  define _ossl_dsa_check_pairwise OPENSSL_MANGLER_ASM(ossl_dsa_check_pairwise)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_check_params
#  define ossl_dsa_check_params OPENSSL_MANGLER(ossl_dsa_check_params)
# endif
#else
# ifndef _ossl_dsa_check_params
#  define _ossl_dsa_check_params OPENSSL_MANGLER_ASM(ossl_dsa_check_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_check_priv_key
#  define ossl_dsa_check_priv_key OPENSSL_MANGLER(ossl_dsa_check_priv_key)
# endif
#else
# ifndef _ossl_dsa_check_priv_key
#  define _ossl_dsa_check_priv_key OPENSSL_MANGLER_ASM(ossl_dsa_check_priv_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_check_pub_key
#  define ossl_dsa_check_pub_key OPENSSL_MANGLER(ossl_dsa_check_pub_key)
# endif
#else
# ifndef _ossl_dsa_check_pub_key
#  define _ossl_dsa_check_pub_key OPENSSL_MANGLER_ASM(ossl_dsa_check_pub_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_check_pub_key_partial
#  define ossl_dsa_check_pub_key_partial OPENSSL_MANGLER(ossl_dsa_check_pub_key_partial)
# endif
#else
# ifndef _ossl_dsa_check_pub_key_partial
#  define _ossl_dsa_check_pub_key_partial OPENSSL_MANGLER_ASM(ossl_dsa_check_pub_key_partial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_do_sign_int
#  define ossl_dsa_do_sign_int OPENSSL_MANGLER(ossl_dsa_do_sign_int)
# endif
#else
# ifndef _ossl_dsa_do_sign_int
#  define _ossl_dsa_do_sign_int OPENSSL_MANGLER_ASM(ossl_dsa_do_sign_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_dup
#  define ossl_dsa_dup OPENSSL_MANGLER(ossl_dsa_dup)
# endif
#else
# ifndef _ossl_dsa_dup
#  define _ossl_dsa_dup OPENSSL_MANGLER_ASM(ossl_dsa_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_ffc_params_fromdata
#  define ossl_dsa_ffc_params_fromdata OPENSSL_MANGLER(ossl_dsa_ffc_params_fromdata)
# endif
#else
# ifndef _ossl_dsa_ffc_params_fromdata
#  define _ossl_dsa_ffc_params_fromdata OPENSSL_MANGLER_ASM(ossl_dsa_ffc_params_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_generate_ffc_parameters
#  define ossl_dsa_generate_ffc_parameters OPENSSL_MANGLER(ossl_dsa_generate_ffc_parameters)
# endif
#else
# ifndef _ossl_dsa_generate_ffc_parameters
#  define _ossl_dsa_generate_ffc_parameters OPENSSL_MANGLER_ASM(ossl_dsa_generate_ffc_parameters)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_generate_public_key
#  define ossl_dsa_generate_public_key OPENSSL_MANGLER(ossl_dsa_generate_public_key)
# endif
#else
# ifndef _ossl_dsa_generate_public_key
#  define _ossl_dsa_generate_public_key OPENSSL_MANGLER_ASM(ossl_dsa_generate_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_get0_params
#  define ossl_dsa_get0_params OPENSSL_MANGLER(ossl_dsa_get0_params)
# endif
#else
# ifndef _ossl_dsa_get0_params
#  define _ossl_dsa_get0_params OPENSSL_MANGLER_ASM(ossl_dsa_get0_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_is_foreign
#  define ossl_dsa_is_foreign OPENSSL_MANGLER(ossl_dsa_is_foreign)
# endif
#else
# ifndef _ossl_dsa_is_foreign
#  define _ossl_dsa_is_foreign OPENSSL_MANGLER_ASM(ossl_dsa_is_foreign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_key_from_pkcs8
#  define ossl_dsa_key_from_pkcs8 OPENSSL_MANGLER(ossl_dsa_key_from_pkcs8)
# endif
#else
# ifndef _ossl_dsa_key_from_pkcs8
#  define _ossl_dsa_key_from_pkcs8 OPENSSL_MANGLER_ASM(ossl_dsa_key_from_pkcs8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_key_fromdata
#  define ossl_dsa_key_fromdata OPENSSL_MANGLER(ossl_dsa_key_fromdata)
# endif
#else
# ifndef _ossl_dsa_key_fromdata
#  define _ossl_dsa_key_fromdata OPENSSL_MANGLER_ASM(ossl_dsa_key_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_keymgmt_functions
#  define ossl_dsa_keymgmt_functions OPENSSL_MANGLER(ossl_dsa_keymgmt_functions)
# endif
#else
# ifndef _ossl_dsa_keymgmt_functions
#  define _ossl_dsa_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_dsa_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_new
#  define ossl_dsa_new OPENSSL_MANGLER(ossl_dsa_new)
# endif
#else
# ifndef _ossl_dsa_new
#  define _ossl_dsa_new OPENSSL_MANGLER_ASM(ossl_dsa_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_pkey_method
#  define ossl_dsa_pkey_method OPENSSL_MANGLER(ossl_dsa_pkey_method)
# endif
#else
# ifndef _ossl_dsa_pkey_method
#  define _ossl_dsa_pkey_method OPENSSL_MANGLER_ASM(ossl_dsa_pkey_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_set0_libctx
#  define ossl_dsa_set0_libctx OPENSSL_MANGLER(ossl_dsa_set0_libctx)
# endif
#else
# ifndef _ossl_dsa_set0_libctx
#  define _ossl_dsa_set0_libctx OPENSSL_MANGLER_ASM(ossl_dsa_set0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_sign_int
#  define ossl_dsa_sign_int OPENSSL_MANGLER(ossl_dsa_sign_int)
# endif
#else
# ifndef _ossl_dsa_sign_int
#  define _ossl_dsa_sign_int OPENSSL_MANGLER_ASM(ossl_dsa_sign_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_signature_functions
#  define ossl_dsa_signature_functions OPENSSL_MANGLER(ossl_dsa_signature_functions)
# endif
#else
# ifndef _ossl_dsa_signature_functions
#  define _ossl_dsa_signature_functions OPENSSL_MANGLER_ASM(ossl_dsa_signature_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_DSA_der_encoder_functions
#  define ossl_dsa_to_DSA_der_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_DSA_der_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_DSA_der_encoder_functions
#  define _ossl_dsa_to_DSA_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_DSA_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_DSA_pem_encoder_functions
#  define ossl_dsa_to_DSA_pem_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_DSA_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_DSA_pem_encoder_functions
#  define _ossl_dsa_to_DSA_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_DSA_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define ossl_dsa_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define _ossl_dsa_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define ossl_dsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define _ossl_dsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_PrivateKeyInfo_der_encoder_functions
#  define ossl_dsa_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_PrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_PrivateKeyInfo_der_encoder_functions
#  define _ossl_dsa_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_PrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_PrivateKeyInfo_pem_encoder_functions
#  define ossl_dsa_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_PrivateKeyInfo_pem_encoder_functions
#  define _ossl_dsa_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_SubjectPublicKeyInfo_der_encoder_functions
#  define ossl_dsa_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_SubjectPublicKeyInfo_der_encoder_functions
#  define _ossl_dsa_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define ossl_dsa_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define _ossl_dsa_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_msblob_encoder_functions
#  define ossl_dsa_to_msblob_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_msblob_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_msblob_encoder_functions
#  define _ossl_dsa_to_msblob_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_msblob_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_pvk_encoder_functions
#  define ossl_dsa_to_pvk_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_pvk_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_pvk_encoder_functions
#  define _ossl_dsa_to_pvk_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_pvk_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_text_encoder_functions
#  define ossl_dsa_to_text_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_text_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_text_encoder_functions
#  define _ossl_dsa_to_text_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_text_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_type_specific_der_encoder_functions
#  define ossl_dsa_to_type_specific_der_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_type_specific_der_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_type_specific_der_encoder_functions
#  define _ossl_dsa_to_type_specific_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_type_specific_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_dsa_to_type_specific_pem_encoder_functions
#  define ossl_dsa_to_type_specific_pem_encoder_functions OPENSSL_MANGLER(ossl_dsa_to_type_specific_pem_encoder_functions)
# endif
#else
# ifndef _ossl_dsa_to_type_specific_pem_encoder_functions
#  define _ossl_dsa_to_type_specific_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_dsa_to_type_specific_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_add
#  define ossl_ec_GF2m_simple_add OPENSSL_MANGLER(ossl_ec_GF2m_simple_add)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_add
#  define _ossl_ec_GF2m_simple_add OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_cmp
#  define ossl_ec_GF2m_simple_cmp OPENSSL_MANGLER(ossl_ec_GF2m_simple_cmp)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_cmp
#  define _ossl_ec_GF2m_simple_cmp OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_dbl
#  define ossl_ec_GF2m_simple_dbl OPENSSL_MANGLER(ossl_ec_GF2m_simple_dbl)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_dbl
#  define _ossl_ec_GF2m_simple_dbl OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_dbl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_field_div
#  define ossl_ec_GF2m_simple_field_div OPENSSL_MANGLER(ossl_ec_GF2m_simple_field_div)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_field_div
#  define _ossl_ec_GF2m_simple_field_div OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_field_div)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_field_mul
#  define ossl_ec_GF2m_simple_field_mul OPENSSL_MANGLER(ossl_ec_GF2m_simple_field_mul)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_field_mul
#  define _ossl_ec_GF2m_simple_field_mul OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_field_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_field_sqr
#  define ossl_ec_GF2m_simple_field_sqr OPENSSL_MANGLER(ossl_ec_GF2m_simple_field_sqr)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_field_sqr
#  define _ossl_ec_GF2m_simple_field_sqr OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_field_sqr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_group_check_discriminant
#  define ossl_ec_GF2m_simple_group_check_discriminant OPENSSL_MANGLER(ossl_ec_GF2m_simple_group_check_discriminant)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_group_check_discriminant
#  define _ossl_ec_GF2m_simple_group_check_discriminant OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_group_check_discriminant)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_group_clear_finish
#  define ossl_ec_GF2m_simple_group_clear_finish OPENSSL_MANGLER(ossl_ec_GF2m_simple_group_clear_finish)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_group_clear_finish
#  define _ossl_ec_GF2m_simple_group_clear_finish OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_group_clear_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_group_copy
#  define ossl_ec_GF2m_simple_group_copy OPENSSL_MANGLER(ossl_ec_GF2m_simple_group_copy)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_group_copy
#  define _ossl_ec_GF2m_simple_group_copy OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_group_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_group_finish
#  define ossl_ec_GF2m_simple_group_finish OPENSSL_MANGLER(ossl_ec_GF2m_simple_group_finish)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_group_finish
#  define _ossl_ec_GF2m_simple_group_finish OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_group_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_group_get_curve
#  define ossl_ec_GF2m_simple_group_get_curve OPENSSL_MANGLER(ossl_ec_GF2m_simple_group_get_curve)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_group_get_curve
#  define _ossl_ec_GF2m_simple_group_get_curve OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_group_get_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_group_get_degree
#  define ossl_ec_GF2m_simple_group_get_degree OPENSSL_MANGLER(ossl_ec_GF2m_simple_group_get_degree)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_group_get_degree
#  define _ossl_ec_GF2m_simple_group_get_degree OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_group_get_degree)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_group_init
#  define ossl_ec_GF2m_simple_group_init OPENSSL_MANGLER(ossl_ec_GF2m_simple_group_init)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_group_init
#  define _ossl_ec_GF2m_simple_group_init OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_group_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_group_set_curve
#  define ossl_ec_GF2m_simple_group_set_curve OPENSSL_MANGLER(ossl_ec_GF2m_simple_group_set_curve)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_group_set_curve
#  define _ossl_ec_GF2m_simple_group_set_curve OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_group_set_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_invert
#  define ossl_ec_GF2m_simple_invert OPENSSL_MANGLER(ossl_ec_GF2m_simple_invert)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_invert
#  define _ossl_ec_GF2m_simple_invert OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_invert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_is_at_infinity
#  define ossl_ec_GF2m_simple_is_at_infinity OPENSSL_MANGLER(ossl_ec_GF2m_simple_is_at_infinity)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_is_at_infinity
#  define _ossl_ec_GF2m_simple_is_at_infinity OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_is_at_infinity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_is_on_curve
#  define ossl_ec_GF2m_simple_is_on_curve OPENSSL_MANGLER(ossl_ec_GF2m_simple_is_on_curve)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_is_on_curve
#  define _ossl_ec_GF2m_simple_is_on_curve OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_is_on_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_make_affine
#  define ossl_ec_GF2m_simple_make_affine OPENSSL_MANGLER(ossl_ec_GF2m_simple_make_affine)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_make_affine
#  define _ossl_ec_GF2m_simple_make_affine OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_make_affine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_oct2point
#  define ossl_ec_GF2m_simple_oct2point OPENSSL_MANGLER(ossl_ec_GF2m_simple_oct2point)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_oct2point
#  define _ossl_ec_GF2m_simple_oct2point OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_oct2point)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_point2oct
#  define ossl_ec_GF2m_simple_point2oct OPENSSL_MANGLER(ossl_ec_GF2m_simple_point2oct)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_point2oct
#  define _ossl_ec_GF2m_simple_point2oct OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_point2oct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_point_clear_finish
#  define ossl_ec_GF2m_simple_point_clear_finish OPENSSL_MANGLER(ossl_ec_GF2m_simple_point_clear_finish)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_point_clear_finish
#  define _ossl_ec_GF2m_simple_point_clear_finish OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_point_clear_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_point_copy
#  define ossl_ec_GF2m_simple_point_copy OPENSSL_MANGLER(ossl_ec_GF2m_simple_point_copy)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_point_copy
#  define _ossl_ec_GF2m_simple_point_copy OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_point_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_point_finish
#  define ossl_ec_GF2m_simple_point_finish OPENSSL_MANGLER(ossl_ec_GF2m_simple_point_finish)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_point_finish
#  define _ossl_ec_GF2m_simple_point_finish OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_point_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_point_get_affine_coordinates
#  define ossl_ec_GF2m_simple_point_get_affine_coordinates OPENSSL_MANGLER(ossl_ec_GF2m_simple_point_get_affine_coordinates)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_point_get_affine_coordinates
#  define _ossl_ec_GF2m_simple_point_get_affine_coordinates OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_point_get_affine_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_point_init
#  define ossl_ec_GF2m_simple_point_init OPENSSL_MANGLER(ossl_ec_GF2m_simple_point_init)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_point_init
#  define _ossl_ec_GF2m_simple_point_init OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_point_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_point_set_affine_coordinates
#  define ossl_ec_GF2m_simple_point_set_affine_coordinates OPENSSL_MANGLER(ossl_ec_GF2m_simple_point_set_affine_coordinates)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_point_set_affine_coordinates
#  define _ossl_ec_GF2m_simple_point_set_affine_coordinates OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_point_set_affine_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_point_set_to_infinity
#  define ossl_ec_GF2m_simple_point_set_to_infinity OPENSSL_MANGLER(ossl_ec_GF2m_simple_point_set_to_infinity)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_point_set_to_infinity
#  define _ossl_ec_GF2m_simple_point_set_to_infinity OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_point_set_to_infinity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_points_make_affine
#  define ossl_ec_GF2m_simple_points_make_affine OPENSSL_MANGLER(ossl_ec_GF2m_simple_points_make_affine)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_points_make_affine
#  define _ossl_ec_GF2m_simple_points_make_affine OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_points_make_affine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GF2m_simple_set_compressed_coordinates
#  define ossl_ec_GF2m_simple_set_compressed_coordinates OPENSSL_MANGLER(ossl_ec_GF2m_simple_set_compressed_coordinates)
# endif
#else
# ifndef _ossl_ec_GF2m_simple_set_compressed_coordinates
#  define _ossl_ec_GF2m_simple_set_compressed_coordinates OPENSSL_MANGLER_ASM(ossl_ec_GF2m_simple_set_compressed_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_mont_field_decode
#  define ossl_ec_GFp_mont_field_decode OPENSSL_MANGLER(ossl_ec_GFp_mont_field_decode)
# endif
#else
# ifndef _ossl_ec_GFp_mont_field_decode
#  define _ossl_ec_GFp_mont_field_decode OPENSSL_MANGLER_ASM(ossl_ec_GFp_mont_field_decode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_mont_field_encode
#  define ossl_ec_GFp_mont_field_encode OPENSSL_MANGLER(ossl_ec_GFp_mont_field_encode)
# endif
#else
# ifndef _ossl_ec_GFp_mont_field_encode
#  define _ossl_ec_GFp_mont_field_encode OPENSSL_MANGLER_ASM(ossl_ec_GFp_mont_field_encode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_mont_field_inv
#  define ossl_ec_GFp_mont_field_inv OPENSSL_MANGLER(ossl_ec_GFp_mont_field_inv)
# endif
#else
# ifndef _ossl_ec_GFp_mont_field_inv
#  define _ossl_ec_GFp_mont_field_inv OPENSSL_MANGLER_ASM(ossl_ec_GFp_mont_field_inv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_mont_field_mul
#  define ossl_ec_GFp_mont_field_mul OPENSSL_MANGLER(ossl_ec_GFp_mont_field_mul)
# endif
#else
# ifndef _ossl_ec_GFp_mont_field_mul
#  define _ossl_ec_GFp_mont_field_mul OPENSSL_MANGLER_ASM(ossl_ec_GFp_mont_field_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_mont_field_set_to_one
#  define ossl_ec_GFp_mont_field_set_to_one OPENSSL_MANGLER(ossl_ec_GFp_mont_field_set_to_one)
# endif
#else
# ifndef _ossl_ec_GFp_mont_field_set_to_one
#  define _ossl_ec_GFp_mont_field_set_to_one OPENSSL_MANGLER_ASM(ossl_ec_GFp_mont_field_set_to_one)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_mont_field_sqr
#  define ossl_ec_GFp_mont_field_sqr OPENSSL_MANGLER(ossl_ec_GFp_mont_field_sqr)
# endif
#else
# ifndef _ossl_ec_GFp_mont_field_sqr
#  define _ossl_ec_GFp_mont_field_sqr OPENSSL_MANGLER_ASM(ossl_ec_GFp_mont_field_sqr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_mont_group_clear_finish
#  define ossl_ec_GFp_mont_group_clear_finish OPENSSL_MANGLER(ossl_ec_GFp_mont_group_clear_finish)
# endif
#else
# ifndef _ossl_ec_GFp_mont_group_clear_finish
#  define _ossl_ec_GFp_mont_group_clear_finish OPENSSL_MANGLER_ASM(ossl_ec_GFp_mont_group_clear_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_mont_group_copy
#  define ossl_ec_GFp_mont_group_copy OPENSSL_MANGLER(ossl_ec_GFp_mont_group_copy)
# endif
#else
# ifndef _ossl_ec_GFp_mont_group_copy
#  define _ossl_ec_GFp_mont_group_copy OPENSSL_MANGLER_ASM(ossl_ec_GFp_mont_group_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_mont_group_finish
#  define ossl_ec_GFp_mont_group_finish OPENSSL_MANGLER(ossl_ec_GFp_mont_group_finish)
# endif
#else
# ifndef _ossl_ec_GFp_mont_group_finish
#  define _ossl_ec_GFp_mont_group_finish OPENSSL_MANGLER_ASM(ossl_ec_GFp_mont_group_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_mont_group_init
#  define ossl_ec_GFp_mont_group_init OPENSSL_MANGLER(ossl_ec_GFp_mont_group_init)
# endif
#else
# ifndef _ossl_ec_GFp_mont_group_init
#  define _ossl_ec_GFp_mont_group_init OPENSSL_MANGLER_ASM(ossl_ec_GFp_mont_group_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_mont_group_set_curve
#  define ossl_ec_GFp_mont_group_set_curve OPENSSL_MANGLER(ossl_ec_GFp_mont_group_set_curve)
# endif
#else
# ifndef _ossl_ec_GFp_mont_group_set_curve
#  define _ossl_ec_GFp_mont_group_set_curve OPENSSL_MANGLER_ASM(ossl_ec_GFp_mont_group_set_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_nist_field_mul
#  define ossl_ec_GFp_nist_field_mul OPENSSL_MANGLER(ossl_ec_GFp_nist_field_mul)
# endif
#else
# ifndef _ossl_ec_GFp_nist_field_mul
#  define _ossl_ec_GFp_nist_field_mul OPENSSL_MANGLER_ASM(ossl_ec_GFp_nist_field_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_nist_field_sqr
#  define ossl_ec_GFp_nist_field_sqr OPENSSL_MANGLER(ossl_ec_GFp_nist_field_sqr)
# endif
#else
# ifndef _ossl_ec_GFp_nist_field_sqr
#  define _ossl_ec_GFp_nist_field_sqr OPENSSL_MANGLER_ASM(ossl_ec_GFp_nist_field_sqr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_nist_group_copy
#  define ossl_ec_GFp_nist_group_copy OPENSSL_MANGLER(ossl_ec_GFp_nist_group_copy)
# endif
#else
# ifndef _ossl_ec_GFp_nist_group_copy
#  define _ossl_ec_GFp_nist_group_copy OPENSSL_MANGLER_ASM(ossl_ec_GFp_nist_group_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_nist_group_set_curve
#  define ossl_ec_GFp_nist_group_set_curve OPENSSL_MANGLER(ossl_ec_GFp_nist_group_set_curve)
# endif
#else
# ifndef _ossl_ec_GFp_nist_group_set_curve
#  define _ossl_ec_GFp_nist_group_set_curve OPENSSL_MANGLER_ASM(ossl_ec_GFp_nist_group_set_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_add
#  define ossl_ec_GFp_simple_add OPENSSL_MANGLER(ossl_ec_GFp_simple_add)
# endif
#else
# ifndef _ossl_ec_GFp_simple_add
#  define _ossl_ec_GFp_simple_add OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_blind_coordinates
#  define ossl_ec_GFp_simple_blind_coordinates OPENSSL_MANGLER(ossl_ec_GFp_simple_blind_coordinates)
# endif
#else
# ifndef _ossl_ec_GFp_simple_blind_coordinates
#  define _ossl_ec_GFp_simple_blind_coordinates OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_blind_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_cmp
#  define ossl_ec_GFp_simple_cmp OPENSSL_MANGLER(ossl_ec_GFp_simple_cmp)
# endif
#else
# ifndef _ossl_ec_GFp_simple_cmp
#  define _ossl_ec_GFp_simple_cmp OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_dbl
#  define ossl_ec_GFp_simple_dbl OPENSSL_MANGLER(ossl_ec_GFp_simple_dbl)
# endif
#else
# ifndef _ossl_ec_GFp_simple_dbl
#  define _ossl_ec_GFp_simple_dbl OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_dbl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_field_inv
#  define ossl_ec_GFp_simple_field_inv OPENSSL_MANGLER(ossl_ec_GFp_simple_field_inv)
# endif
#else
# ifndef _ossl_ec_GFp_simple_field_inv
#  define _ossl_ec_GFp_simple_field_inv OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_field_inv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_field_mul
#  define ossl_ec_GFp_simple_field_mul OPENSSL_MANGLER(ossl_ec_GFp_simple_field_mul)
# endif
#else
# ifndef _ossl_ec_GFp_simple_field_mul
#  define _ossl_ec_GFp_simple_field_mul OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_field_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_field_sqr
#  define ossl_ec_GFp_simple_field_sqr OPENSSL_MANGLER(ossl_ec_GFp_simple_field_sqr)
# endif
#else
# ifndef _ossl_ec_GFp_simple_field_sqr
#  define _ossl_ec_GFp_simple_field_sqr OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_field_sqr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_get_Jprojective_coordinates_GFp
#  define ossl_ec_GFp_simple_get_Jprojective_coordinates_GFp OPENSSL_MANGLER(ossl_ec_GFp_simple_get_Jprojective_coordinates_GFp)
# endif
#else
# ifndef _ossl_ec_GFp_simple_get_Jprojective_coordinates_GFp
#  define _ossl_ec_GFp_simple_get_Jprojective_coordinates_GFp OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_get_Jprojective_coordinates_GFp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_group_check_discriminant
#  define ossl_ec_GFp_simple_group_check_discriminant OPENSSL_MANGLER(ossl_ec_GFp_simple_group_check_discriminant)
# endif
#else
# ifndef _ossl_ec_GFp_simple_group_check_discriminant
#  define _ossl_ec_GFp_simple_group_check_discriminant OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_group_check_discriminant)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_group_clear_finish
#  define ossl_ec_GFp_simple_group_clear_finish OPENSSL_MANGLER(ossl_ec_GFp_simple_group_clear_finish)
# endif
#else
# ifndef _ossl_ec_GFp_simple_group_clear_finish
#  define _ossl_ec_GFp_simple_group_clear_finish OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_group_clear_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_group_copy
#  define ossl_ec_GFp_simple_group_copy OPENSSL_MANGLER(ossl_ec_GFp_simple_group_copy)
# endif
#else
# ifndef _ossl_ec_GFp_simple_group_copy
#  define _ossl_ec_GFp_simple_group_copy OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_group_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_group_finish
#  define ossl_ec_GFp_simple_group_finish OPENSSL_MANGLER(ossl_ec_GFp_simple_group_finish)
# endif
#else
# ifndef _ossl_ec_GFp_simple_group_finish
#  define _ossl_ec_GFp_simple_group_finish OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_group_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_group_get_curve
#  define ossl_ec_GFp_simple_group_get_curve OPENSSL_MANGLER(ossl_ec_GFp_simple_group_get_curve)
# endif
#else
# ifndef _ossl_ec_GFp_simple_group_get_curve
#  define _ossl_ec_GFp_simple_group_get_curve OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_group_get_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_group_get_degree
#  define ossl_ec_GFp_simple_group_get_degree OPENSSL_MANGLER(ossl_ec_GFp_simple_group_get_degree)
# endif
#else
# ifndef _ossl_ec_GFp_simple_group_get_degree
#  define _ossl_ec_GFp_simple_group_get_degree OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_group_get_degree)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_group_init
#  define ossl_ec_GFp_simple_group_init OPENSSL_MANGLER(ossl_ec_GFp_simple_group_init)
# endif
#else
# ifndef _ossl_ec_GFp_simple_group_init
#  define _ossl_ec_GFp_simple_group_init OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_group_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_group_set_curve
#  define ossl_ec_GFp_simple_group_set_curve OPENSSL_MANGLER(ossl_ec_GFp_simple_group_set_curve)
# endif
#else
# ifndef _ossl_ec_GFp_simple_group_set_curve
#  define _ossl_ec_GFp_simple_group_set_curve OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_group_set_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_invert
#  define ossl_ec_GFp_simple_invert OPENSSL_MANGLER(ossl_ec_GFp_simple_invert)
# endif
#else
# ifndef _ossl_ec_GFp_simple_invert
#  define _ossl_ec_GFp_simple_invert OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_invert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_is_at_infinity
#  define ossl_ec_GFp_simple_is_at_infinity OPENSSL_MANGLER(ossl_ec_GFp_simple_is_at_infinity)
# endif
#else
# ifndef _ossl_ec_GFp_simple_is_at_infinity
#  define _ossl_ec_GFp_simple_is_at_infinity OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_is_at_infinity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_is_on_curve
#  define ossl_ec_GFp_simple_is_on_curve OPENSSL_MANGLER(ossl_ec_GFp_simple_is_on_curve)
# endif
#else
# ifndef _ossl_ec_GFp_simple_is_on_curve
#  define _ossl_ec_GFp_simple_is_on_curve OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_is_on_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_ladder_post
#  define ossl_ec_GFp_simple_ladder_post OPENSSL_MANGLER(ossl_ec_GFp_simple_ladder_post)
# endif
#else
# ifndef _ossl_ec_GFp_simple_ladder_post
#  define _ossl_ec_GFp_simple_ladder_post OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_ladder_post)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_ladder_pre
#  define ossl_ec_GFp_simple_ladder_pre OPENSSL_MANGLER(ossl_ec_GFp_simple_ladder_pre)
# endif
#else
# ifndef _ossl_ec_GFp_simple_ladder_pre
#  define _ossl_ec_GFp_simple_ladder_pre OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_ladder_pre)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_ladder_step
#  define ossl_ec_GFp_simple_ladder_step OPENSSL_MANGLER(ossl_ec_GFp_simple_ladder_step)
# endif
#else
# ifndef _ossl_ec_GFp_simple_ladder_step
#  define _ossl_ec_GFp_simple_ladder_step OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_ladder_step)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_make_affine
#  define ossl_ec_GFp_simple_make_affine OPENSSL_MANGLER(ossl_ec_GFp_simple_make_affine)
# endif
#else
# ifndef _ossl_ec_GFp_simple_make_affine
#  define _ossl_ec_GFp_simple_make_affine OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_make_affine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_oct2point
#  define ossl_ec_GFp_simple_oct2point OPENSSL_MANGLER(ossl_ec_GFp_simple_oct2point)
# endif
#else
# ifndef _ossl_ec_GFp_simple_oct2point
#  define _ossl_ec_GFp_simple_oct2point OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_oct2point)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_point2oct
#  define ossl_ec_GFp_simple_point2oct OPENSSL_MANGLER(ossl_ec_GFp_simple_point2oct)
# endif
#else
# ifndef _ossl_ec_GFp_simple_point2oct
#  define _ossl_ec_GFp_simple_point2oct OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_point2oct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_point_clear_finish
#  define ossl_ec_GFp_simple_point_clear_finish OPENSSL_MANGLER(ossl_ec_GFp_simple_point_clear_finish)
# endif
#else
# ifndef _ossl_ec_GFp_simple_point_clear_finish
#  define _ossl_ec_GFp_simple_point_clear_finish OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_point_clear_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_point_copy
#  define ossl_ec_GFp_simple_point_copy OPENSSL_MANGLER(ossl_ec_GFp_simple_point_copy)
# endif
#else
# ifndef _ossl_ec_GFp_simple_point_copy
#  define _ossl_ec_GFp_simple_point_copy OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_point_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_point_finish
#  define ossl_ec_GFp_simple_point_finish OPENSSL_MANGLER(ossl_ec_GFp_simple_point_finish)
# endif
#else
# ifndef _ossl_ec_GFp_simple_point_finish
#  define _ossl_ec_GFp_simple_point_finish OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_point_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_point_get_affine_coordinates
#  define ossl_ec_GFp_simple_point_get_affine_coordinates OPENSSL_MANGLER(ossl_ec_GFp_simple_point_get_affine_coordinates)
# endif
#else
# ifndef _ossl_ec_GFp_simple_point_get_affine_coordinates
#  define _ossl_ec_GFp_simple_point_get_affine_coordinates OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_point_get_affine_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_point_init
#  define ossl_ec_GFp_simple_point_init OPENSSL_MANGLER(ossl_ec_GFp_simple_point_init)
# endif
#else
# ifndef _ossl_ec_GFp_simple_point_init
#  define _ossl_ec_GFp_simple_point_init OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_point_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_point_set_affine_coordinates
#  define ossl_ec_GFp_simple_point_set_affine_coordinates OPENSSL_MANGLER(ossl_ec_GFp_simple_point_set_affine_coordinates)
# endif
#else
# ifndef _ossl_ec_GFp_simple_point_set_affine_coordinates
#  define _ossl_ec_GFp_simple_point_set_affine_coordinates OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_point_set_affine_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_point_set_to_infinity
#  define ossl_ec_GFp_simple_point_set_to_infinity OPENSSL_MANGLER(ossl_ec_GFp_simple_point_set_to_infinity)
# endif
#else
# ifndef _ossl_ec_GFp_simple_point_set_to_infinity
#  define _ossl_ec_GFp_simple_point_set_to_infinity OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_point_set_to_infinity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_points_make_affine
#  define ossl_ec_GFp_simple_points_make_affine OPENSSL_MANGLER(ossl_ec_GFp_simple_points_make_affine)
# endif
#else
# ifndef _ossl_ec_GFp_simple_points_make_affine
#  define _ossl_ec_GFp_simple_points_make_affine OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_points_make_affine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_set_Jprojective_coordinates_GFp
#  define ossl_ec_GFp_simple_set_Jprojective_coordinates_GFp OPENSSL_MANGLER(ossl_ec_GFp_simple_set_Jprojective_coordinates_GFp)
# endif
#else
# ifndef _ossl_ec_GFp_simple_set_Jprojective_coordinates_GFp
#  define _ossl_ec_GFp_simple_set_Jprojective_coordinates_GFp OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_set_Jprojective_coordinates_GFp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_GFp_simple_set_compressed_coordinates
#  define ossl_ec_GFp_simple_set_compressed_coordinates OPENSSL_MANGLER(ossl_ec_GFp_simple_set_compressed_coordinates)
# endif
#else
# ifndef _ossl_ec_GFp_simple_set_compressed_coordinates
#  define _ossl_ec_GFp_simple_set_compressed_coordinates OPENSSL_MANGLER_ASM(ossl_ec_GFp_simple_set_compressed_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_check_group_type_id2name
#  define ossl_ec_check_group_type_id2name OPENSSL_MANGLER(ossl_ec_check_group_type_id2name)
# endif
#else
# ifndef _ossl_ec_check_group_type_id2name
#  define _ossl_ec_check_group_type_id2name OPENSSL_MANGLER_ASM(ossl_ec_check_group_type_id2name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_check_key
#  define ossl_ec_check_key OPENSSL_MANGLER(ossl_ec_check_key)
# endif
#else
# ifndef _ossl_ec_check_key
#  define _ossl_ec_check_key OPENSSL_MANGLER_ASM(ossl_ec_check_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_curve_name2nid
#  define ossl_ec_curve_name2nid OPENSSL_MANGLER(ossl_ec_curve_name2nid)
# endif
#else
# ifndef _ossl_ec_curve_name2nid
#  define _ossl_ec_curve_name2nid OPENSSL_MANGLER_ASM(ossl_ec_curve_name2nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_curve_nid2nist_int
#  define ossl_ec_curve_nid2nist_int OPENSSL_MANGLER(ossl_ec_curve_nid2nist_int)
# endif
#else
# ifndef _ossl_ec_curve_nid2nist_int
#  define _ossl_ec_curve_nid2nist_int OPENSSL_MANGLER_ASM(ossl_ec_curve_nid2nist_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_curve_nid_from_params
#  define ossl_ec_curve_nid_from_params OPENSSL_MANGLER(ossl_ec_curve_nid_from_params)
# endif
#else
# ifndef _ossl_ec_curve_nid_from_params
#  define _ossl_ec_curve_nid_from_params OPENSSL_MANGLER_ASM(ossl_ec_curve_nid_from_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_curve_nist2nid_int
#  define ossl_ec_curve_nist2nid_int OPENSSL_MANGLER(ossl_ec_curve_nist2nid_int)
# endif
#else
# ifndef _ossl_ec_curve_nist2nid_int
#  define _ossl_ec_curve_nist2nid_int OPENSSL_MANGLER_ASM(ossl_ec_curve_nist2nid_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_encoding_name2id
#  define ossl_ec_encoding_name2id OPENSSL_MANGLER(ossl_ec_encoding_name2id)
# endif
#else
# ifndef _ossl_ec_encoding_name2id
#  define _ossl_ec_encoding_name2id OPENSSL_MANGLER_ASM(ossl_ec_encoding_name2id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_encoding_param2id
#  define ossl_ec_encoding_param2id OPENSSL_MANGLER(ossl_ec_encoding_param2id)
# endif
#else
# ifndef _ossl_ec_encoding_param2id
#  define _ossl_ec_encoding_param2id OPENSSL_MANGLER_ASM(ossl_ec_encoding_param2id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_group_do_inverse_ord
#  define ossl_ec_group_do_inverse_ord OPENSSL_MANGLER(ossl_ec_group_do_inverse_ord)
# endif
#else
# ifndef _ossl_ec_group_do_inverse_ord
#  define _ossl_ec_group_do_inverse_ord OPENSSL_MANGLER_ASM(ossl_ec_group_do_inverse_ord)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_group_fromdata
#  define ossl_ec_group_fromdata OPENSSL_MANGLER(ossl_ec_group_fromdata)
# endif
#else
# ifndef _ossl_ec_group_fromdata
#  define _ossl_ec_group_fromdata OPENSSL_MANGLER_ASM(ossl_ec_group_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_group_new_ex
#  define ossl_ec_group_new_ex OPENSSL_MANGLER(ossl_ec_group_new_ex)
# endif
#else
# ifndef _ossl_ec_group_new_ex
#  define _ossl_ec_group_new_ex OPENSSL_MANGLER_ASM(ossl_ec_group_new_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_group_set_params
#  define ossl_ec_group_set_params OPENSSL_MANGLER(ossl_ec_group_set_params)
# endif
#else
# ifndef _ossl_ec_group_set_params
#  define _ossl_ec_group_set_params OPENSSL_MANGLER_ASM(ossl_ec_group_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_group_simple_order_bits
#  define ossl_ec_group_simple_order_bits OPENSSL_MANGLER(ossl_ec_group_simple_order_bits)
# endif
#else
# ifndef _ossl_ec_group_simple_order_bits
#  define _ossl_ec_group_simple_order_bits OPENSSL_MANGLER_ASM(ossl_ec_group_simple_order_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_group_todata
#  define ossl_ec_group_todata OPENSSL_MANGLER(ossl_ec_group_todata)
# endif
#else
# ifndef _ossl_ec_group_todata
#  define _ossl_ec_group_todata OPENSSL_MANGLER_ASM(ossl_ec_group_todata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_dup
#  define ossl_ec_key_dup OPENSSL_MANGLER(ossl_ec_key_dup)
# endif
#else
# ifndef _ossl_ec_key_dup
#  define _ossl_ec_key_dup OPENSSL_MANGLER_ASM(ossl_ec_key_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_from_pkcs8
#  define ossl_ec_key_from_pkcs8 OPENSSL_MANGLER(ossl_ec_key_from_pkcs8)
# endif
#else
# ifndef _ossl_ec_key_from_pkcs8
#  define _ossl_ec_key_from_pkcs8 OPENSSL_MANGLER_ASM(ossl_ec_key_from_pkcs8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_fromdata
#  define ossl_ec_key_fromdata OPENSSL_MANGLER(ossl_ec_key_fromdata)
# endif
#else
# ifndef _ossl_ec_key_fromdata
#  define _ossl_ec_key_fromdata OPENSSL_MANGLER_ASM(ossl_ec_key_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_gen
#  define ossl_ec_key_gen OPENSSL_MANGLER(ossl_ec_key_gen)
# endif
#else
# ifndef _ossl_ec_key_gen
#  define _ossl_ec_key_gen OPENSSL_MANGLER_ASM(ossl_ec_key_gen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_get0_propq
#  define ossl_ec_key_get0_propq OPENSSL_MANGLER(ossl_ec_key_get0_propq)
# endif
#else
# ifndef _ossl_ec_key_get0_propq
#  define _ossl_ec_key_get0_propq OPENSSL_MANGLER_ASM(ossl_ec_key_get0_propq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_get_libctx
#  define ossl_ec_key_get_libctx OPENSSL_MANGLER(ossl_ec_key_get_libctx)
# endif
#else
# ifndef _ossl_ec_key_get_libctx
#  define _ossl_ec_key_get_libctx OPENSSL_MANGLER_ASM(ossl_ec_key_get_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_is_foreign
#  define ossl_ec_key_is_foreign OPENSSL_MANGLER(ossl_ec_key_is_foreign)
# endif
#else
# ifndef _ossl_ec_key_is_foreign
#  define _ossl_ec_key_is_foreign OPENSSL_MANGLER_ASM(ossl_ec_key_is_foreign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_new_method_int
#  define ossl_ec_key_new_method_int OPENSSL_MANGLER(ossl_ec_key_new_method_int)
# endif
#else
# ifndef _ossl_ec_key_new_method_int
#  define _ossl_ec_key_new_method_int OPENSSL_MANGLER_ASM(ossl_ec_key_new_method_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_otherparams_fromdata
#  define ossl_ec_key_otherparams_fromdata OPENSSL_MANGLER(ossl_ec_key_otherparams_fromdata)
# endif
#else
# ifndef _ossl_ec_key_otherparams_fromdata
#  define _ossl_ec_key_otherparams_fromdata OPENSSL_MANGLER_ASM(ossl_ec_key_otherparams_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_pairwise_check
#  define ossl_ec_key_pairwise_check OPENSSL_MANGLER(ossl_ec_key_pairwise_check)
# endif
#else
# ifndef _ossl_ec_key_pairwise_check
#  define _ossl_ec_key_pairwise_check OPENSSL_MANGLER_ASM(ossl_ec_key_pairwise_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_param_from_x509_algor
#  define ossl_ec_key_param_from_x509_algor OPENSSL_MANGLER(ossl_ec_key_param_from_x509_algor)
# endif
#else
# ifndef _ossl_ec_key_param_from_x509_algor
#  define _ossl_ec_key_param_from_x509_algor OPENSSL_MANGLER_ASM(ossl_ec_key_param_from_x509_algor)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_private_check
#  define ossl_ec_key_private_check OPENSSL_MANGLER(ossl_ec_key_private_check)
# endif
#else
# ifndef _ossl_ec_key_private_check
#  define _ossl_ec_key_private_check OPENSSL_MANGLER_ASM(ossl_ec_key_private_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_public_check
#  define ossl_ec_key_public_check OPENSSL_MANGLER(ossl_ec_key_public_check)
# endif
#else
# ifndef _ossl_ec_key_public_check
#  define _ossl_ec_key_public_check OPENSSL_MANGLER_ASM(ossl_ec_key_public_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_public_check_quick
#  define ossl_ec_key_public_check_quick OPENSSL_MANGLER(ossl_ec_key_public_check_quick)
# endif
#else
# ifndef _ossl_ec_key_public_check_quick
#  define _ossl_ec_key_public_check_quick OPENSSL_MANGLER_ASM(ossl_ec_key_public_check_quick)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_set0_libctx
#  define ossl_ec_key_set0_libctx OPENSSL_MANGLER(ossl_ec_key_set0_libctx)
# endif
#else
# ifndef _ossl_ec_key_set0_libctx
#  define _ossl_ec_key_set0_libctx OPENSSL_MANGLER_ASM(ossl_ec_key_set0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_simple_check_key
#  define ossl_ec_key_simple_check_key OPENSSL_MANGLER(ossl_ec_key_simple_check_key)
# endif
#else
# ifndef _ossl_ec_key_simple_check_key
#  define _ossl_ec_key_simple_check_key OPENSSL_MANGLER_ASM(ossl_ec_key_simple_check_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_simple_generate_key
#  define ossl_ec_key_simple_generate_key OPENSSL_MANGLER(ossl_ec_key_simple_generate_key)
# endif
#else
# ifndef _ossl_ec_key_simple_generate_key
#  define _ossl_ec_key_simple_generate_key OPENSSL_MANGLER_ASM(ossl_ec_key_simple_generate_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_simple_generate_public_key
#  define ossl_ec_key_simple_generate_public_key OPENSSL_MANGLER(ossl_ec_key_simple_generate_public_key)
# endif
#else
# ifndef _ossl_ec_key_simple_generate_public_key
#  define _ossl_ec_key_simple_generate_public_key OPENSSL_MANGLER_ASM(ossl_ec_key_simple_generate_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_simple_oct2priv
#  define ossl_ec_key_simple_oct2priv OPENSSL_MANGLER(ossl_ec_key_simple_oct2priv)
# endif
#else
# ifndef _ossl_ec_key_simple_oct2priv
#  define _ossl_ec_key_simple_oct2priv OPENSSL_MANGLER_ASM(ossl_ec_key_simple_oct2priv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_key_simple_priv2oct
#  define ossl_ec_key_simple_priv2oct OPENSSL_MANGLER(ossl_ec_key_simple_priv2oct)
# endif
#else
# ifndef _ossl_ec_key_simple_priv2oct
#  define _ossl_ec_key_simple_priv2oct OPENSSL_MANGLER_ASM(ossl_ec_key_simple_priv2oct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_keymgmt_functions
#  define ossl_ec_keymgmt_functions OPENSSL_MANGLER(ossl_ec_keymgmt_functions)
# endif
#else
# ifndef _ossl_ec_keymgmt_functions
#  define _ossl_ec_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_ec_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_pkey_method
#  define ossl_ec_pkey_method OPENSSL_MANGLER(ossl_ec_pkey_method)
# endif
#else
# ifndef _ossl_ec_pkey_method
#  define _ossl_ec_pkey_method OPENSSL_MANGLER_ASM(ossl_ec_pkey_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_point_blind_coordinates
#  define ossl_ec_point_blind_coordinates OPENSSL_MANGLER(ossl_ec_point_blind_coordinates)
# endif
#else
# ifndef _ossl_ec_point_blind_coordinates
#  define _ossl_ec_point_blind_coordinates OPENSSL_MANGLER_ASM(ossl_ec_point_blind_coordinates)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_pt_format_id2name
#  define ossl_ec_pt_format_id2name OPENSSL_MANGLER(ossl_ec_pt_format_id2name)
# endif
#else
# ifndef _ossl_ec_pt_format_id2name
#  define _ossl_ec_pt_format_id2name OPENSSL_MANGLER_ASM(ossl_ec_pt_format_id2name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_pt_format_name2id
#  define ossl_ec_pt_format_name2id OPENSSL_MANGLER(ossl_ec_pt_format_name2id)
# endif
#else
# ifndef _ossl_ec_pt_format_name2id
#  define _ossl_ec_pt_format_name2id OPENSSL_MANGLER_ASM(ossl_ec_pt_format_name2id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_pt_format_param2id
#  define ossl_ec_pt_format_param2id OPENSSL_MANGLER(ossl_ec_pt_format_param2id)
# endif
#else
# ifndef _ossl_ec_pt_format_param2id
#  define _ossl_ec_pt_format_param2id OPENSSL_MANGLER_ASM(ossl_ec_pt_format_param2id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_scalar_mul_ladder
#  define ossl_ec_scalar_mul_ladder OPENSSL_MANGLER(ossl_ec_scalar_mul_ladder)
# endif
#else
# ifndef _ossl_ec_scalar_mul_ladder
#  define _ossl_ec_scalar_mul_ladder OPENSSL_MANGLER_ASM(ossl_ec_scalar_mul_ladder)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_set_check_group_type_from_name
#  define ossl_ec_set_check_group_type_from_name OPENSSL_MANGLER(ossl_ec_set_check_group_type_from_name)
# endif
#else
# ifndef _ossl_ec_set_check_group_type_from_name
#  define _ossl_ec_set_check_group_type_from_name OPENSSL_MANGLER_ASM(ossl_ec_set_check_group_type_from_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_set_ecdh_cofactor_mode
#  define ossl_ec_set_ecdh_cofactor_mode OPENSSL_MANGLER(ossl_ec_set_ecdh_cofactor_mode)
# endif
#else
# ifndef _ossl_ec_set_ecdh_cofactor_mode
#  define _ossl_ec_set_ecdh_cofactor_mode OPENSSL_MANGLER_ASM(ossl_ec_set_ecdh_cofactor_mode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_EC_der_encoder_functions
#  define ossl_ec_to_EC_der_encoder_functions OPENSSL_MANGLER(ossl_ec_to_EC_der_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_EC_der_encoder_functions
#  define _ossl_ec_to_EC_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_EC_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_EC_pem_encoder_functions
#  define ossl_ec_to_EC_pem_encoder_functions OPENSSL_MANGLER(ossl_ec_to_EC_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_EC_pem_encoder_functions
#  define _ossl_ec_to_EC_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_EC_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define ossl_ec_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_ec_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define _ossl_ec_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define ossl_ec_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_ec_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define _ossl_ec_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_PrivateKeyInfo_der_encoder_functions
#  define ossl_ec_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_ec_to_PrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_PrivateKeyInfo_der_encoder_functions
#  define _ossl_ec_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_PrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_PrivateKeyInfo_pem_encoder_functions
#  define ossl_ec_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_ec_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_PrivateKeyInfo_pem_encoder_functions
#  define _ossl_ec_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_SubjectPublicKeyInfo_der_encoder_functions
#  define ossl_ec_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_ec_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_SubjectPublicKeyInfo_der_encoder_functions
#  define _ossl_ec_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define ossl_ec_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_ec_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define _ossl_ec_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_X9_62_der_encoder_functions
#  define ossl_ec_to_X9_62_der_encoder_functions OPENSSL_MANGLER(ossl_ec_to_X9_62_der_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_X9_62_der_encoder_functions
#  define _ossl_ec_to_X9_62_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_X9_62_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_X9_62_pem_encoder_functions
#  define ossl_ec_to_X9_62_pem_encoder_functions OPENSSL_MANGLER(ossl_ec_to_X9_62_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_X9_62_pem_encoder_functions
#  define _ossl_ec_to_X9_62_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_X9_62_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_blob_encoder_functions
#  define ossl_ec_to_blob_encoder_functions OPENSSL_MANGLER(ossl_ec_to_blob_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_blob_encoder_functions
#  define _ossl_ec_to_blob_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_blob_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_text_encoder_functions
#  define ossl_ec_to_text_encoder_functions OPENSSL_MANGLER(ossl_ec_to_text_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_text_encoder_functions
#  define _ossl_ec_to_text_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_text_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_type_specific_no_pub_der_encoder_functions
#  define ossl_ec_to_type_specific_no_pub_der_encoder_functions OPENSSL_MANGLER(ossl_ec_to_type_specific_no_pub_der_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_type_specific_no_pub_der_encoder_functions
#  define _ossl_ec_to_type_specific_no_pub_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_type_specific_no_pub_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_to_type_specific_no_pub_pem_encoder_functions
#  define ossl_ec_to_type_specific_no_pub_pem_encoder_functions OPENSSL_MANGLER(ossl_ec_to_type_specific_no_pub_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ec_to_type_specific_no_pub_pem_encoder_functions
#  define _ossl_ec_to_type_specific_no_pub_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ec_to_type_specific_no_pub_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_wNAF_have_precompute_mult
#  define ossl_ec_wNAF_have_precompute_mult OPENSSL_MANGLER(ossl_ec_wNAF_have_precompute_mult)
# endif
#else
# ifndef _ossl_ec_wNAF_have_precompute_mult
#  define _ossl_ec_wNAF_have_precompute_mult OPENSSL_MANGLER_ASM(ossl_ec_wNAF_have_precompute_mult)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_wNAF_mul
#  define ossl_ec_wNAF_mul OPENSSL_MANGLER(ossl_ec_wNAF_mul)
# endif
#else
# ifndef _ossl_ec_wNAF_mul
#  define _ossl_ec_wNAF_mul OPENSSL_MANGLER_ASM(ossl_ec_wNAF_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ec_wNAF_precompute_mult
#  define ossl_ec_wNAF_precompute_mult OPENSSL_MANGLER(ossl_ec_wNAF_precompute_mult)
# endif
#else
# ifndef _ossl_ec_wNAF_precompute_mult
#  define _ossl_ec_wNAF_precompute_mult OPENSSL_MANGLER_ASM(ossl_ec_wNAF_precompute_mult)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdh_compute_key
#  define ossl_ecdh_compute_key OPENSSL_MANGLER(ossl_ecdh_compute_key)
# endif
#else
# ifndef _ossl_ecdh_compute_key
#  define _ossl_ecdh_compute_key OPENSSL_MANGLER_ASM(ossl_ecdh_compute_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdh_kdf_X9_63
#  define ossl_ecdh_kdf_X9_63 OPENSSL_MANGLER(ossl_ecdh_kdf_X9_63)
# endif
#else
# ifndef _ossl_ecdh_kdf_X9_63
#  define _ossl_ecdh_kdf_X9_63 OPENSSL_MANGLER_ASM(ossl_ecdh_kdf_X9_63)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdh_keyexch_functions
#  define ossl_ecdh_keyexch_functions OPENSSL_MANGLER(ossl_ecdh_keyexch_functions)
# endif
#else
# ifndef _ossl_ecdh_keyexch_functions
#  define _ossl_ecdh_keyexch_functions OPENSSL_MANGLER_ASM(ossl_ecdh_keyexch_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdh_simple_compute_key
#  define ossl_ecdh_simple_compute_key OPENSSL_MANGLER(ossl_ecdh_simple_compute_key)
# endif
#else
# ifndef _ossl_ecdh_simple_compute_key
#  define _ossl_ecdh_simple_compute_key OPENSSL_MANGLER_ASM(ossl_ecdh_simple_compute_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdsa_sign
#  define ossl_ecdsa_sign OPENSSL_MANGLER(ossl_ecdsa_sign)
# endif
#else
# ifndef _ossl_ecdsa_sign
#  define _ossl_ecdsa_sign OPENSSL_MANGLER_ASM(ossl_ecdsa_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdsa_sign_setup
#  define ossl_ecdsa_sign_setup OPENSSL_MANGLER(ossl_ecdsa_sign_setup)
# endif
#else
# ifndef _ossl_ecdsa_sign_setup
#  define _ossl_ecdsa_sign_setup OPENSSL_MANGLER_ASM(ossl_ecdsa_sign_setup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdsa_sign_sig
#  define ossl_ecdsa_sign_sig OPENSSL_MANGLER(ossl_ecdsa_sign_sig)
# endif
#else
# ifndef _ossl_ecdsa_sign_sig
#  define _ossl_ecdsa_sign_sig OPENSSL_MANGLER_ASM(ossl_ecdsa_sign_sig)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdsa_signature_functions
#  define ossl_ecdsa_signature_functions OPENSSL_MANGLER(ossl_ecdsa_signature_functions)
# endif
#else
# ifndef _ossl_ecdsa_signature_functions
#  define _ossl_ecdsa_signature_functions OPENSSL_MANGLER_ASM(ossl_ecdsa_signature_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdsa_simple_sign_setup
#  define ossl_ecdsa_simple_sign_setup OPENSSL_MANGLER(ossl_ecdsa_simple_sign_setup)
# endif
#else
# ifndef _ossl_ecdsa_simple_sign_setup
#  define _ossl_ecdsa_simple_sign_setup OPENSSL_MANGLER_ASM(ossl_ecdsa_simple_sign_setup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdsa_simple_sign_sig
#  define ossl_ecdsa_simple_sign_sig OPENSSL_MANGLER(ossl_ecdsa_simple_sign_sig)
# endif
#else
# ifndef _ossl_ecdsa_simple_sign_sig
#  define _ossl_ecdsa_simple_sign_sig OPENSSL_MANGLER_ASM(ossl_ecdsa_simple_sign_sig)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdsa_simple_verify_sig
#  define ossl_ecdsa_simple_verify_sig OPENSSL_MANGLER(ossl_ecdsa_simple_verify_sig)
# endif
#else
# ifndef _ossl_ecdsa_simple_verify_sig
#  define _ossl_ecdsa_simple_verify_sig OPENSSL_MANGLER_ASM(ossl_ecdsa_simple_verify_sig)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdsa_verify
#  define ossl_ecdsa_verify OPENSSL_MANGLER(ossl_ecdsa_verify)
# endif
#else
# ifndef _ossl_ecdsa_verify
#  define _ossl_ecdsa_verify OPENSSL_MANGLER_ASM(ossl_ecdsa_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecdsa_verify_sig
#  define ossl_ecdsa_verify_sig OPENSSL_MANGLER(ossl_ecdsa_verify_sig)
# endif
#else
# ifndef _ossl_ecdsa_verify_sig
#  define _ossl_ecdsa_verify_sig OPENSSL_MANGLER_ASM(ossl_ecdsa_verify_sig)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_eckey_asn1_meth
#  define ossl_eckey_asn1_meth OPENSSL_MANGLER(ossl_eckey_asn1_meth)
# endif
#else
# ifndef _ossl_eckey_asn1_meth
#  define _ossl_eckey_asn1_meth OPENSSL_MANGLER_ASM(ossl_eckey_asn1_meth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx25519_asn1_meth
#  define ossl_ecx25519_asn1_meth OPENSSL_MANGLER(ossl_ecx25519_asn1_meth)
# endif
#else
# ifndef _ossl_ecx25519_asn1_meth
#  define _ossl_ecx25519_asn1_meth OPENSSL_MANGLER_ASM(ossl_ecx25519_asn1_meth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx25519_pkey_method
#  define ossl_ecx25519_pkey_method OPENSSL_MANGLER(ossl_ecx25519_pkey_method)
# endif
#else
# ifndef _ossl_ecx25519_pkey_method
#  define _ossl_ecx25519_pkey_method OPENSSL_MANGLER_ASM(ossl_ecx25519_pkey_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx448_asn1_meth
#  define ossl_ecx448_asn1_meth OPENSSL_MANGLER(ossl_ecx448_asn1_meth)
# endif
#else
# ifndef _ossl_ecx448_asn1_meth
#  define _ossl_ecx448_asn1_meth OPENSSL_MANGLER_ASM(ossl_ecx448_asn1_meth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx448_pkey_method
#  define ossl_ecx448_pkey_method OPENSSL_MANGLER(ossl_ecx448_pkey_method)
# endif
#else
# ifndef _ossl_ecx448_pkey_method
#  define _ossl_ecx448_pkey_method OPENSSL_MANGLER_ASM(ossl_ecx448_pkey_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx_key_allocate_privkey
#  define ossl_ecx_key_allocate_privkey OPENSSL_MANGLER(ossl_ecx_key_allocate_privkey)
# endif
#else
# ifndef _ossl_ecx_key_allocate_privkey
#  define _ossl_ecx_key_allocate_privkey OPENSSL_MANGLER_ASM(ossl_ecx_key_allocate_privkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx_key_dup
#  define ossl_ecx_key_dup OPENSSL_MANGLER(ossl_ecx_key_dup)
# endif
#else
# ifndef _ossl_ecx_key_dup
#  define _ossl_ecx_key_dup OPENSSL_MANGLER_ASM(ossl_ecx_key_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx_key_free
#  define ossl_ecx_key_free OPENSSL_MANGLER(ossl_ecx_key_free)
# endif
#else
# ifndef _ossl_ecx_key_free
#  define _ossl_ecx_key_free OPENSSL_MANGLER_ASM(ossl_ecx_key_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx_key_from_pkcs8
#  define ossl_ecx_key_from_pkcs8 OPENSSL_MANGLER(ossl_ecx_key_from_pkcs8)
# endif
#else
# ifndef _ossl_ecx_key_from_pkcs8
#  define _ossl_ecx_key_from_pkcs8 OPENSSL_MANGLER_ASM(ossl_ecx_key_from_pkcs8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx_key_fromdata
#  define ossl_ecx_key_fromdata OPENSSL_MANGLER(ossl_ecx_key_fromdata)
# endif
#else
# ifndef _ossl_ecx_key_fromdata
#  define _ossl_ecx_key_fromdata OPENSSL_MANGLER_ASM(ossl_ecx_key_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx_key_new
#  define ossl_ecx_key_new OPENSSL_MANGLER(ossl_ecx_key_new)
# endif
#else
# ifndef _ossl_ecx_key_new
#  define _ossl_ecx_key_new OPENSSL_MANGLER_ASM(ossl_ecx_key_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx_key_op
#  define ossl_ecx_key_op OPENSSL_MANGLER(ossl_ecx_key_op)
# endif
#else
# ifndef _ossl_ecx_key_op
#  define _ossl_ecx_key_op OPENSSL_MANGLER_ASM(ossl_ecx_key_op)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx_key_set0_libctx
#  define ossl_ecx_key_set0_libctx OPENSSL_MANGLER(ossl_ecx_key_set0_libctx)
# endif
#else
# ifndef _ossl_ecx_key_set0_libctx
#  define _ossl_ecx_key_set0_libctx OPENSSL_MANGLER_ASM(ossl_ecx_key_set0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx_key_up_ref
#  define ossl_ecx_key_up_ref OPENSSL_MANGLER(ossl_ecx_key_up_ref)
# endif
#else
# ifndef _ossl_ecx_key_up_ref
#  define _ossl_ecx_key_up_ref OPENSSL_MANGLER_ASM(ossl_ecx_key_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ecx_public_from_private
#  define ossl_ecx_public_from_private OPENSSL_MANGLER(ossl_ecx_public_from_private)
# endif
#else
# ifndef _ossl_ecx_public_from_private
#  define _ossl_ecx_public_from_private OPENSSL_MANGLER_ASM(ossl_ecx_public_from_private)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_asn1_meth
#  define ossl_ed25519_asn1_meth OPENSSL_MANGLER(ossl_ed25519_asn1_meth)
# endif
#else
# ifndef _ossl_ed25519_asn1_meth
#  define _ossl_ed25519_asn1_meth OPENSSL_MANGLER_ASM(ossl_ed25519_asn1_meth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_keymgmt_functions
#  define ossl_ed25519_keymgmt_functions OPENSSL_MANGLER(ossl_ed25519_keymgmt_functions)
# endif
#else
# ifndef _ossl_ed25519_keymgmt_functions
#  define _ossl_ed25519_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_ed25519_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_pkey_method
#  define ossl_ed25519_pkey_method OPENSSL_MANGLER(ossl_ed25519_pkey_method)
# endif
#else
# ifndef _ossl_ed25519_pkey_method
#  define _ossl_ed25519_pkey_method OPENSSL_MANGLER_ASM(ossl_ed25519_pkey_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_public_from_private
#  define ossl_ed25519_public_from_private OPENSSL_MANGLER(ossl_ed25519_public_from_private)
# endif
#else
# ifndef _ossl_ed25519_public_from_private
#  define _ossl_ed25519_public_from_private OPENSSL_MANGLER_ASM(ossl_ed25519_public_from_private)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_sign
#  define ossl_ed25519_sign OPENSSL_MANGLER(ossl_ed25519_sign)
# endif
#else
# ifndef _ossl_ed25519_sign
#  define _ossl_ed25519_sign OPENSSL_MANGLER_ASM(ossl_ed25519_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_signature_functions
#  define ossl_ed25519_signature_functions OPENSSL_MANGLER(ossl_ed25519_signature_functions)
# endif
#else
# ifndef _ossl_ed25519_signature_functions
#  define _ossl_ed25519_signature_functions OPENSSL_MANGLER_ASM(ossl_ed25519_signature_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define ossl_ed25519_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_ed25519_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_ed25519_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define _ossl_ed25519_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed25519_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define ossl_ed25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_ed25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ed25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define _ossl_ed25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_to_PrivateKeyInfo_der_encoder_functions
#  define ossl_ed25519_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_ed25519_to_PrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_ed25519_to_PrivateKeyInfo_der_encoder_functions
#  define _ossl_ed25519_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed25519_to_PrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_to_PrivateKeyInfo_pem_encoder_functions
#  define ossl_ed25519_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_ed25519_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ed25519_to_PrivateKeyInfo_pem_encoder_functions
#  define _ossl_ed25519_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed25519_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_to_SubjectPublicKeyInfo_der_encoder_functions
#  define ossl_ed25519_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_ed25519_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_ed25519_to_SubjectPublicKeyInfo_der_encoder_functions
#  define _ossl_ed25519_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed25519_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define ossl_ed25519_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_ed25519_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ed25519_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define _ossl_ed25519_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed25519_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_to_text_encoder_functions
#  define ossl_ed25519_to_text_encoder_functions OPENSSL_MANGLER(ossl_ed25519_to_text_encoder_functions)
# endif
#else
# ifndef _ossl_ed25519_to_text_encoder_functions
#  define _ossl_ed25519_to_text_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed25519_to_text_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed25519_verify
#  define ossl_ed25519_verify OPENSSL_MANGLER(ossl_ed25519_verify)
# endif
#else
# ifndef _ossl_ed25519_verify
#  define _ossl_ed25519_verify OPENSSL_MANGLER_ASM(ossl_ed25519_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_asn1_meth
#  define ossl_ed448_asn1_meth OPENSSL_MANGLER(ossl_ed448_asn1_meth)
# endif
#else
# ifndef _ossl_ed448_asn1_meth
#  define _ossl_ed448_asn1_meth OPENSSL_MANGLER_ASM(ossl_ed448_asn1_meth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_keymgmt_functions
#  define ossl_ed448_keymgmt_functions OPENSSL_MANGLER(ossl_ed448_keymgmt_functions)
# endif
#else
# ifndef _ossl_ed448_keymgmt_functions
#  define _ossl_ed448_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_ed448_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_pkey_method
#  define ossl_ed448_pkey_method OPENSSL_MANGLER(ossl_ed448_pkey_method)
# endif
#else
# ifndef _ossl_ed448_pkey_method
#  define _ossl_ed448_pkey_method OPENSSL_MANGLER_ASM(ossl_ed448_pkey_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_public_from_private
#  define ossl_ed448_public_from_private OPENSSL_MANGLER(ossl_ed448_public_from_private)
# endif
#else
# ifndef _ossl_ed448_public_from_private
#  define _ossl_ed448_public_from_private OPENSSL_MANGLER_ASM(ossl_ed448_public_from_private)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_sign
#  define ossl_ed448_sign OPENSSL_MANGLER(ossl_ed448_sign)
# endif
#else
# ifndef _ossl_ed448_sign
#  define _ossl_ed448_sign OPENSSL_MANGLER_ASM(ossl_ed448_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_signature_functions
#  define ossl_ed448_signature_functions OPENSSL_MANGLER(ossl_ed448_signature_functions)
# endif
#else
# ifndef _ossl_ed448_signature_functions
#  define _ossl_ed448_signature_functions OPENSSL_MANGLER_ASM(ossl_ed448_signature_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define ossl_ed448_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_ed448_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_ed448_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define _ossl_ed448_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed448_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define ossl_ed448_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_ed448_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ed448_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define _ossl_ed448_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed448_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_to_PrivateKeyInfo_der_encoder_functions
#  define ossl_ed448_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_ed448_to_PrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_ed448_to_PrivateKeyInfo_der_encoder_functions
#  define _ossl_ed448_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed448_to_PrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_to_PrivateKeyInfo_pem_encoder_functions
#  define ossl_ed448_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_ed448_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ed448_to_PrivateKeyInfo_pem_encoder_functions
#  define _ossl_ed448_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed448_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_to_SubjectPublicKeyInfo_der_encoder_functions
#  define ossl_ed448_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_ed448_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_ed448_to_SubjectPublicKeyInfo_der_encoder_functions
#  define _ossl_ed448_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed448_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define ossl_ed448_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_ed448_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_ed448_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define _ossl_ed448_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed448_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_to_text_encoder_functions
#  define ossl_ed448_to_text_encoder_functions OPENSSL_MANGLER(ossl_ed448_to_text_encoder_functions)
# endif
#else
# ifndef _ossl_ed448_to_text_encoder_functions
#  define _ossl_ed448_to_text_encoder_functions OPENSSL_MANGLER_ASM(ossl_ed448_to_text_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448_verify
#  define ossl_ed448_verify OPENSSL_MANGLER(ossl_ed448_verify)
# endif
#else
# ifndef _ossl_ed448_verify
#  define _ossl_ed448_verify OPENSSL_MANGLER_ASM(ossl_ed448_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448ph_sign
#  define ossl_ed448ph_sign OPENSSL_MANGLER(ossl_ed448ph_sign)
# endif
#else
# ifndef _ossl_ed448ph_sign
#  define _ossl_ed448ph_sign OPENSSL_MANGLER_ASM(ossl_ed448ph_sign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ed448ph_verify
#  define ossl_ed448ph_verify OPENSSL_MANGLER(ossl_ed448ph_verify)
# endif
#else
# ifndef _ossl_ed448ph_verify
#  define _ossl_ed448ph_verify OPENSSL_MANGLER_ASM(ossl_ed448ph_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_encode_der_dsa_sig
#  define ossl_encode_der_dsa_sig OPENSSL_MANGLER(ossl_encode_der_dsa_sig)
# endif
#else
# ifndef _ossl_encode_der_dsa_sig
#  define _ossl_encode_der_dsa_sig OPENSSL_MANGLER_ASM(ossl_encode_der_dsa_sig)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_encode_der_integer
#  define ossl_encode_der_integer OPENSSL_MANGLER(ossl_encode_der_integer)
# endif
#else
# ifndef _ossl_encode_der_integer
#  define _ossl_encode_der_integer OPENSSL_MANGLER_ASM(ossl_encode_der_integer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_encode_der_length
#  define ossl_encode_der_length OPENSSL_MANGLER(ossl_encode_der_length)
# endif
#else
# ifndef _ossl_encode_der_length
#  define _ossl_encode_der_length OPENSSL_MANGLER_ASM(ossl_encode_der_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_encoder_fetch_by_number
#  define ossl_encoder_fetch_by_number OPENSSL_MANGLER(ossl_encoder_fetch_by_number)
# endif
#else
# ifndef _ossl_encoder_fetch_by_number
#  define _ossl_encoder_fetch_by_number OPENSSL_MANGLER_ASM(ossl_encoder_fetch_by_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_encoder_get_number
#  define ossl_encoder_get_number OPENSSL_MANGLER(ossl_encoder_get_number)
# endif
#else
# ifndef _ossl_encoder_get_number
#  define _ossl_encoder_get_number OPENSSL_MANGLER_ASM(ossl_encoder_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_encoder_instance_free
#  define ossl_encoder_instance_free OPENSSL_MANGLER(ossl_encoder_instance_free)
# endif
#else
# ifndef _ossl_encoder_instance_free
#  define _ossl_encoder_instance_free OPENSSL_MANGLER_ASM(ossl_encoder_instance_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_encoder_parsed_properties
#  define ossl_encoder_parsed_properties OPENSSL_MANGLER(ossl_encoder_parsed_properties)
# endif
#else
# ifndef _ossl_encoder_parsed_properties
#  define _ossl_encoder_parsed_properties OPENSSL_MANGLER_ASM(ossl_encoder_parsed_properties)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_encoder_store_cache_flush
#  define ossl_encoder_store_cache_flush OPENSSL_MANGLER(ossl_encoder_store_cache_flush)
# endif
#else
# ifndef _ossl_encoder_store_cache_flush
#  define _ossl_encoder_store_cache_flush OPENSSL_MANGLER_ASM(ossl_encoder_store_cache_flush)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_encoder_store_remove_all_provided
#  define ossl_encoder_store_remove_all_provided OPENSSL_MANGLER(ossl_encoder_store_remove_all_provided)
# endif
#else
# ifndef _ossl_encoder_store_remove_all_provided
#  define _ossl_encoder_store_remove_all_provided OPENSSL_MANGLER_ASM(ossl_encoder_store_remove_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_engine_table_select
#  define ossl_engine_table_select OPENSSL_MANGLER(ossl_engine_table_select)
# endif
#else
# ifndef _ossl_engine_table_select
#  define _ossl_engine_table_select OPENSSL_MANGLER_ASM(ossl_engine_table_select)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_get_state_int
#  define ossl_err_get_state_int OPENSSL_MANGLER(ossl_err_get_state_int)
# endif
#else
# ifndef _ossl_err_get_state_int
#  define _ossl_err_get_state_int OPENSSL_MANGLER_ASM(ossl_err_get_state_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_ASN1_strings
#  define ossl_err_load_ASN1_strings OPENSSL_MANGLER(ossl_err_load_ASN1_strings)
# endif
#else
# ifndef _ossl_err_load_ASN1_strings
#  define _ossl_err_load_ASN1_strings OPENSSL_MANGLER_ASM(ossl_err_load_ASN1_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_ASYNC_strings
#  define ossl_err_load_ASYNC_strings OPENSSL_MANGLER(ossl_err_load_ASYNC_strings)
# endif
#else
# ifndef _ossl_err_load_ASYNC_strings
#  define _ossl_err_load_ASYNC_strings OPENSSL_MANGLER_ASM(ossl_err_load_ASYNC_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_BIO_strings
#  define ossl_err_load_BIO_strings OPENSSL_MANGLER(ossl_err_load_BIO_strings)
# endif
#else
# ifndef _ossl_err_load_BIO_strings
#  define _ossl_err_load_BIO_strings OPENSSL_MANGLER_ASM(ossl_err_load_BIO_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_BN_strings
#  define ossl_err_load_BN_strings OPENSSL_MANGLER(ossl_err_load_BN_strings)
# endif
#else
# ifndef _ossl_err_load_BN_strings
#  define _ossl_err_load_BN_strings OPENSSL_MANGLER_ASM(ossl_err_load_BN_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_BUF_strings
#  define ossl_err_load_BUF_strings OPENSSL_MANGLER(ossl_err_load_BUF_strings)
# endif
#else
# ifndef _ossl_err_load_BUF_strings
#  define _ossl_err_load_BUF_strings OPENSSL_MANGLER_ASM(ossl_err_load_BUF_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_CMP_strings
#  define ossl_err_load_CMP_strings OPENSSL_MANGLER(ossl_err_load_CMP_strings)
# endif
#else
# ifndef _ossl_err_load_CMP_strings
#  define _ossl_err_load_CMP_strings OPENSSL_MANGLER_ASM(ossl_err_load_CMP_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_CMS_strings
#  define ossl_err_load_CMS_strings OPENSSL_MANGLER(ossl_err_load_CMS_strings)
# endif
#else
# ifndef _ossl_err_load_CMS_strings
#  define _ossl_err_load_CMS_strings OPENSSL_MANGLER_ASM(ossl_err_load_CMS_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_COMP_strings
#  define ossl_err_load_COMP_strings OPENSSL_MANGLER(ossl_err_load_COMP_strings)
# endif
#else
# ifndef _ossl_err_load_COMP_strings
#  define _ossl_err_load_COMP_strings OPENSSL_MANGLER_ASM(ossl_err_load_COMP_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_CONF_strings
#  define ossl_err_load_CONF_strings OPENSSL_MANGLER(ossl_err_load_CONF_strings)
# endif
#else
# ifndef _ossl_err_load_CONF_strings
#  define _ossl_err_load_CONF_strings OPENSSL_MANGLER_ASM(ossl_err_load_CONF_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_CRMF_strings
#  define ossl_err_load_CRMF_strings OPENSSL_MANGLER(ossl_err_load_CRMF_strings)
# endif
#else
# ifndef _ossl_err_load_CRMF_strings
#  define _ossl_err_load_CRMF_strings OPENSSL_MANGLER_ASM(ossl_err_load_CRMF_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_CRYPTO_strings
#  define ossl_err_load_CRYPTO_strings OPENSSL_MANGLER(ossl_err_load_CRYPTO_strings)
# endif
#else
# ifndef _ossl_err_load_CRYPTO_strings
#  define _ossl_err_load_CRYPTO_strings OPENSSL_MANGLER_ASM(ossl_err_load_CRYPTO_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_CT_strings
#  define ossl_err_load_CT_strings OPENSSL_MANGLER(ossl_err_load_CT_strings)
# endif
#else
# ifndef _ossl_err_load_CT_strings
#  define _ossl_err_load_CT_strings OPENSSL_MANGLER_ASM(ossl_err_load_CT_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_DH_strings
#  define ossl_err_load_DH_strings OPENSSL_MANGLER(ossl_err_load_DH_strings)
# endif
#else
# ifndef _ossl_err_load_DH_strings
#  define _ossl_err_load_DH_strings OPENSSL_MANGLER_ASM(ossl_err_load_DH_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_DSA_strings
#  define ossl_err_load_DSA_strings OPENSSL_MANGLER(ossl_err_load_DSA_strings)
# endif
#else
# ifndef _ossl_err_load_DSA_strings
#  define _ossl_err_load_DSA_strings OPENSSL_MANGLER_ASM(ossl_err_load_DSA_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_DSO_strings
#  define ossl_err_load_DSO_strings OPENSSL_MANGLER(ossl_err_load_DSO_strings)
# endif
#else
# ifndef _ossl_err_load_DSO_strings
#  define _ossl_err_load_DSO_strings OPENSSL_MANGLER_ASM(ossl_err_load_DSO_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_EC_strings
#  define ossl_err_load_EC_strings OPENSSL_MANGLER(ossl_err_load_EC_strings)
# endif
#else
# ifndef _ossl_err_load_EC_strings
#  define _ossl_err_load_EC_strings OPENSSL_MANGLER_ASM(ossl_err_load_EC_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_ENGINE_strings
#  define ossl_err_load_ENGINE_strings OPENSSL_MANGLER(ossl_err_load_ENGINE_strings)
# endif
#else
# ifndef _ossl_err_load_ENGINE_strings
#  define _ossl_err_load_ENGINE_strings OPENSSL_MANGLER_ASM(ossl_err_load_ENGINE_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_ERR_strings
#  define ossl_err_load_ERR_strings OPENSSL_MANGLER(ossl_err_load_ERR_strings)
# endif
#else
# ifndef _ossl_err_load_ERR_strings
#  define _ossl_err_load_ERR_strings OPENSSL_MANGLER_ASM(ossl_err_load_ERR_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_ESS_strings
#  define ossl_err_load_ESS_strings OPENSSL_MANGLER(ossl_err_load_ESS_strings)
# endif
#else
# ifndef _ossl_err_load_ESS_strings
#  define _ossl_err_load_ESS_strings OPENSSL_MANGLER_ASM(ossl_err_load_ESS_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_EVP_strings
#  define ossl_err_load_EVP_strings OPENSSL_MANGLER(ossl_err_load_EVP_strings)
# endif
#else
# ifndef _ossl_err_load_EVP_strings
#  define _ossl_err_load_EVP_strings OPENSSL_MANGLER_ASM(ossl_err_load_EVP_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_HTTP_strings
#  define ossl_err_load_HTTP_strings OPENSSL_MANGLER(ossl_err_load_HTTP_strings)
# endif
#else
# ifndef _ossl_err_load_HTTP_strings
#  define _ossl_err_load_HTTP_strings OPENSSL_MANGLER_ASM(ossl_err_load_HTTP_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_OBJ_strings
#  define ossl_err_load_OBJ_strings OPENSSL_MANGLER(ossl_err_load_OBJ_strings)
# endif
#else
# ifndef _ossl_err_load_OBJ_strings
#  define _ossl_err_load_OBJ_strings OPENSSL_MANGLER_ASM(ossl_err_load_OBJ_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_OCSP_strings
#  define ossl_err_load_OCSP_strings OPENSSL_MANGLER(ossl_err_load_OCSP_strings)
# endif
#else
# ifndef _ossl_err_load_OCSP_strings
#  define _ossl_err_load_OCSP_strings OPENSSL_MANGLER_ASM(ossl_err_load_OCSP_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_OSSL_DECODER_strings
#  define ossl_err_load_OSSL_DECODER_strings OPENSSL_MANGLER(ossl_err_load_OSSL_DECODER_strings)
# endif
#else
# ifndef _ossl_err_load_OSSL_DECODER_strings
#  define _ossl_err_load_OSSL_DECODER_strings OPENSSL_MANGLER_ASM(ossl_err_load_OSSL_DECODER_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_OSSL_ENCODER_strings
#  define ossl_err_load_OSSL_ENCODER_strings OPENSSL_MANGLER(ossl_err_load_OSSL_ENCODER_strings)
# endif
#else
# ifndef _ossl_err_load_OSSL_ENCODER_strings
#  define _ossl_err_load_OSSL_ENCODER_strings OPENSSL_MANGLER_ASM(ossl_err_load_OSSL_ENCODER_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_OSSL_STORE_strings
#  define ossl_err_load_OSSL_STORE_strings OPENSSL_MANGLER(ossl_err_load_OSSL_STORE_strings)
# endif
#else
# ifndef _ossl_err_load_OSSL_STORE_strings
#  define _ossl_err_load_OSSL_STORE_strings OPENSSL_MANGLER_ASM(ossl_err_load_OSSL_STORE_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_PEM_strings
#  define ossl_err_load_PEM_strings OPENSSL_MANGLER(ossl_err_load_PEM_strings)
# endif
#else
# ifndef _ossl_err_load_PEM_strings
#  define _ossl_err_load_PEM_strings OPENSSL_MANGLER_ASM(ossl_err_load_PEM_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_PKCS12_strings
#  define ossl_err_load_PKCS12_strings OPENSSL_MANGLER(ossl_err_load_PKCS12_strings)
# endif
#else
# ifndef _ossl_err_load_PKCS12_strings
#  define _ossl_err_load_PKCS12_strings OPENSSL_MANGLER_ASM(ossl_err_load_PKCS12_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_PKCS7_strings
#  define ossl_err_load_PKCS7_strings OPENSSL_MANGLER(ossl_err_load_PKCS7_strings)
# endif
#else
# ifndef _ossl_err_load_PKCS7_strings
#  define _ossl_err_load_PKCS7_strings OPENSSL_MANGLER_ASM(ossl_err_load_PKCS7_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_PROP_strings
#  define ossl_err_load_PROP_strings OPENSSL_MANGLER(ossl_err_load_PROP_strings)
# endif
#else
# ifndef _ossl_err_load_PROP_strings
#  define _ossl_err_load_PROP_strings OPENSSL_MANGLER_ASM(ossl_err_load_PROP_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_PROV_strings
#  define ossl_err_load_PROV_strings OPENSSL_MANGLER(ossl_err_load_PROV_strings)
# endif
#else
# ifndef _ossl_err_load_PROV_strings
#  define _ossl_err_load_PROV_strings OPENSSL_MANGLER_ASM(ossl_err_load_PROV_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_RAND_strings
#  define ossl_err_load_RAND_strings OPENSSL_MANGLER(ossl_err_load_RAND_strings)
# endif
#else
# ifndef _ossl_err_load_RAND_strings
#  define _ossl_err_load_RAND_strings OPENSSL_MANGLER_ASM(ossl_err_load_RAND_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_RSA_strings
#  define ossl_err_load_RSA_strings OPENSSL_MANGLER(ossl_err_load_RSA_strings)
# endif
#else
# ifndef _ossl_err_load_RSA_strings
#  define _ossl_err_load_RSA_strings OPENSSL_MANGLER_ASM(ossl_err_load_RSA_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_SSL_strings
#  define ossl_err_load_SSL_strings OPENSSL_MANGLER(ossl_err_load_SSL_strings)
# endif
#else
# ifndef _ossl_err_load_SSL_strings
#  define _ossl_err_load_SSL_strings OPENSSL_MANGLER_ASM(ossl_err_load_SSL_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_TS_strings
#  define ossl_err_load_TS_strings OPENSSL_MANGLER(ossl_err_load_TS_strings)
# endif
#else
# ifndef _ossl_err_load_TS_strings
#  define _ossl_err_load_TS_strings OPENSSL_MANGLER_ASM(ossl_err_load_TS_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_UI_strings
#  define ossl_err_load_UI_strings OPENSSL_MANGLER(ossl_err_load_UI_strings)
# endif
#else
# ifndef _ossl_err_load_UI_strings
#  define _ossl_err_load_UI_strings OPENSSL_MANGLER_ASM(ossl_err_load_UI_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_X509V3_strings
#  define ossl_err_load_X509V3_strings OPENSSL_MANGLER(ossl_err_load_X509V3_strings)
# endif
#else
# ifndef _ossl_err_load_X509V3_strings
#  define _ossl_err_load_X509V3_strings OPENSSL_MANGLER_ASM(ossl_err_load_X509V3_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_X509_strings
#  define ossl_err_load_X509_strings OPENSSL_MANGLER(ossl_err_load_X509_strings)
# endif
#else
# ifndef _ossl_err_load_X509_strings
#  define _ossl_err_load_X509_strings OPENSSL_MANGLER_ASM(ossl_err_load_X509_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_load_crypto_strings
#  define ossl_err_load_crypto_strings OPENSSL_MANGLER(ossl_err_load_crypto_strings)
# endif
#else
# ifndef _ossl_err_load_crypto_strings
#  define _ossl_err_load_crypto_strings OPENSSL_MANGLER_ASM(ossl_err_load_crypto_strings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_err_string_int
#  define ossl_err_string_int OPENSSL_MANGLER(ossl_err_string_int)
# endif
#else
# ifndef _ossl_err_string_int
#  define _ossl_err_string_int OPENSSL_MANGLER_ASM(ossl_err_string_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_evp_pkey_get1_ED25519
#  define ossl_evp_pkey_get1_ED25519 OPENSSL_MANGLER(ossl_evp_pkey_get1_ED25519)
# endif
#else
# ifndef _ossl_evp_pkey_get1_ED25519
#  define _ossl_evp_pkey_get1_ED25519 OPENSSL_MANGLER_ASM(ossl_evp_pkey_get1_ED25519)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_evp_pkey_get1_ED448
#  define ossl_evp_pkey_get1_ED448 OPENSSL_MANGLER(ossl_evp_pkey_get1_ED448)
# endif
#else
# ifndef _ossl_evp_pkey_get1_ED448
#  define _ossl_evp_pkey_get1_ED448 OPENSSL_MANGLER_ASM(ossl_evp_pkey_get1_ED448)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_evp_pkey_get1_X25519
#  define ossl_evp_pkey_get1_X25519 OPENSSL_MANGLER(ossl_evp_pkey_get1_X25519)
# endif
#else
# ifndef _ossl_evp_pkey_get1_X25519
#  define _ossl_evp_pkey_get1_X25519 OPENSSL_MANGLER_ASM(ossl_evp_pkey_get1_X25519)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_evp_pkey_get1_X448
#  define ossl_evp_pkey_get1_X448 OPENSSL_MANGLER(ossl_evp_pkey_get1_X448)
# endif
#else
# ifndef _ossl_evp_pkey_get1_X448
#  define _ossl_evp_pkey_get1_X448 OPENSSL_MANGLER_ASM(ossl_evp_pkey_get1_X448)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_extract_multiplier_2x20_win5
#  define ossl_extract_multiplier_2x20_win5 OPENSSL_MANGLER(ossl_extract_multiplier_2x20_win5)
# endif
#else
# ifndef _ossl_extract_multiplier_2x20_win5
#  define _ossl_extract_multiplier_2x20_win5 OPENSSL_MANGLER_ASM(ossl_extract_multiplier_2x20_win5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_generate_private_key
#  define ossl_ffc_generate_private_key OPENSSL_MANGLER(ossl_ffc_generate_private_key)
# endif
#else
# ifndef _ossl_ffc_generate_private_key
#  define _ossl_ffc_generate_private_key OPENSSL_MANGLER_ASM(ossl_ffc_generate_private_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_name_to_dh_named_group
#  define ossl_ffc_name_to_dh_named_group OPENSSL_MANGLER(ossl_ffc_name_to_dh_named_group)
# endif
#else
# ifndef _ossl_ffc_name_to_dh_named_group
#  define _ossl_ffc_name_to_dh_named_group OPENSSL_MANGLER_ASM(ossl_ffc_name_to_dh_named_group)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_named_group_get_keylength
#  define ossl_ffc_named_group_get_keylength OPENSSL_MANGLER(ossl_ffc_named_group_get_keylength)
# endif
#else
# ifndef _ossl_ffc_named_group_get_keylength
#  define _ossl_ffc_named_group_get_keylength OPENSSL_MANGLER_ASM(ossl_ffc_named_group_get_keylength)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_named_group_get_name
#  define ossl_ffc_named_group_get_name OPENSSL_MANGLER(ossl_ffc_named_group_get_name)
# endif
#else
# ifndef _ossl_ffc_named_group_get_name
#  define _ossl_ffc_named_group_get_name OPENSSL_MANGLER_ASM(ossl_ffc_named_group_get_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_named_group_get_q
#  define ossl_ffc_named_group_get_q OPENSSL_MANGLER(ossl_ffc_named_group_get_q)
# endif
#else
# ifndef _ossl_ffc_named_group_get_q
#  define _ossl_ffc_named_group_get_q OPENSSL_MANGLER_ASM(ossl_ffc_named_group_get_q)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_named_group_get_uid
#  define ossl_ffc_named_group_get_uid OPENSSL_MANGLER(ossl_ffc_named_group_get_uid)
# endif
#else
# ifndef _ossl_ffc_named_group_get_uid
#  define _ossl_ffc_named_group_get_uid OPENSSL_MANGLER_ASM(ossl_ffc_named_group_get_uid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_named_group_set
#  define ossl_ffc_named_group_set OPENSSL_MANGLER(ossl_ffc_named_group_set)
# endif
#else
# ifndef _ossl_ffc_named_group_set
#  define _ossl_ffc_named_group_set OPENSSL_MANGLER_ASM(ossl_ffc_named_group_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_numbers_to_dh_named_group
#  define ossl_ffc_numbers_to_dh_named_group OPENSSL_MANGLER(ossl_ffc_numbers_to_dh_named_group)
# endif
#else
# ifndef _ossl_ffc_numbers_to_dh_named_group
#  define _ossl_ffc_numbers_to_dh_named_group OPENSSL_MANGLER_ASM(ossl_ffc_numbers_to_dh_named_group)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_FIPS186_2_gen_verify
#  define ossl_ffc_params_FIPS186_2_gen_verify OPENSSL_MANGLER(ossl_ffc_params_FIPS186_2_gen_verify)
# endif
#else
# ifndef _ossl_ffc_params_FIPS186_2_gen_verify
#  define _ossl_ffc_params_FIPS186_2_gen_verify OPENSSL_MANGLER_ASM(ossl_ffc_params_FIPS186_2_gen_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_FIPS186_2_generate
#  define ossl_ffc_params_FIPS186_2_generate OPENSSL_MANGLER(ossl_ffc_params_FIPS186_2_generate)
# endif
#else
# ifndef _ossl_ffc_params_FIPS186_2_generate
#  define _ossl_ffc_params_FIPS186_2_generate OPENSSL_MANGLER_ASM(ossl_ffc_params_FIPS186_2_generate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_FIPS186_2_validate
#  define ossl_ffc_params_FIPS186_2_validate OPENSSL_MANGLER(ossl_ffc_params_FIPS186_2_validate)
# endif
#else
# ifndef _ossl_ffc_params_FIPS186_2_validate
#  define _ossl_ffc_params_FIPS186_2_validate OPENSSL_MANGLER_ASM(ossl_ffc_params_FIPS186_2_validate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_FIPS186_4_gen_verify
#  define ossl_ffc_params_FIPS186_4_gen_verify OPENSSL_MANGLER(ossl_ffc_params_FIPS186_4_gen_verify)
# endif
#else
# ifndef _ossl_ffc_params_FIPS186_4_gen_verify
#  define _ossl_ffc_params_FIPS186_4_gen_verify OPENSSL_MANGLER_ASM(ossl_ffc_params_FIPS186_4_gen_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_FIPS186_4_generate
#  define ossl_ffc_params_FIPS186_4_generate OPENSSL_MANGLER(ossl_ffc_params_FIPS186_4_generate)
# endif
#else
# ifndef _ossl_ffc_params_FIPS186_4_generate
#  define _ossl_ffc_params_FIPS186_4_generate OPENSSL_MANGLER_ASM(ossl_ffc_params_FIPS186_4_generate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_FIPS186_4_validate
#  define ossl_ffc_params_FIPS186_4_validate OPENSSL_MANGLER(ossl_ffc_params_FIPS186_4_validate)
# endif
#else
# ifndef _ossl_ffc_params_FIPS186_4_validate
#  define _ossl_ffc_params_FIPS186_4_validate OPENSSL_MANGLER_ASM(ossl_ffc_params_FIPS186_4_validate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_cleanup
#  define ossl_ffc_params_cleanup OPENSSL_MANGLER(ossl_ffc_params_cleanup)
# endif
#else
# ifndef _ossl_ffc_params_cleanup
#  define _ossl_ffc_params_cleanup OPENSSL_MANGLER_ASM(ossl_ffc_params_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_cmp
#  define ossl_ffc_params_cmp OPENSSL_MANGLER(ossl_ffc_params_cmp)
# endif
#else
# ifndef _ossl_ffc_params_cmp
#  define _ossl_ffc_params_cmp OPENSSL_MANGLER_ASM(ossl_ffc_params_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_copy
#  define ossl_ffc_params_copy OPENSSL_MANGLER(ossl_ffc_params_copy)
# endif
#else
# ifndef _ossl_ffc_params_copy
#  define _ossl_ffc_params_copy OPENSSL_MANGLER_ASM(ossl_ffc_params_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_enable_flags
#  define ossl_ffc_params_enable_flags OPENSSL_MANGLER(ossl_ffc_params_enable_flags)
# endif
#else
# ifndef _ossl_ffc_params_enable_flags
#  define _ossl_ffc_params_enable_flags OPENSSL_MANGLER_ASM(ossl_ffc_params_enable_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_fromdata
#  define ossl_ffc_params_fromdata OPENSSL_MANGLER(ossl_ffc_params_fromdata)
# endif
#else
# ifndef _ossl_ffc_params_fromdata
#  define _ossl_ffc_params_fromdata OPENSSL_MANGLER_ASM(ossl_ffc_params_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_full_validate
#  define ossl_ffc_params_full_validate OPENSSL_MANGLER(ossl_ffc_params_full_validate)
# endif
#else
# ifndef _ossl_ffc_params_full_validate
#  define _ossl_ffc_params_full_validate OPENSSL_MANGLER_ASM(ossl_ffc_params_full_validate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_get0_pqg
#  define ossl_ffc_params_get0_pqg OPENSSL_MANGLER(ossl_ffc_params_get0_pqg)
# endif
#else
# ifndef _ossl_ffc_params_get0_pqg
#  define _ossl_ffc_params_get0_pqg OPENSSL_MANGLER_ASM(ossl_ffc_params_get0_pqg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_get_validate_params
#  define ossl_ffc_params_get_validate_params OPENSSL_MANGLER(ossl_ffc_params_get_validate_params)
# endif
#else
# ifndef _ossl_ffc_params_get_validate_params
#  define _ossl_ffc_params_get_validate_params OPENSSL_MANGLER_ASM(ossl_ffc_params_get_validate_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_init
#  define ossl_ffc_params_init OPENSSL_MANGLER(ossl_ffc_params_init)
# endif
#else
# ifndef _ossl_ffc_params_init
#  define _ossl_ffc_params_init OPENSSL_MANGLER_ASM(ossl_ffc_params_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_print
#  define ossl_ffc_params_print OPENSSL_MANGLER(ossl_ffc_params_print)
# endif
#else
# ifndef _ossl_ffc_params_print
#  define _ossl_ffc_params_print OPENSSL_MANGLER_ASM(ossl_ffc_params_print)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_set0_j
#  define ossl_ffc_params_set0_j OPENSSL_MANGLER(ossl_ffc_params_set0_j)
# endif
#else
# ifndef _ossl_ffc_params_set0_j
#  define _ossl_ffc_params_set0_j OPENSSL_MANGLER_ASM(ossl_ffc_params_set0_j)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_set0_pqg
#  define ossl_ffc_params_set0_pqg OPENSSL_MANGLER(ossl_ffc_params_set0_pqg)
# endif
#else
# ifndef _ossl_ffc_params_set0_pqg
#  define _ossl_ffc_params_set0_pqg OPENSSL_MANGLER_ASM(ossl_ffc_params_set0_pqg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_set_flags
#  define ossl_ffc_params_set_flags OPENSSL_MANGLER(ossl_ffc_params_set_flags)
# endif
#else
# ifndef _ossl_ffc_params_set_flags
#  define _ossl_ffc_params_set_flags OPENSSL_MANGLER_ASM(ossl_ffc_params_set_flags)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_set_gindex
#  define ossl_ffc_params_set_gindex OPENSSL_MANGLER(ossl_ffc_params_set_gindex)
# endif
#else
# ifndef _ossl_ffc_params_set_gindex
#  define _ossl_ffc_params_set_gindex OPENSSL_MANGLER_ASM(ossl_ffc_params_set_gindex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_set_h
#  define ossl_ffc_params_set_h OPENSSL_MANGLER(ossl_ffc_params_set_h)
# endif
#else
# ifndef _ossl_ffc_params_set_h
#  define _ossl_ffc_params_set_h OPENSSL_MANGLER_ASM(ossl_ffc_params_set_h)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_set_pcounter
#  define ossl_ffc_params_set_pcounter OPENSSL_MANGLER(ossl_ffc_params_set_pcounter)
# endif
#else
# ifndef _ossl_ffc_params_set_pcounter
#  define _ossl_ffc_params_set_pcounter OPENSSL_MANGLER_ASM(ossl_ffc_params_set_pcounter)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_set_seed
#  define ossl_ffc_params_set_seed OPENSSL_MANGLER(ossl_ffc_params_set_seed)
# endif
#else
# ifndef _ossl_ffc_params_set_seed
#  define _ossl_ffc_params_set_seed OPENSSL_MANGLER_ASM(ossl_ffc_params_set_seed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_set_validate_params
#  define ossl_ffc_params_set_validate_params OPENSSL_MANGLER(ossl_ffc_params_set_validate_params)
# endif
#else
# ifndef _ossl_ffc_params_set_validate_params
#  define _ossl_ffc_params_set_validate_params OPENSSL_MANGLER_ASM(ossl_ffc_params_set_validate_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_simple_validate
#  define ossl_ffc_params_simple_validate OPENSSL_MANGLER(ossl_ffc_params_simple_validate)
# endif
#else
# ifndef _ossl_ffc_params_simple_validate
#  define _ossl_ffc_params_simple_validate OPENSSL_MANGLER_ASM(ossl_ffc_params_simple_validate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_todata
#  define ossl_ffc_params_todata OPENSSL_MANGLER(ossl_ffc_params_todata)
# endif
#else
# ifndef _ossl_ffc_params_todata
#  define _ossl_ffc_params_todata OPENSSL_MANGLER_ASM(ossl_ffc_params_todata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_params_validate_unverifiable_g
#  define ossl_ffc_params_validate_unverifiable_g OPENSSL_MANGLER(ossl_ffc_params_validate_unverifiable_g)
# endif
#else
# ifndef _ossl_ffc_params_validate_unverifiable_g
#  define _ossl_ffc_params_validate_unverifiable_g OPENSSL_MANGLER_ASM(ossl_ffc_params_validate_unverifiable_g)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_set_digest
#  define ossl_ffc_set_digest OPENSSL_MANGLER(ossl_ffc_set_digest)
# endif
#else
# ifndef _ossl_ffc_set_digest
#  define _ossl_ffc_set_digest OPENSSL_MANGLER_ASM(ossl_ffc_set_digest)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_uid_to_dh_named_group
#  define ossl_ffc_uid_to_dh_named_group OPENSSL_MANGLER(ossl_ffc_uid_to_dh_named_group)
# endif
#else
# ifndef _ossl_ffc_uid_to_dh_named_group
#  define _ossl_ffc_uid_to_dh_named_group OPENSSL_MANGLER_ASM(ossl_ffc_uid_to_dh_named_group)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_validate_private_key
#  define ossl_ffc_validate_private_key OPENSSL_MANGLER(ossl_ffc_validate_private_key)
# endif
#else
# ifndef _ossl_ffc_validate_private_key
#  define _ossl_ffc_validate_private_key OPENSSL_MANGLER_ASM(ossl_ffc_validate_private_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_validate_public_key
#  define ossl_ffc_validate_public_key OPENSSL_MANGLER(ossl_ffc_validate_public_key)
# endif
#else
# ifndef _ossl_ffc_validate_public_key
#  define _ossl_ffc_validate_public_key OPENSSL_MANGLER_ASM(ossl_ffc_validate_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ffc_validate_public_key_partial
#  define ossl_ffc_validate_public_key_partial OPENSSL_MANGLER(ossl_ffc_validate_public_key_partial)
# endif
#else
# ifndef _ossl_ffc_validate_public_key_partial
#  define _ossl_ffc_validate_public_key_partial OPENSSL_MANGLER_ASM(ossl_ffc_validate_public_key_partial)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_file_store_functions
#  define ossl_file_store_functions OPENSSL_MANGLER(ossl_file_store_functions)
# endif
#else
# ifndef _ossl_file_store_functions
#  define _ossl_file_store_functions OPENSSL_MANGLER_ASM(ossl_file_store_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_aad_update
#  define ossl_gcm_aad_update OPENSSL_MANGLER(ossl_gcm_aad_update)
# endif
#else
# ifndef _ossl_gcm_aad_update
#  define _ossl_gcm_aad_update OPENSSL_MANGLER_ASM(ossl_gcm_aad_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_cipher
#  define ossl_gcm_cipher OPENSSL_MANGLER(ossl_gcm_cipher)
# endif
#else
# ifndef _ossl_gcm_cipher
#  define _ossl_gcm_cipher OPENSSL_MANGLER_ASM(ossl_gcm_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_cipher_final
#  define ossl_gcm_cipher_final OPENSSL_MANGLER(ossl_gcm_cipher_final)
# endif
#else
# ifndef _ossl_gcm_cipher_final
#  define _ossl_gcm_cipher_final OPENSSL_MANGLER_ASM(ossl_gcm_cipher_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_cipher_update
#  define ossl_gcm_cipher_update OPENSSL_MANGLER(ossl_gcm_cipher_update)
# endif
#else
# ifndef _ossl_gcm_cipher_update
#  define _ossl_gcm_cipher_update OPENSSL_MANGLER_ASM(ossl_gcm_cipher_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_dinit
#  define ossl_gcm_dinit OPENSSL_MANGLER(ossl_gcm_dinit)
# endif
#else
# ifndef _ossl_gcm_dinit
#  define _ossl_gcm_dinit OPENSSL_MANGLER_ASM(ossl_gcm_dinit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_einit
#  define ossl_gcm_einit OPENSSL_MANGLER(ossl_gcm_einit)
# endif
#else
# ifndef _ossl_gcm_einit
#  define _ossl_gcm_einit OPENSSL_MANGLER_ASM(ossl_gcm_einit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_get_ctx_params
#  define ossl_gcm_get_ctx_params OPENSSL_MANGLER(ossl_gcm_get_ctx_params)
# endif
#else
# ifndef _ossl_gcm_get_ctx_params
#  define _ossl_gcm_get_ctx_params OPENSSL_MANGLER_ASM(ossl_gcm_get_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_initctx
#  define ossl_gcm_initctx OPENSSL_MANGLER(ossl_gcm_initctx)
# endif
#else
# ifndef _ossl_gcm_initctx
#  define _ossl_gcm_initctx OPENSSL_MANGLER_ASM(ossl_gcm_initctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_one_shot
#  define ossl_gcm_one_shot OPENSSL_MANGLER(ossl_gcm_one_shot)
# endif
#else
# ifndef _ossl_gcm_one_shot
#  define _ossl_gcm_one_shot OPENSSL_MANGLER_ASM(ossl_gcm_one_shot)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_set_ctx_params
#  define ossl_gcm_set_ctx_params OPENSSL_MANGLER(ossl_gcm_set_ctx_params)
# endif
#else
# ifndef _ossl_gcm_set_ctx_params
#  define _ossl_gcm_set_ctx_params OPENSSL_MANGLER_ASM(ossl_gcm_set_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_setiv
#  define ossl_gcm_setiv OPENSSL_MANGLER(ossl_gcm_setiv)
# endif
#else
# ifndef _ossl_gcm_setiv
#  define _ossl_gcm_setiv OPENSSL_MANGLER_ASM(ossl_gcm_setiv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_stream_final
#  define ossl_gcm_stream_final OPENSSL_MANGLER(ossl_gcm_stream_final)
# endif
#else
# ifndef _ossl_gcm_stream_final
#  define _ossl_gcm_stream_final OPENSSL_MANGLER_ASM(ossl_gcm_stream_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gcm_stream_update
#  define ossl_gcm_stream_update OPENSSL_MANGLER(ossl_gcm_stream_update)
# endif
#else
# ifndef _ossl_gcm_stream_update
#  define _ossl_gcm_stream_update OPENSSL_MANGLER_ASM(ossl_gcm_stream_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_get_extension_type
#  define ossl_get_extension_type OPENSSL_MANGLER(ossl_get_extension_type)
# endif
#else
# ifndef _ossl_get_extension_type
#  define _ossl_get_extension_type OPENSSL_MANGLER_ASM(ossl_get_extension_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_global_properties_no_mirrored
#  define ossl_global_properties_no_mirrored OPENSSL_MANGLER(ossl_global_properties_no_mirrored)
# endif
#else
# ifndef _ossl_global_properties_no_mirrored
#  define _ossl_global_properties_no_mirrored OPENSSL_MANGLER_ASM(ossl_global_properties_no_mirrored)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_global_properties_stop_mirroring
#  define ossl_global_properties_stop_mirroring OPENSSL_MANGLER(ossl_global_properties_stop_mirroring)
# endif
#else
# ifndef _ossl_global_properties_stop_mirroring
#  define _ossl_global_properties_stop_mirroring OPENSSL_MANGLER_ASM(ossl_global_properties_stop_mirroring)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gmac_functions
#  define ossl_gmac_functions OPENSSL_MANGLER(ossl_gmac_functions)
# endif
#else
# ifndef _ossl_gmac_functions
#  define _ossl_gmac_functions OPENSSL_MANGLER_ASM(ossl_gmac_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gost18_cke_cipher_nid
#  define ossl_gost18_cke_cipher_nid OPENSSL_MANGLER(ossl_gost18_cke_cipher_nid)
# endif
#else
# ifndef _ossl_gost18_cke_cipher_nid
#  define _ossl_gost18_cke_cipher_nid OPENSSL_MANGLER_ASM(ossl_gost18_cke_cipher_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_gost_ukm
#  define ossl_gost_ukm OPENSSL_MANGLER(ossl_gost_ukm)
# endif
#else
# ifndef _ossl_gost_ukm
#  define _ossl_gost_ukm OPENSSL_MANGLER_ASM(ossl_gost_ukm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_hexstr2buf_sep
#  define ossl_hexstr2buf_sep OPENSSL_MANGLER(ossl_hexstr2buf_sep)
# endif
#else
# ifndef _ossl_hexstr2buf_sep
#  define _ossl_hexstr2buf_sep OPENSSL_MANGLER_ASM(ossl_hexstr2buf_sep)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_hmac_functions
#  define ossl_hmac_functions OPENSSL_MANGLER(ossl_hmac_functions)
# endif
#else
# ifndef _ossl_hmac_functions
#  define _ossl_hmac_functions OPENSSL_MANGLER_ASM(ossl_hmac_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_i2c_ASN1_BIT_STRING
#  define ossl_i2c_ASN1_BIT_STRING OPENSSL_MANGLER(ossl_i2c_ASN1_BIT_STRING)
# endif
#else
# ifndef _ossl_i2c_ASN1_BIT_STRING
#  define _ossl_i2c_ASN1_BIT_STRING OPENSSL_MANGLER_ASM(ossl_i2c_ASN1_BIT_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_i2c_ASN1_INTEGER
#  define ossl_i2c_ASN1_INTEGER OPENSSL_MANGLER(ossl_i2c_ASN1_INTEGER)
# endif
#else
# ifndef _ossl_i2c_ASN1_INTEGER
#  define _ossl_i2c_ASN1_INTEGER OPENSSL_MANGLER_ASM(ossl_i2c_ASN1_INTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_i2c_uint64_int
#  define ossl_i2c_uint64_int OPENSSL_MANGLER(ossl_i2c_uint64_int)
# endif
#else
# ifndef _ossl_i2c_uint64_int
#  define _ossl_i2c_uint64_int OPENSSL_MANGLER_ASM(ossl_i2c_uint64_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_i2d_DH_PUBKEY
#  define ossl_i2d_DH_PUBKEY OPENSSL_MANGLER(ossl_i2d_DH_PUBKEY)
# endif
#else
# ifndef _ossl_i2d_DH_PUBKEY
#  define _ossl_i2d_DH_PUBKEY OPENSSL_MANGLER_ASM(ossl_i2d_DH_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_i2d_DHx_PUBKEY
#  define ossl_i2d_DHx_PUBKEY OPENSSL_MANGLER(ossl_i2d_DHx_PUBKEY)
# endif
#else
# ifndef _ossl_i2d_DHx_PUBKEY
#  define _ossl_i2d_DHx_PUBKEY OPENSSL_MANGLER_ASM(ossl_i2d_DHx_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_i2d_ED25519_PUBKEY
#  define ossl_i2d_ED25519_PUBKEY OPENSSL_MANGLER(ossl_i2d_ED25519_PUBKEY)
# endif
#else
# ifndef _ossl_i2d_ED25519_PUBKEY
#  define _ossl_i2d_ED25519_PUBKEY OPENSSL_MANGLER_ASM(ossl_i2d_ED25519_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_i2d_ED448_PUBKEY
#  define ossl_i2d_ED448_PUBKEY OPENSSL_MANGLER(ossl_i2d_ED448_PUBKEY)
# endif
#else
# ifndef _ossl_i2d_ED448_PUBKEY
#  define _ossl_i2d_ED448_PUBKEY OPENSSL_MANGLER_ASM(ossl_i2d_ED448_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_i2d_X25519_PUBKEY
#  define ossl_i2d_X25519_PUBKEY OPENSSL_MANGLER(ossl_i2d_X25519_PUBKEY)
# endif
#else
# ifndef _ossl_i2d_X25519_PUBKEY
#  define _ossl_i2d_X25519_PUBKEY OPENSSL_MANGLER_ASM(ossl_i2d_X25519_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_i2d_X448_PUBKEY
#  define ossl_i2d_X448_PUBKEY OPENSSL_MANGLER(ossl_i2d_X448_PUBKEY)
# endif
#else
# ifndef _ossl_i2d_X448_PUBKEY
#  define _ossl_i2d_X448_PUBKEY OPENSSL_MANGLER_ASM(ossl_i2d_X448_PUBKEY)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ifc_ffc_compute_security_bits
#  define ossl_ifc_ffc_compute_security_bits OPENSSL_MANGLER(ossl_ifc_ffc_compute_security_bits)
# endif
#else
# ifndef _ossl_ifc_ffc_compute_security_bits
#  define _ossl_ifc_ffc_compute_security_bits OPENSSL_MANGLER_ASM(ossl_ifc_ffc_compute_security_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_init_thread
#  define ossl_init_thread OPENSSL_MANGLER(ossl_init_thread)
# endif
#else
# ifndef _ossl_init_thread
#  define _ossl_init_thread OPENSSL_MANGLER_ASM(ossl_init_thread)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_init_thread_deregister
#  define ossl_init_thread_deregister OPENSSL_MANGLER(ossl_init_thread_deregister)
# endif
#else
# ifndef _ossl_init_thread_deregister
#  define _ossl_init_thread_deregister OPENSSL_MANGLER_ASM(ossl_init_thread_deregister)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_init_thread_start
#  define ossl_init_thread_start OPENSSL_MANGLER(ossl_init_thread_start)
# endif
#else
# ifndef _ossl_init_thread_start
#  define _ossl_init_thread_start OPENSSL_MANGLER_ASM(ossl_init_thread_start)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_ipaddr_to_asc
#  define ossl_ipaddr_to_asc OPENSSL_MANGLER(ossl_ipaddr_to_asc)
# endif
#else
# ifndef _ossl_ipaddr_to_asc
#  define _ossl_ipaddr_to_asc OPENSSL_MANGLER_ASM(ossl_ipaddr_to_asc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_is_partially_overlapping
#  define ossl_is_partially_overlapping OPENSSL_MANGLER(ossl_is_partially_overlapping)
# endif
#else
# ifndef _ossl_is_partially_overlapping
#  define _ossl_is_partially_overlapping OPENSSL_MANGLER_ASM(ossl_is_partially_overlapping)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_isdigit
#  define ossl_isdigit OPENSSL_MANGLER(ossl_isdigit)
# endif
#else
# ifndef _ossl_isdigit
#  define _ossl_isdigit OPENSSL_MANGLER_ASM(ossl_isdigit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_islower
#  define ossl_islower OPENSSL_MANGLER(ossl_islower)
# endif
#else
# ifndef _ossl_islower
#  define _ossl_islower OPENSSL_MANGLER_ASM(ossl_islower)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_isupper
#  define ossl_isupper OPENSSL_MANGLER(ossl_isupper)
# endif
#else
# ifndef _ossl_isupper
#  define _ossl_isupper OPENSSL_MANGLER_ASM(ossl_isupper)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_data_free
#  define ossl_kdf_data_free OPENSSL_MANGLER(ossl_kdf_data_free)
# endif
#else
# ifndef _ossl_kdf_data_free
#  define _ossl_kdf_data_free OPENSSL_MANGLER_ASM(ossl_kdf_data_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_data_new
#  define ossl_kdf_data_new OPENSSL_MANGLER(ossl_kdf_data_new)
# endif
#else
# ifndef _ossl_kdf_data_new
#  define _ossl_kdf_data_new OPENSSL_MANGLER_ASM(ossl_kdf_data_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_data_up_ref
#  define ossl_kdf_data_up_ref OPENSSL_MANGLER(ossl_kdf_data_up_ref)
# endif
#else
# ifndef _ossl_kdf_data_up_ref
#  define _ossl_kdf_data_up_ref OPENSSL_MANGLER_ASM(ossl_kdf_data_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_hkdf_functions
#  define ossl_kdf_hkdf_functions OPENSSL_MANGLER(ossl_kdf_hkdf_functions)
# endif
#else
# ifndef _ossl_kdf_hkdf_functions
#  define _ossl_kdf_hkdf_functions OPENSSL_MANGLER_ASM(ossl_kdf_hkdf_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_hkdf_keyexch_functions
#  define ossl_kdf_hkdf_keyexch_functions OPENSSL_MANGLER(ossl_kdf_hkdf_keyexch_functions)
# endif
#else
# ifndef _ossl_kdf_hkdf_keyexch_functions
#  define _ossl_kdf_hkdf_keyexch_functions OPENSSL_MANGLER_ASM(ossl_kdf_hkdf_keyexch_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_kbkdf_functions
#  define ossl_kdf_kbkdf_functions OPENSSL_MANGLER(ossl_kdf_kbkdf_functions)
# endif
#else
# ifndef _ossl_kdf_kbkdf_functions
#  define _ossl_kdf_kbkdf_functions OPENSSL_MANGLER_ASM(ossl_kdf_kbkdf_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_keymgmt_functions
#  define ossl_kdf_keymgmt_functions OPENSSL_MANGLER(ossl_kdf_keymgmt_functions)
# endif
#else
# ifndef _ossl_kdf_keymgmt_functions
#  define _ossl_kdf_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_kdf_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_krb5kdf_functions
#  define ossl_kdf_krb5kdf_functions OPENSSL_MANGLER(ossl_kdf_krb5kdf_functions)
# endif
#else
# ifndef _ossl_kdf_krb5kdf_functions
#  define _ossl_kdf_krb5kdf_functions OPENSSL_MANGLER_ASM(ossl_kdf_krb5kdf_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_pbkdf1_functions
#  define ossl_kdf_pbkdf1_functions OPENSSL_MANGLER(ossl_kdf_pbkdf1_functions)
# endif
#else
# ifndef _ossl_kdf_pbkdf1_functions
#  define _ossl_kdf_pbkdf1_functions OPENSSL_MANGLER_ASM(ossl_kdf_pbkdf1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_pbkdf2_functions
#  define ossl_kdf_pbkdf2_functions OPENSSL_MANGLER(ossl_kdf_pbkdf2_functions)
# endif
#else
# ifndef _ossl_kdf_pbkdf2_functions
#  define _ossl_kdf_pbkdf2_functions OPENSSL_MANGLER_ASM(ossl_kdf_pbkdf2_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_pkcs12_functions
#  define ossl_kdf_pkcs12_functions OPENSSL_MANGLER(ossl_kdf_pkcs12_functions)
# endif
#else
# ifndef _ossl_kdf_pkcs12_functions
#  define _ossl_kdf_pkcs12_functions OPENSSL_MANGLER_ASM(ossl_kdf_pkcs12_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_scrypt_functions
#  define ossl_kdf_scrypt_functions OPENSSL_MANGLER(ossl_kdf_scrypt_functions)
# endif
#else
# ifndef _ossl_kdf_scrypt_functions
#  define _ossl_kdf_scrypt_functions OPENSSL_MANGLER_ASM(ossl_kdf_scrypt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_scrypt_keyexch_functions
#  define ossl_kdf_scrypt_keyexch_functions OPENSSL_MANGLER(ossl_kdf_scrypt_keyexch_functions)
# endif
#else
# ifndef _ossl_kdf_scrypt_keyexch_functions
#  define _ossl_kdf_scrypt_keyexch_functions OPENSSL_MANGLER_ASM(ossl_kdf_scrypt_keyexch_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_sshkdf_functions
#  define ossl_kdf_sshkdf_functions OPENSSL_MANGLER(ossl_kdf_sshkdf_functions)
# endif
#else
# ifndef _ossl_kdf_sshkdf_functions
#  define _ossl_kdf_sshkdf_functions OPENSSL_MANGLER_ASM(ossl_kdf_sshkdf_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_sskdf_functions
#  define ossl_kdf_sskdf_functions OPENSSL_MANGLER(ossl_kdf_sskdf_functions)
# endif
#else
# ifndef _ossl_kdf_sskdf_functions
#  define _ossl_kdf_sskdf_functions OPENSSL_MANGLER_ASM(ossl_kdf_sskdf_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_tls1_3_kdf_functions
#  define ossl_kdf_tls1_3_kdf_functions OPENSSL_MANGLER(ossl_kdf_tls1_3_kdf_functions)
# endif
#else
# ifndef _ossl_kdf_tls1_3_kdf_functions
#  define _ossl_kdf_tls1_3_kdf_functions OPENSSL_MANGLER_ASM(ossl_kdf_tls1_3_kdf_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_tls1_prf_functions
#  define ossl_kdf_tls1_prf_functions OPENSSL_MANGLER(ossl_kdf_tls1_prf_functions)
# endif
#else
# ifndef _ossl_kdf_tls1_prf_functions
#  define _ossl_kdf_tls1_prf_functions OPENSSL_MANGLER_ASM(ossl_kdf_tls1_prf_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_tls1_prf_keyexch_functions
#  define ossl_kdf_tls1_prf_keyexch_functions OPENSSL_MANGLER(ossl_kdf_tls1_prf_keyexch_functions)
# endif
#else
# ifndef _ossl_kdf_tls1_prf_keyexch_functions
#  define _ossl_kdf_tls1_prf_keyexch_functions OPENSSL_MANGLER_ASM(ossl_kdf_tls1_prf_keyexch_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_x942_kdf_functions
#  define ossl_kdf_x942_kdf_functions OPENSSL_MANGLER(ossl_kdf_x942_kdf_functions)
# endif
#else
# ifndef _ossl_kdf_x942_kdf_functions
#  define _ossl_kdf_x942_kdf_functions OPENSSL_MANGLER_ASM(ossl_kdf_x942_kdf_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kdf_x963_kdf_functions
#  define ossl_kdf_x963_kdf_functions OPENSSL_MANGLER(ossl_kdf_x963_kdf_functions)
# endif
#else
# ifndef _ossl_kdf_x963_kdf_functions
#  define _ossl_kdf_x963_kdf_functions OPENSSL_MANGLER_ASM(ossl_kdf_x963_kdf_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_keccak_kmac_128_functions
#  define ossl_keccak_kmac_128_functions OPENSSL_MANGLER(ossl_keccak_kmac_128_functions)
# endif
#else
# ifndef _ossl_keccak_kmac_128_functions
#  define _ossl_keccak_kmac_128_functions OPENSSL_MANGLER_ASM(ossl_keccak_kmac_128_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_keccak_kmac_256_functions
#  define ossl_keccak_kmac_256_functions OPENSSL_MANGLER(ossl_keccak_kmac_256_functions)
# endif
#else
# ifndef _ossl_keccak_kmac_256_functions
#  define _ossl_keccak_kmac_256_functions OPENSSL_MANGLER_ASM(ossl_keccak_kmac_256_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_keccak_kmac_init
#  define ossl_keccak_kmac_init OPENSSL_MANGLER(ossl_keccak_kmac_init)
# endif
#else
# ifndef _ossl_keccak_kmac_init
#  define _ossl_keccak_kmac_init OPENSSL_MANGLER_ASM(ossl_keccak_kmac_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kmac128_functions
#  define ossl_kmac128_functions OPENSSL_MANGLER(ossl_kmac128_functions)
# endif
#else
# ifndef _ossl_kmac128_functions
#  define _ossl_kmac128_functions OPENSSL_MANGLER_ASM(ossl_kmac128_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_kmac256_functions
#  define ossl_kmac256_functions OPENSSL_MANGLER(ossl_kmac256_functions)
# endif
#else
# ifndef _ossl_kmac256_functions
#  define _ossl_kmac256_functions OPENSSL_MANGLER_ASM(ossl_kmac256_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lh_strcasehash
#  define ossl_lh_strcasehash OPENSSL_MANGLER(ossl_lh_strcasehash)
# endif
#else
# ifndef _ossl_lh_strcasehash
#  define _ossl_lh_strcasehash OPENSSL_MANGLER_ASM(ossl_lh_strcasehash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_default_deinit
#  define ossl_lib_ctx_default_deinit OPENSSL_MANGLER(ossl_lib_ctx_default_deinit)
# endif
#else
# ifndef _ossl_lib_ctx_default_deinit
#  define _ossl_lib_ctx_default_deinit OPENSSL_MANGLER_ASM(ossl_lib_ctx_default_deinit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_get_concrete
#  define ossl_lib_ctx_get_concrete OPENSSL_MANGLER(ossl_lib_ctx_get_concrete)
# endif
#else
# ifndef _ossl_lib_ctx_get_concrete
#  define _ossl_lib_ctx_get_concrete OPENSSL_MANGLER_ASM(ossl_lib_ctx_get_concrete)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_get_data
#  define ossl_lib_ctx_get_data OPENSSL_MANGLER(ossl_lib_ctx_get_data)
# endif
#else
# ifndef _ossl_lib_ctx_get_data
#  define _ossl_lib_ctx_get_data OPENSSL_MANGLER_ASM(ossl_lib_ctx_get_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_get_descriptor
#  define ossl_lib_ctx_get_descriptor OPENSSL_MANGLER(ossl_lib_ctx_get_descriptor)
# endif
#else
# ifndef _ossl_lib_ctx_get_descriptor
#  define _ossl_lib_ctx_get_descriptor OPENSSL_MANGLER_ASM(ossl_lib_ctx_get_descriptor)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_get_ex_data_global
#  define ossl_lib_ctx_get_ex_data_global OPENSSL_MANGLER(ossl_lib_ctx_get_ex_data_global)
# endif
#else
# ifndef _ossl_lib_ctx_get_ex_data_global
#  define _ossl_lib_ctx_get_ex_data_global OPENSSL_MANGLER_ASM(ossl_lib_ctx_get_ex_data_global)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_is_child
#  define ossl_lib_ctx_is_child OPENSSL_MANGLER(ossl_lib_ctx_is_child)
# endif
#else
# ifndef _ossl_lib_ctx_is_child
#  define _ossl_lib_ctx_is_child OPENSSL_MANGLER_ASM(ossl_lib_ctx_is_child)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_is_default
#  define ossl_lib_ctx_is_default OPENSSL_MANGLER(ossl_lib_ctx_is_default)
# endif
#else
# ifndef _ossl_lib_ctx_is_default
#  define _ossl_lib_ctx_is_default OPENSSL_MANGLER_ASM(ossl_lib_ctx_is_default)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_is_global_default
#  define ossl_lib_ctx_is_global_default OPENSSL_MANGLER(ossl_lib_ctx_is_global_default)
# endif
#else
# ifndef _ossl_lib_ctx_is_global_default
#  define _ossl_lib_ctx_is_global_default OPENSSL_MANGLER_ASM(ossl_lib_ctx_is_global_default)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_onfree
#  define ossl_lib_ctx_onfree OPENSSL_MANGLER(ossl_lib_ctx_onfree)
# endif
#else
# ifndef _ossl_lib_ctx_onfree
#  define _ossl_lib_ctx_onfree OPENSSL_MANGLER_ASM(ossl_lib_ctx_onfree)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_read_lock
#  define ossl_lib_ctx_read_lock OPENSSL_MANGLER(ossl_lib_ctx_read_lock)
# endif
#else
# ifndef _ossl_lib_ctx_read_lock
#  define _ossl_lib_ctx_read_lock OPENSSL_MANGLER_ASM(ossl_lib_ctx_read_lock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_run_once
#  define ossl_lib_ctx_run_once OPENSSL_MANGLER(ossl_lib_ctx_run_once)
# endif
#else
# ifndef _ossl_lib_ctx_run_once
#  define _ossl_lib_ctx_run_once OPENSSL_MANGLER_ASM(ossl_lib_ctx_run_once)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_unlock
#  define ossl_lib_ctx_unlock OPENSSL_MANGLER(ossl_lib_ctx_unlock)
# endif
#else
# ifndef _ossl_lib_ctx_unlock
#  define _ossl_lib_ctx_unlock OPENSSL_MANGLER_ASM(ossl_lib_ctx_unlock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_lib_ctx_write_lock
#  define ossl_lib_ctx_write_lock OPENSSL_MANGLER(ossl_lib_ctx_write_lock)
# endif
#else
# ifndef _ossl_lib_ctx_write_lock
#  define _ossl_lib_ctx_write_lock OPENSSL_MANGLER_ASM(ossl_lib_ctx_write_lock)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_mac_key_free
#  define ossl_mac_key_free OPENSSL_MANGLER(ossl_mac_key_free)
# endif
#else
# ifndef _ossl_mac_key_free
#  define _ossl_mac_key_free OPENSSL_MANGLER_ASM(ossl_mac_key_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_mac_key_new
#  define ossl_mac_key_new OPENSSL_MANGLER(ossl_mac_key_new)
# endif
#else
# ifndef _ossl_mac_key_new
#  define _ossl_mac_key_new OPENSSL_MANGLER_ASM(ossl_mac_key_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_mac_key_up_ref
#  define ossl_mac_key_up_ref OPENSSL_MANGLER(ossl_mac_key_up_ref)
# endif
#else
# ifndef _ossl_mac_key_up_ref
#  define _ossl_mac_key_up_ref OPENSSL_MANGLER_ASM(ossl_mac_key_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_mac_legacy_cmac_signature_functions
#  define ossl_mac_legacy_cmac_signature_functions OPENSSL_MANGLER(ossl_mac_legacy_cmac_signature_functions)
# endif
#else
# ifndef _ossl_mac_legacy_cmac_signature_functions
#  define _ossl_mac_legacy_cmac_signature_functions OPENSSL_MANGLER_ASM(ossl_mac_legacy_cmac_signature_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_mac_legacy_hmac_signature_functions
#  define ossl_mac_legacy_hmac_signature_functions OPENSSL_MANGLER(ossl_mac_legacy_hmac_signature_functions)
# endif
#else
# ifndef _ossl_mac_legacy_hmac_signature_functions
#  define _ossl_mac_legacy_hmac_signature_functions OPENSSL_MANGLER_ASM(ossl_mac_legacy_hmac_signature_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_mac_legacy_keymgmt_functions
#  define ossl_mac_legacy_keymgmt_functions OPENSSL_MANGLER(ossl_mac_legacy_keymgmt_functions)
# endif
#else
# ifndef _ossl_mac_legacy_keymgmt_functions
#  define _ossl_mac_legacy_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_mac_legacy_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_mac_legacy_poly1305_signature_functions
#  define ossl_mac_legacy_poly1305_signature_functions OPENSSL_MANGLER(ossl_mac_legacy_poly1305_signature_functions)
# endif
#else
# ifndef _ossl_mac_legacy_poly1305_signature_functions
#  define _ossl_mac_legacy_poly1305_signature_functions OPENSSL_MANGLER_ASM(ossl_mac_legacy_poly1305_signature_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_mac_legacy_siphash_signature_functions
#  define ossl_mac_legacy_siphash_signature_functions OPENSSL_MANGLER(ossl_mac_legacy_siphash_signature_functions)
# endif
#else
# ifndef _ossl_mac_legacy_siphash_signature_functions
#  define _ossl_mac_legacy_siphash_signature_functions OPENSSL_MANGLER_ASM(ossl_mac_legacy_siphash_signature_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_md5_block_asm_data_order
#  define ossl_md5_block_asm_data_order OPENSSL_MANGLER(ossl_md5_block_asm_data_order)
# endif
#else
# ifndef _ossl_md5_block_asm_data_order
#  define _ossl_md5_block_asm_data_order OPENSSL_MANGLER_ASM(ossl_md5_block_asm_data_order)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_md5_functions
#  define ossl_md5_functions OPENSSL_MANGLER(ossl_md5_functions)
# endif
#else
# ifndef _ossl_md5_functions
#  define _ossl_md5_functions OPENSSL_MANGLER_ASM(ossl_md5_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_md5_sha1_ctrl
#  define ossl_md5_sha1_ctrl OPENSSL_MANGLER(ossl_md5_sha1_ctrl)
# endif
#else
# ifndef _ossl_md5_sha1_ctrl
#  define _ossl_md5_sha1_ctrl OPENSSL_MANGLER_ASM(ossl_md5_sha1_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_md5_sha1_final
#  define ossl_md5_sha1_final OPENSSL_MANGLER(ossl_md5_sha1_final)
# endif
#else
# ifndef _ossl_md5_sha1_final
#  define _ossl_md5_sha1_final OPENSSL_MANGLER_ASM(ossl_md5_sha1_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_md5_sha1_functions
#  define ossl_md5_sha1_functions OPENSSL_MANGLER(ossl_md5_sha1_functions)
# endif
#else
# ifndef _ossl_md5_sha1_functions
#  define _ossl_md5_sha1_functions OPENSSL_MANGLER_ASM(ossl_md5_sha1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_md5_sha1_init
#  define ossl_md5_sha1_init OPENSSL_MANGLER(ossl_md5_sha1_init)
# endif
#else
# ifndef _ossl_md5_sha1_init
#  define _ossl_md5_sha1_init OPENSSL_MANGLER_ASM(ossl_md5_sha1_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_md5_sha1_update
#  define ossl_md5_sha1_update OPENSSL_MANGLER(ossl_md5_sha1_update)
# endif
#else
# ifndef _ossl_md5_sha1_update
#  define _ossl_md5_sha1_update OPENSSL_MANGLER_ASM(ossl_md5_sha1_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_mdc2_functions
#  define ossl_mdc2_functions OPENSSL_MANGLER(ossl_mdc2_functions)
# endif
#else
# ifndef _ossl_mdc2_functions
#  define _ossl_mdc2_functions OPENSSL_MANGLER_ASM(ossl_mdc2_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_construct
#  define ossl_method_construct OPENSSL_MANGLER(ossl_method_construct)
# endif
#else
# ifndef _ossl_method_construct
#  define _ossl_method_construct OPENSSL_MANGLER_ASM(ossl_method_construct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_lock_store
#  define ossl_method_lock_store OPENSSL_MANGLER(ossl_method_lock_store)
# endif
#else
# ifndef _ossl_method_lock_store
#  define _ossl_method_lock_store OPENSSL_MANGLER_ASM(ossl_method_lock_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_store_add
#  define ossl_method_store_add OPENSSL_MANGLER(ossl_method_store_add)
# endif
#else
# ifndef _ossl_method_store_add
#  define _ossl_method_store_add OPENSSL_MANGLER_ASM(ossl_method_store_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_store_cache_flush_all
#  define ossl_method_store_cache_flush_all OPENSSL_MANGLER(ossl_method_store_cache_flush_all)
# endif
#else
# ifndef _ossl_method_store_cache_flush_all
#  define _ossl_method_store_cache_flush_all OPENSSL_MANGLER_ASM(ossl_method_store_cache_flush_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_store_cache_get
#  define ossl_method_store_cache_get OPENSSL_MANGLER(ossl_method_store_cache_get)
# endif
#else
# ifndef _ossl_method_store_cache_get
#  define _ossl_method_store_cache_get OPENSSL_MANGLER_ASM(ossl_method_store_cache_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_store_cache_set
#  define ossl_method_store_cache_set OPENSSL_MANGLER(ossl_method_store_cache_set)
# endif
#else
# ifndef _ossl_method_store_cache_set
#  define _ossl_method_store_cache_set OPENSSL_MANGLER_ASM(ossl_method_store_cache_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_store_do_all
#  define ossl_method_store_do_all OPENSSL_MANGLER(ossl_method_store_do_all)
# endif
#else
# ifndef _ossl_method_store_do_all
#  define _ossl_method_store_do_all OPENSSL_MANGLER_ASM(ossl_method_store_do_all)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_store_fetch
#  define ossl_method_store_fetch OPENSSL_MANGLER(ossl_method_store_fetch)
# endif
#else
# ifndef _ossl_method_store_fetch
#  define _ossl_method_store_fetch OPENSSL_MANGLER_ASM(ossl_method_store_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_store_free
#  define ossl_method_store_free OPENSSL_MANGLER(ossl_method_store_free)
# endif
#else
# ifndef _ossl_method_store_free
#  define _ossl_method_store_free OPENSSL_MANGLER_ASM(ossl_method_store_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_store_new
#  define ossl_method_store_new OPENSSL_MANGLER(ossl_method_store_new)
# endif
#else
# ifndef _ossl_method_store_new
#  define _ossl_method_store_new OPENSSL_MANGLER_ASM(ossl_method_store_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_store_remove
#  define ossl_method_store_remove OPENSSL_MANGLER(ossl_method_store_remove)
# endif
#else
# ifndef _ossl_method_store_remove
#  define _ossl_method_store_remove OPENSSL_MANGLER_ASM(ossl_method_store_remove)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_store_remove_all_provided
#  define ossl_method_store_remove_all_provided OPENSSL_MANGLER(ossl_method_store_remove_all_provided)
# endif
#else
# ifndef _ossl_method_store_remove_all_provided
#  define _ossl_method_store_remove_all_provided OPENSSL_MANGLER_ASM(ossl_method_store_remove_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_method_unlock_store
#  define ossl_method_unlock_store OPENSSL_MANGLER(ossl_method_unlock_store)
# endif
#else
# ifndef _ossl_method_unlock_store
#  define _ossl_method_unlock_store OPENSSL_MANGLER_ASM(ossl_method_unlock_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_msblob_to_dsa_decoder_functions
#  define ossl_msblob_to_dsa_decoder_functions OPENSSL_MANGLER(ossl_msblob_to_dsa_decoder_functions)
# endif
#else
# ifndef _ossl_msblob_to_dsa_decoder_functions
#  define _ossl_msblob_to_dsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_msblob_to_dsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_msblob_to_rsa_decoder_functions
#  define ossl_msblob_to_rsa_decoder_functions OPENSSL_MANGLER(ossl_msblob_to_rsa_decoder_functions)
# endif
#else
# ifndef _ossl_msblob_to_rsa_decoder_functions
#  define _ossl_msblob_to_rsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_msblob_to_rsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_namemap_add_name
#  define ossl_namemap_add_name OPENSSL_MANGLER(ossl_namemap_add_name)
# endif
#else
# ifndef _ossl_namemap_add_name
#  define _ossl_namemap_add_name OPENSSL_MANGLER_ASM(ossl_namemap_add_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_namemap_add_name_n
#  define ossl_namemap_add_name_n OPENSSL_MANGLER(ossl_namemap_add_name_n)
# endif
#else
# ifndef _ossl_namemap_add_name_n
#  define _ossl_namemap_add_name_n OPENSSL_MANGLER_ASM(ossl_namemap_add_name_n)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_namemap_add_names
#  define ossl_namemap_add_names OPENSSL_MANGLER(ossl_namemap_add_names)
# endif
#else
# ifndef _ossl_namemap_add_names
#  define _ossl_namemap_add_names OPENSSL_MANGLER_ASM(ossl_namemap_add_names)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_namemap_doall_names
#  define ossl_namemap_doall_names OPENSSL_MANGLER(ossl_namemap_doall_names)
# endif
#else
# ifndef _ossl_namemap_doall_names
#  define _ossl_namemap_doall_names OPENSSL_MANGLER_ASM(ossl_namemap_doall_names)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_namemap_empty
#  define ossl_namemap_empty OPENSSL_MANGLER(ossl_namemap_empty)
# endif
#else
# ifndef _ossl_namemap_empty
#  define _ossl_namemap_empty OPENSSL_MANGLER_ASM(ossl_namemap_empty)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_namemap_free
#  define ossl_namemap_free OPENSSL_MANGLER(ossl_namemap_free)
# endif
#else
# ifndef _ossl_namemap_free
#  define _ossl_namemap_free OPENSSL_MANGLER_ASM(ossl_namemap_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_namemap_name2num
#  define ossl_namemap_name2num OPENSSL_MANGLER(ossl_namemap_name2num)
# endif
#else
# ifndef _ossl_namemap_name2num
#  define _ossl_namemap_name2num OPENSSL_MANGLER_ASM(ossl_namemap_name2num)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_namemap_name2num_n
#  define ossl_namemap_name2num_n OPENSSL_MANGLER(ossl_namemap_name2num_n)
# endif
#else
# ifndef _ossl_namemap_name2num_n
#  define _ossl_namemap_name2num_n OPENSSL_MANGLER_ASM(ossl_namemap_name2num_n)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_namemap_new
#  define ossl_namemap_new OPENSSL_MANGLER(ossl_namemap_new)
# endif
#else
# ifndef _ossl_namemap_new
#  define _ossl_namemap_new OPENSSL_MANGLER_ASM(ossl_namemap_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_namemap_num2name
#  define ossl_namemap_num2name OPENSSL_MANGLER(ossl_namemap_num2name)
# endif
#else
# ifndef _ossl_namemap_num2name
#  define _ossl_namemap_num2name OPENSSL_MANGLER_ASM(ossl_namemap_num2name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_namemap_stored
#  define ossl_namemap_stored OPENSSL_MANGLER(ossl_namemap_stored)
# endif
#else
# ifndef _ossl_namemap_stored
#  define _ossl_namemap_stored OPENSSL_MANGLER_ASM(ossl_namemap_stored)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_no_config_int
#  define ossl_no_config_int OPENSSL_MANGLER(ossl_no_config_int)
# endif
#else
# ifndef _ossl_no_config_int
#  define _ossl_no_config_int OPENSSL_MANGLER_ASM(ossl_no_config_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_null_functions
#  define ossl_null_functions OPENSSL_MANGLER(ossl_null_functions)
# endif
#else
# ifndef _ossl_null_functions
#  define _ossl_null_functions OPENSSL_MANGLER_ASM(ossl_null_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_null_provider_init
#  define ossl_null_provider_init OPENSSL_MANGLER(ossl_null_provider_init)
# endif
#else
# ifndef _ossl_null_provider_init
#  define _ossl_null_provider_init OPENSSL_MANGLER_ASM(ossl_null_provider_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_nullmd_functions
#  define ossl_nullmd_functions OPENSSL_MANGLER(ossl_nullmd_functions)
# endif
#else
# ifndef _ossl_nullmd_functions
#  define _ossl_nullmd_functions OPENSSL_MANGLER_ASM(ossl_nullmd_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_obj_cleanup_int
#  define ossl_obj_cleanup_int OPENSSL_MANGLER(ossl_obj_cleanup_int)
# endif
#else
# ifndef _ossl_obj_cleanup_int
#  define _ossl_obj_cleanup_int OPENSSL_MANGLER_ASM(ossl_obj_cleanup_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_param_build_set_bn
#  define ossl_param_build_set_bn OPENSSL_MANGLER(ossl_param_build_set_bn)
# endif
#else
# ifndef _ossl_param_build_set_bn
#  define _ossl_param_build_set_bn OPENSSL_MANGLER_ASM(ossl_param_build_set_bn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_param_build_set_bn_pad
#  define ossl_param_build_set_bn_pad OPENSSL_MANGLER(ossl_param_build_set_bn_pad)
# endif
#else
# ifndef _ossl_param_build_set_bn_pad
#  define _ossl_param_build_set_bn_pad OPENSSL_MANGLER_ASM(ossl_param_build_set_bn_pad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_param_build_set_int
#  define ossl_param_build_set_int OPENSSL_MANGLER(ossl_param_build_set_int)
# endif
#else
# ifndef _ossl_param_build_set_int
#  define _ossl_param_build_set_int OPENSSL_MANGLER_ASM(ossl_param_build_set_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_param_build_set_long
#  define ossl_param_build_set_long OPENSSL_MANGLER(ossl_param_build_set_long)
# endif
#else
# ifndef _ossl_param_build_set_long
#  define _ossl_param_build_set_long OPENSSL_MANGLER_ASM(ossl_param_build_set_long)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_param_build_set_multi_key_bn
#  define ossl_param_build_set_multi_key_bn OPENSSL_MANGLER(ossl_param_build_set_multi_key_bn)
# endif
#else
# ifndef _ossl_param_build_set_multi_key_bn
#  define _ossl_param_build_set_multi_key_bn OPENSSL_MANGLER_ASM(ossl_param_build_set_multi_key_bn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_param_build_set_octet_string
#  define ossl_param_build_set_octet_string OPENSSL_MANGLER(ossl_param_build_set_octet_string)
# endif
#else
# ifndef _ossl_param_build_set_octet_string
#  define _ossl_param_build_set_octet_string OPENSSL_MANGLER_ASM(ossl_param_build_set_octet_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_param_build_set_utf8_string
#  define ossl_param_build_set_utf8_string OPENSSL_MANGLER(ossl_param_build_set_utf8_string)
# endif
#else
# ifndef _ossl_param_build_set_utf8_string
#  define _ossl_param_build_set_utf8_string OPENSSL_MANGLER_ASM(ossl_param_build_set_utf8_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_param_bytes_to_blocks
#  define ossl_param_bytes_to_blocks OPENSSL_MANGLER(ossl_param_bytes_to_blocks)
# endif
#else
# ifndef _ossl_param_bytes_to_blocks
#  define _ossl_param_bytes_to_blocks OPENSSL_MANGLER_ASM(ossl_param_bytes_to_blocks)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_param_set_secure_block
#  define ossl_param_set_secure_block OPENSSL_MANGLER(ossl_param_set_secure_block)
# endif
#else
# ifndef _ossl_param_set_secure_block
#  define _ossl_param_set_secure_block OPENSSL_MANGLER_ASM(ossl_param_set_secure_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_parse_property
#  define ossl_parse_property OPENSSL_MANGLER(ossl_parse_property)
# endif
#else
# ifndef _ossl_parse_property
#  define _ossl_parse_property OPENSSL_MANGLER_ASM(ossl_parse_property)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_parse_query
#  define ossl_parse_query OPENSSL_MANGLER(ossl_parse_query)
# endif
#else
# ifndef _ossl_parse_query
#  define _ossl_parse_query OPENSSL_MANGLER_ASM(ossl_parse_query)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pem_check_suffix
#  define ossl_pem_check_suffix OPENSSL_MANGLER(ossl_pem_check_suffix)
# endif
#else
# ifndef _ossl_pem_check_suffix
#  define _ossl_pem_check_suffix OPENSSL_MANGLER_ASM(ossl_pem_check_suffix)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pem_to_der_decoder_functions
#  define ossl_pem_to_der_decoder_functions OPENSSL_MANGLER(ossl_pem_to_der_decoder_functions)
# endif
#else
# ifndef _ossl_pem_to_der_decoder_functions
#  define _ossl_pem_to_der_decoder_functions OPENSSL_MANGLER_ASM(ossl_pem_to_der_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pkcs5_pbkdf2_hmac_ex
#  define ossl_pkcs5_pbkdf2_hmac_ex OPENSSL_MANGLER(ossl_pkcs5_pbkdf2_hmac_ex)
# endif
#else
# ifndef _ossl_pkcs5_pbkdf2_hmac_ex
#  define _ossl_pkcs5_pbkdf2_hmac_ex OPENSSL_MANGLER_ASM(ossl_pkcs5_pbkdf2_hmac_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pkcs7_ctx_get0_libctx
#  define ossl_pkcs7_ctx_get0_libctx OPENSSL_MANGLER(ossl_pkcs7_ctx_get0_libctx)
# endif
#else
# ifndef _ossl_pkcs7_ctx_get0_libctx
#  define _ossl_pkcs7_ctx_get0_libctx OPENSSL_MANGLER_ASM(ossl_pkcs7_ctx_get0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pkcs7_ctx_get0_propq
#  define ossl_pkcs7_ctx_get0_propq OPENSSL_MANGLER(ossl_pkcs7_ctx_get0_propq)
# endif
#else
# ifndef _ossl_pkcs7_ctx_get0_propq
#  define _ossl_pkcs7_ctx_get0_propq OPENSSL_MANGLER_ASM(ossl_pkcs7_ctx_get0_propq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pkcs7_ctx_propagate
#  define ossl_pkcs7_ctx_propagate OPENSSL_MANGLER(ossl_pkcs7_ctx_propagate)
# endif
#else
# ifndef _ossl_pkcs7_ctx_propagate
#  define _ossl_pkcs7_ctx_propagate OPENSSL_MANGLER_ASM(ossl_pkcs7_ctx_propagate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pkcs7_get0_ctx
#  define ossl_pkcs7_get0_ctx OPENSSL_MANGLER(ossl_pkcs7_get0_ctx)
# endif
#else
# ifndef _ossl_pkcs7_get0_ctx
#  define _ossl_pkcs7_get0_ctx OPENSSL_MANGLER_ASM(ossl_pkcs7_get0_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pkcs7_resolve_libctx
#  define ossl_pkcs7_resolve_libctx OPENSSL_MANGLER(ossl_pkcs7_resolve_libctx)
# endif
#else
# ifndef _ossl_pkcs7_resolve_libctx
#  define _ossl_pkcs7_resolve_libctx OPENSSL_MANGLER_ASM(ossl_pkcs7_resolve_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pkcs7_set0_libctx
#  define ossl_pkcs7_set0_libctx OPENSSL_MANGLER(ossl_pkcs7_set0_libctx)
# endif
#else
# ifndef _ossl_pkcs7_set0_libctx
#  define _ossl_pkcs7_set0_libctx OPENSSL_MANGLER_ASM(ossl_pkcs7_set0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pkcs7_set1_propq
#  define ossl_pkcs7_set1_propq OPENSSL_MANGLER(ossl_pkcs7_set1_propq)
# endif
#else
# ifndef _ossl_pkcs7_set1_propq
#  define _ossl_pkcs7_set1_propq OPENSSL_MANGLER_ASM(ossl_pkcs7_set1_propq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_cache_find_data
#  define ossl_policy_cache_find_data OPENSSL_MANGLER(ossl_policy_cache_find_data)
# endif
#else
# ifndef _ossl_policy_cache_find_data
#  define _ossl_policy_cache_find_data OPENSSL_MANGLER_ASM(ossl_policy_cache_find_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_cache_free
#  define ossl_policy_cache_free OPENSSL_MANGLER(ossl_policy_cache_free)
# endif
#else
# ifndef _ossl_policy_cache_free
#  define _ossl_policy_cache_free OPENSSL_MANGLER_ASM(ossl_policy_cache_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_cache_set
#  define ossl_policy_cache_set OPENSSL_MANGLER(ossl_policy_cache_set)
# endif
#else
# ifndef _ossl_policy_cache_set
#  define _ossl_policy_cache_set OPENSSL_MANGLER_ASM(ossl_policy_cache_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_cache_set_mapping
#  define ossl_policy_cache_set_mapping OPENSSL_MANGLER(ossl_policy_cache_set_mapping)
# endif
#else
# ifndef _ossl_policy_cache_set_mapping
#  define _ossl_policy_cache_set_mapping OPENSSL_MANGLER_ASM(ossl_policy_cache_set_mapping)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_data_free
#  define ossl_policy_data_free OPENSSL_MANGLER(ossl_policy_data_free)
# endif
#else
# ifndef _ossl_policy_data_free
#  define _ossl_policy_data_free OPENSSL_MANGLER_ASM(ossl_policy_data_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_data_new
#  define ossl_policy_data_new OPENSSL_MANGLER(ossl_policy_data_new)
# endif
#else
# ifndef _ossl_policy_data_new
#  define _ossl_policy_data_new OPENSSL_MANGLER_ASM(ossl_policy_data_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_level_add_node
#  define ossl_policy_level_add_node OPENSSL_MANGLER(ossl_policy_level_add_node)
# endif
#else
# ifndef _ossl_policy_level_add_node
#  define _ossl_policy_level_add_node OPENSSL_MANGLER_ASM(ossl_policy_level_add_node)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_level_find_node
#  define ossl_policy_level_find_node OPENSSL_MANGLER(ossl_policy_level_find_node)
# endif
#else
# ifndef _ossl_policy_level_find_node
#  define _ossl_policy_level_find_node OPENSSL_MANGLER_ASM(ossl_policy_level_find_node)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_node_cmp_new
#  define ossl_policy_node_cmp_new OPENSSL_MANGLER(ossl_policy_node_cmp_new)
# endif
#else
# ifndef _ossl_policy_node_cmp_new
#  define _ossl_policy_node_cmp_new OPENSSL_MANGLER_ASM(ossl_policy_node_cmp_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_node_free
#  define ossl_policy_node_free OPENSSL_MANGLER(ossl_policy_node_free)
# endif
#else
# ifndef _ossl_policy_node_free
#  define _ossl_policy_node_free OPENSSL_MANGLER_ASM(ossl_policy_node_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_node_match
#  define ossl_policy_node_match OPENSSL_MANGLER(ossl_policy_node_match)
# endif
#else
# ifndef _ossl_policy_node_match
#  define _ossl_policy_node_match OPENSSL_MANGLER_ASM(ossl_policy_node_match)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_policy_tree_find_sk
#  define ossl_policy_tree_find_sk OPENSSL_MANGLER(ossl_policy_tree_find_sk)
# endif
#else
# ifndef _ossl_policy_tree_find_sk
#  define _ossl_policy_tree_find_sk OPENSSL_MANGLER_ASM(ossl_policy_tree_find_sk)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_poly1305_functions
#  define ossl_poly1305_functions OPENSSL_MANGLER(ossl_poly1305_functions)
# endif
#else
# ifndef _ossl_poly1305_functions
#  define _ossl_poly1305_functions OPENSSL_MANGLER_ASM(ossl_poly1305_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pool_acquire_entropy
#  define ossl_pool_acquire_entropy OPENSSL_MANGLER(ossl_pool_acquire_entropy)
# endif
#else
# ifndef _ossl_pool_acquire_entropy
#  define _ossl_pool_acquire_entropy OPENSSL_MANGLER_ASM(ossl_pool_acquire_entropy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pool_add_nonce_data
#  define ossl_pool_add_nonce_data OPENSSL_MANGLER(ossl_pool_add_nonce_data)
# endif
#else
# ifndef _ossl_pool_add_nonce_data
#  define _ossl_pool_add_nonce_data OPENSSL_MANGLER_ASM(ossl_pool_add_nonce_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_predefined_providers
#  define ossl_predefined_providers OPENSSL_MANGLER(ossl_predefined_providers)
# endif
#else
# ifndef _ossl_predefined_providers
#  define _ossl_predefined_providers OPENSSL_MANGLER_ASM(ossl_predefined_providers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prop_defn_get
#  define ossl_prop_defn_get OPENSSL_MANGLER(ossl_prop_defn_get)
# endif
#else
# ifndef _ossl_prop_defn_get
#  define _ossl_prop_defn_get OPENSSL_MANGLER_ASM(ossl_prop_defn_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prop_defn_set
#  define ossl_prop_defn_set OPENSSL_MANGLER(ossl_prop_defn_set)
# endif
#else
# ifndef _ossl_prop_defn_set
#  define _ossl_prop_defn_set OPENSSL_MANGLER_ASM(ossl_prop_defn_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_find_property
#  define ossl_property_find_property OPENSSL_MANGLER(ossl_property_find_property)
# endif
#else
# ifndef _ossl_property_find_property
#  define _ossl_property_find_property OPENSSL_MANGLER_ASM(ossl_property_find_property)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_free
#  define ossl_property_free OPENSSL_MANGLER(ossl_property_free)
# endif
#else
# ifndef _ossl_property_free
#  define _ossl_property_free OPENSSL_MANGLER_ASM(ossl_property_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_get_number_value
#  define ossl_property_get_number_value OPENSSL_MANGLER(ossl_property_get_number_value)
# endif
#else
# ifndef _ossl_property_get_number_value
#  define _ossl_property_get_number_value OPENSSL_MANGLER_ASM(ossl_property_get_number_value)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_get_string_value
#  define ossl_property_get_string_value OPENSSL_MANGLER(ossl_property_get_string_value)
# endif
#else
# ifndef _ossl_property_get_string_value
#  define _ossl_property_get_string_value OPENSSL_MANGLER_ASM(ossl_property_get_string_value)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_get_type
#  define ossl_property_get_type OPENSSL_MANGLER(ossl_property_get_type)
# endif
#else
# ifndef _ossl_property_get_type
#  define _ossl_property_get_type OPENSSL_MANGLER_ASM(ossl_property_get_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_has_optional
#  define ossl_property_has_optional OPENSSL_MANGLER(ossl_property_has_optional)
# endif
#else
# ifndef _ossl_property_has_optional
#  define _ossl_property_has_optional OPENSSL_MANGLER_ASM(ossl_property_has_optional)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_is_enabled
#  define ossl_property_is_enabled OPENSSL_MANGLER(ossl_property_is_enabled)
# endif
#else
# ifndef _ossl_property_is_enabled
#  define _ossl_property_is_enabled OPENSSL_MANGLER_ASM(ossl_property_is_enabled)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_list_to_string
#  define ossl_property_list_to_string OPENSSL_MANGLER(ossl_property_list_to_string)
# endif
#else
# ifndef _ossl_property_list_to_string
#  define _ossl_property_list_to_string OPENSSL_MANGLER_ASM(ossl_property_list_to_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_match_count
#  define ossl_property_match_count OPENSSL_MANGLER(ossl_property_match_count)
# endif
#else
# ifndef _ossl_property_match_count
#  define _ossl_property_match_count OPENSSL_MANGLER_ASM(ossl_property_match_count)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_merge
#  define ossl_property_merge OPENSSL_MANGLER(ossl_property_merge)
# endif
#else
# ifndef _ossl_property_merge
#  define _ossl_property_merge OPENSSL_MANGLER_ASM(ossl_property_merge)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_name
#  define ossl_property_name OPENSSL_MANGLER(ossl_property_name)
# endif
#else
# ifndef _ossl_property_name
#  define _ossl_property_name OPENSSL_MANGLER_ASM(ossl_property_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_name_str
#  define ossl_property_name_str OPENSSL_MANGLER(ossl_property_name_str)
# endif
#else
# ifndef _ossl_property_name_str
#  define _ossl_property_name_str OPENSSL_MANGLER_ASM(ossl_property_name_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_parse_init
#  define ossl_property_parse_init OPENSSL_MANGLER(ossl_property_parse_init)
# endif
#else
# ifndef _ossl_property_parse_init
#  define _ossl_property_parse_init OPENSSL_MANGLER_ASM(ossl_property_parse_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_value
#  define ossl_property_value OPENSSL_MANGLER(ossl_property_value)
# endif
#else
# ifndef _ossl_property_value
#  define _ossl_property_value OPENSSL_MANGLER_ASM(ossl_property_value)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_property_value_str
#  define ossl_property_value_str OPENSSL_MANGLER(ossl_property_value_str)
# endif
#else
# ifndef _ossl_property_value_str
#  define _ossl_property_value_str OPENSSL_MANGLER_ASM(ossl_property_value_str)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_aes_hw_ccm
#  define ossl_prov_aes_hw_ccm OPENSSL_MANGLER(ossl_prov_aes_hw_ccm)
# endif
#else
# ifndef _ossl_prov_aes_hw_ccm
#  define _ossl_prov_aes_hw_ccm OPENSSL_MANGLER_ASM(ossl_prov_aes_hw_ccm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_aes_hw_gcm
#  define ossl_prov_aes_hw_gcm OPENSSL_MANGLER(ossl_prov_aes_hw_gcm)
# endif
#else
# ifndef _ossl_prov_aes_hw_gcm
#  define _ossl_prov_aes_hw_gcm OPENSSL_MANGLER_ASM(ossl_prov_aes_hw_gcm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_aria_hw_ccm
#  define ossl_prov_aria_hw_ccm OPENSSL_MANGLER(ossl_prov_aria_hw_ccm)
# endif
#else
# ifndef _ossl_prov_aria_hw_ccm
#  define _ossl_prov_aria_hw_ccm OPENSSL_MANGLER_ASM(ossl_prov_aria_hw_ccm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_aria_hw_gcm
#  define ossl_prov_aria_hw_gcm OPENSSL_MANGLER(ossl_prov_aria_hw_gcm)
# endif
#else
# ifndef _ossl_prov_aria_hw_gcm
#  define _ossl_prov_aria_hw_gcm OPENSSL_MANGLER_ASM(ossl_prov_aria_hw_gcm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_ctrl
#  define ossl_prov_bio_ctrl OPENSSL_MANGLER(ossl_prov_bio_ctrl)
# endif
#else
# ifndef _ossl_prov_bio_ctrl
#  define _ossl_prov_bio_ctrl OPENSSL_MANGLER_ASM(ossl_prov_bio_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_free
#  define ossl_prov_bio_free OPENSSL_MANGLER(ossl_prov_bio_free)
# endif
#else
# ifndef _ossl_prov_bio_free
#  define _ossl_prov_bio_free OPENSSL_MANGLER_ASM(ossl_prov_bio_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_from_dispatch
#  define ossl_prov_bio_from_dispatch OPENSSL_MANGLER(ossl_prov_bio_from_dispatch)
# endif
#else
# ifndef _ossl_prov_bio_from_dispatch
#  define _ossl_prov_bio_from_dispatch OPENSSL_MANGLER_ASM(ossl_prov_bio_from_dispatch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_gets
#  define ossl_prov_bio_gets OPENSSL_MANGLER(ossl_prov_bio_gets)
# endif
#else
# ifndef _ossl_prov_bio_gets
#  define _ossl_prov_bio_gets OPENSSL_MANGLER_ASM(ossl_prov_bio_gets)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_new_file
#  define ossl_prov_bio_new_file OPENSSL_MANGLER(ossl_prov_bio_new_file)
# endif
#else
# ifndef _ossl_prov_bio_new_file
#  define _ossl_prov_bio_new_file OPENSSL_MANGLER_ASM(ossl_prov_bio_new_file)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_new_membuf
#  define ossl_prov_bio_new_membuf OPENSSL_MANGLER(ossl_prov_bio_new_membuf)
# endif
#else
# ifndef _ossl_prov_bio_new_membuf
#  define _ossl_prov_bio_new_membuf OPENSSL_MANGLER_ASM(ossl_prov_bio_new_membuf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_printf
#  define ossl_prov_bio_printf OPENSSL_MANGLER(ossl_prov_bio_printf)
# endif
#else
# ifndef _ossl_prov_bio_printf
#  define _ossl_prov_bio_printf OPENSSL_MANGLER_ASM(ossl_prov_bio_printf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_puts
#  define ossl_prov_bio_puts OPENSSL_MANGLER(ossl_prov_bio_puts)
# endif
#else
# ifndef _ossl_prov_bio_puts
#  define _ossl_prov_bio_puts OPENSSL_MANGLER_ASM(ossl_prov_bio_puts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_read_ex
#  define ossl_prov_bio_read_ex OPENSSL_MANGLER(ossl_prov_bio_read_ex)
# endif
#else
# ifndef _ossl_prov_bio_read_ex
#  define _ossl_prov_bio_read_ex OPENSSL_MANGLER_ASM(ossl_prov_bio_read_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_up_ref
#  define ossl_prov_bio_up_ref OPENSSL_MANGLER(ossl_prov_bio_up_ref)
# endif
#else
# ifndef _ossl_prov_bio_up_ref
#  define _ossl_prov_bio_up_ref OPENSSL_MANGLER_ASM(ossl_prov_bio_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_vprintf
#  define ossl_prov_bio_vprintf OPENSSL_MANGLER(ossl_prov_bio_vprintf)
# endif
#else
# ifndef _ossl_prov_bio_vprintf
#  define _ossl_prov_bio_vprintf OPENSSL_MANGLER_ASM(ossl_prov_bio_vprintf)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_bio_write_ex
#  define ossl_prov_bio_write_ex OPENSSL_MANGLER(ossl_prov_bio_write_ex)
# endif
#else
# ifndef _ossl_prov_bio_write_ex
#  define _ossl_prov_bio_write_ex OPENSSL_MANGLER_ASM(ossl_prov_bio_write_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cache_exported_algorithms
#  define ossl_prov_cache_exported_algorithms OPENSSL_MANGLER(ossl_prov_cache_exported_algorithms)
# endif
#else
# ifndef _ossl_prov_cache_exported_algorithms
#  define _ossl_prov_cache_exported_algorithms OPENSSL_MANGLER_ASM(ossl_prov_cache_exported_algorithms)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_cipher
#  define ossl_prov_cipher_cipher OPENSSL_MANGLER(ossl_prov_cipher_cipher)
# endif
#else
# ifndef _ossl_prov_cipher_cipher
#  define _ossl_prov_cipher_cipher OPENSSL_MANGLER_ASM(ossl_prov_cipher_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_copy
#  define ossl_prov_cipher_copy OPENSSL_MANGLER(ossl_prov_cipher_copy)
# endif
#else
# ifndef _ossl_prov_cipher_copy
#  define _ossl_prov_cipher_copy OPENSSL_MANGLER_ASM(ossl_prov_cipher_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_engine
#  define ossl_prov_cipher_engine OPENSSL_MANGLER(ossl_prov_cipher_engine)
# endif
#else
# ifndef _ossl_prov_cipher_engine
#  define _ossl_prov_cipher_engine OPENSSL_MANGLER_ASM(ossl_prov_cipher_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_cbc
#  define ossl_prov_cipher_hw_aes_cbc OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_cbc)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_cbc
#  define _ossl_prov_cipher_hw_aes_cbc OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_cbc_hmac_sha1
#  define ossl_prov_cipher_hw_aes_cbc_hmac_sha1 OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_cbc_hmac_sha1)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_cbc_hmac_sha1
#  define _ossl_prov_cipher_hw_aes_cbc_hmac_sha1 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_cbc_hmac_sha1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_cbc_hmac_sha256
#  define ossl_prov_cipher_hw_aes_cbc_hmac_sha256 OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_cbc_hmac_sha256)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_cbc_hmac_sha256
#  define _ossl_prov_cipher_hw_aes_cbc_hmac_sha256 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_cbc_hmac_sha256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_cfb1
#  define ossl_prov_cipher_hw_aes_cfb1 OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_cfb1)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_cfb1
#  define _ossl_prov_cipher_hw_aes_cfb1 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_cfb128
#  define ossl_prov_cipher_hw_aes_cfb128 OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_cfb128)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_cfb128
#  define _ossl_prov_cipher_hw_aes_cfb128 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_cfb8
#  define ossl_prov_cipher_hw_aes_cfb8 OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_cfb8)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_cfb8
#  define _ossl_prov_cipher_hw_aes_cfb8 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_ctr
#  define ossl_prov_cipher_hw_aes_ctr OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_ctr)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_ctr
#  define _ossl_prov_cipher_hw_aes_ctr OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_ecb
#  define ossl_prov_cipher_hw_aes_ecb OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_ecb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_ecb
#  define _ossl_prov_cipher_hw_aes_ecb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_ocb
#  define ossl_prov_cipher_hw_aes_ocb OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_ocb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_ocb
#  define _ossl_prov_cipher_hw_aes_ocb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_ocb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_ofb128
#  define ossl_prov_cipher_hw_aes_ofb128 OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_ofb128)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_ofb128
#  define _ossl_prov_cipher_hw_aes_ofb128 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_ofb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_siv
#  define ossl_prov_cipher_hw_aes_siv OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_siv)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_siv
#  define _ossl_prov_cipher_hw_aes_siv OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_siv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aes_xts
#  define ossl_prov_cipher_hw_aes_xts OPENSSL_MANGLER(ossl_prov_cipher_hw_aes_xts)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aes_xts
#  define _ossl_prov_cipher_hw_aes_xts OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aes_xts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aria_cbc
#  define ossl_prov_cipher_hw_aria_cbc OPENSSL_MANGLER(ossl_prov_cipher_hw_aria_cbc)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aria_cbc
#  define _ossl_prov_cipher_hw_aria_cbc OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aria_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aria_cfb1
#  define ossl_prov_cipher_hw_aria_cfb1 OPENSSL_MANGLER(ossl_prov_cipher_hw_aria_cfb1)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aria_cfb1
#  define _ossl_prov_cipher_hw_aria_cfb1 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aria_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aria_cfb128
#  define ossl_prov_cipher_hw_aria_cfb128 OPENSSL_MANGLER(ossl_prov_cipher_hw_aria_cfb128)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aria_cfb128
#  define _ossl_prov_cipher_hw_aria_cfb128 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aria_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aria_cfb8
#  define ossl_prov_cipher_hw_aria_cfb8 OPENSSL_MANGLER(ossl_prov_cipher_hw_aria_cfb8)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aria_cfb8
#  define _ossl_prov_cipher_hw_aria_cfb8 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aria_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aria_ctr
#  define ossl_prov_cipher_hw_aria_ctr OPENSSL_MANGLER(ossl_prov_cipher_hw_aria_ctr)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aria_ctr
#  define _ossl_prov_cipher_hw_aria_ctr OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aria_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aria_ecb
#  define ossl_prov_cipher_hw_aria_ecb OPENSSL_MANGLER(ossl_prov_cipher_hw_aria_ecb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aria_ecb
#  define _ossl_prov_cipher_hw_aria_ecb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aria_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_aria_ofb128
#  define ossl_prov_cipher_hw_aria_ofb128 OPENSSL_MANGLER(ossl_prov_cipher_hw_aria_ofb128)
# endif
#else
# ifndef _ossl_prov_cipher_hw_aria_ofb128
#  define _ossl_prov_cipher_hw_aria_ofb128 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_aria_ofb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_blowfish_cbc
#  define ossl_prov_cipher_hw_blowfish_cbc OPENSSL_MANGLER(ossl_prov_cipher_hw_blowfish_cbc)
# endif
#else
# ifndef _ossl_prov_cipher_hw_blowfish_cbc
#  define _ossl_prov_cipher_hw_blowfish_cbc OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_blowfish_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_blowfish_cfb64
#  define ossl_prov_cipher_hw_blowfish_cfb64 OPENSSL_MANGLER(ossl_prov_cipher_hw_blowfish_cfb64)
# endif
#else
# ifndef _ossl_prov_cipher_hw_blowfish_cfb64
#  define _ossl_prov_cipher_hw_blowfish_cfb64 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_blowfish_cfb64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_blowfish_ecb
#  define ossl_prov_cipher_hw_blowfish_ecb OPENSSL_MANGLER(ossl_prov_cipher_hw_blowfish_ecb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_blowfish_ecb
#  define _ossl_prov_cipher_hw_blowfish_ecb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_blowfish_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_blowfish_ofb64
#  define ossl_prov_cipher_hw_blowfish_ofb64 OPENSSL_MANGLER(ossl_prov_cipher_hw_blowfish_ofb64)
# endif
#else
# ifndef _ossl_prov_cipher_hw_blowfish_ofb64
#  define _ossl_prov_cipher_hw_blowfish_ofb64 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_blowfish_ofb64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_camellia_cbc
#  define ossl_prov_cipher_hw_camellia_cbc OPENSSL_MANGLER(ossl_prov_cipher_hw_camellia_cbc)
# endif
#else
# ifndef _ossl_prov_cipher_hw_camellia_cbc
#  define _ossl_prov_cipher_hw_camellia_cbc OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_camellia_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_camellia_cfb1
#  define ossl_prov_cipher_hw_camellia_cfb1 OPENSSL_MANGLER(ossl_prov_cipher_hw_camellia_cfb1)
# endif
#else
# ifndef _ossl_prov_cipher_hw_camellia_cfb1
#  define _ossl_prov_cipher_hw_camellia_cfb1 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_camellia_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_camellia_cfb128
#  define ossl_prov_cipher_hw_camellia_cfb128 OPENSSL_MANGLER(ossl_prov_cipher_hw_camellia_cfb128)
# endif
#else
# ifndef _ossl_prov_cipher_hw_camellia_cfb128
#  define _ossl_prov_cipher_hw_camellia_cfb128 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_camellia_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_camellia_cfb8
#  define ossl_prov_cipher_hw_camellia_cfb8 OPENSSL_MANGLER(ossl_prov_cipher_hw_camellia_cfb8)
# endif
#else
# ifndef _ossl_prov_cipher_hw_camellia_cfb8
#  define _ossl_prov_cipher_hw_camellia_cfb8 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_camellia_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_camellia_ctr
#  define ossl_prov_cipher_hw_camellia_ctr OPENSSL_MANGLER(ossl_prov_cipher_hw_camellia_ctr)
# endif
#else
# ifndef _ossl_prov_cipher_hw_camellia_ctr
#  define _ossl_prov_cipher_hw_camellia_ctr OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_camellia_ctr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_camellia_ecb
#  define ossl_prov_cipher_hw_camellia_ecb OPENSSL_MANGLER(ossl_prov_cipher_hw_camellia_ecb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_camellia_ecb
#  define _ossl_prov_cipher_hw_camellia_ecb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_camellia_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_camellia_ofb128
#  define ossl_prov_cipher_hw_camellia_ofb128 OPENSSL_MANGLER(ossl_prov_cipher_hw_camellia_ofb128)
# endif
#else
# ifndef _ossl_prov_cipher_hw_camellia_ofb128
#  define _ossl_prov_cipher_hw_camellia_ofb128 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_camellia_ofb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_cast5_cbc
#  define ossl_prov_cipher_hw_cast5_cbc OPENSSL_MANGLER(ossl_prov_cipher_hw_cast5_cbc)
# endif
#else
# ifndef _ossl_prov_cipher_hw_cast5_cbc
#  define _ossl_prov_cipher_hw_cast5_cbc OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_cast5_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_cast5_cfb64
#  define ossl_prov_cipher_hw_cast5_cfb64 OPENSSL_MANGLER(ossl_prov_cipher_hw_cast5_cfb64)
# endif
#else
# ifndef _ossl_prov_cipher_hw_cast5_cfb64
#  define _ossl_prov_cipher_hw_cast5_cfb64 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_cast5_cfb64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_cast5_ecb
#  define ossl_prov_cipher_hw_cast5_ecb OPENSSL_MANGLER(ossl_prov_cipher_hw_cast5_ecb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_cast5_ecb
#  define _ossl_prov_cipher_hw_cast5_ecb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_cast5_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_cast5_ofb64
#  define ossl_prov_cipher_hw_cast5_ofb64 OPENSSL_MANGLER(ossl_prov_cipher_hw_cast5_ofb64)
# endif
#else
# ifndef _ossl_prov_cipher_hw_cast5_ofb64
#  define _ossl_prov_cipher_hw_cast5_ofb64 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_cast5_ofb64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_chacha20
#  define ossl_prov_cipher_hw_chacha20 OPENSSL_MANGLER(ossl_prov_cipher_hw_chacha20)
# endif
#else
# ifndef _ossl_prov_cipher_hw_chacha20
#  define _ossl_prov_cipher_hw_chacha20 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_chacha20)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_chacha20_poly1305
#  define ossl_prov_cipher_hw_chacha20_poly1305 OPENSSL_MANGLER(ossl_prov_cipher_hw_chacha20_poly1305)
# endif
#else
# ifndef _ossl_prov_cipher_hw_chacha20_poly1305
#  define _ossl_prov_cipher_hw_chacha20_poly1305 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_chacha20_poly1305)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_des_cbc
#  define ossl_prov_cipher_hw_des_cbc OPENSSL_MANGLER(ossl_prov_cipher_hw_des_cbc)
# endif
#else
# ifndef _ossl_prov_cipher_hw_des_cbc
#  define _ossl_prov_cipher_hw_des_cbc OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_des_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_des_cfb1
#  define ossl_prov_cipher_hw_des_cfb1 OPENSSL_MANGLER(ossl_prov_cipher_hw_des_cfb1)
# endif
#else
# ifndef _ossl_prov_cipher_hw_des_cfb1
#  define _ossl_prov_cipher_hw_des_cfb1 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_des_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_des_cfb64
#  define ossl_prov_cipher_hw_des_cfb64 OPENSSL_MANGLER(ossl_prov_cipher_hw_des_cfb64)
# endif
#else
# ifndef _ossl_prov_cipher_hw_des_cfb64
#  define _ossl_prov_cipher_hw_des_cfb64 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_des_cfb64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_des_cfb8
#  define ossl_prov_cipher_hw_des_cfb8 OPENSSL_MANGLER(ossl_prov_cipher_hw_des_cfb8)
# endif
#else
# ifndef _ossl_prov_cipher_hw_des_cfb8
#  define _ossl_prov_cipher_hw_des_cfb8 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_des_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_des_ecb
#  define ossl_prov_cipher_hw_des_ecb OPENSSL_MANGLER(ossl_prov_cipher_hw_des_ecb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_des_ecb
#  define _ossl_prov_cipher_hw_des_ecb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_des_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_des_ofb64
#  define ossl_prov_cipher_hw_des_ofb64 OPENSSL_MANGLER(ossl_prov_cipher_hw_des_ofb64)
# endif
#else
# ifndef _ossl_prov_cipher_hw_des_ofb64
#  define _ossl_prov_cipher_hw_des_ofb64 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_des_ofb64)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_rc4
#  define ossl_prov_cipher_hw_rc4 OPENSSL_MANGLER(ossl_prov_cipher_hw_rc4)
# endif
#else
# ifndef _ossl_prov_cipher_hw_rc4
#  define _ossl_prov_cipher_hw_rc4 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_rc4)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_rc4_hmac_md5
#  define ossl_prov_cipher_hw_rc4_hmac_md5 OPENSSL_MANGLER(ossl_prov_cipher_hw_rc4_hmac_md5)
# endif
#else
# ifndef _ossl_prov_cipher_hw_rc4_hmac_md5
#  define _ossl_prov_cipher_hw_rc4_hmac_md5 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_rc4_hmac_md5)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_seed_cbc
#  define ossl_prov_cipher_hw_seed_cbc OPENSSL_MANGLER(ossl_prov_cipher_hw_seed_cbc)
# endif
#else
# ifndef _ossl_prov_cipher_hw_seed_cbc
#  define _ossl_prov_cipher_hw_seed_cbc OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_seed_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_seed_cfb128
#  define ossl_prov_cipher_hw_seed_cfb128 OPENSSL_MANGLER(ossl_prov_cipher_hw_seed_cfb128)
# endif
#else
# ifndef _ossl_prov_cipher_hw_seed_cfb128
#  define _ossl_prov_cipher_hw_seed_cfb128 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_seed_cfb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_seed_ecb
#  define ossl_prov_cipher_hw_seed_ecb OPENSSL_MANGLER(ossl_prov_cipher_hw_seed_ecb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_seed_ecb
#  define _ossl_prov_cipher_hw_seed_ecb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_seed_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_seed_ofb128
#  define ossl_prov_cipher_hw_seed_ofb128 OPENSSL_MANGLER(ossl_prov_cipher_hw_seed_ofb128)
# endif
#else
# ifndef _ossl_prov_cipher_hw_seed_ofb128
#  define _ossl_prov_cipher_hw_seed_ofb128 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_seed_ofb128)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_desx_cbc
#  define ossl_prov_cipher_hw_tdes_desx_cbc OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_desx_cbc)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_desx_cbc
#  define _ossl_prov_cipher_hw_tdes_desx_cbc OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_desx_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_ede2_cbc
#  define ossl_prov_cipher_hw_tdes_ede2_cbc OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_ede2_cbc)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_ede2_cbc
#  define _ossl_prov_cipher_hw_tdes_ede2_cbc OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_ede2_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_ede2_cfb
#  define ossl_prov_cipher_hw_tdes_ede2_cfb OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_ede2_cfb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_ede2_cfb
#  define _ossl_prov_cipher_hw_tdes_ede2_cfb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_ede2_cfb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_ede2_ecb
#  define ossl_prov_cipher_hw_tdes_ede2_ecb OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_ede2_ecb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_ede2_ecb
#  define _ossl_prov_cipher_hw_tdes_ede2_ecb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_ede2_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_ede2_ofb
#  define ossl_prov_cipher_hw_tdes_ede2_ofb OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_ede2_ofb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_ede2_ofb
#  define _ossl_prov_cipher_hw_tdes_ede2_ofb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_ede2_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_ede3_cbc
#  define ossl_prov_cipher_hw_tdes_ede3_cbc OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_ede3_cbc)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_ede3_cbc
#  define _ossl_prov_cipher_hw_tdes_ede3_cbc OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_ede3_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_ede3_cfb
#  define ossl_prov_cipher_hw_tdes_ede3_cfb OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_ede3_cfb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_ede3_cfb
#  define _ossl_prov_cipher_hw_tdes_ede3_cfb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_ede3_cfb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_ede3_cfb1
#  define ossl_prov_cipher_hw_tdes_ede3_cfb1 OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_ede3_cfb1)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_ede3_cfb1
#  define _ossl_prov_cipher_hw_tdes_ede3_cfb1 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_ede3_cfb1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_ede3_cfb8
#  define ossl_prov_cipher_hw_tdes_ede3_cfb8 OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_ede3_cfb8)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_ede3_cfb8
#  define _ossl_prov_cipher_hw_tdes_ede3_cfb8 OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_ede3_cfb8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_ede3_ecb
#  define ossl_prov_cipher_hw_tdes_ede3_ecb OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_ede3_ecb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_ede3_ecb
#  define _ossl_prov_cipher_hw_tdes_ede3_ecb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_ede3_ecb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_ede3_ofb
#  define ossl_prov_cipher_hw_tdes_ede3_ofb OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_ede3_ofb)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_ede3_ofb
#  define _ossl_prov_cipher_hw_tdes_ede3_ofb OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_ede3_ofb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_hw_tdes_wrap_cbc
#  define ossl_prov_cipher_hw_tdes_wrap_cbc OPENSSL_MANGLER(ossl_prov_cipher_hw_tdes_wrap_cbc)
# endif
#else
# ifndef _ossl_prov_cipher_hw_tdes_wrap_cbc
#  define _ossl_prov_cipher_hw_tdes_wrap_cbc OPENSSL_MANGLER_ASM(ossl_prov_cipher_hw_tdes_wrap_cbc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_load_from_params
#  define ossl_prov_cipher_load_from_params OPENSSL_MANGLER(ossl_prov_cipher_load_from_params)
# endif
#else
# ifndef _ossl_prov_cipher_load_from_params
#  define _ossl_prov_cipher_load_from_params OPENSSL_MANGLER_ASM(ossl_prov_cipher_load_from_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cipher_reset
#  define ossl_prov_cipher_reset OPENSSL_MANGLER(ossl_prov_cipher_reset)
# endif
#else
# ifndef _ossl_prov_cipher_reset
#  define _ossl_prov_cipher_reset OPENSSL_MANGLER_ASM(ossl_prov_cipher_reset)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cleanup_entropy
#  define ossl_prov_cleanup_entropy OPENSSL_MANGLER(ossl_prov_cleanup_entropy)
# endif
#else
# ifndef _ossl_prov_cleanup_entropy
#  define _ossl_prov_cleanup_entropy OPENSSL_MANGLER_ASM(ossl_prov_cleanup_entropy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_cleanup_nonce
#  define ossl_prov_cleanup_nonce OPENSSL_MANGLER(ossl_prov_cleanup_nonce)
# endif
#else
# ifndef _ossl_prov_cleanup_nonce
#  define _ossl_prov_cleanup_nonce OPENSSL_MANGLER_ASM(ossl_prov_cleanup_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_ctx_free
#  define ossl_prov_ctx_free OPENSSL_MANGLER(ossl_prov_ctx_free)
# endif
#else
# ifndef _ossl_prov_ctx_free
#  define _ossl_prov_ctx_free OPENSSL_MANGLER_ASM(ossl_prov_ctx_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_ctx_get0_core_bio_method
#  define ossl_prov_ctx_get0_core_bio_method OPENSSL_MANGLER(ossl_prov_ctx_get0_core_bio_method)
# endif
#else
# ifndef _ossl_prov_ctx_get0_core_bio_method
#  define _ossl_prov_ctx_get0_core_bio_method OPENSSL_MANGLER_ASM(ossl_prov_ctx_get0_core_bio_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_ctx_get0_handle
#  define ossl_prov_ctx_get0_handle OPENSSL_MANGLER(ossl_prov_ctx_get0_handle)
# endif
#else
# ifndef _ossl_prov_ctx_get0_handle
#  define _ossl_prov_ctx_get0_handle OPENSSL_MANGLER_ASM(ossl_prov_ctx_get0_handle)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_ctx_get0_libctx
#  define ossl_prov_ctx_get0_libctx OPENSSL_MANGLER(ossl_prov_ctx_get0_libctx)
# endif
#else
# ifndef _ossl_prov_ctx_get0_libctx
#  define _ossl_prov_ctx_get0_libctx OPENSSL_MANGLER_ASM(ossl_prov_ctx_get0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_ctx_new
#  define ossl_prov_ctx_new OPENSSL_MANGLER(ossl_prov_ctx_new)
# endif
#else
# ifndef _ossl_prov_ctx_new
#  define _ossl_prov_ctx_new OPENSSL_MANGLER_ASM(ossl_prov_ctx_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_ctx_set0_core_bio_method
#  define ossl_prov_ctx_set0_core_bio_method OPENSSL_MANGLER(ossl_prov_ctx_set0_core_bio_method)
# endif
#else
# ifndef _ossl_prov_ctx_set0_core_bio_method
#  define _ossl_prov_ctx_set0_core_bio_method OPENSSL_MANGLER_ASM(ossl_prov_ctx_set0_core_bio_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_ctx_set0_handle
#  define ossl_prov_ctx_set0_handle OPENSSL_MANGLER(ossl_prov_ctx_set0_handle)
# endif
#else
# ifndef _ossl_prov_ctx_set0_handle
#  define _ossl_prov_ctx_set0_handle OPENSSL_MANGLER_ASM(ossl_prov_ctx_set0_handle)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_ctx_set0_libctx
#  define ossl_prov_ctx_set0_libctx OPENSSL_MANGLER(ossl_prov_ctx_set0_libctx)
# endif
#else
# ifndef _ossl_prov_ctx_set0_libctx
#  define _ossl_prov_ctx_set0_libctx OPENSSL_MANGLER_ASM(ossl_prov_ctx_set0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_digest_copy
#  define ossl_prov_digest_copy OPENSSL_MANGLER(ossl_prov_digest_copy)
# endif
#else
# ifndef _ossl_prov_digest_copy
#  define _ossl_prov_digest_copy OPENSSL_MANGLER_ASM(ossl_prov_digest_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_digest_engine
#  define ossl_prov_digest_engine OPENSSL_MANGLER(ossl_prov_digest_engine)
# endif
#else
# ifndef _ossl_prov_digest_engine
#  define _ossl_prov_digest_engine OPENSSL_MANGLER_ASM(ossl_prov_digest_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_digest_fetch
#  define ossl_prov_digest_fetch OPENSSL_MANGLER(ossl_prov_digest_fetch)
# endif
#else
# ifndef _ossl_prov_digest_fetch
#  define _ossl_prov_digest_fetch OPENSSL_MANGLER_ASM(ossl_prov_digest_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_digest_load_from_params
#  define ossl_prov_digest_load_from_params OPENSSL_MANGLER(ossl_prov_digest_load_from_params)
# endif
#else
# ifndef _ossl_prov_digest_load_from_params
#  define _ossl_prov_digest_load_from_params OPENSSL_MANGLER_ASM(ossl_prov_digest_load_from_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_digest_md
#  define ossl_prov_digest_md OPENSSL_MANGLER(ossl_prov_digest_md)
# endif
#else
# ifndef _ossl_prov_digest_md
#  define _ossl_prov_digest_md OPENSSL_MANGLER_ASM(ossl_prov_digest_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_digest_reset
#  define ossl_prov_digest_reset OPENSSL_MANGLER(ossl_prov_digest_reset)
# endif
#else
# ifndef _ossl_prov_digest_reset
#  define _ossl_prov_digest_reset OPENSSL_MANGLER_ASM(ossl_prov_digest_reset)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_drbg_generate
#  define ossl_prov_drbg_generate OPENSSL_MANGLER(ossl_prov_drbg_generate)
# endif
#else
# ifndef _ossl_prov_drbg_generate
#  define _ossl_prov_drbg_generate OPENSSL_MANGLER_ASM(ossl_prov_drbg_generate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_drbg_instantiate
#  define ossl_prov_drbg_instantiate OPENSSL_MANGLER(ossl_prov_drbg_instantiate)
# endif
#else
# ifndef _ossl_prov_drbg_instantiate
#  define _ossl_prov_drbg_instantiate OPENSSL_MANGLER_ASM(ossl_prov_drbg_instantiate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_drbg_reseed
#  define ossl_prov_drbg_reseed OPENSSL_MANGLER(ossl_prov_drbg_reseed)
# endif
#else
# ifndef _ossl_prov_drbg_reseed
#  define _ossl_prov_drbg_reseed OPENSSL_MANGLER_ASM(ossl_prov_drbg_reseed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_drbg_uninstantiate
#  define ossl_prov_drbg_uninstantiate OPENSSL_MANGLER(ossl_prov_drbg_uninstantiate)
# endif
#else
# ifndef _ossl_prov_drbg_uninstantiate
#  define _ossl_prov_drbg_uninstantiate OPENSSL_MANGLER_ASM(ossl_prov_drbg_uninstantiate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_free_key
#  define ossl_prov_free_key OPENSSL_MANGLER(ossl_prov_free_key)
# endif
#else
# ifndef _ossl_prov_free_key
#  define _ossl_prov_free_key OPENSSL_MANGLER_ASM(ossl_prov_free_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_get_capabilities
#  define ossl_prov_get_capabilities OPENSSL_MANGLER(ossl_prov_get_capabilities)
# endif
#else
# ifndef _ossl_prov_get_capabilities
#  define _ossl_prov_get_capabilities OPENSSL_MANGLER_ASM(ossl_prov_get_capabilities)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_get_entropy
#  define ossl_prov_get_entropy OPENSSL_MANGLER(ossl_prov_get_entropy)
# endif
#else
# ifndef _ossl_prov_get_entropy
#  define _ossl_prov_get_entropy OPENSSL_MANGLER_ASM(ossl_prov_get_entropy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_get_keymgmt_export
#  define ossl_prov_get_keymgmt_export OPENSSL_MANGLER(ossl_prov_get_keymgmt_export)
# endif
#else
# ifndef _ossl_prov_get_keymgmt_export
#  define _ossl_prov_get_keymgmt_export OPENSSL_MANGLER_ASM(ossl_prov_get_keymgmt_export)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_get_keymgmt_free
#  define ossl_prov_get_keymgmt_free OPENSSL_MANGLER(ossl_prov_get_keymgmt_free)
# endif
#else
# ifndef _ossl_prov_get_keymgmt_free
#  define _ossl_prov_get_keymgmt_free OPENSSL_MANGLER_ASM(ossl_prov_get_keymgmt_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_get_keymgmt_import
#  define ossl_prov_get_keymgmt_import OPENSSL_MANGLER(ossl_prov_get_keymgmt_import)
# endif
#else
# ifndef _ossl_prov_get_keymgmt_import
#  define _ossl_prov_get_keymgmt_import OPENSSL_MANGLER_ASM(ossl_prov_get_keymgmt_import)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_get_keymgmt_new
#  define ossl_prov_get_keymgmt_new OPENSSL_MANGLER(ossl_prov_get_keymgmt_new)
# endif
#else
# ifndef _ossl_prov_get_keymgmt_new
#  define _ossl_prov_get_keymgmt_new OPENSSL_MANGLER_ASM(ossl_prov_get_keymgmt_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_get_nonce
#  define ossl_prov_get_nonce OPENSSL_MANGLER(ossl_prov_get_nonce)
# endif
#else
# ifndef _ossl_prov_get_nonce
#  define _ossl_prov_get_nonce OPENSSL_MANGLER_ASM(ossl_prov_get_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_import_key
#  define ossl_prov_import_key OPENSSL_MANGLER(ossl_prov_import_key)
# endif
#else
# ifndef _ossl_prov_import_key
#  define _ossl_prov_import_key OPENSSL_MANGLER_ASM(ossl_prov_import_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_is_running
#  define ossl_prov_is_running OPENSSL_MANGLER(ossl_prov_is_running)
# endif
#else
# ifndef _ossl_prov_is_running
#  define _ossl_prov_is_running OPENSSL_MANGLER_ASM(ossl_prov_is_running)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_macctx_load_from_params
#  define ossl_prov_macctx_load_from_params OPENSSL_MANGLER(ossl_prov_macctx_load_from_params)
# endif
#else
# ifndef _ossl_prov_macctx_load_from_params
#  define _ossl_prov_macctx_load_from_params OPENSSL_MANGLER_ASM(ossl_prov_macctx_load_from_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_seeding_from_dispatch
#  define ossl_prov_seeding_from_dispatch OPENSSL_MANGLER(ossl_prov_seeding_from_dispatch)
# endif
#else
# ifndef _ossl_prov_seeding_from_dispatch
#  define _ossl_prov_seeding_from_dispatch OPENSSL_MANGLER_ASM(ossl_prov_seeding_from_dispatch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_prov_set_macctx
#  define ossl_prov_set_macctx OPENSSL_MANGLER(ossl_prov_set_macctx)
# endif
#else
# ifndef _ossl_prov_set_macctx
#  define _ossl_prov_set_macctx OPENSSL_MANGLER_ASM(ossl_prov_set_macctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_activate
#  define ossl_provider_activate OPENSSL_MANGLER(ossl_provider_activate)
# endif
#else
# ifndef _ossl_provider_activate
#  define _ossl_provider_activate OPENSSL_MANGLER_ASM(ossl_provider_activate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_add_conf_module
#  define ossl_provider_add_conf_module OPENSSL_MANGLER(ossl_provider_add_conf_module)
# endif
#else
# ifndef _ossl_provider_add_conf_module
#  define _ossl_provider_add_conf_module OPENSSL_MANGLER_ASM(ossl_provider_add_conf_module)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_add_parameter
#  define ossl_provider_add_parameter OPENSSL_MANGLER(ossl_provider_add_parameter)
# endif
#else
# ifndef _ossl_provider_add_parameter
#  define _ossl_provider_add_parameter OPENSSL_MANGLER_ASM(ossl_provider_add_parameter)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_add_to_store
#  define ossl_provider_add_to_store OPENSSL_MANGLER(ossl_provider_add_to_store)
# endif
#else
# ifndef _ossl_provider_add_to_store
#  define _ossl_provider_add_to_store OPENSSL_MANGLER_ASM(ossl_provider_add_to_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_ctx
#  define ossl_provider_ctx OPENSSL_MANGLER(ossl_provider_ctx)
# endif
#else
# ifndef _ossl_provider_ctx
#  define _ossl_provider_ctx OPENSSL_MANGLER_ASM(ossl_provider_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_deactivate
#  define ossl_provider_deactivate OPENSSL_MANGLER(ossl_provider_deactivate)
# endif
#else
# ifndef _ossl_provider_deactivate
#  define _ossl_provider_deactivate OPENSSL_MANGLER_ASM(ossl_provider_deactivate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_default_props_update
#  define ossl_provider_default_props_update OPENSSL_MANGLER(ossl_provider_default_props_update)
# endif
#else
# ifndef _ossl_provider_default_props_update
#  define _ossl_provider_default_props_update OPENSSL_MANGLER_ASM(ossl_provider_default_props_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_deinit_child
#  define ossl_provider_deinit_child OPENSSL_MANGLER(ossl_provider_deinit_child)
# endif
#else
# ifndef _ossl_provider_deinit_child
#  define _ossl_provider_deinit_child OPENSSL_MANGLER_ASM(ossl_provider_deinit_child)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_disable_fallback_loading
#  define ossl_provider_disable_fallback_loading OPENSSL_MANGLER(ossl_provider_disable_fallback_loading)
# endif
#else
# ifndef _ossl_provider_disable_fallback_loading
#  define _ossl_provider_disable_fallback_loading OPENSSL_MANGLER_ASM(ossl_provider_disable_fallback_loading)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_doall_activated
#  define ossl_provider_doall_activated OPENSSL_MANGLER(ossl_provider_doall_activated)
# endif
#else
# ifndef _ossl_provider_doall_activated
#  define _ossl_provider_doall_activated OPENSSL_MANGLER_ASM(ossl_provider_doall_activated)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_dso
#  define ossl_provider_dso OPENSSL_MANGLER(ossl_provider_dso)
# endif
#else
# ifndef _ossl_provider_dso
#  define _ossl_provider_dso OPENSSL_MANGLER_ASM(ossl_provider_dso)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_find
#  define ossl_provider_find OPENSSL_MANGLER(ossl_provider_find)
# endif
#else
# ifndef _ossl_provider_find
#  define _ossl_provider_find OPENSSL_MANGLER_ASM(ossl_provider_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_free
#  define ossl_provider_free OPENSSL_MANGLER(ossl_provider_free)
# endif
#else
# ifndef _ossl_provider_free
#  define _ossl_provider_free OPENSSL_MANGLER_ASM(ossl_provider_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_free_parent
#  define ossl_provider_free_parent OPENSSL_MANGLER(ossl_provider_free_parent)
# endif
#else
# ifndef _ossl_provider_free_parent
#  define _ossl_provider_free_parent OPENSSL_MANGLER_ASM(ossl_provider_free_parent)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_get0_dispatch
#  define ossl_provider_get0_dispatch OPENSSL_MANGLER(ossl_provider_get0_dispatch)
# endif
#else
# ifndef _ossl_provider_get0_dispatch
#  define _ossl_provider_get0_dispatch OPENSSL_MANGLER_ASM(ossl_provider_get0_dispatch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_get_capabilities
#  define ossl_provider_get_capabilities OPENSSL_MANGLER(ossl_provider_get_capabilities)
# endif
#else
# ifndef _ossl_provider_get_capabilities
#  define _ossl_provider_get_capabilities OPENSSL_MANGLER_ASM(ossl_provider_get_capabilities)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_get_params
#  define ossl_provider_get_params OPENSSL_MANGLER(ossl_provider_get_params)
# endif
#else
# ifndef _ossl_provider_get_params
#  define _ossl_provider_get_params OPENSSL_MANGLER_ASM(ossl_provider_get_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_get_parent
#  define ossl_provider_get_parent OPENSSL_MANGLER(ossl_provider_get_parent)
# endif
#else
# ifndef _ossl_provider_get_parent
#  define _ossl_provider_get_parent OPENSSL_MANGLER_ASM(ossl_provider_get_parent)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_gettable_params
#  define ossl_provider_gettable_params OPENSSL_MANGLER(ossl_provider_gettable_params)
# endif
#else
# ifndef _ossl_provider_gettable_params
#  define _ossl_provider_gettable_params OPENSSL_MANGLER_ASM(ossl_provider_gettable_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_info_add_parameter
#  define ossl_provider_info_add_parameter OPENSSL_MANGLER(ossl_provider_info_add_parameter)
# endif
#else
# ifndef _ossl_provider_info_add_parameter
#  define _ossl_provider_info_add_parameter OPENSSL_MANGLER_ASM(ossl_provider_info_add_parameter)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_info_add_to_store
#  define ossl_provider_info_add_to_store OPENSSL_MANGLER(ossl_provider_info_add_to_store)
# endif
#else
# ifndef _ossl_provider_info_add_to_store
#  define _ossl_provider_info_add_to_store OPENSSL_MANGLER_ASM(ossl_provider_info_add_to_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_info_clear
#  define ossl_provider_info_clear OPENSSL_MANGLER(ossl_provider_info_clear)
# endif
#else
# ifndef _ossl_provider_info_clear
#  define _ossl_provider_info_clear OPENSSL_MANGLER_ASM(ossl_provider_info_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_init_as_child
#  define ossl_provider_init_as_child OPENSSL_MANGLER(ossl_provider_init_as_child)
# endif
#else
# ifndef _ossl_provider_init_as_child
#  define _ossl_provider_init_as_child OPENSSL_MANGLER_ASM(ossl_provider_init_as_child)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_is_child
#  define ossl_provider_is_child OPENSSL_MANGLER(ossl_provider_is_child)
# endif
#else
# ifndef _ossl_provider_is_child
#  define _ossl_provider_is_child OPENSSL_MANGLER_ASM(ossl_provider_is_child)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_libctx
#  define ossl_provider_libctx OPENSSL_MANGLER(ossl_provider_libctx)
# endif
#else
# ifndef _ossl_provider_libctx
#  define _ossl_provider_libctx OPENSSL_MANGLER_ASM(ossl_provider_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_module_name
#  define ossl_provider_module_name OPENSSL_MANGLER(ossl_provider_module_name)
# endif
#else
# ifndef _ossl_provider_module_name
#  define _ossl_provider_module_name OPENSSL_MANGLER_ASM(ossl_provider_module_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_module_path
#  define ossl_provider_module_path OPENSSL_MANGLER(ossl_provider_module_path)
# endif
#else
# ifndef _ossl_provider_module_path
#  define _ossl_provider_module_path OPENSSL_MANGLER_ASM(ossl_provider_module_path)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_name
#  define ossl_provider_name OPENSSL_MANGLER(ossl_provider_name)
# endif
#else
# ifndef _ossl_provider_name
#  define _ossl_provider_name OPENSSL_MANGLER_ASM(ossl_provider_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_new
#  define ossl_provider_new OPENSSL_MANGLER(ossl_provider_new)
# endif
#else
# ifndef _ossl_provider_new
#  define _ossl_provider_new OPENSSL_MANGLER_ASM(ossl_provider_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_prov_ctx
#  define ossl_provider_prov_ctx OPENSSL_MANGLER(ossl_provider_prov_ctx)
# endif
#else
# ifndef _ossl_provider_prov_ctx
#  define _ossl_provider_prov_ctx OPENSSL_MANGLER_ASM(ossl_provider_prov_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_query_operation
#  define ossl_provider_query_operation OPENSSL_MANGLER(ossl_provider_query_operation)
# endif
#else
# ifndef _ossl_provider_query_operation
#  define _ossl_provider_query_operation OPENSSL_MANGLER_ASM(ossl_provider_query_operation)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_self_test
#  define ossl_provider_self_test OPENSSL_MANGLER(ossl_provider_self_test)
# endif
#else
# ifndef _ossl_provider_self_test
#  define _ossl_provider_self_test OPENSSL_MANGLER_ASM(ossl_provider_self_test)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_set_child
#  define ossl_provider_set_child OPENSSL_MANGLER(ossl_provider_set_child)
# endif
#else
# ifndef _ossl_provider_set_child
#  define _ossl_provider_set_child OPENSSL_MANGLER_ASM(ossl_provider_set_child)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_set_fallback
#  define ossl_provider_set_fallback OPENSSL_MANGLER(ossl_provider_set_fallback)
# endif
#else
# ifndef _ossl_provider_set_fallback
#  define _ossl_provider_set_fallback OPENSSL_MANGLER_ASM(ossl_provider_set_fallback)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_set_module_path
#  define ossl_provider_set_module_path OPENSSL_MANGLER(ossl_provider_set_module_path)
# endif
#else
# ifndef _ossl_provider_set_module_path
#  define _ossl_provider_set_module_path OPENSSL_MANGLER_ASM(ossl_provider_set_module_path)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_set_operation_bit
#  define ossl_provider_set_operation_bit OPENSSL_MANGLER(ossl_provider_set_operation_bit)
# endif
#else
# ifndef _ossl_provider_set_operation_bit
#  define _ossl_provider_set_operation_bit OPENSSL_MANGLER_ASM(ossl_provider_set_operation_bit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_teardown
#  define ossl_provider_teardown OPENSSL_MANGLER(ossl_provider_teardown)
# endif
#else
# ifndef _ossl_provider_teardown
#  define _ossl_provider_teardown OPENSSL_MANGLER_ASM(ossl_provider_teardown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_test_operation_bit
#  define ossl_provider_test_operation_bit OPENSSL_MANGLER(ossl_provider_test_operation_bit)
# endif
#else
# ifndef _ossl_provider_test_operation_bit
#  define _ossl_provider_test_operation_bit OPENSSL_MANGLER_ASM(ossl_provider_test_operation_bit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_unquery_operation
#  define ossl_provider_unquery_operation OPENSSL_MANGLER(ossl_provider_unquery_operation)
# endif
#else
# ifndef _ossl_provider_unquery_operation
#  define _ossl_provider_unquery_operation OPENSSL_MANGLER_ASM(ossl_provider_unquery_operation)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_up_ref
#  define ossl_provider_up_ref OPENSSL_MANGLER(ossl_provider_up_ref)
# endif
#else
# ifndef _ossl_provider_up_ref
#  define _ossl_provider_up_ref OPENSSL_MANGLER_ASM(ossl_provider_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_provider_up_ref_parent
#  define ossl_provider_up_ref_parent OPENSSL_MANGLER(ossl_provider_up_ref_parent)
# endif
#else
# ifndef _ossl_provider_up_ref_parent
#  define _ossl_provider_up_ref_parent OPENSSL_MANGLER_ASM(ossl_provider_up_ref_parent)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_punycode_decode
#  define ossl_punycode_decode OPENSSL_MANGLER(ossl_punycode_decode)
# endif
#else
# ifndef _ossl_punycode_decode
#  define _ossl_punycode_decode OPENSSL_MANGLER_ASM(ossl_punycode_decode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pvk_to_dsa_decoder_functions
#  define ossl_pvk_to_dsa_decoder_functions OPENSSL_MANGLER(ossl_pvk_to_dsa_decoder_functions)
# endif
#else
# ifndef _ossl_pvk_to_dsa_decoder_functions
#  define _ossl_pvk_to_dsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_pvk_to_dsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pvk_to_rsa_decoder_functions
#  define ossl_pvk_to_rsa_decoder_functions OPENSSL_MANGLER(ossl_pvk_to_rsa_decoder_functions)
# endif
#else
# ifndef _ossl_pvk_to_rsa_decoder_functions
#  define _ossl_pvk_to_rsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_pvk_to_rsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_clear_passphrase_cache
#  define ossl_pw_clear_passphrase_cache OPENSSL_MANGLER(ossl_pw_clear_passphrase_cache)
# endif
#else
# ifndef _ossl_pw_clear_passphrase_cache
#  define _ossl_pw_clear_passphrase_cache OPENSSL_MANGLER_ASM(ossl_pw_clear_passphrase_cache)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_clear_passphrase_data
#  define ossl_pw_clear_passphrase_data OPENSSL_MANGLER(ossl_pw_clear_passphrase_data)
# endif
#else
# ifndef _ossl_pw_clear_passphrase_data
#  define _ossl_pw_clear_passphrase_data OPENSSL_MANGLER_ASM(ossl_pw_clear_passphrase_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_disable_passphrase_caching
#  define ossl_pw_disable_passphrase_caching OPENSSL_MANGLER(ossl_pw_disable_passphrase_caching)
# endif
#else
# ifndef _ossl_pw_disable_passphrase_caching
#  define _ossl_pw_disable_passphrase_caching OPENSSL_MANGLER_ASM(ossl_pw_disable_passphrase_caching)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_enable_passphrase_caching
#  define ossl_pw_enable_passphrase_caching OPENSSL_MANGLER(ossl_pw_enable_passphrase_caching)
# endif
#else
# ifndef _ossl_pw_enable_passphrase_caching
#  define _ossl_pw_enable_passphrase_caching OPENSSL_MANGLER_ASM(ossl_pw_enable_passphrase_caching)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_get_passphrase
#  define ossl_pw_get_passphrase OPENSSL_MANGLER(ossl_pw_get_passphrase)
# endif
#else
# ifndef _ossl_pw_get_passphrase
#  define _ossl_pw_get_passphrase OPENSSL_MANGLER_ASM(ossl_pw_get_passphrase)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_passphrase_callback_dec
#  define ossl_pw_passphrase_callback_dec OPENSSL_MANGLER(ossl_pw_passphrase_callback_dec)
# endif
#else
# ifndef _ossl_pw_passphrase_callback_dec
#  define _ossl_pw_passphrase_callback_dec OPENSSL_MANGLER_ASM(ossl_pw_passphrase_callback_dec)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_passphrase_callback_enc
#  define ossl_pw_passphrase_callback_enc OPENSSL_MANGLER(ossl_pw_passphrase_callback_enc)
# endif
#else
# ifndef _ossl_pw_passphrase_callback_enc
#  define _ossl_pw_passphrase_callback_enc OPENSSL_MANGLER_ASM(ossl_pw_passphrase_callback_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_pem_password
#  define ossl_pw_pem_password OPENSSL_MANGLER(ossl_pw_pem_password)
# endif
#else
# ifndef _ossl_pw_pem_password
#  define _ossl_pw_pem_password OPENSSL_MANGLER_ASM(ossl_pw_pem_password)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_pvk_password
#  define ossl_pw_pvk_password OPENSSL_MANGLER(ossl_pw_pvk_password)
# endif
#else
# ifndef _ossl_pw_pvk_password
#  define _ossl_pw_pvk_password OPENSSL_MANGLER_ASM(ossl_pw_pvk_password)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_set_ossl_passphrase_cb
#  define ossl_pw_set_ossl_passphrase_cb OPENSSL_MANGLER(ossl_pw_set_ossl_passphrase_cb)
# endif
#else
# ifndef _ossl_pw_set_ossl_passphrase_cb
#  define _ossl_pw_set_ossl_passphrase_cb OPENSSL_MANGLER_ASM(ossl_pw_set_ossl_passphrase_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_set_passphrase
#  define ossl_pw_set_passphrase OPENSSL_MANGLER(ossl_pw_set_passphrase)
# endif
#else
# ifndef _ossl_pw_set_passphrase
#  define _ossl_pw_set_passphrase OPENSSL_MANGLER_ASM(ossl_pw_set_passphrase)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_set_pem_password_cb
#  define ossl_pw_set_pem_password_cb OPENSSL_MANGLER(ossl_pw_set_pem_password_cb)
# endif
#else
# ifndef _ossl_pw_set_pem_password_cb
#  define _ossl_pw_set_pem_password_cb OPENSSL_MANGLER_ASM(ossl_pw_set_pem_password_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_pw_set_ui_method
#  define ossl_pw_set_ui_method OPENSSL_MANGLER(ossl_pw_set_ui_method)
# endif
#else
# ifndef _ossl_pw_set_ui_method
#  define _ossl_pw_set_ui_method OPENSSL_MANGLER_ASM(ossl_pw_set_ui_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_cleanup_entropy
#  define ossl_rand_cleanup_entropy OPENSSL_MANGLER(ossl_rand_cleanup_entropy)
# endif
#else
# ifndef _ossl_rand_cleanup_entropy
#  define _ossl_rand_cleanup_entropy OPENSSL_MANGLER_ASM(ossl_rand_cleanup_entropy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_cleanup_int
#  define ossl_rand_cleanup_int OPENSSL_MANGLER(ossl_rand_cleanup_int)
# endif
#else
# ifndef _ossl_rand_cleanup_int
#  define _ossl_rand_cleanup_int OPENSSL_MANGLER_ASM(ossl_rand_cleanup_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_cleanup_nonce
#  define ossl_rand_cleanup_nonce OPENSSL_MANGLER(ossl_rand_cleanup_nonce)
# endif
#else
# ifndef _ossl_rand_cleanup_nonce
#  define _ossl_rand_cleanup_nonce OPENSSL_MANGLER_ASM(ossl_rand_cleanup_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_drbg_free
#  define ossl_rand_drbg_free OPENSSL_MANGLER(ossl_rand_drbg_free)
# endif
#else
# ifndef _ossl_rand_drbg_free
#  define _ossl_rand_drbg_free OPENSSL_MANGLER_ASM(ossl_rand_drbg_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_drbg_new
#  define ossl_rand_drbg_new OPENSSL_MANGLER(ossl_rand_drbg_new)
# endif
#else
# ifndef _ossl_rand_drbg_new
#  define _ossl_rand_drbg_new OPENSSL_MANGLER_ASM(ossl_rand_drbg_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_get_entropy
#  define ossl_rand_get_entropy OPENSSL_MANGLER(ossl_rand_get_entropy)
# endif
#else
# ifndef _ossl_rand_get_entropy
#  define _ossl_rand_get_entropy OPENSSL_MANGLER_ASM(ossl_rand_get_entropy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_get_nonce
#  define ossl_rand_get_nonce OPENSSL_MANGLER(ossl_rand_get_nonce)
# endif
#else
# ifndef _ossl_rand_get_nonce
#  define _ossl_rand_get_nonce OPENSSL_MANGLER_ASM(ossl_rand_get_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_meth
#  define ossl_rand_meth OPENSSL_MANGLER(ossl_rand_meth)
# endif
#else
# ifndef _ossl_rand_meth
#  define _ossl_rand_meth OPENSSL_MANGLER_ASM(ossl_rand_meth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_add
#  define ossl_rand_pool_add OPENSSL_MANGLER(ossl_rand_pool_add)
# endif
#else
# ifndef _ossl_rand_pool_add
#  define _ossl_rand_pool_add OPENSSL_MANGLER_ASM(ossl_rand_pool_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_add_additional_data
#  define ossl_rand_pool_add_additional_data OPENSSL_MANGLER(ossl_rand_pool_add_additional_data)
# endif
#else
# ifndef _ossl_rand_pool_add_additional_data
#  define _ossl_rand_pool_add_additional_data OPENSSL_MANGLER_ASM(ossl_rand_pool_add_additional_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_add_begin
#  define ossl_rand_pool_add_begin OPENSSL_MANGLER(ossl_rand_pool_add_begin)
# endif
#else
# ifndef _ossl_rand_pool_add_begin
#  define _ossl_rand_pool_add_begin OPENSSL_MANGLER_ASM(ossl_rand_pool_add_begin)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_add_end
#  define ossl_rand_pool_add_end OPENSSL_MANGLER(ossl_rand_pool_add_end)
# endif
#else
# ifndef _ossl_rand_pool_add_end
#  define _ossl_rand_pool_add_end OPENSSL_MANGLER_ASM(ossl_rand_pool_add_end)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_attach
#  define ossl_rand_pool_attach OPENSSL_MANGLER(ossl_rand_pool_attach)
# endif
#else
# ifndef _ossl_rand_pool_attach
#  define _ossl_rand_pool_attach OPENSSL_MANGLER_ASM(ossl_rand_pool_attach)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_buffer
#  define ossl_rand_pool_buffer OPENSSL_MANGLER(ossl_rand_pool_buffer)
# endif
#else
# ifndef _ossl_rand_pool_buffer
#  define _ossl_rand_pool_buffer OPENSSL_MANGLER_ASM(ossl_rand_pool_buffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_bytes_needed
#  define ossl_rand_pool_bytes_needed OPENSSL_MANGLER(ossl_rand_pool_bytes_needed)
# endif
#else
# ifndef _ossl_rand_pool_bytes_needed
#  define _ossl_rand_pool_bytes_needed OPENSSL_MANGLER_ASM(ossl_rand_pool_bytes_needed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_bytes_remaining
#  define ossl_rand_pool_bytes_remaining OPENSSL_MANGLER(ossl_rand_pool_bytes_remaining)
# endif
#else
# ifndef _ossl_rand_pool_bytes_remaining
#  define _ossl_rand_pool_bytes_remaining OPENSSL_MANGLER_ASM(ossl_rand_pool_bytes_remaining)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_cleanup
#  define ossl_rand_pool_cleanup OPENSSL_MANGLER(ossl_rand_pool_cleanup)
# endif
#else
# ifndef _ossl_rand_pool_cleanup
#  define _ossl_rand_pool_cleanup OPENSSL_MANGLER_ASM(ossl_rand_pool_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_detach
#  define ossl_rand_pool_detach OPENSSL_MANGLER(ossl_rand_pool_detach)
# endif
#else
# ifndef _ossl_rand_pool_detach
#  define _ossl_rand_pool_detach OPENSSL_MANGLER_ASM(ossl_rand_pool_detach)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_entropy
#  define ossl_rand_pool_entropy OPENSSL_MANGLER(ossl_rand_pool_entropy)
# endif
#else
# ifndef _ossl_rand_pool_entropy
#  define _ossl_rand_pool_entropy OPENSSL_MANGLER_ASM(ossl_rand_pool_entropy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_entropy_available
#  define ossl_rand_pool_entropy_available OPENSSL_MANGLER(ossl_rand_pool_entropy_available)
# endif
#else
# ifndef _ossl_rand_pool_entropy_available
#  define _ossl_rand_pool_entropy_available OPENSSL_MANGLER_ASM(ossl_rand_pool_entropy_available)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_entropy_needed
#  define ossl_rand_pool_entropy_needed OPENSSL_MANGLER(ossl_rand_pool_entropy_needed)
# endif
#else
# ifndef _ossl_rand_pool_entropy_needed
#  define _ossl_rand_pool_entropy_needed OPENSSL_MANGLER_ASM(ossl_rand_pool_entropy_needed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_free
#  define ossl_rand_pool_free OPENSSL_MANGLER(ossl_rand_pool_free)
# endif
#else
# ifndef _ossl_rand_pool_free
#  define _ossl_rand_pool_free OPENSSL_MANGLER_ASM(ossl_rand_pool_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_init
#  define ossl_rand_pool_init OPENSSL_MANGLER(ossl_rand_pool_init)
# endif
#else
# ifndef _ossl_rand_pool_init
#  define _ossl_rand_pool_init OPENSSL_MANGLER_ASM(ossl_rand_pool_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_keep_random_devices_open
#  define ossl_rand_pool_keep_random_devices_open OPENSSL_MANGLER(ossl_rand_pool_keep_random_devices_open)
# endif
#else
# ifndef _ossl_rand_pool_keep_random_devices_open
#  define _ossl_rand_pool_keep_random_devices_open OPENSSL_MANGLER_ASM(ossl_rand_pool_keep_random_devices_open)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_length
#  define ossl_rand_pool_length OPENSSL_MANGLER(ossl_rand_pool_length)
# endif
#else
# ifndef _ossl_rand_pool_length
#  define _ossl_rand_pool_length OPENSSL_MANGLER_ASM(ossl_rand_pool_length)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_new
#  define ossl_rand_pool_new OPENSSL_MANGLER(ossl_rand_pool_new)
# endif
#else
# ifndef _ossl_rand_pool_new
#  define _ossl_rand_pool_new OPENSSL_MANGLER_ASM(ossl_rand_pool_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rand_pool_reattach
#  define ossl_rand_pool_reattach OPENSSL_MANGLER(ossl_rand_pool_reattach)
# endif
#else
# ifndef _ossl_rand_pool_reattach
#  define _ossl_rand_pool_reattach OPENSSL_MANGLER_ASM(ossl_rand_pool_reattach)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_random_add_conf_module
#  define ossl_random_add_conf_module OPENSSL_MANGLER(ossl_random_add_conf_module)
# endif
#else
# ifndef _ossl_random_add_conf_module
#  define _ossl_random_add_conf_module OPENSSL_MANGLER_ASM(ossl_random_add_conf_module)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rc4128_functions
#  define ossl_rc4128_functions OPENSSL_MANGLER(ossl_rc4128_functions)
# endif
#else
# ifndef _ossl_rc4128_functions
#  define _ossl_rc4128_functions OPENSSL_MANGLER_ASM(ossl_rc4128_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rc440_functions
#  define ossl_rc440_functions OPENSSL_MANGLER(ossl_rc440_functions)
# endif
#else
# ifndef _ossl_rc440_functions
#  define _ossl_rc440_functions OPENSSL_MANGLER_ASM(ossl_rc440_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rc4_hmac_ossl_md5_functions
#  define ossl_rc4_hmac_ossl_md5_functions OPENSSL_MANGLER(ossl_rc4_hmac_ossl_md5_functions)
# endif
#else
# ifndef _ossl_rc4_hmac_ossl_md5_functions
#  define _ossl_rc4_hmac_ossl_md5_functions OPENSSL_MANGLER_ASM(ossl_rc4_hmac_ossl_md5_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_read_der
#  define ossl_read_der OPENSSL_MANGLER(ossl_read_der)
# endif
#else
# ifndef _ossl_read_der
#  define _ossl_read_der OPENSSL_MANGLER_ASM(ossl_read_der)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_asn1_meths
#  define ossl_rsa_asn1_meths OPENSSL_MANGLER(ossl_rsa_asn1_meths)
# endif
#else
# ifndef _ossl_rsa_asn1_meths
#  define _ossl_rsa_asn1_meths OPENSSL_MANGLER_ASM(ossl_rsa_asn1_meths)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_asym_cipher_functions
#  define ossl_rsa_asym_cipher_functions OPENSSL_MANGLER(ossl_rsa_asym_cipher_functions)
# endif
#else
# ifndef _ossl_rsa_asym_cipher_functions
#  define _ossl_rsa_asym_cipher_functions OPENSSL_MANGLER_ASM(ossl_rsa_asym_cipher_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_asym_kem_functions
#  define ossl_rsa_asym_kem_functions OPENSSL_MANGLER(ossl_rsa_asym_kem_functions)
# endif
#else
# ifndef _ossl_rsa_asym_kem_functions
#  define _ossl_rsa_asym_kem_functions OPENSSL_MANGLER_ASM(ossl_rsa_asym_kem_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_check_crt_components
#  define ossl_rsa_check_crt_components OPENSSL_MANGLER(ossl_rsa_check_crt_components)
# endif
#else
# ifndef _ossl_rsa_check_crt_components
#  define _ossl_rsa_check_crt_components OPENSSL_MANGLER_ASM(ossl_rsa_check_crt_components)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_check_key
#  define ossl_rsa_check_key OPENSSL_MANGLER(ossl_rsa_check_key)
# endif
#else
# ifndef _ossl_rsa_check_key
#  define _ossl_rsa_check_key OPENSSL_MANGLER_ASM(ossl_rsa_check_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_check_pminusq_diff
#  define ossl_rsa_check_pminusq_diff OPENSSL_MANGLER(ossl_rsa_check_pminusq_diff)
# endif
#else
# ifndef _ossl_rsa_check_pminusq_diff
#  define _ossl_rsa_check_pminusq_diff OPENSSL_MANGLER_ASM(ossl_rsa_check_pminusq_diff)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_check_prime_factor
#  define ossl_rsa_check_prime_factor OPENSSL_MANGLER(ossl_rsa_check_prime_factor)
# endif
#else
# ifndef _ossl_rsa_check_prime_factor
#  define _ossl_rsa_check_prime_factor OPENSSL_MANGLER_ASM(ossl_rsa_check_prime_factor)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_check_prime_factor_range
#  define ossl_rsa_check_prime_factor_range OPENSSL_MANGLER(ossl_rsa_check_prime_factor_range)
# endif
#else
# ifndef _ossl_rsa_check_prime_factor_range
#  define _ossl_rsa_check_prime_factor_range OPENSSL_MANGLER_ASM(ossl_rsa_check_prime_factor_range)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_check_private_exponent
#  define ossl_rsa_check_private_exponent OPENSSL_MANGLER(ossl_rsa_check_private_exponent)
# endif
#else
# ifndef _ossl_rsa_check_private_exponent
#  define _ossl_rsa_check_private_exponent OPENSSL_MANGLER_ASM(ossl_rsa_check_private_exponent)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_check_public_exponent
#  define ossl_rsa_check_public_exponent OPENSSL_MANGLER(ossl_rsa_check_public_exponent)
# endif
#else
# ifndef _ossl_rsa_check_public_exponent
#  define _ossl_rsa_check_public_exponent OPENSSL_MANGLER_ASM(ossl_rsa_check_public_exponent)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_ctx_to_pss_string
#  define ossl_rsa_ctx_to_pss_string OPENSSL_MANGLER(ossl_rsa_ctx_to_pss_string)
# endif
#else
# ifndef _ossl_rsa_ctx_to_pss_string
#  define _ossl_rsa_ctx_to_pss_string OPENSSL_MANGLER_ASM(ossl_rsa_ctx_to_pss_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_digestinfo_encoding
#  define ossl_rsa_digestinfo_encoding OPENSSL_MANGLER(ossl_rsa_digestinfo_encoding)
# endif
#else
# ifndef _ossl_rsa_digestinfo_encoding
#  define _ossl_rsa_digestinfo_encoding OPENSSL_MANGLER_ASM(ossl_rsa_digestinfo_encoding)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_dup
#  define ossl_rsa_dup OPENSSL_MANGLER(ossl_rsa_dup)
# endif
#else
# ifndef _ossl_rsa_dup
#  define _ossl_rsa_dup OPENSSL_MANGLER_ASM(ossl_rsa_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_fips186_4_gen_prob_primes
#  define ossl_rsa_fips186_4_gen_prob_primes OPENSSL_MANGLER(ossl_rsa_fips186_4_gen_prob_primes)
# endif
#else
# ifndef _ossl_rsa_fips186_4_gen_prob_primes
#  define _ossl_rsa_fips186_4_gen_prob_primes OPENSSL_MANGLER_ASM(ossl_rsa_fips186_4_gen_prob_primes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_fromdata
#  define ossl_rsa_fromdata OPENSSL_MANGLER(ossl_rsa_fromdata)
# endif
#else
# ifndef _ossl_rsa_fromdata
#  define _ossl_rsa_fromdata OPENSSL_MANGLER_ASM(ossl_rsa_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_get0_all_params
#  define ossl_rsa_get0_all_params OPENSSL_MANGLER(ossl_rsa_get0_all_params)
# endif
#else
# ifndef _ossl_rsa_get0_all_params
#  define _ossl_rsa_get0_all_params OPENSSL_MANGLER_ASM(ossl_rsa_get0_all_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_get0_libctx
#  define ossl_rsa_get0_libctx OPENSSL_MANGLER(ossl_rsa_get0_libctx)
# endif
#else
# ifndef _ossl_rsa_get0_libctx
#  define _ossl_rsa_get0_libctx OPENSSL_MANGLER_ASM(ossl_rsa_get0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_get0_pss_params_30
#  define ossl_rsa_get0_pss_params_30 OPENSSL_MANGLER(ossl_rsa_get0_pss_params_30)
# endif
#else
# ifndef _ossl_rsa_get0_pss_params_30
#  define _ossl_rsa_get0_pss_params_30 OPENSSL_MANGLER_ASM(ossl_rsa_get0_pss_params_30)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_get_lcm
#  define ossl_rsa_get_lcm OPENSSL_MANGLER(ossl_rsa_get_lcm)
# endif
#else
# ifndef _ossl_rsa_get_lcm
#  define _ossl_rsa_get_lcm OPENSSL_MANGLER_ASM(ossl_rsa_get_lcm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_is_foreign
#  define ossl_rsa_is_foreign OPENSSL_MANGLER(ossl_rsa_is_foreign)
# endif
#else
# ifndef _ossl_rsa_is_foreign
#  define _ossl_rsa_is_foreign OPENSSL_MANGLER_ASM(ossl_rsa_is_foreign)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_key_from_pkcs8
#  define ossl_rsa_key_from_pkcs8 OPENSSL_MANGLER(ossl_rsa_key_from_pkcs8)
# endif
#else
# ifndef _ossl_rsa_key_from_pkcs8
#  define _ossl_rsa_key_from_pkcs8 OPENSSL_MANGLER_ASM(ossl_rsa_key_from_pkcs8)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_keymgmt_functions
#  define ossl_rsa_keymgmt_functions OPENSSL_MANGLER(ossl_rsa_keymgmt_functions)
# endif
#else
# ifndef _ossl_rsa_keymgmt_functions
#  define _ossl_rsa_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_rsa_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_mgf_nid2name
#  define ossl_rsa_mgf_nid2name OPENSSL_MANGLER(ossl_rsa_mgf_nid2name)
# endif
#else
# ifndef _ossl_rsa_mgf_nid2name
#  define _ossl_rsa_mgf_nid2name OPENSSL_MANGLER_ASM(ossl_rsa_mgf_nid2name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_mp_coeff_names
#  define ossl_rsa_mp_coeff_names OPENSSL_MANGLER(ossl_rsa_mp_coeff_names)
# endif
#else
# ifndef _ossl_rsa_mp_coeff_names
#  define _ossl_rsa_mp_coeff_names OPENSSL_MANGLER_ASM(ossl_rsa_mp_coeff_names)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_mp_exp_names
#  define ossl_rsa_mp_exp_names OPENSSL_MANGLER(ossl_rsa_mp_exp_names)
# endif
#else
# ifndef _ossl_rsa_mp_exp_names
#  define _ossl_rsa_mp_exp_names OPENSSL_MANGLER_ASM(ossl_rsa_mp_exp_names)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_mp_factor_names
#  define ossl_rsa_mp_factor_names OPENSSL_MANGLER(ossl_rsa_mp_factor_names)
# endif
#else
# ifndef _ossl_rsa_mp_factor_names
#  define _ossl_rsa_mp_factor_names OPENSSL_MANGLER_ASM(ossl_rsa_mp_factor_names)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_multip_calc_product
#  define ossl_rsa_multip_calc_product OPENSSL_MANGLER(ossl_rsa_multip_calc_product)
# endif
#else
# ifndef _ossl_rsa_multip_calc_product
#  define _ossl_rsa_multip_calc_product OPENSSL_MANGLER_ASM(ossl_rsa_multip_calc_product)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_multip_cap
#  define ossl_rsa_multip_cap OPENSSL_MANGLER(ossl_rsa_multip_cap)
# endif
#else
# ifndef _ossl_rsa_multip_cap
#  define _ossl_rsa_multip_cap OPENSSL_MANGLER_ASM(ossl_rsa_multip_cap)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_multip_info_free
#  define ossl_rsa_multip_info_free OPENSSL_MANGLER(ossl_rsa_multip_info_free)
# endif
#else
# ifndef _ossl_rsa_multip_info_free
#  define _ossl_rsa_multip_info_free OPENSSL_MANGLER_ASM(ossl_rsa_multip_info_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_multip_info_free_ex
#  define ossl_rsa_multip_info_free_ex OPENSSL_MANGLER(ossl_rsa_multip_info_free_ex)
# endif
#else
# ifndef _ossl_rsa_multip_info_free_ex
#  define _ossl_rsa_multip_info_free_ex OPENSSL_MANGLER_ASM(ossl_rsa_multip_info_free_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_multip_info_new
#  define ossl_rsa_multip_info_new OPENSSL_MANGLER(ossl_rsa_multip_info_new)
# endif
#else
# ifndef _ossl_rsa_multip_info_new
#  define _ossl_rsa_multip_info_new OPENSSL_MANGLER_ASM(ossl_rsa_multip_info_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_new_with_ctx
#  define ossl_rsa_new_with_ctx OPENSSL_MANGLER(ossl_rsa_new_with_ctx)
# endif
#else
# ifndef _ossl_rsa_new_with_ctx
#  define _ossl_rsa_new_with_ctx OPENSSL_MANGLER_ASM(ossl_rsa_new_with_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_oaeppss_md2nid
#  define ossl_rsa_oaeppss_md2nid OPENSSL_MANGLER(ossl_rsa_oaeppss_md2nid)
# endif
#else
# ifndef _ossl_rsa_oaeppss_md2nid
#  define _ossl_rsa_oaeppss_md2nid OPENSSL_MANGLER_ASM(ossl_rsa_oaeppss_md2nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_oaeppss_nid2name
#  define ossl_rsa_oaeppss_nid2name OPENSSL_MANGLER(ossl_rsa_oaeppss_nid2name)
# endif
#else
# ifndef _ossl_rsa_oaeppss_nid2name
#  define _ossl_rsa_oaeppss_nid2name OPENSSL_MANGLER_ASM(ossl_rsa_oaeppss_nid2name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_padding_add_PKCS1_OAEP_mgf1_ex
#  define ossl_rsa_padding_add_PKCS1_OAEP_mgf1_ex OPENSSL_MANGLER(ossl_rsa_padding_add_PKCS1_OAEP_mgf1_ex)
# endif
#else
# ifndef _ossl_rsa_padding_add_PKCS1_OAEP_mgf1_ex
#  define _ossl_rsa_padding_add_PKCS1_OAEP_mgf1_ex OPENSSL_MANGLER_ASM(ossl_rsa_padding_add_PKCS1_OAEP_mgf1_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_padding_add_PKCS1_type_2_ex
#  define ossl_rsa_padding_add_PKCS1_type_2_ex OPENSSL_MANGLER(ossl_rsa_padding_add_PKCS1_type_2_ex)
# endif
#else
# ifndef _ossl_rsa_padding_add_PKCS1_type_2_ex
#  define _ossl_rsa_padding_add_PKCS1_type_2_ex OPENSSL_MANGLER_ASM(ossl_rsa_padding_add_PKCS1_type_2_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_padding_check_PKCS1_type_2_TLS
#  define ossl_rsa_padding_check_PKCS1_type_2_TLS OPENSSL_MANGLER(ossl_rsa_padding_check_PKCS1_type_2_TLS)
# endif
#else
# ifndef _ossl_rsa_padding_check_PKCS1_type_2_TLS
#  define _ossl_rsa_padding_check_PKCS1_type_2_TLS OPENSSL_MANGLER_ASM(ossl_rsa_padding_check_PKCS1_type_2_TLS)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_param_decode
#  define ossl_rsa_param_decode OPENSSL_MANGLER(ossl_rsa_param_decode)
# endif
#else
# ifndef _ossl_rsa_param_decode
#  define _ossl_rsa_param_decode OPENSSL_MANGLER_ASM(ossl_rsa_param_decode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pkey_method
#  define ossl_rsa_pkey_method OPENSSL_MANGLER(ossl_rsa_pkey_method)
# endif
#else
# ifndef _ossl_rsa_pkey_method
#  define _ossl_rsa_pkey_method OPENSSL_MANGLER_ASM(ossl_rsa_pkey_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_asn1_meth
#  define ossl_rsa_pss_asn1_meth OPENSSL_MANGLER(ossl_rsa_pss_asn1_meth)
# endif
#else
# ifndef _ossl_rsa_pss_asn1_meth
#  define _ossl_rsa_pss_asn1_meth OPENSSL_MANGLER_ASM(ossl_rsa_pss_asn1_meth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_decode
#  define ossl_rsa_pss_decode OPENSSL_MANGLER(ossl_rsa_pss_decode)
# endif
#else
# ifndef _ossl_rsa_pss_decode
#  define _ossl_rsa_pss_decode OPENSSL_MANGLER_ASM(ossl_rsa_pss_decode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_get_param
#  define ossl_rsa_pss_get_param OPENSSL_MANGLER(ossl_rsa_pss_get_param)
# endif
#else
# ifndef _ossl_rsa_pss_get_param
#  define _ossl_rsa_pss_get_param OPENSSL_MANGLER_ASM(ossl_rsa_pss_get_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_get_param_unverified
#  define ossl_rsa_pss_get_param_unverified OPENSSL_MANGLER(ossl_rsa_pss_get_param_unverified)
# endif
#else
# ifndef _ossl_rsa_pss_get_param_unverified
#  define _ossl_rsa_pss_get_param_unverified OPENSSL_MANGLER_ASM(ossl_rsa_pss_get_param_unverified)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_copy
#  define ossl_rsa_pss_params_30_copy OPENSSL_MANGLER(ossl_rsa_pss_params_30_copy)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_copy
#  define _ossl_rsa_pss_params_30_copy OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_copy)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_fromdata
#  define ossl_rsa_pss_params_30_fromdata OPENSSL_MANGLER(ossl_rsa_pss_params_30_fromdata)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_fromdata
#  define _ossl_rsa_pss_params_30_fromdata OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_fromdata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_hashalg
#  define ossl_rsa_pss_params_30_hashalg OPENSSL_MANGLER(ossl_rsa_pss_params_30_hashalg)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_hashalg
#  define _ossl_rsa_pss_params_30_hashalg OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_hashalg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_is_unrestricted
#  define ossl_rsa_pss_params_30_is_unrestricted OPENSSL_MANGLER(ossl_rsa_pss_params_30_is_unrestricted)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_is_unrestricted
#  define _ossl_rsa_pss_params_30_is_unrestricted OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_is_unrestricted)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_maskgenalg
#  define ossl_rsa_pss_params_30_maskgenalg OPENSSL_MANGLER(ossl_rsa_pss_params_30_maskgenalg)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_maskgenalg
#  define _ossl_rsa_pss_params_30_maskgenalg OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_maskgenalg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_maskgenhashalg
#  define ossl_rsa_pss_params_30_maskgenhashalg OPENSSL_MANGLER(ossl_rsa_pss_params_30_maskgenhashalg)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_maskgenhashalg
#  define _ossl_rsa_pss_params_30_maskgenhashalg OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_maskgenhashalg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_saltlen
#  define ossl_rsa_pss_params_30_saltlen OPENSSL_MANGLER(ossl_rsa_pss_params_30_saltlen)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_saltlen
#  define _ossl_rsa_pss_params_30_saltlen OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_saltlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_set_defaults
#  define ossl_rsa_pss_params_30_set_defaults OPENSSL_MANGLER(ossl_rsa_pss_params_30_set_defaults)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_set_defaults
#  define _ossl_rsa_pss_params_30_set_defaults OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_set_defaults)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_set_hashalg
#  define ossl_rsa_pss_params_30_set_hashalg OPENSSL_MANGLER(ossl_rsa_pss_params_30_set_hashalg)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_set_hashalg
#  define _ossl_rsa_pss_params_30_set_hashalg OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_set_hashalg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_set_maskgenalg
#  define ossl_rsa_pss_params_30_set_maskgenalg OPENSSL_MANGLER(ossl_rsa_pss_params_30_set_maskgenalg)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_set_maskgenalg
#  define _ossl_rsa_pss_params_30_set_maskgenalg OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_set_maskgenalg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_set_maskgenhashalg
#  define ossl_rsa_pss_params_30_set_maskgenhashalg OPENSSL_MANGLER(ossl_rsa_pss_params_30_set_maskgenhashalg)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_set_maskgenhashalg
#  define _ossl_rsa_pss_params_30_set_maskgenhashalg OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_set_maskgenhashalg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_set_saltlen
#  define ossl_rsa_pss_params_30_set_saltlen OPENSSL_MANGLER(ossl_rsa_pss_params_30_set_saltlen)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_set_saltlen
#  define _ossl_rsa_pss_params_30_set_saltlen OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_set_saltlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_set_trailerfield
#  define ossl_rsa_pss_params_30_set_trailerfield OPENSSL_MANGLER(ossl_rsa_pss_params_30_set_trailerfield)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_set_trailerfield
#  define _ossl_rsa_pss_params_30_set_trailerfield OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_set_trailerfield)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_todata
#  define ossl_rsa_pss_params_30_todata OPENSSL_MANGLER(ossl_rsa_pss_params_30_todata)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_todata
#  define _ossl_rsa_pss_params_30_todata OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_todata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_30_trailerfield
#  define ossl_rsa_pss_params_30_trailerfield OPENSSL_MANGLER(ossl_rsa_pss_params_30_trailerfield)
# endif
#else
# ifndef _ossl_rsa_pss_params_30_trailerfield
#  define _ossl_rsa_pss_params_30_trailerfield OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_30_trailerfield)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_params_create
#  define ossl_rsa_pss_params_create OPENSSL_MANGLER(ossl_rsa_pss_params_create)
# endif
#else
# ifndef _ossl_rsa_pss_params_create
#  define _ossl_rsa_pss_params_create OPENSSL_MANGLER_ASM(ossl_rsa_pss_params_create)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_pkey_method
#  define ossl_rsa_pss_pkey_method OPENSSL_MANGLER(ossl_rsa_pss_pkey_method)
# endif
#else
# ifndef _ossl_rsa_pss_pkey_method
#  define _ossl_rsa_pss_pkey_method OPENSSL_MANGLER_ASM(ossl_rsa_pss_pkey_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_pss_to_ctx
#  define ossl_rsa_pss_to_ctx OPENSSL_MANGLER(ossl_rsa_pss_to_ctx)
# endif
#else
# ifndef _ossl_rsa_pss_to_ctx
#  define _ossl_rsa_pss_to_ctx OPENSSL_MANGLER_ASM(ossl_rsa_pss_to_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_set0_all_params
#  define ossl_rsa_set0_all_params OPENSSL_MANGLER(ossl_rsa_set0_all_params)
# endif
#else
# ifndef _ossl_rsa_set0_all_params
#  define _ossl_rsa_set0_all_params OPENSSL_MANGLER_ASM(ossl_rsa_set0_all_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_set0_libctx
#  define ossl_rsa_set0_libctx OPENSSL_MANGLER(ossl_rsa_set0_libctx)
# endif
#else
# ifndef _ossl_rsa_set0_libctx
#  define _ossl_rsa_set0_libctx OPENSSL_MANGLER_ASM(ossl_rsa_set0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_set0_pss_params
#  define ossl_rsa_set0_pss_params OPENSSL_MANGLER(ossl_rsa_set0_pss_params)
# endif
#else
# ifndef _ossl_rsa_set0_pss_params
#  define _ossl_rsa_set0_pss_params OPENSSL_MANGLER_ASM(ossl_rsa_set0_pss_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_signature_functions
#  define ossl_rsa_signature_functions OPENSSL_MANGLER(ossl_rsa_signature_functions)
# endif
#else
# ifndef _ossl_rsa_signature_functions
#  define _ossl_rsa_signature_functions OPENSSL_MANGLER_ASM(ossl_rsa_signature_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_sp800_56b_check_keypair
#  define ossl_rsa_sp800_56b_check_keypair OPENSSL_MANGLER(ossl_rsa_sp800_56b_check_keypair)
# endif
#else
# ifndef _ossl_rsa_sp800_56b_check_keypair
#  define _ossl_rsa_sp800_56b_check_keypair OPENSSL_MANGLER_ASM(ossl_rsa_sp800_56b_check_keypair)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_sp800_56b_check_private
#  define ossl_rsa_sp800_56b_check_private OPENSSL_MANGLER(ossl_rsa_sp800_56b_check_private)
# endif
#else
# ifndef _ossl_rsa_sp800_56b_check_private
#  define _ossl_rsa_sp800_56b_check_private OPENSSL_MANGLER_ASM(ossl_rsa_sp800_56b_check_private)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_sp800_56b_check_public
#  define ossl_rsa_sp800_56b_check_public OPENSSL_MANGLER(ossl_rsa_sp800_56b_check_public)
# endif
#else
# ifndef _ossl_rsa_sp800_56b_check_public
#  define _ossl_rsa_sp800_56b_check_public OPENSSL_MANGLER_ASM(ossl_rsa_sp800_56b_check_public)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_sp800_56b_derive_params_from_pq
#  define ossl_rsa_sp800_56b_derive_params_from_pq OPENSSL_MANGLER(ossl_rsa_sp800_56b_derive_params_from_pq)
# endif
#else
# ifndef _ossl_rsa_sp800_56b_derive_params_from_pq
#  define _ossl_rsa_sp800_56b_derive_params_from_pq OPENSSL_MANGLER_ASM(ossl_rsa_sp800_56b_derive_params_from_pq)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_sp800_56b_generate_key
#  define ossl_rsa_sp800_56b_generate_key OPENSSL_MANGLER(ossl_rsa_sp800_56b_generate_key)
# endif
#else
# ifndef _ossl_rsa_sp800_56b_generate_key
#  define _ossl_rsa_sp800_56b_generate_key OPENSSL_MANGLER_ASM(ossl_rsa_sp800_56b_generate_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_sp800_56b_pairwise_test
#  define ossl_rsa_sp800_56b_pairwise_test OPENSSL_MANGLER(ossl_rsa_sp800_56b_pairwise_test)
# endif
#else
# ifndef _ossl_rsa_sp800_56b_pairwise_test
#  define _ossl_rsa_sp800_56b_pairwise_test OPENSSL_MANGLER_ASM(ossl_rsa_sp800_56b_pairwise_test)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_sp800_56b_validate_strength
#  define ossl_rsa_sp800_56b_validate_strength OPENSSL_MANGLER(ossl_rsa_sp800_56b_validate_strength)
# endif
#else
# ifndef _ossl_rsa_sp800_56b_validate_strength
#  define _ossl_rsa_sp800_56b_validate_strength OPENSSL_MANGLER_ASM(ossl_rsa_sp800_56b_validate_strength)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define ossl_rsa_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define _ossl_rsa_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define ossl_rsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define _ossl_rsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_PKCS1_der_encoder_functions
#  define ossl_rsa_to_PKCS1_der_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_PKCS1_der_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_PKCS1_der_encoder_functions
#  define _ossl_rsa_to_PKCS1_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_PKCS1_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_PKCS1_pem_encoder_functions
#  define ossl_rsa_to_PKCS1_pem_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_PKCS1_pem_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_PKCS1_pem_encoder_functions
#  define _ossl_rsa_to_PKCS1_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_PKCS1_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_PrivateKeyInfo_der_encoder_functions
#  define ossl_rsa_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_PrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_PrivateKeyInfo_der_encoder_functions
#  define _ossl_rsa_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_PrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_PrivateKeyInfo_pem_encoder_functions
#  define ossl_rsa_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_PrivateKeyInfo_pem_encoder_functions
#  define _ossl_rsa_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_RSA_der_encoder_functions
#  define ossl_rsa_to_RSA_der_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_RSA_der_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_RSA_der_encoder_functions
#  define _ossl_rsa_to_RSA_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_RSA_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_RSA_pem_encoder_functions
#  define ossl_rsa_to_RSA_pem_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_RSA_pem_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_RSA_pem_encoder_functions
#  define _ossl_rsa_to_RSA_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_RSA_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_SubjectPublicKeyInfo_der_encoder_functions
#  define ossl_rsa_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_SubjectPublicKeyInfo_der_encoder_functions
#  define _ossl_rsa_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define ossl_rsa_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define _ossl_rsa_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_msblob_encoder_functions
#  define ossl_rsa_to_msblob_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_msblob_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_msblob_encoder_functions
#  define _ossl_rsa_to_msblob_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_msblob_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_pvk_encoder_functions
#  define ossl_rsa_to_pvk_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_pvk_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_pvk_encoder_functions
#  define _ossl_rsa_to_pvk_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_pvk_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_text_encoder_functions
#  define ossl_rsa_to_text_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_text_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_text_encoder_functions
#  define _ossl_rsa_to_text_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_text_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_type_specific_keypair_der_encoder_functions
#  define ossl_rsa_to_type_specific_keypair_der_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_type_specific_keypair_der_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_type_specific_keypair_der_encoder_functions
#  define _ossl_rsa_to_type_specific_keypair_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_type_specific_keypair_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_to_type_specific_keypair_pem_encoder_functions
#  define ossl_rsa_to_type_specific_keypair_pem_encoder_functions OPENSSL_MANGLER(ossl_rsa_to_type_specific_keypair_pem_encoder_functions)
# endif
#else
# ifndef _ossl_rsa_to_type_specific_keypair_pem_encoder_functions
#  define _ossl_rsa_to_type_specific_keypair_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsa_to_type_specific_keypair_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_todata
#  define ossl_rsa_todata OPENSSL_MANGLER(ossl_rsa_todata)
# endif
#else
# ifndef _ossl_rsa_todata
#  define _ossl_rsa_todata OPENSSL_MANGLER_ASM(ossl_rsa_todata)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_validate_pairwise
#  define ossl_rsa_validate_pairwise OPENSSL_MANGLER(ossl_rsa_validate_pairwise)
# endif
#else
# ifndef _ossl_rsa_validate_pairwise
#  define _ossl_rsa_validate_pairwise OPENSSL_MANGLER_ASM(ossl_rsa_validate_pairwise)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_validate_private
#  define ossl_rsa_validate_private OPENSSL_MANGLER(ossl_rsa_validate_private)
# endif
#else
# ifndef _ossl_rsa_validate_private
#  define _ossl_rsa_validate_private OPENSSL_MANGLER_ASM(ossl_rsa_validate_private)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_validate_public
#  define ossl_rsa_validate_public OPENSSL_MANGLER(ossl_rsa_validate_public)
# endif
#else
# ifndef _ossl_rsa_validate_public
#  define _ossl_rsa_validate_public OPENSSL_MANGLER_ASM(ossl_rsa_validate_public)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsa_verify
#  define ossl_rsa_verify OPENSSL_MANGLER(ossl_rsa_verify)
# endif
#else
# ifndef _ossl_rsa_verify
#  define _ossl_rsa_verify OPENSSL_MANGLER_ASM(ossl_rsa_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsapss_keymgmt_functions
#  define ossl_rsapss_keymgmt_functions OPENSSL_MANGLER(ossl_rsapss_keymgmt_functions)
# endif
#else
# ifndef _ossl_rsapss_keymgmt_functions
#  define _ossl_rsapss_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_rsapss_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsapss_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define ossl_rsapss_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_rsapss_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_rsapss_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define _ossl_rsapss_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsapss_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsapss_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define ossl_rsapss_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_rsapss_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_rsapss_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define _ossl_rsapss_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsapss_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsapss_to_PKCS1_der_encoder_functions
#  define ossl_rsapss_to_PKCS1_der_encoder_functions OPENSSL_MANGLER(ossl_rsapss_to_PKCS1_der_encoder_functions)
# endif
#else
# ifndef _ossl_rsapss_to_PKCS1_der_encoder_functions
#  define _ossl_rsapss_to_PKCS1_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsapss_to_PKCS1_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsapss_to_PKCS1_pem_encoder_functions
#  define ossl_rsapss_to_PKCS1_pem_encoder_functions OPENSSL_MANGLER(ossl_rsapss_to_PKCS1_pem_encoder_functions)
# endif
#else
# ifndef _ossl_rsapss_to_PKCS1_pem_encoder_functions
#  define _ossl_rsapss_to_PKCS1_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsapss_to_PKCS1_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsapss_to_PrivateKeyInfo_der_encoder_functions
#  define ossl_rsapss_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_rsapss_to_PrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_rsapss_to_PrivateKeyInfo_der_encoder_functions
#  define _ossl_rsapss_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsapss_to_PrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsapss_to_PrivateKeyInfo_pem_encoder_functions
#  define ossl_rsapss_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_rsapss_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_rsapss_to_PrivateKeyInfo_pem_encoder_functions
#  define _ossl_rsapss_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsapss_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsapss_to_SubjectPublicKeyInfo_der_encoder_functions
#  define ossl_rsapss_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_rsapss_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_rsapss_to_SubjectPublicKeyInfo_der_encoder_functions
#  define _ossl_rsapss_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsapss_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsapss_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define ossl_rsapss_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_rsapss_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_rsapss_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define _ossl_rsapss_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsapss_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsapss_to_text_encoder_functions
#  define ossl_rsapss_to_text_encoder_functions OPENSSL_MANGLER(ossl_rsapss_to_text_encoder_functions)
# endif
#else
# ifndef _ossl_rsapss_to_text_encoder_functions
#  define _ossl_rsapss_to_text_encoder_functions OPENSSL_MANGLER_ASM(ossl_rsapss_to_text_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsaz_amm52x20_x1_256
#  define ossl_rsaz_amm52x20_x1_256 OPENSSL_MANGLER(ossl_rsaz_amm52x20_x1_256)
# endif
#else
# ifndef _ossl_rsaz_amm52x20_x1_256
#  define _ossl_rsaz_amm52x20_x1_256 OPENSSL_MANGLER_ASM(ossl_rsaz_amm52x20_x1_256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsaz_amm52x20_x2_256
#  define ossl_rsaz_amm52x20_x2_256 OPENSSL_MANGLER(ossl_rsaz_amm52x20_x2_256)
# endif
#else
# ifndef _ossl_rsaz_amm52x20_x2_256
#  define _ossl_rsaz_amm52x20_x2_256 OPENSSL_MANGLER_ASM(ossl_rsaz_amm52x20_x2_256)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsaz_avx512ifma_eligible
#  define ossl_rsaz_avx512ifma_eligible OPENSSL_MANGLER(ossl_rsaz_avx512ifma_eligible)
# endif
#else
# ifndef _ossl_rsaz_avx512ifma_eligible
#  define _ossl_rsaz_avx512ifma_eligible OPENSSL_MANGLER_ASM(ossl_rsaz_avx512ifma_eligible)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_rsaz_mod_exp_avx512_x2
#  define ossl_rsaz_mod_exp_avx512_x2 OPENSSL_MANGLER(ossl_rsaz_mod_exp_avx512_x2)
# endif
#else
# ifndef _ossl_rsaz_mod_exp_avx512_x2
#  define _ossl_rsaz_mod_exp_avx512_x2 OPENSSL_MANGLER_ASM(ossl_rsaz_mod_exp_avx512_x2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sa_doall
#  define ossl_sa_doall OPENSSL_MANGLER(ossl_sa_doall)
# endif
#else
# ifndef _ossl_sa_doall
#  define _ossl_sa_doall OPENSSL_MANGLER_ASM(ossl_sa_doall)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sa_doall_arg
#  define ossl_sa_doall_arg OPENSSL_MANGLER(ossl_sa_doall_arg)
# endif
#else
# ifndef _ossl_sa_doall_arg
#  define _ossl_sa_doall_arg OPENSSL_MANGLER_ASM(ossl_sa_doall_arg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sa_free
#  define ossl_sa_free OPENSSL_MANGLER(ossl_sa_free)
# endif
#else
# ifndef _ossl_sa_free
#  define _ossl_sa_free OPENSSL_MANGLER_ASM(ossl_sa_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sa_free_leaves
#  define ossl_sa_free_leaves OPENSSL_MANGLER(ossl_sa_free_leaves)
# endif
#else
# ifndef _ossl_sa_free_leaves
#  define _ossl_sa_free_leaves OPENSSL_MANGLER_ASM(ossl_sa_free_leaves)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sa_get
#  define ossl_sa_get OPENSSL_MANGLER(ossl_sa_get)
# endif
#else
# ifndef _ossl_sa_get
#  define _ossl_sa_get OPENSSL_MANGLER_ASM(ossl_sa_get)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sa_new
#  define ossl_sa_new OPENSSL_MANGLER(ossl_sa_new)
# endif
#else
# ifndef _ossl_sa_new
#  define _ossl_sa_new OPENSSL_MANGLER_ASM(ossl_sa_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sa_num
#  define ossl_sa_num OPENSSL_MANGLER(ossl_sa_num)
# endif
#else
# ifndef _ossl_sa_num
#  define _ossl_sa_num OPENSSL_MANGLER_ASM(ossl_sa_num)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sa_set
#  define ossl_sa_set OPENSSL_MANGLER(ossl_sa_set)
# endif
#else
# ifndef _ossl_sa_set
#  define _ossl_sa_set OPENSSL_MANGLER_ASM(ossl_sa_set)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_safe_getenv
#  define ossl_safe_getenv OPENSSL_MANGLER(ossl_safe_getenv)
# endif
#else
# ifndef _ossl_safe_getenv
#  define _ossl_safe_getenv OPENSSL_MANGLER_ASM(ossl_safe_getenv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_securitycheck_enabled
#  define ossl_securitycheck_enabled OPENSSL_MANGLER(ossl_securitycheck_enabled)
# endif
#else
# ifndef _ossl_securitycheck_enabled
#  define _ossl_securitycheck_enabled OPENSSL_MANGLER_ASM(ossl_securitycheck_enabled)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_seed128cbc_functions
#  define ossl_seed128cbc_functions OPENSSL_MANGLER(ossl_seed128cbc_functions)
# endif
#else
# ifndef _ossl_seed128cbc_functions
#  define _ossl_seed128cbc_functions OPENSSL_MANGLER_ASM(ossl_seed128cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_seed128cfb128_functions
#  define ossl_seed128cfb128_functions OPENSSL_MANGLER(ossl_seed128cfb128_functions)
# endif
#else
# ifndef _ossl_seed128cfb128_functions
#  define _ossl_seed128cfb128_functions OPENSSL_MANGLER_ASM(ossl_seed128cfb128_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_seed128ecb_functions
#  define ossl_seed128ecb_functions OPENSSL_MANGLER(ossl_seed128ecb_functions)
# endif
#else
# ifndef _ossl_seed128ecb_functions
#  define _ossl_seed128ecb_functions OPENSSL_MANGLER_ASM(ossl_seed128ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_seed128ofb128_functions
#  define ossl_seed128ofb128_functions OPENSSL_MANGLER(ossl_seed128ofb128_functions)
# endif
#else
# ifndef _ossl_seed128ofb128_functions
#  define _ossl_seed128ofb128_functions OPENSSL_MANGLER_ASM(ossl_seed128ofb128_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_seed_src_functions
#  define ossl_seed_src_functions OPENSSL_MANGLER(ossl_seed_src_functions)
# endif
#else
# ifndef _ossl_seed_src_functions
#  define _ossl_seed_src_functions OPENSSL_MANGLER_ASM(ossl_seed_src_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_set_error_state
#  define ossl_set_error_state OPENSSL_MANGLER(ossl_set_error_state)
# endif
#else
# ifndef _ossl_set_error_state
#  define _ossl_set_error_state OPENSSL_MANGLER_ASM(ossl_set_error_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha1
#  define ossl_sha1 OPENSSL_MANGLER(ossl_sha1)
# endif
#else
# ifndef _ossl_sha1
#  define _ossl_sha1 OPENSSL_MANGLER_ASM(ossl_sha1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha1_ctrl
#  define ossl_sha1_ctrl OPENSSL_MANGLER(ossl_sha1_ctrl)
# endif
#else
# ifndef _ossl_sha1_ctrl
#  define _ossl_sha1_ctrl OPENSSL_MANGLER_ASM(ossl_sha1_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha1_functions
#  define ossl_sha1_functions OPENSSL_MANGLER(ossl_sha1_functions)
# endif
#else
# ifndef _ossl_sha1_functions
#  define _ossl_sha1_functions OPENSSL_MANGLER_ASM(ossl_sha1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha224_functions
#  define ossl_sha224_functions OPENSSL_MANGLER(ossl_sha224_functions)
# endif
#else
# ifndef _ossl_sha224_functions
#  define _ossl_sha224_functions OPENSSL_MANGLER_ASM(ossl_sha224_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha256_functions
#  define ossl_sha256_functions OPENSSL_MANGLER(ossl_sha256_functions)
# endif
#else
# ifndef _ossl_sha256_functions
#  define _ossl_sha256_functions OPENSSL_MANGLER_ASM(ossl_sha256_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha384_functions
#  define ossl_sha384_functions OPENSSL_MANGLER(ossl_sha384_functions)
# endif
#else
# ifndef _ossl_sha384_functions
#  define _ossl_sha384_functions OPENSSL_MANGLER_ASM(ossl_sha384_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha3_224_functions
#  define ossl_sha3_224_functions OPENSSL_MANGLER(ossl_sha3_224_functions)
# endif
#else
# ifndef _ossl_sha3_224_functions
#  define _ossl_sha3_224_functions OPENSSL_MANGLER_ASM(ossl_sha3_224_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha3_256_functions
#  define ossl_sha3_256_functions OPENSSL_MANGLER(ossl_sha3_256_functions)
# endif
#else
# ifndef _ossl_sha3_256_functions
#  define _ossl_sha3_256_functions OPENSSL_MANGLER_ASM(ossl_sha3_256_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha3_384_functions
#  define ossl_sha3_384_functions OPENSSL_MANGLER(ossl_sha3_384_functions)
# endif
#else
# ifndef _ossl_sha3_384_functions
#  define _ossl_sha3_384_functions OPENSSL_MANGLER_ASM(ossl_sha3_384_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha3_512_functions
#  define ossl_sha3_512_functions OPENSSL_MANGLER(ossl_sha3_512_functions)
# endif
#else
# ifndef _ossl_sha3_512_functions
#  define _ossl_sha3_512_functions OPENSSL_MANGLER_ASM(ossl_sha3_512_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha3_final
#  define ossl_sha3_final OPENSSL_MANGLER(ossl_sha3_final)
# endif
#else
# ifndef _ossl_sha3_final
#  define _ossl_sha3_final OPENSSL_MANGLER_ASM(ossl_sha3_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha3_init
#  define ossl_sha3_init OPENSSL_MANGLER(ossl_sha3_init)
# endif
#else
# ifndef _ossl_sha3_init
#  define _ossl_sha3_init OPENSSL_MANGLER_ASM(ossl_sha3_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha3_reset
#  define ossl_sha3_reset OPENSSL_MANGLER(ossl_sha3_reset)
# endif
#else
# ifndef _ossl_sha3_reset
#  define _ossl_sha3_reset OPENSSL_MANGLER_ASM(ossl_sha3_reset)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha3_update
#  define ossl_sha3_update OPENSSL_MANGLER(ossl_sha3_update)
# endif
#else
# ifndef _ossl_sha3_update
#  define _ossl_sha3_update OPENSSL_MANGLER_ASM(ossl_sha3_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha512_224_functions
#  define ossl_sha512_224_functions OPENSSL_MANGLER(ossl_sha512_224_functions)
# endif
#else
# ifndef _ossl_sha512_224_functions
#  define _ossl_sha512_224_functions OPENSSL_MANGLER_ASM(ossl_sha512_224_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha512_256_functions
#  define ossl_sha512_256_functions OPENSSL_MANGLER(ossl_sha512_256_functions)
# endif
#else
# ifndef _ossl_sha512_256_functions
#  define _ossl_sha512_256_functions OPENSSL_MANGLER_ASM(ossl_sha512_256_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sha512_functions
#  define ossl_sha512_functions OPENSSL_MANGLER(ossl_sha512_functions)
# endif
#else
# ifndef _ossl_sha512_functions
#  define _ossl_sha512_functions OPENSSL_MANGLER_ASM(ossl_sha512_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_shake_128_functions
#  define ossl_shake_128_functions OPENSSL_MANGLER(ossl_shake_128_functions)
# endif
#else
# ifndef _ossl_shake_128_functions
#  define _ossl_shake_128_functions OPENSSL_MANGLER_ASM(ossl_shake_128_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_shake_256_functions
#  define ossl_shake_256_functions OPENSSL_MANGLER(ossl_shake_256_functions)
# endif
#else
# ifndef _ossl_shake_256_functions
#  define _ossl_shake_256_functions OPENSSL_MANGLER_ASM(ossl_shake_256_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siphash_functions
#  define ossl_siphash_functions OPENSSL_MANGLER(ossl_siphash_functions)
# endif
#else
# ifndef _ossl_siphash_functions
#  define _ossl_siphash_functions OPENSSL_MANGLER_ASM(ossl_siphash_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siv128_aad
#  define ossl_siv128_aad OPENSSL_MANGLER(ossl_siv128_aad)
# endif
#else
# ifndef _ossl_siv128_aad
#  define _ossl_siv128_aad OPENSSL_MANGLER_ASM(ossl_siv128_aad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siv128_cleanup
#  define ossl_siv128_cleanup OPENSSL_MANGLER(ossl_siv128_cleanup)
# endif
#else
# ifndef _ossl_siv128_cleanup
#  define _ossl_siv128_cleanup OPENSSL_MANGLER_ASM(ossl_siv128_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siv128_copy_ctx
#  define ossl_siv128_copy_ctx OPENSSL_MANGLER(ossl_siv128_copy_ctx)
# endif
#else
# ifndef _ossl_siv128_copy_ctx
#  define _ossl_siv128_copy_ctx OPENSSL_MANGLER_ASM(ossl_siv128_copy_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siv128_decrypt
#  define ossl_siv128_decrypt OPENSSL_MANGLER(ossl_siv128_decrypt)
# endif
#else
# ifndef _ossl_siv128_decrypt
#  define _ossl_siv128_decrypt OPENSSL_MANGLER_ASM(ossl_siv128_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siv128_encrypt
#  define ossl_siv128_encrypt OPENSSL_MANGLER(ossl_siv128_encrypt)
# endif
#else
# ifndef _ossl_siv128_encrypt
#  define _ossl_siv128_encrypt OPENSSL_MANGLER_ASM(ossl_siv128_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siv128_finish
#  define ossl_siv128_finish OPENSSL_MANGLER(ossl_siv128_finish)
# endif
#else
# ifndef _ossl_siv128_finish
#  define _ossl_siv128_finish OPENSSL_MANGLER_ASM(ossl_siv128_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siv128_get_tag
#  define ossl_siv128_get_tag OPENSSL_MANGLER(ossl_siv128_get_tag)
# endif
#else
# ifndef _ossl_siv128_get_tag
#  define _ossl_siv128_get_tag OPENSSL_MANGLER_ASM(ossl_siv128_get_tag)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siv128_init
#  define ossl_siv128_init OPENSSL_MANGLER(ossl_siv128_init)
# endif
#else
# ifndef _ossl_siv128_init
#  define _ossl_siv128_init OPENSSL_MANGLER_ASM(ossl_siv128_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siv128_new
#  define ossl_siv128_new OPENSSL_MANGLER(ossl_siv128_new)
# endif
#else
# ifndef _ossl_siv128_new
#  define _ossl_siv128_new OPENSSL_MANGLER_ASM(ossl_siv128_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siv128_set_tag
#  define ossl_siv128_set_tag OPENSSL_MANGLER(ossl_siv128_set_tag)
# endif
#else
# ifndef _ossl_siv128_set_tag
#  define _ossl_siv128_set_tag OPENSSL_MANGLER_ASM(ossl_siv128_set_tag)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_siv128_speed
#  define ossl_siv128_speed OPENSSL_MANGLER(ossl_siv128_speed)
# endif
#else
# ifndef _ossl_siv128_speed
#  define _ossl_siv128_speed OPENSSL_MANGLER_ASM(ossl_siv128_speed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sk_ASN1_UTF8STRING2text
#  define ossl_sk_ASN1_UTF8STRING2text OPENSSL_MANGLER(ossl_sk_ASN1_UTF8STRING2text)
# endif
#else
# ifndef _ossl_sk_ASN1_UTF8STRING2text
#  define _ossl_sk_ASN1_UTF8STRING2text OPENSSL_MANGLER_ASM(ossl_sk_ASN1_UTF8STRING2text)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sm3_block_data_order
#  define ossl_sm3_block_data_order OPENSSL_MANGLER(ossl_sm3_block_data_order)
# endif
#else
# ifndef _ossl_sm3_block_data_order
#  define _ossl_sm3_block_data_order OPENSSL_MANGLER_ASM(ossl_sm3_block_data_order)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sm3_final
#  define ossl_sm3_final OPENSSL_MANGLER(ossl_sm3_final)
# endif
#else
# ifndef _ossl_sm3_final
#  define _ossl_sm3_final OPENSSL_MANGLER_ASM(ossl_sm3_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sm3_functions
#  define ossl_sm3_functions OPENSSL_MANGLER(ossl_sm3_functions)
# endif
#else
# ifndef _ossl_sm3_functions
#  define _ossl_sm3_functions OPENSSL_MANGLER_ASM(ossl_sm3_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sm3_init
#  define ossl_sm3_init OPENSSL_MANGLER(ossl_sm3_init)
# endif
#else
# ifndef _ossl_sm3_init
#  define _ossl_sm3_init OPENSSL_MANGLER_ASM(ossl_sm3_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sm3_transform
#  define ossl_sm3_transform OPENSSL_MANGLER(ossl_sm3_transform)
# endif
#else
# ifndef _ossl_sm3_transform
#  define _ossl_sm3_transform OPENSSL_MANGLER_ASM(ossl_sm3_transform)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_sm3_update
#  define ossl_sm3_update OPENSSL_MANGLER(ossl_sm3_update)
# endif
#else
# ifndef _ossl_sm3_update
#  define _ossl_sm3_update OPENSSL_MANGLER_ASM(ossl_sm3_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_accept
#  define ossl_statem_accept OPENSSL_MANGLER(ossl_statem_accept)
# endif
#else
# ifndef _ossl_statem_accept
#  define _ossl_statem_accept OPENSSL_MANGLER_ASM(ossl_statem_accept)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_app_data_allowed
#  define ossl_statem_app_data_allowed OPENSSL_MANGLER(ossl_statem_app_data_allowed)
# endif
#else
# ifndef _ossl_statem_app_data_allowed
#  define _ossl_statem_app_data_allowed OPENSSL_MANGLER_ASM(ossl_statem_app_data_allowed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_check_finish_init
#  define ossl_statem_check_finish_init OPENSSL_MANGLER(ossl_statem_check_finish_init)
# endif
#else
# ifndef _ossl_statem_check_finish_init
#  define _ossl_statem_check_finish_init OPENSSL_MANGLER_ASM(ossl_statem_check_finish_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_clear
#  define ossl_statem_clear OPENSSL_MANGLER(ossl_statem_clear)
# endif
#else
# ifndef _ossl_statem_clear
#  define _ossl_statem_clear OPENSSL_MANGLER_ASM(ossl_statem_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_client_construct_message
#  define ossl_statem_client_construct_message OPENSSL_MANGLER(ossl_statem_client_construct_message)
# endif
#else
# ifndef _ossl_statem_client_construct_message
#  define _ossl_statem_client_construct_message OPENSSL_MANGLER_ASM(ossl_statem_client_construct_message)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_client_max_message_size
#  define ossl_statem_client_max_message_size OPENSSL_MANGLER(ossl_statem_client_max_message_size)
# endif
#else
# ifndef _ossl_statem_client_max_message_size
#  define _ossl_statem_client_max_message_size OPENSSL_MANGLER_ASM(ossl_statem_client_max_message_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_client_post_process_message
#  define ossl_statem_client_post_process_message OPENSSL_MANGLER(ossl_statem_client_post_process_message)
# endif
#else
# ifndef _ossl_statem_client_post_process_message
#  define _ossl_statem_client_post_process_message OPENSSL_MANGLER_ASM(ossl_statem_client_post_process_message)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_client_post_work
#  define ossl_statem_client_post_work OPENSSL_MANGLER(ossl_statem_client_post_work)
# endif
#else
# ifndef _ossl_statem_client_post_work
#  define _ossl_statem_client_post_work OPENSSL_MANGLER_ASM(ossl_statem_client_post_work)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_client_pre_work
#  define ossl_statem_client_pre_work OPENSSL_MANGLER(ossl_statem_client_pre_work)
# endif
#else
# ifndef _ossl_statem_client_pre_work
#  define _ossl_statem_client_pre_work OPENSSL_MANGLER_ASM(ossl_statem_client_pre_work)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_client_process_message
#  define ossl_statem_client_process_message OPENSSL_MANGLER(ossl_statem_client_process_message)
# endif
#else
# ifndef _ossl_statem_client_process_message
#  define _ossl_statem_client_process_message OPENSSL_MANGLER_ASM(ossl_statem_client_process_message)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_client_read_transition
#  define ossl_statem_client_read_transition OPENSSL_MANGLER(ossl_statem_client_read_transition)
# endif
#else
# ifndef _ossl_statem_client_read_transition
#  define _ossl_statem_client_read_transition OPENSSL_MANGLER_ASM(ossl_statem_client_read_transition)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_client_write_transition
#  define ossl_statem_client_write_transition OPENSSL_MANGLER(ossl_statem_client_write_transition)
# endif
#else
# ifndef _ossl_statem_client_write_transition
#  define _ossl_statem_client_write_transition OPENSSL_MANGLER_ASM(ossl_statem_client_write_transition)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_connect
#  define ossl_statem_connect OPENSSL_MANGLER(ossl_statem_connect)
# endif
#else
# ifndef _ossl_statem_connect
#  define _ossl_statem_connect OPENSSL_MANGLER_ASM(ossl_statem_connect)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_export_allowed
#  define ossl_statem_export_allowed OPENSSL_MANGLER(ossl_statem_export_allowed)
# endif
#else
# ifndef _ossl_statem_export_allowed
#  define _ossl_statem_export_allowed OPENSSL_MANGLER_ASM(ossl_statem_export_allowed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_export_early_allowed
#  define ossl_statem_export_early_allowed OPENSSL_MANGLER(ossl_statem_export_early_allowed)
# endif
#else
# ifndef _ossl_statem_export_early_allowed
#  define _ossl_statem_export_early_allowed OPENSSL_MANGLER_ASM(ossl_statem_export_early_allowed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_fatal
#  define ossl_statem_fatal OPENSSL_MANGLER(ossl_statem_fatal)
# endif
#else
# ifndef _ossl_statem_fatal
#  define _ossl_statem_fatal OPENSSL_MANGLER_ASM(ossl_statem_fatal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_get_in_handshake
#  define ossl_statem_get_in_handshake OPENSSL_MANGLER(ossl_statem_get_in_handshake)
# endif
#else
# ifndef _ossl_statem_get_in_handshake
#  define _ossl_statem_get_in_handshake OPENSSL_MANGLER_ASM(ossl_statem_get_in_handshake)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_in_error
#  define ossl_statem_in_error OPENSSL_MANGLER(ossl_statem_in_error)
# endif
#else
# ifndef _ossl_statem_in_error
#  define _ossl_statem_in_error OPENSSL_MANGLER_ASM(ossl_statem_in_error)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_send_fatal
#  define ossl_statem_send_fatal OPENSSL_MANGLER(ossl_statem_send_fatal)
# endif
#else
# ifndef _ossl_statem_send_fatal
#  define _ossl_statem_send_fatal OPENSSL_MANGLER_ASM(ossl_statem_send_fatal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_server_construct_message
#  define ossl_statem_server_construct_message OPENSSL_MANGLER(ossl_statem_server_construct_message)
# endif
#else
# ifndef _ossl_statem_server_construct_message
#  define _ossl_statem_server_construct_message OPENSSL_MANGLER_ASM(ossl_statem_server_construct_message)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_server_max_message_size
#  define ossl_statem_server_max_message_size OPENSSL_MANGLER(ossl_statem_server_max_message_size)
# endif
#else
# ifndef _ossl_statem_server_max_message_size
#  define _ossl_statem_server_max_message_size OPENSSL_MANGLER_ASM(ossl_statem_server_max_message_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_server_post_process_message
#  define ossl_statem_server_post_process_message OPENSSL_MANGLER(ossl_statem_server_post_process_message)
# endif
#else
# ifndef _ossl_statem_server_post_process_message
#  define _ossl_statem_server_post_process_message OPENSSL_MANGLER_ASM(ossl_statem_server_post_process_message)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_server_post_work
#  define ossl_statem_server_post_work OPENSSL_MANGLER(ossl_statem_server_post_work)
# endif
#else
# ifndef _ossl_statem_server_post_work
#  define _ossl_statem_server_post_work OPENSSL_MANGLER_ASM(ossl_statem_server_post_work)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_server_pre_work
#  define ossl_statem_server_pre_work OPENSSL_MANGLER(ossl_statem_server_pre_work)
# endif
#else
# ifndef _ossl_statem_server_pre_work
#  define _ossl_statem_server_pre_work OPENSSL_MANGLER_ASM(ossl_statem_server_pre_work)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_server_process_message
#  define ossl_statem_server_process_message OPENSSL_MANGLER(ossl_statem_server_process_message)
# endif
#else
# ifndef _ossl_statem_server_process_message
#  define _ossl_statem_server_process_message OPENSSL_MANGLER_ASM(ossl_statem_server_process_message)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_server_read_transition
#  define ossl_statem_server_read_transition OPENSSL_MANGLER(ossl_statem_server_read_transition)
# endif
#else
# ifndef _ossl_statem_server_read_transition
#  define _ossl_statem_server_read_transition OPENSSL_MANGLER_ASM(ossl_statem_server_read_transition)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_server_write_transition
#  define ossl_statem_server_write_transition OPENSSL_MANGLER(ossl_statem_server_write_transition)
# endif
#else
# ifndef _ossl_statem_server_write_transition
#  define _ossl_statem_server_write_transition OPENSSL_MANGLER_ASM(ossl_statem_server_write_transition)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_set_hello_verify_done
#  define ossl_statem_set_hello_verify_done OPENSSL_MANGLER(ossl_statem_set_hello_verify_done)
# endif
#else
# ifndef _ossl_statem_set_hello_verify_done
#  define _ossl_statem_set_hello_verify_done OPENSSL_MANGLER_ASM(ossl_statem_set_hello_verify_done)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_set_in_handshake
#  define ossl_statem_set_in_handshake OPENSSL_MANGLER(ossl_statem_set_in_handshake)
# endif
#else
# ifndef _ossl_statem_set_in_handshake
#  define _ossl_statem_set_in_handshake OPENSSL_MANGLER_ASM(ossl_statem_set_in_handshake)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_set_in_init
#  define ossl_statem_set_in_init OPENSSL_MANGLER(ossl_statem_set_in_init)
# endif
#else
# ifndef _ossl_statem_set_in_init
#  define _ossl_statem_set_in_init OPENSSL_MANGLER_ASM(ossl_statem_set_in_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_set_renegotiate
#  define ossl_statem_set_renegotiate OPENSSL_MANGLER(ossl_statem_set_renegotiate)
# endif
#else
# ifndef _ossl_statem_set_renegotiate
#  define _ossl_statem_set_renegotiate OPENSSL_MANGLER_ASM(ossl_statem_set_renegotiate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_statem_skip_early_data
#  define ossl_statem_skip_early_data OPENSSL_MANGLER(ossl_statem_skip_early_data)
# endif
#else
# ifndef _ossl_statem_skip_early_data
#  define _ossl_statem_skip_early_data OPENSSL_MANGLER_ASM(ossl_statem_skip_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_store_cleanup_int
#  define ossl_store_cleanup_int OPENSSL_MANGLER(ossl_store_cleanup_int)
# endif
#else
# ifndef _ossl_store_cleanup_int
#  define _ossl_store_cleanup_int OPENSSL_MANGLER_ASM(ossl_store_cleanup_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_store_destroy_loaders_int
#  define ossl_store_destroy_loaders_int OPENSSL_MANGLER(ossl_store_destroy_loaders_int)
# endif
#else
# ifndef _ossl_store_destroy_loaders_int
#  define _ossl_store_destroy_loaders_int OPENSSL_MANGLER_ASM(ossl_store_destroy_loaders_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_store_get0_loader_int
#  define ossl_store_get0_loader_int OPENSSL_MANGLER(ossl_store_get0_loader_int)
# endif
#else
# ifndef _ossl_store_get0_loader_int
#  define _ossl_store_get0_loader_int OPENSSL_MANGLER_ASM(ossl_store_get0_loader_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_store_handle_load_result
#  define ossl_store_handle_load_result OPENSSL_MANGLER(ossl_store_handle_load_result)
# endif
#else
# ifndef _ossl_store_handle_load_result
#  define _ossl_store_handle_load_result OPENSSL_MANGLER_ASM(ossl_store_handle_load_result)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_store_loader_fetch_by_number
#  define ossl_store_loader_fetch_by_number OPENSSL_MANGLER(ossl_store_loader_fetch_by_number)
# endif
#else
# ifndef _ossl_store_loader_fetch_by_number
#  define _ossl_store_loader_fetch_by_number OPENSSL_MANGLER_ASM(ossl_store_loader_fetch_by_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_store_loader_get_number
#  define ossl_store_loader_get_number OPENSSL_MANGLER(ossl_store_loader_get_number)
# endif
#else
# ifndef _ossl_store_loader_get_number
#  define _ossl_store_loader_get_number OPENSSL_MANGLER_ASM(ossl_store_loader_get_number)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_store_loader_store_cache_flush
#  define ossl_store_loader_store_cache_flush OPENSSL_MANGLER(ossl_store_loader_store_cache_flush)
# endif
#else
# ifndef _ossl_store_loader_store_cache_flush
#  define _ossl_store_loader_store_cache_flush OPENSSL_MANGLER_ASM(ossl_store_loader_store_cache_flush)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_store_loader_store_remove_all_provided
#  define ossl_store_loader_store_remove_all_provided OPENSSL_MANGLER(ossl_store_loader_store_remove_all_provided)
# endif
#else
# ifndef _ossl_store_loader_store_remove_all_provided
#  define _ossl_store_loader_store_remove_all_provided OPENSSL_MANGLER_ASM(ossl_store_loader_store_remove_all_provided)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_store_register_loader_int
#  define ossl_store_register_loader_int OPENSSL_MANGLER(ossl_store_register_loader_int)
# endif
#else
# ifndef _ossl_store_register_loader_int
#  define _ossl_store_register_loader_int OPENSSL_MANGLER_ASM(ossl_store_register_loader_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_store_unregister_loader_int
#  define ossl_store_unregister_loader_int OPENSSL_MANGLER(ossl_store_unregister_loader_int)
# endif
#else
# ifndef _ossl_store_unregister_loader_int
#  define _ossl_store_unregister_loader_int OPENSSL_MANGLER_ASM(ossl_store_unregister_loader_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_desx_cbc_functions
#  define ossl_tdes_desx_cbc_functions OPENSSL_MANGLER(ossl_tdes_desx_cbc_functions)
# endif
#else
# ifndef _ossl_tdes_desx_cbc_functions
#  define _ossl_tdes_desx_cbc_functions OPENSSL_MANGLER_ASM(ossl_tdes_desx_cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_dinit
#  define ossl_tdes_dinit OPENSSL_MANGLER(ossl_tdes_dinit)
# endif
#else
# ifndef _ossl_tdes_dinit
#  define _ossl_tdes_dinit OPENSSL_MANGLER_ASM(ossl_tdes_dinit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_dupctx
#  define ossl_tdes_dupctx OPENSSL_MANGLER(ossl_tdes_dupctx)
# endif
#else
# ifndef _ossl_tdes_dupctx
#  define _ossl_tdes_dupctx OPENSSL_MANGLER_ASM(ossl_tdes_dupctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_ede2_cbc_functions
#  define ossl_tdes_ede2_cbc_functions OPENSSL_MANGLER(ossl_tdes_ede2_cbc_functions)
# endif
#else
# ifndef _ossl_tdes_ede2_cbc_functions
#  define _ossl_tdes_ede2_cbc_functions OPENSSL_MANGLER_ASM(ossl_tdes_ede2_cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_ede2_cfb_functions
#  define ossl_tdes_ede2_cfb_functions OPENSSL_MANGLER(ossl_tdes_ede2_cfb_functions)
# endif
#else
# ifndef _ossl_tdes_ede2_cfb_functions
#  define _ossl_tdes_ede2_cfb_functions OPENSSL_MANGLER_ASM(ossl_tdes_ede2_cfb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_ede2_ecb_functions
#  define ossl_tdes_ede2_ecb_functions OPENSSL_MANGLER(ossl_tdes_ede2_ecb_functions)
# endif
#else
# ifndef _ossl_tdes_ede2_ecb_functions
#  define _ossl_tdes_ede2_ecb_functions OPENSSL_MANGLER_ASM(ossl_tdes_ede2_ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_ede2_ofb_functions
#  define ossl_tdes_ede2_ofb_functions OPENSSL_MANGLER(ossl_tdes_ede2_ofb_functions)
# endif
#else
# ifndef _ossl_tdes_ede2_ofb_functions
#  define _ossl_tdes_ede2_ofb_functions OPENSSL_MANGLER_ASM(ossl_tdes_ede2_ofb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_ede3_cbc_functions
#  define ossl_tdes_ede3_cbc_functions OPENSSL_MANGLER(ossl_tdes_ede3_cbc_functions)
# endif
#else
# ifndef _ossl_tdes_ede3_cbc_functions
#  define _ossl_tdes_ede3_cbc_functions OPENSSL_MANGLER_ASM(ossl_tdes_ede3_cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_ede3_cfb1_functions
#  define ossl_tdes_ede3_cfb1_functions OPENSSL_MANGLER(ossl_tdes_ede3_cfb1_functions)
# endif
#else
# ifndef _ossl_tdes_ede3_cfb1_functions
#  define _ossl_tdes_ede3_cfb1_functions OPENSSL_MANGLER_ASM(ossl_tdes_ede3_cfb1_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_ede3_cfb8_functions
#  define ossl_tdes_ede3_cfb8_functions OPENSSL_MANGLER(ossl_tdes_ede3_cfb8_functions)
# endif
#else
# ifndef _ossl_tdes_ede3_cfb8_functions
#  define _ossl_tdes_ede3_cfb8_functions OPENSSL_MANGLER_ASM(ossl_tdes_ede3_cfb8_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_ede3_cfb_functions
#  define ossl_tdes_ede3_cfb_functions OPENSSL_MANGLER(ossl_tdes_ede3_cfb_functions)
# endif
#else
# ifndef _ossl_tdes_ede3_cfb_functions
#  define _ossl_tdes_ede3_cfb_functions OPENSSL_MANGLER_ASM(ossl_tdes_ede3_cfb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_ede3_ecb_functions
#  define ossl_tdes_ede3_ecb_functions OPENSSL_MANGLER(ossl_tdes_ede3_ecb_functions)
# endif
#else
# ifndef _ossl_tdes_ede3_ecb_functions
#  define _ossl_tdes_ede3_ecb_functions OPENSSL_MANGLER_ASM(ossl_tdes_ede3_ecb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_ede3_ofb_functions
#  define ossl_tdes_ede3_ofb_functions OPENSSL_MANGLER(ossl_tdes_ede3_ofb_functions)
# endif
#else
# ifndef _ossl_tdes_ede3_ofb_functions
#  define _ossl_tdes_ede3_ofb_functions OPENSSL_MANGLER_ASM(ossl_tdes_ede3_ofb_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_einit
#  define ossl_tdes_einit OPENSSL_MANGLER(ossl_tdes_einit)
# endif
#else
# ifndef _ossl_tdes_einit
#  define _ossl_tdes_einit OPENSSL_MANGLER_ASM(ossl_tdes_einit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_freectx
#  define ossl_tdes_freectx OPENSSL_MANGLER(ossl_tdes_freectx)
# endif
#else
# ifndef _ossl_tdes_freectx
#  define _ossl_tdes_freectx OPENSSL_MANGLER_ASM(ossl_tdes_freectx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_get_ctx_params
#  define ossl_tdes_get_ctx_params OPENSSL_MANGLER(ossl_tdes_get_ctx_params)
# endif
#else
# ifndef _ossl_tdes_get_ctx_params
#  define _ossl_tdes_get_ctx_params OPENSSL_MANGLER_ASM(ossl_tdes_get_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_gettable_ctx_params
#  define ossl_tdes_gettable_ctx_params OPENSSL_MANGLER(ossl_tdes_gettable_ctx_params)
# endif
#else
# ifndef _ossl_tdes_gettable_ctx_params
#  define _ossl_tdes_gettable_ctx_params OPENSSL_MANGLER_ASM(ossl_tdes_gettable_ctx_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_newctx
#  define ossl_tdes_newctx OPENSSL_MANGLER(ossl_tdes_newctx)
# endif
#else
# ifndef _ossl_tdes_newctx
#  define _ossl_tdes_newctx OPENSSL_MANGLER_ASM(ossl_tdes_newctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tdes_wrap_cbc_functions
#  define ossl_tdes_wrap_cbc_functions OPENSSL_MANGLER(ossl_tdes_wrap_cbc_functions)
# endif
#else
# ifndef _ossl_tdes_wrap_cbc_functions
#  define _ossl_tdes_wrap_cbc_functions OPENSSL_MANGLER_ASM(ossl_tdes_wrap_cbc_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_test_rng_functions
#  define ossl_test_rng_functions OPENSSL_MANGLER(ossl_test_rng_functions)
# endif
#else
# ifndef _ossl_test_rng_functions
#  define _ossl_test_rng_functions OPENSSL_MANGLER_ASM(ossl_test_rng_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_tolower
#  define ossl_tolower OPENSSL_MANGLER(ossl_tolower)
# endif
#else
# ifndef _ossl_tolower
#  define _ossl_tolower OPENSSL_MANGLER_ASM(ossl_tolower)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_toupper
#  define ossl_toupper OPENSSL_MANGLER(ossl_toupper)
# endif
#else
# ifndef _ossl_toupper
#  define _ossl_toupper OPENSSL_MANGLER_ASM(ossl_toupper)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_trace_cleanup
#  define ossl_trace_cleanup OPENSSL_MANGLER(ossl_trace_cleanup)
# endif
#else
# ifndef _ossl_trace_cleanup
#  define _ossl_trace_cleanup OPENSSL_MANGLER_ASM(ossl_trace_cleanup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_type_specific_der_to_dsa_decoder_functions
#  define ossl_type_specific_der_to_dsa_decoder_functions OPENSSL_MANGLER(ossl_type_specific_der_to_dsa_decoder_functions)
# endif
#else
# ifndef _ossl_type_specific_der_to_dsa_decoder_functions
#  define _ossl_type_specific_der_to_dsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_type_specific_der_to_dsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_type_specific_keypair_der_to_rsa_decoder_functions
#  define ossl_type_specific_keypair_der_to_rsa_decoder_functions OPENSSL_MANGLER(ossl_type_specific_keypair_der_to_rsa_decoder_functions)
# endif
#else
# ifndef _ossl_type_specific_keypair_der_to_rsa_decoder_functions
#  define _ossl_type_specific_keypair_der_to_rsa_decoder_functions OPENSSL_MANGLER_ASM(ossl_type_specific_keypair_der_to_rsa_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_type_specific_no_pub_der_to_ec_decoder_functions
#  define ossl_type_specific_no_pub_der_to_ec_decoder_functions OPENSSL_MANGLER(ossl_type_specific_no_pub_der_to_ec_decoder_functions)
# endif
#else
# ifndef _ossl_type_specific_no_pub_der_to_ec_decoder_functions
#  define _ossl_type_specific_no_pub_der_to_ec_decoder_functions OPENSSL_MANGLER_ASM(ossl_type_specific_no_pub_der_to_ec_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_type_specific_params_der_to_dh_decoder_functions
#  define ossl_type_specific_params_der_to_dh_decoder_functions OPENSSL_MANGLER(ossl_type_specific_params_der_to_dh_decoder_functions)
# endif
#else
# ifndef _ossl_type_specific_params_der_to_dh_decoder_functions
#  define _ossl_type_specific_params_der_to_dh_decoder_functions OPENSSL_MANGLER_ASM(ossl_type_specific_params_der_to_dh_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_type_specific_params_der_to_dhx_decoder_functions
#  define ossl_type_specific_params_der_to_dhx_decoder_functions OPENSSL_MANGLER(ossl_type_specific_params_der_to_dhx_decoder_functions)
# endif
#else
# ifndef _ossl_type_specific_params_der_to_dhx_decoder_functions
#  define _ossl_type_specific_params_der_to_dhx_decoder_functions OPENSSL_MANGLER_ASM(ossl_type_specific_params_der_to_dhx_decoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_addr
#  define ossl_v3_addr OPENSSL_MANGLER(ossl_v3_addr)
# endif
#else
# ifndef _ossl_v3_addr
#  define _ossl_v3_addr OPENSSL_MANGLER_ASM(ossl_v3_addr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_akey_id
#  define ossl_v3_akey_id OPENSSL_MANGLER(ossl_v3_akey_id)
# endif
#else
# ifndef _ossl_v3_akey_id
#  define _ossl_v3_akey_id OPENSSL_MANGLER_ASM(ossl_v3_akey_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_alt
#  define ossl_v3_alt OPENSSL_MANGLER(ossl_v3_alt)
# endif
#else
# ifndef _ossl_v3_alt
#  define _ossl_v3_alt OPENSSL_MANGLER_ASM(ossl_v3_alt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_asid
#  define ossl_v3_asid OPENSSL_MANGLER(ossl_v3_asid)
# endif
#else
# ifndef _ossl_v3_asid
#  define _ossl_v3_asid OPENSSL_MANGLER_ASM(ossl_v3_asid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_bcons
#  define ossl_v3_bcons OPENSSL_MANGLER(ossl_v3_bcons)
# endif
#else
# ifndef _ossl_v3_bcons
#  define _ossl_v3_bcons OPENSSL_MANGLER_ASM(ossl_v3_bcons)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_cpols
#  define ossl_v3_cpols OPENSSL_MANGLER(ossl_v3_cpols)
# endif
#else
# ifndef _ossl_v3_cpols
#  define _ossl_v3_cpols OPENSSL_MANGLER_ASM(ossl_v3_cpols)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_crl_hold
#  define ossl_v3_crl_hold OPENSSL_MANGLER(ossl_v3_crl_hold)
# endif
#else
# ifndef _ossl_v3_crl_hold
#  define _ossl_v3_crl_hold OPENSSL_MANGLER_ASM(ossl_v3_crl_hold)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_crl_invdate
#  define ossl_v3_crl_invdate OPENSSL_MANGLER(ossl_v3_crl_invdate)
# endif
#else
# ifndef _ossl_v3_crl_invdate
#  define _ossl_v3_crl_invdate OPENSSL_MANGLER_ASM(ossl_v3_crl_invdate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_crl_num
#  define ossl_v3_crl_num OPENSSL_MANGLER(ossl_v3_crl_num)
# endif
#else
# ifndef _ossl_v3_crl_num
#  define _ossl_v3_crl_num OPENSSL_MANGLER_ASM(ossl_v3_crl_num)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_crl_reason
#  define ossl_v3_crl_reason OPENSSL_MANGLER(ossl_v3_crl_reason)
# endif
#else
# ifndef _ossl_v3_crl_reason
#  define _ossl_v3_crl_reason OPENSSL_MANGLER_ASM(ossl_v3_crl_reason)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_crld
#  define ossl_v3_crld OPENSSL_MANGLER(ossl_v3_crld)
# endif
#else
# ifndef _ossl_v3_crld
#  define _ossl_v3_crld OPENSSL_MANGLER_ASM(ossl_v3_crld)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_ct_scts
#  define ossl_v3_ct_scts OPENSSL_MANGLER(ossl_v3_ct_scts)
# endif
#else
# ifndef _ossl_v3_ct_scts
#  define _ossl_v3_ct_scts OPENSSL_MANGLER_ASM(ossl_v3_ct_scts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_delta_crl
#  define ossl_v3_delta_crl OPENSSL_MANGLER(ossl_v3_delta_crl)
# endif
#else
# ifndef _ossl_v3_delta_crl
#  define _ossl_v3_delta_crl OPENSSL_MANGLER_ASM(ossl_v3_delta_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_ext_admission
#  define ossl_v3_ext_admission OPENSSL_MANGLER(ossl_v3_ext_admission)
# endif
#else
# ifndef _ossl_v3_ext_admission
#  define _ossl_v3_ext_admission OPENSSL_MANGLER_ASM(ossl_v3_ext_admission)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_ext_ku
#  define ossl_v3_ext_ku OPENSSL_MANGLER(ossl_v3_ext_ku)
# endif
#else
# ifndef _ossl_v3_ext_ku
#  define _ossl_v3_ext_ku OPENSSL_MANGLER_ASM(ossl_v3_ext_ku)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_freshest_crl
#  define ossl_v3_freshest_crl OPENSSL_MANGLER(ossl_v3_freshest_crl)
# endif
#else
# ifndef _ossl_v3_freshest_crl
#  define _ossl_v3_freshest_crl OPENSSL_MANGLER_ASM(ossl_v3_freshest_crl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_idp
#  define ossl_v3_idp OPENSSL_MANGLER(ossl_v3_idp)
# endif
#else
# ifndef _ossl_v3_idp
#  define _ossl_v3_idp OPENSSL_MANGLER_ASM(ossl_v3_idp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_info
#  define ossl_v3_info OPENSSL_MANGLER(ossl_v3_info)
# endif
#else
# ifndef _ossl_v3_info
#  define _ossl_v3_info OPENSSL_MANGLER_ASM(ossl_v3_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_inhibit_anyp
#  define ossl_v3_inhibit_anyp OPENSSL_MANGLER(ossl_v3_inhibit_anyp)
# endif
#else
# ifndef _ossl_v3_inhibit_anyp
#  define _ossl_v3_inhibit_anyp OPENSSL_MANGLER_ASM(ossl_v3_inhibit_anyp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_issuer_sign_tool
#  define ossl_v3_issuer_sign_tool OPENSSL_MANGLER(ossl_v3_issuer_sign_tool)
# endif
#else
# ifndef _ossl_v3_issuer_sign_tool
#  define _ossl_v3_issuer_sign_tool OPENSSL_MANGLER_ASM(ossl_v3_issuer_sign_tool)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_key_usage
#  define ossl_v3_key_usage OPENSSL_MANGLER(ossl_v3_key_usage)
# endif
#else
# ifndef _ossl_v3_key_usage
#  define _ossl_v3_key_usage OPENSSL_MANGLER_ASM(ossl_v3_key_usage)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_name_cmp
#  define ossl_v3_name_cmp OPENSSL_MANGLER(ossl_v3_name_cmp)
# endif
#else
# ifndef _ossl_v3_name_cmp
#  define _ossl_v3_name_cmp OPENSSL_MANGLER_ASM(ossl_v3_name_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_name_constraints
#  define ossl_v3_name_constraints OPENSSL_MANGLER(ossl_v3_name_constraints)
# endif
#else
# ifndef _ossl_v3_name_constraints
#  define _ossl_v3_name_constraints OPENSSL_MANGLER_ASM(ossl_v3_name_constraints)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_ns_ia5_list
#  define ossl_v3_ns_ia5_list OPENSSL_MANGLER(ossl_v3_ns_ia5_list)
# endif
#else
# ifndef _ossl_v3_ns_ia5_list
#  define _ossl_v3_ns_ia5_list OPENSSL_MANGLER_ASM(ossl_v3_ns_ia5_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_nscert
#  define ossl_v3_nscert OPENSSL_MANGLER(ossl_v3_nscert)
# endif
#else
# ifndef _ossl_v3_nscert
#  define _ossl_v3_nscert OPENSSL_MANGLER_ASM(ossl_v3_nscert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_ocsp_accresp
#  define ossl_v3_ocsp_accresp OPENSSL_MANGLER(ossl_v3_ocsp_accresp)
# endif
#else
# ifndef _ossl_v3_ocsp_accresp
#  define _ossl_v3_ocsp_accresp OPENSSL_MANGLER_ASM(ossl_v3_ocsp_accresp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_ocsp_acutoff
#  define ossl_v3_ocsp_acutoff OPENSSL_MANGLER(ossl_v3_ocsp_acutoff)
# endif
#else
# ifndef _ossl_v3_ocsp_acutoff
#  define _ossl_v3_ocsp_acutoff OPENSSL_MANGLER_ASM(ossl_v3_ocsp_acutoff)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_ocsp_crlid
#  define ossl_v3_ocsp_crlid OPENSSL_MANGLER(ossl_v3_ocsp_crlid)
# endif
#else
# ifndef _ossl_v3_ocsp_crlid
#  define _ossl_v3_ocsp_crlid OPENSSL_MANGLER_ASM(ossl_v3_ocsp_crlid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_ocsp_nocheck
#  define ossl_v3_ocsp_nocheck OPENSSL_MANGLER(ossl_v3_ocsp_nocheck)
# endif
#else
# ifndef _ossl_v3_ocsp_nocheck
#  define _ossl_v3_ocsp_nocheck OPENSSL_MANGLER_ASM(ossl_v3_ocsp_nocheck)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_ocsp_nonce
#  define ossl_v3_ocsp_nonce OPENSSL_MANGLER(ossl_v3_ocsp_nonce)
# endif
#else
# ifndef _ossl_v3_ocsp_nonce
#  define _ossl_v3_ocsp_nonce OPENSSL_MANGLER_ASM(ossl_v3_ocsp_nonce)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_ocsp_serviceloc
#  define ossl_v3_ocsp_serviceloc OPENSSL_MANGLER(ossl_v3_ocsp_serviceloc)
# endif
#else
# ifndef _ossl_v3_ocsp_serviceloc
#  define _ossl_v3_ocsp_serviceloc OPENSSL_MANGLER_ASM(ossl_v3_ocsp_serviceloc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_pci
#  define ossl_v3_pci OPENSSL_MANGLER(ossl_v3_pci)
# endif
#else
# ifndef _ossl_v3_pci
#  define _ossl_v3_pci OPENSSL_MANGLER_ASM(ossl_v3_pci)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_pkey_usage_period
#  define ossl_v3_pkey_usage_period OPENSSL_MANGLER(ossl_v3_pkey_usage_period)
# endif
#else
# ifndef _ossl_v3_pkey_usage_period
#  define _ossl_v3_pkey_usage_period OPENSSL_MANGLER_ASM(ossl_v3_pkey_usage_period)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_policy_constraints
#  define ossl_v3_policy_constraints OPENSSL_MANGLER(ossl_v3_policy_constraints)
# endif
#else
# ifndef _ossl_v3_policy_constraints
#  define _ossl_v3_policy_constraints OPENSSL_MANGLER_ASM(ossl_v3_policy_constraints)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_policy_mappings
#  define ossl_v3_policy_mappings OPENSSL_MANGLER(ossl_v3_policy_mappings)
# endif
#else
# ifndef _ossl_v3_policy_mappings
#  define _ossl_v3_policy_mappings OPENSSL_MANGLER_ASM(ossl_v3_policy_mappings)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_sinfo
#  define ossl_v3_sinfo OPENSSL_MANGLER(ossl_v3_sinfo)
# endif
#else
# ifndef _ossl_v3_sinfo
#  define _ossl_v3_sinfo OPENSSL_MANGLER_ASM(ossl_v3_sinfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_skey_id
#  define ossl_v3_skey_id OPENSSL_MANGLER(ossl_v3_skey_id)
# endif
#else
# ifndef _ossl_v3_skey_id
#  define _ossl_v3_skey_id OPENSSL_MANGLER_ASM(ossl_v3_skey_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_sxnet
#  define ossl_v3_sxnet OPENSSL_MANGLER(ossl_v3_sxnet)
# endif
#else
# ifndef _ossl_v3_sxnet
#  define _ossl_v3_sxnet OPENSSL_MANGLER_ASM(ossl_v3_sxnet)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_tls_feature
#  define ossl_v3_tls_feature OPENSSL_MANGLER(ossl_v3_tls_feature)
# endif
#else
# ifndef _ossl_v3_tls_feature
#  define _ossl_v3_tls_feature OPENSSL_MANGLER_ASM(ossl_v3_tls_feature)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_v3_utf8_list
#  define ossl_v3_utf8_list OPENSSL_MANGLER(ossl_v3_utf8_list)
# endif
#else
# ifndef _ossl_v3_utf8_list
#  define _ossl_v3_utf8_list OPENSSL_MANGLER_ASM(ossl_v3_utf8_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x25519
#  define ossl_x25519 OPENSSL_MANGLER(ossl_x25519)
# endif
#else
# ifndef _ossl_x25519
#  define _ossl_x25519 OPENSSL_MANGLER_ASM(ossl_x25519)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x25519_keyexch_functions
#  define ossl_x25519_keyexch_functions OPENSSL_MANGLER(ossl_x25519_keyexch_functions)
# endif
#else
# ifndef _ossl_x25519_keyexch_functions
#  define _ossl_x25519_keyexch_functions OPENSSL_MANGLER_ASM(ossl_x25519_keyexch_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x25519_keymgmt_functions
#  define ossl_x25519_keymgmt_functions OPENSSL_MANGLER(ossl_x25519_keymgmt_functions)
# endif
#else
# ifndef _ossl_x25519_keymgmt_functions
#  define _ossl_x25519_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_x25519_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x25519_public_from_private
#  define ossl_x25519_public_from_private OPENSSL_MANGLER(ossl_x25519_public_from_private)
# endif
#else
# ifndef _ossl_x25519_public_from_private
#  define _ossl_x25519_public_from_private OPENSSL_MANGLER_ASM(ossl_x25519_public_from_private)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x25519_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define ossl_x25519_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_x25519_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_x25519_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define _ossl_x25519_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_x25519_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define ossl_x25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_x25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_x25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define _ossl_x25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_x25519_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x25519_to_PrivateKeyInfo_der_encoder_functions
#  define ossl_x25519_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_x25519_to_PrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_x25519_to_PrivateKeyInfo_der_encoder_functions
#  define _ossl_x25519_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_x25519_to_PrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x25519_to_PrivateKeyInfo_pem_encoder_functions
#  define ossl_x25519_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_x25519_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_x25519_to_PrivateKeyInfo_pem_encoder_functions
#  define _ossl_x25519_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_x25519_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x25519_to_SubjectPublicKeyInfo_der_encoder_functions
#  define ossl_x25519_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_x25519_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_x25519_to_SubjectPublicKeyInfo_der_encoder_functions
#  define _ossl_x25519_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_x25519_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x25519_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define ossl_x25519_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_x25519_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_x25519_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define _ossl_x25519_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_x25519_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x25519_to_text_encoder_functions
#  define ossl_x25519_to_text_encoder_functions OPENSSL_MANGLER(ossl_x25519_to_text_encoder_functions)
# endif
#else
# ifndef _ossl_x25519_to_text_encoder_functions
#  define _ossl_x25519_to_text_encoder_functions OPENSSL_MANGLER_ASM(ossl_x25519_to_text_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448
#  define ossl_x448 OPENSSL_MANGLER(ossl_x448)
# endif
#else
# ifndef _ossl_x448
#  define _ossl_x448 OPENSSL_MANGLER_ASM(ossl_x448)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_derive_public_key
#  define ossl_x448_derive_public_key OPENSSL_MANGLER(ossl_x448_derive_public_key)
# endif
#else
# ifndef _ossl_x448_derive_public_key
#  define _ossl_x448_derive_public_key OPENSSL_MANGLER_ASM(ossl_x448_derive_public_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_int
#  define ossl_x448_int OPENSSL_MANGLER(ossl_x448_int)
# endif
#else
# ifndef _ossl_x448_int
#  define _ossl_x448_int OPENSSL_MANGLER_ASM(ossl_x448_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_keyexch_functions
#  define ossl_x448_keyexch_functions OPENSSL_MANGLER(ossl_x448_keyexch_functions)
# endif
#else
# ifndef _ossl_x448_keyexch_functions
#  define _ossl_x448_keyexch_functions OPENSSL_MANGLER_ASM(ossl_x448_keyexch_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_keymgmt_functions
#  define ossl_x448_keymgmt_functions OPENSSL_MANGLER(ossl_x448_keymgmt_functions)
# endif
#else
# ifndef _ossl_x448_keymgmt_functions
#  define _ossl_x448_keymgmt_functions OPENSSL_MANGLER_ASM(ossl_x448_keymgmt_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_public_from_private
#  define ossl_x448_public_from_private OPENSSL_MANGLER(ossl_x448_public_from_private)
# endif
#else
# ifndef _ossl_x448_public_from_private
#  define _ossl_x448_public_from_private OPENSSL_MANGLER_ASM(ossl_x448_public_from_private)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define ossl_x448_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_x448_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_x448_to_EncryptedPrivateKeyInfo_der_encoder_functions
#  define _ossl_x448_to_EncryptedPrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_x448_to_EncryptedPrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define ossl_x448_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_x448_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_x448_to_EncryptedPrivateKeyInfo_pem_encoder_functions
#  define _ossl_x448_to_EncryptedPrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_x448_to_EncryptedPrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_to_PrivateKeyInfo_der_encoder_functions
#  define ossl_x448_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_x448_to_PrivateKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_x448_to_PrivateKeyInfo_der_encoder_functions
#  define _ossl_x448_to_PrivateKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_x448_to_PrivateKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_to_PrivateKeyInfo_pem_encoder_functions
#  define ossl_x448_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_x448_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_x448_to_PrivateKeyInfo_pem_encoder_functions
#  define _ossl_x448_to_PrivateKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_x448_to_PrivateKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_to_SubjectPublicKeyInfo_der_encoder_functions
#  define ossl_x448_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER(ossl_x448_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#else
# ifndef _ossl_x448_to_SubjectPublicKeyInfo_der_encoder_functions
#  define _ossl_x448_to_SubjectPublicKeyInfo_der_encoder_functions OPENSSL_MANGLER_ASM(ossl_x448_to_SubjectPublicKeyInfo_der_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define ossl_x448_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER(ossl_x448_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#else
# ifndef _ossl_x448_to_SubjectPublicKeyInfo_pem_encoder_functions
#  define _ossl_x448_to_SubjectPublicKeyInfo_pem_encoder_functions OPENSSL_MANGLER_ASM(ossl_x448_to_SubjectPublicKeyInfo_pem_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x448_to_text_encoder_functions
#  define ossl_x448_to_text_encoder_functions OPENSSL_MANGLER(ossl_x448_to_text_encoder_functions)
# endif
#else
# ifndef _ossl_x448_to_text_encoder_functions
#  define _ossl_x448_to_text_encoder_functions OPENSSL_MANGLER_ASM(ossl_x448_to_text_encoder_functions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_PUBKEY_get0_libctx
#  define ossl_x509_PUBKEY_get0_libctx OPENSSL_MANGLER(ossl_x509_PUBKEY_get0_libctx)
# endif
#else
# ifndef _ossl_x509_PUBKEY_get0_libctx
#  define _ossl_x509_PUBKEY_get0_libctx OPENSSL_MANGLER_ASM(ossl_x509_PUBKEY_get0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_add_cert_new
#  define ossl_x509_add_cert_new OPENSSL_MANGLER(ossl_x509_add_cert_new)
# endif
#else
# ifndef _ossl_x509_add_cert_new
#  define _ossl_x509_add_cert_new OPENSSL_MANGLER_ASM(ossl_x509_add_cert_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_add_certs_new
#  define ossl_x509_add_certs_new OPENSSL_MANGLER(ossl_x509_add_certs_new)
# endif
#else
# ifndef _ossl_x509_add_certs_new
#  define _ossl_x509_add_certs_new OPENSSL_MANGLER_ASM(ossl_x509_add_certs_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_algor_get_md
#  define ossl_x509_algor_get_md OPENSSL_MANGLER(ossl_x509_algor_get_md)
# endif
#else
# ifndef _ossl_x509_algor_get_md
#  define _ossl_x509_algor_get_md OPENSSL_MANGLER_ASM(ossl_x509_algor_get_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_algor_is_sm2
#  define ossl_x509_algor_is_sm2 OPENSSL_MANGLER(ossl_x509_algor_is_sm2)
# endif
#else
# ifndef _ossl_x509_algor_is_sm2
#  define _ossl_x509_algor_is_sm2 OPENSSL_MANGLER_ASM(ossl_x509_algor_is_sm2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_algor_md_to_mgf1
#  define ossl_x509_algor_md_to_mgf1 OPENSSL_MANGLER(ossl_x509_algor_md_to_mgf1)
# endif
#else
# ifndef _ossl_x509_algor_md_to_mgf1
#  define _ossl_x509_algor_md_to_mgf1 OPENSSL_MANGLER_ASM(ossl_x509_algor_md_to_mgf1)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_algor_mgf1_decode
#  define ossl_x509_algor_mgf1_decode OPENSSL_MANGLER(ossl_x509_algor_mgf1_decode)
# endif
#else
# ifndef _ossl_x509_algor_mgf1_decode
#  define _ossl_x509_algor_mgf1_decode OPENSSL_MANGLER_ASM(ossl_x509_algor_mgf1_decode)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_algor_new_from_md
#  define ossl_x509_algor_new_from_md OPENSSL_MANGLER(ossl_x509_algor_new_from_md)
# endif
#else
# ifndef _ossl_x509_algor_new_from_md
#  define _ossl_x509_algor_new_from_md OPENSSL_MANGLER_ASM(ossl_x509_algor_new_from_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_check_cert_time
#  define ossl_x509_check_cert_time OPENSSL_MANGLER(ossl_x509_check_cert_time)
# endif
#else
# ifndef _ossl_x509_check_cert_time
#  define _ossl_x509_check_cert_time OPENSSL_MANGLER_ASM(ossl_x509_check_cert_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_crl_set0_libctx
#  define ossl_x509_crl_set0_libctx OPENSSL_MANGLER(ossl_x509_crl_set0_libctx)
# endif
#else
# ifndef _ossl_x509_crl_set0_libctx
#  define _ossl_x509_crl_set0_libctx OPENSSL_MANGLER_ASM(ossl_x509_crl_set0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_init_sig_info
#  define ossl_x509_init_sig_info OPENSSL_MANGLER(ossl_x509_init_sig_info)
# endif
#else
# ifndef _ossl_x509_init_sig_info
#  define _ossl_x509_init_sig_info OPENSSL_MANGLER_ASM(ossl_x509_init_sig_info)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_likely_issued
#  define ossl_x509_likely_issued OPENSSL_MANGLER(ossl_x509_likely_issued)
# endif
#else
# ifndef _ossl_x509_likely_issued
#  define _ossl_x509_likely_issued OPENSSL_MANGLER_ASM(ossl_x509_likely_issued)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_print_ex_brief
#  define ossl_x509_print_ex_brief OPENSSL_MANGLER(ossl_x509_print_ex_brief)
# endif
#else
# ifndef _ossl_x509_print_ex_brief
#  define _ossl_x509_print_ex_brief OPENSSL_MANGLER_ASM(ossl_x509_print_ex_brief)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_pubkey_hash
#  define ossl_x509_pubkey_hash OPENSSL_MANGLER(ossl_x509_pubkey_hash)
# endif
#else
# ifndef _ossl_x509_pubkey_hash
#  define _ossl_x509_pubkey_hash OPENSSL_MANGLER_ASM(ossl_x509_pubkey_hash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_req_set0_libctx
#  define ossl_x509_req_set0_libctx OPENSSL_MANGLER(ossl_x509_req_set0_libctx)
# endif
#else
# ifndef _ossl_x509_req_set0_libctx
#  define _ossl_x509_req_set0_libctx OPENSSL_MANGLER_ASM(ossl_x509_req_set0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_set0_libctx
#  define ossl_x509_set0_libctx OPENSSL_MANGLER(ossl_x509_set0_libctx)
# endif
#else
# ifndef _ossl_x509_set0_libctx
#  define _ossl_x509_set0_libctx OPENSSL_MANGLER_ASM(ossl_x509_set0_libctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_set1_time
#  define ossl_x509_set1_time OPENSSL_MANGLER(ossl_x509_set1_time)
# endif
#else
# ifndef _ossl_x509_set1_time
#  define _ossl_x509_set1_time OPENSSL_MANGLER_ASM(ossl_x509_set1_time)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509_signing_allowed
#  define ossl_x509_signing_allowed OPENSSL_MANGLER(ossl_x509_signing_allowed)
# endif
#else
# ifndef _ossl_x509_signing_allowed
#  define _ossl_x509_signing_allowed OPENSSL_MANGLER_ASM(ossl_x509_signing_allowed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509at_dup
#  define ossl_x509at_dup OPENSSL_MANGLER(ossl_x509at_dup)
# endif
#else
# ifndef _ossl_x509at_dup
#  define _ossl_x509at_dup OPENSSL_MANGLER_ASM(ossl_x509at_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ossl_x509v3_cache_extensions
#  define ossl_x509v3_cache_extensions OPENSSL_MANGLER(ossl_x509v3_cache_extensions)
# endif
#else
# ifndef _ossl_x509v3_cache_extensions
#  define _ossl_x509v3_cache_extensions OPENSSL_MANGLER_ASM(ossl_x509v3_cache_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef parse_ca_names
#  define parse_ca_names OPENSSL_MANGLER(parse_ca_names)
# endif
#else
# ifndef _parse_ca_names
#  define _parse_ca_names OPENSSL_MANGLER_ASM(parse_ca_names)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef pitem_free
#  define pitem_free OPENSSL_MANGLER(pitem_free)
# endif
#else
# ifndef _pitem_free
#  define _pitem_free OPENSSL_MANGLER_ASM(pitem_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef pitem_new
#  define pitem_new OPENSSL_MANGLER(pitem_new)
# endif
#else
# ifndef _pitem_new
#  define _pitem_new OPENSSL_MANGLER_ASM(pitem_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef poly1305_blocks
#  define poly1305_blocks OPENSSL_MANGLER(poly1305_blocks)
# endif
#else
# ifndef _poly1305_blocks
#  define _poly1305_blocks OPENSSL_MANGLER_ASM(poly1305_blocks)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef poly1305_emit
#  define poly1305_emit OPENSSL_MANGLER(poly1305_emit)
# endif
#else
# ifndef _poly1305_emit
#  define _poly1305_emit OPENSSL_MANGLER_ASM(poly1305_emit)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef poly1305_init
#  define poly1305_init OPENSSL_MANGLER(poly1305_init)
# endif
#else
# ifndef _poly1305_init
#  define _poly1305_init OPENSSL_MANGLER_ASM(poly1305_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef pqueue_find
#  define pqueue_find OPENSSL_MANGLER(pqueue_find)
# endif
#else
# ifndef _pqueue_find
#  define _pqueue_find OPENSSL_MANGLER_ASM(pqueue_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef pqueue_free
#  define pqueue_free OPENSSL_MANGLER(pqueue_free)
# endif
#else
# ifndef _pqueue_free
#  define _pqueue_free OPENSSL_MANGLER_ASM(pqueue_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef pqueue_insert
#  define pqueue_insert OPENSSL_MANGLER(pqueue_insert)
# endif
#else
# ifndef _pqueue_insert
#  define _pqueue_insert OPENSSL_MANGLER_ASM(pqueue_insert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef pqueue_iterator
#  define pqueue_iterator OPENSSL_MANGLER(pqueue_iterator)
# endif
#else
# ifndef _pqueue_iterator
#  define _pqueue_iterator OPENSSL_MANGLER_ASM(pqueue_iterator)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef pqueue_new
#  define pqueue_new OPENSSL_MANGLER(pqueue_new)
# endif
#else
# ifndef _pqueue_new
#  define _pqueue_new OPENSSL_MANGLER_ASM(pqueue_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef pqueue_next
#  define pqueue_next OPENSSL_MANGLER(pqueue_next)
# endif
#else
# ifndef _pqueue_next
#  define _pqueue_next OPENSSL_MANGLER_ASM(pqueue_next)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef pqueue_peek
#  define pqueue_peek OPENSSL_MANGLER(pqueue_peek)
# endif
#else
# ifndef _pqueue_peek
#  define _pqueue_peek OPENSSL_MANGLER_ASM(pqueue_peek)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef pqueue_pop
#  define pqueue_pop OPENSSL_MANGLER(pqueue_pop)
# endif
#else
# ifndef _pqueue_pop
#  define _pqueue_pop OPENSSL_MANGLER_ASM(pqueue_pop)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef pqueue_size
#  define pqueue_size OPENSSL_MANGLER(pqueue_size)
# endif
#else
# ifndef _pqueue_size
#  define _pqueue_size OPENSSL_MANGLER_ASM(pqueue_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rc4_md5_enc
#  define rc4_md5_enc OPENSSL_MANGLER(rc4_md5_enc)
# endif
#else
# ifndef _rc4_md5_enc
#  define _rc4_md5_enc OPENSSL_MANGLER_ASM(rc4_md5_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_1024_gather5_avx2
#  define rsaz_1024_gather5_avx2 OPENSSL_MANGLER(rsaz_1024_gather5_avx2)
# endif
#else
# ifndef _rsaz_1024_gather5_avx2
#  define _rsaz_1024_gather5_avx2 OPENSSL_MANGLER_ASM(rsaz_1024_gather5_avx2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_1024_mul_avx2
#  define rsaz_1024_mul_avx2 OPENSSL_MANGLER(rsaz_1024_mul_avx2)
# endif
#else
# ifndef _rsaz_1024_mul_avx2
#  define _rsaz_1024_mul_avx2 OPENSSL_MANGLER_ASM(rsaz_1024_mul_avx2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_1024_norm2red_avx2
#  define rsaz_1024_norm2red_avx2 OPENSSL_MANGLER(rsaz_1024_norm2red_avx2)
# endif
#else
# ifndef _rsaz_1024_norm2red_avx2
#  define _rsaz_1024_norm2red_avx2 OPENSSL_MANGLER_ASM(rsaz_1024_norm2red_avx2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_1024_red2norm_avx2
#  define rsaz_1024_red2norm_avx2 OPENSSL_MANGLER(rsaz_1024_red2norm_avx2)
# endif
#else
# ifndef _rsaz_1024_red2norm_avx2
#  define _rsaz_1024_red2norm_avx2 OPENSSL_MANGLER_ASM(rsaz_1024_red2norm_avx2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_1024_scatter5_avx2
#  define rsaz_1024_scatter5_avx2 OPENSSL_MANGLER(rsaz_1024_scatter5_avx2)
# endif
#else
# ifndef _rsaz_1024_scatter5_avx2
#  define _rsaz_1024_scatter5_avx2 OPENSSL_MANGLER_ASM(rsaz_1024_scatter5_avx2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_1024_sqr_avx2
#  define rsaz_1024_sqr_avx2 OPENSSL_MANGLER(rsaz_1024_sqr_avx2)
# endif
#else
# ifndef _rsaz_1024_sqr_avx2
#  define _rsaz_1024_sqr_avx2 OPENSSL_MANGLER_ASM(rsaz_1024_sqr_avx2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_512_gather4
#  define rsaz_512_gather4 OPENSSL_MANGLER(rsaz_512_gather4)
# endif
#else
# ifndef _rsaz_512_gather4
#  define _rsaz_512_gather4 OPENSSL_MANGLER_ASM(rsaz_512_gather4)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_512_mul
#  define rsaz_512_mul OPENSSL_MANGLER(rsaz_512_mul)
# endif
#else
# ifndef _rsaz_512_mul
#  define _rsaz_512_mul OPENSSL_MANGLER_ASM(rsaz_512_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_512_mul_by_one
#  define rsaz_512_mul_by_one OPENSSL_MANGLER(rsaz_512_mul_by_one)
# endif
#else
# ifndef _rsaz_512_mul_by_one
#  define _rsaz_512_mul_by_one OPENSSL_MANGLER_ASM(rsaz_512_mul_by_one)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_512_mul_gather4
#  define rsaz_512_mul_gather4 OPENSSL_MANGLER(rsaz_512_mul_gather4)
# endif
#else
# ifndef _rsaz_512_mul_gather4
#  define _rsaz_512_mul_gather4 OPENSSL_MANGLER_ASM(rsaz_512_mul_gather4)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_512_mul_scatter4
#  define rsaz_512_mul_scatter4 OPENSSL_MANGLER(rsaz_512_mul_scatter4)
# endif
#else
# ifndef _rsaz_512_mul_scatter4
#  define _rsaz_512_mul_scatter4 OPENSSL_MANGLER_ASM(rsaz_512_mul_scatter4)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_512_scatter4
#  define rsaz_512_scatter4 OPENSSL_MANGLER(rsaz_512_scatter4)
# endif
#else
# ifndef _rsaz_512_scatter4
#  define _rsaz_512_scatter4 OPENSSL_MANGLER_ASM(rsaz_512_scatter4)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_512_sqr
#  define rsaz_512_sqr OPENSSL_MANGLER(rsaz_512_sqr)
# endif
#else
# ifndef _rsaz_512_sqr
#  define _rsaz_512_sqr OPENSSL_MANGLER_ASM(rsaz_512_sqr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef rsaz_avx2_eligible
#  define rsaz_avx2_eligible OPENSSL_MANGLER(rsaz_avx2_eligible)
# endif
#else
# ifndef _rsaz_avx2_eligible
#  define _rsaz_avx2_eligible OPENSSL_MANGLER_ASM(rsaz_avx2_eligible)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef s2i_ASN1_IA5STRING
#  define s2i_ASN1_IA5STRING OPENSSL_MANGLER(s2i_ASN1_IA5STRING)
# endif
#else
# ifndef _s2i_ASN1_IA5STRING
#  define _s2i_ASN1_IA5STRING OPENSSL_MANGLER_ASM(s2i_ASN1_IA5STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef s2i_ASN1_INTEGER
#  define s2i_ASN1_INTEGER OPENSSL_MANGLER(s2i_ASN1_INTEGER)
# endif
#else
# ifndef _s2i_ASN1_INTEGER
#  define _s2i_ASN1_INTEGER OPENSSL_MANGLER_ASM(s2i_ASN1_INTEGER)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef s2i_ASN1_OCTET_STRING
#  define s2i_ASN1_OCTET_STRING OPENSSL_MANGLER(s2i_ASN1_OCTET_STRING)
# endif
#else
# ifndef _s2i_ASN1_OCTET_STRING
#  define _s2i_ASN1_OCTET_STRING OPENSSL_MANGLER_ASM(s2i_ASN1_OCTET_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef s2i_ASN1_UTF8STRING
#  define s2i_ASN1_UTF8STRING OPENSSL_MANGLER(s2i_ASN1_UTF8STRING)
# endif
#else
# ifndef _s2i_ASN1_UTF8STRING
#  define _s2i_ASN1_UTF8STRING OPENSSL_MANGLER_ASM(s2i_ASN1_UTF8STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef send_certificate_request
#  define send_certificate_request OPENSSL_MANGLER(send_certificate_request)
# endif
#else
# ifndef _send_certificate_request
#  define _send_certificate_request OPENSSL_MANGLER_ASM(send_certificate_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef sha1_block_data_order
#  define sha1_block_data_order OPENSSL_MANGLER(sha1_block_data_order)
# endif
#else
# ifndef _sha1_block_data_order
#  define _sha1_block_data_order OPENSSL_MANGLER_ASM(sha1_block_data_order)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef sha1_multi_block
#  define sha1_multi_block OPENSSL_MANGLER(sha1_multi_block)
# endif
#else
# ifndef _sha1_multi_block
#  define _sha1_multi_block OPENSSL_MANGLER_ASM(sha1_multi_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef sha256_block_data_order
#  define sha256_block_data_order OPENSSL_MANGLER(sha256_block_data_order)
# endif
#else
# ifndef _sha256_block_data_order
#  define _sha256_block_data_order OPENSSL_MANGLER_ASM(sha256_block_data_order)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef sha256_multi_block
#  define sha256_multi_block OPENSSL_MANGLER(sha256_multi_block)
# endif
#else
# ifndef _sha256_multi_block
#  define _sha256_multi_block OPENSSL_MANGLER_ASM(sha256_multi_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef sha512_224_init
#  define sha512_224_init OPENSSL_MANGLER(sha512_224_init)
# endif
#else
# ifndef _sha512_224_init
#  define _sha512_224_init OPENSSL_MANGLER_ASM(sha512_224_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef sha512_256_init
#  define sha512_256_init OPENSSL_MANGLER(sha512_256_init)
# endif
#else
# ifndef _sha512_256_init
#  define _sha512_256_init OPENSSL_MANGLER_ASM(sha512_256_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef sha512_block_data_order
#  define sha512_block_data_order OPENSSL_MANGLER(sha512_block_data_order)
# endif
#else
# ifndef _sha512_block_data_order
#  define _sha512_block_data_order OPENSSL_MANGLER_ASM(sha512_block_data_order)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef should_add_extension
#  define should_add_extension OPENSSL_MANGLER(should_add_extension)
# endif
#else
# ifndef _should_add_extension
#  define _should_add_extension OPENSSL_MANGLER_ASM(should_add_extension)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef srp_generate_client_master_secret
#  define srp_generate_client_master_secret OPENSSL_MANGLER(srp_generate_client_master_secret)
# endif
#else
# ifndef _srp_generate_client_master_secret
#  define _srp_generate_client_master_secret OPENSSL_MANGLER_ASM(srp_generate_client_master_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef srp_generate_server_master_secret
#  define srp_generate_server_master_secret OPENSSL_MANGLER(srp_generate_server_master_secret)
# endif
#else
# ifndef _srp_generate_server_master_secret
#  define _srp_generate_server_master_secret OPENSSL_MANGLER_ASM(srp_generate_server_master_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef srp_verify_server_param
#  define srp_verify_server_param OPENSSL_MANGLER(srp_verify_server_param)
# endif
#else
# ifndef _srp_verify_server_param
#  define _srp_verify_server_param OPENSSL_MANGLER_ASM(srp_verify_server_param)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_alert_code
#  define ssl3_alert_code OPENSSL_MANGLER(ssl3_alert_code)
# endif
#else
# ifndef _ssl3_alert_code
#  define _ssl3_alert_code OPENSSL_MANGLER_ASM(ssl3_alert_code)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_callback_ctrl
#  define ssl3_callback_ctrl OPENSSL_MANGLER(ssl3_callback_ctrl)
# endif
#else
# ifndef _ssl3_callback_ctrl
#  define _ssl3_callback_ctrl OPENSSL_MANGLER_ASM(ssl3_callback_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_cbc_digest_record
#  define ssl3_cbc_digest_record OPENSSL_MANGLER(ssl3_cbc_digest_record)
# endif
#else
# ifndef _ssl3_cbc_digest_record
#  define _ssl3_cbc_digest_record OPENSSL_MANGLER_ASM(ssl3_cbc_digest_record)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_cbc_record_digest_supported
#  define ssl3_cbc_record_digest_supported OPENSSL_MANGLER(ssl3_cbc_record_digest_supported)
# endif
#else
# ifndef _ssl3_cbc_record_digest_supported
#  define _ssl3_cbc_record_digest_supported OPENSSL_MANGLER_ASM(ssl3_cbc_record_digest_supported)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_cbc_remove_padding_and_mac
#  define ssl3_cbc_remove_padding_and_mac OPENSSL_MANGLER(ssl3_cbc_remove_padding_and_mac)
# endif
#else
# ifndef _ssl3_cbc_remove_padding_and_mac
#  define _ssl3_cbc_remove_padding_and_mac OPENSSL_MANGLER_ASM(ssl3_cbc_remove_padding_and_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_change_cipher_state
#  define ssl3_change_cipher_state OPENSSL_MANGLER(ssl3_change_cipher_state)
# endif
#else
# ifndef _ssl3_change_cipher_state
#  define _ssl3_change_cipher_state OPENSSL_MANGLER_ASM(ssl3_change_cipher_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_check_cert_and_algorithm
#  define ssl3_check_cert_and_algorithm OPENSSL_MANGLER(ssl3_check_cert_and_algorithm)
# endif
#else
# ifndef _ssl3_check_cert_and_algorithm
#  define _ssl3_check_cert_and_algorithm OPENSSL_MANGLER_ASM(ssl3_check_cert_and_algorithm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_choose_cipher
#  define ssl3_choose_cipher OPENSSL_MANGLER(ssl3_choose_cipher)
# endif
#else
# ifndef _ssl3_choose_cipher
#  define _ssl3_choose_cipher OPENSSL_MANGLER_ASM(ssl3_choose_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_cleanup_key_block
#  define ssl3_cleanup_key_block OPENSSL_MANGLER(ssl3_cleanup_key_block)
# endif
#else
# ifndef _ssl3_cleanup_key_block
#  define _ssl3_cleanup_key_block OPENSSL_MANGLER_ASM(ssl3_cleanup_key_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_clear
#  define ssl3_clear OPENSSL_MANGLER(ssl3_clear)
# endif
#else
# ifndef _ssl3_clear
#  define _ssl3_clear OPENSSL_MANGLER_ASM(ssl3_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_comp_find
#  define ssl3_comp_find OPENSSL_MANGLER(ssl3_comp_find)
# endif
#else
# ifndef _ssl3_comp_find
#  define _ssl3_comp_find OPENSSL_MANGLER_ASM(ssl3_comp_find)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_ctrl
#  define ssl3_ctrl OPENSSL_MANGLER(ssl3_ctrl)
# endif
#else
# ifndef _ssl3_ctrl
#  define _ssl3_ctrl OPENSSL_MANGLER_ASM(ssl3_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_ctx_callback_ctrl
#  define ssl3_ctx_callback_ctrl OPENSSL_MANGLER(ssl3_ctx_callback_ctrl)
# endif
#else
# ifndef _ssl3_ctx_callback_ctrl
#  define _ssl3_ctx_callback_ctrl OPENSSL_MANGLER_ASM(ssl3_ctx_callback_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_ctx_ctrl
#  define ssl3_ctx_ctrl OPENSSL_MANGLER(ssl3_ctx_ctrl)
# endif
#else
# ifndef _ssl3_ctx_ctrl
#  define _ssl3_ctx_ctrl OPENSSL_MANGLER_ASM(ssl3_ctx_ctrl)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_default_timeout
#  define ssl3_default_timeout OPENSSL_MANGLER(ssl3_default_timeout)
# endif
#else
# ifndef _ssl3_default_timeout
#  define _ssl3_default_timeout OPENSSL_MANGLER_ASM(ssl3_default_timeout)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_digest_cached_records
#  define ssl3_digest_cached_records OPENSSL_MANGLER(ssl3_digest_cached_records)
# endif
#else
# ifndef _ssl3_digest_cached_records
#  define _ssl3_digest_cached_records OPENSSL_MANGLER_ASM(ssl3_digest_cached_records)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_digest_master_key_set_params
#  define ssl3_digest_master_key_set_params OPENSSL_MANGLER(ssl3_digest_master_key_set_params)
# endif
#else
# ifndef _ssl3_digest_master_key_set_params
#  define _ssl3_digest_master_key_set_params OPENSSL_MANGLER_ASM(ssl3_digest_master_key_set_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_dispatch_alert
#  define ssl3_dispatch_alert OPENSSL_MANGLER(ssl3_dispatch_alert)
# endif
#else
# ifndef _ssl3_dispatch_alert
#  define _ssl3_dispatch_alert OPENSSL_MANGLER_ASM(ssl3_dispatch_alert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_do_change_cipher_spec
#  define ssl3_do_change_cipher_spec OPENSSL_MANGLER(ssl3_do_change_cipher_spec)
# endif
#else
# ifndef _ssl3_do_change_cipher_spec
#  define _ssl3_do_change_cipher_spec OPENSSL_MANGLER_ASM(ssl3_do_change_cipher_spec)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_do_compress
#  define ssl3_do_compress OPENSSL_MANGLER(ssl3_do_compress)
# endif
#else
# ifndef _ssl3_do_compress
#  define _ssl3_do_compress OPENSSL_MANGLER_ASM(ssl3_do_compress)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_do_uncompress
#  define ssl3_do_uncompress OPENSSL_MANGLER(ssl3_do_uncompress)
# endif
#else
# ifndef _ssl3_do_uncompress
#  define _ssl3_do_uncompress OPENSSL_MANGLER_ASM(ssl3_do_uncompress)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_do_write
#  define ssl3_do_write OPENSSL_MANGLER(ssl3_do_write)
# endif
#else
# ifndef _ssl3_do_write
#  define _ssl3_do_write OPENSSL_MANGLER_ASM(ssl3_do_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_enc
#  define ssl3_enc OPENSSL_MANGLER(ssl3_enc)
# endif
#else
# ifndef _ssl3_enc
#  define _ssl3_enc OPENSSL_MANGLER_ASM(ssl3_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_final_finish_mac
#  define ssl3_final_finish_mac OPENSSL_MANGLER(ssl3_final_finish_mac)
# endif
#else
# ifndef _ssl3_final_finish_mac
#  define _ssl3_final_finish_mac OPENSSL_MANGLER_ASM(ssl3_final_finish_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_finish_mac
#  define ssl3_finish_mac OPENSSL_MANGLER(ssl3_finish_mac)
# endif
#else
# ifndef _ssl3_finish_mac
#  define _ssl3_finish_mac OPENSSL_MANGLER_ASM(ssl3_finish_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_free
#  define ssl3_free OPENSSL_MANGLER(ssl3_free)
# endif
#else
# ifndef _ssl3_free
#  define _ssl3_free OPENSSL_MANGLER_ASM(ssl3_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_free_digest_list
#  define ssl3_free_digest_list OPENSSL_MANGLER(ssl3_free_digest_list)
# endif
#else
# ifndef _ssl3_free_digest_list
#  define _ssl3_free_digest_list OPENSSL_MANGLER_ASM(ssl3_free_digest_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_generate_master_secret
#  define ssl3_generate_master_secret OPENSSL_MANGLER(ssl3_generate_master_secret)
# endif
#else
# ifndef _ssl3_generate_master_secret
#  define _ssl3_generate_master_secret OPENSSL_MANGLER_ASM(ssl3_generate_master_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_get_cipher
#  define ssl3_get_cipher OPENSSL_MANGLER(ssl3_get_cipher)
# endif
#else
# ifndef _ssl3_get_cipher
#  define _ssl3_get_cipher OPENSSL_MANGLER_ASM(ssl3_get_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_get_cipher_by_char
#  define ssl3_get_cipher_by_char OPENSSL_MANGLER(ssl3_get_cipher_by_char)
# endif
#else
# ifndef _ssl3_get_cipher_by_char
#  define _ssl3_get_cipher_by_char OPENSSL_MANGLER_ASM(ssl3_get_cipher_by_char)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_get_cipher_by_id
#  define ssl3_get_cipher_by_id OPENSSL_MANGLER(ssl3_get_cipher_by_id)
# endif
#else
# ifndef _ssl3_get_cipher_by_id
#  define _ssl3_get_cipher_by_id OPENSSL_MANGLER_ASM(ssl3_get_cipher_by_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_get_cipher_by_std_name
#  define ssl3_get_cipher_by_std_name OPENSSL_MANGLER(ssl3_get_cipher_by_std_name)
# endif
#else
# ifndef _ssl3_get_cipher_by_std_name
#  define _ssl3_get_cipher_by_std_name OPENSSL_MANGLER_ASM(ssl3_get_cipher_by_std_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_get_record
#  define ssl3_get_record OPENSSL_MANGLER(ssl3_get_record)
# endif
#else
# ifndef _ssl3_get_record
#  define _ssl3_get_record OPENSSL_MANGLER_ASM(ssl3_get_record)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_get_req_cert_type
#  define ssl3_get_req_cert_type OPENSSL_MANGLER(ssl3_get_req_cert_type)
# endif
#else
# ifndef _ssl3_get_req_cert_type
#  define _ssl3_get_req_cert_type OPENSSL_MANGLER_ASM(ssl3_get_req_cert_type)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_handshake_write
#  define ssl3_handshake_write OPENSSL_MANGLER(ssl3_handshake_write)
# endif
#else
# ifndef _ssl3_handshake_write
#  define _ssl3_handshake_write OPENSSL_MANGLER_ASM(ssl3_handshake_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_init_finished_mac
#  define ssl3_init_finished_mac OPENSSL_MANGLER(ssl3_init_finished_mac)
# endif
#else
# ifndef _ssl3_init_finished_mac
#  define _ssl3_init_finished_mac OPENSSL_MANGLER_ASM(ssl3_init_finished_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_new
#  define ssl3_new OPENSSL_MANGLER(ssl3_new)
# endif
#else
# ifndef _ssl3_new
#  define _ssl3_new OPENSSL_MANGLER_ASM(ssl3_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_num_ciphers
#  define ssl3_num_ciphers OPENSSL_MANGLER(ssl3_num_ciphers)
# endif
#else
# ifndef _ssl3_num_ciphers
#  define _ssl3_num_ciphers OPENSSL_MANGLER_ASM(ssl3_num_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_output_cert_chain
#  define ssl3_output_cert_chain OPENSSL_MANGLER(ssl3_output_cert_chain)
# endif
#else
# ifndef _ssl3_output_cert_chain
#  define _ssl3_output_cert_chain OPENSSL_MANGLER_ASM(ssl3_output_cert_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_peek
#  define ssl3_peek OPENSSL_MANGLER(ssl3_peek)
# endif
#else
# ifndef _ssl3_peek
#  define _ssl3_peek OPENSSL_MANGLER_ASM(ssl3_peek)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_pending
#  define ssl3_pending OPENSSL_MANGLER(ssl3_pending)
# endif
#else
# ifndef _ssl3_pending
#  define _ssl3_pending OPENSSL_MANGLER_ASM(ssl3_pending)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_put_cipher_by_char
#  define ssl3_put_cipher_by_char OPENSSL_MANGLER(ssl3_put_cipher_by_char)
# endif
#else
# ifndef _ssl3_put_cipher_by_char
#  define _ssl3_put_cipher_by_char OPENSSL_MANGLER_ASM(ssl3_put_cipher_by_char)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_read
#  define ssl3_read OPENSSL_MANGLER(ssl3_read)
# endif
#else
# ifndef _ssl3_read
#  define _ssl3_read OPENSSL_MANGLER_ASM(ssl3_read)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_read_bytes
#  define ssl3_read_bytes OPENSSL_MANGLER(ssl3_read_bytes)
# endif
#else
# ifndef _ssl3_read_bytes
#  define _ssl3_read_bytes OPENSSL_MANGLER_ASM(ssl3_read_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_read_n
#  define ssl3_read_n OPENSSL_MANGLER(ssl3_read_n)
# endif
#else
# ifndef _ssl3_read_n
#  define _ssl3_read_n OPENSSL_MANGLER_ASM(ssl3_read_n)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_record_sequence_update
#  define ssl3_record_sequence_update OPENSSL_MANGLER(ssl3_record_sequence_update)
# endif
#else
# ifndef _ssl3_record_sequence_update
#  define _ssl3_record_sequence_update OPENSSL_MANGLER_ASM(ssl3_record_sequence_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_release_read_buffer
#  define ssl3_release_read_buffer OPENSSL_MANGLER(ssl3_release_read_buffer)
# endif
#else
# ifndef _ssl3_release_read_buffer
#  define _ssl3_release_read_buffer OPENSSL_MANGLER_ASM(ssl3_release_read_buffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_release_write_buffer
#  define ssl3_release_write_buffer OPENSSL_MANGLER(ssl3_release_write_buffer)
# endif
#else
# ifndef _ssl3_release_write_buffer
#  define _ssl3_release_write_buffer OPENSSL_MANGLER_ASM(ssl3_release_write_buffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_renegotiate
#  define ssl3_renegotiate OPENSSL_MANGLER(ssl3_renegotiate)
# endif
#else
# ifndef _ssl3_renegotiate
#  define _ssl3_renegotiate OPENSSL_MANGLER_ASM(ssl3_renegotiate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_renegotiate_check
#  define ssl3_renegotiate_check OPENSSL_MANGLER(ssl3_renegotiate_check)
# endif
#else
# ifndef _ssl3_renegotiate_check
#  define _ssl3_renegotiate_check OPENSSL_MANGLER_ASM(ssl3_renegotiate_check)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_send_alert
#  define ssl3_send_alert OPENSSL_MANGLER(ssl3_send_alert)
# endif
#else
# ifndef _ssl3_send_alert
#  define _ssl3_send_alert OPENSSL_MANGLER_ASM(ssl3_send_alert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_set_handshake_header
#  define ssl3_set_handshake_header OPENSSL_MANGLER(ssl3_set_handshake_header)
# endif
#else
# ifndef _ssl3_set_handshake_header
#  define _ssl3_set_handshake_header OPENSSL_MANGLER_ASM(ssl3_set_handshake_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_setup_buffers
#  define ssl3_setup_buffers OPENSSL_MANGLER(ssl3_setup_buffers)
# endif
#else
# ifndef _ssl3_setup_buffers
#  define _ssl3_setup_buffers OPENSSL_MANGLER_ASM(ssl3_setup_buffers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_setup_key_block
#  define ssl3_setup_key_block OPENSSL_MANGLER(ssl3_setup_key_block)
# endif
#else
# ifndef _ssl3_setup_key_block
#  define _ssl3_setup_key_block OPENSSL_MANGLER_ASM(ssl3_setup_key_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_setup_read_buffer
#  define ssl3_setup_read_buffer OPENSSL_MANGLER(ssl3_setup_read_buffer)
# endif
#else
# ifndef _ssl3_setup_read_buffer
#  define _ssl3_setup_read_buffer OPENSSL_MANGLER_ASM(ssl3_setup_read_buffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_setup_write_buffer
#  define ssl3_setup_write_buffer OPENSSL_MANGLER(ssl3_setup_write_buffer)
# endif
#else
# ifndef _ssl3_setup_write_buffer
#  define _ssl3_setup_write_buffer OPENSSL_MANGLER_ASM(ssl3_setup_write_buffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_shutdown
#  define ssl3_shutdown OPENSSL_MANGLER(ssl3_shutdown)
# endif
#else
# ifndef _ssl3_shutdown
#  define _ssl3_shutdown OPENSSL_MANGLER_ASM(ssl3_shutdown)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_take_mac
#  define ssl3_take_mac OPENSSL_MANGLER(ssl3_take_mac)
# endif
#else
# ifndef _ssl3_take_mac
#  define _ssl3_take_mac OPENSSL_MANGLER_ASM(ssl3_take_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_undef_enc_method
#  define ssl3_undef_enc_method OPENSSL_MANGLER(ssl3_undef_enc_method)
# endif
#else
# ifndef _ssl3_undef_enc_method
#  define _ssl3_undef_enc_method OPENSSL_MANGLER_ASM(ssl3_undef_enc_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_write
#  define ssl3_write OPENSSL_MANGLER(ssl3_write)
# endif
#else
# ifndef _ssl3_write
#  define _ssl3_write OPENSSL_MANGLER_ASM(ssl3_write)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_write_bytes
#  define ssl3_write_bytes OPENSSL_MANGLER(ssl3_write_bytes)
# endif
#else
# ifndef _ssl3_write_bytes
#  define _ssl3_write_bytes OPENSSL_MANGLER_ASM(ssl3_write_bytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl3_write_pending
#  define ssl3_write_pending OPENSSL_MANGLER(ssl3_write_pending)
# endif
#else
# ifndef _ssl3_write_pending
#  define _ssl3_write_pending OPENSSL_MANGLER_ASM(ssl3_write_pending)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_allow_compression
#  define ssl_allow_compression OPENSSL_MANGLER(ssl_allow_compression)
# endif
#else
# ifndef _ssl_allow_compression
#  define _ssl_allow_compression OPENSSL_MANGLER_ASM(ssl_allow_compression)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_bad_method
#  define ssl_bad_method OPENSSL_MANGLER(ssl_bad_method)
# endif
#else
# ifndef _ssl_bad_method
#  define _ssl_bad_method OPENSSL_MANGLER_ASM(ssl_bad_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_build_cert_chain
#  define ssl_build_cert_chain OPENSSL_MANGLER(ssl_build_cert_chain)
# endif
#else
# ifndef _ssl_build_cert_chain
#  define _ssl_build_cert_chain OPENSSL_MANGLER_ASM(ssl_build_cert_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cache_cipherlist
#  define ssl_cache_cipherlist OPENSSL_MANGLER(ssl_cache_cipherlist)
# endif
#else
# ifndef _ssl_cache_cipherlist
#  define _ssl_cache_cipherlist OPENSSL_MANGLER_ASM(ssl_cache_cipherlist)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_add0_chain_cert
#  define ssl_cert_add0_chain_cert OPENSSL_MANGLER(ssl_cert_add0_chain_cert)
# endif
#else
# ifndef _ssl_cert_add0_chain_cert
#  define _ssl_cert_add0_chain_cert OPENSSL_MANGLER_ASM(ssl_cert_add0_chain_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_add1_chain_cert
#  define ssl_cert_add1_chain_cert OPENSSL_MANGLER(ssl_cert_add1_chain_cert)
# endif
#else
# ifndef _ssl_cert_add1_chain_cert
#  define _ssl_cert_add1_chain_cert OPENSSL_MANGLER_ASM(ssl_cert_add1_chain_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_clear_certs
#  define ssl_cert_clear_certs OPENSSL_MANGLER(ssl_cert_clear_certs)
# endif
#else
# ifndef _ssl_cert_clear_certs
#  define _ssl_cert_clear_certs OPENSSL_MANGLER_ASM(ssl_cert_clear_certs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_dup
#  define ssl_cert_dup OPENSSL_MANGLER(ssl_cert_dup)
# endif
#else
# ifndef _ssl_cert_dup
#  define _ssl_cert_dup OPENSSL_MANGLER_ASM(ssl_cert_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_free
#  define ssl_cert_free OPENSSL_MANGLER(ssl_cert_free)
# endif
#else
# ifndef _ssl_cert_free
#  define _ssl_cert_free OPENSSL_MANGLER_ASM(ssl_cert_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_get_cert_store
#  define ssl_cert_get_cert_store OPENSSL_MANGLER(ssl_cert_get_cert_store)
# endif
#else
# ifndef _ssl_cert_get_cert_store
#  define _ssl_cert_get_cert_store OPENSSL_MANGLER_ASM(ssl_cert_get_cert_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_is_disabled
#  define ssl_cert_is_disabled OPENSSL_MANGLER(ssl_cert_is_disabled)
# endif
#else
# ifndef _ssl_cert_is_disabled
#  define _ssl_cert_is_disabled OPENSSL_MANGLER_ASM(ssl_cert_is_disabled)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_lookup_by_idx
#  define ssl_cert_lookup_by_idx OPENSSL_MANGLER(ssl_cert_lookup_by_idx)
# endif
#else
# ifndef _ssl_cert_lookup_by_idx
#  define _ssl_cert_lookup_by_idx OPENSSL_MANGLER_ASM(ssl_cert_lookup_by_idx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_lookup_by_nid
#  define ssl_cert_lookup_by_nid OPENSSL_MANGLER(ssl_cert_lookup_by_nid)
# endif
#else
# ifndef _ssl_cert_lookup_by_nid
#  define _ssl_cert_lookup_by_nid OPENSSL_MANGLER_ASM(ssl_cert_lookup_by_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_lookup_by_pkey
#  define ssl_cert_lookup_by_pkey OPENSSL_MANGLER(ssl_cert_lookup_by_pkey)
# endif
#else
# ifndef _ssl_cert_lookup_by_pkey
#  define _ssl_cert_lookup_by_pkey OPENSSL_MANGLER_ASM(ssl_cert_lookup_by_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_new
#  define ssl_cert_new OPENSSL_MANGLER(ssl_cert_new)
# endif
#else
# ifndef _ssl_cert_new
#  define _ssl_cert_new OPENSSL_MANGLER_ASM(ssl_cert_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_select_current
#  define ssl_cert_select_current OPENSSL_MANGLER(ssl_cert_select_current)
# endif
#else
# ifndef _ssl_cert_select_current
#  define _ssl_cert_select_current OPENSSL_MANGLER_ASM(ssl_cert_select_current)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_set0_chain
#  define ssl_cert_set0_chain OPENSSL_MANGLER(ssl_cert_set0_chain)
# endif
#else
# ifndef _ssl_cert_set0_chain
#  define _ssl_cert_set0_chain OPENSSL_MANGLER_ASM(ssl_cert_set0_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_set1_chain
#  define ssl_cert_set1_chain OPENSSL_MANGLER(ssl_cert_set1_chain)
# endif
#else
# ifndef _ssl_cert_set1_chain
#  define _ssl_cert_set1_chain OPENSSL_MANGLER_ASM(ssl_cert_set1_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_set_cert_cb
#  define ssl_cert_set_cert_cb OPENSSL_MANGLER(ssl_cert_set_cert_cb)
# endif
#else
# ifndef _ssl_cert_set_cert_cb
#  define _ssl_cert_set_cert_cb OPENSSL_MANGLER_ASM(ssl_cert_set_cert_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_set_cert_store
#  define ssl_cert_set_cert_store OPENSSL_MANGLER(ssl_cert_set_cert_store)
# endif
#else
# ifndef _ssl_cert_set_cert_store
#  define _ssl_cert_set_cert_store OPENSSL_MANGLER_ASM(ssl_cert_set_cert_store)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cert_set_current
#  define ssl_cert_set_current OPENSSL_MANGLER(ssl_cert_set_current)
# endif
#else
# ifndef _ssl_cert_set_current
#  define _ssl_cert_set_current OPENSSL_MANGLER_ASM(ssl_cert_set_current)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_check_srvr_ecc_cert_and_alg
#  define ssl_check_srvr_ecc_cert_and_alg OPENSSL_MANGLER(ssl_check_srvr_ecc_cert_and_alg)
# endif
#else
# ifndef _ssl_check_srvr_ecc_cert_and_alg
#  define _ssl_check_srvr_ecc_cert_and_alg OPENSSL_MANGLER_ASM(ssl_check_srvr_ecc_cert_and_alg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_check_version_downgrade
#  define ssl_check_version_downgrade OPENSSL_MANGLER(ssl_check_version_downgrade)
# endif
#else
# ifndef _ssl_check_version_downgrade
#  define _ssl_check_version_downgrade OPENSSL_MANGLER_ASM(ssl_check_version_downgrade)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_choose_client_version
#  define ssl_choose_client_version OPENSSL_MANGLER(ssl_choose_client_version)
# endif
#else
# ifndef _ssl_choose_client_version
#  define _ssl_choose_client_version OPENSSL_MANGLER_ASM(ssl_choose_client_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_choose_server_version
#  define ssl_choose_server_version OPENSSL_MANGLER(ssl_choose_server_version)
# endif
#else
# ifndef _ssl_choose_server_version
#  define _ssl_choose_server_version OPENSSL_MANGLER_ASM(ssl_choose_server_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cipher_disabled
#  define ssl_cipher_disabled OPENSSL_MANGLER(ssl_cipher_disabled)
# endif
#else
# ifndef _ssl_cipher_disabled
#  define _ssl_cipher_disabled OPENSSL_MANGLER_ASM(ssl_cipher_disabled)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cipher_get_evp
#  define ssl_cipher_get_evp OPENSSL_MANGLER(ssl_cipher_get_evp)
# endif
#else
# ifndef _ssl_cipher_get_evp
#  define _ssl_cipher_get_evp OPENSSL_MANGLER_ASM(ssl_cipher_get_evp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cipher_get_evp_cipher
#  define ssl_cipher_get_evp_cipher OPENSSL_MANGLER(ssl_cipher_get_evp_cipher)
# endif
#else
# ifndef _ssl_cipher_get_evp_cipher
#  define _ssl_cipher_get_evp_cipher OPENSSL_MANGLER_ASM(ssl_cipher_get_evp_cipher)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cipher_get_overhead
#  define ssl_cipher_get_overhead OPENSSL_MANGLER(ssl_cipher_get_overhead)
# endif
#else
# ifndef _ssl_cipher_get_overhead
#  define _ssl_cipher_get_overhead OPENSSL_MANGLER_ASM(ssl_cipher_get_overhead)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cipher_id_cmp
#  define ssl_cipher_id_cmp OPENSSL_MANGLER(ssl_cipher_id_cmp)
# endif
#else
# ifndef _ssl_cipher_id_cmp
#  define _ssl_cipher_id_cmp OPENSSL_MANGLER_ASM(ssl_cipher_id_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_cipher_ptr_id_cmp
#  define ssl_cipher_ptr_id_cmp OPENSSL_MANGLER(ssl_cipher_ptr_id_cmp)
# endif
#else
# ifndef _ssl_cipher_ptr_id_cmp
#  define _ssl_cipher_ptr_id_cmp OPENSSL_MANGLER_ASM(ssl_cipher_ptr_id_cmp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_clear_bad_session
#  define ssl_clear_bad_session OPENSSL_MANGLER(ssl_clear_bad_session)
# endif
#else
# ifndef _ssl_clear_bad_session
#  define _ssl_clear_bad_session OPENSSL_MANGLER_ASM(ssl_clear_bad_session)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_clear_cipher_ctx
#  define ssl_clear_cipher_ctx OPENSSL_MANGLER(ssl_clear_cipher_ctx)
# endif
#else
# ifndef _ssl_clear_cipher_ctx
#  define _ssl_clear_cipher_ctx OPENSSL_MANGLER_ASM(ssl_clear_cipher_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_clear_hash_ctx
#  define ssl_clear_hash_ctx OPENSSL_MANGLER(ssl_clear_hash_ctx)
# endif
#else
# ifndef _ssl_clear_hash_ctx
#  define _ssl_clear_hash_ctx OPENSSL_MANGLER_ASM(ssl_clear_hash_ctx)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_comp_free_compression_methods_int
#  define ssl_comp_free_compression_methods_int OPENSSL_MANGLER(ssl_comp_free_compression_methods_int)
# endif
#else
# ifndef _ssl_comp_free_compression_methods_int
#  define _ssl_comp_free_compression_methods_int OPENSSL_MANGLER_ASM(ssl_comp_free_compression_methods_int)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_create_cipher_list
#  define ssl_create_cipher_list OPENSSL_MANGLER(ssl_create_cipher_list)
# endif
#else
# ifndef _ssl_create_cipher_list
#  define _ssl_create_cipher_list OPENSSL_MANGLER_ASM(ssl_create_cipher_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_ctx_security
#  define ssl_ctx_security OPENSSL_MANGLER(ssl_ctx_security)
# endif
#else
# ifndef _ssl_ctx_security
#  define _ssl_ctx_security OPENSSL_MANGLER_ASM(ssl_ctx_security)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_ctx_srp_ctx_free_intern
#  define ssl_ctx_srp_ctx_free_intern OPENSSL_MANGLER(ssl_ctx_srp_ctx_free_intern)
# endif
#else
# ifndef _ssl_ctx_srp_ctx_free_intern
#  define _ssl_ctx_srp_ctx_free_intern OPENSSL_MANGLER_ASM(ssl_ctx_srp_ctx_free_intern)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_ctx_srp_ctx_init_intern
#  define ssl_ctx_srp_ctx_init_intern OPENSSL_MANGLER(ssl_ctx_srp_ctx_init_intern)
# endif
#else
# ifndef _ssl_ctx_srp_ctx_init_intern
#  define _ssl_ctx_srp_ctx_init_intern OPENSSL_MANGLER_ASM(ssl_ctx_srp_ctx_init_intern)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_ctx_system_config
#  define ssl_ctx_system_config OPENSSL_MANGLER(ssl_ctx_system_config)
# endif
#else
# ifndef _ssl_ctx_system_config
#  define _ssl_ctx_system_config OPENSSL_MANGLER_ASM(ssl_ctx_system_config)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_decapsulate
#  define ssl_decapsulate OPENSSL_MANGLER(ssl_decapsulate)
# endif
#else
# ifndef _ssl_decapsulate
#  define _ssl_decapsulate OPENSSL_MANGLER_ASM(ssl_decapsulate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_derive
#  define ssl_derive OPENSSL_MANGLER(ssl_derive)
# endif
#else
# ifndef _ssl_derive
#  define _ssl_derive OPENSSL_MANGLER_ASM(ssl_derive)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_dh_to_pkey
#  define ssl_dh_to_pkey OPENSSL_MANGLER(ssl_dh_to_pkey)
# endif
#else
# ifndef _ssl_dh_to_pkey
#  define _ssl_dh_to_pkey OPENSSL_MANGLER_ASM(ssl_dh_to_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_do_client_cert_cb
#  define ssl_do_client_cert_cb OPENSSL_MANGLER(ssl_do_client_cert_cb)
# endif
#else
# ifndef _ssl_do_client_cert_cb
#  define _ssl_do_client_cert_cb OPENSSL_MANGLER_ASM(ssl_do_client_cert_cb)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_encapsulate
#  define ssl_encapsulate OPENSSL_MANGLER(ssl_encapsulate)
# endif
#else
# ifndef _ssl_encapsulate
#  define _ssl_encapsulate OPENSSL_MANGLER_ASM(ssl_encapsulate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_evp_cipher_fetch
#  define ssl_evp_cipher_fetch OPENSSL_MANGLER(ssl_evp_cipher_fetch)
# endif
#else
# ifndef _ssl_evp_cipher_fetch
#  define _ssl_evp_cipher_fetch OPENSSL_MANGLER_ASM(ssl_evp_cipher_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_evp_cipher_free
#  define ssl_evp_cipher_free OPENSSL_MANGLER(ssl_evp_cipher_free)
# endif
#else
# ifndef _ssl_evp_cipher_free
#  define _ssl_evp_cipher_free OPENSSL_MANGLER_ASM(ssl_evp_cipher_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_evp_cipher_up_ref
#  define ssl_evp_cipher_up_ref OPENSSL_MANGLER(ssl_evp_cipher_up_ref)
# endif
#else
# ifndef _ssl_evp_cipher_up_ref
#  define _ssl_evp_cipher_up_ref OPENSSL_MANGLER_ASM(ssl_evp_cipher_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_evp_md_fetch
#  define ssl_evp_md_fetch OPENSSL_MANGLER(ssl_evp_md_fetch)
# endif
#else
# ifndef _ssl_evp_md_fetch
#  define _ssl_evp_md_fetch OPENSSL_MANGLER_ASM(ssl_evp_md_fetch)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_evp_md_free
#  define ssl_evp_md_free OPENSSL_MANGLER(ssl_evp_md_free)
# endif
#else
# ifndef _ssl_evp_md_free
#  define _ssl_evp_md_free OPENSSL_MANGLER_ASM(ssl_evp_md_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_evp_md_up_ref
#  define ssl_evp_md_up_ref OPENSSL_MANGLER(ssl_evp_md_up_ref)
# endif
#else
# ifndef _ssl_evp_md_up_ref
#  define _ssl_evp_md_up_ref OPENSSL_MANGLER_ASM(ssl_evp_md_up_ref)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_fill_hello_random
#  define ssl_fill_hello_random OPENSSL_MANGLER(ssl_fill_hello_random)
# endif
#else
# ifndef _ssl_fill_hello_random
#  define _ssl_fill_hello_random OPENSSL_MANGLER_ASM(ssl_fill_hello_random)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_free_wbio_buffer
#  define ssl_free_wbio_buffer OPENSSL_MANGLER(ssl_free_wbio_buffer)
# endif
#else
# ifndef _ssl_free_wbio_buffer
#  define _ssl_free_wbio_buffer OPENSSL_MANGLER_ASM(ssl_free_wbio_buffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_generate_master_secret
#  define ssl_generate_master_secret OPENSSL_MANGLER(ssl_generate_master_secret)
# endif
#else
# ifndef _ssl_generate_master_secret
#  define _ssl_generate_master_secret OPENSSL_MANGLER_ASM(ssl_generate_master_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_generate_param_group
#  define ssl_generate_param_group OPENSSL_MANGLER(ssl_generate_param_group)
# endif
#else
# ifndef _ssl_generate_param_group
#  define _ssl_generate_param_group OPENSSL_MANGLER_ASM(ssl_generate_param_group)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_generate_pkey
#  define ssl_generate_pkey OPENSSL_MANGLER(ssl_generate_pkey)
# endif
#else
# ifndef _ssl_generate_pkey
#  define _ssl_generate_pkey OPENSSL_MANGLER_ASM(ssl_generate_pkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_generate_pkey_group
#  define ssl_generate_pkey_group OPENSSL_MANGLER(ssl_generate_pkey_group)
# endif
#else
# ifndef _ssl_generate_pkey_group
#  define _ssl_generate_pkey_group OPENSSL_MANGLER_ASM(ssl_generate_pkey_group)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_generate_session_id
#  define ssl_generate_session_id OPENSSL_MANGLER(ssl_generate_session_id)
# endif
#else
# ifndef _ssl_generate_session_id
#  define _ssl_generate_session_id OPENSSL_MANGLER_ASM(ssl_generate_session_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_gensecret
#  define ssl_gensecret OPENSSL_MANGLER(ssl_gensecret)
# endif
#else
# ifndef _ssl_gensecret
#  define _ssl_gensecret OPENSSL_MANGLER_ASM(ssl_gensecret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_EC_curve_nid
#  define ssl_get_EC_curve_nid OPENSSL_MANGLER(ssl_get_EC_curve_nid)
# endif
#else
# ifndef _ssl_get_EC_curve_nid
#  define _ssl_get_EC_curve_nid OPENSSL_MANGLER_ASM(ssl_get_EC_curve_nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_algorithm2
#  define ssl_get_algorithm2 OPENSSL_MANGLER(ssl_get_algorithm2)
# endif
#else
# ifndef _ssl_get_algorithm2
#  define _ssl_get_algorithm2 OPENSSL_MANGLER_ASM(ssl_get_algorithm2)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_auto_dh
#  define ssl_get_auto_dh OPENSSL_MANGLER(ssl_get_auto_dh)
# endif
#else
# ifndef _ssl_get_auto_dh
#  define _ssl_get_auto_dh OPENSSL_MANGLER_ASM(ssl_get_auto_dh)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_cipher_by_char
#  define ssl_get_cipher_by_char OPENSSL_MANGLER(ssl_get_cipher_by_char)
# endif
#else
# ifndef _ssl_get_cipher_by_char
#  define _ssl_get_cipher_by_char OPENSSL_MANGLER_ASM(ssl_get_cipher_by_char)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_ciphers_by_id
#  define ssl_get_ciphers_by_id OPENSSL_MANGLER(ssl_get_ciphers_by_id)
# endif
#else
# ifndef _ssl_get_ciphers_by_id
#  define _ssl_get_ciphers_by_id OPENSSL_MANGLER_ASM(ssl_get_ciphers_by_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_max_send_fragment
#  define ssl_get_max_send_fragment OPENSSL_MANGLER(ssl_get_max_send_fragment)
# endif
#else
# ifndef _ssl_get_max_send_fragment
#  define _ssl_get_max_send_fragment OPENSSL_MANGLER_ASM(ssl_get_max_send_fragment)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_min_max_version
#  define ssl_get_min_max_version OPENSSL_MANGLER(ssl_get_min_max_version)
# endif
#else
# ifndef _ssl_get_min_max_version
#  define _ssl_get_min_max_version OPENSSL_MANGLER_ASM(ssl_get_min_max_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_new_session
#  define ssl_get_new_session OPENSSL_MANGLER(ssl_get_new_session)
# endif
#else
# ifndef _ssl_get_new_session
#  define _ssl_get_new_session OPENSSL_MANGLER_ASM(ssl_get_new_session)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_prev_session
#  define ssl_get_prev_session OPENSSL_MANGLER(ssl_get_prev_session)
# endif
#else
# ifndef _ssl_get_prev_session
#  define _ssl_get_prev_session OPENSSL_MANGLER_ASM(ssl_get_prev_session)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_security_level_bits
#  define ssl_get_security_level_bits OPENSSL_MANGLER(ssl_get_security_level_bits)
# endif
#else
# ifndef _ssl_get_security_level_bits
#  define _ssl_get_security_level_bits OPENSSL_MANGLER_ASM(ssl_get_security_level_bits)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_server_cert_serverinfo
#  define ssl_get_server_cert_serverinfo OPENSSL_MANGLER(ssl_get_server_cert_serverinfo)
# endif
#else
# ifndef _ssl_get_server_cert_serverinfo
#  define _ssl_get_server_cert_serverinfo OPENSSL_MANGLER_ASM(ssl_get_server_cert_serverinfo)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_get_split_send_fragment
#  define ssl_get_split_send_fragment OPENSSL_MANGLER(ssl_get_split_send_fragment)
# endif
#else
# ifndef _ssl_get_split_send_fragment
#  define _ssl_get_split_send_fragment OPENSSL_MANGLER_ASM(ssl_get_split_send_fragment)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_handshake_hash
#  define ssl_handshake_hash OPENSSL_MANGLER(ssl_handshake_hash)
# endif
#else
# ifndef _ssl_handshake_hash
#  define _ssl_handshake_hash OPENSSL_MANGLER_ASM(ssl_handshake_hash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_handshake_md
#  define ssl_handshake_md OPENSSL_MANGLER(ssl_handshake_md)
# endif
#else
# ifndef _ssl_handshake_md
#  define _ssl_handshake_md OPENSSL_MANGLER_ASM(ssl_handshake_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_final
#  define ssl_hmac_final OPENSSL_MANGLER(ssl_hmac_final)
# endif
#else
# ifndef _ssl_hmac_final
#  define _ssl_hmac_final OPENSSL_MANGLER_ASM(ssl_hmac_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_free
#  define ssl_hmac_free OPENSSL_MANGLER(ssl_hmac_free)
# endif
#else
# ifndef _ssl_hmac_free
#  define _ssl_hmac_free OPENSSL_MANGLER_ASM(ssl_hmac_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_get0_EVP_MAC_CTX
#  define ssl_hmac_get0_EVP_MAC_CTX OPENSSL_MANGLER(ssl_hmac_get0_EVP_MAC_CTX)
# endif
#else
# ifndef _ssl_hmac_get0_EVP_MAC_CTX
#  define _ssl_hmac_get0_EVP_MAC_CTX OPENSSL_MANGLER_ASM(ssl_hmac_get0_EVP_MAC_CTX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_get0_HMAC_CTX
#  define ssl_hmac_get0_HMAC_CTX OPENSSL_MANGLER(ssl_hmac_get0_HMAC_CTX)
# endif
#else
# ifndef _ssl_hmac_get0_HMAC_CTX
#  define _ssl_hmac_get0_HMAC_CTX OPENSSL_MANGLER_ASM(ssl_hmac_get0_HMAC_CTX)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_init
#  define ssl_hmac_init OPENSSL_MANGLER(ssl_hmac_init)
# endif
#else
# ifndef _ssl_hmac_init
#  define _ssl_hmac_init OPENSSL_MANGLER_ASM(ssl_hmac_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_new
#  define ssl_hmac_new OPENSSL_MANGLER(ssl_hmac_new)
# endif
#else
# ifndef _ssl_hmac_new
#  define _ssl_hmac_new OPENSSL_MANGLER_ASM(ssl_hmac_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_old_final
#  define ssl_hmac_old_final OPENSSL_MANGLER(ssl_hmac_old_final)
# endif
#else
# ifndef _ssl_hmac_old_final
#  define _ssl_hmac_old_final OPENSSL_MANGLER_ASM(ssl_hmac_old_final)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_old_free
#  define ssl_hmac_old_free OPENSSL_MANGLER(ssl_hmac_old_free)
# endif
#else
# ifndef _ssl_hmac_old_free
#  define _ssl_hmac_old_free OPENSSL_MANGLER_ASM(ssl_hmac_old_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_old_init
#  define ssl_hmac_old_init OPENSSL_MANGLER(ssl_hmac_old_init)
# endif
#else
# ifndef _ssl_hmac_old_init
#  define _ssl_hmac_old_init OPENSSL_MANGLER_ASM(ssl_hmac_old_init)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_old_new
#  define ssl_hmac_old_new OPENSSL_MANGLER(ssl_hmac_old_new)
# endif
#else
# ifndef _ssl_hmac_old_new
#  define _ssl_hmac_old_new OPENSSL_MANGLER_ASM(ssl_hmac_old_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_old_size
#  define ssl_hmac_old_size OPENSSL_MANGLER(ssl_hmac_old_size)
# endif
#else
# ifndef _ssl_hmac_old_size
#  define _ssl_hmac_old_size OPENSSL_MANGLER_ASM(ssl_hmac_old_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_old_update
#  define ssl_hmac_old_update OPENSSL_MANGLER(ssl_hmac_old_update)
# endif
#else
# ifndef _ssl_hmac_old_update
#  define _ssl_hmac_old_update OPENSSL_MANGLER_ASM(ssl_hmac_old_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_size
#  define ssl_hmac_size OPENSSL_MANGLER(ssl_hmac_size)
# endif
#else
# ifndef _ssl_hmac_size
#  define _ssl_hmac_size OPENSSL_MANGLER_ASM(ssl_hmac_size)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_hmac_update
#  define ssl_hmac_update OPENSSL_MANGLER(ssl_hmac_update)
# endif
#else
# ifndef _ssl_hmac_update
#  define _ssl_hmac_update OPENSSL_MANGLER_ASM(ssl_hmac_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_init_wbio_buffer
#  define ssl_init_wbio_buffer OPENSSL_MANGLER(ssl_init_wbio_buffer)
# endif
#else
# ifndef _ssl_init_wbio_buffer
#  define _ssl_init_wbio_buffer OPENSSL_MANGLER_ASM(ssl_init_wbio_buffer)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_load_ciphers
#  define ssl_load_ciphers OPENSSL_MANGLER(ssl_load_ciphers)
# endif
#else
# ifndef _ssl_load_ciphers
#  define _ssl_load_ciphers OPENSSL_MANGLER_ASM(ssl_load_ciphers)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_load_groups
#  define ssl_load_groups OPENSSL_MANGLER(ssl_load_groups)
# endif
#else
# ifndef _ssl_load_groups
#  define _ssl_load_groups OPENSSL_MANGLER_ASM(ssl_load_groups)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_log_rsa_client_key_exchange
#  define ssl_log_rsa_client_key_exchange OPENSSL_MANGLER(ssl_log_rsa_client_key_exchange)
# endif
#else
# ifndef _ssl_log_rsa_client_key_exchange
#  define _ssl_log_rsa_client_key_exchange OPENSSL_MANGLER_ASM(ssl_log_rsa_client_key_exchange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_log_secret
#  define ssl_log_secret OPENSSL_MANGLER(ssl_log_secret)
# endif
#else
# ifndef _ssl_log_secret
#  define _ssl_log_secret OPENSSL_MANGLER_ASM(ssl_log_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_md
#  define ssl_md OPENSSL_MANGLER(ssl_md)
# endif
#else
# ifndef _ssl_md
#  define _ssl_md OPENSSL_MANGLER_ASM(ssl_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_prf_md
#  define ssl_prf_md OPENSSL_MANGLER(ssl_prf_md)
# endif
#else
# ifndef _ssl_prf_md
#  define _ssl_prf_md OPENSSL_MANGLER_ASM(ssl_prf_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_protocol_to_string
#  define ssl_protocol_to_string OPENSSL_MANGLER(ssl_protocol_to_string)
# endif
#else
# ifndef _ssl_protocol_to_string
#  define _ssl_protocol_to_string OPENSSL_MANGLER_ASM(ssl_protocol_to_string)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_read_internal
#  define ssl_read_internal OPENSSL_MANGLER(ssl_read_internal)
# endif
#else
# ifndef _ssl_read_internal
#  define _ssl_read_internal OPENSSL_MANGLER_ASM(ssl_read_internal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_replace_hash
#  define ssl_replace_hash OPENSSL_MANGLER(ssl_replace_hash)
# endif
#else
# ifndef _ssl_replace_hash
#  define _ssl_replace_hash OPENSSL_MANGLER_ASM(ssl_replace_hash)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_security
#  define ssl_security OPENSSL_MANGLER(ssl_security)
# endif
#else
# ifndef _ssl_security
#  define _ssl_security OPENSSL_MANGLER_ASM(ssl_security)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_security_cert
#  define ssl_security_cert OPENSSL_MANGLER(ssl_security_cert)
# endif
#else
# ifndef _ssl_security_cert
#  define _ssl_security_cert OPENSSL_MANGLER_ASM(ssl_security_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_security_cert_chain
#  define ssl_security_cert_chain OPENSSL_MANGLER(ssl_security_cert_chain)
# endif
#else
# ifndef _ssl_security_cert_chain
#  define _ssl_security_cert_chain OPENSSL_MANGLER_ASM(ssl_security_cert_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_session_calculate_timeout
#  define ssl_session_calculate_timeout OPENSSL_MANGLER(ssl_session_calculate_timeout)
# endif
#else
# ifndef _ssl_session_calculate_timeout
#  define _ssl_session_calculate_timeout OPENSSL_MANGLER_ASM(ssl_session_calculate_timeout)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_session_dup
#  define ssl_session_dup OPENSSL_MANGLER(ssl_session_dup)
# endif
#else
# ifndef _ssl_session_dup
#  define _ssl_session_dup OPENSSL_MANGLER_ASM(ssl_session_dup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_set_client_disabled
#  define ssl_set_client_disabled OPENSSL_MANGLER(ssl_set_client_disabled)
# endif
#else
# ifndef _ssl_set_client_disabled
#  define _ssl_set_client_disabled OPENSSL_MANGLER_ASM(ssl_set_client_disabled)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_set_client_hello_version
#  define ssl_set_client_hello_version OPENSSL_MANGLER(ssl_set_client_hello_version)
# endif
#else
# ifndef _ssl_set_client_hello_version
#  define _ssl_set_client_hello_version OPENSSL_MANGLER_ASM(ssl_set_client_hello_version)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_set_masks
#  define ssl_set_masks OPENSSL_MANGLER(ssl_set_masks)
# endif
#else
# ifndef _ssl_set_masks
#  define _ssl_set_masks OPENSSL_MANGLER_ASM(ssl_set_masks)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_set_sig_mask
#  define ssl_set_sig_mask OPENSSL_MANGLER(ssl_set_sig_mask)
# endif
#else
# ifndef _ssl_set_sig_mask
#  define _ssl_set_sig_mask OPENSSL_MANGLER_ASM(ssl_set_sig_mask)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_set_tmp_ecdh_groups
#  define ssl_set_tmp_ecdh_groups OPENSSL_MANGLER(ssl_set_tmp_ecdh_groups)
# endif
#else
# ifndef _ssl_set_tmp_ecdh_groups
#  define _ssl_set_tmp_ecdh_groups OPENSSL_MANGLER_ASM(ssl_set_tmp_ecdh_groups)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_set_version_bound
#  define ssl_set_version_bound OPENSSL_MANGLER(ssl_set_version_bound)
# endif
#else
# ifndef _ssl_set_version_bound
#  define _ssl_set_version_bound OPENSSL_MANGLER_ASM(ssl_set_version_bound)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_setup_sig_algs
#  define ssl_setup_sig_algs OPENSSL_MANGLER(ssl_setup_sig_algs)
# endif
#else
# ifndef _ssl_setup_sig_algs
#  define _ssl_setup_sig_algs OPENSSL_MANGLER_ASM(ssl_setup_sig_algs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_sort_cipher_list
#  define ssl_sort_cipher_list OPENSSL_MANGLER(ssl_sort_cipher_list)
# endif
#else
# ifndef _ssl_sort_cipher_list
#  define _ssl_sort_cipher_list OPENSSL_MANGLER_ASM(ssl_sort_cipher_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_srp_calc_a_param_intern
#  define ssl_srp_calc_a_param_intern OPENSSL_MANGLER(ssl_srp_calc_a_param_intern)
# endif
#else
# ifndef _ssl_srp_calc_a_param_intern
#  define _ssl_srp_calc_a_param_intern OPENSSL_MANGLER_ASM(ssl_srp_calc_a_param_intern)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_srp_ctx_free_intern
#  define ssl_srp_ctx_free_intern OPENSSL_MANGLER(ssl_srp_ctx_free_intern)
# endif
#else
# ifndef _ssl_srp_ctx_free_intern
#  define _ssl_srp_ctx_free_intern OPENSSL_MANGLER_ASM(ssl_srp_ctx_free_intern)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_srp_ctx_init_intern
#  define ssl_srp_ctx_init_intern OPENSSL_MANGLER(ssl_srp_ctx_init_intern)
# endif
#else
# ifndef _ssl_srp_ctx_init_intern
#  define _ssl_srp_ctx_init_intern OPENSSL_MANGLER_ASM(ssl_srp_ctx_init_intern)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_srp_server_param_with_username_intern
#  define ssl_srp_server_param_with_username_intern OPENSSL_MANGLER(ssl_srp_server_param_with_username_intern)
# endif
#else
# ifndef _ssl_srp_server_param_with_username_intern
#  define _ssl_srp_server_param_with_username_intern OPENSSL_MANGLER_ASM(ssl_srp_server_param_with_username_intern)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_undefined_const_function
#  define ssl_undefined_const_function OPENSSL_MANGLER(ssl_undefined_const_function)
# endif
#else
# ifndef _ssl_undefined_const_function
#  define _ssl_undefined_const_function OPENSSL_MANGLER_ASM(ssl_undefined_const_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_undefined_function
#  define ssl_undefined_function OPENSSL_MANGLER(ssl_undefined_function)
# endif
#else
# ifndef _ssl_undefined_function
#  define _ssl_undefined_function OPENSSL_MANGLER_ASM(ssl_undefined_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_undefined_void_function
#  define ssl_undefined_void_function OPENSSL_MANGLER(ssl_undefined_void_function)
# endif
#else
# ifndef _ssl_undefined_void_function
#  define _ssl_undefined_void_function OPENSSL_MANGLER_ASM(ssl_undefined_void_function)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_update_cache
#  define ssl_update_cache OPENSSL_MANGLER(ssl_update_cache)
# endif
#else
# ifndef _ssl_update_cache
#  define _ssl_update_cache OPENSSL_MANGLER_ASM(ssl_update_cache)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_validate_ct
#  define ssl_validate_ct OPENSSL_MANGLER(ssl_validate_ct)
# endif
#else
# ifndef _ssl_validate_ct
#  define _ssl_validate_ct OPENSSL_MANGLER_ASM(ssl_validate_ct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_verify_cert_chain
#  define ssl_verify_cert_chain OPENSSL_MANGLER(ssl_verify_cert_chain)
# endif
#else
# ifndef _ssl_verify_cert_chain
#  define _ssl_verify_cert_chain OPENSSL_MANGLER_ASM(ssl_verify_cert_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_version_supported
#  define ssl_version_supported OPENSSL_MANGLER(ssl_version_supported)
# endif
#else
# ifndef _ssl_version_supported
#  define _ssl_version_supported OPENSSL_MANGLER_ASM(ssl_version_supported)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_write_internal
#  define ssl_write_internal OPENSSL_MANGLER(ssl_write_internal)
# endif
#else
# ifndef _ssl_write_internal
#  define _ssl_write_internal OPENSSL_MANGLER_ASM(ssl_write_internal)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef ssl_x509err2alert
#  define ssl_x509err2alert OPENSSL_MANGLER(ssl_x509err2alert)
# endif
#else
# ifndef _ssl_x509err2alert
#  define _ssl_x509err2alert OPENSSL_MANGLER_ASM(ssl_x509err2alert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef statem_flush
#  define statem_flush OPENSSL_MANGLER(statem_flush)
# endif
#else
# ifndef _statem_flush
#  define _statem_flush OPENSSL_MANGLER_ASM(statem_flush)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls12_check_peer_sigalg
#  define tls12_check_peer_sigalg OPENSSL_MANGLER(tls12_check_peer_sigalg)
# endif
#else
# ifndef _tls12_check_peer_sigalg
#  define _tls12_check_peer_sigalg OPENSSL_MANGLER_ASM(tls12_check_peer_sigalg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls12_copy_sigalgs
#  define tls12_copy_sigalgs OPENSSL_MANGLER(tls12_copy_sigalgs)
# endif
#else
# ifndef _tls12_copy_sigalgs
#  define _tls12_copy_sigalgs OPENSSL_MANGLER_ASM(tls12_copy_sigalgs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls12_get_psigalgs
#  define tls12_get_psigalgs OPENSSL_MANGLER(tls12_get_psigalgs)
# endif
#else
# ifndef _tls12_get_psigalgs
#  define _tls12_get_psigalgs OPENSSL_MANGLER_ASM(tls12_get_psigalgs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_alert_code
#  define tls13_alert_code OPENSSL_MANGLER(tls13_alert_code)
# endif
#else
# ifndef _tls13_alert_code
#  define _tls13_alert_code OPENSSL_MANGLER_ASM(tls13_alert_code)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_change_cipher_state
#  define tls13_change_cipher_state OPENSSL_MANGLER(tls13_change_cipher_state)
# endif
#else
# ifndef _tls13_change_cipher_state
#  define _tls13_change_cipher_state OPENSSL_MANGLER_ASM(tls13_change_cipher_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_derive_finishedkey
#  define tls13_derive_finishedkey OPENSSL_MANGLER(tls13_derive_finishedkey)
# endif
#else
# ifndef _tls13_derive_finishedkey
#  define _tls13_derive_finishedkey OPENSSL_MANGLER_ASM(tls13_derive_finishedkey)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_derive_iv
#  define tls13_derive_iv OPENSSL_MANGLER(tls13_derive_iv)
# endif
#else
# ifndef _tls13_derive_iv
#  define _tls13_derive_iv OPENSSL_MANGLER_ASM(tls13_derive_iv)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_derive_key
#  define tls13_derive_key OPENSSL_MANGLER(tls13_derive_key)
# endif
#else
# ifndef _tls13_derive_key
#  define _tls13_derive_key OPENSSL_MANGLER_ASM(tls13_derive_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_enc
#  define tls13_enc OPENSSL_MANGLER(tls13_enc)
# endif
#else
# ifndef _tls13_enc
#  define _tls13_enc OPENSSL_MANGLER_ASM(tls13_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_export_keying_material
#  define tls13_export_keying_material OPENSSL_MANGLER(tls13_export_keying_material)
# endif
#else
# ifndef _tls13_export_keying_material
#  define _tls13_export_keying_material OPENSSL_MANGLER_ASM(tls13_export_keying_material)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_export_keying_material_early
#  define tls13_export_keying_material_early OPENSSL_MANGLER(tls13_export_keying_material_early)
# endif
#else
# ifndef _tls13_export_keying_material_early
#  define _tls13_export_keying_material_early OPENSSL_MANGLER_ASM(tls13_export_keying_material_early)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_final_finish_mac
#  define tls13_final_finish_mac OPENSSL_MANGLER(tls13_final_finish_mac)
# endif
#else
# ifndef _tls13_final_finish_mac
#  define _tls13_final_finish_mac OPENSSL_MANGLER_ASM(tls13_final_finish_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_generate_handshake_secret
#  define tls13_generate_handshake_secret OPENSSL_MANGLER(tls13_generate_handshake_secret)
# endif
#else
# ifndef _tls13_generate_handshake_secret
#  define _tls13_generate_handshake_secret OPENSSL_MANGLER_ASM(tls13_generate_handshake_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_generate_master_secret
#  define tls13_generate_master_secret OPENSSL_MANGLER(tls13_generate_master_secret)
# endif
#else
# ifndef _tls13_generate_master_secret
#  define _tls13_generate_master_secret OPENSSL_MANGLER_ASM(tls13_generate_master_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_generate_secret
#  define tls13_generate_secret OPENSSL_MANGLER(tls13_generate_secret)
# endif
#else
# ifndef _tls13_generate_secret
#  define _tls13_generate_secret OPENSSL_MANGLER_ASM(tls13_generate_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_hkdf_expand
#  define tls13_hkdf_expand OPENSSL_MANGLER(tls13_hkdf_expand)
# endif
#else
# ifndef _tls13_hkdf_expand
#  define _tls13_hkdf_expand OPENSSL_MANGLER_ASM(tls13_hkdf_expand)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_restore_handshake_digest_for_pha
#  define tls13_restore_handshake_digest_for_pha OPENSSL_MANGLER(tls13_restore_handshake_digest_for_pha)
# endif
#else
# ifndef _tls13_restore_handshake_digest_for_pha
#  define _tls13_restore_handshake_digest_for_pha OPENSSL_MANGLER_ASM(tls13_restore_handshake_digest_for_pha)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_save_handshake_digest_for_pha
#  define tls13_save_handshake_digest_for_pha OPENSSL_MANGLER(tls13_save_handshake_digest_for_pha)
# endif
#else
# ifndef _tls13_save_handshake_digest_for_pha
#  define _tls13_save_handshake_digest_for_pha OPENSSL_MANGLER_ASM(tls13_save_handshake_digest_for_pha)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_set_encoded_pub_key
#  define tls13_set_encoded_pub_key OPENSSL_MANGLER(tls13_set_encoded_pub_key)
# endif
#else
# ifndef _tls13_set_encoded_pub_key
#  define _tls13_set_encoded_pub_key OPENSSL_MANGLER_ASM(tls13_set_encoded_pub_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_setup_key_block
#  define tls13_setup_key_block OPENSSL_MANGLER(tls13_setup_key_block)
# endif
#else
# ifndef _tls13_setup_key_block
#  define _tls13_setup_key_block OPENSSL_MANGLER_ASM(tls13_setup_key_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls13_update_key
#  define tls13_update_key OPENSSL_MANGLER(tls13_update_key)
# endif
#else
# ifndef _tls13_update_key
#  define _tls13_update_key OPENSSL_MANGLER_ASM(tls13_update_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_alert_code
#  define tls1_alert_code OPENSSL_MANGLER(tls1_alert_code)
# endif
#else
# ifndef _tls1_alert_code
#  define _tls1_alert_code OPENSSL_MANGLER_ASM(tls1_alert_code)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_cbc_remove_padding_and_mac
#  define tls1_cbc_remove_padding_and_mac OPENSSL_MANGLER(tls1_cbc_remove_padding_and_mac)
# endif
#else
# ifndef _tls1_cbc_remove_padding_and_mac
#  define _tls1_cbc_remove_padding_and_mac OPENSSL_MANGLER_ASM(tls1_cbc_remove_padding_and_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_change_cipher_state
#  define tls1_change_cipher_state OPENSSL_MANGLER(tls1_change_cipher_state)
# endif
#else
# ifndef _tls1_change_cipher_state
#  define _tls1_change_cipher_state OPENSSL_MANGLER_ASM(tls1_change_cipher_state)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_check_chain
#  define tls1_check_chain OPENSSL_MANGLER(tls1_check_chain)
# endif
#else
# ifndef _tls1_check_chain
#  define _tls1_check_chain OPENSSL_MANGLER_ASM(tls1_check_chain)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_check_ec_tmp_key
#  define tls1_check_ec_tmp_key OPENSSL_MANGLER(tls1_check_ec_tmp_key)
# endif
#else
# ifndef _tls1_check_ec_tmp_key
#  define _tls1_check_ec_tmp_key OPENSSL_MANGLER_ASM(tls1_check_ec_tmp_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_check_group_id
#  define tls1_check_group_id OPENSSL_MANGLER(tls1_check_group_id)
# endif
#else
# ifndef _tls1_check_group_id
#  define _tls1_check_group_id OPENSSL_MANGLER_ASM(tls1_check_group_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_clear
#  define tls1_clear OPENSSL_MANGLER(tls1_clear)
# endif
#else
# ifndef _tls1_clear
#  define _tls1_clear OPENSSL_MANGLER_ASM(tls1_clear)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_default_timeout
#  define tls1_default_timeout OPENSSL_MANGLER(tls1_default_timeout)
# endif
#else
# ifndef _tls1_default_timeout
#  define _tls1_default_timeout OPENSSL_MANGLER_ASM(tls1_default_timeout)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_enc
#  define tls1_enc OPENSSL_MANGLER(tls1_enc)
# endif
#else
# ifndef _tls1_enc
#  define _tls1_enc OPENSSL_MANGLER_ASM(tls1_enc)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_export_keying_material
#  define tls1_export_keying_material OPENSSL_MANGLER(tls1_export_keying_material)
# endif
#else
# ifndef _tls1_export_keying_material
#  define _tls1_export_keying_material OPENSSL_MANGLER_ASM(tls1_export_keying_material)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_final_finish_mac
#  define tls1_final_finish_mac OPENSSL_MANGLER(tls1_final_finish_mac)
# endif
#else
# ifndef _tls1_final_finish_mac
#  define _tls1_final_finish_mac OPENSSL_MANGLER_ASM(tls1_final_finish_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_free
#  define tls1_free OPENSSL_MANGLER(tls1_free)
# endif
#else
# ifndef _tls1_free
#  define _tls1_free OPENSSL_MANGLER_ASM(tls1_free)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_generate_master_secret
#  define tls1_generate_master_secret OPENSSL_MANGLER(tls1_generate_master_secret)
# endif
#else
# ifndef _tls1_generate_master_secret
#  define _tls1_generate_master_secret OPENSSL_MANGLER_ASM(tls1_generate_master_secret)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_get_formatlist
#  define tls1_get_formatlist OPENSSL_MANGLER(tls1_get_formatlist)
# endif
#else
# ifndef _tls1_get_formatlist
#  define _tls1_get_formatlist OPENSSL_MANGLER_ASM(tls1_get_formatlist)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_get_supported_groups
#  define tls1_get_supported_groups OPENSSL_MANGLER(tls1_get_supported_groups)
# endif
#else
# ifndef _tls1_get_supported_groups
#  define _tls1_get_supported_groups OPENSSL_MANGLER_ASM(tls1_get_supported_groups)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_group_id2nid
#  define tls1_group_id2nid OPENSSL_MANGLER(tls1_group_id2nid)
# endif
#else
# ifndef _tls1_group_id2nid
#  define _tls1_group_id2nid OPENSSL_MANGLER_ASM(tls1_group_id2nid)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_group_id_lookup
#  define tls1_group_id_lookup OPENSSL_MANGLER(tls1_group_id_lookup)
# endif
#else
# ifndef _tls1_group_id_lookup
#  define _tls1_group_id_lookup OPENSSL_MANGLER_ASM(tls1_group_id_lookup)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_lookup_md
#  define tls1_lookup_md OPENSSL_MANGLER(tls1_lookup_md)
# endif
#else
# ifndef _tls1_lookup_md
#  define _tls1_lookup_md OPENSSL_MANGLER_ASM(tls1_lookup_md)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_mac
#  define tls1_mac OPENSSL_MANGLER(tls1_mac)
# endif
#else
# ifndef _tls1_mac
#  define _tls1_mac OPENSSL_MANGLER_ASM(tls1_mac)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_new
#  define tls1_new OPENSSL_MANGLER(tls1_new)
# endif
#else
# ifndef _tls1_new
#  define _tls1_new OPENSSL_MANGLER_ASM(tls1_new)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_nid2group_id
#  define tls1_nid2group_id OPENSSL_MANGLER(tls1_nid2group_id)
# endif
#else
# ifndef _tls1_nid2group_id
#  define _tls1_nid2group_id OPENSSL_MANGLER_ASM(tls1_nid2group_id)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_process_sigalgs
#  define tls1_process_sigalgs OPENSSL_MANGLER(tls1_process_sigalgs)
# endif
#else
# ifndef _tls1_process_sigalgs
#  define _tls1_process_sigalgs OPENSSL_MANGLER_ASM(tls1_process_sigalgs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_save_sigalgs
#  define tls1_save_sigalgs OPENSSL_MANGLER(tls1_save_sigalgs)
# endif
#else
# ifndef _tls1_save_sigalgs
#  define _tls1_save_sigalgs OPENSSL_MANGLER_ASM(tls1_save_sigalgs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_save_u16
#  define tls1_save_u16 OPENSSL_MANGLER(tls1_save_u16)
# endif
#else
# ifndef _tls1_save_u16
#  define _tls1_save_u16 OPENSSL_MANGLER_ASM(tls1_save_u16)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_set_cert_validity
#  define tls1_set_cert_validity OPENSSL_MANGLER(tls1_set_cert_validity)
# endif
#else
# ifndef _tls1_set_cert_validity
#  define _tls1_set_cert_validity OPENSSL_MANGLER_ASM(tls1_set_cert_validity)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_set_groups
#  define tls1_set_groups OPENSSL_MANGLER(tls1_set_groups)
# endif
#else
# ifndef _tls1_set_groups
#  define _tls1_set_groups OPENSSL_MANGLER_ASM(tls1_set_groups)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_set_groups_list
#  define tls1_set_groups_list OPENSSL_MANGLER(tls1_set_groups_list)
# endif
#else
# ifndef _tls1_set_groups_list
#  define _tls1_set_groups_list OPENSSL_MANGLER_ASM(tls1_set_groups_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_set_peer_legacy_sigalg
#  define tls1_set_peer_legacy_sigalg OPENSSL_MANGLER(tls1_set_peer_legacy_sigalg)
# endif
#else
# ifndef _tls1_set_peer_legacy_sigalg
#  define _tls1_set_peer_legacy_sigalg OPENSSL_MANGLER_ASM(tls1_set_peer_legacy_sigalg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_set_raw_sigalgs
#  define tls1_set_raw_sigalgs OPENSSL_MANGLER(tls1_set_raw_sigalgs)
# endif
#else
# ifndef _tls1_set_raw_sigalgs
#  define _tls1_set_raw_sigalgs OPENSSL_MANGLER_ASM(tls1_set_raw_sigalgs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_set_server_sigalgs
#  define tls1_set_server_sigalgs OPENSSL_MANGLER(tls1_set_server_sigalgs)
# endif
#else
# ifndef _tls1_set_server_sigalgs
#  define _tls1_set_server_sigalgs OPENSSL_MANGLER_ASM(tls1_set_server_sigalgs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_set_sigalgs
#  define tls1_set_sigalgs OPENSSL_MANGLER(tls1_set_sigalgs)
# endif
#else
# ifndef _tls1_set_sigalgs
#  define _tls1_set_sigalgs OPENSSL_MANGLER_ASM(tls1_set_sigalgs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_set_sigalgs_list
#  define tls1_set_sigalgs_list OPENSSL_MANGLER(tls1_set_sigalgs_list)
# endif
#else
# ifndef _tls1_set_sigalgs_list
#  define _tls1_set_sigalgs_list OPENSSL_MANGLER_ASM(tls1_set_sigalgs_list)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_setup_key_block
#  define tls1_setup_key_block OPENSSL_MANGLER(tls1_setup_key_block)
# endif
#else
# ifndef _tls1_setup_key_block
#  define _tls1_setup_key_block OPENSSL_MANGLER_ASM(tls1_setup_key_block)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls1_shared_group
#  define tls1_shared_group OPENSSL_MANGLER(tls1_shared_group)
# endif
#else
# ifndef _tls1_shared_group
#  define _tls1_shared_group OPENSSL_MANGLER_ASM(tls1_shared_group)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_check_sigalg_curve
#  define tls_check_sigalg_curve OPENSSL_MANGLER(tls_check_sigalg_curve)
# endif
#else
# ifndef _tls_check_sigalg_curve
#  define _tls_check_sigalg_curve OPENSSL_MANGLER_ASM(tls_check_sigalg_curve)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_choose_sigalg
#  define tls_choose_sigalg OPENSSL_MANGLER(tls_choose_sigalg)
# endif
#else
# ifndef _tls_choose_sigalg
#  define _tls_choose_sigalg OPENSSL_MANGLER_ASM(tls_choose_sigalg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_client_key_exchange_post_work
#  define tls_client_key_exchange_post_work OPENSSL_MANGLER(tls_client_key_exchange_post_work)
# endif
#else
# ifndef _tls_client_key_exchange_post_work
#  define _tls_client_key_exchange_post_work OPENSSL_MANGLER_ASM(tls_client_key_exchange_post_work)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_close_construct_packet
#  define tls_close_construct_packet OPENSSL_MANGLER(tls_close_construct_packet)
# endif
#else
# ifndef _tls_close_construct_packet
#  define _tls_close_construct_packet OPENSSL_MANGLER_ASM(tls_close_construct_packet)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_collect_extensions
#  define tls_collect_extensions OPENSSL_MANGLER(tls_collect_extensions)
# endif
#else
# ifndef _tls_collect_extensions
#  define _tls_collect_extensions OPENSSL_MANGLER_ASM(tls_collect_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_cert_status
#  define tls_construct_cert_status OPENSSL_MANGLER(tls_construct_cert_status)
# endif
#else
# ifndef _tls_construct_cert_status
#  define _tls_construct_cert_status OPENSSL_MANGLER_ASM(tls_construct_cert_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_cert_status_body
#  define tls_construct_cert_status_body OPENSSL_MANGLER(tls_construct_cert_status_body)
# endif
#else
# ifndef _tls_construct_cert_status_body
#  define _tls_construct_cert_status_body OPENSSL_MANGLER_ASM(tls_construct_cert_status_body)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_cert_verify
#  define tls_construct_cert_verify OPENSSL_MANGLER(tls_construct_cert_verify)
# endif
#else
# ifndef _tls_construct_cert_verify
#  define _tls_construct_cert_verify OPENSSL_MANGLER_ASM(tls_construct_cert_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_certificate_request
#  define tls_construct_certificate_request OPENSSL_MANGLER(tls_construct_certificate_request)
# endif
#else
# ifndef _tls_construct_certificate_request
#  define _tls_construct_certificate_request OPENSSL_MANGLER_ASM(tls_construct_certificate_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_change_cipher_spec
#  define tls_construct_change_cipher_spec OPENSSL_MANGLER(tls_construct_change_cipher_spec)
# endif
#else
# ifndef _tls_construct_change_cipher_spec
#  define _tls_construct_change_cipher_spec OPENSSL_MANGLER_ASM(tls_construct_change_cipher_spec)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_client_certificate
#  define tls_construct_client_certificate OPENSSL_MANGLER(tls_construct_client_certificate)
# endif
#else
# ifndef _tls_construct_client_certificate
#  define _tls_construct_client_certificate OPENSSL_MANGLER_ASM(tls_construct_client_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_client_hello
#  define tls_construct_client_hello OPENSSL_MANGLER(tls_construct_client_hello)
# endif
#else
# ifndef _tls_construct_client_hello
#  define _tls_construct_client_hello OPENSSL_MANGLER_ASM(tls_construct_client_hello)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_client_key_exchange
#  define tls_construct_client_key_exchange OPENSSL_MANGLER(tls_construct_client_key_exchange)
# endif
#else
# ifndef _tls_construct_client_key_exchange
#  define _tls_construct_client_key_exchange OPENSSL_MANGLER_ASM(tls_construct_client_key_exchange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_alpn
#  define tls_construct_ctos_alpn OPENSSL_MANGLER(tls_construct_ctos_alpn)
# endif
#else
# ifndef _tls_construct_ctos_alpn
#  define _tls_construct_ctos_alpn OPENSSL_MANGLER_ASM(tls_construct_ctos_alpn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_cookie
#  define tls_construct_ctos_cookie OPENSSL_MANGLER(tls_construct_ctos_cookie)
# endif
#else
# ifndef _tls_construct_ctos_cookie
#  define _tls_construct_ctos_cookie OPENSSL_MANGLER_ASM(tls_construct_ctos_cookie)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_early_data
#  define tls_construct_ctos_early_data OPENSSL_MANGLER(tls_construct_ctos_early_data)
# endif
#else
# ifndef _tls_construct_ctos_early_data
#  define _tls_construct_ctos_early_data OPENSSL_MANGLER_ASM(tls_construct_ctos_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_ec_pt_formats
#  define tls_construct_ctos_ec_pt_formats OPENSSL_MANGLER(tls_construct_ctos_ec_pt_formats)
# endif
#else
# ifndef _tls_construct_ctos_ec_pt_formats
#  define _tls_construct_ctos_ec_pt_formats OPENSSL_MANGLER_ASM(tls_construct_ctos_ec_pt_formats)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_ems
#  define tls_construct_ctos_ems OPENSSL_MANGLER(tls_construct_ctos_ems)
# endif
#else
# ifndef _tls_construct_ctos_ems
#  define _tls_construct_ctos_ems OPENSSL_MANGLER_ASM(tls_construct_ctos_ems)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_etm
#  define tls_construct_ctos_etm OPENSSL_MANGLER(tls_construct_ctos_etm)
# endif
#else
# ifndef _tls_construct_ctos_etm
#  define _tls_construct_ctos_etm OPENSSL_MANGLER_ASM(tls_construct_ctos_etm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_key_share
#  define tls_construct_ctos_key_share OPENSSL_MANGLER(tls_construct_ctos_key_share)
# endif
#else
# ifndef _tls_construct_ctos_key_share
#  define _tls_construct_ctos_key_share OPENSSL_MANGLER_ASM(tls_construct_ctos_key_share)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_maxfragmentlen
#  define tls_construct_ctos_maxfragmentlen OPENSSL_MANGLER(tls_construct_ctos_maxfragmentlen)
# endif
#else
# ifndef _tls_construct_ctos_maxfragmentlen
#  define _tls_construct_ctos_maxfragmentlen OPENSSL_MANGLER_ASM(tls_construct_ctos_maxfragmentlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_npn
#  define tls_construct_ctos_npn OPENSSL_MANGLER(tls_construct_ctos_npn)
# endif
#else
# ifndef _tls_construct_ctos_npn
#  define _tls_construct_ctos_npn OPENSSL_MANGLER_ASM(tls_construct_ctos_npn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_padding
#  define tls_construct_ctos_padding OPENSSL_MANGLER(tls_construct_ctos_padding)
# endif
#else
# ifndef _tls_construct_ctos_padding
#  define _tls_construct_ctos_padding OPENSSL_MANGLER_ASM(tls_construct_ctos_padding)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_post_handshake_auth
#  define tls_construct_ctos_post_handshake_auth OPENSSL_MANGLER(tls_construct_ctos_post_handshake_auth)
# endif
#else
# ifndef _tls_construct_ctos_post_handshake_auth
#  define _tls_construct_ctos_post_handshake_auth OPENSSL_MANGLER_ASM(tls_construct_ctos_post_handshake_auth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_psk
#  define tls_construct_ctos_psk OPENSSL_MANGLER(tls_construct_ctos_psk)
# endif
#else
# ifndef _tls_construct_ctos_psk
#  define _tls_construct_ctos_psk OPENSSL_MANGLER_ASM(tls_construct_ctos_psk)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_psk_kex_modes
#  define tls_construct_ctos_psk_kex_modes OPENSSL_MANGLER(tls_construct_ctos_psk_kex_modes)
# endif
#else
# ifndef _tls_construct_ctos_psk_kex_modes
#  define _tls_construct_ctos_psk_kex_modes OPENSSL_MANGLER_ASM(tls_construct_ctos_psk_kex_modes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_renegotiate
#  define tls_construct_ctos_renegotiate OPENSSL_MANGLER(tls_construct_ctos_renegotiate)
# endif
#else
# ifndef _tls_construct_ctos_renegotiate
#  define _tls_construct_ctos_renegotiate OPENSSL_MANGLER_ASM(tls_construct_ctos_renegotiate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_sct
#  define tls_construct_ctos_sct OPENSSL_MANGLER(tls_construct_ctos_sct)
# endif
#else
# ifndef _tls_construct_ctos_sct
#  define _tls_construct_ctos_sct OPENSSL_MANGLER_ASM(tls_construct_ctos_sct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_server_name
#  define tls_construct_ctos_server_name OPENSSL_MANGLER(tls_construct_ctos_server_name)
# endif
#else
# ifndef _tls_construct_ctos_server_name
#  define _tls_construct_ctos_server_name OPENSSL_MANGLER_ASM(tls_construct_ctos_server_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_session_ticket
#  define tls_construct_ctos_session_ticket OPENSSL_MANGLER(tls_construct_ctos_session_ticket)
# endif
#else
# ifndef _tls_construct_ctos_session_ticket
#  define _tls_construct_ctos_session_ticket OPENSSL_MANGLER_ASM(tls_construct_ctos_session_ticket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_sig_algs
#  define tls_construct_ctos_sig_algs OPENSSL_MANGLER(tls_construct_ctos_sig_algs)
# endif
#else
# ifndef _tls_construct_ctos_sig_algs
#  define _tls_construct_ctos_sig_algs OPENSSL_MANGLER_ASM(tls_construct_ctos_sig_algs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_srp
#  define tls_construct_ctos_srp OPENSSL_MANGLER(tls_construct_ctos_srp)
# endif
#else
# ifndef _tls_construct_ctos_srp
#  define _tls_construct_ctos_srp OPENSSL_MANGLER_ASM(tls_construct_ctos_srp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_status_request
#  define tls_construct_ctos_status_request OPENSSL_MANGLER(tls_construct_ctos_status_request)
# endif
#else
# ifndef _tls_construct_ctos_status_request
#  define _tls_construct_ctos_status_request OPENSSL_MANGLER_ASM(tls_construct_ctos_status_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_supported_groups
#  define tls_construct_ctos_supported_groups OPENSSL_MANGLER(tls_construct_ctos_supported_groups)
# endif
#else
# ifndef _tls_construct_ctos_supported_groups
#  define _tls_construct_ctos_supported_groups OPENSSL_MANGLER_ASM(tls_construct_ctos_supported_groups)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_supported_versions
#  define tls_construct_ctos_supported_versions OPENSSL_MANGLER(tls_construct_ctos_supported_versions)
# endif
#else
# ifndef _tls_construct_ctos_supported_versions
#  define _tls_construct_ctos_supported_versions OPENSSL_MANGLER_ASM(tls_construct_ctos_supported_versions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_ctos_use_srtp
#  define tls_construct_ctos_use_srtp OPENSSL_MANGLER(tls_construct_ctos_use_srtp)
# endif
#else
# ifndef _tls_construct_ctos_use_srtp
#  define _tls_construct_ctos_use_srtp OPENSSL_MANGLER_ASM(tls_construct_ctos_use_srtp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_end_of_early_data
#  define tls_construct_end_of_early_data OPENSSL_MANGLER(tls_construct_end_of_early_data)
# endif
#else
# ifndef _tls_construct_end_of_early_data
#  define _tls_construct_end_of_early_data OPENSSL_MANGLER_ASM(tls_construct_end_of_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_extensions
#  define tls_construct_extensions OPENSSL_MANGLER(tls_construct_extensions)
# endif
#else
# ifndef _tls_construct_extensions
#  define _tls_construct_extensions OPENSSL_MANGLER_ASM(tls_construct_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_finished
#  define tls_construct_finished OPENSSL_MANGLER(tls_construct_finished)
# endif
#else
# ifndef _tls_construct_finished
#  define _tls_construct_finished OPENSSL_MANGLER_ASM(tls_construct_finished)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_key_update
#  define tls_construct_key_update OPENSSL_MANGLER(tls_construct_key_update)
# endif
#else
# ifndef _tls_construct_key_update
#  define _tls_construct_key_update OPENSSL_MANGLER_ASM(tls_construct_key_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_new_session_ticket
#  define tls_construct_new_session_ticket OPENSSL_MANGLER(tls_construct_new_session_ticket)
# endif
#else
# ifndef _tls_construct_new_session_ticket
#  define _tls_construct_new_session_ticket OPENSSL_MANGLER_ASM(tls_construct_new_session_ticket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_next_proto
#  define tls_construct_next_proto OPENSSL_MANGLER(tls_construct_next_proto)
# endif
#else
# ifndef _tls_construct_next_proto
#  define _tls_construct_next_proto OPENSSL_MANGLER_ASM(tls_construct_next_proto)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_server_certificate
#  define tls_construct_server_certificate OPENSSL_MANGLER(tls_construct_server_certificate)
# endif
#else
# ifndef _tls_construct_server_certificate
#  define _tls_construct_server_certificate OPENSSL_MANGLER_ASM(tls_construct_server_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_server_done
#  define tls_construct_server_done OPENSSL_MANGLER(tls_construct_server_done)
# endif
#else
# ifndef _tls_construct_server_done
#  define _tls_construct_server_done OPENSSL_MANGLER_ASM(tls_construct_server_done)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_server_hello
#  define tls_construct_server_hello OPENSSL_MANGLER(tls_construct_server_hello)
# endif
#else
# ifndef _tls_construct_server_hello
#  define _tls_construct_server_hello OPENSSL_MANGLER_ASM(tls_construct_server_hello)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_server_key_exchange
#  define tls_construct_server_key_exchange OPENSSL_MANGLER(tls_construct_server_key_exchange)
# endif
#else
# ifndef _tls_construct_server_key_exchange
#  define _tls_construct_server_key_exchange OPENSSL_MANGLER_ASM(tls_construct_server_key_exchange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_alpn
#  define tls_construct_stoc_alpn OPENSSL_MANGLER(tls_construct_stoc_alpn)
# endif
#else
# ifndef _tls_construct_stoc_alpn
#  define _tls_construct_stoc_alpn OPENSSL_MANGLER_ASM(tls_construct_stoc_alpn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_cookie
#  define tls_construct_stoc_cookie OPENSSL_MANGLER(tls_construct_stoc_cookie)
# endif
#else
# ifndef _tls_construct_stoc_cookie
#  define _tls_construct_stoc_cookie OPENSSL_MANGLER_ASM(tls_construct_stoc_cookie)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_cryptopro_bug
#  define tls_construct_stoc_cryptopro_bug OPENSSL_MANGLER(tls_construct_stoc_cryptopro_bug)
# endif
#else
# ifndef _tls_construct_stoc_cryptopro_bug
#  define _tls_construct_stoc_cryptopro_bug OPENSSL_MANGLER_ASM(tls_construct_stoc_cryptopro_bug)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_early_data
#  define tls_construct_stoc_early_data OPENSSL_MANGLER(tls_construct_stoc_early_data)
# endif
#else
# ifndef _tls_construct_stoc_early_data
#  define _tls_construct_stoc_early_data OPENSSL_MANGLER_ASM(tls_construct_stoc_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_ec_pt_formats
#  define tls_construct_stoc_ec_pt_formats OPENSSL_MANGLER(tls_construct_stoc_ec_pt_formats)
# endif
#else
# ifndef _tls_construct_stoc_ec_pt_formats
#  define _tls_construct_stoc_ec_pt_formats OPENSSL_MANGLER_ASM(tls_construct_stoc_ec_pt_formats)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_ems
#  define tls_construct_stoc_ems OPENSSL_MANGLER(tls_construct_stoc_ems)
# endif
#else
# ifndef _tls_construct_stoc_ems
#  define _tls_construct_stoc_ems OPENSSL_MANGLER_ASM(tls_construct_stoc_ems)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_etm
#  define tls_construct_stoc_etm OPENSSL_MANGLER(tls_construct_stoc_etm)
# endif
#else
# ifndef _tls_construct_stoc_etm
#  define _tls_construct_stoc_etm OPENSSL_MANGLER_ASM(tls_construct_stoc_etm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_key_share
#  define tls_construct_stoc_key_share OPENSSL_MANGLER(tls_construct_stoc_key_share)
# endif
#else
# ifndef _tls_construct_stoc_key_share
#  define _tls_construct_stoc_key_share OPENSSL_MANGLER_ASM(tls_construct_stoc_key_share)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_maxfragmentlen
#  define tls_construct_stoc_maxfragmentlen OPENSSL_MANGLER(tls_construct_stoc_maxfragmentlen)
# endif
#else
# ifndef _tls_construct_stoc_maxfragmentlen
#  define _tls_construct_stoc_maxfragmentlen OPENSSL_MANGLER_ASM(tls_construct_stoc_maxfragmentlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_next_proto_neg
#  define tls_construct_stoc_next_proto_neg OPENSSL_MANGLER(tls_construct_stoc_next_proto_neg)
# endif
#else
# ifndef _tls_construct_stoc_next_proto_neg
#  define _tls_construct_stoc_next_proto_neg OPENSSL_MANGLER_ASM(tls_construct_stoc_next_proto_neg)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_psk
#  define tls_construct_stoc_psk OPENSSL_MANGLER(tls_construct_stoc_psk)
# endif
#else
# ifndef _tls_construct_stoc_psk
#  define _tls_construct_stoc_psk OPENSSL_MANGLER_ASM(tls_construct_stoc_psk)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_renegotiate
#  define tls_construct_stoc_renegotiate OPENSSL_MANGLER(tls_construct_stoc_renegotiate)
# endif
#else
# ifndef _tls_construct_stoc_renegotiate
#  define _tls_construct_stoc_renegotiate OPENSSL_MANGLER_ASM(tls_construct_stoc_renegotiate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_server_name
#  define tls_construct_stoc_server_name OPENSSL_MANGLER(tls_construct_stoc_server_name)
# endif
#else
# ifndef _tls_construct_stoc_server_name
#  define _tls_construct_stoc_server_name OPENSSL_MANGLER_ASM(tls_construct_stoc_server_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_session_ticket
#  define tls_construct_stoc_session_ticket OPENSSL_MANGLER(tls_construct_stoc_session_ticket)
# endif
#else
# ifndef _tls_construct_stoc_session_ticket
#  define _tls_construct_stoc_session_ticket OPENSSL_MANGLER_ASM(tls_construct_stoc_session_ticket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_status_request
#  define tls_construct_stoc_status_request OPENSSL_MANGLER(tls_construct_stoc_status_request)
# endif
#else
# ifndef _tls_construct_stoc_status_request
#  define _tls_construct_stoc_status_request OPENSSL_MANGLER_ASM(tls_construct_stoc_status_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_supported_groups
#  define tls_construct_stoc_supported_groups OPENSSL_MANGLER(tls_construct_stoc_supported_groups)
# endif
#else
# ifndef _tls_construct_stoc_supported_groups
#  define _tls_construct_stoc_supported_groups OPENSSL_MANGLER_ASM(tls_construct_stoc_supported_groups)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_supported_versions
#  define tls_construct_stoc_supported_versions OPENSSL_MANGLER(tls_construct_stoc_supported_versions)
# endif
#else
# ifndef _tls_construct_stoc_supported_versions
#  define _tls_construct_stoc_supported_versions OPENSSL_MANGLER_ASM(tls_construct_stoc_supported_versions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_construct_stoc_use_srtp
#  define tls_construct_stoc_use_srtp OPENSSL_MANGLER(tls_construct_stoc_use_srtp)
# endif
#else
# ifndef _tls_construct_stoc_use_srtp
#  define _tls_construct_stoc_use_srtp OPENSSL_MANGLER_ASM(tls_construct_stoc_use_srtp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_decrypt_ticket
#  define tls_decrypt_ticket OPENSSL_MANGLER(tls_decrypt_ticket)
# endif
#else
# ifndef _tls_decrypt_ticket
#  define _tls_decrypt_ticket OPENSSL_MANGLER_ASM(tls_decrypt_ticket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_engine_finish
#  define tls_engine_finish OPENSSL_MANGLER(tls_engine_finish)
# endif
#else
# ifndef _tls_engine_finish
#  define _tls_engine_finish OPENSSL_MANGLER_ASM(tls_engine_finish)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_engine_load_ssl_client_cert
#  define tls_engine_load_ssl_client_cert OPENSSL_MANGLER(tls_engine_load_ssl_client_cert)
# endif
#else
# ifndef _tls_engine_load_ssl_client_cert
#  define _tls_engine_load_ssl_client_cert OPENSSL_MANGLER_ASM(tls_engine_load_ssl_client_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_finish_handshake
#  define tls_finish_handshake OPENSSL_MANGLER(tls_finish_handshake)
# endif
#else
# ifndef _tls_finish_handshake
#  define _tls_finish_handshake OPENSSL_MANGLER_ASM(tls_finish_handshake)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_get_cipher_from_engine
#  define tls_get_cipher_from_engine OPENSSL_MANGLER(tls_get_cipher_from_engine)
# endif
#else
# ifndef _tls_get_cipher_from_engine
#  define _tls_get_cipher_from_engine OPENSSL_MANGLER_ASM(tls_get_cipher_from_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_get_digest_from_engine
#  define tls_get_digest_from_engine OPENSSL_MANGLER(tls_get_digest_from_engine)
# endif
#else
# ifndef _tls_get_digest_from_engine
#  define _tls_get_digest_from_engine OPENSSL_MANGLER_ASM(tls_get_digest_from_engine)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_get_message_body
#  define tls_get_message_body OPENSSL_MANGLER(tls_get_message_body)
# endif
#else
# ifndef _tls_get_message_body
#  define _tls_get_message_body OPENSSL_MANGLER_ASM(tls_get_message_body)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_get_message_header
#  define tls_get_message_header OPENSSL_MANGLER(tls_get_message_header)
# endif
#else
# ifndef _tls_get_message_header
#  define _tls_get_message_header OPENSSL_MANGLER_ASM(tls_get_message_header)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_get_ticket_from_client
#  define tls_get_ticket_from_client OPENSSL_MANGLER(tls_get_ticket_from_client)
# endif
#else
# ifndef _tls_get_ticket_from_client
#  define _tls_get_ticket_from_client OPENSSL_MANGLER_ASM(tls_get_ticket_from_client)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_group_allowed
#  define tls_group_allowed OPENSSL_MANGLER(tls_group_allowed)
# endif
#else
# ifndef _tls_group_allowed
#  define _tls_group_allowed OPENSSL_MANGLER_ASM(tls_group_allowed)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_handle_alpn
#  define tls_handle_alpn OPENSSL_MANGLER(tls_handle_alpn)
# endif
#else
# ifndef _tls_handle_alpn
#  define _tls_handle_alpn OPENSSL_MANGLER_ASM(tls_handle_alpn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_all_extensions
#  define tls_parse_all_extensions OPENSSL_MANGLER(tls_parse_all_extensions)
# endif
#else
# ifndef _tls_parse_all_extensions
#  define _tls_parse_all_extensions OPENSSL_MANGLER_ASM(tls_parse_all_extensions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_alpn
#  define tls_parse_ctos_alpn OPENSSL_MANGLER(tls_parse_ctos_alpn)
# endif
#else
# ifndef _tls_parse_ctos_alpn
#  define _tls_parse_ctos_alpn OPENSSL_MANGLER_ASM(tls_parse_ctos_alpn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_cookie
#  define tls_parse_ctos_cookie OPENSSL_MANGLER(tls_parse_ctos_cookie)
# endif
#else
# ifndef _tls_parse_ctos_cookie
#  define _tls_parse_ctos_cookie OPENSSL_MANGLER_ASM(tls_parse_ctos_cookie)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_early_data
#  define tls_parse_ctos_early_data OPENSSL_MANGLER(tls_parse_ctos_early_data)
# endif
#else
# ifndef _tls_parse_ctos_early_data
#  define _tls_parse_ctos_early_data OPENSSL_MANGLER_ASM(tls_parse_ctos_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_ec_pt_formats
#  define tls_parse_ctos_ec_pt_formats OPENSSL_MANGLER(tls_parse_ctos_ec_pt_formats)
# endif
#else
# ifndef _tls_parse_ctos_ec_pt_formats
#  define _tls_parse_ctos_ec_pt_formats OPENSSL_MANGLER_ASM(tls_parse_ctos_ec_pt_formats)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_ems
#  define tls_parse_ctos_ems OPENSSL_MANGLER(tls_parse_ctos_ems)
# endif
#else
# ifndef _tls_parse_ctos_ems
#  define _tls_parse_ctos_ems OPENSSL_MANGLER_ASM(tls_parse_ctos_ems)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_etm
#  define tls_parse_ctos_etm OPENSSL_MANGLER(tls_parse_ctos_etm)
# endif
#else
# ifndef _tls_parse_ctos_etm
#  define _tls_parse_ctos_etm OPENSSL_MANGLER_ASM(tls_parse_ctos_etm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_key_share
#  define tls_parse_ctos_key_share OPENSSL_MANGLER(tls_parse_ctos_key_share)
# endif
#else
# ifndef _tls_parse_ctos_key_share
#  define _tls_parse_ctos_key_share OPENSSL_MANGLER_ASM(tls_parse_ctos_key_share)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_maxfragmentlen
#  define tls_parse_ctos_maxfragmentlen OPENSSL_MANGLER(tls_parse_ctos_maxfragmentlen)
# endif
#else
# ifndef _tls_parse_ctos_maxfragmentlen
#  define _tls_parse_ctos_maxfragmentlen OPENSSL_MANGLER_ASM(tls_parse_ctos_maxfragmentlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_npn
#  define tls_parse_ctos_npn OPENSSL_MANGLER(tls_parse_ctos_npn)
# endif
#else
# ifndef _tls_parse_ctos_npn
#  define _tls_parse_ctos_npn OPENSSL_MANGLER_ASM(tls_parse_ctos_npn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_post_handshake_auth
#  define tls_parse_ctos_post_handshake_auth OPENSSL_MANGLER(tls_parse_ctos_post_handshake_auth)
# endif
#else
# ifndef _tls_parse_ctos_post_handshake_auth
#  define _tls_parse_ctos_post_handshake_auth OPENSSL_MANGLER_ASM(tls_parse_ctos_post_handshake_auth)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_psk
#  define tls_parse_ctos_psk OPENSSL_MANGLER(tls_parse_ctos_psk)
# endif
#else
# ifndef _tls_parse_ctos_psk
#  define _tls_parse_ctos_psk OPENSSL_MANGLER_ASM(tls_parse_ctos_psk)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_psk_kex_modes
#  define tls_parse_ctos_psk_kex_modes OPENSSL_MANGLER(tls_parse_ctos_psk_kex_modes)
# endif
#else
# ifndef _tls_parse_ctos_psk_kex_modes
#  define _tls_parse_ctos_psk_kex_modes OPENSSL_MANGLER_ASM(tls_parse_ctos_psk_kex_modes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_renegotiate
#  define tls_parse_ctos_renegotiate OPENSSL_MANGLER(tls_parse_ctos_renegotiate)
# endif
#else
# ifndef _tls_parse_ctos_renegotiate
#  define _tls_parse_ctos_renegotiate OPENSSL_MANGLER_ASM(tls_parse_ctos_renegotiate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_server_name
#  define tls_parse_ctos_server_name OPENSSL_MANGLER(tls_parse_ctos_server_name)
# endif
#else
# ifndef _tls_parse_ctos_server_name
#  define _tls_parse_ctos_server_name OPENSSL_MANGLER_ASM(tls_parse_ctos_server_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_session_ticket
#  define tls_parse_ctos_session_ticket OPENSSL_MANGLER(tls_parse_ctos_session_ticket)
# endif
#else
# ifndef _tls_parse_ctos_session_ticket
#  define _tls_parse_ctos_session_ticket OPENSSL_MANGLER_ASM(tls_parse_ctos_session_ticket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_sig_algs
#  define tls_parse_ctos_sig_algs OPENSSL_MANGLER(tls_parse_ctos_sig_algs)
# endif
#else
# ifndef _tls_parse_ctos_sig_algs
#  define _tls_parse_ctos_sig_algs OPENSSL_MANGLER_ASM(tls_parse_ctos_sig_algs)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_sig_algs_cert
#  define tls_parse_ctos_sig_algs_cert OPENSSL_MANGLER(tls_parse_ctos_sig_algs_cert)
# endif
#else
# ifndef _tls_parse_ctos_sig_algs_cert
#  define _tls_parse_ctos_sig_algs_cert OPENSSL_MANGLER_ASM(tls_parse_ctos_sig_algs_cert)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_srp
#  define tls_parse_ctos_srp OPENSSL_MANGLER(tls_parse_ctos_srp)
# endif
#else
# ifndef _tls_parse_ctos_srp
#  define _tls_parse_ctos_srp OPENSSL_MANGLER_ASM(tls_parse_ctos_srp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_status_request
#  define tls_parse_ctos_status_request OPENSSL_MANGLER(tls_parse_ctos_status_request)
# endif
#else
# ifndef _tls_parse_ctos_status_request
#  define _tls_parse_ctos_status_request OPENSSL_MANGLER_ASM(tls_parse_ctos_status_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_supported_groups
#  define tls_parse_ctos_supported_groups OPENSSL_MANGLER(tls_parse_ctos_supported_groups)
# endif
#else
# ifndef _tls_parse_ctos_supported_groups
#  define _tls_parse_ctos_supported_groups OPENSSL_MANGLER_ASM(tls_parse_ctos_supported_groups)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_ctos_use_srtp
#  define tls_parse_ctos_use_srtp OPENSSL_MANGLER(tls_parse_ctos_use_srtp)
# endif
#else
# ifndef _tls_parse_ctos_use_srtp
#  define _tls_parse_ctos_use_srtp OPENSSL_MANGLER_ASM(tls_parse_ctos_use_srtp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_extension
#  define tls_parse_extension OPENSSL_MANGLER(tls_parse_extension)
# endif
#else
# ifndef _tls_parse_extension
#  define _tls_parse_extension OPENSSL_MANGLER_ASM(tls_parse_extension)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_alpn
#  define tls_parse_stoc_alpn OPENSSL_MANGLER(tls_parse_stoc_alpn)
# endif
#else
# ifndef _tls_parse_stoc_alpn
#  define _tls_parse_stoc_alpn OPENSSL_MANGLER_ASM(tls_parse_stoc_alpn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_cookie
#  define tls_parse_stoc_cookie OPENSSL_MANGLER(tls_parse_stoc_cookie)
# endif
#else
# ifndef _tls_parse_stoc_cookie
#  define _tls_parse_stoc_cookie OPENSSL_MANGLER_ASM(tls_parse_stoc_cookie)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_early_data
#  define tls_parse_stoc_early_data OPENSSL_MANGLER(tls_parse_stoc_early_data)
# endif
#else
# ifndef _tls_parse_stoc_early_data
#  define _tls_parse_stoc_early_data OPENSSL_MANGLER_ASM(tls_parse_stoc_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_ec_pt_formats
#  define tls_parse_stoc_ec_pt_formats OPENSSL_MANGLER(tls_parse_stoc_ec_pt_formats)
# endif
#else
# ifndef _tls_parse_stoc_ec_pt_formats
#  define _tls_parse_stoc_ec_pt_formats OPENSSL_MANGLER_ASM(tls_parse_stoc_ec_pt_formats)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_ems
#  define tls_parse_stoc_ems OPENSSL_MANGLER(tls_parse_stoc_ems)
# endif
#else
# ifndef _tls_parse_stoc_ems
#  define _tls_parse_stoc_ems OPENSSL_MANGLER_ASM(tls_parse_stoc_ems)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_etm
#  define tls_parse_stoc_etm OPENSSL_MANGLER(tls_parse_stoc_etm)
# endif
#else
# ifndef _tls_parse_stoc_etm
#  define _tls_parse_stoc_etm OPENSSL_MANGLER_ASM(tls_parse_stoc_etm)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_key_share
#  define tls_parse_stoc_key_share OPENSSL_MANGLER(tls_parse_stoc_key_share)
# endif
#else
# ifndef _tls_parse_stoc_key_share
#  define _tls_parse_stoc_key_share OPENSSL_MANGLER_ASM(tls_parse_stoc_key_share)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_maxfragmentlen
#  define tls_parse_stoc_maxfragmentlen OPENSSL_MANGLER(tls_parse_stoc_maxfragmentlen)
# endif
#else
# ifndef _tls_parse_stoc_maxfragmentlen
#  define _tls_parse_stoc_maxfragmentlen OPENSSL_MANGLER_ASM(tls_parse_stoc_maxfragmentlen)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_npn
#  define tls_parse_stoc_npn OPENSSL_MANGLER(tls_parse_stoc_npn)
# endif
#else
# ifndef _tls_parse_stoc_npn
#  define _tls_parse_stoc_npn OPENSSL_MANGLER_ASM(tls_parse_stoc_npn)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_psk
#  define tls_parse_stoc_psk OPENSSL_MANGLER(tls_parse_stoc_psk)
# endif
#else
# ifndef _tls_parse_stoc_psk
#  define _tls_parse_stoc_psk OPENSSL_MANGLER_ASM(tls_parse_stoc_psk)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_renegotiate
#  define tls_parse_stoc_renegotiate OPENSSL_MANGLER(tls_parse_stoc_renegotiate)
# endif
#else
# ifndef _tls_parse_stoc_renegotiate
#  define _tls_parse_stoc_renegotiate OPENSSL_MANGLER_ASM(tls_parse_stoc_renegotiate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_sct
#  define tls_parse_stoc_sct OPENSSL_MANGLER(tls_parse_stoc_sct)
# endif
#else
# ifndef _tls_parse_stoc_sct
#  define _tls_parse_stoc_sct OPENSSL_MANGLER_ASM(tls_parse_stoc_sct)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_server_name
#  define tls_parse_stoc_server_name OPENSSL_MANGLER(tls_parse_stoc_server_name)
# endif
#else
# ifndef _tls_parse_stoc_server_name
#  define _tls_parse_stoc_server_name OPENSSL_MANGLER_ASM(tls_parse_stoc_server_name)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_session_ticket
#  define tls_parse_stoc_session_ticket OPENSSL_MANGLER(tls_parse_stoc_session_ticket)
# endif
#else
# ifndef _tls_parse_stoc_session_ticket
#  define _tls_parse_stoc_session_ticket OPENSSL_MANGLER_ASM(tls_parse_stoc_session_ticket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_status_request
#  define tls_parse_stoc_status_request OPENSSL_MANGLER(tls_parse_stoc_status_request)
# endif
#else
# ifndef _tls_parse_stoc_status_request
#  define _tls_parse_stoc_status_request OPENSSL_MANGLER_ASM(tls_parse_stoc_status_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_supported_versions
#  define tls_parse_stoc_supported_versions OPENSSL_MANGLER(tls_parse_stoc_supported_versions)
# endif
#else
# ifndef _tls_parse_stoc_supported_versions
#  define _tls_parse_stoc_supported_versions OPENSSL_MANGLER_ASM(tls_parse_stoc_supported_versions)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_parse_stoc_use_srtp
#  define tls_parse_stoc_use_srtp OPENSSL_MANGLER(tls_parse_stoc_use_srtp)
# endif
#else
# ifndef _tls_parse_stoc_use_srtp
#  define _tls_parse_stoc_use_srtp OPENSSL_MANGLER_ASM(tls_parse_stoc_use_srtp)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_post_process_client_hello
#  define tls_post_process_client_hello OPENSSL_MANGLER(tls_post_process_client_hello)
# endif
#else
# ifndef _tls_post_process_client_hello
#  define _tls_post_process_client_hello OPENSSL_MANGLER_ASM(tls_post_process_client_hello)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_post_process_client_key_exchange
#  define tls_post_process_client_key_exchange OPENSSL_MANGLER(tls_post_process_client_key_exchange)
# endif
#else
# ifndef _tls_post_process_client_key_exchange
#  define _tls_post_process_client_key_exchange OPENSSL_MANGLER_ASM(tls_post_process_client_key_exchange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_post_process_server_certificate
#  define tls_post_process_server_certificate OPENSSL_MANGLER(tls_post_process_server_certificate)
# endif
#else
# ifndef _tls_post_process_server_certificate
#  define _tls_post_process_server_certificate OPENSSL_MANGLER_ASM(tls_post_process_server_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_prepare_client_certificate
#  define tls_prepare_client_certificate OPENSSL_MANGLER(tls_prepare_client_certificate)
# endif
#else
# ifndef _tls_prepare_client_certificate
#  define _tls_prepare_client_certificate OPENSSL_MANGLER_ASM(tls_prepare_client_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_cert_status
#  define tls_process_cert_status OPENSSL_MANGLER(tls_process_cert_status)
# endif
#else
# ifndef _tls_process_cert_status
#  define _tls_process_cert_status OPENSSL_MANGLER_ASM(tls_process_cert_status)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_cert_status_body
#  define tls_process_cert_status_body OPENSSL_MANGLER(tls_process_cert_status_body)
# endif
#else
# ifndef _tls_process_cert_status_body
#  define _tls_process_cert_status_body OPENSSL_MANGLER_ASM(tls_process_cert_status_body)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_cert_verify
#  define tls_process_cert_verify OPENSSL_MANGLER(tls_process_cert_verify)
# endif
#else
# ifndef _tls_process_cert_verify
#  define _tls_process_cert_verify OPENSSL_MANGLER_ASM(tls_process_cert_verify)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_certificate_request
#  define tls_process_certificate_request OPENSSL_MANGLER(tls_process_certificate_request)
# endif
#else
# ifndef _tls_process_certificate_request
#  define _tls_process_certificate_request OPENSSL_MANGLER_ASM(tls_process_certificate_request)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_change_cipher_spec
#  define tls_process_change_cipher_spec OPENSSL_MANGLER(tls_process_change_cipher_spec)
# endif
#else
# ifndef _tls_process_change_cipher_spec
#  define _tls_process_change_cipher_spec OPENSSL_MANGLER_ASM(tls_process_change_cipher_spec)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_client_certificate
#  define tls_process_client_certificate OPENSSL_MANGLER(tls_process_client_certificate)
# endif
#else
# ifndef _tls_process_client_certificate
#  define _tls_process_client_certificate OPENSSL_MANGLER_ASM(tls_process_client_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_client_hello
#  define tls_process_client_hello OPENSSL_MANGLER(tls_process_client_hello)
# endif
#else
# ifndef _tls_process_client_hello
#  define _tls_process_client_hello OPENSSL_MANGLER_ASM(tls_process_client_hello)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_client_key_exchange
#  define tls_process_client_key_exchange OPENSSL_MANGLER(tls_process_client_key_exchange)
# endif
#else
# ifndef _tls_process_client_key_exchange
#  define _tls_process_client_key_exchange OPENSSL_MANGLER_ASM(tls_process_client_key_exchange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_end_of_early_data
#  define tls_process_end_of_early_data OPENSSL_MANGLER(tls_process_end_of_early_data)
# endif
#else
# ifndef _tls_process_end_of_early_data
#  define _tls_process_end_of_early_data OPENSSL_MANGLER_ASM(tls_process_end_of_early_data)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_finished
#  define tls_process_finished OPENSSL_MANGLER(tls_process_finished)
# endif
#else
# ifndef _tls_process_finished
#  define _tls_process_finished OPENSSL_MANGLER_ASM(tls_process_finished)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_hello_req
#  define tls_process_hello_req OPENSSL_MANGLER(tls_process_hello_req)
# endif
#else
# ifndef _tls_process_hello_req
#  define _tls_process_hello_req OPENSSL_MANGLER_ASM(tls_process_hello_req)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_initial_server_flight
#  define tls_process_initial_server_flight OPENSSL_MANGLER(tls_process_initial_server_flight)
# endif
#else
# ifndef _tls_process_initial_server_flight
#  define _tls_process_initial_server_flight OPENSSL_MANGLER_ASM(tls_process_initial_server_flight)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_key_exchange
#  define tls_process_key_exchange OPENSSL_MANGLER(tls_process_key_exchange)
# endif
#else
# ifndef _tls_process_key_exchange
#  define _tls_process_key_exchange OPENSSL_MANGLER_ASM(tls_process_key_exchange)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_key_update
#  define tls_process_key_update OPENSSL_MANGLER(tls_process_key_update)
# endif
#else
# ifndef _tls_process_key_update
#  define _tls_process_key_update OPENSSL_MANGLER_ASM(tls_process_key_update)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_new_session_ticket
#  define tls_process_new_session_ticket OPENSSL_MANGLER(tls_process_new_session_ticket)
# endif
#else
# ifndef _tls_process_new_session_ticket
#  define _tls_process_new_session_ticket OPENSSL_MANGLER_ASM(tls_process_new_session_ticket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_next_proto
#  define tls_process_next_proto OPENSSL_MANGLER(tls_process_next_proto)
# endif
#else
# ifndef _tls_process_next_proto
#  define _tls_process_next_proto OPENSSL_MANGLER_ASM(tls_process_next_proto)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_server_certificate
#  define tls_process_server_certificate OPENSSL_MANGLER(tls_process_server_certificate)
# endif
#else
# ifndef _tls_process_server_certificate
#  define _tls_process_server_certificate OPENSSL_MANGLER_ASM(tls_process_server_certificate)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_server_done
#  define tls_process_server_done OPENSSL_MANGLER(tls_process_server_done)
# endif
#else
# ifndef _tls_process_server_done
#  define _tls_process_server_done OPENSSL_MANGLER_ASM(tls_process_server_done)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_process_server_hello
#  define tls_process_server_hello OPENSSL_MANGLER(tls_process_server_hello)
# endif
#else
# ifndef _tls_process_server_hello
#  define _tls_process_server_hello OPENSSL_MANGLER_ASM(tls_process_server_hello)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_provider_set_tls_params
#  define tls_provider_set_tls_params OPENSSL_MANGLER(tls_provider_set_tls_params)
# endif
#else
# ifndef _tls_provider_set_tls_params
#  define _tls_provider_set_tls_params OPENSSL_MANGLER_ASM(tls_provider_set_tls_params)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_psk_do_binder
#  define tls_psk_do_binder OPENSSL_MANGLER(tls_psk_do_binder)
# endif
#else
# ifndef _tls_psk_do_binder
#  define _tls_psk_do_binder OPENSSL_MANGLER_ASM(tls_psk_do_binder)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_setup_handshake
#  define tls_setup_handshake OPENSSL_MANGLER(tls_setup_handshake)
# endif
#else
# ifndef _tls_setup_handshake
#  define _tls_setup_handshake OPENSSL_MANGLER_ASM(tls_setup_handshake)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_use_ticket
#  define tls_use_ticket OPENSSL_MANGLER(tls_use_ticket)
# endif
#else
# ifndef _tls_use_ticket
#  define _tls_use_ticket OPENSSL_MANGLER_ASM(tls_use_ticket)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_valid_group
#  define tls_valid_group OPENSSL_MANGLER(tls_valid_group)
# endif
#else
# ifndef _tls_valid_group
#  define _tls_valid_group OPENSSL_MANGLER_ASM(tls_valid_group)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tls_validate_all_contexts
#  define tls_validate_all_contexts OPENSSL_MANGLER(tls_validate_all_contexts)
# endif
#else
# ifndef _tls_validate_all_contexts
#  define _tls_validate_all_contexts OPENSSL_MANGLER_ASM(tls_validate_all_contexts)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_1_client_method
#  define tlsv1_1_client_method OPENSSL_MANGLER(tlsv1_1_client_method)
# endif
#else
# ifndef _tlsv1_1_client_method
#  define _tlsv1_1_client_method OPENSSL_MANGLER_ASM(tlsv1_1_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_1_method
#  define tlsv1_1_method OPENSSL_MANGLER(tlsv1_1_method)
# endif
#else
# ifndef _tlsv1_1_method
#  define _tlsv1_1_method OPENSSL_MANGLER_ASM(tlsv1_1_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_1_server_method
#  define tlsv1_1_server_method OPENSSL_MANGLER(tlsv1_1_server_method)
# endif
#else
# ifndef _tlsv1_1_server_method
#  define _tlsv1_1_server_method OPENSSL_MANGLER_ASM(tlsv1_1_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_2_client_method
#  define tlsv1_2_client_method OPENSSL_MANGLER(tlsv1_2_client_method)
# endif
#else
# ifndef _tlsv1_2_client_method
#  define _tlsv1_2_client_method OPENSSL_MANGLER_ASM(tlsv1_2_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_2_method
#  define tlsv1_2_method OPENSSL_MANGLER(tlsv1_2_method)
# endif
#else
# ifndef _tlsv1_2_method
#  define _tlsv1_2_method OPENSSL_MANGLER_ASM(tlsv1_2_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_2_server_method
#  define tlsv1_2_server_method OPENSSL_MANGLER(tlsv1_2_server_method)
# endif
#else
# ifndef _tlsv1_2_server_method
#  define _tlsv1_2_server_method OPENSSL_MANGLER_ASM(tlsv1_2_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_3_client_method
#  define tlsv1_3_client_method OPENSSL_MANGLER(tlsv1_3_client_method)
# endif
#else
# ifndef _tlsv1_3_client_method
#  define _tlsv1_3_client_method OPENSSL_MANGLER_ASM(tlsv1_3_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_3_method
#  define tlsv1_3_method OPENSSL_MANGLER(tlsv1_3_method)
# endif
#else
# ifndef _tlsv1_3_method
#  define _tlsv1_3_method OPENSSL_MANGLER_ASM(tlsv1_3_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_3_server_method
#  define tlsv1_3_server_method OPENSSL_MANGLER(tlsv1_3_server_method)
# endif
#else
# ifndef _tlsv1_3_server_method
#  define _tlsv1_3_server_method OPENSSL_MANGLER_ASM(tlsv1_3_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_client_method
#  define tlsv1_client_method OPENSSL_MANGLER(tlsv1_client_method)
# endif
#else
# ifndef _tlsv1_client_method
#  define _tlsv1_client_method OPENSSL_MANGLER_ASM(tlsv1_client_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_method
#  define tlsv1_method OPENSSL_MANGLER(tlsv1_method)
# endif
#else
# ifndef _tlsv1_method
#  define _tlsv1_method OPENSSL_MANGLER_ASM(tlsv1_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef tlsv1_server_method
#  define tlsv1_server_method OPENSSL_MANGLER(tlsv1_server_method)
# endif
#else
# ifndef _tlsv1_server_method
#  define _tlsv1_server_method OPENSSL_MANGLER_ASM(tlsv1_server_method)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef v2i_ASN1_BIT_STRING
#  define v2i_ASN1_BIT_STRING OPENSSL_MANGLER(v2i_ASN1_BIT_STRING)
# endif
#else
# ifndef _v2i_ASN1_BIT_STRING
#  define _v2i_ASN1_BIT_STRING OPENSSL_MANGLER_ASM(v2i_ASN1_BIT_STRING)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef v2i_GENERAL_NAME
#  define v2i_GENERAL_NAME OPENSSL_MANGLER(v2i_GENERAL_NAME)
# endif
#else
# ifndef _v2i_GENERAL_NAME
#  define _v2i_GENERAL_NAME OPENSSL_MANGLER_ASM(v2i_GENERAL_NAME)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef v2i_GENERAL_NAMES
#  define v2i_GENERAL_NAMES OPENSSL_MANGLER(v2i_GENERAL_NAMES)
# endif
#else
# ifndef _v2i_GENERAL_NAMES
#  define _v2i_GENERAL_NAMES OPENSSL_MANGLER_ASM(v2i_GENERAL_NAMES)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef v2i_GENERAL_NAME_ex
#  define v2i_GENERAL_NAME_ex OPENSSL_MANGLER(v2i_GENERAL_NAME_ex)
# endif
#else
# ifndef _v2i_GENERAL_NAME_ex
#  define _v2i_GENERAL_NAME_ex OPENSSL_MANGLER_ASM(v2i_GENERAL_NAME_ex)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef vpaes_cbc_encrypt
#  define vpaes_cbc_encrypt OPENSSL_MANGLER(vpaes_cbc_encrypt)
# endif
#else
# ifndef _vpaes_cbc_encrypt
#  define _vpaes_cbc_encrypt OPENSSL_MANGLER_ASM(vpaes_cbc_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef vpaes_decrypt
#  define vpaes_decrypt OPENSSL_MANGLER(vpaes_decrypt)
# endif
#else
# ifndef _vpaes_decrypt
#  define _vpaes_decrypt OPENSSL_MANGLER_ASM(vpaes_decrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef vpaes_encrypt
#  define vpaes_encrypt OPENSSL_MANGLER(vpaes_encrypt)
# endif
#else
# ifndef _vpaes_encrypt
#  define _vpaes_encrypt OPENSSL_MANGLER_ASM(vpaes_encrypt)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef vpaes_set_decrypt_key
#  define vpaes_set_decrypt_key OPENSSL_MANGLER(vpaes_set_decrypt_key)
# endif
#else
# ifndef _vpaes_set_decrypt_key
#  define _vpaes_set_decrypt_key OPENSSL_MANGLER_ASM(vpaes_set_decrypt_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef vpaes_set_encrypt_key
#  define vpaes_set_encrypt_key OPENSSL_MANGLER(vpaes_set_encrypt_key)
# endif
#else
# ifndef _vpaes_set_encrypt_key
#  define _vpaes_set_encrypt_key OPENSSL_MANGLER_ASM(vpaes_set_encrypt_key)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef x25519_fe51_mul
#  define x25519_fe51_mul OPENSSL_MANGLER(x25519_fe51_mul)
# endif
#else
# ifndef _x25519_fe51_mul
#  define _x25519_fe51_mul OPENSSL_MANGLER_ASM(x25519_fe51_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef x25519_fe51_mul121666
#  define x25519_fe51_mul121666 OPENSSL_MANGLER(x25519_fe51_mul121666)
# endif
#else
# ifndef _x25519_fe51_mul121666
#  define _x25519_fe51_mul121666 OPENSSL_MANGLER_ASM(x25519_fe51_mul121666)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef x25519_fe51_sqr
#  define x25519_fe51_sqr OPENSSL_MANGLER(x25519_fe51_sqr)
# endif
#else
# ifndef _x25519_fe51_sqr
#  define _x25519_fe51_sqr OPENSSL_MANGLER_ASM(x25519_fe51_sqr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef x25519_fe64_add
#  define x25519_fe64_add OPENSSL_MANGLER(x25519_fe64_add)
# endif
#else
# ifndef _x25519_fe64_add
#  define _x25519_fe64_add OPENSSL_MANGLER_ASM(x25519_fe64_add)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef x25519_fe64_eligible
#  define x25519_fe64_eligible OPENSSL_MANGLER(x25519_fe64_eligible)
# endif
#else
# ifndef _x25519_fe64_eligible
#  define _x25519_fe64_eligible OPENSSL_MANGLER_ASM(x25519_fe64_eligible)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef x25519_fe64_mul
#  define x25519_fe64_mul OPENSSL_MANGLER(x25519_fe64_mul)
# endif
#else
# ifndef _x25519_fe64_mul
#  define _x25519_fe64_mul OPENSSL_MANGLER_ASM(x25519_fe64_mul)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef x25519_fe64_mul121666
#  define x25519_fe64_mul121666 OPENSSL_MANGLER(x25519_fe64_mul121666)
# endif
#else
# ifndef _x25519_fe64_mul121666
#  define _x25519_fe64_mul121666 OPENSSL_MANGLER_ASM(x25519_fe64_mul121666)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef x25519_fe64_sqr
#  define x25519_fe64_sqr OPENSSL_MANGLER(x25519_fe64_sqr)
# endif
#else
# ifndef _x25519_fe64_sqr
#  define _x25519_fe64_sqr OPENSSL_MANGLER_ASM(x25519_fe64_sqr)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef x25519_fe64_sub
#  define x25519_fe64_sub OPENSSL_MANGLER(x25519_fe64_sub)
# endif
#else
# ifndef _x25519_fe64_sub
#  define _x25519_fe64_sub OPENSSL_MANGLER_ASM(x25519_fe64_sub)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef x25519_fe64_tobytes
#  define x25519_fe64_tobytes OPENSSL_MANGLER(x25519_fe64_tobytes)
# endif
#else
# ifndef _x25519_fe64_tobytes
#  define _x25519_fe64_tobytes OPENSSL_MANGLER_ASM(x25519_fe64_tobytes)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef x509v3_add_len_value_uchar
#  define x509v3_add_len_value_uchar OPENSSL_MANGLER(x509v3_add_len_value_uchar)
# endif
#else
# ifndef _x509v3_add_len_value_uchar
#  define _x509v3_add_len_value_uchar OPENSSL_MANGLER_ASM(x509v3_add_len_value_uchar)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef xor128_decrypt_n_pad
#  define xor128_decrypt_n_pad OPENSSL_MANGLER(xor128_decrypt_n_pad)
# endif
#else
# ifndef _xor128_decrypt_n_pad
#  define _xor128_decrypt_n_pad OPENSSL_MANGLER_ASM(xor128_decrypt_n_pad)
# endif
#endif
#ifndef OPENSSL_MANGLE_ASM
# ifndef xor128_encrypt_n_pad
#  define xor128_encrypt_n_pad OPENSSL_MANGLER(xor128_encrypt_n_pad)
# endif
#else
# ifndef _xor128_encrypt_n_pad
#  define _xor128_encrypt_n_pad OPENSSL_MANGLER_ASM(xor128_encrypt_n_pad)
# endif
#endif
#endif

