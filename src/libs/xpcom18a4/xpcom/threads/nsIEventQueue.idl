/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   David Hyatt <hyatt@netscape.com>
 *   Suresh Duddi <dp@netscape.com>
 *   Doug Turner <dougt@netscape.com>
 *   Judson Valeski <valeski@netscape.com>
 *   Dan Matejka <danm@netscape.com>
 *   Ray Whitmer <rayw@netscape.com>
 *   Dan Mosedale <dmose@mozilla.org>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsIEventTarget.idl"

%{C++
#include <iprt/thread.h>

// {13D86C61-00A9-11d3-9F2A-00400553EEF0}
#define NS_EVENTQUEUE_CID \
{ 0x13d86c61, 0xa9, 0x11d3, { 0x9f, 0x2a, 0x0, 0x40, 0x5, 0x53, 0xee, 0xf0 } }

#define NS_EVENTQUEUE_CONTRACTID "@mozilla.org/event-queue;1"
#define NS_EVENTQUEUE_CLASSNAME "Event Queue"

%}

// some forward decls
//
[ptr] native PLEventQueuePtr(PLEventQueue);
[ptr] native RTTHREAD(RTTHREADINT);
native PRStatus(PRStatus);
[ref] native PRBoolRef(PRBool);
native PLHandleEventProc(PLHandleEventProc);
native PLDestroyEventProc(PLDestroyEventProc);

[scriptable, uuid(176AFB41-00A4-11d3-9F2A-00400553EEF0)]
interface nsIEventQueue : nsIEventTarget
{
    [noscript] void initEvent(in PLEventPtr aEvent, 
                              in voidPtr owner, 
                              in PLHandleEventProc handler, 
                              in PLDestroyEventProc destructor);
    
    [noscript] void postSynchronousEvent(in PLEventPtr aEvent, 
                                         out voidPtr aResult);
	
    boolean pendingEvents();
    void processPendingEvents();
    void eventLoop();
    
    [noscript] void eventAvailable(in PRBoolRef aResult);
    [noscript] PLEventPtr getEvent();
    [noscript] void handleEvent(in PLEventPtr aEvent);
    [noscript] PLEventPtr waitForEvent();

    [notxpcom] PRInt32 getEventQueueSelectFD();

    void init(in boolean aNative);
    [noscript] void initFromPRThread(in RTTHREAD thread, 
                                     in boolean aNative);
    [noscript] void initFromPLQueue(in PLEventQueuePtr aQueue);

    void enterMonitor();
    void exitMonitor();

    [noscript] void revokeEvents(in voidPtr owner);
    [noscript] PLEventQueuePtr getPLEventQueue();

    boolean isQueueNative();

    // effectively kill the queue. warning: the queue is allowed to delete
    // itself any time after this.
    void stopAcceptingEvents();
};

